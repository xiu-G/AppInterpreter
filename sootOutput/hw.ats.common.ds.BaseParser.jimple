public abstract class hw.ats.common.ds.BaseParser extends java.lang.Object
{
    protected static final java.lang.String TAG;
    final java.net.URL url;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Lhw/ats/common/ds/BaseParser;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <hw.ats.common.ds.BaseParser: java.lang.String TAG> = $r0;

        return;
    }

    protected void <init>(java.lang.String)
    {
        java.lang.Throwable $r3;
        java.net.URL $r2;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;
        hw.ats.common.ds.BaseParser r0;

        r0 := @this: hw.ats.common.ds.BaseParser;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.net.URL;

     label1:
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1);

     label2:
        r0.<hw.ats.common.ds.BaseParser: java.net.URL url> = $r2;

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    protected java.io.InputStream getInputStream()
    {
        java.lang.Throwable $r4;
        java.net.URL $r1;
        java.net.URLConnection $r2;
        java.lang.RuntimeException $r5;
        hw.ats.common.ds.BaseParser r0;
        java.io.InputStream $r3;

        r0 := @this: hw.ats.common.ds.BaseParser;

        $r1 = r0.<hw.ats.common.ds.BaseParser: java.net.URL url>;

     label1:
        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = virtualinvoke $r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void getText(android.sax.Element, java.lang.String, hw.ats.common.model.BaseModel)
    {
        android.sax.Element $r1;
        hw.ats.common.ds.BaseParser$1 $r4;
        java.lang.String $r2;
        hw.ats.common.model.BaseModel r3;
        hw.ats.common.ds.BaseParser r0;

        r0 := @this: hw.ats.common.ds.BaseParser;

        $r1 := @parameter0: android.sax.Element;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: hw.ats.common.model.BaseModel;

        $r1 = virtualinvoke $r1.<android.sax.Element: android.sax.Element getChild(java.lang.String)>($r2);

        $r4 = new hw.ats.common.ds.BaseParser$1;

        specialinvoke $r4.<hw.ats.common.ds.BaseParser$1: void <init>(hw.ats.common.ds.BaseParser,java.lang.String)>(r0, $r2);

        virtualinvoke $r1.<android.sax.Element: void setEndTextElementListener(android.sax.EndTextElementListener)>($r4);

        return;
    }

    public abstract java.util.List parse();
}
