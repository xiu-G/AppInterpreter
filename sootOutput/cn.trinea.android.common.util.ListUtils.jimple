public class cn.trinea.android.common.util.ListUtils extends java.lang.Object
{
    public static final java.lang.String DEFAULT_JOIN_SEPARATOR;

    public void <init>()
    {
        cn.trinea.android.common.util.ListUtils r0;

        r0 := @this: cn.trinea.android.common.util.ListUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean addDistinctEntry(java.util.List, java.lang.Object)
    {
        java.util.List $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.Object;

        if $r0 == null goto label1;

        $z0 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $z0 = interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        return $z0;

     label1:
        return 0;
    }

    public static int addDistinctList(java.util.List, java.util.List)
    {
        java.util.List $r0, $r1;
        java.util.Iterator $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.util.List;

        if $r0 == null goto label1;

        $z0 = staticinvoke <cn.trinea.android.common.util.ListUtils: boolean isEmpty(java.util.List)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i0 = $i1 - $i0;

        return $i0;

     label4:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label3;
    }

    public static boolean addListNotNullValue(java.util.List, java.lang.Object)
    {
        java.util.List $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.Object;

        if $r0 == null goto label1;

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        return $z0;

     label1:
        return 0;
    }

    public static int distinctList(java.util.List)
    {
        java.util.List $r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        $z0 = staticinvoke <cn.trinea.android.common.util.ListUtils: boolean isEmpty(java.util.List)>($r0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i2 = 0;

     label2:
        if $i2 < $i1 goto label3;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i0 = $i0 - $i1;

        return $i0;

     label3:
        $i3 = $i2 + 1;

     label4:
        if $i3 < $i1 goto label5;

        $i2 = $i2 + 1;

        goto label2;

     label5:
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i2);

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i3);

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label6;

        interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>($i3);

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i4 = -1;

        $i3 = $i3 + $i4;

     label6:
        $i3 = $i3 + 1;

        goto label4;
    }

    public static java.lang.Object getLast(java.util.List, java.lang.Object)
    {
        java.util.List $r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.Object;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray()>();

        $r1 = staticinvoke <cn.trinea.android.common.util.ArrayUtils: java.lang.Object getLast(java.lang.Object[],java.lang.Object,boolean)>($r2, $r1, 1);

        return $r1;
    }

    public static java.lang.Object getNext(java.util.List, java.lang.Object)
    {
        java.util.List $r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.Object;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray()>();

        $r1 = staticinvoke <cn.trinea.android.common.util.ArrayUtils: java.lang.Object getNext(java.lang.Object[],java.lang.Object,boolean)>($r2, $r1, 1);

        return $r1;
    }

    public static int getSize(java.util.List)
    {
        int $i0;
        java.util.List $r0;

        $r0 := @parameter0: java.util.List;

        if $r0 != null goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        return $i0;
    }

    public static java.util.List invertList(java.util.List)
    {
        java.util.List $r0;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;
        java.util.ArrayList $r1, $r3;

        $r0 := @parameter0: java.util.List;

        $z0 = staticinvoke <cn.trinea.android.common.util.ListUtils: boolean isEmpty(java.util.List)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r3 = new java.util.ArrayList;

        $r1 = $r3;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label2:
        if $i0 >= 0 goto label3;

        return $r1;

     label3:
        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label2;
    }

    public static boolean isEmpty(java.util.List)
    {
        int $i0;
        java.util.List $r0;

        $r0 := @parameter0: java.util.List;

        if $r0 == null goto label1;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static boolean isEquals(java.util.ArrayList, java.util.ArrayList)
    {
        int $i0, $i1;
        java.lang.Object $r2, $r3;
        java.util.ArrayList $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.ArrayList;

        $r1 := @parameter1: java.util.ArrayList;

        if $r0 != null goto label1;

        if $r1 != null goto label4;

        return 1;

     label1:
        if $r1 == null goto label4;

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != $i1 goto label4;

        $i0 = 0;

     label2:
        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i0 < $i1 goto label3;

        return 1;

     label3:
        $r2 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $z0 = staticinvoke <cn.trinea.android.common.util.ObjectUtils: boolean isEquals(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label4;

        $i0 = $i0 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static java.lang.String join(java.util.List)
    {
        java.util.List $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <cn.trinea.android.common.util.ListUtils: java.lang.String join(java.util.List,java.lang.String)>($r0, ",");

        return $r1;
    }

    public static java.lang.String join(java.util.List, char)
    {
        java.util.List $r0;
        char[] $r2;
        char $c0;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.List;

        $c0 := @parameter1: char;

        $r1 = new java.lang.String;

        $r2 = newarray (char)[1];

        $r2[0] = $c0;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        $r1 = staticinvoke <cn.trinea.android.common.util.ListUtils: java.lang.String join(java.util.List,java.lang.String)>($r0, $r1);

        return $r1;
    }

    public static java.lang.String join(java.util.List, java.lang.String)
    {
        java.util.List $r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r5;
        java.lang.Object $r3;
        java.lang.String $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.ListUtils: boolean isEmpty(java.util.List)>($r0);

        if $z0 == 0 goto label1;

        return "";

     label1:
        if $r2 != null goto label2;

        $r2 = ",";

     label2:
        $r5 = new java.lang.StringBuilder;

        $r1 = $r5;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 < $i1 goto label4;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label4:
        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.String) $r3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i2 = -1;

        $i1 = $i1 + $i2;

        if $i0 == $i1 goto label5;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label5:
        $i0 = $i0 + 1;

        goto label3;
    }

    public static void <clinit>()
    {
        <cn.trinea.android.common.util.ListUtils: java.lang.String DEFAULT_JOIN_SEPARATOR> = ",";

        return;
    }
}
