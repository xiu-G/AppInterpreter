public class c.a.b.a.d.e.v3 extends java.lang.Object
{
    private static volatile c.a.b.a.d.e.v3 b;
    private static volatile c.a.b.a.d.e.v3 c;
    private static final c.a.b.a.d.e.v3 d;
    private final java.util.Map a;

    static void <clinit>()
    {
        c.a.b.a.d.e.v3 $r0;

        staticinvoke <c.a.b.a.d.e.v3: java.lang.Class d()>();

        $r0 = new c.a.b.a.d.e.v3;

        specialinvoke $r0.<c.a.b.a.d.e.v3: void <init>(boolean)>(1);

        <c.a.b.a.d.e.v3: c.a.b.a.d.e.v3 d> = $r0;

        return;
    }

    void <init>()
    {
        java.util.HashMap $r1;
        c.a.b.a.d.e.v3 r0;

        r0 := @this: c.a.b.a.d.e.v3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<c.a.b.a.d.e.v3: java.util.Map a> = $r1;

        return;
    }

    private void <init>(boolean)
    {
        c.a.b.a.d.e.v3 r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: c.a.b.a.d.e.v3;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<c.a.b.a.d.e.v3: java.util.Map a> = $r1;

        return;
    }

    public static c.a.b.a.d.e.v3 a()
    {
        java.lang.Throwable $r1;
        c.a.b.a.d.e.v3 $r0;

        $r0 = <c.a.b.a.d.e.v3: c.a.b.a.d.e.v3 b>;

        if $r0 != null goto label6;

        entermonitor class "Lc/a/b/a/d/e/v3;";

     label1:
        $r0 = <c.a.b.a.d.e.v3: c.a.b.a.d.e.v3 b>;

        if $r0 != null goto label2;

        $r0 = <c.a.b.a.d.e.v3: c.a.b.a.d.e.v3 d>;

        <c.a.b.a.d.e.v3: c.a.b.a.d.e.v3 b> = $r0;

     label2:
        exitmonitor class "Lc/a/b/a/d/e/v3;";

     label3:
        return $r0;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Lc/a/b/a/d/e/v3;";

     label5:
        throw $r1;

     label6:
        return $r0;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static c.a.b.a.d.e.v3 c()
    {
        java.lang.Throwable $r2;
        c.a.b.a.d.e.v3 $r0, $r1;

        $r0 = <c.a.b.a.d.e.v3: c.a.b.a.d.e.v3 c>;

        if $r0 != null goto label6;

        entermonitor class "Lc/a/b/a/d/e/v3;";

     label1:
        $r1 = <c.a.b.a.d.e.v3: c.a.b.a.d.e.v3 c>;

        if $r1 != null goto label2;

        $r0 = staticinvoke <c.a.b.a.d.e.h4: c.a.b.a.d.e.v3 b(java.lang.Class)>(class "Lc/a/b/a/d/e/v3;");

        $r1 = $r0;

        <c.a.b.a.d.e.v3: c.a.b.a.d.e.v3 c> = $r0;

     label2:
        exitmonitor class "Lc/a/b/a/d/e/v3;";

     label3:
        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "Lc/a/b/a/d/e/v3;";

     label5:
        throw $r2;

     label6:
        return $r0;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static java.lang.Class d()
    {
        java.lang.Class $r0;
        java.lang.ClassNotFoundException $r1;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.protobuf.Extension");

     label2:
        return $r0;

     label3:
        return null;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
    }

    public final c.a.b.a.d.e.j4$f b(c.a.b.a.d.e.u5, int)
    {
        c.a.b.a.d.e.v3$a $r2;
        java.util.Map $r1;
        int $i0;
        c.a.b.a.d.e.u5 $r4;
        java.lang.Object $r3;
        c.a.b.a.d.e.j4$f $r5;
        c.a.b.a.d.e.v3 r0;

        r0 := @this: c.a.b.a.d.e.v3;

        $r4 := @parameter0: c.a.b.a.d.e.u5;

        $i0 := @parameter1: int;

        $r1 = r0.<c.a.b.a.d.e.v3: java.util.Map a>;

        $r2 = new c.a.b.a.d.e.v3$a;

        specialinvoke $r2.<c.a.b.a.d.e.v3$a: void <init>(java.lang.Object,int)>($r4, $i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (c.a.b.a.d.e.j4$f) $r3;

        return $r5;
    }
}
