public class com.shwy.bestjoy.BitmapDecoder extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.content.Context context;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.shwy.bestjoy.BitmapDecoder r0;

        r0 := @this: com.shwy.bestjoy.BitmapDecoder;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.shwy.bestjoy.BitmapDecoder: android.content.Context context> = $r1;

        return;
    }

    public android.graphics.Bitmap getPhoto(java.lang.String, int)
    {
        java.lang.Throwable $r7;
        com.shwy.bestjoy.BitmapDecoder r0;
        int $i0, $i1;
        android.graphics.Bitmap$CompressFormat $r5;
        java.lang.String $r1;
        android.graphics.Matrix r2, $r9;
        java.io.FileOutputStream $r6, $r10;
        java.io.FileNotFoundException $r11;
        android.graphics.Bitmap $r4;
        float $f0, $f1;
        android.graphics.BitmapFactory$Options r3, $r8;

        r0 := @this: com.shwy.bestjoy.BitmapDecoder;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r8 = new android.graphics.BitmapFactory$Options;

        r3 = $r8;

        specialinvoke $r8.<android.graphics.BitmapFactory$Options: void <init>()>();

        r3.<android.graphics.BitmapFactory$Options: int inSampleSize> = 1;

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r1, r3);

        $r9 = new android.graphics.Matrix;

        r2 = $r9;

        specialinvoke $r9.<android.graphics.Matrix: void <init>()>();

        $i0 = virtualinvoke $r4.<android.graphics.Bitmap: int getWidth()>();

        $i0 = $i0 / 2;

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r4.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i0 / 2;

        $f1 = (float) $i0;

        virtualinvoke r2.<android.graphics.Matrix: boolean postRotate(float,float,float)>(90.0F, $f0, $f1);

        $i0 = virtualinvoke $r4.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r4.<android.graphics.Bitmap: int getHeight()>();

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r4, 0, 0, $i0, $i1, r2, 0);

        $r5 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        $r10 = new java.io.FileOutputStream;

        $r6 = $r10;

     label1:
        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

        virtualinvoke $r4.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r5, 100, $r6);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        $r11 = (java.io.FileNotFoundException) $r7;

        virtualinvoke $r11.<java.io.FileNotFoundException: void printStackTrace()>();

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public android.graphics.Bitmap getPhotoItem(java.lang.String, int)
    {
        android.graphics.Bitmap $r3;
        int $i0;
        java.lang.String $r1;
        com.shwy.bestjoy.BitmapDecoder r0;
        android.graphics.BitmapFactory$Options r2;

        r0 := @this: com.shwy.bestjoy.BitmapDecoder;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        r2 = new android.graphics.BitmapFactory$Options;

        specialinvoke r2.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i0;

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r1, r2);

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r3, 180, 251, 1);

        return $r3;
    }

    public static void <clinit>()
    {
        <com.shwy.bestjoy.BitmapDecoder: java.lang.String TAG> = "BitmapDecoder";

        return;
    }
}
