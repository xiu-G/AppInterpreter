public class cn.immob.sdk.controller.LMCtrMgr extends cn.immob.sdk.controller.LMController
{
    private cn.immob.sdk.controller.LMDisplayController c;
    private cn.immob.sdk.controller.LMLocationController d;
    private cn.immob.sdk.controller.LMPhoneController e;
    private cn.immob.sdk.controller.LMSensorController f;
    private cn.immob.sdk.controller.LMSDKController g;
    private cn.immob.sdk.controller.LMNetworkController h;
    private android.content.Context i;
    private cn.immob.sdk.ImmobView j;
    private cn.immob.sdk.LMAdListener k;
    private java.lang.String l;
    public cn.immob.sdk.controller.LMPlayerController mLMPlayerController;

    public void <init>(cn.immob.sdk.IMWebView, android.content.Context)
    {
        android.content.Context $r2;
        cn.immob.sdk.controller.LMPhoneController $r7;
        cn.immob.sdk.ImmobView $r10;
        cn.immob.sdk.controller.LMSensorController $r5;
        cn.immob.sdk.controller.LMDisplayController $r6;
        cn.immob.sdk.IMWebView $r1;
        cn.immob.sdk.controller.LMPlayerController $r9;
        cn.immob.sdk.controller.LMLocationController $r3;
        cn.immob.sdk.controller.LMNetworkController $r4;
        cn.immob.sdk.controller.LMCtrMgr r0;
        cn.immob.sdk.controller.LMSDKController $r8;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 := @parameter0: cn.immob.sdk.IMWebView;

        $r2 := @parameter1: android.content.Context;

        specialinvoke r0.<cn.immob.sdk.controller.LMController: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>($r1, $r2);

        r0.<cn.immob.sdk.controller.LMCtrMgr: java.lang.String l> = "LMCtrMgr";

        r0.<cn.immob.sdk.controller.LMCtrMgr: android.content.Context i> = $r2;

        $r3 = new cn.immob.sdk.controller.LMLocationController;

        specialinvoke $r3.<cn.immob.sdk.controller.LMLocationController: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>($r1, $r2);

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMLocationController d> = $r3;

        $r4 = new cn.immob.sdk.controller.LMNetworkController;

        specialinvoke $r4.<cn.immob.sdk.controller.LMNetworkController: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>($r1, $r2);

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMNetworkController h> = $r4;

        $r5 = new cn.immob.sdk.controller.LMSensorController;

        specialinvoke $r5.<cn.immob.sdk.controller.LMSensorController: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>($r1, $r2);

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f> = $r5;

        $r6 = new cn.immob.sdk.controller.LMDisplayController;

        specialinvoke $r6.<cn.immob.sdk.controller.LMDisplayController: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>($r1, $r2);

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMDisplayController c> = $r6;

        $r7 = new cn.immob.sdk.controller.LMPhoneController;

        specialinvoke $r7.<cn.immob.sdk.controller.LMPhoneController: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>($r1, $r2);

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMPhoneController e> = $r7;

        $r5 = new cn.immob.sdk.controller.LMSensorController;

        specialinvoke $r5.<cn.immob.sdk.controller.LMSensorController: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>($r1, $r2);

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f> = $r5;

        $r8 = new cn.immob.sdk.controller.LMSDKController;

        specialinvoke $r8.<cn.immob.sdk.controller.LMSDKController: void <init>(android.content.Context)>($r2);

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g> = $r8;

        $r9 = new cn.immob.sdk.controller.LMPlayerController;

        $r10 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        specialinvoke $r9.<cn.immob.sdk.controller.LMPlayerController: void <init>(cn.immob.sdk.IMWebView,android.content.Context,cn.immob.sdk.ImmobView)>($r1, $r2, $r10);

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMPlayerController mLMPlayerController> = $r9;

        $r7 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMPhoneController e>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r7, "LMPhoneControllerBridge");

        $r3 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMLocationController d>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r3, "LMLocationControllerBridge");

        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMNetworkController h>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r4, "LMNetworkControllerBridge");

        $r6 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMDisplayController c>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r6, "LMDisplayControllerBridge");

        $r5 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r5, "LMSensorControllerBridge");

        $r8 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r8, "LMSDKControllerBridge");

        $r9 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMPlayerController mLMPlayerController>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r9, "LMPlayerControllerBridge");

        return;
    }

    public void activate(java.lang.String)
    {
        cn.immob.sdk.controller.LMLocationController $r3;
        cn.immob.sdk.controller.LMNetworkController $r2;
        cn.immob.sdk.controller.LMSensorController $r4;
        cn.immob.sdk.controller.LMCtrMgr r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("networkChange");

        if $z0 == 0 goto label1;

        $r2 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMNetworkController h>;

        virtualinvoke $r2.<cn.immob.sdk.controller.LMNetworkController: void startNetworkListener()>();

        return;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("locationChange");

        if $z0 == 0 goto label2;

        $r3 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMLocationController d>;

        virtualinvoke $r3.<cn.immob.sdk.controller.LMLocationController: void startLocationListener()>();

        return;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("headingChange");

        if $z0 == 0 goto label3;

        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        virtualinvoke $r4.<cn.immob.sdk.controller.LMSensorController: void startHeadingListener()>();

        return;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("tiltChange");

        if $z0 == 0 goto label4;

        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        virtualinvoke $r4.<cn.immob.sdk.controller.LMSensorController: void startTiltListener()>();

        return;

     label4:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("shake");

        if $z0 == 0 goto label5;

        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        virtualinvoke $r4.<cn.immob.sdk.controller.LMSensorController: void startShakeListener()>();

        return;

     label5:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("orientationChange");

        if $z0 == 0 goto label6;

        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        virtualinvoke $r4.<cn.immob.sdk.controller.LMSensorController: void startOrientation()>();

     label6:
        return;
    }

    public void deactivate(java.lang.String)
    {
        cn.immob.sdk.controller.LMLocationController $r3;
        cn.immob.sdk.controller.LMNetworkController $r2;
        cn.immob.sdk.controller.LMSensorController $r4;
        cn.immob.sdk.controller.LMCtrMgr r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("networkChange");

        if $z0 == 0 goto label1;

        $r2 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMNetworkController h>;

        virtualinvoke $r2.<cn.immob.sdk.controller.LMNetworkController: void stopNetworkListener()>();

        return;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("locationChange");

        if $z0 == 0 goto label2;

        $r3 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMLocationController d>;

        virtualinvoke $r3.<cn.immob.sdk.controller.LMLocationController: void stopAllListeners()>();

        return;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("headingChange");

        if $z0 == 0 goto label3;

        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        virtualinvoke $r4.<cn.immob.sdk.controller.LMSensorController: void stopHeadingListener()>();

        return;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("tiltChange");

        if $z0 == 0 goto label4;

        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        virtualinvoke $r4.<cn.immob.sdk.controller.LMSensorController: void stopTiltListener()>();

        return;

     label4:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("shake");

        if $z0 == 0 goto label5;

        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        virtualinvoke $r4.<cn.immob.sdk.controller.LMSensorController: void stopShakeListener()>();

        return;

     label5:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("orientationChange");

        if $z0 == 0 goto label6;

        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        virtualinvoke $r4.<cn.immob.sdk.controller.LMSensorController: void stopOrientation()>();

     label6:
        return;
    }

    public java.lang.String getState()
    {
        cn.immob.sdk.controller.LMCtrMgr r0;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        return null;
    }

    public void init(float)
    {
        cn.immob.sdk.controller.LMDisplayController $r9;
        cn.immob.sdk.controller.LMSensorController $r11;
        cn.immob.sdk.IMWebView $r10;
        cn.immob.sdk.controller.LMNetworkController $r7;
        int $i0;
        float $f0;
        java.lang.StringBuilder $r5;
        cn.immob.sdk.controller.LMCtrMgr r0;
        cn.immob.sdk.controller.LMSDKController $r1;
        java.lang.String $r2, $r3, $r4, $r6, $r8;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $f0 := @parameter0: float;

        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        $r2 = virtualinvoke $r1.<cn.immob.sdk.controller.LMSDKController: java.lang.String getMAC()>();

        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        $r3 = virtualinvoke $r1.<cn.immob.sdk.controller.LMSDKController: java.lang.String getIMEI()>();

        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        $r4 = virtualinvoke $r1.<cn.immob.sdk.controller.LMSDKController: java.lang.String getIMSI()>();

        $r5 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ state: \'default\', network: \'");

        $r7 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMNetworkController h>;

        $r8 = virtualinvoke $r7.<cn.immob.sdk.controller.LMNetworkController: java.lang.String gtNetwork()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', size: ");

        $r9 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMDisplayController c>;

        $r8 = virtualinvoke $r9.<cn.immob.sdk.controller.LMDisplayController: java.lang.String getSize()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxSize: ");

        $r9 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMDisplayController c>;

        $r8 = virtualinvoke $r9.<cn.immob.sdk.controller.LMDisplayController: java.lang.String getMaxSize()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", screenSize: ");

        $r9 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMDisplayController c>;

        $r8 = virtualinvoke $r9.<cn.immob.sdk.controller.LMDisplayController: java.lang.String getScreenSize()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultPosition: { x:");

        $r10 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r10.<cn.immob.sdk.IMWebView: int getLeft()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", y: ");

        $r10 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r10.<cn.immob.sdk.IMWebView: int getTop()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", width: ");

        $r10 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r10.<cn.immob.sdk.IMWebView: int getWidth()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height: ");

        $r10 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r10.<cn.immob.sdk.IMWebView: int getHeight()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }, orientation:");

        $r11 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        $i0 = virtualinvoke $r11.<cn.immob.sdk.controller.LMSensorController: int getOrientation()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r8 = virtualinvoke r0.<cn.immob.sdk.controller.LMCtrMgr: java.lang.String getSupports()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"immobSDK\":{\"UA\":\"");

        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        $r8 = virtualinvoke $r1.<cn.immob.sdk.controller.LMSDKController: java.lang.String getUA()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"TimeZone\":\"");

        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        $r8 = virtualinvoke $r1.<cn.immob.sdk.controller.LMSDKController: java.lang.String getTimeZone()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"MAC\":\"");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"IMEI\":\"");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"IMSI\":\"");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"UID\":\"");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"CEL\":\"");

        $r2 = <c: java.lang.String s>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"WBV\":\"");

        $r2 = <c: java.lang.String t>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"ACL\":\"");

        $r2 = <c: java.lang.String C>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"PRS\":\"");

        $r2 = <c: java.lang.String D>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"ALS\":\"");

        $r2 = <c: java.lang.String E>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"PHONE_BRAND\":\"");

        $r2 = <c: java.lang.String e>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"PHONE_MODELS\":\"");

        $r2 = <c: java.lang.String f>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"PHONE_OS\":\"");

        $r2 = <c: java.lang.String i>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"PHONE_VERSION\":\"");

        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        $r2 = virtualinvoke $r1.<cn.immob.sdk.controller.LMSDKController: java.lang.String getOSVersion()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"ADUnitID\":\"");

        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        $r2 = virtualinvoke $r1.<cn.immob.sdk.controller.LMSDKController: java.lang.String getADUnitID()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"SDKVersion\":\"");

        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        $r2 = virtualinvoke $r1.<cn.immob.sdk.controller.LMSDKController: java.lang.String getSDKVersion()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",}});");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("init: injection: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMCtrMgr", $r3);

        $r10 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r10.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>($r2);

        return;
    }

    public void open(java.lang.String)
    {
        android.content.Context $r8;
        cn.immob.sdk.ImmobView $r9;
        android.net.Uri $r7;
        android.content.Intent $r6;
        cn.immob.sdk.IMWebView $r5;
        java.lang.StringBuilder $r3;
        cn.immob.sdk.controller.LMCtrMgr r0;
        java.lang.String $r1, $r2, $r4;
        cn.immob.sdk.LMAdListener $r10;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.controller.LMCtrMgr: java.lang.String l>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("open() -- the url is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, $r4);

        $r5 = r0.<cn.immob.sdk.controller.LMController: cn.immob.sdk.IMWebView b>;

        if $r5 == null goto label1;

        $r5 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r5.<cn.immob.sdk.IMWebView: void open(java.lang.String)>($r1);

        return;

     label1:
        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>()>();

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setAction(java.lang.String)>($r1);

        $r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r7);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.browser", "com.android.browser.BrowserActivity");

        $r8 = r0.<cn.immob.sdk.controller.LMCtrMgr: android.content.Context a>;

        virtualinvoke $r8.<android.content.Context: void startActivity(android.content.Intent)>($r6);

        $r9 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        if $r9 == null goto label2;

        $r10 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        if $r10 == null goto label2;

        $r10 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        $r9 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        interfaceinvoke $r10.<cn.immob.sdk.LMAdListener: void onLeaveApplication(cn.immob.sdk.ImmobView)>($r9);

     label2:
        return;
    }

    public void open(java.lang.String, boolean)
    {
        cn.immob.sdk.ImmobView $r6;
        cn.immob.sdk.IMWebView $r5;
        java.lang.StringBuilder $r3;
        cn.immob.sdk.controller.LMCtrMgr r0;
        java.lang.String $r1, $r2, $r4;
        cn.immob.sdk.LMAdListener $r7;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = r0.<cn.immob.sdk.controller.LMCtrMgr: java.lang.String l>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("open() -- the url is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",the b is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, $r4);

        $r5 = r0.<cn.immob.sdk.controller.LMController: cn.immob.sdk.IMWebView b>;

        if $r5 == null goto label1;

        $r5 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r5.<cn.immob.sdk.IMWebView: void open(java.lang.String,boolean)>($r1, $z0);

        $r6 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        if $r6 == null goto label1;

        $r7 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        if $r7 == null goto label1;

        $r7 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        $r6 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        interfaceinvoke $r7.<cn.immob.sdk.LMAdListener: void onLeaveApplication(cn.immob.sdk.ImmobView)>($r6);

     label1:
        return;
    }

    public void openMap(java.lang.String, boolean)
    {
        java.lang.Throwable $r7, $r9, $r10;
        android.content.Context $r4;
        cn.immob.sdk.ImmobView $r6;
        android.content.pm.PackageManager $r8;
        android.net.Uri $r3;
        android.content.Intent $r2, $r11;
        android.content.ActivityNotFoundException $r12;
        cn.immob.sdk.controller.LMCtrMgr r0;
        java.lang.String $r1;
        cn.immob.sdk.LMAdListener $r5;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        if $z0 == 0 goto label08;

        $r11 = new android.content.Intent;

        $r2 = $r11;

     label01:
        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r3);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

     label02:
        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: android.content.Context a>;

     label03:
        virtualinvoke $r4.<android.content.Context: void startActivity(android.content.Intent)>($r2);

     label04:
        $r5 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        if $r5 == null goto label27;

        $r6 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        if $r6 == null goto label27;

        $r5 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        $r6 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

     label05:
        interfaceinvoke $r5.<cn.immob.sdk.LMAdListener: void onPresentScreen(cn.immob.sdk.ImmobView)>($r6);

     label06:
        return;

     label07:
        $r7 := @caughtexception;

        $r12 = (android.content.ActivityNotFoundException) $r7;

        virtualinvoke $r12.<android.content.ActivityNotFoundException: void printStackTrace()>();

        return;

     label08:
        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: android.content.Context a>;

     label09:
        $r8 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        virtualinvoke $r8.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>("com.google.android.apps.maps", 8192);

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMCtrMgr", "DemoActivity the google maps is exist");

     label10:
        $r11 = new android.content.Intent;

        $r2 = $r11;

     label11:
        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r3);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(8388608);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.google.android.apps.maps", "com.google.android.maps.MapsActivity");

     label12:
        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: android.content.Context a>;

     label13:
        virtualinvoke $r4.<android.content.Context: void startActivity(android.content.Intent)>($r2);

     label14:
        $r5 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        if $r5 == null goto label27;

        $r6 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        if $r6 == null goto label27;

        $r5 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        $r6 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

     label15:
        interfaceinvoke $r5.<cn.immob.sdk.LMAdListener: void onLeaveApplication(cn.immob.sdk.ImmobView)>($r6);

     label16:
        return;

     label17:
        $r9 := @caughtexception;

     label18:
        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMCtrMgr", "DemoActivity the google maps is not exist");

     label19:
        $r11 = new android.content.Intent;

        $r2 = $r11;

     label20:
        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r3);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

     label21:
        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: android.content.Context a>;

     label22:
        virtualinvoke $r4.<android.content.Context: void startActivity(android.content.Intent)>($r2);

     label23:
        $r5 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        if $r5 == null goto label27;

        $r6 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        if $r6 == null goto label27;

        $r5 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        $r6 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

     label24:
        interfaceinvoke $r5.<cn.immob.sdk.LMAdListener: void onPresentScreen(cn.immob.sdk.ImmobView)>($r6);

     label25:
        return;

     label26:
        $r10 := @caughtexception;

        $r12 = (android.content.ActivityNotFoundException) $r10;

        virtualinvoke $r12.<android.content.ActivityNotFoundException: void printStackTrace()>();

     label27:
        return;

        catch android.content.ActivityNotFoundException from label01 to label02 with label07;
        catch android.content.ActivityNotFoundException from label03 to label04 with label07;
        catch android.content.ActivityNotFoundException from label05 to label06 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label17;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label17;
        catch android.content.pm.PackageManager$NameNotFoundException from label13 to label14 with label17;
        catch android.content.pm.PackageManager$NameNotFoundException from label15 to label16 with label17;
        catch android.content.ActivityNotFoundException from label18 to label19 with label26;
        catch android.content.ActivityNotFoundException from label20 to label21 with label26;
        catch android.content.ActivityNotFoundException from label22 to label23 with label26;
        catch android.content.ActivityNotFoundException from label24 to label25 with label26;
    }

    public boolean request(java.lang.String, java.lang.String)
    {
        cn.immob.sdk.controller.LMCtrMgr r0;
        java.lang.String $r1, $r2;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        return 0;
    }

    public void setLMadListener(cn.immob.sdk.LMAdListener)
    {
        cn.immob.sdk.controller.LMCtrMgr r0;
        cn.immob.sdk.LMAdListener $r1;
        cn.immob.sdk.controller.LMPlayerController $r2;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 := @parameter0: cn.immob.sdk.LMAdListener;

        if $r1 == null goto label1;

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k> = $r1;

        $r2 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMPlayerController mLMPlayerController>;

        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        virtualinvoke $r2.<cn.immob.sdk.controller.LMPlayerController: void setLMAdListener(cn.immob.sdk.LMAdListener)>($r1);

     label1:
        return;
    }

    public void setLmmobView(cn.immob.sdk.ImmobView)
    {
        cn.immob.sdk.ImmobView $r1;
        cn.immob.sdk.controller.LMPlayerController $r4;
        cn.immob.sdk.controller.LMCtrMgr r0;
        cn.immob.sdk.controller.LMSDKController $r3;
        cn.immob.sdk.LMAdListener $r2;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 := @parameter0: cn.immob.sdk.ImmobView;

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j> = $r1;

        $r3 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        if $r3 == null goto label1;

        $r3 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSDKController g>;

        virtualinvoke $r3.<cn.immob.sdk.controller.LMSDKController: void setLmmobView(cn.immob.sdk.ImmobView)>($r1);

     label1:
        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        $r2 = virtualinvoke $r1.<cn.immob.sdk.ImmobView: cn.immob.sdk.LMAdListener getLmAdListener()>();

        r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k> = $r2;

        $r4 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMPlayerController mLMPlayerController>;

        $r2 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.LMAdListener k>;

        virtualinvoke $r4.<cn.immob.sdk.controller.LMPlayerController: void setLMAdListener(cn.immob.sdk.LMAdListener)>($r2);

        return;
    }

    public void showAlert(java.lang.String)
    {
        cn.immob.sdk.ImmobView $r3;
        cn.immob.sdk.controller.LMCtrMgr r0;
        java.lang.String $r1, $r2;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.controller.LMCtrMgr: java.lang.String l>;

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r2, "showAlert is appear");

        $r3 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        if $r3 == null goto label1;

        $r3 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.ImmobView j>;

        virtualinvoke $r3.<cn.immob.sdk.ImmobView: void showAlert(java.lang.String)>($r1);

     label1:
        return;
    }

    public void stopAllListeners()
    {
        cn.immob.sdk.controller.LMLocationController $r1;
        cn.immob.sdk.controller.LMNetworkController $r2;
        cn.immob.sdk.controller.LMSensorController $r3;
        cn.immob.sdk.controller.LMCtrMgr r0;

        r0 := @this: cn.immob.sdk.controller.LMCtrMgr;

        $r1 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMLocationController d>;

        virtualinvoke $r1.<cn.immob.sdk.controller.LMLocationController: void stopAllListeners()>();

        $r2 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMNetworkController h>;

        virtualinvoke $r2.<cn.immob.sdk.controller.LMNetworkController: void stopAllListeners()>();

        $r3 = r0.<cn.immob.sdk.controller.LMCtrMgr: cn.immob.sdk.controller.LMSensorController f>;

        virtualinvoke $r3.<cn.immob.sdk.controller.LMSensorController: void stopAllListeners()>();

        return;
    }
}
