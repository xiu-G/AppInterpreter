public class proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.attribute.visitor.AttributeVisitor
{
    private final proguard.classfile.attribute.visitor.InnerClassesInfoVisitor innerClassesInfoVisitor;

    public void <init>(proguard.classfile.attribute.visitor.InnerClassesInfoVisitor)
    {
        proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor r0;
        proguard.classfile.attribute.visitor.InnerClassesInfoVisitor $r1;

        r0 := @this: proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor;

        $r1 := @parameter0: proguard.classfile.attribute.visitor.InnerClassesInfoVisitor;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor: proguard.classfile.attribute.visitor.InnerClassesInfoVisitor innerClassesInfoVisitor> = $r1;

        return;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        return;
    }

    public void visitInnerClassesAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.InnerClassesAttribute)
    {
        proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor r0;
        proguard.classfile.attribute.InnerClassesAttribute $r2;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.visitor.InnerClassesInfoVisitor $r3;

        r0 := @this: proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.InnerClassesAttribute;

        $r3 = r0.<proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor: proguard.classfile.attribute.visitor.InnerClassesInfoVisitor innerClassesInfoVisitor>;

        virtualinvoke $r2.<proguard.classfile.attribute.InnerClassesAttribute: void innerClassEntriesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.InnerClassesInfoVisitor)>($r1, $r3);

        return;
    }
}
