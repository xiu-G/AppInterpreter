public class com.feelingk.iap.net.ItemUseConfirm extends com.feelingk.iap.net.MsgConfirm
{
    private int itemCount;
    private java.lang.String itemID;
    private java.lang.String itemName;

    public void <init>()
    {
        com.feelingk.iap.net.ItemUseConfirm r0;

        r0 := @this: com.feelingk.iap.net.ItemUseConfirm;

        specialinvoke r0.<com.feelingk.iap.net.MsgConfirm: void <init>()>();

        r0.<com.feelingk.iap.net.ItemUseConfirm: java.lang.String itemID> = null;

        r0.<com.feelingk.iap.net.ItemUseConfirm: java.lang.String itemName> = null;

        r0.<com.feelingk.iap.net.ItemUseConfirm: int itemCount> = 0;

        return;
    }

    public int getCount()
    {
        int i0;
        com.feelingk.iap.net.ItemUseConfirm r0;

        r0 := @this: com.feelingk.iap.net.ItemUseConfirm;

        i0 = r0.<com.feelingk.iap.net.ItemUseConfirm: int itemCount>;

        return i0;
    }

    public java.lang.String getItemID()
    {
        java.lang.String r1;
        com.feelingk.iap.net.ItemUseConfirm r0;

        r0 := @this: com.feelingk.iap.net.ItemUseConfirm;

        r1 = r0.<com.feelingk.iap.net.ItemUseConfirm: java.lang.String itemID>;

        return r1;
    }

    public java.lang.String getItemName()
    {
        java.lang.String r1;
        com.feelingk.iap.net.ItemUseConfirm r0;

        r0 := @this: com.feelingk.iap.net.ItemUseConfirm;

        r1 = r0.<com.feelingk.iap.net.ItemUseConfirm: java.lang.String itemName>;

        return r1;
    }

    protected void parse(byte[])
    {
        java.lang.Throwable $r6, $r7;
        byte[] $r1, r2;
        byte $b1;
        int $i0;
        java.lang.StringBuilder $r5, $r9;
        java.lang.String r3, r4, $r8;
        java.io.UnsupportedEncodingException $r10;
        com.feelingk.iap.net.ItemUseConfirm r0;

        r0 := @this: com.feelingk.iap.net.ItemUseConfirm;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<com.feelingk.iap.net.MsgConfirm: void parse(byte[])>($r1);

        r4 = null;

        $r8 = new java.lang.String;

     label1:
        r2 = virtualinvoke r0.<com.feelingk.iap.net.ItemUseConfirm: byte[] getMsg()>();

        specialinvoke $r8.<java.lang.String: void <init>(byte[],java.lang.String)>(r2, "MS949");

     label2:
        r4 = $r8;

     label3:
        $r9 = new java.lang.StringBuilder;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke r0.<com.feelingk.iap.net.ItemUseConfirm: int getMsgLength()>();

        $i0 = $i0 + 14;

        r2 = newarray (byte)[10];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, r2, 0, 10);

        r4 = new java.lang.String;

        specialinvoke r4.<java.lang.String: void <init>(byte[])>(r2);

        r0.<com.feelingk.iap.net.ItemUseConfirm: java.lang.String itemID> = r4;

        $i0 = $i0 + 10;

        r2 = newarray (byte)[30];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, r2, 0, 30);

        $i0 = $i0 + 30;

        r4 = new java.lang.String;

        r3 = r4;

     label4:
        specialinvoke r4.<java.lang.String: void <init>(byte[],java.lang.String)>(r2, "MS949");

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

     label5:
        r0.<com.feelingk.iap.net.ItemUseConfirm: java.lang.String itemName> = r3;

     label6:
        $b1 = $r1[$i0];

        $i0 = (int) $b1;

        r0.<com.feelingk.iap.net.ItemUseConfirm: int itemCount> = $i0;

        return;

     label7:
        $r6 := @caughtexception;

        $r10 = (java.io.UnsupportedEncodingException) $r6;

        virtualinvoke $r10.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label3;

     label8:
        $r7 := @caughtexception;

        $r10 = (java.io.UnsupportedEncodingException) $r7;

        virtualinvoke $r10.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label6;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label7;
        catch java.io.UnsupportedEncodingException from label4 to label5 with label8;
    }
}
