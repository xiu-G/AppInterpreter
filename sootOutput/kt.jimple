public final class kt extends java.lang.Object implements java.io.Serializable, lo
{
    protected int a;
    protected int b;
    protected int[] c;
    protected kr d;

    public void <init>(kr)
    {
        int[] $r2;
        kr $r1;
        int $i0;
        kt r0;

        r0 := @this: kt;

        $r1 := @parameter0: kr;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kt: kr d> = $r1;

        $i0 = r0.<kt: int a>;

        $r2 = newarray (int)[$i0];

        r0.<kt: int[] c> = $r2;

        r0.<kt: int b> = 0;

        r0.<kt: int a> = 200;

        return;
    }

    private void a(int, int)
    {
        kt r0;
        int[] $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: kt;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<kt: int[] c>;

        $i3 = lengthof $r1;

        if $i1 >= $i3 goto label1;

        $i3 = r0.<kt: int b>;

        $r1 = r0.<kt: int[] c>;

        $i2 = lengthof $r1;

        if $i3 != $i2 goto label5;

     label1:
        $r1 = r0.<kt: int[] c>;

        $i3 = lengthof $r1;

        $i2 = r0.<kt: int a>;

        $i3 = $i3 + $i2;

        $i2 = $i1 + 1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i2);

        $r1 = newarray (int)[$i3];

        $i3 = r0.<kt: int a>;

        $i3 = $i3 << 1;

        r0.<kt: int a> = $i3;

        $r2 = r0.<kt: int[] c>;

        $i3 = lengthof $r2;

        if $i1 >= $i3 goto label4;

        $r2 = r0.<kt: int[] c>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i1);

        $r2 = r0.<kt: int[] c>;

        $i3 = $i1 + 1;

        $r3 = r0.<kt: int[] c>;

        $i2 = lengthof $r3;

        $i2 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r1, $i3, $i2);

     label2:
        r0.<kt: int[] c> = $r1;

     label3:
        $r1 = r0.<kt: int[] c>;

        $r1[$i1] = $i0;

        $i0 = r0.<kt: int b>;

        $i0 = $i0 + 1;

        r0.<kt: int b> = $i0;

        return;

     label4:
        $r2 = r0.<kt: int[] c>;

        $r3 = r0.<kt: int[] c>;

        $i3 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i3);

        goto label2;

     label5:
        $i3 = r0.<kt: int b>;

        if $i1 >= $i3 goto label3;

        $r1 = r0.<kt: int[] c>;

        $r2 = r0.<kt: int[] c>;

        $i3 = $i1 + 1;

        $r3 = r0.<kt: int[] c>;

        $i4 = lengthof $r3;

        $i2 = $i1 + 1;

        $i2 = $i4 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, $i3, $i2);

        goto label3;
    }

    public final int a(int)
    {
        java.lang.IndexOutOfBoundsException $r1;
        int[] $r4;
        int $i0, $i1;
        kt r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: kt;

        $i0 := @parameter0: int;

        $i1 = r0.<kt: int b>;

        if $i0 < $i1 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" beyond current limit");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $r4 = r0.<kt: int[] c>;

        $i0 = $r4[$i0];

        return $i0;
    }

    public final int a(org.htmlparser.lexer.Cursor)
    {
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        kt r0;
        org.htmlparser.lexer.Cursor $r1;

        r0 := @this: kt;

        $r1 := @parameter0: org.htmlparser.lexer.Cursor;

        $i0 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $i1 = r0.<kt: int b>;

        if $i1 != 0 goto label1;

        specialinvoke r0.<kt: void a(int,int)>($i0, 0);

        return 0;

     label1:
        $r2 = r0.<kt: int[] c>;

        $i1 = r0.<kt: int b>;

        $i1 = $i1 - 1;

        $i1 = $r2[$i1];

        if $i0 != $i1 goto label2;

        $i0 = r0.<kt: int b>;

        $i0 = $i0 - 1;

        return $i0;

     label2:
        if $i0 <= $i1 goto label5;

        $i1 = r0.<kt: int b>;

     label3:
        specialinvoke r0.<kt: void a(int,int)>($i0, $i1);

     label4:
        return $i1;

     label5:
        $i2 = staticinvoke <ln: int a(lo,lm)>(r0, $r1);

        $i1 = $i2;

        $i3 = r0.<kt: int b>;

        if $i2 >= $i3 goto label3;

        $r2 = r0.<kt: int[] c>;

        $i2 = $r2[$i2];

        if $i0 == $i2 goto label4;

        goto label3;
    }

    public final kr a()
    {
        kt r0;
        kr r1;

        r0 := @this: kt;

        r1 = r0.<kt: kr d>;

        return r1;
    }

    public final lm a(int, lm)
    {
        lm $r2;
        int[] $r4;
        kr $r1;
        int $i0;
        kt r0;
        org.htmlparser.lexer.Cursor $r3;

        r0 := @this: kt;

        $i0 := @parameter0: int;

        $r2 := @parameter1: lm;

        if $r2 == null goto label1;

        $r3 = (org.htmlparser.lexer.Cursor) $r2;

        $r4 = r0.<kt: int[] c>;

        $i0 = $r4[$i0];

        $r3.<org.htmlparser.lexer.Cursor: int a> = $i0;

        $r1 = r0.<kt: kr d>;

        $r3.<org.htmlparser.lexer.Cursor: kr b> = $r1;

        return $r3;

     label1:
        $r3 = new org.htmlparser.lexer.Cursor;

        $r1 = r0.<kt: kr d>;

        $r4 = r0.<kt: int[] c>;

        $i0 = $r4[$i0];

        specialinvoke $r3.<org.htmlparser.lexer.Cursor: void <init>(kr,int)>($r1, $i0);

        return $r3;
    }

    public final int b()
    {
        int $i0;
        kt r0;

        r0 := @this: kt;

        $i0 = r0.<kt: int b>;

        $i0 = $i0 - 1;

        return $i0;
    }

    public final int b(org.htmlparser.lexer.Cursor)
    {
        int[] $r2;
        int $i0, $i1, $i2;
        kt r0;
        org.htmlparser.lexer.Cursor $r1;

        r0 := @this: kt;

        $r1 := @parameter0: org.htmlparser.lexer.Cursor;

        $i0 = staticinvoke <ln: int a(lo,lm)>(r0, $r1);

        $i1 = r0.<kt: int b>;

        if $i0 >= $i1 goto label1;

        $i1 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $r2 = r0.<kt: int[] c>;

        $i2 = $r2[$i0];

        if $i1 != $i2 goto label1;

        $i0 = $i0 + 1;

     label1:
        return $i0;
    }
}
