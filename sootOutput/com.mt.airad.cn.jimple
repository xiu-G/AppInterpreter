final class com.mt.airad.cn extends java.lang.Object
{
    private java.lang.String a;
    private java.lang.String b;
    private java.lang.String c;
    private java.lang.String d;
    private java.lang.String e;
    private android.content.Context f;

    protected void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.mt.airad.cn r0;

        r0 := @this: com.mt.airad.cn;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mt.airad.cn: android.content.Context f> = $r1;

        return;
    }

    private static java.lang.String a(java.lang.String, java.lang.String, java.lang.String)
    {
        char[] $r4;
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r1, $r2;
        boolean $z0;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = new java.lang.String;

        $r4 = newarray (char)[1];

        $r4[0] = 5;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r2;
    }

    private static java.lang.String c()
    {
        java.lang.Float $r9, $r10, $r11;
        java.lang.String[] $r8;
        int $i0, $i1;
        java.lang.String $r6, $r7;
        java.lang.Process $r1;
        java.lang.Runtime $r0;
        java.io.InputStreamReader $r4;
        java.lang.Exception $r2, $r13;
        float $f0, $f1;
        java.lang.StringBuilder $r12;
        java.io.BufferedReader $r3;
        java.io.InputStream $r5;

     label01:
        $r0 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r1 = virtualinvoke $r0.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>("top -n 1");

     label02:
        if $r1 != null goto label04;

        return "";

     label03:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        $r1 = null;

        goto label02;

     label04:
        $r3 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

     label05:
        $r5 = virtualinvoke $r1.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

     label06:
        $r6 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label07:
        if $r6 == null goto label27;

     label08:
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

     label09:
        if $i0 <= 0 goto label06;

     label10:
        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r6 = $r8[1];

        $r7 = $r8[1];

        $i0 = virtualinvoke $r7.<java.lang.String: int lastIndexOf(int)>(32);

     label11:
        $i0 = $i0 + 1;

     label12:
        $r7 = $r8[1];

        $i1 = virtualinvoke $r7.<java.lang.String: int lastIndexOf(int)>(37);

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r6);

        $f0 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

     label13:
        $f0 = $f0 / 100.0F;

     label14:
        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = $r8[0];

        $r7 = $r8[0];

        $i0 = virtualinvoke $r7.<java.lang.String: int lastIndexOf(int)>(32);

     label15:
        $i0 = $i0 + 1;

     label16:
        $r7 = $r8[0];

        $i1 = virtualinvoke $r7.<java.lang.String: int lastIndexOf(int)>(37);

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r6);

        $f0 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

     label17:
        $f0 = $f0 / 100.0F;

     label18:
        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f0 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

     label19:
        $f0 = $f0 * 100.0F;

        $f0 = 100.0F - $f0;

     label20:
        $f1 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

     label21:
        $f1 = $f1 * 100.0F;

        $f0 = $f0 - $f1;

        $f0 = $f0 / 100.0F;

     label22:
        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

     label23:
        $r12 = new java.lang.StringBuilder;

     label24:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label25:
        return $r6;

     label26:
        $r13 := @caughtexception;

        virtualinvoke $r13.<java.lang.Exception: void printStackTrace()>();

     label27:
        return "";

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label07 with label26;
        catch java.lang.Exception from label08 to label09 with label26;
        catch java.lang.Exception from label10 to label11 with label26;
        catch java.lang.Exception from label12 to label13 with label26;
        catch java.lang.Exception from label14 to label15 with label26;
        catch java.lang.Exception from label16 to label17 with label26;
        catch java.lang.Exception from label18 to label19 with label26;
        catch java.lang.Exception from label20 to label21 with label26;
        catch java.lang.Exception from label22 to label23 with label26;
        catch java.lang.Exception from label24 to label25 with label26;
    }

    private java.lang.String d()
    {
        android.app.ActivityManager$RunningAppProcessInfo $r9;
        android.content.Context $r1;
        android.app.ActivityManager $r3;
        android.os.Debug$MemoryInfo[] $r6;
        android.os.Debug$MemoryInfo $r7;
        java.lang.Exception $r11;
        java.util.List $r4;
        int[] $r5;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r8, $r10;
        com.mt.airad.cn r0;
        boolean $z0;

        r0 := @this: com.mt.airad.cn;

        $r1 = r0.<com.mt.airad.cn: android.content.Context f>;

        if $r1 != null goto label01;

        return "";

     label01:
        $r1 = r0.<com.mt.airad.cn: android.content.Context f>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        $r3 = (android.app.ActivityManager) $r2;

        $r4 = virtualinvoke $r3.<android.app.ActivityManager: java.util.List getRunningAppProcesses()>();

     label02:
        $i0 = 0;

     label03:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label04:
        if $i0 < $i1 goto label08;

        $i0 = 0;

     label05:
        $r5 = newarray (int)[1];

     label06:
        $r5[0] = $i0;

        $r6 = virtualinvoke $r3.<android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>($r5);

        $r7 = $r6[0];

        $i0 = virtualinvoke $r7.<android.os.Debug$MemoryInfo: int getTotalPss()>();

     label07:
        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        return $r8;

     label08:
        $r2 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r9 = (android.app.ActivityManager$RunningAppProcessInfo) $r2;

        $r8 = $r9.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String processName>;

        $r1 = r0.<com.mt.airad.cn: android.content.Context f>;

        $r10 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label09:
        if $z0 == 0 goto label12;

     label10:
        $r2 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r9 = (android.app.ActivityManager$RunningAppProcessInfo) $r2;

        $i0 = $r9.<android.app.ActivityManager$RunningAppProcessInfo: int pid>;

     label11:
        goto label05;

     label12:
        $i0 = $i0 + 1;

        goto label03;

     label13:
        $r11 := @caughtexception;

        $i0 = 0;

        goto label07;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.lang.Exception from label10 to label11 with label13;
    }

    private static java.lang.String e()
    {
        long $l0;
        java.lang.String[] $r3;
        java.lang.Integer $r4;
        java.lang.Exception $r5;
        int $i1;
        java.io.FileReader $r0;
        java.io.BufferedReader $r1;
        java.lang.String $r2;

        $l0 = 0L;

        $r0 = new java.io.FileReader;

     label1:
        specialinvoke $r0.<java.io.FileReader: void <init>(java.lang.String)>("/proc/meminfo");

     label2:
        $r1 = new java.io.BufferedReader;

     label3:
        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r0, 8192);

        $r2 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

        $r2 = $r3[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label4:
        $i1 = $i1 << 10;

        $l0 = (long) $i1;

     label5:
        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

     label6:
        $l0 = $l0 / 1000L;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        return $r2;

     label7:
        $r5 := @caughtexception;

        goto label6;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private java.lang.String f()
    {
        android.content.Context $r1;
        android.app.ActivityManager $r3;
        long $l0;
        java.lang.Exception $r6;
        java.lang.Object $r2;
        java.lang.String $r5;
        com.mt.airad.cn r0;
        android.app.ActivityManager$MemoryInfo $r4;

        r0 := @this: com.mt.airad.cn;

        $r1 = r0.<com.mt.airad.cn: android.content.Context f>;

        if $r1 != null goto label1;

        return "";

     label1:
        $r1 = r0.<com.mt.airad.cn: android.content.Context f>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        $r3 = (android.app.ActivityManager) $r2;

     label2:
        $r4 = new android.app.ActivityManager$MemoryInfo;

     label3:
        specialinvoke $r4.<android.app.ActivityManager$MemoryInfo: void <init>()>();

        virtualinvoke $r3.<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>($r4);

        $l0 = $r4.<android.app.ActivityManager$MemoryInfo: long availMem>;

     label4:
        $l0 = $l0 / 1000L;

     label5:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

     label6:
        return $r5;

     label7:
        $r6 := @caughtexception;

        $r5 = "";

        goto label6;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private static java.lang.String g()
    {
        java.util.Enumeration $r0, $r4;
        java.net.NetworkInterface $r3;
        java.lang.Exception $r6, $r7;
        java.net.InetAddress $r5;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r1;
        boolean $z0;

     label01:
        $r0 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();

     label02:
        $z0 = interfaceinvoke $r0.<java.util.Enumeration: boolean hasMoreElements()>();

     label03:
        if $z0 != 0 goto label06;

     label04:
        $r1 = staticinvoke <com.mt.airad.bs: java.lang.String b()>();

     label05:
        return $r1;

     label06:
        $r2 = interfaceinvoke $r0.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r3 = (java.net.NetworkInterface) $r2;

        $r4 = virtualinvoke $r3.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>();

     label07:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

     label08:
        if $z0 == 0 goto label02;

     label09:
        $r2 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (java.net.InetAddress) $r2;

        $z0 = virtualinvoke $r5.<java.net.InetAddress: boolean isLoopbackAddress()>();

     label10:
        if $z0 != 0 goto label07;

     label11:
        $r1 = virtualinvoke $r5.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("192.168.");

     label12:
        if $z0 != 0 goto label07;

     label13:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label14:
        if $i0 >= 16 goto label07;

     label15:
        $r1 = virtualinvoke $r5.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

     label16:
        return $r1;

     label17:
        $r6 := @caughtexception;

        staticinvoke <com.mt.airad.ag: void a(java.lang.Exception)>($r6);

        goto label04;

     label18:
        $r7 := @caughtexception;

        staticinvoke <com.mt.airad.ag: void a(java.lang.Exception)>($r7);

        return "";

        catch java.lang.Exception from label01 to label03 with label17;
        catch java.lang.Exception from label04 to label05 with label18;
        catch java.lang.Exception from label06 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    protected final void a()
    {
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        com.mt.airad.cn r0;

        r0 := @this: com.mt.airad.cn;

        $r1 = staticinvoke <com.mt.airad.cn: java.lang.String c()>();

        r0.<com.mt.airad.cn: java.lang.String a> = $r1;

        $r2 = new java.lang.StringBuilder;

        $r1 = staticinvoke <com.mt.airad.cn: java.lang.String e()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r1 = specialinvoke r0.<com.mt.airad.cn: java.lang.String f()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r1 = specialinvoke r0.<com.mt.airad.cn: java.lang.String d()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.mt.airad.cn: java.lang.String b> = $r1;

        $r1 = <com.mt.airad.t: java.lang.String g>;

        if $r1 == null goto label1;

        $r1 = <com.mt.airad.t: java.lang.String f>;

        if $r1 != null goto label3;

     label1:
        $r1 = "";

     label2:
        r0.<com.mt.airad.cn: java.lang.String c> = $r1;

        $r1 = staticinvoke <com.mt.airad.cn: java.lang.String g()>();

        r0.<com.mt.airad.cn: java.lang.String d> = $r1;

        $r1 = <com.mt.airad.t: java.lang.String h>;

        r0.<com.mt.airad.cn: java.lang.String e> = $r1;

        return;

     label3:
        $r2 = new java.lang.StringBuilder;

        $r1 = <com.mt.airad.t: java.lang.String g>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r1 = <com.mt.airad.t: java.lang.String f>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;
    }

    protected final java.lang.String b()
    {
        java.lang.String $r1, $r2;
        com.mt.airad.cn r0;

        r0 := @this: com.mt.airad.cn;

        $r1 = r0.<com.mt.airad.cn: java.lang.String a>;

        $r1 = staticinvoke <com.mt.airad.cn: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>("", "c", $r1);

        $r2 = r0.<com.mt.airad.cn: java.lang.String b>;

        $r1 = staticinvoke <com.mt.airad.cn: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>($r1, "m", $r2);

        $r2 = r0.<com.mt.airad.cn: java.lang.String c>;

        $r1 = staticinvoke <com.mt.airad.cn: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>($r1, "g", $r2);

        $r2 = r0.<com.mt.airad.cn: java.lang.String d>;

        $r1 = staticinvoke <com.mt.airad.cn: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>($r1, "ip", $r2);

        $r2 = r0.<com.mt.airad.cn: java.lang.String e>;

        $r1 = staticinvoke <com.mt.airad.cn: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>($r1, "gm", $r2);

        return $r1;
    }
}
