class cs.utils.io.ImageMemoryCache$1 extends android.util.LruCache
{
    final cs.utils.io.ImageMemoryCache this$0;

    void <init>(cs.utils.io.ImageMemoryCache, int)
    {
        int $i0;
        cs.utils.io.ImageMemoryCache$1 r0;
        cs.utils.io.ImageMemoryCache $r1;

        r0 := @this: cs.utils.io.ImageMemoryCache$1;

        $r1 := @parameter0: cs.utils.io.ImageMemoryCache;

        $i0 := @parameter1: int;

        r0.<cs.utils.io.ImageMemoryCache$1: cs.utils.io.ImageMemoryCache this$0> = $r1;

        specialinvoke r0.<android.util.LruCache: void <init>(int)>($i0);

        return;
    }

    protected volatile void entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        cs.utils.io.ImageMemoryCache$1 r0;
        android.graphics.Bitmap $r5, $r6;
        java.lang.Object $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: cs.utils.io.ImageMemoryCache$1;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: java.lang.Object;

        $r4 = (java.lang.String) $r1;

        $r5 = (android.graphics.Bitmap) $r2;

        $r6 = (android.graphics.Bitmap) $r3;

        virtualinvoke r0.<cs.utils.io.ImageMemoryCache$1: void entryRemoved(boolean,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap)>($z0, $r4, $r5, $r6);

        return;
    }

    protected void entryRemoved(boolean, java.lang.String, android.graphics.Bitmap, android.graphics.Bitmap)
    {
        java.util.LinkedHashMap $r5;
        cs.utils.io.ImageMemoryCache$1 r0;
        android.graphics.Bitmap $r2, $r3;
        java.lang.String $r1;
        java.lang.ref.SoftReference $r4;
        boolean $z0;

        r0 := @this: cs.utils.io.ImageMemoryCache$1;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.graphics.Bitmap;

        $r3 := @parameter3: android.graphics.Bitmap;

        if $r2 == null goto label1;

        $r5 = staticinvoke <cs.utils.io.ImageMemoryCache: java.util.LinkedHashMap access$0()>();

        $r4 = new java.lang.ref.SoftReference;

        specialinvoke $r4.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r2);

        virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label1:
        return;
    }

    protected volatile int sizeOf(java.lang.Object, java.lang.Object)
    {
        cs.utils.io.ImageMemoryCache$1 r0;
        android.graphics.Bitmap $r4;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.String $r3;

        r0 := @this: cs.utils.io.ImageMemoryCache$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) $r1;

        $r4 = (android.graphics.Bitmap) $r2;

        $i0 = virtualinvoke r0.<cs.utils.io.ImageMemoryCache$1: int sizeOf(java.lang.String,android.graphics.Bitmap)>($r3, $r4);

        return $i0;
    }

    protected int sizeOf(java.lang.String, android.graphics.Bitmap)
    {
        cs.utils.io.ImageMemoryCache$1 r0;
        android.graphics.Bitmap $r2;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: cs.utils.io.ImageMemoryCache$1;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<android.graphics.Bitmap: int getRowBytes()>();

        $i1 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i0 * $i1;

        return $i0;

     label1:
        return 0;
    }
}
