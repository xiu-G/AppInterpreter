public class com.aishukeclassmfkb.util.ShakeInterface extends java.lang.Object implements android.hardware.SensorEventListener
{
    private int TimeInterval;
    private long curTime;
    private long duration;
    private long initTime;
    private boolean isRecoding;
    private long lastTime;
    private float last_x;
    private float last_y;
    private float last_z;
    private java.util.ArrayList mListeners;
    private android.hardware.SensorManager mSensorManager;
    private float shake;
    private int shakeThreshold;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.hardware.SensorManager $r3;
        java.lang.Object $r2;
        com.aishukeclassmfkb.util.ShakeInterface r0;
        java.util.ArrayList $r4;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.aishukeclassmfkb.util.ShakeInterface: long initTime> = 0L;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: long lastTime> = 0L;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: long curTime> = 0L;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: long duration> = 0L;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_x> = 0.0F;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_y> = 0.0F;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_z> = 0.0F;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: float shake> = 0.0F;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: int TimeInterval> = 100;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: int shakeThreshold> = 2000;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: boolean isRecoding> = 0;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("sensor");

        $r3 = (android.hardware.SensorManager) $r2;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: android.hardware.SensorManager mSensorManager> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.aishukeclassmfkb.util.ShakeInterface: java.util.ArrayList mListeners> = $r4;

        return;
    }

    private void notifyListeners()
    {
        java.util.Iterator $r2;
        com.aishukeclassmfkb.util.ShakeInterface$OnShakeListener $r4;
        java.lang.Object $r3;
        com.aishukeclassmfkb.util.ShakeInterface r0;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $r1 = r0.<com.aishukeclassmfkb.util.ShakeInterface: java.util.ArrayList mListeners>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.aishukeclassmfkb.util.ShakeInterface$OnShakeListener) $r3;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: boolean isRecoding> = 1;

        interfaceinvoke $r4.<com.aishukeclassmfkb.util.ShakeInterface$OnShakeListener: void onShake()>();

        goto label1;

     label2:
        return;
    }

    public int getShakeThreshold()
    {
        int i0;
        com.aishukeclassmfkb.util.ShakeInterface r0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        i0 = r0.<com.aishukeclassmfkb.util.ShakeInterface: int shakeThreshold>;

        return i0;
    }

    public int getTimeInterval()
    {
        int i0;
        com.aishukeclassmfkb.util.ShakeInterface r0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        i0 = r0.<com.aishukeclassmfkb.util.ShakeInterface: int TimeInterval>;

        return i0;
    }

    public boolean isRecoding()
    {
        com.aishukeclassmfkb.util.ShakeInterface r0;
        boolean z0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        z0 = r0.<com.aishukeclassmfkb.util.ShakeInterface: boolean isRecoding>;

        return z0;
    }

    public void onAccuracyChanged(android.hardware.Sensor, int)
    {
        int $i0;
        android.hardware.Sensor $r1;
        com.aishukeclassmfkb.util.ShakeInterface r0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $r1 := @parameter0: android.hardware.Sensor;

        $i0 := @parameter1: int;

        return;
    }

    public void onSensorChanged(android.hardware.SensorEvent)
    {
        float[] $r2;
        long $l0, $l1;
        android.hardware.SensorEvent $r1;
        byte $b3;
        int $i2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        com.aishukeclassmfkb.util.ShakeInterface r0;
        boolean $z0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $r1 := @parameter0: android.hardware.SensorEvent;

        $r2 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r2[0];

        $r2 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f1 = $r2[1];

        $r2 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f2 = $r2[2];

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.aishukeclassmfkb.util.ShakeInterface: long curTime> = $l0;

        $z0 = r0.<com.aishukeclassmfkb.util.ShakeInterface: boolean isRecoding>;

        if $z0 != 0 goto label4;

        $l0 = r0.<com.aishukeclassmfkb.util.ShakeInterface: long curTime>;

        $l1 = r0.<com.aishukeclassmfkb.util.ShakeInterface: long lastTime>;

        $l0 = $l0 - $l1;

        $i2 = r0.<com.aishukeclassmfkb.util.ShakeInterface: int TimeInterval>;

        $l1 = (long) $i2;

        $b3 = $l0 cmp $l1;

        $i2 = (int) $b3;

        if $i2 <= 0 goto label4;

        $l0 = r0.<com.aishukeclassmfkb.util.ShakeInterface: long curTime>;

        $l1 = r0.<com.aishukeclassmfkb.util.ShakeInterface: long lastTime>;

        $l0 = $l0 - $l1;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: long duration> = $l0;

        $f3 = r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_x>;

        $b3 = $f3 cmpl 0.0F;

        if $b3 != 0 goto label3;

        $f3 = r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_y>;

        $b3 = $f3 cmpl 0.0F;

        if $b3 != 0 goto label3;

        $f3 = r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_z>;

        $b3 = $f3 cmpl 0.0F;

        if $b3 != 0 goto label3;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.aishukeclassmfkb.util.ShakeInterface: long initTime> = $l0;

     label1:
        $f3 = r0.<com.aishukeclassmfkb.util.ShakeInterface: float shake>;

        $i2 = r0.<com.aishukeclassmfkb.util.ShakeInterface: int shakeThreshold>;

        $f4 = (float) $i2;

        $b3 = $f3 cmpl $f4;

        $i2 = (int) $b3;

        if $i2 < 0 goto label2;

        specialinvoke r0.<com.aishukeclassmfkb.util.ShakeInterface: void notifyListeners()>();

     label2:
        r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_x> = $f0;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_y> = $f1;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_z> = $f2;

        $l0 = r0.<com.aishukeclassmfkb.util.ShakeInterface: long curTime>;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: long lastTime> = $l0;

        return;

     label3:
        $f3 = r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_x>;

        $f3 = $f0 - $f3;

        $f4 = r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_x>;

        $f4 = $f0 - $f4;

        $f3 = $f3 * $f4;

        $f4 = r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_y>;

        $f4 = $f1 - $f4;

        $f5 = r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_y>;

        $f5 = $f1 - $f5;

        $f4 = $f4 * $f5;

        $f3 = $f3 + $f4;

        $f4 = r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_z>;

        $f4 = $f2 - $f4;

        $f5 = r0.<com.aishukeclassmfkb.util.ShakeInterface: float last_z>;

        $f5 = $f2 - $f5;

        $f4 = $f4 * $f5;

        $f3 = $f3 + $f4;

        $f3 = staticinvoke <android.util.FloatMath: float sqrt(float)>($f3);

        $l0 = r0.<com.aishukeclassmfkb.util.ShakeInterface: long duration>;

        $f4 = (float) $l0;

        $f3 = $f3 / $f4;

        $f3 = $f3 * 10000.0F;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: float shake> = $f3;

        goto label1;

     label4:
        return;
    }

    public void registerOnShakeListener(com.aishukeclassmfkb.util.ShakeInterface$OnShakeListener)
    {
        com.aishukeclassmfkb.util.ShakeInterface$OnShakeListener $r1;
        com.aishukeclassmfkb.util.ShakeInterface r0;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $r1 := @parameter0: com.aishukeclassmfkb.util.ShakeInterface$OnShakeListener;

        $r2 = r0.<com.aishukeclassmfkb.util.ShakeInterface: java.util.ArrayList mListeners>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.aishukeclassmfkb.util.ShakeInterface: java.util.ArrayList mListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void setRecoding(boolean)
    {
        com.aishukeclassmfkb.util.ShakeInterface r0;
        boolean $z0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $z0 := @parameter0: boolean;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: boolean isRecoding> = $z0;

        return;
    }

    public void setShakeThreshold(int)
    {
        int $i0;
        com.aishukeclassmfkb.util.ShakeInterface r0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $i0 := @parameter0: int;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: int shakeThreshold> = $i0;

        return;
    }

    public void setTimeInterval(int)
    {
        int $i0;
        com.aishukeclassmfkb.util.ShakeInterface r0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $i0 := @parameter0: int;

        r0.<com.aishukeclassmfkb.util.ShakeInterface: int TimeInterval> = $i0;

        return;
    }

    public void start()
    {
        java.lang.UnsupportedOperationException $r2;
        android.hardware.SensorManager $r1;
        android.hardware.Sensor $r3;
        com.aishukeclassmfkb.util.ShakeInterface r0;
        boolean $z0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $r1 = r0.<com.aishukeclassmfkb.util.ShakeInterface: android.hardware.SensorManager mSensorManager>;

        if $r1 != null goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<com.aishukeclassmfkb.util.ShakeInterface: android.hardware.SensorManager mSensorManager>;

        $r3 = virtualinvoke $r1.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(1);

        if $r3 != null goto label2;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;

     label2:
        $r1 = r0.<com.aishukeclassmfkb.util.ShakeInterface: android.hardware.SensorManager mSensorManager>;

        $z0 = virtualinvoke $r1.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>(r0, $r3, 1);

        if $z0 != 0 goto label3;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;

     label3:
        return;
    }

    public void stop()
    {
        android.hardware.SensorManager $r1;
        com.aishukeclassmfkb.util.ShakeInterface r0;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $r1 = r0.<com.aishukeclassmfkb.util.ShakeInterface: android.hardware.SensorManager mSensorManager>;

        if $r1 == null goto label1;

        $r1 = r0.<com.aishukeclassmfkb.util.ShakeInterface: android.hardware.SensorManager mSensorManager>;

        virtualinvoke $r1.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>(r0);

     label1:
        return;
    }

    public void unregisterOnShakeListener(com.aishukeclassmfkb.util.ShakeInterface$OnShakeListener)
    {
        com.aishukeclassmfkb.util.ShakeInterface r0;
        com.aishukeclassmfkb.util.ShakeInterface$OnShakeListener $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.aishukeclassmfkb.util.ShakeInterface;

        $r1 := @parameter0: com.aishukeclassmfkb.util.ShakeInterface$OnShakeListener;

        $r2 = r0.<com.aishukeclassmfkb.util.ShakeInterface: java.util.ArrayList mListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        return;
    }
}
