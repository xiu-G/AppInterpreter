public class io.vov.vitamio.MediaPlayer extends java.lang.Object
{
    private static final int CPU_FEATURE_ARMv7;
    private static final int CPU_FEATURE_LOW;
    private static final int CPU_FEATURE_NEON;
    private static final int CPU_FEATURE_VFPv3;
    private static final int MEDIA_BUFFERING_UPDATE;
    private static final int MEDIA_ERROR;
    public static final int MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK;
    public static final int MEDIA_ERROR_UNKNOWN;
    private static final int MEDIA_INFO;
    public static final int MEDIA_INFO_BUFFERING_END;
    public static final int MEDIA_INFO_BUFFERING_START;
    public static final int MEDIA_INFO_DOWNLOAD_RATE_CHANGED;
    public static final int MEDIA_INFO_NOT_SEEKABLE;
    public static final int MEDIA_INFO_VIDEO_TRACK_LAGGING;
    private static final int MEDIA_NOP;
    private static final int MEDIA_PLAYBACK_COMPLETE;
    private static final int MEDIA_PREPARED;
    private static final int MEDIA_SEEK_COMPLETE;
    private static final int MEDIA_SET_VIDEO_SIZE;
    private static final java.lang.String MEDIA_SUBTITLE_BYTES;
    private static final java.lang.String MEDIA_SUBTITLE_STRING;
    private static final java.lang.String MEDIA_SUBTITLE_TYPE;
    private static final int MEDIA_SUBTITLE_UPDATE;
    private static java.util.concurrent.atomic.AtomicBoolean NATIVE_LIB_LOADED;
    private static java.lang.Object NATIVE_LOCK;
    private static java.util.concurrent.atomic.AtomicBoolean NATIVE_OMX_LOADED;
    private static final int SUBTITLE_BITMAP;
    public static final int SUBTITLE_EXTERNAL;
    public static final int SUBTITLE_INTERNAL;
    private static final int SUBTITLE_TEXT;
    public static final java.lang.String[] SUB_TYPES;
    public static final int VIDEOQUALITY_HIGH;
    public static final int VIDEOQUALITY_LOW;
    public static final int VIDEOQUALITY_MEDIUM;
    private android.media.AudioTrack mAudioTrack;
    private int mAudioTrackBufferSize;
    private android.graphics.Bitmap mBitmap;
    private java.nio.ByteBuffer mByteBuffer;
    private android.content.Context mContext;
    private io.vov.vitamio.MediaPlayer$EventHandler mEventHandler;
    private android.content.res.AssetFileDescriptor mFD;
    private android.view.Surface mLocalSurface;
    private io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener;
    private io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener;
    private io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener;
    private io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener mOnHWRenderFailedListener;
    private io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener;
    private io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener;
    private io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener;
    private io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener mOnSubtitleUpdateListener;
    private io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mOnVideoSizeChangedListener;
    private boolean mScreenOnWhilePlaying;
    private boolean mStayAwake;
    private android.view.Surface mSurface;
    private android.view.SurfaceHolder mSurfaceHolder;
    private android.os.PowerManager$WakeLock mWakeLock;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicBoolean $r0;
        java.lang.Object $r1;
        java.lang.String[] $r2;

        <io.vov.vitamio.MediaPlayer: int VIDEOQUALITY_LOW> = -16;

        <io.vov.vitamio.MediaPlayer: int VIDEOQUALITY_HIGH> = 16;

        <io.vov.vitamio.MediaPlayer: int SUBTITLE_TEXT> = 0;

        <io.vov.vitamio.MediaPlayer: int SUBTITLE_INTERNAL> = 0;

        <io.vov.vitamio.MediaPlayer: int SUBTITLE_EXTERNAL> = 1;

        <io.vov.vitamio.MediaPlayer: int SUBTITLE_BITMAP> = 1;

        <io.vov.vitamio.MediaPlayer: int MEDIA_SUBTITLE_UPDATE> = 1000;

        <io.vov.vitamio.MediaPlayer: java.lang.String MEDIA_SUBTITLE_TYPE> = "sub_type";

        <io.vov.vitamio.MediaPlayer: java.lang.String MEDIA_SUBTITLE_STRING> = "sub_string";

        <io.vov.vitamio.MediaPlayer: java.lang.String MEDIA_SUBTITLE_BYTES> = "sub_bytes";

        <io.vov.vitamio.MediaPlayer: int MEDIA_SET_VIDEO_SIZE> = 5;

        <io.vov.vitamio.MediaPlayer: int MEDIA_SEEK_COMPLETE> = 4;

        <io.vov.vitamio.MediaPlayer: int MEDIA_PREPARED> = 1;

        <io.vov.vitamio.MediaPlayer: int MEDIA_PLAYBACK_COMPLETE> = 2;

        <io.vov.vitamio.MediaPlayer: int MEDIA_NOP> = 0;

        <io.vov.vitamio.MediaPlayer: int MEDIA_INFO_VIDEO_TRACK_LAGGING> = 700;

        <io.vov.vitamio.MediaPlayer: int MEDIA_INFO_NOT_SEEKABLE> = 801;

        <io.vov.vitamio.MediaPlayer: int MEDIA_INFO_DOWNLOAD_RATE_CHANGED> = 901;

        <io.vov.vitamio.MediaPlayer: int MEDIA_INFO_BUFFERING_START> = 701;

        <io.vov.vitamio.MediaPlayer: int MEDIA_INFO_BUFFERING_END> = 702;

        <io.vov.vitamio.MediaPlayer: int MEDIA_INFO> = 200;

        <io.vov.vitamio.MediaPlayer: int MEDIA_ERROR_UNKNOWN> = 1;

        <io.vov.vitamio.MediaPlayer: int MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK> = 200;

        <io.vov.vitamio.MediaPlayer: int MEDIA_ERROR> = 100;

        <io.vov.vitamio.MediaPlayer: int MEDIA_BUFFERING_UPDATE> = 3;

        <io.vov.vitamio.MediaPlayer: int CPU_FEATURE_VFPv3> = 1;

        <io.vov.vitamio.MediaPlayer: int CPU_FEATURE_NEON> = 3;

        <io.vov.vitamio.MediaPlayer: int CPU_FEATURE_LOW> = -1;

        <io.vov.vitamio.MediaPlayer: int CPU_FEATURE_ARMv7> = 2;

        $r0 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        <io.vov.vitamio.MediaPlayer: java.util.concurrent.atomic.AtomicBoolean NATIVE_LIB_LOADED> = $r0;

        $r0 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        <io.vov.vitamio.MediaPlayer: java.util.concurrent.atomic.AtomicBoolean NATIVE_OMX_LOADED> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <io.vov.vitamio.MediaPlayer: java.lang.Object NATIVE_LOCK> = $r1;

        $r2 = newarray (java.lang.String)[6];

        $r2[0] = ".srt";

        $r2[1] = ".ssa";

        $r2[2] = ".smi";

        $r2[3] = ".txt";

        $r2[4] = ".sub";

        $r2[5] = ".ass";

        <io.vov.vitamio.MediaPlayer: java.lang.String[] SUB_TYPES> = $r2;

        return;
    }

    public void <init>(android.content.Context)
    {
        io.vov.vitamio.MediaPlayer r0;
        android.content.Context $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void <init>(android.content.Context,boolean)>($r1, 0);

        return;
    }

    public void <init>(android.content.Context, boolean)
    {
        java.lang.Throwable $r11;
        android.content.Context $r1;
        java.lang.Object[] $r6;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        io.vov.vitamio.MediaPlayer$EventHandler $r10;
        io.vov.vitamio.MediaPlayer r0;
        android.os.Looper $r9;
        int $i0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7;
        java.lang.UnsatisfiedLinkError r2;
        java.lang.String $r4, $r8;
        boolean $z0, $z1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock> = null;

        r0.<io.vov.vitamio.MediaPlayer: android.content.res.AssetFileDescriptor mFD> = null;

        r0.<io.vov.vitamio.MediaPlayer: android.content.Context mContext> = $r1;

        $r3 = <io.vov.vitamio.MediaPlayer: java.lang.Object NATIVE_LOCK>;

        entermonitor $r3;

     label01:
        $r4 = staticinvoke <io.vov.vitamio.Vitamio: java.lang.String getLibraryPath()>();

        $r5 = <io.vov.vitamio.MediaPlayer: java.util.concurrent.atomic.AtomicBoolean NATIVE_LIB_LOADED>;

        $z1 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

     label02:
        if $z1 != 0 goto label26;

     label03:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r4;

     label04:
        staticinvoke <io.vov.utils.Log: void i(java.lang.String,java.lang.Object[])>("LIB ROOT: %s", $r6);

        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libstlport_shared.so");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: void load(java.lang.String)>($r8);

        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libvplayer.so");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: void load(java.lang.String)>($r8);

        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libffmpeg.so");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.vov.vitamio.MediaPlayer: boolean loadFFmpeg_native(java.lang.String)>($r8);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label05:
        if $i0 <= 8 goto label16;

     label06:
        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libvvo.9.so");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = staticinvoke <io.vov.vitamio.MediaPlayer: boolean loadVVO_native(java.lang.String)>($r8);

     label07:
        if $z1 != 0 goto label11;

     label08:
        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libvvo.j.so");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = staticinvoke <io.vov.vitamio.MediaPlayer: boolean loadVVO_native(java.lang.String)>($r8);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("FALLBACK TO JNI ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r6 = newarray (java.lang.Object)[0];

     label10:
        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>($r8, $r6);

     label11:
        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libvao.0.so");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.vov.vitamio.MediaPlayer: boolean loadVAO_native(java.lang.String)>($r8);

        $r5 = <io.vov.vitamio.MediaPlayer: java.util.concurrent.atomic.AtomicBoolean NATIVE_LIB_LOADED>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label12:
        goto label26;

     label13:
        exitmonitor $r3;

     label14:
        $r9 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r9 == null goto label28;

        $r10 = new io.vov.vitamio.MediaPlayer$EventHandler;

        specialinvoke $r10.<io.vov.vitamio.MediaPlayer$EventHandler: void <init>(io.vov.vitamio.MediaPlayer,io.vov.vitamio.MediaPlayer,android.os.Looper)>(r0, r0, $r9);

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler> = $r10;

     label15:
        $r4 = staticinvoke <io.vov.vitamio.Vitamio: java.lang.String getVitamioPackage()>();

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void native_init(java.lang.String)>($r4);

        return;

     label16:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label17:
        if $i0 <= 7 goto label20;

     label18:
        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libvvo.8.so");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = staticinvoke <io.vov.vitamio.MediaPlayer: boolean loadVVO_native(java.lang.String)>($r8);

     label19:
        goto label07;

     label20:
        $r7 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libvvo.7.so");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = staticinvoke <io.vov.vitamio.MediaPlayer: boolean loadVVO_native(java.lang.String)>($r8);

     label21:
        goto label07;

     label22:
        r2 := @caughtexception;

     label23:
        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("Error loading libs", r2);

        $r5 = <io.vov.vitamio.MediaPlayer: java.util.concurrent.atomic.AtomicBoolean NATIVE_LIB_LOADED>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        goto label26;

     label24:
        $r11 := @caughtexception;

        exitmonitor $r3;

     label25:
        throw $r11;

     label26:
        staticinvoke <io.vov.vitamio.MediaPlayer: void unloadOMX_native()>();

        $r5 = <io.vov.vitamio.MediaPlayer: java.util.concurrent.atomic.AtomicBoolean NATIVE_OMX_LOADED>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

     label27:
        goto label13;

     label28:
        $r9 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r9 == null goto label29;

        $r10 = new io.vov.vitamio.MediaPlayer$EventHandler;

        specialinvoke $r10.<io.vov.vitamio.MediaPlayer$EventHandler: void <init>(io.vov.vitamio.MediaPlayer,io.vov.vitamio.MediaPlayer,android.os.Looper)>(r0, r0, $r9);

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler> = $r10;

        goto label15;

     label29:
        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler> = null;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.UnsatisfiedLinkError from label04 to label05 with label22;
        catch java.lang.UnsatisfiedLinkError from label06 to label07 with label22;
        catch java.lang.UnsatisfiedLinkError from label08 to label09 with label22;
        catch java.lang.UnsatisfiedLinkError from label10 to label12 with label22;
        catch java.lang.Throwable from label03 to label12 with label24;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.UnsatisfiedLinkError from label16 to label17 with label22;
        catch java.lang.UnsatisfiedLinkError from label18 to label19 with label22;
        catch java.lang.UnsatisfiedLinkError from label20 to label21 with label22;
        catch java.lang.Throwable from label16 to label21 with label24;
        catch java.lang.Throwable from label23 to label25 with label24;
        catch java.lang.Throwable from label26 to label27 with label24;
    }

    private native void _pause() throws java.lang.IllegalStateException;

    private native void _release();

    private native void _reset();

    private native void _setVideoSurface();

    private native void _start() throws java.lang.IllegalStateException;

    private native void _stop() throws java.lang.IllegalStateException;

    static io.vov.vitamio.MediaPlayer$OnPreparedListener access$0(io.vov.vitamio.MediaPlayer)
    {
        io.vov.vitamio.MediaPlayer $r0;
        io.vov.vitamio.MediaPlayer$OnPreparedListener r1;

        $r0 := @parameter0: io.vov.vitamio.MediaPlayer;

        r1 = $r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener>;

        return r1;
    }

    static io.vov.vitamio.MediaPlayer$OnCompletionListener access$1(io.vov.vitamio.MediaPlayer)
    {
        io.vov.vitamio.MediaPlayer $r0;
        io.vov.vitamio.MediaPlayer$OnCompletionListener r1;

        $r0 := @parameter0: io.vov.vitamio.MediaPlayer;

        r1 = $r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener>;

        return r1;
    }

    static void access$2(io.vov.vitamio.MediaPlayer, boolean)
    {
        io.vov.vitamio.MediaPlayer $r0;
        boolean $z0;

        $r0 := @parameter0: io.vov.vitamio.MediaPlayer;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<io.vov.vitamio.MediaPlayer: void stayAwake(boolean)>($z0);

        return;
    }

    static io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$3(io.vov.vitamio.MediaPlayer)
    {
        io.vov.vitamio.MediaPlayer $r0;
        io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener r1;

        $r0 := @parameter0: io.vov.vitamio.MediaPlayer;

        r1 = $r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener>;

        return r1;
    }

    static io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$4(io.vov.vitamio.MediaPlayer)
    {
        io.vov.vitamio.MediaPlayer $r0;
        io.vov.vitamio.MediaPlayer$OnSeekCompleteListener r1;

        $r0 := @parameter0: io.vov.vitamio.MediaPlayer;

        r1 = $r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener>;

        return r1;
    }

    static io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener access$5(io.vov.vitamio.MediaPlayer)
    {
        io.vov.vitamio.MediaPlayer $r0;
        io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener r1;

        $r0 := @parameter0: io.vov.vitamio.MediaPlayer;

        r1 = $r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mOnVideoSizeChangedListener>;

        return r1;
    }

    static io.vov.vitamio.MediaPlayer$OnErrorListener access$6(io.vov.vitamio.MediaPlayer)
    {
        io.vov.vitamio.MediaPlayer $r0;
        io.vov.vitamio.MediaPlayer$OnErrorListener r1;

        $r0 := @parameter0: io.vov.vitamio.MediaPlayer;

        r1 = $r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener>;

        return r1;
    }

    static io.vov.vitamio.MediaPlayer$OnInfoListener access$7(io.vov.vitamio.MediaPlayer)
    {
        io.vov.vitamio.MediaPlayer $r0;
        io.vov.vitamio.MediaPlayer$OnInfoListener r1;

        $r0 := @parameter0: io.vov.vitamio.MediaPlayer;

        r1 = $r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener>;

        return r1;
    }

    static io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener access$8(io.vov.vitamio.MediaPlayer)
    {
        io.vov.vitamio.MediaPlayer $r0;
        io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener r1;

        $r0 := @parameter0: io.vov.vitamio.MediaPlayer;

        r1 = $r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener mOnSubtitleUpdateListener>;

        return r1;
    }

    private int audioTrackInit(int, int)
    {
        io.vov.vitamio.MediaPlayer r0;
        byte b2;
        int $i0, $i1;
        android.media.AudioTrack $r2;
        java.lang.Exception r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void audioTrackRelease()>();

        if $i1 < 2 goto label5;

        b2 = 12;

     label1:
        $i1 = staticinvoke <android.media.AudioTrack: int getMinBufferSize(int,int,int)>($i0, b2, 2);

        r0.<io.vov.vitamio.MediaPlayer: int mAudioTrackBufferSize> = $i1;

     label2:
        $r2 = new android.media.AudioTrack;

     label3:
        $i1 = r0.<io.vov.vitamio.MediaPlayer: int mAudioTrackBufferSize>;

        specialinvoke $r2.<android.media.AudioTrack: void <init>(int,int,int,int,int,int)>(3, $i0, b2, 2, $i1, 1);

        r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack> = $r2;

     label4:
        $i0 = r0.<io.vov.vitamio.MediaPlayer: int mAudioTrackBufferSize>;

        return $i0;

     label5:
        b2 = 4;

        goto label1;

     label6:
        r1 := @caughtexception;

        r0.<io.vov.vitamio.MediaPlayer: int mAudioTrackBufferSize> = 0;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("audioTrackInit", r1);

        goto label4;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    private void audioTrackPause()
    {
        int $i0;
        io.vov.vitamio.MediaPlayer r0;
        android.media.AudioTrack $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        if $r1 == null goto label1;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        $i0 = virtualinvoke $r1.<android.media.AudioTrack: int getState()>();

        if $i0 != 1 goto label1;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        virtualinvoke $r1.<android.media.AudioTrack: void pause()>();

     label1:
        return;
    }

    private void audioTrackRelease()
    {
        int $i0;
        io.vov.vitamio.MediaPlayer r0;
        android.media.AudioTrack $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        if $r1 == null goto label2;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        $i0 = virtualinvoke $r1.<android.media.AudioTrack: int getState()>();

        if $i0 != 1 goto label1;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        virtualinvoke $r1.<android.media.AudioTrack: void stop()>();

     label1:
        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        virtualinvoke $r1.<android.media.AudioTrack: void release()>();

     label2:
        r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack> = null;

        return;
    }

    private void audioTrackSetVolume(float, float)
    {
        io.vov.vitamio.MediaPlayer r0;
        float $f0, $f1;
        android.media.AudioTrack $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        if $r1 == null goto label1;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        virtualinvoke $r1.<android.media.AudioTrack: int setStereoVolume(float,float)>($f0, $f1);

     label1:
        return;
    }

    private void audioTrackStart()
    {
        int $i0;
        io.vov.vitamio.MediaPlayer r0;
        android.media.AudioTrack $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        if $r1 == null goto label1;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        $i0 = virtualinvoke $r1.<android.media.AudioTrack: int getState()>();

        if $i0 != 1 goto label1;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        $i0 = virtualinvoke $r1.<android.media.AudioTrack: int getPlayState()>();

        if $i0 == 3 goto label1;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        virtualinvoke $r1.<android.media.AudioTrack: void play()>();

     label1:
        return;
    }

    private void audioTrackWrite(byte[], int, int)
    {
        io.vov.vitamio.MediaPlayer r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        android.media.AudioTrack $r2;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        if $r2 == null goto label5;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void audioTrackStart()>();

     label1:
        if $i1 > 0 goto label2;

        return;

     label2:
        $i2 = r0.<io.vov.vitamio.MediaPlayer: int mAudioTrackBufferSize>;

        if $i1 <= $i2 goto label4;

        $i2 = r0.<io.vov.vitamio.MediaPlayer: int mAudioTrackBufferSize>;

     label3:
        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack>;

        virtualinvoke $r2.<android.media.AudioTrack: int write(byte[],int,int)>($r1, $i0, $i2);

        $i1 = $i1 - $i2;

        $i0 = $i0 + $i2;

        goto label1;

     label4:
        $i2 = $i1;

        goto label3;

     label5:
        return;
    }

    private void closeFD()
    {
        java.lang.Throwable r1;
        android.content.res.AssetFileDescriptor $r2;
        io.vov.vitamio.MediaPlayer r0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.content.res.AssetFileDescriptor mFD>;

        if $r2 == null goto label4;

        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.content.res.AssetFileDescriptor mFD>;

     label1:
        virtualinvoke $r2.<android.content.res.AssetFileDescriptor: void close()>();

     label2:
        r0.<io.vov.vitamio.MediaPlayer: android.content.res.AssetFileDescriptor mFD> = null;

        return;

     label3:
        r1 := @caughtexception;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("closeFD", r1);

        goto label2;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private native byte[] getAudioTracks();

    private static native int getCPUFeature();

    private native byte[] getSubTracks();

    private java.util.HashMap getTrackMap(byte[], java.lang.String)
    {
        java.lang.Throwable $r9;
        byte[] $r1;
        java.util.HashMap r4;
        java.lang.String[] $r6, $r7;
        java.lang.Integer $r8;
        java.lang.Exception r3;
        io.vov.vitamio.MediaPlayer r0;
        int $i0, $i1, $i2;
        java.lang.String $r2, r5;
        boolean $z0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $i1 = 0;

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        r5 = new java.lang.String;

     label01:
        specialinvoke r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, $r2);

     label02:
        $r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("!#!");

        $i0 = lengthof $r6;

     label03:
        if $i1 < $i0 goto label05;

        return r4;

     label04:
        r3 := @caughtexception;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("getTrackMap", r3);

        r5 = new java.lang.String;

        specialinvoke r5.<java.lang.String: void <init>(byte[])>($r1);

        goto label02;

     label05:
        $r2 = $r6[$i1];

     label06:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

     label07:
        if $z0 == 0 goto label13;

     label08:
        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

     label09:
        r5 = $r7[0];

     label10:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

     label11:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r8);

     label12:
        $i1 = $i1 + 1;

        goto label03;

     label13:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label14:
        goto label11;

     label15:
        $r9 := @caughtexception;

        goto label12;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.NumberFormatException from label06 to label07 with label15;
        catch java.lang.NumberFormatException from label08 to label09 with label15;
        catch java.lang.NumberFormatException from label10 to label11 with label15;
        catch java.lang.NumberFormatException from label11 to label12 with label15;
        catch java.lang.NumberFormatException from label13 to label14 with label15;
    }

    private native int getVideoHeight_a();

    private native int getVideoWidth_a();

    public static final boolean isLibraryLoaded()
    {
        java.util.concurrent.atomic.AtomicBoolean $r0;
        boolean $z0;

        $r0 = <io.vov.vitamio.MediaPlayer: java.util.concurrent.atomic.AtomicBoolean NATIVE_LIB_LOADED>;

        $z0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    private static native boolean loadFFmpeg_native(java.lang.String);

    private static native boolean loadOMX_native(java.lang.String);

    private static native boolean loadVAO_native(java.lang.String);

    private static native boolean loadVVO_native(java.lang.String);

    private final native void native_finalize();

    private final native void native_init(java.lang.String);

    private void onHWRenderFailed()
    {
        io.vov.vitamio.MediaPlayer r0;
        io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener mOnHWRenderFailedListener>;

        if $r1 == null goto label1;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener mOnHWRenderFailedListener>;

        interfaceinvoke $r1.<io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener: void onFailed()>();

     label1:
        return;
    }

    private static void postEventFromNative(java.lang.Object, int, int, int, java.lang.Object)
    {
        io.vov.vitamio.MediaPlayer$EventHandler $r4;
        io.vov.vitamio.MediaPlayer r3;
        android.os.Message $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r0, $r1;

        $r0 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        r3 = (io.vov.vitamio.MediaPlayer) $r0;

        if r3 != null goto label1;

        return;

     label1:
        $r4 = r3.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler>;

        if $r4 == null goto label2;

        $r4 = r3.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler>;

        $r2 = virtualinvoke $r4.<io.vov.vitamio.MediaPlayer$EventHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>($i0, $i1, $i2, $r1);

        $r4 = r3.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler>;

        virtualinvoke $r4.<io.vov.vitamio.MediaPlayer$EventHandler: boolean sendMessage(android.os.Message)>($r2);

     label2:
        return;
    }

    protected static native boolean postMessage(java.lang.String);

    private void stayAwake(boolean)
    {
        io.vov.vitamio.MediaPlayer r0;
        android.os.PowerManager$WakeLock $r1;
        boolean $z0, $z1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $z0 := @parameter0: boolean;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        if $r1 == null goto label1;

        if $z0 == 0 goto label2;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        $z1 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z1 != 0 goto label2;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

     label1:
        r0.<io.vov.vitamio.MediaPlayer: boolean mStayAwake> = $z0;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void updateSurfaceScreenOn()>();

        return;

     label2:
        if $z0 != 0 goto label1;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        $z1 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void release()>();

        goto label1;
    }

    private java.nio.ByteBuffer surfaceInit()
    {
        java.lang.Throwable $r5;
        android.view.Surface $r1;
        android.graphics.Bitmap$Config $r2;
        java.nio.ByteBuffer $r4;
        io.vov.vitamio.MediaPlayer r0;
        android.graphics.Bitmap $r3;
        int $i0, $i1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        entermonitor r0;

     label1:
        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.view.Surface mSurface>;

        r0.<io.vov.vitamio.MediaPlayer: android.view.Surface mLocalSurface> = $r1;

        $i0 = specialinvoke r0.<io.vov.vitamio.MediaPlayer: int getVideoWidth_a()>();

        $i1 = specialinvoke r0.<io.vov.vitamio.MediaPlayer: int getVideoHeight_a()>();

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.view.Surface mLocalSurface>;

        if $r1 == null goto label4;

        if $i0 == 0 goto label4;

        if $i1 == 0 goto label4;

        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r2);

        r0.<io.vov.vitamio.MediaPlayer: android.graphics.Bitmap mBitmap> = $r3;

        $i0 = $i0 * $i1;

        $i0 = $i0 * 2;

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i0);

        r0.<io.vov.vitamio.MediaPlayer: java.nio.ByteBuffer mByteBuffer> = $r4;

     label2:
        $r4 = r0.<io.vov.vitamio.MediaPlayer: java.nio.ByteBuffer mByteBuffer>;

        exitmonitor r0;

     label3:
        return $r4;

     label4:
        r0.<io.vov.vitamio.MediaPlayer: android.graphics.Bitmap mBitmap> = null;

        r0.<io.vov.vitamio.MediaPlayer: java.nio.ByteBuffer mByteBuffer> = null;

        goto label2;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    private void surfaceRelease()
    {
        java.lang.Throwable $r1;
        io.vov.vitamio.MediaPlayer r0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        entermonitor r0;

     label1:
        r0.<io.vov.vitamio.MediaPlayer: android.view.Surface mLocalSurface> = null;

        r0.<io.vov.vitamio.MediaPlayer: android.graphics.Bitmap mBitmap> = null;

        r0.<io.vov.vitamio.MediaPlayer: java.nio.ByteBuffer mByteBuffer> = null;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void surfaceRender()
    {
        java.lang.Throwable $r6;
        android.view.Surface $r2;
        java.lang.Exception r1;
        java.nio.ByteBuffer $r4;
        io.vov.vitamio.MediaPlayer r0;
        android.graphics.Bitmap $r3;
        android.graphics.Canvas $r5;
        boolean $z0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        entermonitor r0;

     label01:
        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.view.Surface mLocalSurface>;

        if $r2 == null goto label02;

        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.view.Surface mLocalSurface>;

        $z0 = virtualinvoke $r2.<android.view.Surface: boolean isValid()>();

        if $z0 == 0 goto label02;

        $r3 = r0.<io.vov.vitamio.MediaPlayer: android.graphics.Bitmap mBitmap>;

        if $r3 == null goto label02;

        $r4 = r0.<io.vov.vitamio.MediaPlayer: java.nio.ByteBuffer mByteBuffer>;

        if $r4 != null goto label04;

     label02:
        exitmonitor r0;

     label03:
        return;

     label04:
        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.view.Surface mLocalSurface>;

        $r5 = virtualinvoke $r2.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(null);

        $r3 = r0.<io.vov.vitamio.MediaPlayer: android.graphics.Bitmap mBitmap>;

        $r4 = r0.<io.vov.vitamio.MediaPlayer: java.nio.ByteBuffer mByteBuffer>;

        virtualinvoke $r3.<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>($r4);

        $r3 = r0.<io.vov.vitamio.MediaPlayer: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r5.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r3, 0.0F, 0.0F, null);

        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.view.Surface mLocalSurface>;

        virtualinvoke $r2.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>($r5);

     label05:
        exitmonitor r0;

     label06:
        return;

     label07:
        $r6 := @caughtexception;

        exitmonitor r0;

     label08:
        throw $r6;

     label09:
        r1 := @caughtexception;

     label10:
        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("surfaceRender", r1);

     label11:
        goto label05;

        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    private static native void unloadOMX_native();

    private void updateSub(int, byte[], java.lang.String, int, int)
    {
        java.lang.Throwable r3;
        byte[] $r1;
        android.os.Bundle $r6;
        io.vov.vitamio.MediaPlayer$EventHandler $r4;
        io.vov.vitamio.MediaPlayer r0;
        android.os.Message $r5;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r7;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: java.lang.String;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $r4 = r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler>;

        if $r4 == null goto label7;

        $r4 = r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler>;

        $r5 = virtualinvoke $r4.<io.vov.vitamio.MediaPlayer$EventHandler: android.os.Message obtainMessage(int,int,int)>(1000, $i1, $i2);

        $r6 = virtualinvoke $r5.<android.os.Message: android.os.Bundle getData()>();

        if $i0 != 0 goto label6;

        virtualinvoke $r6.<android.os.Bundle: void putInt(java.lang.String,int)>("sub_type", 0);

        if $r2 != null goto label2;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r1);

        virtualinvoke $r6.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sub_string", $r2);

     label1:
        $r4 = r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler>;

        virtualinvoke $r4.<io.vov.vitamio.MediaPlayer$EventHandler: boolean sendMessage(android.os.Message)>($r5);

        return;

     label2:
        $r7 = new java.lang.String;

     label3:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r7.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, $r2);

        virtualinvoke $r6.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sub_string", $r7);

     label4:
        goto label1;

     label5:
        r3 := @caughtexception;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("updateSub", r3);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r1);

        virtualinvoke $r6.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sub_string", $r2);

        goto label1;

     label6:
        if $i0 != 1 goto label1;

        virtualinvoke $r6.<android.os.Bundle: void putInt(java.lang.String,int)>("sub_type", 1);

        virtualinvoke $r6.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("sub_bytes", $r1);

        goto label1;

     label7:
        return;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    private void updateSurfaceScreenOn()
    {
        io.vov.vitamio.MediaPlayer r0;
        android.view.SurfaceHolder $r1;
        boolean $z0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.view.SurfaceHolder mSurfaceHolder>;

        if $r1 == null goto label3;

        $r1 = r0.<io.vov.vitamio.MediaPlayer: android.view.SurfaceHolder mSurfaceHolder>;

        $z0 = r0.<io.vov.vitamio.MediaPlayer: boolean mScreenOnWhilePlaying>;

        if $z0 == 0 goto label2;

        $z0 = r0.<io.vov.vitamio.MediaPlayer: boolean mStayAwake>;

        if $z0 == 0 goto label2;

        $z0 = 1;

     label1:
        interfaceinvoke $r1.<android.view.SurfaceHolder: void setKeepScreenOn(boolean)>($z0);

        return;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return;
    }

    protected native void _releaseVideoSurface();

    protected void finalize()
    {
        io.vov.vitamio.MediaPlayer r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 = <io.vov.vitamio.MediaPlayer: java.util.concurrent.atomic.AtomicBoolean NATIVE_LIB_LOADED>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void native_finalize()>();

     label1:
        return;
    }

    public native int getAudioTrack();

    public java.util.HashMap getAudioTrackMap(java.lang.String)
    {
        io.vov.vitamio.MediaPlayer r0;
        byte[] $r2;
        java.util.HashMap $r3;
        java.lang.String $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<io.vov.vitamio.MediaPlayer: byte[] getAudioTracks()>();

        $r3 = specialinvoke r0.<io.vov.vitamio.MediaPlayer: java.util.HashMap getTrackMap(byte[],java.lang.String)>($r2, $r1);

        return $r3;
    }

    public native int getBufferProgress();

    public native android.graphics.Bitmap getCurrentFrame();

    public native long getCurrentPosition();

    public native long getDuration();

    public native java.lang.String getMetaEncoding();

    public native int getSubLocation();

    public native java.lang.String getSubPath();

    public native int getSubTrack();

    public java.util.HashMap getSubTrackMap(java.lang.String)
    {
        io.vov.vitamio.MediaPlayer r0;
        byte[] $r2;
        java.util.HashMap $r3;
        java.lang.String $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<io.vov.vitamio.MediaPlayer: byte[] getSubTracks()>();

        $r3 = specialinvoke r0.<io.vov.vitamio.MediaPlayer: java.util.HashMap getTrackMap(byte[],java.lang.String)>($r2, $r1);

        return $r3;
    }

    public native float getVideoAspectRatio();

    public native int getVideoHeight();

    public native int getVideoWidth();

    public native boolean isBuffering();

    public native boolean isPlaying();

    public void pause() throws java.lang.IllegalStateException
    {
        io.vov.vitamio.MediaPlayer r0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void stayAwake(boolean)>(0);

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void _pause()>();

        return;
    }

    public native void prepare() throws java.io.IOException, java.lang.IllegalStateException;

    public native void prepareAsync() throws java.lang.IllegalStateException;

    public void release()
    {
        io.vov.vitamio.MediaPlayer r0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void stayAwake(boolean)>(0);

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void updateSurfaceScreenOn()>();

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener> = null;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener> = null;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener> = null;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener> = null;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener> = null;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener> = null;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mOnVideoSizeChangedListener> = null;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void _release()>();

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void closeFD()>();

        return;
    }

    public void releaseDisplay()
    {
        io.vov.vitamio.MediaPlayer r0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        virtualinvoke r0.<io.vov.vitamio.MediaPlayer: void _releaseVideoSurface()>();

        r0.<io.vov.vitamio.MediaPlayer: android.view.SurfaceHolder mSurfaceHolder> = null;

        r0.<io.vov.vitamio.MediaPlayer: android.view.Surface mSurface> = null;

        return;
    }

    public void reset()
    {
        io.vov.vitamio.MediaPlayer$EventHandler $r1;
        io.vov.vitamio.MediaPlayer r0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void stayAwake(boolean)>(0);

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void _reset()>();

        $r1 = r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler>;

        virtualinvoke $r1.<io.vov.vitamio.MediaPlayer$EventHandler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void closeFD()>();

        return;
    }

    public native void seekTo(long) throws java.lang.IllegalStateException;

    public native void setAudioTrack(int);

    public native void setBufferSize(int);

    public void setDataSource(android.content.Context, android.net.Uri) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.SecurityException, java.lang.IllegalStateException
    {
        android.content.res.AssetFileDescriptor $r7;
        android.content.Context $r1;
        android.os.ParcelFileDescriptor $r8;
        android.net.Uri $r2;
        java.lang.IllegalArgumentException $r4;
        java.lang.Exception r3;
        io.vov.vitamio.MediaPlayer r0;
        android.content.ContentResolver $r6;
        java.io.FileDescriptor $r9;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.net.Uri;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label2:
        $r5 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        if $r5 == null goto label3;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 == 0 goto label4;

     label3:
        $r5 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        $r5 = staticinvoke <io.vov.utils.FileUtils: java.lang.String getPath(java.lang.String)>($r5);

        virtualinvoke r0.<io.vov.vitamio.MediaPlayer: void setDataSource(java.lang.String)>($r5);

        return;

     label4:
        $r6 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke $r6.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>($r2, "r");

        r0.<io.vov.vitamio.MediaPlayer: android.content.res.AssetFileDescriptor mFD> = $r7;

        $r7 = r0.<io.vov.vitamio.MediaPlayer: android.content.res.AssetFileDescriptor mFD>;

     label5:
        if $r7 == null goto label9;

     label6:
        $r7 = r0.<io.vov.vitamio.MediaPlayer: android.content.res.AssetFileDescriptor mFD>;

        $r8 = virtualinvoke $r7.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>();

        $r9 = virtualinvoke $r8.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke r0.<io.vov.vitamio.MediaPlayer: void setDataSource(java.io.FileDescriptor)>($r9);

     label7:
        return;

     label8:
        r3 := @caughtexception;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void closeFD()>();

        $r5 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r0.<io.vov.vitamio.MediaPlayer: void setDataSource(java.lang.String)>($r5);

     label9:
        return;

        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public native void setDataSource(java.io.FileDescriptor) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;

    public native void setDataSource(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;

    public native void setDeinterlace(boolean);

    public void setDisplay(android.view.SurfaceHolder)
    {
        io.vov.vitamio.MediaPlayer r0;
        android.view.SurfaceHolder $r1;
        android.view.Surface $r2;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: android.view.SurfaceHolder;

        r0.<io.vov.vitamio.MediaPlayer: android.view.SurfaceHolder mSurfaceHolder> = $r1;

        if $r1 != null goto label2;

        $r2 = null;

     label1:
        r0.<io.vov.vitamio.MediaPlayer: android.view.Surface mSurface> = $r2;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void _setVideoSurface()>();

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void updateSurfaceScreenOn()>();

        return;

     label2:
        $r2 = interfaceinvoke $r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        goto label1;
    }

    public void setInitialAudioTrack(int)
    {
        int $i0;
        io.vov.vitamio.MediaPlayer r0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $i0 := @parameter0: int;

        return;
    }

    public void setInitialSubTrack(int)
    {
        int $i0;
        io.vov.vitamio.MediaPlayer r0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $i0 := @parameter0: int;

        return;
    }

    public native void setMetaEncoding(java.lang.String);

    public void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener)
    {
        io.vov.vitamio.MediaPlayer r0;
        io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener> = $r1;

        return;
    }

    public void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener)
    {
        io.vov.vitamio.MediaPlayer r0;
        io.vov.vitamio.MediaPlayer$OnCompletionListener $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: io.vov.vitamio.MediaPlayer$OnCompletionListener;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener> = $r1;

        return;
    }

    public void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener)
    {
        io.vov.vitamio.MediaPlayer r0;
        io.vov.vitamio.MediaPlayer$OnErrorListener $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: io.vov.vitamio.MediaPlayer$OnErrorListener;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener> = $r1;

        return;
    }

    public void setOnHWRenderFailedListener(io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener)
    {
        io.vov.vitamio.MediaPlayer r0;
        io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener mOnHWRenderFailedListener> = $r1;

        return;
    }

    public void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener)
    {
        io.vov.vitamio.MediaPlayer r0;
        io.vov.vitamio.MediaPlayer$OnInfoListener $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: io.vov.vitamio.MediaPlayer$OnInfoListener;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener> = $r1;

        return;
    }

    public void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener)
    {
        io.vov.vitamio.MediaPlayer r0;
        io.vov.vitamio.MediaPlayer$OnPreparedListener $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: io.vov.vitamio.MediaPlayer$OnPreparedListener;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener> = $r1;

        return;
    }

    public void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener)
    {
        io.vov.vitamio.MediaPlayer r0;
        io.vov.vitamio.MediaPlayer$OnSeekCompleteListener $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: io.vov.vitamio.MediaPlayer$OnSeekCompleteListener;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener> = $r1;

        return;
    }

    public void setOnSubtitleUpdateListener(io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener)
    {
        io.vov.vitamio.MediaPlayer r0;
        io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnSubtitleUpdateListener mOnSubtitleUpdateListener> = $r1;

        return;
    }

    public void setOnVideoSizeChangedListener(io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener)
    {
        io.vov.vitamio.MediaPlayer r0;
        io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener $r1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener;

        r0.<io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mOnVideoSizeChangedListener> = $r1;

        return;
    }

    public void setScreenOnWhilePlaying(boolean)
    {
        io.vov.vitamio.MediaPlayer r0;
        boolean $z0, $z1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $z0 := @parameter0: boolean;

        $z1 = r0.<io.vov.vitamio.MediaPlayer: boolean mScreenOnWhilePlaying>;

        if $z1 == 1 goto label1;

        r0.<io.vov.vitamio.MediaPlayer: boolean mScreenOnWhilePlaying> = 1;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void updateSurfaceScreenOn()>();

     label1:
        return;
    }

    public native void setSubEncoding(java.lang.String);

    public native void setSubPath(java.lang.String);

    public native void setSubShown(boolean);

    public native void setSubTrack(int);

    public native void setVideoQuality(int);

    public native void setVolume(float, float);

    public void setWakeMode(android.content.Context, int)
    {
        android.content.Context $r1;
        android.os.PowerManager$WakeLock $r2;
        io.vov.vitamio.MediaPlayer r0;
        android.os.PowerManager r4;
        int $i0;
        java.lang.Object $r3;
        java.lang.Class $r5;
        java.lang.String $r6;
        boolean z0, $z1;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        z0 = 0;

        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        if $r2 == null goto label2;

        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        $z1 = virtualinvoke $r2.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z1 == 0 goto label1;

        z0 = 1;

        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void release()>();

     label1:
        r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock> = null;

     label2:
        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r4 = (android.os.PowerManager) $r3;

        $i0 = 536870912 | $i0;

        $r5 = class "Lio/vov/vitamio/MediaPlayer;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke r4.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>($i0, $r6);

        r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock> = $r2;

        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        if z0 == 0 goto label3;

        $r2 = r0.<io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire()>();

     label3:
        return;
    }

    public void start() throws java.lang.IllegalStateException
    {
        io.vov.vitamio.MediaPlayer r0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void stayAwake(boolean)>(1);

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void _start()>();

        return;
    }

    public void stop() throws java.lang.IllegalStateException
    {
        io.vov.vitamio.MediaPlayer r0;

        r0 := @this: io.vov.vitamio.MediaPlayer;

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void stayAwake(boolean)>(0);

        specialinvoke r0.<io.vov.vitamio.MediaPlayer: void _stop()>();

        return;
    }
}
