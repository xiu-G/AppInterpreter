public class cs.utils.io.ChapingRecodeService extends java.lang.Object
{
    cs.utils.io.DBUtil dbUtil;
    java.lang.String tableName;

    public void <init>(android.content.Context)
    {
        cs.utils.io.ChapingRecodeService r0;
        android.content.Context $r1;
        cs.utils.io.DBUtil $r2;

        r0 := @this: cs.utils.io.ChapingRecodeService;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cs.utils.io.ChapingRecodeService: java.lang.String tableName> = "ChapingRecode";

        r0.<cs.utils.io.ChapingRecodeService: cs.utils.io.DBUtil dbUtil> = null;

        $r2 = new cs.utils.io.DBUtil;

        specialinvoke $r2.<cs.utils.io.DBUtil: void <init>(android.content.Context)>($r1);

        r0.<cs.utils.io.ChapingRecodeService: cs.utils.io.DBUtil dbUtil> = $r2;

        return;
    }

    public void add(java.lang.String)
    {
        java.lang.Throwable $r7;
        cs.utils.io.ChapingRecodeService r0;
        long $l0;
        android.database.sqlite.SQLiteDatabase r3, $r6;
        java.lang.Long $r4;
        cs.utils.io.DBUtil $r5;
        java.lang.String $r1;
        android.content.ContentValues r2;

        r0 := @this: cs.utils.io.ChapingRecodeService;

        $r1 := @parameter0: java.lang.String;

        r3 = null;

     label1:
        r2 = new android.content.ContentValues;

        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("packageName", $r1);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("showtime", $r4);

        $r5 = r0.<cs.utils.io.ChapingRecodeService: cs.utils.io.DBUtil dbUtil>;

        $r6 = virtualinvoke $r5.<cs.utils.io.DBUtil: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label2:
        r3 = $r6;

     label3:
        $r1 = r0.<cs.utils.io.ChapingRecodeService: java.lang.String tableName>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r1, null, r2);

     label4:
        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>($r6, null);

        return;

     label5:
        $r7 := @caughtexception;

        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>(r3, null);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getByPackageName(java.lang.String)
    {
        java.lang.Throwable $r12;
        java.util.Date $r11;
        java.lang.String[] $r8, $r9;
        long $l1;
        java.util.ArrayList r2;
        android.database.sqlite.SQLiteDatabase r3, $r6;
        cs.utils.io.DBUtil $r5;
        int $i0;
        java.lang.String $r1, $r7;
        android.database.Cursor r4, $r10;
        boolean $z0;
        cs.utils.io.ChapingRecodeService r0;

        r0 := @this: cs.utils.io.ChapingRecodeService;

        $r1 := @parameter0: java.lang.String;

        r3 = null;

        r4 = null;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label1:
        $r5 = r0.<cs.utils.io.ChapingRecodeService: cs.utils.io.DBUtil dbUtil>;

        $r6 = virtualinvoke $r5.<cs.utils.io.DBUtil: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label2:
        r3 = $r6;

     label3:
        $r7 = r0.<cs.utils.io.ChapingRecodeService: java.lang.String tableName>;

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = "packageName";

        $r8[1] = "showtime";

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = $r1;

        $r10 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, "packageName=?", $r9, null, null, "showtime desc");

     label4:
        r4 = $r10;

     label5:
        $z0 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToNext()>();

     label6:
        if $z0 != 0 goto label7;

        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>($r6, $r10);

        return r2;

     label7:
        $i0 = interfaceinvoke $r10.<android.database.Cursor: int getColumnIndex(java.lang.String)>("showtime");

        $l1 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>($i0);

        $r11 = new java.util.Date;

        specialinvoke $r11.<java.util.Date: void <init>(long)>($l1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);

     label8:
        goto label5;

     label9:
        $r12 := @caughtexception;

        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>(r3, r4);

        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public java.util.Date getLastshowTimeByPackageName(java.lang.String)
    {
        java.lang.Throwable $r11;
        java.util.Date r4;
        cs.utils.io.ChapingRecodeService r0;
        java.lang.String[] $r8, $r9;
        long $l1;
        android.database.sqlite.SQLiteDatabase r2, $r6;
        cs.utils.io.DBUtil $r5;
        int $i0;
        java.lang.String $r1, $r7;
        android.database.Cursor r3, $r10;
        boolean $z0;

        r0 := @this: cs.utils.io.ChapingRecodeService;

        $r1 := @parameter0: java.lang.String;

        r2 = null;

        r3 = null;

        r4 = new java.util.Date;

        specialinvoke r4.<java.util.Date: void <init>(long)>(0L);

     label1:
        $r5 = r0.<cs.utils.io.ChapingRecodeService: cs.utils.io.DBUtil dbUtil>;

        $r6 = virtualinvoke $r5.<cs.utils.io.DBUtil: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label2:
        r2 = $r6;

     label3:
        $r7 = r0.<cs.utils.io.ChapingRecodeService: java.lang.String tableName>;

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = "packageName";

        $r8[1] = "showtime";

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = $r1;

        $r10 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, "packageName=?", $r9, null, null, "showtime desc");

     label4:
        r3 = $r10;

     label5:
        $z0 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToFirst()>();

     label6:
        if $z0 == 0 goto label8;

     label7:
        $i0 = interfaceinvoke $r10.<android.database.Cursor: int getColumnIndex(java.lang.String)>("showtime");

        $l1 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>($i0);

        r4 = new java.util.Date;

        specialinvoke r4.<java.util.Date: void <init>(long)>($l1);

     label8:
        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>($r6, $r10);

        return r4;

     label9:
        $r11 := @caughtexception;

        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>(r2, r3);

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public java.util.Date getLastshowTimeOfAll()
    {
        java.lang.Throwable $r9;
        java.util.Date r3;
        cs.utils.io.ChapingRecodeService r0;
        java.lang.String[] $r7;
        long $l1;
        android.database.sqlite.SQLiteDatabase r1, $r5;
        cs.utils.io.DBUtil $r4;
        int $i0;
        java.lang.String $r6;
        android.database.Cursor r2, $r8;
        boolean $z0;

        r0 := @this: cs.utils.io.ChapingRecodeService;

        r1 = null;

        r2 = null;

        r3 = new java.util.Date;

        specialinvoke r3.<java.util.Date: void <init>(long)>(0L);

     label1:
        $r4 = r0.<cs.utils.io.ChapingRecodeService: cs.utils.io.DBUtil dbUtil>;

        $r5 = virtualinvoke $r4.<cs.utils.io.DBUtil: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label2:
        r1 = $r5;

     label3:
        $r6 = r0.<cs.utils.io.ChapingRecodeService: java.lang.String tableName>;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "packageName";

        $r7[1] = "showtime";

        $r8 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r6, $r7, null, null, null, null, "showtime desc");

     label4:
        r2 = $r8;

     label5:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

     label6:
        if $z0 == 0 goto label8;

     label7:
        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("showtime");

        $l1 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>($i0);

        r3 = new java.util.Date;

        specialinvoke r3.<java.util.Date: void <init>(long)>($l1);

     label8:
        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>($r5, $r8);

        return r3;

     label9:
        $r9 := @caughtexception;

        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>(r1, r2);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public int getTodayAppInsertCount(java.lang.String)
    {
        java.lang.Throwable $r14;
        java.util.Date $r7;
        java.lang.String[] $r11;
        long $l0;
        android.database.sqlite.SQLiteDatabase r2, $r5;
        java.util.Calendar $r6;
        cs.utils.io.DBUtil $r4;
        int $i1;
        java.lang.String $r1, $r10, $r12;
        android.database.Cursor r3, $r13;
        java.io.PrintStream $r8;
        cs.utils.io.ChapingRecodeService r0;
        java.lang.StringBuilder $r9;

        r0 := @this: cs.utils.io.ChapingRecodeService;

        $r1 := @parameter0: java.lang.String;

        r2 = null;

        r3 = null;

     label1:
        $r4 = r0.<cs.utils.io.ChapingRecodeService: cs.utils.io.DBUtil dbUtil>;

        $r5 = virtualinvoke $r4.<cs.utils.io.DBUtil: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label2:
        r2 = $r5;

     label3:
        $r6 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(13, 0);

        $r7 = virtualinvoke $r6.<java.util.Calendar: java.util.Date getTime()>();

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.Object)>($r7);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("select count(*) from ");

        $r10 = r0.<cs.utils.io.ChapingRecodeService: java.lang.String tableName>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where showtime>? and packageName=?");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.String)[2];

        $r9 = new java.lang.StringBuilder;

        $l0 = virtualinvoke $r7.<java.util.Date: long getTime()>();

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[0] = $r12;

        $r11[1] = $r1;

        $r13 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r10, $r11);

     label4:
        r3 = $r13;

     label5:
        interfaceinvoke $r13.<android.database.Cursor: boolean moveToFirst()>();

        $i1 = interfaceinvoke $r13.<android.database.Cursor: int getInt(int)>(0);

     label6:
        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>($r5, $r13);

        return $i1;

     label7:
        $r14 := @caughtexception;

        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>(r2, r3);

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public int getTodayInsertCount()
    {
        java.lang.Throwable $r13;
        java.util.Date $r6;
        java.lang.String[] $r10;
        long $l0;
        android.database.sqlite.SQLiteDatabase r1, $r4;
        java.util.Calendar $r5;
        cs.utils.io.DBUtil $r3;
        int $i1;
        java.lang.String $r9, $r11;
        android.database.Cursor r2, $r12;
        java.io.PrintStream $r7;
        cs.utils.io.ChapingRecodeService r0;
        java.lang.StringBuilder $r8;

        r0 := @this: cs.utils.io.ChapingRecodeService;

        r1 = null;

        r2 = null;

     label1:
        $r3 = r0.<cs.utils.io.ChapingRecodeService: cs.utils.io.DBUtil dbUtil>;

        $r4 = virtualinvoke $r3.<cs.utils.io.DBUtil: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label2:
        r1 = $r4;

     label3:
        $r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r5.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r5.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r5.<java.util.Calendar: void set(int,int)>(13, 0);

        $r6 = virtualinvoke $r5.<java.util.Calendar: java.util.Date getTime()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.Object)>($r6);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("select count(*) from ");

        $r9 = r0.<cs.utils.io.ChapingRecodeService: java.lang.String tableName>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where showtime>?");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.String)[1];

        $r8 = new java.lang.StringBuilder;

        $l0 = virtualinvoke $r6.<java.util.Date: long getTime()>();

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10[0] = $r11;

        $r12 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r9, $r10);

     label4:
        r2 = $r12;

     label5:
        interfaceinvoke $r12.<android.database.Cursor: boolean moveToFirst()>();

        $i1 = interfaceinvoke $r12.<android.database.Cursor: int getInt(int)>(0);

     label6:
        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>($r4, $r12);

        return $i1;

     label7:
        $r13 := @caughtexception;

        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>(r1, r2);

        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
}
