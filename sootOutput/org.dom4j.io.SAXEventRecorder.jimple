public class org.dom4j.io.SAXEventRecorder extends org.xml.sax.helpers.DefaultHandler implements java.io.Externalizable, org.xml.sax.DTDHandler, org.xml.sax.ext.DeclHandler, org.xml.sax.ext.LexicalHandler
{
    private static final java.lang.String EMPTY_STRING;
    private static final byte NULL;
    private static final byte OBJECT;
    private static final byte STRING;
    private static final java.lang.String XMLNS;
    public static final long serialVersionUID;
    private java.util.List events;
    private java.util.Map prefixMappings;

    public void <init>()
    {
        org.dom4j.io.SAXEventRecorder r0;
        java.util.HashMap $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.dom4j.io.SAXEventRecorder: java.util.List events> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.io.SAXEventRecorder: java.util.Map prefixMappings> = $r2;

        return;
    }

    public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r6;
        org.dom4j.io.SAXEventRecorder r0;
        java.util.List $r7;
        java.lang.String $r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        r6 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(17);

        virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r4);

        virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r5);

        $r7 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r6);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r2;
        java.util.List $r4;
        org.dom4j.io.SAXEventRecorder r0;
        int $i0, $i1;
        char[] $r1;
        java.lang.Integer $r3;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(8);

        virtualinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(0);

        virtualinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i1);

        virtualinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        $r4 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r2;
        java.util.List $r4;
        org.dom4j.io.SAXEventRecorder r0;
        int $i0, $i1;
        char[] $r1;
        java.lang.Integer $r3;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(15);

        virtualinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i0);

        virtualinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i1);

        virtualinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        $r4 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void elementDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r3;
        java.util.List $r4;
        org.dom4j.io.SAXEventRecorder r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(16);

        virtualinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        virtualinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        $r4 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder r0;
        org.dom4j.io.SAXEventRecorder$SAXEvent r1;
        java.util.List $r2;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        r1 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r1.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(14);

        $r2 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder r0;
        org.dom4j.io.SAXEventRecorder$SAXEvent r1;
        java.util.List $r2;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        r1 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r1.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(10);

        $r2 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder r0;
        org.dom4j.io.SAXEventRecorder$SAXEvent r1;
        java.util.List $r2;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        r1 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r1.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(5);

        $r2 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r4;
        java.util.Iterator $r10;
        org.dom4j.Namespace $r7;
        org.dom4j.io.SAXEventRecorder r0;
        java.util.List $r5;
        java.util.Map $r8;
        org.dom4j.QName r6;
        java.lang.Object $r9;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(7);

        virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        $r5 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        if $r1 == null goto label3;

        r6 = new org.dom4j.QName;

        $r7 = staticinvoke <org.dom4j.Namespace: org.dom4j.Namespace get(java.lang.String)>($r1);

        specialinvoke r6.<org.dom4j.QName: void <init>(java.lang.String,org.dom4j.Namespace)>($r2, $r7);

     label1:
        $r8 = r0.<org.dom4j.io.SAXEventRecorder: java.util.Map prefixMappings>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        $r5 = (java.util.List) $r9;

        if $r5 == null goto label4;

        $r10 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r4 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(3);

        $r9 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r9);

        $r5 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label2;

     label3:
        r6 = new org.dom4j.QName;

        specialinvoke r6.<org.dom4j.QName: void <init>(java.lang.String)>($r2);

        goto label1;

     label4:
        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r2;
        java.util.List $r3;
        org.dom4j.io.SAXEventRecorder r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        r2 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(12);

        virtualinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        $r3 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r2;
        java.util.List $r3;
        org.dom4j.io.SAXEventRecorder r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        r2 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(3);

        virtualinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        $r3 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r4;
        java.util.List $r5;
        org.dom4j.io.SAXEventRecorder r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(19);

        virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        $r5 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        return;
    }

    public void internalEntityDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r3;
        java.util.List $r4;
        org.dom4j.io.SAXEventRecorder r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(18);

        virtualinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        virtualinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        $r4 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r3;
        java.util.List $r4;
        org.dom4j.io.SAXEventRecorder r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(1);

        virtualinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        virtualinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        $r4 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    public void readExternal(java.io.ObjectInput) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        java.util.List $r3;
        byte $b0;
        org.dom4j.io.SAXEventRecorder r0;
        int $i1;
        java.io.ObjectInput $r1;
        java.lang.Object $r2;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.io.ObjectInput;

        $b0 = interfaceinvoke $r1.<java.io.ObjectInput: byte readByte()>();

        $i1 = (int) $b0;

        if $i1 == 2 goto label1;

        $r2 = interfaceinvoke $r1.<java.io.ObjectInput: java.lang.Object readObject()>();

        $r3 = (java.util.List) $r2;

        r0.<org.dom4j.io.SAXEventRecorder: java.util.List events> = $r3;

     label1:
        return;
    }

    public void replay(org.xml.sax.ContentHandler) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r6;
        java.lang.String[] r11;
        java.lang.Integer $r16;
        org.xml.sax.ext.LexicalHandler $r17;
        byte $b0;
        java.lang.StringBuffer $r7, $r19;
        int $i1, $i2;
        org.xml.sax.ContentHandler $r1;
        java.lang.String $r8, $r9, $r12, $r13, $r14;
        boolean $z0;
        org.xml.sax.helpers.AttributesImpl r2, $r21;
        java.util.Iterator $r4, $r10;
        org.dom4j.io.SAXEventRecorder r0;
        java.util.List $r3;
        org.xml.sax.ext.DeclHandler $r18;
        org.xml.sax.SAXException $r20;
        char[] r15;
        java.lang.Object $r5;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: org.xml.sax.ContentHandler;

        $r3 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label24;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.dom4j.io.SAXEventRecorder$SAXEvent) $r5;

        $b0 = r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: byte event>;

        $i1 = (int) $b0;

        lookupswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label16;
            case 13: goto label17;
            case 14: goto label18;
            case 15: goto label19;
            case 16: goto label20;
            case 17: goto label21;
            case 18: goto label22;
            case 19: goto label23;
            default: goto label02;
        };

     label02:
        $r20 = new org.xml.sax.SAXException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized event: ");

        $b0 = r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: byte event>;

        $i1 = (int) $b0;

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r8);

        throw $r20;

     label03:
        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r9 = (java.lang.String) $r5;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>($r8, $r9);

        goto label01;

     label04:
        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r9 = (java.lang.String) $r5;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r8, $r9);

        goto label01;

     label05:
        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r8);

        goto label01;

     label06:
        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void startDocument()>();

        goto label01;

     label07:
        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void endDocument()>();

        goto label01;

     label08:
        $r21 = new org.xml.sax.helpers.AttributesImpl;

        r2 = $r21;

        specialinvoke $r21.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(3);

        $r3 = (java.util.List) $r5;

        if $r3 == null goto label10;

        $r10 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r5 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String[]) $r5;

        $r8 = r11[0];

        $r9 = r11[1];

        $r12 = r11[2];

        $r13 = r11[3];

        $r14 = r11[4];

        virtualinvoke r2.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r12, $r13, $r14);

        goto label09;

     label10:
        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r9 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r12 = (java.lang.String) $r5;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r8, $r9, $r12, r2);

        goto label01;

     label11:
        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r9 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r12 = (java.lang.String) $r5;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r12);

        goto label01;

     label12:
        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        r15 = (char[]) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r16 = (java.lang.Integer) $r5;

        $i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r16 = (java.lang.Integer) $r5;

        $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void characters(char[],int,int)>(r15, $i1, $i2);

        goto label01;

     label13:
        $r17 = (org.xml.sax.ext.LexicalHandler) $r1;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r9 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r12 = (java.lang.String) $r5;

        interfaceinvoke $r17.<org.xml.sax.ext.LexicalHandler: void startDTD(java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r12);

        goto label01;

     label14:
        $r17 = (org.xml.sax.ext.LexicalHandler) $r1;

        interfaceinvoke $r17.<org.xml.sax.ext.LexicalHandler: void endDTD()>();

        goto label01;

     label15:
        $r17 = (org.xml.sax.ext.LexicalHandler) $r1;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        interfaceinvoke $r17.<org.xml.sax.ext.LexicalHandler: void startEntity(java.lang.String)>($r8);

        goto label01;

     label16:
        $r17 = (org.xml.sax.ext.LexicalHandler) $r1;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        interfaceinvoke $r17.<org.xml.sax.ext.LexicalHandler: void endEntity(java.lang.String)>($r8);

        goto label01;

     label17:
        $r17 = (org.xml.sax.ext.LexicalHandler) $r1;

        interfaceinvoke $r17.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

        goto label01;

     label18:
        $r17 = (org.xml.sax.ext.LexicalHandler) $r1;

        interfaceinvoke $r17.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

        goto label01;

     label19:
        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        r15 = (char[]) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r16 = (java.lang.Integer) $r5;

        $i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r16 = (java.lang.Integer) $r5;

        $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r17 = (org.xml.sax.ext.LexicalHandler) $r1;

        interfaceinvoke $r17.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>(r15, $i1, $i2);

        goto label01;

     label20:
        $r18 = (org.xml.sax.ext.DeclHandler) $r1;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r9 = (java.lang.String) $r5;

        interfaceinvoke $r18.<org.xml.sax.ext.DeclHandler: void elementDecl(java.lang.String,java.lang.String)>($r8, $r9);

        goto label01;

     label21:
        $r18 = (org.xml.sax.ext.DeclHandler) $r1;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r9 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r12 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(3);

        $r13 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(4);

        $r14 = (java.lang.String) $r5;

        interfaceinvoke $r18.<org.xml.sax.ext.DeclHandler: void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r12, $r13, $r14);

        goto label01;

     label22:
        $r18 = (org.xml.sax.ext.DeclHandler) $r1;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r9 = (java.lang.String) $r5;

        interfaceinvoke $r18.<org.xml.sax.ext.DeclHandler: void internalEntityDecl(java.lang.String,java.lang.String)>($r8, $r9);

        goto label01;

     label23:
        $r18 = (org.xml.sax.ext.DeclHandler) $r1;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(0);

        $r8 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(1);

        $r9 = (java.lang.String) $r5;

        $r5 = virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: java.lang.Object getParm(int)>(2);

        $r12 = (java.lang.String) $r5;

        interfaceinvoke $r18.<org.xml.sax.ext.DeclHandler: void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r12);

        goto label01;

     label24:
        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder r0;
        org.dom4j.io.SAXEventRecorder$SAXEvent r1;
        java.util.List $r2;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        r1 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r1.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(13);

        $r2 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r4;
        java.util.List $r5;
        org.dom4j.io.SAXEventRecorder r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(9);

        virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        virtualinvoke r4.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        $r5 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder r0;
        org.dom4j.io.SAXEventRecorder$SAXEvent r1;
        java.util.List $r2;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        r1 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r1.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(4);

        $r2 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r6, r7, $r16;
        java.lang.String[] r13;
        java.util.ArrayList r5, $r15;
        java.util.Map $r11;
        org.xml.sax.Attributes $r4;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        org.dom4j.Namespace $r9;
        org.dom4j.io.SAXEventRecorder r0;
        java.util.List $r10;
        org.dom4j.QName r8, $r14;
        java.lang.Object $r12;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.xml.sax.Attributes;

        r6 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        r7 = r6;

        specialinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(6);

        virtualinvoke r7.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        virtualinvoke r7.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        virtualinvoke r7.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r3);

        if $r1 == null goto label06;

        $r14 = new org.dom4j.QName;

        r8 = $r14;

        $r9 = staticinvoke <org.dom4j.Namespace: org.dom4j.Namespace get(java.lang.String)>($r1);

        specialinvoke $r14.<org.dom4j.QName: void <init>(java.lang.String,org.dom4j.Namespace)>($r2, $r9);

     label01:
        if $r4 == null goto label10;

        $i0 = interfaceinvoke $r4.<org.xml.sax.Attributes: int getLength()>();

        if $i0 <= 0 goto label10;

        $r15 = new java.util.ArrayList;

        r5 = $r15;

        $i0 = interfaceinvoke $r4.<org.xml.sax.Attributes: int getLength()>();

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = 0;

     label02:
        $i1 = interfaceinvoke $r4.<org.xml.sax.Attributes: int getLength()>();

        if $i0 >= $i1 goto label09;

        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>($i0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns");

        if $z0 == 0 goto label08;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= 5 goto label07;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(6);

     label03:
        $r16 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        r6 = $r16;

        specialinvoke $r16.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(2);

        virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>($i0);

        virtualinvoke r6.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        $r10 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r6);

        $r11 = r0.<org.dom4j.io.SAXEventRecorder: java.util.Map prefixMappings>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r12 = (java.util.List) $r12;

        if $r12 != null goto label04;

        $r15 = new java.util.ArrayList;

        $r12 = $r15;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $r11 = r0.<org.dom4j.io.SAXEventRecorder: java.util.Map prefixMappings>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r12);

     label04:
        $r10 = (java.util.List) $r12;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r1);

     label05:
        $i0 = $i0 + 1;

        goto label02;

     label06:
        $r14 = new org.dom4j.QName;

        r8 = $r14;

        specialinvoke $r14.<org.dom4j.QName: void <init>(java.lang.String)>($r2);

        goto label01;

     label07:
        $r1 = "";

        goto label03;

     label08:
        r13 = newarray (java.lang.String)[5];

        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getURI(int)>($i0);

        r13[0] = $r2;

        r13[1] = $r1;

        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getQName(int)>($i0);

        r13[2] = $r1;

        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getType(int)>($i0);

        r13[3] = $r1;

        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>($i0);

        r13[4] = $r1;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r13);

        goto label05;

     label09:
        virtualinvoke r7.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>(r5);

     label10:
        $r10 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r7);

        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r2;
        java.util.List $r3;
        org.dom4j.io.SAXEventRecorder r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        r2 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(11);

        virtualinvoke r2.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        $r3 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.dom4j.io.SAXEventRecorder$SAXEvent r3;
        java.util.List $r4;
        org.dom4j.io.SAXEventRecorder r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 = new org.dom4j.io.SAXEventRecorder$SAXEvent;

        specialinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void <init>(byte)>(2);

        virtualinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r1);

        virtualinvoke r3.<org.dom4j.io.SAXEventRecorder$SAXEvent: void addParm(java.lang.Object)>($r2);

        $r4 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    public void writeExternal(java.io.ObjectOutput) throws java.io.IOException
    {
        org.dom4j.io.SAXEventRecorder r0;
        java.util.List $r2;
        java.io.ObjectOutput $r1;

        r0 := @this: org.dom4j.io.SAXEventRecorder;

        $r1 := @parameter0: java.io.ObjectOutput;

        $r2 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        if $r2 != null goto label1;

        interfaceinvoke $r1.<java.io.ObjectOutput: void writeByte(int)>(2);

        return;

     label1:
        interfaceinvoke $r1.<java.io.ObjectOutput: void writeByte(int)>(1);

        $r2 = r0.<org.dom4j.io.SAXEventRecorder: java.util.List events>;

        interfaceinvoke $r1.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.dom4j.io.SAXEventRecorder: long serialVersionUID> = 1L;

        <org.dom4j.io.SAXEventRecorder: java.lang.String XMLNS> = "xmlns";

        <org.dom4j.io.SAXEventRecorder: byte STRING> = 0;

        <org.dom4j.io.SAXEventRecorder: byte OBJECT> = 1;

        <org.dom4j.io.SAXEventRecorder: byte NULL> = 2;

        <org.dom4j.io.SAXEventRecorder: java.lang.String EMPTY_STRING> = "";

        return;
    }
}
