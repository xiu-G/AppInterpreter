public final class le extends java.lang.Object implements lf
{
    kq a;
    lj b;
    org.htmlparser.lexer.Cursor c;

    public void <init>(kq, lj)
    {
        kq $r1;
        kr $r4;
        le r0;
        org.htmlparser.lexer.Cursor $r3;
        lj $r2;

        r0 := @this: le;

        $r1 := @parameter0: kq;

        $r2 := @parameter1: lj;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<le: kq a> = $r1;

        r0.<le: lj b> = $r2;

        $r3 = new org.htmlparser.lexer.Cursor;

        $r1 = r0.<le: kq a>;

        $r4 = virtualinvoke $r1.<kq: kr a()>();

        specialinvoke $r3.<org.htmlparser.lexer.Cursor: void <init>(kr,int)>($r4, 0);

        r0.<le: org.htmlparser.lexer.Cursor c> = $r3;

        return;
    }

    public final boolean a()
    {
        kq $r2;
        kr $r3;
        int $i0, $i2;
        le r0;
        char $c1;
        org.htmlparser.lexer.Cursor $r1;

        r0 := @this: le;

        $r1 = r0.<le: org.htmlparser.lexer.Cursor c>;

        $r2 = r0.<le: kq a>;

        $i0 = virtualinvoke $r2.<kq: int d()>();

        virtualinvoke $r1.<org.htmlparser.lexer.Cursor: void setPosition(int)>($i0);

        $r2 = r0.<le: kq a>;

        $r3 = virtualinvoke $r2.<kq: kr a()>();

        $r1 = r0.<le: org.htmlparser.lexer.Cursor c>;

        $c1 = virtualinvoke $r3.<kr: char a(org.htmlparser.lexer.Cursor)>($r1);

        $i2 = (int) $c1;

        if 65535 == $i2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final org.htmlparser.Node b()
    {
        kq $r1;
        kr $r9;
        org.htmlparser.Node $r2;
        kx $r4;
        java.lang.Exception $r7;
        org.htmlparser.Tag $r3;
        java.lang.StringBuffer $r8;
        le r0;
        lg $r5;
        java.lang.String $r10;
        li $r6;
        lj $r11;
        boolean $z0;

        r0 := @this: le;

     label01:
        $r1 = r0.<le: kq a>;

     label02:
        $r2 = virtualinvoke $r1.<kq: org.htmlparser.Node e()>();

     label03:
        if $r2 == null goto label15;

        $z0 = $r2 instanceof org.htmlparser.Tag;

        if $z0 == 0 goto label15;

     label04:
        $r3 = (org.htmlparser.Tag) $r2;

     label05:
        $z0 = interfaceinvoke $r3.<org.htmlparser.Tag: boolean isEndTag()>();

     label06:
        if $z0 != 0 goto label15;

     label07:
        $r4 = interfaceinvoke $r3.<org.htmlparser.Tag: kx getThisScanner()>();

     label08:
        if $r4 == null goto label15;

        $r5 = new lg;

     label09:
        specialinvoke $r5.<lg: void <init>()>();

     label10:
        $r1 = r0.<le: kq a>;

     label11:
        $r3 = interfaceinvoke $r4.<kx: org.htmlparser.Tag a(org.htmlparser.Tag,kq,lg)>($r3, $r1, $r5);

     label12:
        return $r3;

     label13:
        $r6 := @caughtexception;

        throw $r6;

     label14:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected Exception occurred while reading ");

        $r1 = r0.<le: kq a>;

        $r9 = virtualinvoke $r1.<kq: kr a()>();

        $r10 = virtualinvoke $r9.<kr: java.lang.String a()>();

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", in nextNode");

        $r6 = new li;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<li: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r7);

        $r11 = r0.<le: lj b>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r11.<lj: void a(java.lang.String,li)>($r10, $r6);

        throw $r6;

     label15:
        return $r2;

        catch li from label02 to label03 with label13;
        catch li from label05 to label06 with label13;
        catch li from label07 to label08 with label13;
        catch li from label09 to label10 with label13;
        catch li from label11 to label12 with label13;
        catch java.lang.Exception from label01 to label03 with label14;
        catch java.lang.Exception from label04 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label12 with label14;
    }
}
