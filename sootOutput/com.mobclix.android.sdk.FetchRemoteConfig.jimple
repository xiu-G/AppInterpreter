class com.mobclix.android.sdk.FetchRemoteConfig extends android.os.AsyncTask
{
    private static java.lang.String TAG;
    private static boolean running;
    com.mobclix.android.sdk.Mobclix c;
    private com.mobclix.android.sdk.MobclixInstrumentation instrumentation;
    private java.lang.String url;

    static void <clinit>()
    {
        <com.mobclix.android.sdk.FetchRemoteConfig: java.lang.String TAG> = "MobclixConfig";

        <com.mobclix.android.sdk.FetchRemoteConfig: boolean running> = 0;

        return;
    }

    void <init>()
    {
        com.mobclix.android.sdk.Mobclix $r2;
        com.mobclix.android.sdk.FetchRemoteConfig r0;
        com.mobclix.android.sdk.MobclixInstrumentation $r1;

        r0 := @this: com.mobclix.android.sdk.FetchRemoteConfig;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        $r1 = staticinvoke <com.mobclix.android.sdk.MobclixInstrumentation: com.mobclix.android.sdk.MobclixInstrumentation getInstance()>();

        r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation> = $r1;

        $r2 = staticinvoke <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix getInstance()>();

        r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c> = $r2;

        return;
    }

    private void downloadCustomImages()
    {
        org.apache.http.impl.client.DefaultHttpClient r1;
        android.content.Context $r16;
        java.lang.String[] $r4;
        java.util.HashMap $r5;
        com.mobclix.android.sdk.FetchRemoteConfig r0;
        org.apache.http.client.CookieStore $r12;
        int $i0, $i1;
        android.graphics.Bitmap$CompressFormat $r19;
        java.lang.String r3, $r8, $r9;
        com.mobclix.android.sdk.Mobclix $r15;
        boolean $z0;
        org.apache.http.HttpEntity $r11;
        java.io.FileOutputStream $r18;
        java.lang.Exception $r20;
        com.mobclix.android.sdk.MobclixAdUnitSettings r7;
        org.apache.http.client.methods.HttpGet r2;
        android.graphics.Bitmap $r14;
        org.apache.http.HttpResponse $r10;
        java.lang.Object $r6;
        java.lang.StringBuilder $r17;
        java.io.InputStream $r13;

        r0 := @this: com.mobclix.android.sdk.FetchRemoteConfig;

        $r4 = <com.mobclix.android.sdk.Mobclix: java.lang.String[] MC_AD_SIZES>;

        $i0 = lengthof $r4;

        $i1 = 0;

     label01:
        if $i1 < $i0 goto label02;

        return;

     label02:
        r3 = $r4[$i1];

        $r5 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r7 = (com.mobclix.android.sdk.MobclixAdUnitSettings) $r6;

        $r8 = virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: java.lang.String getCustomAdUrl()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label13;

        r1 = new org.apache.http.impl.client.DefaultHttpClient;

     label03:
        specialinvoke r1.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

     label04:
        r2 = new org.apache.http.client.methods.HttpGet;

     label05:
        specialinvoke r2.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r8);

        $r9 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getCookieStringFromCookieManager(java.lang.String)>($r8);

        virtualinvoke r2.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("Cookie", $r9);

        $r10 = virtualinvoke r1.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r2);

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r12 = virtualinvoke r1.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore getCookieStore()>();

        staticinvoke <com.mobclix.android.sdk.Mobclix: void syncCookiesToCookieManager(org.apache.http.client.CookieStore,java.lang.String)>($r12, $r8);

        $r13 = interfaceinvoke $r11.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r14 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r13);

        $r15 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r16 = virtualinvoke $r15.<com.mobclix.android.sdk.Mobclix: android.content.Context getContext()>();

     label06:
        $r17 = new java.lang.StringBuilder;

     label07:
        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_mc_cached_custom_ad.png");

        $r8 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r16.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>($r8, 0);

     label08:
        $r19 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

     label09:
        virtualinvoke $r14.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r19, 90, $r18);

        virtualinvoke $r18.<java.io.FileOutputStream: void close()>();

     label10:
        $r17 = new java.lang.StringBuilder;

     label11:
        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CustomAdUrl");

        r3 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: java.lang.String getCustomAdUrl()>();

        staticinvoke <com.mobclix.android.sdk.Mobclix: void addPref(java.lang.String,java.lang.String)>(r3, $r8);

        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setCustomAdSet(boolean)>(1);

     label12:
        $i1 = $i1 + 1;

        goto label01;

     label13:
        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setCustomAdSet(boolean)>(1);

        goto label12;

     label14:
        $r20 := @caughtexception;

        goto label12;

        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Exception from label11 to label12 with label14;
    }

    private java.lang.String getConfigUrl(boolean)
    {
        com.mobclix.android.sdk.FetchRemoteConfig r0;
        java.lang.Exception r2, $r6, $r7, $r8;
        java.lang.StringBuffer r1, $r5;
        com.mobclix.android.sdk.Mobclix $r3;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @this: com.mobclix.android.sdk.FetchRemoteConfig;

        $z0 := @parameter0: boolean;

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String configServer>;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

     label01:
        $z1 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("ConfigServer");

     label02:
        if $z1 == 0 goto label04;

        if $z0 == 0 goto label04;

     label03:
        r4 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("ConfigServer");

     label04:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?p=android");

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&rt=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getRuntimePlatform()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&rtv=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getRuntimePlatformVersion()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&a=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getApplicationId()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&m=");

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_Exception_0()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>("3.1.1");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&v=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getApplicationVersion()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&d=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getDeviceId()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&dm=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getDeviceModel()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&dv=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getAndroidVersion()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&hwdm=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getDeviceHardwareModel()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&g=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getConnectionType()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getGPS()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label05:
        if $z0 != 0 goto label07;

     label06:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&ll=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getGPS()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label07:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("offlineSessions");

     label08:
        if $z0 == 0 goto label10;

     label09:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&off=");

        r4 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("offlineSessions");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label10:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("totalSessionTime");

     label11:
        if $z0 == 0 goto label13;

     label12:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&st=");

        r4 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("totalSessionTime");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label13:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&it=0");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String previousDeviceId>;

     label14:
        if r4 == null goto label16;

     label15:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&pd=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String previousDeviceId>;

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label16:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&mcc=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getMcc()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&mnc=");

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r4 = virtualinvoke $r3.<com.mobclix.android.sdk.Mobclix: java.lang.String getMnc()>();

        r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r4, "UTF-8");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r3 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $z0 = $r3.<com.mobclix.android.sdk.Mobclix: boolean isNewUser>;

     label17:
        if $z0 == 0 goto label19;

     label18:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&new=true");

     label19:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("MCReferralData");

     label20:
        if $z0 == 0 goto label24;

     label21:
        r4 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("MCReferralData");

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("");

     label22:
        if $z0 != 0 goto label24;

     label23:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&r=");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label24:
        r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label25:
        return r4;

     label26:
        r2 := @caughtexception;

        return "";

     label27:
        $r6 := @caughtexception;

        goto label24;

     label28:
        $r7 := @caughtexception;

        goto label13;

     label29:
        $r8 := @caughtexception;

        goto label10;

        catch java.lang.Exception from label01 to label02 with label26;
        catch java.lang.Exception from label03 to label04 with label26;
        catch java.lang.Exception from label04 to label05 with label26;
        catch java.lang.Exception from label06 to label08 with label26;
        catch java.lang.Exception from label09 to label10 with label29;
        catch java.lang.Exception from label10 to label11 with label26;
        catch java.lang.Exception from label12 to label13 with label28;
        catch java.lang.Exception from label13 to label14 with label26;
        catch java.lang.Exception from label15 to label17 with label26;
        catch java.lang.Exception from label18 to label19 with label26;
        catch java.lang.Exception from label19 to label20 with label27;
        catch java.lang.Exception from label21 to label22 with label27;
        catch java.lang.Exception from label23 to label24 with label27;
        catch java.lang.Exception from label24 to label25 with label26;
    }

    public transient volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        java.lang.Object[] $r2;
        java.lang.String[] $r3;
        com.mobclix.android.sdk.FetchRemoteConfig r0;
        org.json.JSONArray $r1;

        r0 := @this: com.mobclix.android.sdk.FetchRemoteConfig;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.String[]) $r2;

        $r1 = virtualinvoke r0.<com.mobclix.android.sdk.FetchRemoteConfig: org.json.JSONArray doInBackground(java.lang.String[])>($r3);

        return $r1;
    }

    public transient org.json.JSONArray doInBackground(java.lang.String[])
    {
        com.mobclix.android.sdk.FetchRemoteConfig r0;
        org.apache.http.StatusLine $r23;
        com.mobclix.android.sdk.Mobclix$MobclixHttpClient r6, $r46;
        org.json.JSONObject r2, $r27;
        boolean $z0;
        com.mobclix.android.sdk.MobclixInstrumentation $r9;
        org.apache.http.HttpEntity $r22;
        java.lang.Exception r5, $r15, r19, $r31, r33, r34, r35, r37, r38, r39, $r40, $r41, $r42, $r43;
        com.mobclix.android.sdk.MobclixAdUnitSettings $r16, $r44;
        java.util.List $r32;
        java.lang.StringBuilder $r17, $r45;
        java.lang.Throwable $r36;
        android.content.Context $r12;
        java.lang.String[] $r1;
        java.util.HashMap r3, r7, $r30;
        java.util.ArrayList r4, $r49;
        int $i0, $i1, $i2;
        java.lang.String r8, $r10, $r14, $r20;
        com.mobclix.android.sdk.Mobclix $r11;
        java.util.Iterator $r29;
        java.io.InputStreamReader $r25, $r47;
        org.apache.http.HttpResponse $r21;
        java.lang.Object $r18;
        java.io.BufferedReader r24, $r48;
        org.json.JSONArray r13, $r28;
        java.io.InputStream $r26;

        r0 := @this: com.mobclix.android.sdk.FetchRemoteConfig;

        $r1 := @parameter0: java.lang.String[];

        $z0 = <com.mobclix.android.sdk.FetchRemoteConfig: boolean running>;

        if $z0 == 0 goto label001;

        return null;

     label001:
        <com.mobclix.android.sdk.FetchRemoteConfig: boolean running> = 1;

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        if $r9 != null goto label002;

        $r9 = staticinvoke <com.mobclix.android.sdk.MobclixInstrumentation: com.mobclix.android.sdk.MobclixInstrumentation getInstance()>();

        r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation> = $r9;

     label002:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = <com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String STARTUP>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String startGroup(java.lang.String)>($r10);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, "config");

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r12 = virtualinvoke $r11.<com.mobclix.android.sdk.Mobclix: android.content.Context getContext()>();

        staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>($r12);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, "update_session");

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        virtualinvoke $r11.<com.mobclix.android.sdk.Mobclix: void updateSession()>();

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        r13 = null;

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, "update");

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, "parse_cache");

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, "load_misc_settings");

     label003:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("deviceId");

     label004:
        if $z0 == 0 goto label019;

     label005:
        $r14 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("deviceId");

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId>;

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r8);

     label006:
        if $z0 != 0 goto label008;

     label007:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String previousDeviceId> = $r14;

     label008:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("passiveSessionTimeout");

        if $z0 == 0 goto label009;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r14 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("passiveSessionTimeout");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

        $r11.<com.mobclix.android.sdk.Mobclix: int passiveSessionTimeout> = $i0;

     label009:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, "load_adunits");

        $r1 = <com.mobclix.android.sdk.Mobclix: java.lang.String[] MC_AD_SIZES>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label010:
        if $i1 < $i0 goto label022;

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        $i0 = 1;

     label011:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $i1 = $r11.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet>;

        if $i1 != 1 goto label027;

     label012:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $i0 = $r11.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet>;

        if $i0 == 1 goto label018;

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, "parse_cache");

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, "load_urls");

        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("ConfigServer");

        if $z0 == 0 goto label013;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r14 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("ConfigServer");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String configServer> = $r14;

     label013:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("AdServer");

        if $z0 == 0 goto label014;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r14 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("AdServer");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String adServer> = $r14;

     label014:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("AnalyticsServer");

        if $z0 == 0 goto label015;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r14 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("AnalyticsServer");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String analyticsServer> = $r14;

     label015:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("VcServer");

        if $z0 == 0 goto label016;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r14 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("VcServer");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String vcServer> = $r14;

     label016:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("FeedbackServer");

        if $z0 == 0 goto label017;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r14 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("FeedbackServer");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String feedbackServer> = $r14;

     label017:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r11.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet> = 1;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r11.<com.mobclix.android.sdk.Mobclix: boolean isOfflineSession> = 1;

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

     label018:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = <com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String STARTUP>;

        virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: void finishGroup(java.lang.String)>($r10);

        staticinvoke <com.mobclix.android.sdk.Mobclix: void sync()>();

        <com.mobclix.android.sdk.FetchRemoteConfig: boolean running> = 0;

        return r13;

     label019:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r11.<com.mobclix.android.sdk.Mobclix: boolean isNewUser> = 1;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r14 = $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId>;

        staticinvoke <com.mobclix.android.sdk.Mobclix: void addPref(java.lang.String,java.lang.String)>("deviceId", $r14);

     label020:
        goto label008;

     label021:
        $r15 := @caughtexception;

        goto label008;

     label022:
        $r14 = $r1[$i1];

        r7 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings>;

        $r44 = new com.mobclix.android.sdk.MobclixAdUnitSettings;

        specialinvoke $r44.<com.mobclix.android.sdk.MobclixAdUnitSettings: void <init>()>();

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r44);

        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>($r14);

        if $z0 == 0 goto label024;

        r8 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>($r14);

        $r27 = new org.json.JSONObject;

        r2 = $r27;

     label023:
        specialinvoke $r27.<org.json.JSONObject: void <init>(java.lang.String)>(r8);

        virtualinvoke r0.<com.mobclix.android.sdk.FetchRemoteConfig: void processAdUnitConfig(org.json.JSONObject)>(r2);

     label024:
        $r45 = new java.lang.StringBuilder;

        r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14);

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>(r8);

        $r17 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CustomAdUrl");

        r8 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>(r8);

        if $z0 == 0 goto label025;

        r7 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings>;

        $r18 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);

        $r16 = (com.mobclix.android.sdk.MobclixAdUnitSettings) $r18;

        $r45 = new java.lang.StringBuilder;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14);

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);

        $r17 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CustomAdUrl");

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>($r14);

        virtualinvoke $r16.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setCustomAdUrl(java.lang.String)>($r14);

     label025:
        $i1 = $i1 + 1;

        goto label010;

     label026:
        r19 := @caughtexception;

        staticinvoke <com.mobclix.android.sdk.Mobclix: void removePref(java.lang.String)>($r14);

        goto label024;

     label027:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("attempt_");

        $r17 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, $r14);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, "build_request");

        if $i0 != 1 goto label108;

        $z0 = 1;

     label028:
        $r14 = specialinvoke r0.<com.mobclix.android.sdk.FetchRemoteConfig: java.lang.String getConfigUrl(boolean)>($z0);

        r0.<com.mobclix.android.sdk.FetchRemoteConfig: java.lang.String url> = $r14;

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        r8 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r10, "send_request");

        $r10 = r8;

        $r14 = "";

     label029:
        $r46 = new com.mobclix.android.sdk.Mobclix$MobclixHttpClient;

     label030:
        r6 = $r46;

     label031:
        $r20 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: java.lang.String url>;

        specialinvoke $r46.<com.mobclix.android.sdk.Mobclix$MobclixHttpClient: void <init>(java.lang.String)>($r20);

        $r21 = virtualinvoke r6.<com.mobclix.android.sdk.Mobclix$MobclixHttpClient: org.apache.http.HttpResponse execute()>();

        $r22 = interfaceinvoke $r21.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r23 = interfaceinvoke $r21.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r23.<org.apache.http.StatusLine: int getStatusCode()>();

     label032:
        if $i1 != 200 goto label145;

     label033:
        $r48 = new java.io.BufferedReader;

     label034:
        r24 = $r48;

     label035:
        $r47 = new java.io.InputStreamReader;

     label036:
        $r25 = $r47;

     label037:
        $r26 = interfaceinvoke $r22.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        specialinvoke $r47.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r26);

        specialinvoke $r48.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r25, 8000);

     label038:
        $r20 = virtualinvoke r24.<java.io.BufferedReader: java.lang.String readLine()>();

     label039:
        if $r20 != null goto label109;

     label040:
        interfaceinvoke $r22.<org.apache.http.HttpEntity: void consumeContent()>();

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        r8 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>(r8);

     label041:
        $r10 = r8;

     label042:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        r8 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>(r8, "handle_response");

     label043:
        $r10 = r8;

     label044:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("");

     label045:
        if $z0 != 0 goto label106;

     label046:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        r8 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>(r8, "decode_json");

     label047:
        $r10 = r8;

     label048:
        $r27 = new org.json.JSONObject;

     label049:
        r2 = $r27;

     label050:
        specialinvoke $r27.<org.json.JSONObject: void <init>(java.lang.String)>($r14);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        r8 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>(r8);

     label051:
        $r10 = r8;

     label052:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        r8 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>(r8, "save_json");

     label053:
        $r10 = r8;

     label054:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

     label055:
        $r20 = <com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String STARTUP>;

     label056:
        virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: void addInfo(java.lang.Object,java.lang.String,java.lang.String)>($r14, "raw_config_json", $r20);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

     label057:
        $r14 = <com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String STARTUP>;

     label058:
        virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: void addInfo(java.lang.Object,java.lang.String,java.lang.String)>(r2, "decoded_config_json", $r14);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r14 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>(r8);

     label059:
        $r10 = $r14;

     label060:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r14 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r14, "load_config");

     label061:
        $r10 = $r14;

     label062:
        $r27 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("urls");

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = virtualinvoke $r27.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("config");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String configServer> = r8;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = virtualinvoke $r27.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("ads");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String adServer> = r8;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = virtualinvoke $r27.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("analytics");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String analyticsServer> = r8;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = virtualinvoke $r27.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("vc");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String vcServer> = r8;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = virtualinvoke $r27.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("feedback");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String feedbackServer> = r8;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = virtualinvoke $r27.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("debug");

        $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String debugServer> = r8;

     label063:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $i1 = virtualinvoke r2.<org.json.JSONObject: int getInt(java.lang.String)>("passive_session_timeout");

     label064:
        $i1 = $i1 * 1000;

     label065:
        $r11.<com.mobclix.android.sdk.Mobclix: int passiveSessionTimeout> = $i1;

     label066:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r14 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r14, "set_default_values");

     label067:
        $r10 = $r14;

     label068:
        r3 = new java.util.HashMap;

     label069:
        r7 = r3;

     label070:
        specialinvoke r3.<java.util.HashMap: void <init>()>();

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String configServer>;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ConfigServer", r8);

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String adServer>;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AdServer", r8);

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String analyticsServer>;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AnalyticsServer", r8);

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String vcServer>;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("VcServer", r8);

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String feedbackServer>;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("FeedbackServer", r8);

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $i1 = $r11.<com.mobclix.android.sdk.Mobclix: int passiveSessionTimeout>;

        r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("passiveSessionTimeout", r8);

        $r28 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("ad_units");

     label071:
        $i1 = 0;

     label072:
        $i2 = virtualinvoke $r28.<org.json.JSONArray: int length()>();

     label073:
        if $i1 < $i2 goto label114;

     label074:
        $r27 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("debug_config");

     label075:
        $r49 = new java.util.ArrayList;

     label076:
        r4 = $r49;

     label077:
        specialinvoke $r49.<java.util.ArrayList: void <init>()>();

     label078:
        $r1 = <com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String[] MC_DEBUG_CATS>;

     label079:
        $i1 = lengthof $r1;

     label080:
        $i2 = 0;

     label081:
        if $i2 < $i1 goto label116;

     label082:
        staticinvoke <com.mobclix.android.sdk.Mobclix: void removePref(java.util.List)>(r4);

        $r29 = virtualinvoke $r27.<org.json.JSONObject: java.util.Iterator keys()>();

     label083:
        $r30 = new java.util.HashMap;

     label084:
        r3 = $r30;

     label085:
        specialinvoke $r30.<java.util.HashMap: void <init>()>();

     label086:
        $z0 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

     label087:
        if $z0 != 0 goto label121;

     label088:
        staticinvoke <com.mobclix.android.sdk.Mobclix: void addPref(java.util.Map)>(r3);

     label089:
        $r28 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("app_alerts");

     label090:
        r13 = $r28;

     label091:
        $r28 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("native_urls");

     label092:
        $i1 = 0;

     label093:
        $i2 = virtualinvoke $r28.<org.json.JSONArray: int length()>();

     label094:
        if $i1 < $i2 goto label134;

     label095:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String previousDeviceId>;

     label096:
        if r8 == null goto label098;

     label097:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        r8 = $r11.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId>;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deviceId", r8);

     label098:
        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("offlineSessions", "0");

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("totalSessionTime", "0");

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("totalIdleTime", "0");

        staticinvoke <com.mobclix.android.sdk.Mobclix: void addPref(java.util.Map)>(r7);

        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("MCReferralData");

     label099:
        if $z0 == 0 goto label101;

     label100:
        staticinvoke <com.mobclix.android.sdk.Mobclix: void removePref(java.lang.String)>("MCReferralData");

     label101:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r14 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r14);

     label102:
        $r10 = $r14;

     label103:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r14 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r14);

     label104:
        $r10 = $r14;

     label105:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r11.<com.mobclix.android.sdk.Mobclix: boolean isOfflineSession> = 0;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r11.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet> = 1;

     label106:
        virtualinvoke r24.<java.io.BufferedReader: void close()>();

     label107:
        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        $r9 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r10 = virtualinvoke $r9.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r10);

        if $i0 > 1 goto label012;

        $i0 = $i0 + 1;

        goto label011;

     label108:
        $z0 = 0;

        goto label028;

     label109:
        $r45 = new java.lang.StringBuilder;

     label110:
        $r17 = $r45;

     label111:
        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14);

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label112:
        $r20 = virtualinvoke r24.<java.io.BufferedReader: java.lang.String readLine()>();

     label113:
        goto label039;

     label114:
        $r27 = virtualinvoke $r28.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i1);

        r8 = virtualinvoke $r27.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("size");

        virtualinvoke r0.<com.mobclix.android.sdk.FetchRemoteConfig: void processAdUnitConfig(org.json.JSONObject)>($r27);

        $r20 = virtualinvoke $r27.<org.json.JSONObject: java.lang.String toString()>();

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r20);

     label115:
        $i1 = $i1 + 1;

        goto label072;

     label116:
        r8 = $r1[$i2];

     label117:
        $r45 = new java.lang.StringBuilder;

     label118:
        $r17 = $r45;

     label119:
        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("debug_");

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r8 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label120:
        $i2 = $i2 + 1;

        goto label081;

     label121:
        $r18 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (java.lang.String) $r18;

        r8 = virtualinvoke $r27.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r20);

     label122:
        $r30 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap debugConfig>;

     label123:
        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r8);

     label124:
        $r45 = new java.lang.StringBuilder;

     label125:
        $r17 = $r45;

     label126:
        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("debug_");

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r8);

     label127:
        goto label086;

     label128:
        r5 := @caughtexception;

     label129:
        r8 = <com.mobclix.android.sdk.FetchRemoteConfig: java.lang.String TAG>;

        $r45 = new java.lang.StringBuilder;

     label130:
        $r17 = $r45;

     label131:
        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("ERROR: ");

        $r20 = virtualinvoke r5.<java.lang.Exception: java.lang.String toString()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r8, $r20);

     label132:
        goto label086;

     label133:
        $r31 := @caughtexception;

        goto label089;

     label134:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r32 = $r11.<com.mobclix.android.sdk.Mobclix: java.util.List nativeUrls>;

        r8 = virtualinvoke $r28.<org.json.JSONArray: java.lang.String getString(int)>($i1);

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>(r8);

     label135:
        $i1 = $i1 + 1;

        goto label093;

     label136:
        r33 := @caughtexception;

     label137:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

     label138:
        $r11.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet> = -1;

     label139:
        goto label106;

     label140:
        r34 := @caughtexception;

     label141:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

     label142:
        $r11.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet> = -1;

     label143:
        virtualinvoke r24.<java.io.BufferedReader: void close()>();

     label144:
        goto label107;

     label145:
        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

     label146:
        $r11.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet> = -1;

     label147:
        r24 = null;

        goto label106;

     label148:
        r35 := @caughtexception;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r11.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet> = -1;

        goto label107;

     label149:
        $r36 := @caughtexception;

        r24 = null;

     label150:
        virtualinvoke r24.<java.io.BufferedReader: void close()>();

     label151:
        throw $r36;

     label152:
        r37 := @caughtexception;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r11.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet> = -1;

        goto label151;

     label153:
        r38 := @caughtexception;

        $r11 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r11.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet> = -1;

        goto label107;

     label154:
        $r36 := @caughtexception;

        goto label150;

     label155:
        r39 := @caughtexception;

        r24 = null;

        goto label141;

     label156:
        $r40 := @caughtexception;

        goto label095;

     label157:
        $r41 := @caughtexception;

        goto label091;

     label158:
        $r42 := @caughtexception;

        goto label074;

     label159:
        $r43 := @caughtexception;

        goto label066;

        catch java.lang.Exception from label003 to label004 with label021;
        catch java.lang.Exception from label005 to label006 with label021;
        catch java.lang.Exception from label007 to label008 with label021;
        catch java.lang.Exception from label019 to label020 with label021;
        catch java.lang.Exception from label023 to label024 with label026;
        catch java.lang.Exception from label031 to label032 with label155;
        catch java.lang.Exception from label037 to label038 with label155;
        catch java.lang.Throwable from label029 to label030 with label149;
        catch java.lang.Throwable from label031 to label032 with label149;
        catch java.lang.Throwable from label033 to label034 with label149;
        catch java.lang.Throwable from label035 to label036 with label149;
        catch java.lang.Throwable from label037 to label038 with label149;
        catch java.lang.Exception from label038 to label039 with label140;
        catch java.lang.Exception from label040 to label041 with label140;
        catch java.lang.Exception from label042 to label043 with label140;
        catch java.lang.Exception from label044 to label045 with label140;
        catch java.lang.Throwable from label038 to label039 with label154;
        catch java.lang.Throwable from label040 to label041 with label154;
        catch java.lang.Throwable from label042 to label043 with label154;
        catch java.lang.Throwable from label044 to label045 with label154;
        catch java.lang.Exception from label046 to label047 with label136;
        catch java.lang.Exception from label050 to label051 with label136;
        catch java.lang.Exception from label052 to label053 with label136;
        catch java.lang.Exception from label054 to label055 with label136;
        catch java.lang.Exception from label056 to label057 with label136;
        catch java.lang.Exception from label058 to label059 with label136;
        catch java.lang.Exception from label060 to label061 with label136;
        catch java.lang.Exception from label062 to label063 with label136;
        catch java.lang.Throwable from label046 to label047 with label154;
        catch java.lang.Throwable from label048 to label049 with label154;
        catch java.lang.Throwable from label050 to label051 with label154;
        catch java.lang.Throwable from label052 to label053 with label154;
        catch java.lang.Throwable from label054 to label059 with label154;
        catch java.lang.Throwable from label060 to label061 with label154;
        catch java.lang.Throwable from label062 to label063 with label154;
        catch java.lang.Exception from label063 to label064 with label159;
        catch java.lang.Exception from label065 to label066 with label159;
        catch java.lang.Throwable from label063 to label064 with label154;
        catch java.lang.Throwable from label065 to label066 with label154;
        catch java.lang.Exception from label066 to label067 with label136;
        catch java.lang.Exception from label070 to label071 with label136;
        catch java.lang.Throwable from label066 to label067 with label154;
        catch java.lang.Throwable from label068 to label069 with label154;
        catch java.lang.Throwable from label070 to label071 with label154;
        catch java.lang.Exception from label072 to label073 with label158;
        catch java.lang.Throwable from label072 to label073 with label154;
        catch java.lang.Exception from label074 to label075 with label133;
        catch java.lang.Exception from label077 to label078 with label133;
        catch java.lang.Exception from label079 to label080 with label133;
        catch java.lang.Exception from label082 to label083 with label133;
        catch java.lang.Exception from label085 to label087 with label133;
        catch java.lang.Exception from label088 to label089 with label133;
        catch java.lang.Throwable from label074 to label076 with label154;
        catch java.lang.Throwable from label077 to label079 with label154;
        catch java.lang.Throwable from label082 to label084 with label154;
        catch java.lang.Throwable from label085 to label087 with label154;
        catch java.lang.Throwable from label088 to label089 with label154;
        catch java.lang.Exception from label089 to label090 with label157;
        catch java.lang.Throwable from label089 to label090 with label154;
        catch java.lang.Exception from label091 to label092 with label156;
        catch java.lang.Exception from label093 to label094 with label156;
        catch java.lang.Throwable from label091 to label092 with label154;
        catch java.lang.Throwable from label093 to label094 with label154;
        catch java.lang.Exception from label095 to label096 with label136;
        catch java.lang.Exception from label097 to label099 with label136;
        catch java.lang.Exception from label100 to label102 with label136;
        catch java.lang.Exception from label103 to label104 with label136;
        catch java.lang.Exception from label105 to label106 with label136;
        catch java.lang.Throwable from label095 to label096 with label154;
        catch java.lang.Throwable from label097 to label099 with label154;
        catch java.lang.Throwable from label100 to label102 with label154;
        catch java.lang.Throwable from label103 to label104 with label154;
        catch java.lang.Throwable from label105 to label106 with label154;
        catch java.lang.Exception from label106 to label107 with label153;
        catch java.lang.Exception from label111 to label112 with label140;
        catch java.lang.Exception from label112 to label113 with label140;
        catch java.lang.Throwable from label109 to label110 with label154;
        catch java.lang.Throwable from label111 to label112 with label154;
        catch java.lang.Throwable from label112 to label113 with label154;
        catch java.lang.Exception from label114 to label115 with label158;
        catch java.lang.Throwable from label114 to label115 with label154;
        catch java.lang.Exception from label116 to label117 with label133;
        catch java.lang.Exception from label119 to label120 with label133;
        catch java.lang.Throwable from label117 to label118 with label154;
        catch java.lang.Throwable from label119 to label120 with label154;
        catch java.lang.Exception from label121 to label122 with label128;
        catch java.lang.Exception from label123 to label124 with label128;
        catch java.lang.Exception from label126 to label127 with label128;
        catch java.lang.Throwable from label121 to label125 with label154;
        catch java.lang.Throwable from label126 to label127 with label154;
        catch java.lang.Exception from label131 to label132 with label133;
        catch java.lang.Throwable from label129 to label130 with label154;
        catch java.lang.Throwable from label131 to label132 with label154;
        catch java.lang.Exception from label134 to label135 with label156;
        catch java.lang.Throwable from label134 to label135 with label154;
        catch java.lang.Exception from label137 to label138 with label140;
        catch java.lang.Exception from label138 to label139 with label140;
        catch java.lang.Throwable from label137 to label138 with label154;
        catch java.lang.Throwable from label138 to label139 with label154;
        catch java.lang.Throwable from label141 to label142 with label154;
        catch java.lang.Throwable from label142 to label143 with label154;
        catch java.lang.Exception from label143 to label144 with label148;
        catch java.lang.Exception from label145 to label146 with label155;
        catch java.lang.Exception from label146 to label147 with label155;
        catch java.lang.Throwable from label145 to label146 with label149;
        catch java.lang.Throwable from label146 to label147 with label149;
        catch java.lang.Exception from label150 to label151 with label152;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        java.lang.Object $r1;
        com.mobclix.android.sdk.FetchRemoteConfig r0;
        org.json.JSONArray $r2;

        r0 := @this: com.mobclix.android.sdk.FetchRemoteConfig;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.json.JSONArray) $r1;

        virtualinvoke r0.<com.mobclix.android.sdk.FetchRemoteConfig: void onPostExecute(org.json.JSONArray)>($r2);

        return;
    }

    protected void onPostExecute(org.json.JSONArray)
    {
        com.mobclix.android.sdk.FetchRemoteConfig r0;
        org.json.JSONObject $r4;
        byte $b6;
        boolean $z0, $z1;
        java.lang.Exception $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        android.app.AlertDialog $r18;
        android.app.AlertDialog$Builder r2, $r30;
        java.lang.StringBuilder $r6, $r29;
        android.content.Context $r15;
        long l2, $l4;
        java.lang.String[] $r8;
        int i0, $i1, $i3, $i5;
        java.lang.String r3, $r5, $r7, r9, $r11, $r12, $r13;
        com.mobclix.android.sdk.Mobclix $r14;
        com.mobclix.android.sdk.FetchRemoteConfig$2 $r17, $r32;
        com.mobclix.android.sdk.FetchRemoteConfig$1 $r16, $r31;
        org.json.JSONArray $r1, $r10;

        r0 := @this: com.mobclix.android.sdk.FetchRemoteConfig;

        $r1 := @parameter0: org.json.JSONArray;

        if $r1 != null goto label01;

        return;

     label01:
        i0 = 0;

     label02:
        $i1 = virtualinvoke $r1.<org.json.JSONArray: int length()>();

        if i0 >= $i1 goto label97;

     label03:
        $r4 = virtualinvoke $r1.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r5 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("id");

     label04:
        if $r5 == null goto label07;

     label05:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

     label06:
        if $z0 == 0 goto label08;

     label07:
        i0 = i0 + 1;

        goto label02;

     label08:
        $i1 = 0;

        l2 = 0L;

        $r29 = new java.lang.StringBuilder;

        $r6 = $r29;

     label09:
        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("MCAppAlert");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>($r7);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("");

     label10:
        if $z0 != 0 goto label16;

     label11:
        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

     label12:
        $r7 = $r8[0];

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

     label13:
        $i1 = $i3;

     label14:
        $r7 = $r8[1];

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7);

     label15:
        l2 = $l4;

     label16:
        $r7 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("title");

     label17:
        if $r7 == null goto label07;

     label18:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("");

     label19:
        if $z0 != 0 goto label07;

     label20:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label21:
        if $z0 != 0 goto label07;

        r9 = null;

     label22:
        r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("message");

     label23:
        r9 = r3;

        if r3 == null goto label28;

     label24:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("");

     label25:
        if $z0 != 0 goto label28;

     label26:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label27:
        if $z0 == 0 goto label29;

     label28:
        r9 = null;

     label29:
        $i3 = 0;

     label30:
        $i5 = virtualinvoke $r4.<org.json.JSONObject: int getInt(java.lang.String)>("max_displays");

     label31:
        $i3 = $i5;

     label32:
        if $i3 == 0 goto label33;

        if $i1 >= $i3 goto label07;

     label33:
        $l4 = 0L;

     label34:
        $i3 = virtualinvoke $r4.<org.json.JSONObject: int getInt(java.lang.String)>("display_interval");

     label35:
        $l4 = (long) $i3;

        $l4 = $l4 * 1000L;

     label36:
        $b6 = $l4 cmp 0L;

        if $b6 == 0 goto label39;

        l2 = l2 + $l4;

     label37:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label38:
        $b6 = l2 cmp $l4;

        $i3 = (int) $b6;

        if $i3 >= 0 goto label07;

     label39:
        $r10 = virtualinvoke $r4.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("target_versions");

     label40:
        $z0 = 0;

        $i3 = 0;

     label41:
        $i5 = virtualinvoke $r10.<org.json.JSONArray: int length()>();

     label42:
        if $i3 < $i5 goto label85;

        if $z0 == 0 goto label07;

        r3 = null;

     label43:
        $r11 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("action_button");

     label44:
        r3 = $r11;

        if $r11 == null goto label49;

     label45:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("");

     label46:
        if $z0 != 0 goto label49;

     label47:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label48:
        if $z0 == 0 goto label50;

     label49:
        r3 = null;

     label50:
        $r11 = null;

     label51:
        $r12 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("action_url");

     label52:
        $r11 = $r12;

        if $r12 == null goto label57;

     label53:
        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("");

     label54:
        if $z0 != 0 goto label57;

     label55:
        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label56:
        if $z0 == 0 goto label58;

     label57:
        $r11 = null;

     label58:
        if $r11 == null goto label59;

        if r3 == null goto label07;

     label59:
        $r12 = null;

     label60:
        $r13 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("dismiss_button");

     label61:
        $r12 = $r13;

        if $r13 == null goto label66;

     label62:
        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("");

     label63:
        if $z0 != 0 goto label66;

     label64:
        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label65:
        if $z0 == 0 goto label67;

     label66:
        $r12 = null;

     label67:
        if $r11 != null goto label68;

        if $r12 == null goto label07;

     label68:
        $r30 = new android.app.AlertDialog$Builder;

        r2 = $r30;

     label69:
        $r14 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r15 = virtualinvoke $r14.<com.mobclix.android.sdk.Mobclix: android.content.Context getContext()>();

        specialinvoke $r30.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r15);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>($r7);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(0);

     label70:
        if r9 == null goto label72;

     label71:
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>(r9);

     label72:
        if $r11 == null goto label74;

        $r31 = new com.mobclix.android.sdk.FetchRemoteConfig$1;

        $r16 = $r31;

     label73:
        specialinvoke $r31.<com.mobclix.android.sdk.FetchRemoteConfig$1: void <init>(com.mobclix.android.sdk.FetchRemoteConfig,java.lang.Object)>(r0, $r11);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>(r3, $r16);

     label74:
        if $r12 == null goto label76;

        $r32 = new com.mobclix.android.sdk.FetchRemoteConfig$2;

        $r17 = $r32;

     label75:
        specialinvoke $r32.<com.mobclix.android.sdk.FetchRemoteConfig$2: void <init>(com.mobclix.android.sdk.FetchRemoteConfig)>(r0);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r12, $r17);

     label76:
        $r18 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        virtualinvoke $r18.<android.app.AlertDialog: void show()>();

     label77:
        $i1 = $i1 + 1;

     label78:
        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label79:
        $r29 = new java.lang.StringBuilder;

        $r6 = $r29;

     label80:
        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("MCAppAlert");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label81:
        $r29 = new java.lang.StringBuilder;

        $r6 = $r29;

     label82:
        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mobclix.android.sdk.Mobclix: void addPref(java.lang.String,java.lang.String)>($r5, $r7);

     label83:
        goto label07;

     label84:
        $r19 := @caughtexception;

        goto label07;

     label85:
        r3 = virtualinvoke $r10.<org.json.JSONArray: java.lang.String getString(int)>($i3);

        $r8 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\*");

        r3 = $r8[0];

        $r14 = r0.<com.mobclix.android.sdk.FetchRemoteConfig: com.mobclix.android.sdk.Mobclix c>;

        $r11 = virtualinvoke $r14.<com.mobclix.android.sdk.Mobclix: java.lang.String getApplicationVersion()>();

        $i5 = virtualinvoke r3.<java.lang.String: int length()>();

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

     label86:
        if $z1 == 0 goto label87;

        $z0 = 1;

     label87:
        $i3 = $i3 + 1;

        goto label41;

     label88:
        $r20 := @caughtexception;

        goto label67;

     label89:
        $r21 := @caughtexception;

        goto label58;

     label90:
        $r22 := @caughtexception;

        goto label50;

     label91:
        $r23 := @caughtexception;

        goto label87;

     label92:
        $r24 := @caughtexception;

        goto label36;

     label93:
        $r25 := @caughtexception;

        goto label32;

     label94:
        $r26 := @caughtexception;

        goto label29;

     label95:
        $r27 := @caughtexception;

        goto label16;

     label96:
        $r28 := @caughtexception;

        goto label14;

     label97:
        return;

        catch java.lang.Exception from label03 to label04 with label84;
        catch java.lang.Exception from label05 to label06 with label84;
        catch java.lang.Exception from label09 to label10 with label84;
        catch java.lang.Exception from label11 to label12 with label84;
        catch java.lang.Exception from label12 to label13 with label96;
        catch java.lang.Exception from label14 to label15 with label95;
        catch java.lang.Exception from label16 to label17 with label84;
        catch java.lang.Exception from label18 to label19 with label84;
        catch java.lang.Exception from label20 to label21 with label84;
        catch java.lang.Exception from label22 to label23 with label94;
        catch java.lang.Exception from label24 to label25 with label94;
        catch java.lang.Exception from label26 to label27 with label94;
        catch java.lang.Exception from label30 to label31 with label93;
        catch java.lang.Exception from label34 to label35 with label92;
        catch java.lang.Exception from label37 to label38 with label84;
        catch java.lang.Exception from label39 to label40 with label84;
        catch java.lang.Exception from label41 to label42 with label84;
        catch java.lang.Exception from label43 to label44 with label90;
        catch java.lang.Exception from label45 to label46 with label90;
        catch java.lang.Exception from label47 to label48 with label90;
        catch java.lang.Exception from label51 to label52 with label89;
        catch java.lang.Exception from label53 to label54 with label89;
        catch java.lang.Exception from label55 to label56 with label89;
        catch java.lang.Exception from label60 to label61 with label88;
        catch java.lang.Exception from label62 to label63 with label88;
        catch java.lang.Exception from label64 to label65 with label88;
        catch java.lang.Exception from label69 to label70 with label84;
        catch java.lang.Exception from label71 to label72 with label84;
        catch java.lang.Exception from label73 to label74 with label84;
        catch java.lang.Exception from label75 to label77 with label84;
        catch java.lang.Exception from label78 to label79 with label84;
        catch java.lang.Exception from label80 to label81 with label84;
        catch java.lang.Exception from label82 to label83 with label84;
        catch java.lang.Exception from label85 to label86 with label91;
    }

    void processAdUnitConfig(org.json.JSONObject) throws org.json.JSONException
    {
        java.util.HashMap r3, $r13;
        long $l0;
        java.lang.String[] $r9;
        com.mobclix.android.sdk.FetchRemoteConfig r0;
        org.json.JSONObject $r1, $r8, $r11;
        byte $b1;
        int $i2, $i3;
        java.lang.String r4, $r5, $r10, $r14;
        boolean $z0;
        java.util.Iterator $r12;
        java.lang.Exception r2, $r15, $r16;
        com.mobclix.android.sdk.MobclixAdUnitSettings r7;
        java.lang.Object $r6;
        java.lang.StringBuilder $r17;

        r0 := @this: com.mobclix.android.sdk.FetchRemoteConfig;

        $r1 := @parameter0: org.json.JSONObject;

        $r5 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("size");

        r3 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings>;

        $r6 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (com.mobclix.android.sdk.MobclixAdUnitSettings) $r6;

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("enabled");

        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setEnabled(boolean)>($z0);

        $l0 = virtualinvoke $r1.<org.json.JSONObject: long getLong(java.lang.String)>("refresh");

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label12;

        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setRefreshTime(long)>(-1L);

     label01:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("autoplay");

        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setAutoplay(boolean)>($z0);

        $l0 = virtualinvoke $r1.<org.json.JSONObject: long getLong(java.lang.String)>("autoplay_interval");

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label13;

        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setAutoplayInterval(long)>(-1L);

     label02:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("rm_require_user");

        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setRichMediaRequireUser(boolean)>($z0);

     label03:
        $r8 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("open_allocs");

     label04:
        $r9 = <com.mobclix.android.sdk.Mobclix: java.lang.String[] MC_OPEN_ALLOCATIONS>;

     label05:
        $i2 = lengthof $r9;

     label06:
        $i3 = 0;

     label07:
        if $i3 < $i2 goto label14;

     label08:
        r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("customAdUrl");

        $r10 = virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: java.lang.String getCustomAdUrl()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label09:
        if $z0 == 0 goto label33;

     label10:
        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setCustomAdUrl(java.lang.String)>("");

     label11:
        return;

     label12:
        $l0 = virtualinvoke $r1.<org.json.JSONObject: long getLong(java.lang.String)>("refresh");

        $l0 = $l0 * 1000L;

        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setRefreshTime(long)>($l0);

        goto label01;

     label13:
        $l0 = virtualinvoke $r1.<org.json.JSONObject: long getLong(java.lang.String)>("autoplay_interval");

        $l0 = $l0 * 1000L;

        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setAutoplayInterval(long)>($l0);

        goto label02;

     label14:
        r4 = $r9[$i3];

        $r11 = virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>(r4);

     label15:
        if $r11 == null goto label30;

     label16:
        $r12 = virtualinvoke $r11.<org.json.JSONObject: java.util.Iterator keys()>();

     label17:
        r3 = new java.util.HashMap;

     label18:
        specialinvoke r3.<java.util.HashMap: void <init>()>();

     label19:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label20:
        if $z0 != 0 goto label23;

     label21:
        $r13 = r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: java.util.HashMap openAllocationSettings>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r3);

     label22:
        $i3 = $i3 + 1;

        goto label07;

     label23:
        $r6 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.String) $r6;

        $r14 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r10);

     label24:
        if $r14 == null goto label19;

     label25:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("");

     label26:
        if $z0 != 0 goto label19;

     label27:
        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r14);

     label28:
        goto label19;

     label29:
        $r15 := @caughtexception;

        goto label19;

     label30:
        r3 = r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: java.util.HashMap openAllocationSettings>;

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, null);

     label31:
        goto label22;

     label32:
        $r16 := @caughtexception;

        goto label08;

     label33:
        $r17 = new java.lang.StringBuilder;

     label34:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CustomAdUrl");

        $r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mobclix.android.sdk.Mobclix: void removePref(java.lang.String)>($r5);

        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setCustomAdUrl(java.lang.String)>(r4);

     label35:
        return;

     label36:
        r2 := @caughtexception;

        virtualinvoke r7.<com.mobclix.android.sdk.MobclixAdUnitSettings: void setCustomAdUrl(java.lang.String)>("");

        return;

        catch java.lang.Exception from label03 to label04 with label32;
        catch java.lang.Exception from label05 to label06 with label32;
        catch java.lang.Exception from label08 to label09 with label36;
        catch java.lang.Exception from label10 to label11 with label36;
        catch java.lang.Exception from label14 to label15 with label32;
        catch java.lang.Exception from label16 to label17 with label32;
        catch java.lang.Exception from label18 to label20 with label32;
        catch java.lang.Exception from label21 to label22 with label32;
        catch java.lang.Exception from label23 to label24 with label29;
        catch java.lang.Exception from label25 to label26 with label29;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.lang.Exception from label34 to label35 with label36;
    }
}
