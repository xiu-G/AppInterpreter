class cs.gson.internal.LinkedTreeMap$KeySet extends java.util.AbstractSet
{
    final cs.gson.internal.LinkedTreeMap this$0;

    void <init>(cs.gson.internal.LinkedTreeMap)
    {
        cs.gson.internal.LinkedTreeMap$KeySet r0;
        cs.gson.internal.LinkedTreeMap $r1;

        r0 := @this: cs.gson.internal.LinkedTreeMap$KeySet;

        $r1 := @parameter0: cs.gson.internal.LinkedTreeMap;

        r0.<cs.gson.internal.LinkedTreeMap$KeySet: cs.gson.internal.LinkedTreeMap this$0> = $r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public void clear()
    {
        cs.gson.internal.LinkedTreeMap$KeySet r0;
        cs.gson.internal.LinkedTreeMap $r1;

        r0 := @this: cs.gson.internal.LinkedTreeMap$KeySet;

        $r1 = r0.<cs.gson.internal.LinkedTreeMap$KeySet: cs.gson.internal.LinkedTreeMap this$0>;

        virtualinvoke $r1.<cs.gson.internal.LinkedTreeMap: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object $r1;
        cs.gson.internal.LinkedTreeMap$KeySet r0;
        cs.gson.internal.LinkedTreeMap $r2;
        boolean $z0;

        r0 := @this: cs.gson.internal.LinkedTreeMap$KeySet;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<cs.gson.internal.LinkedTreeMap$KeySet: cs.gson.internal.LinkedTreeMap this$0>;

        $z0 = virtualinvoke $r2.<cs.gson.internal.LinkedTreeMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        cs.gson.internal.LinkedTreeMap$KeySet r0;
        cs.gson.internal.LinkedTreeMap$KeySet$1 $r1;
        cs.gson.internal.LinkedTreeMap $r2;

        r0 := @this: cs.gson.internal.LinkedTreeMap$KeySet;

        $r1 = new cs.gson.internal.LinkedTreeMap$KeySet$1;

        $r2 = r0.<cs.gson.internal.LinkedTreeMap$KeySet: cs.gson.internal.LinkedTreeMap this$0>;

        specialinvoke $r1.<cs.gson.internal.LinkedTreeMap$KeySet$1: void <init>(cs.gson.internal.LinkedTreeMap$KeySet,cs.gson.internal.LinkedTreeMap)>(r0, $r2);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        cs.gson.internal.LinkedTreeMap$Node $r2;
        java.lang.Object $r1;
        cs.gson.internal.LinkedTreeMap$KeySet r0;
        cs.gson.internal.LinkedTreeMap $r3;

        r0 := @this: cs.gson.internal.LinkedTreeMap$KeySet;

        $r1 := @parameter0: java.lang.Object;

        $r3 = r0.<cs.gson.internal.LinkedTreeMap$KeySet: cs.gson.internal.LinkedTreeMap this$0>;

        $r2 = virtualinvoke $r3.<cs.gson.internal.LinkedTreeMap: cs.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public int size()
    {
        int i0;
        cs.gson.internal.LinkedTreeMap$KeySet r0;
        cs.gson.internal.LinkedTreeMap $r1;

        r0 := @this: cs.gson.internal.LinkedTreeMap$KeySet;

        $r1 = r0.<cs.gson.internal.LinkedTreeMap$KeySet: cs.gson.internal.LinkedTreeMap this$0>;

        i0 = $r1.<cs.gson.internal.LinkedTreeMap: int size>;

        return i0;
    }
}
