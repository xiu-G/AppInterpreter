public class org.slf4j.helpers.BasicMDCAdapter extends java.lang.Object implements org.slf4j.spi.MDCAdapter
{
    static boolean IS_JDK14;
    private java.lang.InheritableThreadLocal inheritableThreadLocal;

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <org.slf4j.helpers.BasicMDCAdapter: boolean isJDK14()>();

        <org.slf4j.helpers.BasicMDCAdapter: boolean IS_JDK14> = $z0;

        return;
    }

    public void <init>()
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.lang.InheritableThreadLocal $r1;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.InheritableThreadLocal;

        specialinvoke $r1.<java.lang.InheritableThreadLocal: void <init>()>();

        r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal> = $r1;

        return;
    }

    static boolean isJDK14()
    {
        java.lang.Throwable r0;
        java.lang.String $r1;
        boolean $z0;

     label1:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("1.4");

     label2:
        return $z0;

     label3:
        r0 := @caughtexception;

        return 0;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public void clear()
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map r3;
        java.lang.Object $r2;
        java.lang.InheritableThreadLocal $r1;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        $r1 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r2 = virtualinvoke $r1.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        if r3 == null goto label2;

        interfaceinvoke r3.<java.util.Map: void clear()>();

        $z0 = staticinvoke <org.slf4j.helpers.BasicMDCAdapter: boolean isJDK14()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        virtualinvoke $r1.<java.lang.InheritableThreadLocal: void set(java.lang.Object)>(null);

        return;

     label1:
        $r1 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        virtualinvoke $r1.<java.lang.InheritableThreadLocal: void remove()>();

     label2:
        return;
    }

    public java.lang.String get(java.lang.String)
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map r4;
        java.lang.Object $r3;
        java.lang.String $r1;
        java.lang.InheritableThreadLocal $r2;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r3 = virtualinvoke $r2.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r4 = (java.util.Map) $r3;

        if r4 == null goto label1;

        if $r1 == null goto label1;

        $r3 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        return $r1;

     label1:
        return null;
    }

    public java.util.Map getCopyOfContextMap()
    {
        java.lang.Throwable $r6;
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map r3, $r5;
        java.lang.Object $r2;
        java.util.HashMap $r4;
        java.lang.InheritableThreadLocal $r1;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        $r1 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r2 = virtualinvoke $r1.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        if r3 == null goto label5;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r4);

        entermonitor r3;

     label1:
        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>(r3);

        exitmonitor r3;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor r3;

     label4:
        throw $r6;

     label5:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Set getKeys()
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map r3;
        java.util.Set $r4;
        java.lang.Object $r2;
        java.lang.InheritableThreadLocal $r1;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        $r1 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r2 = virtualinvoke $r1.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        if r3 == null goto label1;

        $r4 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();

        return $r4;

     label1:
        return null;
    }

    public void put(java.lang.String, java.lang.String)
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.HashMap $r7;
        java.lang.IllegalArgumentException $r3;
        java.util.Map r6, $r8;
        java.lang.Object $r5;
        java.lang.String $r1, $r2;
        java.lang.InheritableThreadLocal $r4;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key cannot be null");

        throw $r3;

     label1:
        $r4 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r5 = virtualinvoke $r4.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r6 = (java.util.Map) $r5;

        if r6 != null goto label2;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r8 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r7);

        r6 = $r8;

        $r4 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        virtualinvoke $r4.<java.lang.InheritableThreadLocal: void set(java.lang.Object)>($r8);

     label2:
        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void remove(java.lang.String)
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map r4;
        java.lang.Object $r3;
        java.lang.String $r1;
        java.lang.InheritableThreadLocal $r2;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r3 = virtualinvoke $r2.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r4 = (java.util.Map) $r3;

        if r4 == null goto label1;

        interfaceinvoke r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void setContextMap(java.util.Map)
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map $r1;
        java.util.HashMap $r2;
        java.lang.InheritableThreadLocal $r3;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        $r1 := @parameter0: java.util.Map;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r1);

        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);

        $r3 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        virtualinvoke $r3.<java.lang.InheritableThreadLocal: void set(java.lang.Object)>($r1);

        return;
    }
}
