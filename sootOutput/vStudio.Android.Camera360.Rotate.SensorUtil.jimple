public class vStudio.Android.Camera360.Rotate.SensorUtil extends java.lang.Object implements android.hardware.SensorEventListener
{
    private java.util.List list;
    private long mOldTime;
    private android.hardware.SensorManager mSenManger;

    public void <init>(android.app.Activity)
    {
        android.hardware.SensorManager r4;
        vStudio.Android.Camera360.Rotate.SensorUtil r0;
        java.lang.Object $r2;
        android.app.Activity $r1;
        java.util.ArrayList $r3;

        r0 := @this: vStudio.Android.Camera360.Rotate.SensorUtil;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<vStudio.Android.Camera360.Rotate.SensorUtil: java.util.List list> = $r3;

        $r2 = virtualinvoke $r1.<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>("sensor");

        r4 = (android.hardware.SensorManager) $r2;

        r0.<vStudio.Android.Camera360.Rotate.SensorUtil: android.hardware.SensorManager mSenManger> = r4;

        return;
    }

    public void add(vStudio.Android.Camera360.Rotate.RotateMark)
    {
        java.util.List $r2;
        vStudio.Android.Camera360.Rotate.SensorUtil r0;
        vStudio.Android.Camera360.Rotate.RotateMark $r1;

        r0 := @this: vStudio.Android.Camera360.Rotate.SensorUtil;

        $r1 := @parameter0: vStudio.Android.Camera360.Rotate.RotateMark;

        $r2 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: java.util.List list>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addGridView(android.widget.GridView)
    {
        java.util.List $r2;
        android.widget.GridView $r1;
        vStudio.Android.Camera360.Rotate.SensorUtil r0;
        vStudio.Android.Camera360.Rotate.RotateMark $r4;
        int $i0, i1;
        android.view.View $r3;

        r0 := @this: vStudio.Android.Camera360.Rotate.SensorUtil;

        $r1 := @parameter0: android.widget.GridView;

        $i0 = virtualinvoke $r1.<android.widget.GridView: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 < $i0 goto label2;

        return;

     label2:
        $r2 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: java.util.List list>;

        $r3 = virtualinvoke $r1.<android.widget.GridView: android.view.View getChildAt(int)>(i1);

        $r4 = (vStudio.Android.Camera360.Rotate.RotateMark) $r3;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;
    }

    public void addRightButtons(vStudio.Android.Camera360.Layouts.RightButtons)
    {
        java.util.List $r2;
        vStudio.Android.Camera360.Rotate.SensorUtil r0;
        vStudio.Android.Camera360.Layouts.RightButtons $r1;
        vStudio.Android.Camera360.Views.RotateImageView $r3;

        r0 := @this: vStudio.Android.Camera360.Rotate.SensorUtil;

        $r1 := @parameter0: vStudio.Android.Camera360.Layouts.RightButtons;

        $r2 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: java.util.List list>;

        $r3 = $r1.<vStudio.Android.Camera360.Layouts.RightButtons: vStudio.Android.Camera360.Views.RotateImageView mBtn01>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r2 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: java.util.List list>;

        $r3 = $r1.<vStudio.Android.Camera360.Layouts.RightButtons: vStudio.Android.Camera360.Views.RotateImageView mBtn02>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r2 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: java.util.List list>;

        $r3 = $r1.<vStudio.Android.Camera360.Layouts.RightButtons: vStudio.Android.Camera360.Views.RotateImageView mBtn03>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r2 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: java.util.List list>;

        $r3 = $r1.<vStudio.Android.Camera360.Layouts.RightButtons: vStudio.Android.Camera360.Views.RotateImageView mBtn04>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r2 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: java.util.List list>;

        $r3 = $r1.<vStudio.Android.Camera360.Layouts.RightButtons: vStudio.Android.Camera360.Views.RotateImageView mBtnCenter>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void onAccuracyChanged(android.hardware.Sensor, int)
    {
        int $i0;
        android.hardware.Sensor $r1;
        vStudio.Android.Camera360.Rotate.SensorUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.SensorUtil;

        $r1 := @parameter0: android.hardware.Sensor;

        $i0 := @parameter1: int;

        return;
    }

    public void onSensorChanged(android.hardware.SensorEvent)
    {
        java.util.Iterator $r4;
        long $l1, $l2;
        float[] $r7;
        java.util.List $r3;
        vStudio.Android.Camera360.Rotate.SensorUtil r0;
        android.hardware.SensorEvent $r1;
        byte $b3;
        vStudio.Android.Camera360.Rotate.RotateMark r6;
        int $i0;
        float $f0, $f1;
        java.lang.Object $r5;
        android.hardware.Sensor r2;
        boolean $z0;

        r0 := @this: vStudio.Android.Camera360.Rotate.SensorUtil;

        $r1 := @parameter0: android.hardware.SensorEvent;

        r2 = $r1.<android.hardware.SensorEvent: android.hardware.Sensor sensor>;

        $i0 = virtualinvoke r2.<android.hardware.Sensor: int getType()>();

        lookupswitch($i0)
        {
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: long mOldTime>;

        $l1 = $l1 - $l2;

        $b3 = $l1 cmp 500L;

        $i0 = (int) $b3;

        if $i0 <= 0 goto label4;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<vStudio.Android.Camera360.Rotate.SensorUtil: long mOldTime> = $l1;

        $r3 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: java.util.List list>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (vStudio.Android.Camera360.Rotate.RotateMark) $r5;

        $r7 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r7[1];

        $r7 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f1 = $r7[2];

        interfaceinvoke r6.<vStudio.Android.Camera360.Rotate.RotateMark: void rotate(float,float)>($f0, $f1);

        goto label3;

     label4:
        return;
    }

    public void register()
    {
        android.hardware.SensorManager $r1, $r3;
        vStudio.Android.Camera360.Rotate.SensorUtil r0;
        android.hardware.Sensor $r2;

        r0 := @this: vStudio.Android.Camera360.Rotate.SensorUtil;

        $r1 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: android.hardware.SensorManager mSenManger>;

        $r3 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: android.hardware.SensorManager mSenManger>;

        $r2 = virtualinvoke $r3.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(3);

        virtualinvoke $r1.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>(r0, $r2, 3);

        return;
    }

    public void registerDirection(vStudio.Android.Camera360.Rotate.SensorUtil$Direction)
    {
        vStudio.Android.Camera360.Rotate.SensorUtil r0;
        vStudio.Android.Camera360.Rotate.SensorUtil$Direction $r1;

        r0 := @this: vStudio.Android.Camera360.Rotate.SensorUtil;

        $r1 := @parameter0: vStudio.Android.Camera360.Rotate.SensorUtil$Direction;

        staticinvoke <vStudio.Android.Camera360.Rotate.RotateUtil: void setDirection(vStudio.Android.Camera360.Rotate.SensorUtil$Direction)>($r1);

        return;
    }

    public void removeDirection()
    {
        vStudio.Android.Camera360.Rotate.SensorUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.SensorUtil;

        staticinvoke <vStudio.Android.Camera360.Rotate.RotateUtil: void setDirection(vStudio.Android.Camera360.Rotate.SensorUtil$Direction)>(null);

        return;
    }

    public void unRegister()
    {
        android.hardware.SensorManager $r1;
        vStudio.Android.Camera360.Rotate.SensorUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.SensorUtil;

        $r1 = r0.<vStudio.Android.Camera360.Rotate.SensorUtil: android.hardware.SensorManager mSenManger>;

        virtualinvoke $r1.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>(r0);

        return;
    }
}
