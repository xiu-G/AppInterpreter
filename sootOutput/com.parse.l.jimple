final class com.parse.l extends java.lang.Object
{
    private static int j;
    private static int k;
    private static int l;
    java.lang.String a;
    org.json.JSONObject b;
    private org.apache.http.client.HttpClient c;
    private org.apache.http.client.methods.HttpPost d;
    private boolean e;
    private boolean f;
    private int g;
    private long h;
    private com.parse.m i;

    static void <clinit>()
    {
        <com.parse.l: int j> = 10000;

        <com.parse.l: int k> = 10000;

        <com.parse.l: int l> = 1000;

        return;
    }

    void <init>(java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient $r4;
        org.json.JSONObject $r2;
        org.apache.http.params.BasicHttpParams $r3;
        int $i0;
        com.parse.l r0;
        java.lang.String $r1;

        r0 := @this: com.parse.l;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.parse.l: boolean e> = 0;

        r0.<com.parse.l: boolean f> = 0;

        r0.<com.parse.l: int g> = 0;

        r0.<com.parse.l: long h> = 0L;

        r0.<com.parse.l: java.lang.String a> = $r1;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        r0.<com.parse.l: org.json.JSONObject b> = $r2;

        $r3 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $i0 = <com.parse.l: int k>;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r3, $i0);

        $i0 = <com.parse.l: int j>;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r3, $i0);

        $r4 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r3);

        r0.<com.parse.l: org.apache.http.client.HttpClient c> = $r4;

        specialinvoke r0.<com.parse.l: void f()>();

        return;
    }

    void <init>(org.json.JSONObject)
    {
        org.apache.http.impl.client.DefaultHttpClient $r4;
        org.json.JSONObject $r1;
        org.apache.http.params.BasicHttpParams $r3;
        int $i0;
        com.parse.l r0;
        java.lang.String $r2;

        r0 := @this: com.parse.l;

        $r1 := @parameter0: org.json.JSONObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.parse.l: boolean e> = 0;

        r0.<com.parse.l: boolean f> = 0;

        r0.<com.parse.l: int g> = 0;

        r0.<com.parse.l: long h> = 0L;

        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("op");

        r0.<com.parse.l: java.lang.String a> = $r2;

        $r1 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("params");

        r0.<com.parse.l: org.json.JSONObject b> = $r1;

        $r3 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $i0 = <com.parse.l: int k>;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r3, $i0);

        $i0 = <com.parse.l: int j>;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r3, $i0);

        $r4 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r3);

        r0.<com.parse.l: org.apache.http.client.HttpClient c> = $r4;

        specialinvoke r0.<com.parse.l: void f()>();

        return;
    }

    private static com.parse.ParseException a(java.lang.String, java.lang.Exception)
    {
        com.parse.ParseException $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r0;
        java.lang.Exception $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Exception;

        $r2 = new com.parse.ParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r0 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r0 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.parse.ParseException: void <init>(int,java.lang.String)>(100, $r0);

        return $r2;
    }

    static java.lang.String a(java.lang.Object)
    {
        org.json.JSONStringer $r2;
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r2 = new org.json.JSONStringer;

        specialinvoke $r2.<org.json.JSONStringer: void <init>()>();

        staticinvoke <com.parse.l: void a(org.json.JSONStringer,java.lang.Object)>($r2, $r0);

        $r1 = virtualinvoke $r2.<org.json.JSONStringer: java.lang.String toString()>();

        return $r1;
    }

    private static org.json.JSONObject a(org.apache.http.client.HttpClient, org.apache.http.client.methods.HttpPost)
    {
        java.lang.Throwable $r9, $r11;
        org.apache.http.client.methods.HttpPost $r1;
        com.parse.ParseException $r10;
        org.json.JSONException $r12;
        org.json.JSONObject $r16;
        org.apache.http.client.HttpClient $r0;
        java.lang.String $r7;
        org.apache.http.HttpEntity $r5;
        org.json.JSONTokener $r8, $r15;
        java.io.InputStreamReader $r2, $r13;
        java.lang.Exception $r17;
        org.apache.http.HttpResponse $r3;
        java.io.BufferedReader $r4, $r14;
        java.io.InputStream $r6;

        $r0 := @parameter0: org.apache.http.client.HttpClient;

        $r1 := @parameter1: org.apache.http.client.methods.HttpPost;

     label01:
        $r3 = interfaceinvoke $r0.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r1);

     label02:
        $r14 = new java.io.BufferedReader;

        $r4 = $r14;

        $r13 = new java.io.InputStreamReader;

        $r2 = $r13;

     label03:
        $r5 = interfaceinvoke $r3.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        specialinvoke $r13.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r6, "UTF-8");

        specialinvoke $r14.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r2, 8192);

        $r7 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label04:
        $r15 = new org.json.JSONTokener;

        $r8 = $r15;

     label05:
        specialinvoke $r15.<org.json.JSONTokener: void <init>(java.lang.String)>($r7);

     label06:
        $r16 = new org.json.JSONObject;

     label07:
        specialinvoke $r16.<org.json.JSONObject: void <init>(org.json.JSONTokener)>($r8);

     label08:
        return $r16;

     label09:
        $r9 := @caughtexception;

        $r17 = (java.lang.Exception) $r9;

        $r10 = staticinvoke <com.parse.l: com.parse.ParseException a(java.lang.String,java.lang.Exception)>("bad protocol", $r17);

        throw $r10;

     label10:
        $r11 := @caughtexception;

        $r17 = (java.lang.Exception) $r11;

        $r10 = staticinvoke <com.parse.l: com.parse.ParseException a(java.lang.String,java.lang.Exception)>("i/o failure", $r17);

        throw $r10;

     label11:
        $r12 := @caughtexception;

        $r10 = staticinvoke <com.parse.l: com.parse.ParseException a(java.lang.String,java.lang.Exception)>("bad json response", $r12);

        throw $r10;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label09;
        catch org.apache.http.client.ClientProtocolException from label03 to label04 with label09;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch org.json.JSONException from label05 to label06 with label11;
        catch org.json.JSONException from label07 to label08 with label11;
    }

    public static void a(double)
    {
        int $i0;
        double $d0;

        $d0 := @parameter0: double;

        $d0 = 1000.0 * $d0;

        $i0 = (int) $d0;

        <com.parse.l: int l> = $i0;

        return;
    }

    private static void a(org.json.JSONStringer, java.lang.Object)
    {
        java.util.Iterator $r3;
        java.util.ArrayList $r4;
        org.json.JSONObject $r2;
        org.json.JSONStringer $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.String $r5;
        org.json.JSONArray $r6;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONStringer;

        $r1 := @parameter1: java.lang.Object;

        $z0 = $r1 instanceof org.json.JSONObject;

        if $z0 == 0 goto label5;

        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer object()>();

        $r2 = (org.json.JSONObject) $r1;

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.util.Iterator keys()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label1;

     label2:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        $r3 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r1;

        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer key(java.lang.String)>($r5);

        $r1 = virtualinvoke $r2.<org.json.JSONObject: java.lang.Object opt(java.lang.String)>($r5);

        staticinvoke <com.parse.l: void a(org.json.JSONStringer,java.lang.Object)>($r0, $r1);

        goto label3;

     label4:
        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer endObject()>();

        return;

     label5:
        $z0 = $r1 instanceof org.json.JSONArray;

        if $z0 == 0 goto label8;

        $r6 = (org.json.JSONArray) $r1;

        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer array()>();

        $i0 = 0;

     label6:
        $i1 = virtualinvoke $r6.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label7;

        $r1 = virtualinvoke $r6.<org.json.JSONArray: java.lang.Object get(int)>($i0);

        staticinvoke <com.parse.l: void a(org.json.JSONStringer,java.lang.Object)>($r0, $r1);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer endArray()>();

        return;

     label8:
        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer value(java.lang.Object)>($r1);

        return;
    }

    private void f()
    {
        org.apache.http.client.HttpClient $r4;
        org.apache.http.params.HttpParams $r5;
        int $i0;
        com.parse.l r0;
        java.lang.String $r1, $r2;
        org.apache.http.HttpHost $r3;

        r0 := @this: com.parse.l;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.proxyHost");

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.proxyPort");

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $r3 = new org.apache.http.HttpHost;

        specialinvoke $r3.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r1, $i0, "http");

        $r4 = r0.<com.parse.l: org.apache.http.client.HttpClient c>;

        $r5 = interfaceinvoke $r4.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r5.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", $r3);

     label2:
        return;
    }

    final java.lang.Object a(boolean)
    {
        org.apache.http.client.methods.HttpPost $r1, $r27;
        com.parse.signpost.commonshttp.CommonsHttpOAuthConsumer $r15, $r29;
        org.json.JSONException $r9, $r18;
        org.json.JSONObject $r5, $r8;
        com.parse.signpost.exception.OAuthCommunicationException $r22;
        com.parse.l r0;
        java.net.URI $r2;
        com.parse.m $r24;
        boolean $z0, $z1;
        com.parse.ParseInstallation $r10;
        org.apache.http.entity.StringEntity $r14, $r28;
        java.util.UUID $r11;
        com.parse.signpost.exception.OAuthMessageSignerException $r20;
        com.parse.signpost.exception.OAuthExpectationFailedException $r21;
        java.lang.StringBuilder $r23, $r31;
        java.io.UnsupportedEncodingException $r32;
        java.lang.Throwable $r19, $r25;
        java.lang.Object[] $r13;
        com.parse.ParseException $r17, $r30;
        long $l1;
        org.apache.http.client.HttpClient $r16;
        int $i0;
        java.lang.String $r3, $r4;
        java.util.Iterator $r6;
        java.lang.RuntimeException $r26;
        com.parse.ParseUser $r12;
        java.lang.Object $r7;

        r0 := @this: com.parse.l;

        $z0 := @parameter0: boolean;

     label01:
        staticinvoke <com.parse.Parse: void checkInit()>();

        $r1 = r0.<com.parse.l: org.apache.http.client.methods.HttpPost d>;

        if $r1 == null goto label02;

        $r1 = r0.<com.parse.l: org.apache.http.client.methods.HttpPost d>;

        $r2 = virtualinvoke $r1.<org.apache.http.client.methods.HttpPost: java.net.URI getURI()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String getHost()>();

        $r4 = <com.parse.ParseObject: java.lang.String server>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label21;

     label02:
        $r5 = r0.<com.parse.l: org.json.JSONObject b>;

        $r6 = virtualinvoke $r5.<org.json.JSONObject: java.util.Iterator keys()>();

        $r8 = new org.json.JSONObject;

        $r5 = $r8;

        specialinvoke $r8.<org.json.JSONObject: void <init>()>();

     label03:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label04:
        if $z1 == 0 goto label10;

     label05:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label06:
        $r3 = (java.lang.String) $r7;

        $r8 = r0.<com.parse.l: org.json.JSONObject b>;

     label07:
        $r7 = virtualinvoke $r8.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r3);

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r3, $r7);

     label08:
        goto label03;

     label09:
        $r9 := @caughtexception;

        $r26 = new java.lang.RuntimeException;

        $r3 = virtualinvoke $r9.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r26;

     label10:
        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("v", "a1.0.28");

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("includeRelationStub", 1);

        $r10 = staticinvoke <com.parse.ParseInstallation: com.parse.ParseInstallation getCurrentInstallation()>();

        $r3 = virtualinvoke $r10.<com.parse.ParseInstallation: java.lang.String getInstallationId()>();

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("iid", $r3);

        $r11 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r3 = virtualinvoke $r11.<java.util.UUID: java.lang.String toString()>();

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("uuid", $r3);

        $r12 = staticinvoke <com.parse.ParseUser: com.parse.ParseUser getCurrentUser()>();

     label11:
        if $r12 == null goto label15;

     label12:
        $r3 = virtualinvoke $r12.<com.parse.ParseUser: java.lang.String getSessionToken()>();

     label13:
        if $r3 == null goto label15;

     label14:
        $r3 = virtualinvoke $r12.<com.parse.ParseUser: java.lang.String getSessionToken()>();

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("session_token", $r3);

     label15:
        $r13 = newarray (java.lang.Object)[3];

        $r3 = <com.parse.ParseObject: java.lang.String server>;

        $r13[0] = $r3;

        $r13[1] = "2";

        $r3 = r0.<com.parse.l: java.lang.String a>;

        $r13[2] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%s/%s", $r13);

        $r27 = new org.apache.http.client.methods.HttpPost;

        specialinvoke $r27.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r3);

        r0.<com.parse.l: org.apache.http.client.methods.HttpPost d> = $r27;

        $r28 = new org.apache.http.entity.StringEntity;

        $r14 = $r28;

     label16:
        $r3 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String toString()>();

        specialinvoke $r28.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r3, "UTF8");

        virtualinvoke $r14.<org.apache.http.entity.StringEntity: void setContentType(java.lang.String)>("application/json");

     label17:
        $r1 = r0.<com.parse.l: org.apache.http.client.methods.HttpPost d>;

     label18:
        virtualinvoke $r1.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r14);

     label19:
        $r29 = new com.parse.signpost.commonshttp.CommonsHttpOAuthConsumer;

        $r15 = $r29;

        $r3 = <com.parse.Parse: java.lang.String applicationId>;

        $r4 = <com.parse.Parse: java.lang.String clientKey>;

        specialinvoke $r29.<com.parse.signpost.commonshttp.CommonsHttpOAuthConsumer: void <init>(java.lang.String,java.lang.String)>($r3, $r4);

        interfaceinvoke $r15.<com.parse.signpost.OAuthConsumer: void setTokenWithSecret(java.lang.String,java.lang.String)>(null, "");

        $r1 = r0.<com.parse.l: org.apache.http.client.methods.HttpPost d>;

     label20:
        interfaceinvoke $r15.<com.parse.signpost.OAuthConsumer: com.parse.signpost.http.HttpRequest sign(java.lang.Object)>($r1);

     label21:
        $r16 = r0.<com.parse.l: org.apache.http.client.HttpClient c>;

        $r1 = r0.<com.parse.l: org.apache.http.client.methods.HttpPost d>;

     label22:
        $r5 = staticinvoke <com.parse.l: org.json.JSONObject a(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost)>($r16, $r1);

     label23:
        $z1 = virtualinvoke $r5.<org.json.JSONObject: boolean has(java.lang.String)>("error");

     label24:
        if $z1 == 0 goto label37;

        $r30 = new com.parse.ParseException;

     label25:
        $i0 = virtualinvoke $r5.<org.json.JSONObject: int getInt(java.lang.String)>("code");

        $r3 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("error");

        specialinvoke $r30.<com.parse.ParseException: void <init>(int,java.lang.String)>($i0, $r3);

     label26:
        throw $r30;

     label27:
        $r18 := @caughtexception;

        $r17 = staticinvoke <com.parse.l: com.parse.ParseException a(java.lang.String,java.lang.Exception)>("corrupted json", $r18);

        throw $r17;

     label28:
        $r19 := @caughtexception;

        $r26 = new java.lang.RuntimeException;

        $r32 = (java.io.UnsupportedEncodingException) $r19;

        $r3 = virtualinvoke $r32.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r26;

     label29:
        $r20 := @caughtexception;

        $r30 = new com.parse.ParseException;

        $r3 = virtualinvoke $r20.<com.parse.signpost.exception.OAuthMessageSignerException: java.lang.String getMessage()>();

        specialinvoke $r30.<com.parse.ParseException: void <init>(int,java.lang.String)>(109, $r3);

        throw $r30;

     label30:
        $r21 := @caughtexception;

        $r30 = new com.parse.ParseException;

        $r3 = virtualinvoke $r21.<com.parse.signpost.exception.OAuthExpectationFailedException: java.lang.String getMessage()>();

        specialinvoke $r30.<com.parse.ParseException: void <init>(int,java.lang.String)>(109, $r3);

        throw $r30;

     label31:
        $r22 := @caughtexception;

        $r30 = new com.parse.ParseException;

        $r3 = virtualinvoke $r22.<com.parse.signpost.exception.OAuthCommunicationException: java.lang.String getMessage()>();

        specialinvoke $r30.<com.parse.ParseException: void <init>(int,java.lang.String)>(109, $r3);

        throw $r30;

     label32:
        $r17 := @caughtexception;

        $z1 = r0.<com.parse.l: boolean e>;

        if $z1 == 0 goto label33;

        $r30 = new com.parse.ParseException;

        specialinvoke $r30.<com.parse.ParseException: void <init>(int,java.lang.String)>(1, "Request cancelled");

        throw $r30;

     label33:
        $i0 = r0.<com.parse.l: int g>;

        $i0 = $i0 + 1;

        r0.<com.parse.l: int g> = $i0;

        $z1 = r0.<com.parse.l: boolean f>;

        if $z1 == 0 goto label36;

        $i0 = r0.<com.parse.l: int g>;

        if $i0 >= 5 goto label36;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>("Fetch failed. Waiting ");

        $l1 = r0.<com.parse.l: long h>;

        $r23 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" milliseconds before attempt #");

        $i0 = r0.<com.parse.l: int g>;

        $i0 = $i0 + 1;

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logI(java.lang.String,java.lang.String)>("com.parse.ParseCommand", $r3);

        $l1 = r0.<com.parse.l: long h>;

     label34:
        staticinvoke <java.lang.Thread: void sleep(long)>($l1);

     label35:
        $l1 = r0.<com.parse.l: long h>;

        $l1 = $l1 * 2L;

        r0.<com.parse.l: long h> = $l1;

        goto label01;

     label36:
        throw $r17;

     label37:
        $r7 = virtualinvoke $r5.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("result");

     label38:
        if $z0 == 0 goto label39;

        $r3 = virtualinvoke r0.<com.parse.l: java.lang.String b()>();

        $r4 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void saveToKeyValueCache(java.lang.String,java.lang.String)>($r3, $r4);

     label39:
        $r24 = r0.<com.parse.l: com.parse.m i>;

        if $r24 == null goto label41;

        $r24 = r0.<com.parse.l: com.parse.m i>;

        interfaceinvoke $r24.<com.parse.m: void a(com.parse.l,java.lang.Object)>(r0, $r7);

        return $r7;

     label40:
        $r25 := @caughtexception;

        goto label35;

     label41:
        return $r7;

        catch org.json.JSONException from label03 to label04 with label09;
        catch org.json.JSONException from label05 to label06 with label09;
        catch org.json.JSONException from label07 to label08 with label09;
        catch org.json.JSONException from label10 to label11 with label09;
        catch org.json.JSONException from label12 to label13 with label09;
        catch org.json.JSONException from label14 to label15 with label09;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label28;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label28;
        catch com.parse.signpost.exception.OAuthMessageSignerException from label20 to label21 with label29;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label20 to label21 with label30;
        catch com.parse.signpost.exception.OAuthCommunicationException from label20 to label21 with label31;
        catch com.parse.ParseException from label22 to label23 with label32;
        catch org.json.JSONException from label23 to label24 with label27;
        catch org.json.JSONException from label25 to label26 with label27;
        catch java.lang.InterruptedException from label34 to label35 with label40;
        catch org.json.JSONException from label37 to label38 with label27;
    }

    final org.json.JSONObject a()
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r2, $r3;
        com.parse.l r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r5;

        r0 := @this: com.parse.l;

        $r2 = new org.json.JSONObject;

     label1:
        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

     label2:
        $r1 = r0.<com.parse.l: java.lang.String a>;

     label3:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("op", $r1);

     label4:
        $r3 = r0.<com.parse.l: org.json.JSONObject b>;

     label5:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("params", $r3);

     label6:
        return $r2;

     label7:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r1 = virtualinvoke $r4.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r5;

        catch org.json.JSONException from label1 to label2 with label7;
        catch org.json.JSONException from label3 to label4 with label7;
        catch org.json.JSONException from label5 to label6 with label7;
    }

    final void a(com.parse.m)
    {
        com.parse.l r0;
        com.parse.m $r1;

        r0 := @this: com.parse.l;

        $r1 := @parameter0: com.parse.m;

        r0.<com.parse.l: com.parse.m i> = $r1;

        return;
    }

    final void a(java.lang.String)
    {
        com.parse.l r0;
        java.lang.String $r1;

        r0 := @this: com.parse.l;

        $r1 := @parameter0: java.lang.String;

        r0.<com.parse.l: java.lang.String a> = "user_signup";

        return;
    }

    final void a(java.lang.String, int)
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r3;
        int $i0;
        com.parse.l r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.parse.l;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = r0.<com.parse.l: org.json.JSONObject b>;

     label1:
        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>($r1, $i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        $r1 = virtualinvoke $r4.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    final void a(java.lang.String, long)
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r3;
        com.parse.l r0;
        long $l0;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.parse.l;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r3 = r0.<com.parse.l: org.json.JSONObject b>;

     label1:
        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>($r1, $l0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        $r1 = virtualinvoke $r4.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    final void a(java.lang.String, java.lang.String)
    {
        org.json.JSONException $r5;
        org.json.JSONObject $r4;
        com.parse.l r0;
        java.lang.String $r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: com.parse.l;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.parse.l: org.json.JSONObject b>;

     label1:
        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r1, $r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r1 = virtualinvoke $r5.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r3;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    final void a(java.lang.String, org.json.JSONArray)
    {
        org.json.JSONException $r5;
        org.json.JSONObject $r4;
        com.parse.l r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r3;
        org.json.JSONArray $r2;

        r0 := @this: com.parse.l;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.json.JSONArray;

        $r4 = r0.<com.parse.l: org.json.JSONObject b>;

     label1:
        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r1, $r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r1 = virtualinvoke $r5.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r3;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    final void a(java.lang.String, org.json.JSONObject)
    {
        org.json.JSONException $r5;
        org.json.JSONObject $r2, $r4;
        com.parse.l r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r3;

        r0 := @this: com.parse.l;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.json.JSONObject;

        $r4 = r0.<com.parse.l: org.json.JSONObject b>;

     label1:
        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r1, $r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r1 = virtualinvoke $r5.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r3;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    final java.lang.String b()
    {
        java.lang.RuntimeException $r8;
        com.parse.ParseUser $r4;
        org.json.JSONException $r7;
        org.json.JSONObject $r1;
        com.parse.l r0;
        java.lang.StringBuilder $r6;
        java.lang.String $r2, $r3, $r5;

        r0 := @this: com.parse.l;

        $r1 = r0.<com.parse.l: org.json.JSONObject b>;

     label1:
        $r2 = staticinvoke <com.parse.l: java.lang.String a(java.lang.Object)>($r1);

     label2:
        $r3 = $r2;

        $r4 = staticinvoke <com.parse.ParseUser: com.parse.ParseUser getCurrentUser()>();

        if $r4 == null goto label3;

        $r5 = virtualinvoke $r4.<com.parse.ParseUser: java.lang.String getSessionToken()>();

        if $r5 == null goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("ParseCommand.");

        $r2 = r0.<com.parse.l: java.lang.String a>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".2.");

        $r3 = staticinvoke <com.parse.codec.digest.DigestUtils: java.lang.String md5Hex(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r3 = virtualinvoke $r7.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r8;

        catch org.json.JSONException from label1 to label2 with label4;
    }

    final java.lang.Object c()
    {
        com.parse.l r0;
        java.lang.Object $r1;

        r0 := @this: com.parse.l;

        $r1 = virtualinvoke r0.<com.parse.l: java.lang.Object a(boolean)>(0);

        return $r1;
    }

    public final void d()
    {
        int $i0;
        com.parse.l r0;
        long $l1, $l2;
        double $d0, $d1;

        r0 := @this: com.parse.l;

        r0.<com.parse.l: boolean f> = 1;

        $i0 = <com.parse.l: int l>;

        $l1 = (long) $i0;

        $i0 = <com.parse.l: int l>;

        $d1 = (double) $i0;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d1 * $d0;

        $l2 = (long) $d0;

        $l1 = $l1 + $l2;

        r0.<com.parse.l: long h> = $l1;

        return;
    }

    public final void e()
    {
        org.apache.http.client.methods.HttpPost $r1;
        com.parse.l r0;

        r0 := @this: com.parse.l;

        $r1 = r0.<com.parse.l: org.apache.http.client.methods.HttpPost d>;

        if $r1 == null goto label1;

        $r1 = r0.<com.parse.l: org.apache.http.client.methods.HttpPost d>;

        virtualinvoke $r1.<org.apache.http.client.methods.HttpPost: void abort()>();

     label1:
        r0.<com.parse.l: boolean e> = 1;

        return;
    }
}
