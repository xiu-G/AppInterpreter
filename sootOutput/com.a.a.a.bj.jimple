final class com.a.a.a.bj extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    private java.lang.String a;
    private java.util.concurrent.atomic.AtomicLong b;

    void <init>(java.lang.String, java.util.concurrent.atomic.AtomicLong)
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        java.lang.String $r1;
        com.a.a.a.bj r0;

        r0 := @this: com.a.a.a.bj;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.concurrent.atomic.AtomicLong;

        r0.<com.a.a.a.bj: java.lang.String a> = $r1;

        r0.<com.a.a.a.bj: java.util.concurrent.atomic.AtomicLong b> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Thread newThread(java.lang.Runnable)
    {
        java.lang.Object[] $r7;
        com.a.a.a.bk $r4;
        com.a.a.a.bj r0;
        long $l0;
        java.lang.Runnable $r1;
        java.util.concurrent.atomic.AtomicLong $r8;
        java.lang.Long $r9;
        java.util.Locale $r6;
        java.lang.Thread $r5;
        java.lang.String $r2;
        java.util.concurrent.ThreadFactory $r3;

        r0 := @this: com.a.a.a.bj;

        $r1 := @parameter0: java.lang.Runnable;

        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>();

        $r4 = new com.a.a.a.bk;

        specialinvoke $r4.<com.a.a.a.bk: void <init>(java.lang.Runnable)>($r1);

        $r5 = interfaceinvoke $r3.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>($r4);

        $r6 = <java.util.Locale: java.util.Locale US>;

        $r2 = r0.<com.a.a.a.bj: java.lang.String a>;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = r0.<com.a.a.a.bj: java.util.concurrent.atomic.AtomicLong b>;

        $l0 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7[0] = $r9;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, $r2, $r7);

        virtualinvoke $r5.<java.lang.Thread: void setName(java.lang.String)>($r2);

        return $r5;
    }
}
