public class cs.utils.io.DBUtil extends android.database.sqlite.SQLiteOpenHelper
{
    private static java.lang.String dbname;
    private static int dbversion;

    static void <clinit>()
    {
        <cs.utils.io.DBUtil: java.lang.String dbname> = "dbname";

        <cs.utils.io.DBUtil: int dbversion> = 1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        cs.utils.io.DBUtil r0;
        int $i0;
        java.lang.String $r2;

        r0 := @this: cs.utils.io.DBUtil;

        $r1 := @parameter0: android.content.Context;

        $r2 = <cs.utils.io.DBUtil: java.lang.String dbname>;

        $i0 = <cs.utils.io.DBUtil: int dbversion>;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, $r2, null, $i0);

        return;
    }

    public static void close(android.database.sqlite.SQLiteDatabase, android.database.Cursor)
    {
        android.database.sqlite.SQLiteDatabase $r0;
        android.database.Cursor $r1;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r1 := @parameter1: android.database.Cursor;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void close()>();

     label1:
        if $r1 == null goto label2;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r1.<android.database.Cursor: void close()>();

     label2:
        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        cs.utils.io.DBUtil r0;

        r0 := @this: cs.utils.io.DBUtil;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("create table ChapingRecode(packageName TEXT,showtime INTEGER)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("create table AppConfig(jsonConfig TEXT,updatetime INTEGER)");

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        cs.utils.io.DBUtil r0;
        int $i0, $i1;

        r0 := @this: cs.utils.io.DBUtil;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
}
