public final class com.splash.accele.c extends java.lang.Object
{
    private static java.lang.String a;
    private static java.lang.String b;
    private static java.lang.String c;
    private static java.lang.String d;
    private static int e;
    private static com.splash.accele.b f;
    private static java.lang.String g;

    static void <clinit>()
    {
        byte[] $r3;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        java.io.File $r1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = <java.io.File: java.lang.String separator>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.splash.accele.c: java.lang.String a> = $r2;

        $r0 = new java.lang.StringBuilder;

        $r2 = <com.splash.accele.c: java.lang.String a>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = new java.lang.String;

        $r3 = newarray (byte)[8];

        $r3[0] = 115;

        $r3[1] = 112;

        $r3[2] = 101;

        $r3[3] = 101;

        $r3[4] = 100;

        $r3[5] = 98;

        $r3[6] = 97;

        $r3[7] = 114;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = <java.io.File: java.lang.String separator>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = new java.lang.String;

        $r3 = newarray (byte)[10];

        $r3[0] = 100;

        $r3[1] = 111;

        $r3[2] = 119;

        $r3[3] = 110;

        $r3[4] = 108;

        $r3[5] = 111;

        $r3[6] = 97;

        $r3[7] = 100;

        $r3[8] = 101;

        $r3[9] = 114;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = <java.io.File: java.lang.String separator>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.splash.accele.c: java.lang.String b> = $r2;

        $r2 = new java.lang.String;

        $r3 = newarray (byte)[11];

        $r3[0] = 115;

        $r3[1] = 112;

        $r3[2] = 101;

        $r3[3] = 101;

        $r3[4] = 100;

        $r3[5] = 101;

        $r3[6] = 114;

        $r3[7] = 46;

        $r3[8] = 97;

        $r3[9] = 112;

        $r3[10] = 107;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

        <com.splash.accele.c: java.lang.String c> = $r2;

        $r0 = new java.lang.StringBuilder;

        $r2 = <com.splash.accele.c: java.lang.String b>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = <com.splash.accele.c: java.lang.String c>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.splash.accele.c: java.lang.String d> = $r2;

        <com.splash.accele.c: int e> = 5120;

        $r2 = new java.lang.String;

        $r3 = newarray (byte)[10];

        $r3[0] = 115;

        $r3[1] = 112;

        $r3[2] = 108;

        $r3[3] = 97;

        $r3[4] = 115;

        $r3[5] = 104;

        $r3[6] = 46;

        $r3[7] = 100;

        $r3[8] = 97;

        $r3[9] = 116;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

        <com.splash.accele.c: java.lang.String g> = $r2;

        return;
    }

    public static boolean a()
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean a(android.content.Context)
    {
        android.net.ConnectivityManager $r3;
        android.content.Context $r0;
        android.net.wifi.WifiInfo $r7;
        android.net.NetworkInfo $r4;
        android.net.NetworkInfo$State $r1, $r5;
        android.net.wifi.WifiManager $r6;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r8, $r9;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r3 = (android.net.ConnectivityManager) $r2;

        if $r3 != null goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r4 == null goto label3;

        $r5 = virtualinvoke $r4.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r1 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r5 != $r1 goto label3;

        $i0 = virtualinvoke $r4.<android.net.NetworkInfo: int getType()>();

        if $i0 != 1 goto label2;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r6 = (android.net.wifi.WifiManager) $r2;

        $r7 = virtualinvoke $r6.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r8 = "CMCC";

        $r9 = virtualinvoke $r7.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        return 1;

     label3:
        return 0;
    }

    private static boolean a(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        java.lang.String $r1;
        android.content.pm.PackageInfo $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>($r1, 1);

     label2:
        if $r3 == null goto label4;

        return 1;

     label3:
        $r4 := @caughtexception;

     label4:
        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean b(android.content.Context)
    {
        android.content.Context $r0;
        long $l1, $l2;
        java.io.File $r2, $r7;
        java.lang.Exception $r6;
        android.content.res.AssetManager $r4;
        byte $b3;
        int $i0;
        java.lang.String $r1;
        boolean $z0;
        android.content.res.Resources $r3;
        java.io.InputStream $r5;

        $r0 := @parameter0: android.content.Context;

        $r7 = new java.io.File;

        $r2 = $r7;

        $r1 = <com.splash.accele.c: java.lang.String d>;

     label01:
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label02:
        if $z0 == 0 goto label18;

     label03:
        $z0 = virtualinvoke $r2.<java.io.File: boolean isFile()>();

     label04:
        if $z0 == 0 goto label18;

        $r1 = <com.splash.accele.c: java.lang.String d>;

     label05:
        $z0 = staticinvoke <com.splash.accele.c: boolean a(android.content.Context,java.lang.String)>($r0, $r1);

     label06:
        if $z0 == 0 goto label15;

     label07:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

     label08:
        $r1 = <com.splash.accele.c: java.lang.String g>;

     label09:
        $r5 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

        $i0 = virtualinvoke $r5.<java.io.InputStream: int available()>();

     label10:
        $l1 = (long) $i0;

     label11:
        $l2 = virtualinvoke $r2.<java.io.File: long length()>();

     label12:
        $b3 = $l1 cmp $l2;

        if $b3 != 0 goto label15;

     label13:
        $l1 = virtualinvoke $r2.<java.io.File: long lastModified()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label14:
        $l1 = $l2 - $l1;

        $b3 = $l1 cmp 86400000L;

        $i0 = (int) $b3;

        if $i0 > 0 goto label15;

        return 1;

     label15:
        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label16:
        return 0;

     label17:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label18:
        return 0;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    public static com.splash.accele.b c(android.content.Context)
    {
        android.content.Context $r0;
        com.splash.accele.b $r1;
        java.lang.String $r2;
        dalvik.system.DexClassLoader $r3;
        android.content.res.Resources $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.splash.accele.c: com.splash.accele.b f>;

        if $r1 != null goto label2;

        $r1 = null;

        $r2 = <com.splash.accele.c: java.lang.String d>;

        $r3 = staticinvoke <com.splash.accele.a: dalvik.system.DexClassLoader a(java.lang.String,android.content.Context)>($r2, $r0);

        $r2 = <com.splash.accele.c: java.lang.String d>;

        $r4 = staticinvoke <com.splash.accele.a: android.content.res.Resources a(android.content.Context,java.lang.String)>($r0, $r2);

        if $r3 == null goto label1;

        if $r4 == null goto label1;

        $r1 = staticinvoke <com.splash.accele.b: com.splash.accele.b a(android.content.res.Resources,dalvik.system.DexClassLoader)>($r4, $r3);

     label1:
        <com.splash.accele.c: com.splash.accele.b f> = $r1;

     label2:
        $r1 = <com.splash.accele.c: com.splash.accele.b f>;

        return $r1;
    }

    public static void d(android.content.Context)
    {
        android.content.Context $r0;
        byte[] $r7;
        java.io.FileOutputStream $r3;
        java.io.File $r1;
        java.lang.Exception $r8;
        android.content.res.AssetManager $r5;
        int $i0;
        java.lang.String $r2;
        boolean $z0;
        android.content.res.Resources $r4;
        java.io.InputStream $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.io.File;

        $r2 = <com.splash.accele.c: java.lang.String b>;

     label01:
        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label02:
        if $z0 == 0 goto label05;

     label03:
        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

     label04:
        if $z0 != 0 goto label06;

     label05:
        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

     label06:
        $r3 = new java.io.FileOutputStream;

        $r2 = <com.splash.accele.c: java.lang.String d>;

     label07:
        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

     label08:
        $r2 = <com.splash.accele.c: java.lang.String g>;

     label09:
        $r6 = virtualinvoke $r5.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r2);

     label10:
        $i0 = <com.splash.accele.c: int e>;

     label11:
        $r7 = newarray (byte)[$i0];

     label12:
        $i0 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>($r7);

     label13:
        if $i0 > 0 goto label16;

     label14:
        virtualinvoke $r3.<java.io.OutputStream: void flush()>();

        virtualinvoke $r6.<java.io.InputStream: void close()>();

        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label15:
        return;

     label16:
        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i0);

     label17:
        goto label12;

     label18:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Exception from label09 to label10 with label18;
        catch java.lang.Exception from label11 to label13 with label18;
        catch java.lang.Exception from label14 to label15 with label18;
        catch java.lang.Exception from label16 to label17 with label18;
    }
}
