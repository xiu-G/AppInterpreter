public abstract class com.mopub.mobileads.BaseAdapter extends java.lang.Object
{
    private static final java.util.HashMap sAdapterMap;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.mopub.mobileads.BaseAdapter: java.util.HashMap sAdapterMap> = $r0;

        $r0 = <com.mopub.mobileads.BaseAdapter: java.util.HashMap sAdapterMap>;

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("admob_native", "com.mopub.mobileads.GoogleAdMobAdapter");

        $r0 = <com.mopub.mobileads.BaseAdapter: java.util.HashMap sAdapterMap>;

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("millennial_native", "com.mopub.mobileads.MillennialAdapter");

        $r0 = <com.mopub.mobileads.BaseAdapter: java.util.HashMap sAdapterMap>;

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("adsense", "com.mopub.mobileads.AdSenseAdapter");

        return;
    }

    public void <init>()
    {
        com.mopub.mobileads.BaseAdapter r0;

        r0 := @this: com.mopub.mobileads.BaseAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Class classForAdapterType(java.lang.String, java.util.HashMap)
    {
        java.util.HashMap r1;
        java.lang.ClassNotFoundException r2;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5;
        java.lang.String $r0, $r3;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.HashMap;

        $r3 = staticinvoke <com.mopub.mobileads.BaseAdapter: java.lang.String classStringForAdapterType(java.lang.String,java.util.HashMap)>($r0, r1);

        if $r3 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find a handler for this ad type: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MoPub for Android does not support it at this time.");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MoPub", $r0);

        return null;

     label1:
        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

     label2:
        return $r5;

     label3:
        r2 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class.");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Make sure the project includes the adapter library for ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from the extras folder");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MoPub", $r0);

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private static java.lang.String classStringForAdapterType(java.lang.String, java.util.HashMap)
    {
        java.util.HashMap r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.HashMap;

        r0 = <com.mopub.mobileads.BaseAdapter: java.util.HashMap sAdapterMap>;

        $r1 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    public static com.mopub.mobileads.BaseAdapter getAdapterForType(com.mopub.mobileads.MoPubView, java.lang.String, java.util.HashMap)
    {
        java.lang.Object[] r3;
        com.mopub.mobileads.BaseAdapter r8;
        java.lang.Class[] r4;
        java.util.HashMap r2;
        java.lang.reflect.Constructor $r7;
        java.lang.Exception $r9;
        com.mopub.mobileads.MoPubView $r0;
        java.lang.Class $r5;
        java.lang.Object $r6;
        java.lang.StringBuilder $r10;
        java.lang.String $r1;

        $r0 := @parameter0: com.mopub.mobileads.MoPubView;

        $r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.HashMap;

        if $r1 != null goto label1;

        return null;

     label1:
        $r5 = staticinvoke <com.mopub.mobileads.BaseAdapter: java.lang.Class classForAdapterType(java.lang.String,java.util.HashMap)>($r1, r2);

        if $r5 != null goto label2;

        return null;

     label2:
        r4 = newarray (java.lang.Class)[2];

        r4[0] = class "Lcom/mopub/mobileads/MoPubView;";

        r4[1] = class "Ljava/lang/String;";

        r3 = newarray (java.lang.Object)[2];

        r3[0] = $r0;

        $r6 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("X-Nativeparams");

        r3[1] = $r6;

     label3:
        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r4);

        $r6 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r3);

        r8 = (com.mopub.mobileads.BaseAdapter) $r6;

     label4:
        return r8;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t create native adapter for type: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MoPub", $r1);

        return null;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public abstract void invalidate();

    public abstract void loadAd();
}
