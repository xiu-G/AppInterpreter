final class com.google.gson.LruCache extends java.util.LinkedHashMap implements com.google.gson.Cache
{
    private static final long serialVersionUID;
    private final int maxCapacity;

    public void <init>(int)
    {
        int $i0;
        com.google.gson.LruCache r0;

        r0 := @this: com.google.gson.LruCache;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>($i0, 0.7F, 1);

        r0.<com.google.gson.LruCache: int maxCapacity> = $i0;

        return;
    }

    public void addElement(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r3;
        java.lang.Object r1, r2;
        com.google.gson.LruCache r0;

        r0 := @this: com.google.gson.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.google.gson.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object getElement(java.lang.Object)
    {
        java.lang.Throwable $r2;
        java.lang.Object r1;
        com.google.gson.LruCache r0;

        r0 := @this: com.google.gson.LruCache;

        r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        r1 = virtualinvoke r0.<com.google.gson.LruCache: java.lang.Object get(java.lang.Object)>(r1);

     label2:
        exitmonitor r0;

        return r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected boolean removeEldestEntry(java.util.Map$Entry)
    {
        java.util.Map$Entry r1;
        int $i0, $i1;
        com.google.gson.LruCache r0;

        r0 := @this: com.google.gson.LruCache;

        r1 := @parameter0: java.util.Map$Entry;

        $i1 = virtualinvoke r0.<com.google.gson.LruCache: int size()>();

        $i0 = r0.<com.google.gson.LruCache: int maxCapacity>;

        if $i1 <= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object removeElement(java.lang.Object)
    {
        java.lang.Throwable $r2;
        java.lang.Object r1;
        com.google.gson.LruCache r0;

        r0 := @this: com.google.gson.LruCache;

        r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        r1 = virtualinvoke r0.<com.google.gson.LruCache: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        exitmonitor r0;

        return r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.google.gson.LruCache: long serialVersionUID> = 1L;

        return;
    }
}
