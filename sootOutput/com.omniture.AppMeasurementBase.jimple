public class com.omniture.AppMeasurementBase extends com.omniture.AppMeasurement_Variables
{
    protected int _1_referrer;
    public java.lang.String imageDimensions;
    public int maxRequestThreads;
    public int maxRequestsPerThread;
    public boolean offline;
    protected java.util.Vector requestList;
    protected int requestThreadID;
    protected java.util.Hashtable requestThreads;
    public boolean sendFromServer;
    protected java.lang.String target;
    public boolean usePlugins;
    protected java.lang.String version;

    public void <init>()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        specialinvoke r0.<com.omniture.AppMeasurement_Variables: void <init>()>();

        r0.<com.omniture.AppMeasurementBase: java.lang.String target> = "";

        r0.<com.omniture.AppMeasurementBase: boolean usePlugins> = 0;

        r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList> = null;

        r0.<com.omniture.AppMeasurementBase: java.util.Hashtable requestThreads> = null;

        r0.<com.omniture.AppMeasurementBase: int requestThreadID> = 0;

        r0.<com.omniture.AppMeasurementBase: int maxRequestThreads> = 1;

        r0.<com.omniture.AppMeasurementBase: int maxRequestsPerThread> = 50;

        r0.<com.omniture.AppMeasurementBase: boolean offline> = 0;

        r0.<com.omniture.AppMeasurementBase: boolean sendFromServer> = 0;

        r0.<com.omniture.AppMeasurementBase: int _1_referrer> = 0;

        r0.<com.omniture.AppMeasurementBase: java.lang.String version> = "JAVA-1.1";

        r0.<com.omniture.AppMeasurement_Variables: boolean ssl> = 0;

        r0.<com.omniture.AppMeasurement_Variables: boolean linkLeaveQueryString> = 0;

        r0.<com.omniture.AppMeasurement_Variables: boolean debugTracking> = 0;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String charSet> = "UTF-8";

        r0.<com.omniture.AppMeasurementBase: boolean sendFromServer> = 1;

        return;
    }

    public static java.lang.String escape(java.lang.String)
    {
        byte[] $r2;
        char $c2;
        java.lang.Exception $r5, $r7;
        java.lang.StringBuffer $r4, $r8;
        int i0, $i1;
        java.lang.String r0, r1, $r3, r6;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return null;

     label01:
        $r3 = new java.lang.String;

        r1 = $r3;

     label02:
        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "ISO-8859-1");

     label03:
        r0 = "";

        i0 = 0;

     label04:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

     label05:
        if i0 >= $i1 goto label28;

     label06:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

     label07:
        $i1 = (int) $c2;

        if $i1 < 97 goto label08;

        $i1 = (int) $c2;

        if $i1 <= 122 goto label13;

     label08:
        $i1 = (int) $c2;

        if $i1 < 65 goto label09;

        $i1 = (int) $c2;

        if $i1 <= 90 goto label13;

     label09:
        $i1 = (int) $c2;

        if $i1 < 48 goto label10;

        $i1 = (int) $c2;

        if $i1 <= 57 goto label13;

     label10:
        $r3 = ".-*_";

        $i1 = (int) $c2;

     label11:
        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>($i1);

     label12:
        if $i1 <= -1 goto label17;

     label13:
        $r8 = new java.lang.StringBuffer;

        $r4 = $r8;

     label14:
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        r0 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label15:
        i0 = i0 + 1;

        goto label04;

     label16:
        $r5 := @caughtexception;

        return null;

     label17:
        $i1 = (int) $c2;

     label18:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

     label19:
        r6 = $r3;

     label20:
        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

     label21:
        if $i1 != 1 goto label24;

        $r8 = new java.lang.StringBuffer;

        $r4 = $r8;

     label22:
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label23:
        r6 = $r3;

     label24:
        $r8 = new java.lang.StringBuffer;

        $r4 = $r8;

     label25:
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(37);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        r0 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label26:
        goto label15;

     label27:
        $r7 := @caughtexception;

        return null;

     label28:
        return r0;

        catch java.lang.Exception from label02 to label03 with label16;
        catch java.lang.Exception from label04 to label05 with label27;
        catch java.lang.Exception from label06 to label07 with label27;
        catch java.lang.Exception from label11 to label12 with label27;
        catch java.lang.Exception from label14 to label15 with label27;
        catch java.lang.Exception from label18 to label19 with label27;
        catch java.lang.Exception from label20 to label21 with label27;
        catch java.lang.Exception from label22 to label23 with label27;
        catch java.lang.Exception from label25 to label26 with label27;
    }

    public static java.lang.String unescape(java.lang.String)
    {
        byte[] $r4;
        char $c2;
        java.lang.Exception $r5;
        java.lang.StringBuffer $r3, $r6;
        int $i0, $i1, $i3;
        java.lang.String $r0, r1, $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label01;

        return null;

     label01:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(37);

        if $i0 >= 0 goto label02;

        return $r0;

     label02:
        $i0 = 0;

        r1 = "";

     label03:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label04:
        if $i0 >= $i1 goto label18;

     label05:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label06:
        $i1 = (int) $c2;

        if $i1 != 37 goto label13;

        $i1 = $i0 + 1;

        $i3 = $i0 + 3;

     label07:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i3);

     label08:
        $r6 = new java.lang.StringBuffer;

        $r3 = $r6;

     label09:
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

     label10:
        $c2 = (char) $i1;

     label11:
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label12:
        $i0 = $i0 + 3;

        goto label03;

     label13:
        $r6 = new java.lang.StringBuffer;

        $r3 = $r6;

     label14:
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label15:
        $i1 = (int) $c2;

        if $i1 != 43 goto label16;

        $c2 = 32;

     label16:
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label17:
        $i0 = $i0 + 1;

        goto label03;

     label18:
        $r2 = new java.lang.String;

     label19:
        $r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8");

     label20:
        return $r2;

     label21:
        $r5 := @caughtexception;

        return null;

        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Exception from label14 to label15 with label21;
        catch java.lang.Exception from label16 to label17 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    protected void _doPlugins()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return;
    }

    protected boolean _doRequest(java.lang.String, java.util.Hashtable)
    {
        java.lang.String $r1;
        com.omniture.AppMeasurementBase r0;
        java.util.Hashtable $r2;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Hashtable;

        return 1;
    }

    protected boolean _hasDoPlugins()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return 0;
    }

    protected boolean _hasDoRequest()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return 0;
    }

    public void clearVars()
    {
        int i0, $i1;
        java.lang.String[] $r1;
        java.lang.String r2, $r3;
        com.omniture.AppMeasurementBase r0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        i0 = 0;

     label1:
        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountVarList>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label6;

        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountVarList>;

        r2 = $r1[i0];

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 <= 4 goto label5;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

     label2:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("channel");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("events");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("purchaseID");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("transactionID");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("products");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("state");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("zip");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("campaign");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("prop");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("eVar");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("hier");

        if $z0 == 0 goto label4;

     label3:
        virtualinvoke r0.<com.omniture.AppMeasurement_Variables: void setAccountVar(java.lang.String,java.lang.String)>(r2, null);

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        $r3 = "";

        goto label2;

     label6:
        return;
    }

    public void forceOffline()
    {
        java.lang.Throwable $r3;
        java.util.Vector $r1, $r2;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        r0.<com.omniture.AppMeasurementBase: boolean offline> = 1;

        $r1 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        if $r1 == null goto label5;

        $r1 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void forceOnline()
    {
        java.lang.Throwable $r3;
        java.util.Vector $r1, $r2;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        r0.<com.omniture.AppMeasurementBase: boolean offline> = 0;

        $r1 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        if $r1 == null goto label5;

        $r1 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected java.util.Calendar getCalendar()
    {
        java.util.Calendar $r1;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        return $r1;
    }

    protected java.lang.String getDefaultAcceptLanguage()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return "";
    }

    protected java.lang.String getDefaultPageURL()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return "";
    }

    protected java.lang.String getDefaultReferrer()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return "";
    }

    protected java.lang.String getDefaultUserAgent()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return "";
    }

    protected java.lang.String getDefaultVisitorID()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return "";
    }

    protected java.lang.String getQueryString()
    {
        java.lang.String[] $r6;
        java.lang.StringBuffer $r5, $r12;
        int i0, $i1, $i2;
        java.lang.String r1, r2, r3, $r4, $r7, r8, $r9, $r10, $r11;
        boolean $z0;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        r1 = "";

        r2 = null;

        r3 = null;

        $r4 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkType>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r4);

        if $z0 == 0 goto label01;

        r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkTrackVars>;

        r3 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkTrackEvents>;

     label01:
        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r2);

        if $z0 == 0 goto label02;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r6 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] requiredVarList>;

        r2 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String joinArray(java.lang.String,java.lang.String[])>(",", $r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label02:
        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r3);

        if $z0 == 0 goto label03;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label03:
        i0 = 0;

     label04:
        $r6 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountVarList>;

        $i1 = lengthof $r6;

        if i0 >= $i1 goto label33;

        $r6 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountVarList>;

        $r4 = $r6[i0];

        $r7 = virtualinvoke r0.<com.omniture.AppMeasurement_Variables: java.lang.String getAccountVar(java.lang.String)>($r4);

        r8 = $r7;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 <= 4 goto label07;

        $r9 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $r10 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(4);

     label05:
        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r7);

        if $z0 == 0 goto label06;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r11 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r2);

        if $z0 == 0 goto label08;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>($r11);

        if $i1 != -1 goto label08;

     label06:
        i0 = i0 + 1;

        goto label04;

     label07:
        $r9 = null;

        $r10 = null;

        goto label05;

     label08:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("timestamp");

        if $z0 == 0 goto label12;

        $r4 = "ts";

     label09:
        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r8);

        if $z0 == 0 goto label06;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        r1 = staticinvoke <com.omniture.AppMeasurementBase: java.lang.String escape(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 <= 3 goto label10;

        r1 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        if r1 == "pev" goto label32;

     label10:
        r1 = staticinvoke <com.omniture.AppMeasurementBase: java.lang.String escape(java.lang.String)>(r8);

     label11:
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        r1 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label06;

     label12:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("dynamicVariablePrefix");

        if $z0 == 0 goto label13;

        $r4 = "D";

        goto label09;

     label13:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("visitorID");

        if $z0 == 0 goto label14;

        $r4 = "vid";

        goto label09;

     label14:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("pageURL");

        if $z0 == 0 goto label15;

        $r4 = "g";

        goto label09;

     label15:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("referrer");

        if $z0 == 0 goto label16;

        $r4 = "r";

        goto label09;

     label16:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("charSet");

        if $z0 == 0 goto label17;

        $r4 = "ce";

        goto label09;

     label17:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("visitorNamespace");

        if $z0 == 0 goto label18;

        $r4 = "ns";

        goto label09;

     label18:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("currencyCode");

        if $z0 == 0 goto label19;

        $r4 = "cc";

        goto label09;

     label19:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("channel");

        if $z0 == 0 goto label20;

        $r4 = "ch";

        goto label09;

     label20:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("transactionID");

        if $z0 == 0 goto label21;

        $r4 = "xact";

        goto label09;

     label21:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("campaign");

        if $z0 == 0 goto label22;

        $r4 = "v0";

        goto label09;

     label22:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("resolution");

        if $z0 == 0 goto label23;

        $r4 = "s";

        goto label09;

     label23:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("events");

        if $z0 == 0 goto label28;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r3);

        if $z0 == 0 goto label09;

        $r6 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String[] splitString(java.lang.String,java.lang.String)>(",", $r7);

        r8 = "";

        $i1 = 0;

     label24:
        $i2 = lengthof $r6;

        if $i1 >= $i2 goto label09;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r7 = $r6[$i1];

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $i2 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>($r7);

        if $i2 == -1 goto label26;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r8);

        if $z0 == 0 goto label27;

        r8 = ",";

     label25:
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        r8 = $r6[$i1];

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label26:
        $i1 = $i1 + 1;

        goto label24;

     label27:
        r8 = "";

        goto label25;

     label28:
        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isNumber(java.lang.String)>($r10);

        if $z0 == 0 goto label09;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("prop");

        if $z0 == 0 goto label29;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("c");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label09;

     label29:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("eVar");

        if $z0 == 0 goto label30;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("v");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label09;

     label30:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z0 == 0 goto label31;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("l");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label09;

     label31:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("hier");

        if $z0 == 0 goto label09;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("h");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 <= 255 goto label09;

        r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, 255);

        goto label09;

     label32:
        r1 = r8;

        goto label11;

     label33:
        return r1;
    }

    public double getTime()
    {
        java.util.Calendar $r1;
        java.util.Date $r2;
        long $l0;
        com.omniture.AppMeasurementBase r0;
        double $d0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.util.Calendar getCalendar()>();

        $r2 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $d0 = (double) $l0;

        return $d0;
    }

    protected void handleLinkTracking()
    {
        java.lang.StringBuffer $r5, $r6;
        int $i0;
        java.lang.String r1, r2, r3, $r4;
        com.omniture.AppMeasurementBase r0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkType>;

        r3 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkURL>;

        r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkName>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r2);

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r3);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r1);

        if $z0 == 0 goto label4;

     label1:
        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        r2 = $r4;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("d");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("e");

        if $z0 != 0 goto label2;

        r2 = "o";

     label2:
        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r3);

        if $z0 == 0 goto label3;

        $z0 = r0.<com.omniture.AppMeasurement_Variables: boolean linkLeaveQueryString>;

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>("?");

        if $i0 == -1 goto label3;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label3:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("lnk_");

        r2 = staticinvoke <com.omniture.AppMeasurementBase: java.lang.String escape(java.lang.String)>(r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String pe> = r2;

        r3 = staticinvoke <com.omniture.AppMeasurementBase: java.lang.String escape(java.lang.String)>(r3);

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String pev1> = r3;

        r1 = staticinvoke <com.omniture.AppMeasurementBase: java.lang.String escape(java.lang.String)>(r1);

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String pev2> = r1;

     label4:
        return;
    }

    protected void handleRequestList()
    {
        java.lang.Throwable $r7, $r13;
        long $l2;
        java.lang.String[] $r10;
        java.util.Vector $r4, $r5, $r12;
        byte $b1;
        int $i0, $i3;
        java.lang.String r1, r2, r3, r9, r11;
        java.util.Hashtable $r6, $r17;
        double d0, d1, $d2;
        boolean z0, $z1;
        java.lang.Exception $r14, $r15, $r16;
        java.lang.Object $r8;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        r3 = "";

        d1 = 0.0;

     label01:
        z0 = 0;

        $r4 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        entermonitor $r4;

     label02:
        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        $z1 = virtualinvoke $r5.<java.util.Vector: boolean isEmpty()>();

     label03:
        if $z1 == 0 goto label13;

     label04:
        $r6 = r0.<com.omniture.AppMeasurementBase: java.util.Hashtable requestThreads>;

        $i0 = virtualinvoke $r6.<java.util.Hashtable: int size()>();

     label05:
        if $i0 <= 1 goto label08;

     label06:
        exitmonitor $r4;

     label07:
        return;

     label08:
        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        virtualinvoke $r5.<java.lang.Object: void wait(long)>(1000L);

     label09:
        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        $z1 = virtualinvoke $r5.<java.util.Vector: boolean isEmpty()>();

        if $z1 == 0 goto label02;

        exitmonitor $r4;

     label10:
        return;

     label11:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label12:
        throw $r7;

     label13:
        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        $r8 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        r9 = (java.lang.String) $r8;

        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        virtualinvoke $r5.<java.util.Vector: void removeElementAt(int)>(0);

        exitmonitor $r4;

     label14:
        $z1 = r0.<com.omniture.AppMeasurement_Variables: boolean trackOffline>;

        if $z1 == 0 goto label15;

        $z1 = r0.<com.omniture.AppMeasurementBase: boolean offline>;

        if $z1 != 0 goto label25;

     label15:
        $z1 = r0.<com.omniture.AppMeasurement_Variables: boolean trackOffline>;

        if $z1 == 0 goto label19;

        $b1 = d1 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label19;

        $i0 = r0.<com.omniture.AppMeasurement_Variables: int offlineThrottleDelay>;

        if $i0 <= 0 goto label19;

        d0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: double getTime()>();

        d0 = d0 - d1;

        $i0 = r0.<com.omniture.AppMeasurement_Variables: int offlineThrottleDelay>;

        $d2 = (double) $i0;

        $b1 = d0 cmpg $d2;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label19;

     label16:
        staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $i0 = r0.<com.omniture.AppMeasurement_Variables: int offlineThrottleDelay>;

     label17:
        $d2 = (double) $i0;

        d0 = $d2 - d0;

        $l2 = (long) d0;

     label18:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label19:
        $r6 = null;

        $z1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean _hasDoRequest()>();

        if $z1 == 0 goto label32;

        $r10 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String[] splitString(java.lang.String,java.lang.String)>("\t", r9);

        $i0 = lengthof $r10;

        if $i0 <= 0 goto label24;

        r1 = $r10[0];

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label24;

        r11 = $r10[0];

        $i0 = 1;

     label20:
        $i3 = lengthof $r10;

        if $i0 >= $i3 goto label23;

        r1 = $r10[$i0];

        if r1 == null goto label22;

        if r1 == "" goto label22;

        $i3 = lengthof $r10;

        $i3 = $i3 - 1;

        if $i0 >= $i3 goto label22;

        $i3 = $i0 + 1;

        r2 = $r10[$i3];

        if r2 == null goto label22;

        if r2 == "" goto label22;

        if $r6 != null goto label21;

        $r17 = new java.util.Hashtable;

        $r6 = $r17;

        specialinvoke $r17.<java.util.Hashtable: void <init>()>();

     label21:
        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label22:
        $i0 = $i0 + 2;

        goto label20;

     label23:
        $z1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean _doRequest(java.lang.String,java.util.Hashtable)>(r11, $r6);

        if $z1 == 0 goto label24;

        z0 = 1;

     label24:
        if z0 == 0 goto label25;

        $r4 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label33;

        d1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: double getTime()>();

     label25:
        if z0 != 0 goto label34;

        z0 = r0.<com.omniture.AppMeasurement_Variables: boolean trackOffline>;

        if z0 == 0 goto label01;

        $r4 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        entermonitor $r4;

     label26:
        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        virtualinvoke $r5.<java.util.Vector: void insertElementAt(java.lang.Object,int)>(r9, 0);

        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        z0 = virtualinvoke $r5.<java.util.Vector: boolean isEmpty()>();

        if z0 != 0 goto label27;

        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        $r12 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        $i0 = virtualinvoke $r12.<java.util.Vector: int size()>();

        $i0 = $i0 - 1;

        $r8 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        if $r8 == r3 goto label27;

        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        $r12 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        $i0 = virtualinvoke $r12.<java.util.Vector: int size()>();

        $i0 = $i0 - 1;

        $r8 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        r3 = (java.lang.String) $r8;

        virtualinvoke r0.<com.omniture.AppMeasurementBase: void offlineRequestListWrite()>();

     label27:
        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        virtualinvoke $r5.<java.lang.Object: void wait(long)>(500L);

     label28:
        exitmonitor $r4;

     label29:
        goto label01;

     label30:
        $r13 := @caughtexception;

        exitmonitor $r4;

     label31:
        throw $r13;

     label32:
        $z1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean requestRequest(java.lang.String)>(r9);

        if $z1 == 0 goto label24;

        z0 = 1;

        goto label24;

     label33:
        d1 = 0.0;

        goto label25;

     label34:
        virtualinvoke r0.<com.omniture.AppMeasurementBase: void offlineRequestListDelete()>();

        goto label01;

     label35:
        $r14 := @caughtexception;

        goto label28;

     label36:
        $r15 := @caughtexception;

        goto label19;

     label37:
        $r16 := @caughtexception;

        goto label09;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label37;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Exception from label08 to label09 with label37;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.lang.Exception from label16 to label17 with label36;
        catch java.lang.Exception from label18 to label19 with label36;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Exception from label27 to label28 with label35;
        catch java.lang.Throwable from label27 to label28 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    protected void handleTechnology()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return;
    }

    public boolean isNumber(int)
    {
        int $i0;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $i0 := @parameter0: int;

        return 1;
    }

    protected boolean isNumber(java.lang.String)
    {
        java.lang.String $r1;
        com.omniture.AppMeasurementBase r0;
        java.lang.Exception r2;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return 1;

     label3:
        r2 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean isSet(double)
    {
        com.omniture.AppMeasurementBase r0;
        byte $b0;
        double $d0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $d0 := @parameter0: double;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isSet(float)
    {
        byte $b0;
        float $f0;
        com.omniture.AppMeasurementBase r0;
        double $d0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isSet(int)
    {
        int $i0;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isSet(java.lang.Object)
    {
        java.lang.Object $r1;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isSet(java.lang.String)
    {
        int $i0;
        java.lang.String $r1;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public boolean isSet(boolean)
    {
        com.omniture.AppMeasurementBase r0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $z0 := @parameter0: boolean;

        return $z0;
    }

    public java.lang.String joinArray(java.lang.String, java.lang.String[])
    {
        java.lang.String[] $r2;
        java.lang.StringBuffer $r4;
        int i0, $i1;
        java.lang.String $r1, $r3;
        com.omniture.AppMeasurementBase r0;
        boolean z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $r3 = "";

        z0 = 1;

        i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if i0 >= $i1 goto label3;

        if z0 != 0 goto label2;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = $r2[i0];

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        z0 = 0;

        i0 = i0 + 1;

        goto label1;

     label3:
        return $r3;
    }

    public void logDebug(java.lang.String)
    {
        java.io.PrintStream $r2;
        java.lang.String $r1;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    protected java.lang.String makeRequest(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r6, $r7, $r8;
        int $i0;
        java.lang.String $r1, $r2, r3, r4, r5;
        com.omniture.AppMeasurementBase r0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String trackingServer>;

        r4 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String dc>;

        r5 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String visitorNamespace>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r3);

        if $z0 != 0 goto label12;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r5);

        if $z0 != 0 goto label02;

        r3 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String account>;

        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(",");

        if $i0 == -1 goto label01;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label01:
        r3 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r3, "_", "-");

        r5 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r3, ".", "-");

     label02:
        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r4);

        if $z0 == 0 goto label11;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("dc2");

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("122");

        if $z0 == 0 goto label10;

     label03:
        r4 = "122";

     label04:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".2o7.net");

        r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label05:
        $z0 = r0.<com.omniture.AppMeasurement_Variables: boolean ssl>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(boolean)>($z0);

        if $z0 == 0 goto label13;

        r4 = "https://";

     label06:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/b/ss/");

        r4 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String account>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $z0 = r0.<com.omniture.AppMeasurement_Variables: boolean mobile>;

        if $z0 == 0 goto label14;

        r4 = "5.";

     label07:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $z0 = r0.<com.omniture.AppMeasurementBase: boolean sendFromServer>;

        if $z0 == 0 goto label15;

        r4 = "0";

     label08:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        r4 = r0.<com.omniture.AppMeasurementBase: java.lang.String version>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        r4 = r0.<com.omniture.AppMeasurementBase: java.lang.String target>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r4);

        if $z0 == 0 goto label16;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        r4 = r0.<com.omniture.AppMeasurementBase: java.lang.String target>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        r4 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?AQB=1&ndh=1&");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&AQE=1");

        $r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r1 = $r2;

        $z0 = r0.<com.omniture.AppMeasurementBase: boolean sendFromServer>;

        if $z0 != 0 goto label17;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<img src=\"");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" />");

        $r1 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;

     label10:
        r4 = "112";

        goto label04;

     label11:
        r4 = "112";

        goto label04;

     label12:
        $z0 = r0.<com.omniture.AppMeasurement_Variables: boolean ssl>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(boolean)>($z0);

        if $z0 == 0 goto label05;

        r4 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String trackingServerSecure>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r4);

        if $z0 == 0 goto label05;

        r3 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String trackingServerSecure>;

        goto label05;

     label13:
        r4 = "http://";

        goto label06;

     label14:
        r4 = "";

        goto label07;

     label15:
        r4 = "1";

        goto label08;

     label16:
        r4 = "";

        goto label09;

     label17:
        r4 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String userAgent>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r4);

        if $z0 == 0 goto label18;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\tUser-Agent\t");

        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String userAgent>;

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r1, "\t", " ");

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r1, "\n", " ");

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r1, "\r", " ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label18:
        $r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String acceptLanguage>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r2);

        if $z0 == 0 goto label19;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\tAccept-Language\t");

        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String acceptLanguage>;

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r1, "\t", " ");

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r1, "\n", " ");

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r1, "\r", " ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label19:
        virtualinvoke r0.<com.omniture.AppMeasurementBase: void sendRequest(java.lang.String)>($r1);

        return "";
    }

    protected void modulesUpdate()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return;
    }

    protected void offlineRequestListDelete()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return;
    }

    protected void offlineRequestListRead()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return;
    }

    protected void offlineRequestListWrite()
    {
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        return;
    }

    public java.lang.String replace(java.lang.String, java.lang.String, java.lang.String)
    {
        int $i0;
        java.lang.String[] $r4;
        java.lang.String $r1, $r2, $r3;
        com.omniture.AppMeasurementBase r0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>($r2);

        if $i0 < 0 goto label1;

        $r4 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String[] splitString(java.lang.String,java.lang.String)>($r2, $r1);

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String joinArray(java.lang.String,java.lang.String[])>($r3, $r4);

     label1:
        return $r1;
    }

    protected boolean requestRequest(java.lang.String)
    {
        java.lang.String $r1;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.omniture.AppMeasurementBase: void logDebug(java.lang.String)>($r1);

        return 1;
    }

    protected void requestThreadStart()
    {
        java.lang.Throwable $r6;
        com.omniture.AppMeasurementBase$1 r1;
        java.lang.Integer $r5;
        java.util.Vector $r3;
        int i0, i1, $i2, $i3;
        com.omniture.AppMeasurementBase r0;
        java.util.Hashtable $r2, $r4;
        boolean $z0;
        double $d0;

        r0 := @this: com.omniture.AppMeasurementBase;

        i0 = r0.<com.omniture.AppMeasurementBase: int requestThreadID>;

        i1 = r0.<com.omniture.AppMeasurementBase: int maxRequestThreads>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(int)>(i1);

        if $z0 != 0 goto label1;

        r0.<com.omniture.AppMeasurementBase: int maxRequestThreads> = 1;

     label1:
        $r2 = r0.<com.omniture.AppMeasurementBase: java.util.Hashtable requestThreads>;

        if $r2 != null goto label2;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<com.omniture.AppMeasurementBase: java.util.Hashtable requestThreads> = $r2;

     label2:
        $r3 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        $i2 = r0.<com.omniture.AppMeasurementBase: int maxRequestsPerThread>;

        i1 = i1 / $i2;

        $d0 = (double) i1;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i1 = (int) $d0;

        i1 = i1 + 1;

        $r2 = r0.<com.omniture.AppMeasurementBase: java.util.Hashtable requestThreads>;

        entermonitor $r2;

     label3:
        $r4 = r0.<com.omniture.AppMeasurementBase: java.util.Hashtable requestThreads>;

        $i2 = virtualinvoke $r4.<java.util.Hashtable: int size()>();

        if $i2 >= i1 goto label7;

        $r4 = r0.<com.omniture.AppMeasurementBase: java.util.Hashtable requestThreads>;

        $i2 = virtualinvoke $r4.<java.util.Hashtable: int size()>();

        $i3 = r0.<com.omniture.AppMeasurementBase: int maxRequestThreads>;

        if $i2 >= $i3 goto label7;

        $r4 = r0.<com.omniture.AppMeasurementBase: java.util.Hashtable requestThreads>;

        $i2 = virtualinvoke $r4.<java.util.Hashtable: int size()>();

        if $i2 > 0 goto label4;

        r0.<com.omniture.AppMeasurementBase: int requestThreadID> = 0;

     label4:
        r1 = new com.omniture.AppMeasurementBase$1;

        specialinvoke r1.<com.omniture.AppMeasurementBase$1: void <init>(com.omniture.AppMeasurementBase,com.omniture.AppMeasurementBase,int)>(r0, r0, i0);

        $r4 = r0.<com.omniture.AppMeasurementBase: java.util.Hashtable requestThreads>;

        $r5 = new java.lang.Integer;

        $i2 = r0.<com.omniture.AppMeasurementBase: int requestThreadID>;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i2);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        virtualinvoke r1.<java.lang.Thread: void start()>();

        $i2 = r0.<com.omniture.AppMeasurementBase: int requestThreadID>;

        $i2 = $i2 + 1;

        r0.<com.omniture.AppMeasurementBase: int requestThreadID> = $i2;

        goto label3;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r6;

     label7:
        exitmonitor $r2;

     label8:
        return;

        catch java.lang.Throwable from label3 to label6 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }

    protected void sendRequest(java.lang.String)
    {
        java.lang.Throwable $r9;
        java.lang.String[] $r6, $r8;
        java.util.Vector $r4, $r5;
        java.lang.StringBuffer $r7;
        int $i0, $i1;
        java.lang.String $r1, r2, r3;
        com.omniture.AppMeasurementBase r0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        if $r4 != null goto label01;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList> = $r4;

        virtualinvoke r0.<com.omniture.AppMeasurementBase: void offlineRequestListRead()>();

     label01:
        virtualinvoke r0.<com.omniture.AppMeasurementBase: void requestThreadStart()>();

        $r4 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        entermonitor $r4;

     label02:
        $z0 = r0.<com.omniture.AppMeasurement_Variables: boolean trackOffline>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(boolean)>($z0);

        if $z0 == 0 goto label04;

        $i0 = r0.<com.omniture.AppMeasurement_Variables: int offlineLimit>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(int)>($i0);

        if $z0 != 0 goto label03;

        r0.<com.omniture.AppMeasurement_Variables: int offlineLimit> = 10;

     label03:
        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        $i0 = virtualinvoke $r5.<java.util.Vector: int size()>();

        $i1 = r0.<com.omniture.AppMeasurement_Variables: int offlineLimit>;

        if $i0 < $i1 goto label04;

        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        virtualinvoke $r5.<java.util.Vector: void removeElementAt(int)>(0);

     label04:
        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r5 = r0.<com.omniture.AppMeasurementBase: java.util.Vector requestList>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor $r4;

     label05:
        $z0 = r0.<com.omniture.AppMeasurement_Variables: boolean debugTracking>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(boolean)>($z0);

        if $z0 == 0 goto label14;

        $r6 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String[] splitString(java.lang.String,java.lang.String)>("\t", $r1);

        $i0 = lengthof $r6;

        if $i0 <= 0 goto label14;

        $r1 = $r6[0];

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label14;

        r2 = $r6[0];

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("AppMeasurement Debug: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r1 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String[] splitString(java.lang.String,java.lang.String)>("\t", r2);

        r2 = $r8[0];

        $r8 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String[] splitString(java.lang.String,java.lang.String)>("&", r2);

        $i0 = 0;

     label06:
        $i1 = lengthof $r8;

        if $i0 >= $i1 goto label10;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\t");

        $r1 = $r8[$i0];

        $r1 = staticinvoke <com.omniture.AppMeasurementBase: java.lang.String unescape(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label06;

     label07:
        $r9 := @caughtexception;

     label08:
        exitmonitor $r4;

     label09:
        throw $r9;

     label10:
        $i0 = 1;

     label11:
        $i1 = lengthof $r6;

        if $i0 >= $i1 goto label13;

        r2 = $r6[$i0];

        if r2 == null goto label12;

        if r2 == "" goto label12;

        $i1 = lengthof $r6;

        $i1 = $i1 - 1;

        if $i0 >= $i1 goto label12;

        $i1 = $i0 + 1;

        r3 = $r6[$i1];

        if r3 == null goto label12;

        if r3 == "" goto label12;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\t");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r1 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label12:
        $i0 = $i0 + 2;

        goto label11;

     label13:
        virtualinvoke r0.<com.omniture.AppMeasurementBase: void logDebug(java.lang.String)>($r1);

     label14:
        return;

        catch java.lang.Throwable from label02 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    protected void setDefaults()
    {
        int $i0;
        java.lang.String $r1;
        com.omniture.AppMeasurementBase r0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String userAgent>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String getDefaultUserAgent()>();

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String userAgent> = $r1;

     label1:
        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String acceptLanguage>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String getDefaultAcceptLanguage()>();

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String acceptLanguage> = $r1;

     label2:
        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String visitorID>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r1);

        if $z0 != 0 goto label3;

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String getDefaultVisitorID()>();

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String visitorID> = $r1;

     label3:
        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String pageURL>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r1);

        if $z0 != 0 goto label4;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String pageURL> = "";

     label4:
        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String pageURL>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r1);

        if $z0 == 0 goto label5;

        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String pageURL>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("https://");

        if $i0 < 0 goto label5;

        r0.<com.omniture.AppMeasurement_Variables: boolean ssl> = 1;

     label5:
        $r1 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String referrer>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r1);

        if $z0 != 0 goto label6;

        $i0 = r0.<com.omniture.AppMeasurementBase: int _1_referrer>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(int)>($i0);

        if $z0 != 0 goto label6;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String referrer> = "";

        r0.<com.omniture.AppMeasurementBase: int _1_referrer> = 1;

     label6:
        return;
    }

    public java.lang.String[] splitString(java.lang.String, java.lang.String)
    {
        java.lang.String[] r2;
        int i0, i1, $i2;
        java.lang.String $r1, $r3, $r4;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        i0 = 0;

        i1 = 1;

     label1:
        i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String,int)>($r1, i0);

        if i0 < 0 goto label2;

        i1 = i1 + 1;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = i0 + $i2;

        goto label1;

     label2:
        r2 = newarray (java.lang.String)[i1];

        if i1 != 1 goto label3;

        r2[0] = $r3;

        return r2;

     label3:
        i1 = 0;

     label4:
        i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>($r1);

        if i0 < 0 goto label5;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r2[i1] = $r4;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = $i2 + i0;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(i0);

        i1 = i1 + 1;

        goto label4;

     label5:
        r2[i1] = $r3;

        return r2;
    }

    public java.lang.String track()
    {
        java.lang.String $r1;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String track(java.util.Hashtable)>(null);

        return $r1;
    }

    public java.lang.String track(java.util.Hashtable)
    {
        java.util.TimeZone $r7;
        java.util.Random $r11;
        java.util.Calendar $r4;
        java.lang.StringBuffer $r5, $r10;
        int $i0;
        java.lang.String r2, $r6, $r8, $r9;
        com.omniture.AppMeasurementBase r0;
        java.util.Hashtable $r1;
        double $d0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.util.Hashtable;

        r2 = "";

        $r4 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.util.Calendar getCalendar()>();

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r11 = new java.util.Random;

        specialinvoke $r11.<java.util.Random: void <init>()>();

        $d0 = virtualinvoke $r11.<java.util.Random: double nextDouble()>();

        $d0 = $d0 * 1.0E8;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i0 = (int) $d0;

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(5);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(11);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(12);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(13);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(7);

        $i0 = $i0 - 1;

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r4.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $i0 = virtualinvoke $r7.<java.util.TimeZone: int getRawOffset()>();

        $i0 = $i0 / 60000;

        $i0 = $i0 * -1;

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("t=");

        $r8 = staticinvoke <com.omniture.AppMeasurementBase: java.lang.String escape(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;

     label1:
        $z0 = r0.<com.omniture.AppMeasurementBase: boolean usePlugins>;

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean _hasDoPlugins()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.omniture.AppMeasurementBase: void _doPlugins()>();

     label2:
        $r9 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String account>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r9);

        if $z0 == 0 goto label4;

        $z0 = r0.<com.omniture.AppMeasurement_Variables: boolean trackOffline>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(boolean)>($z0);

        if $z0 == 0 goto label3;

        $i0 = r0.<com.omniture.AppMeasurement_Variables: int timestamp>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(int)>($i0);

        if $z0 != 0 goto label3;

        $d0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: double getTime()>();

        $d0 = $d0 / 1000.0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i0 = (int) $d0;

        r0.<com.omniture.AppMeasurement_Variables: int timestamp> = $i0;

     label3:
        virtualinvoke r0.<com.omniture.AppMeasurementBase: void setDefaults()>();

        virtualinvoke r0.<com.omniture.AppMeasurementBase: void handleLinkTracking()>();

        virtualinvoke r0.<com.omniture.AppMeasurementBase: void handleTechnology()>();

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        r2 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String getQueryString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r2 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String makeRequest(java.lang.String,java.lang.String)>($r6, r2);

        goto label4;

     label4:
        r0.<com.omniture.AppMeasurement_Variables: java.lang.String referrer> = null;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String pe> = null;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String pev1> = null;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String pev2> = null;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String pev3> = null;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkURL> = null;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkName> = null;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkType> = null;

        return r2;
    }

    public java.lang.String trackLink(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2, $r3;
        com.omniture.AppMeasurementBase r0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String trackLink(java.lang.String,java.lang.String,java.lang.String,java.util.Hashtable)>(null, "o", null, null);

        return $r1;
    }

    public java.lang.String trackLink(java.lang.String, java.lang.String, java.lang.String, java.util.Hashtable)
    {
        java.lang.String $r1, $r2, $r3;
        com.omniture.AppMeasurementBase r0;
        java.util.Hashtable $r4;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.util.Hashtable;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkURL> = null;

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkType> = "o";

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String linkName> = null;

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurementBase: java.lang.String track(java.util.Hashtable)>(null);

        return $r1;
    }

    protected void variableOverridesApply(java.util.Hashtable)
    {
        java.lang.String[] $r2;
        java.lang.StringBuffer $r6;
        int i0, $i1;
        java.lang.Object $r4;
        java.lang.String r3, r5, $r7;
        com.omniture.AppMeasurementBase r0;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.util.Hashtable;

        i0 = 0;

     label1:
        $r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountVarList>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label4;

        $r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountVarList>;

        r3 = $r2[i0];

        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.lang.String) $r4;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("!");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r5);

        if $z0 != 0 goto label2;

        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r7);

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke r0.<com.omniture.AppMeasurement_Variables: void setAccountVar(java.lang.String,java.lang.String)>(r3, r5);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        i0 = 0;

     label5:
        $r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountConfigList>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label8;

        $r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountConfigList>;

        r3 = $r2[i0];

        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.lang.String) $r4;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("!");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r5);

        if $z0 != 0 goto label6;

        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r7);

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.Object)>($r4);

        if $z0 == 0 goto label7;

     label6:
        virtualinvoke r0.<com.omniture.AppMeasurement_Variables: void setAccountVar(java.lang.String,java.lang.String)>(r3, r5);

     label7:
        i0 = i0 + 1;

        goto label5;

     label8:
        return;
    }

    protected void variableOverridesBuild(java.util.Hashtable)
    {
        java.lang.String[] $r2;
        java.lang.StringBuffer $r7;
        int i0, $i1;
        java.lang.Object $r5;
        java.lang.String r3, $r4, r6;
        com.omniture.AppMeasurementBase r0;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurementBase;

        $r1 := @parameter0: java.util.Hashtable;

        i0 = 0;

     label1:
        $r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountVarList>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label4;

        $r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountVarList>;

        r3 = $r2[i0];

        $r4 = virtualinvoke r0.<com.omniture.AppMeasurement_Variables: java.lang.String getAccountVar(java.lang.String)>(r3);

        $r5 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r6);

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r4);

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r4);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("!");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        r3 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, "1");

        goto label2;

     label4:
        i0 = 0;

     label5:
        $r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountConfigList>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label8;

        $r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String[] accountConfigList>;

        r3 = $r2[i0];

        $r4 = virtualinvoke r0.<com.omniture.AppMeasurement_Variables: java.lang.String getAccountVar(java.lang.String)>(r3);

        $r5 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r6);

        if $z0 != 0 goto label6;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r4);

        if $z0 == 0 goto label7;

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r4);

     label6:
        i0 = i0 + 1;

        goto label5;

     label7:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("!");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        r3 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, "1");

        goto label6;

     label8:
        return;
    }
}
