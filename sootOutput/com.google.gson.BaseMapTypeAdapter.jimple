abstract class com.google.gson.BaseMapTypeAdapter extends java.lang.Object implements com.google.gson.JsonSerializer, com.google.gson.JsonDeserializer
{

    void <init>()
    {
        com.google.gson.BaseMapTypeAdapter r0;

        r0 := @this: com.google.gson.BaseMapTypeAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static final java.util.Map constructMapType(java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)
    {
        com.google.gson.ObjectConstructor $r3;
        java.lang.reflect.Type $r0;
        java.util.Map $r5;
        com.google.gson.JsonDeserializationContextDefault r2;
        java.lang.Object $r4;
        com.google.gson.JsonDeserializationContext $r1;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: com.google.gson.JsonDeserializationContext;

        r2 = (com.google.gson.JsonDeserializationContextDefault) $r1;

        $r3 = virtualinvoke r2.<com.google.gson.JsonDeserializationContextDefault: com.google.gson.ObjectConstructor getObjectConstructor()>();

        $r4 = interfaceinvoke $r3.<com.google.gson.ObjectConstructor: java.lang.Object construct(java.lang.reflect.Type)>($r0);

        $r5 = (java.util.Map) $r4;

        return $r5;
    }

    protected static final com.google.gson.JsonElement serialize(com.google.gson.JsonSerializationContext, java.lang.Object, java.lang.reflect.Type)
    {
        com.google.gson.JsonElement $r3;
        com.google.gson.JsonSerializationContextDefault r4;
        java.lang.reflect.Type $r2;
        com.google.gson.JsonSerializationContext $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: com.google.gson.JsonSerializationContext;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.reflect.Type;

        r4 = (com.google.gson.JsonSerializationContextDefault) $r0;

        $r3 = virtualinvoke r4.<com.google.gson.JsonSerializationContextDefault: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,boolean)>($r1, $r2, 0);

        return $r3;
    }
}
