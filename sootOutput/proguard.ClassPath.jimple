public class proguard.ClassPath extends java.lang.Object
{
    private final java.util.List classPathEntries;

    public void <init>()
    {
        proguard.ClassPath r0;
        java.util.ArrayList $r1;

        r0 := @this: proguard.ClassPath;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<proguard.ClassPath: java.util.List classPathEntries> = $r1;

        return;
    }

    public void add(int, proguard.ClassPathEntry)
    {
        java.util.List $r2;
        proguard.ClassPath r0;
        proguard.ClassPathEntry $r1;
        int $i0;

        r0 := @this: proguard.ClassPath;

        $i0 := @parameter0: int;

        $r1 := @parameter1: proguard.ClassPathEntry;

        $r2 = r0.<proguard.ClassPath: java.util.List classPathEntries>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i0, $r1);

        return;
    }

    public boolean add(proguard.ClassPathEntry)
    {
        java.util.List $r2;
        proguard.ClassPath r0;
        proguard.ClassPathEntry $r1;
        boolean $z0;

        r0 := @this: proguard.ClassPath;

        $r1 := @parameter0: proguard.ClassPathEntry;

        $r2 = r0.<proguard.ClassPath: java.util.List classPathEntries>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean addAll(proguard.ClassPath)
    {
        java.util.List $r2, $r3;
        proguard.ClassPath r0, $r1;
        boolean $z0;

        r0 := @this: proguard.ClassPath;

        $r1 := @parameter0: proguard.ClassPath;

        $r3 = r0.<proguard.ClassPath: java.util.List classPathEntries>;

        $r2 = $r1.<proguard.ClassPath: java.util.List classPathEntries>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        return $z0;
    }

    public void clear()
    {
        java.util.List $r1;
        proguard.ClassPath r0;

        r0 := @this: proguard.ClassPath;

        $r1 = r0.<proguard.ClassPath: java.util.List classPathEntries>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public proguard.ClassPathEntry get(int)
    {
        java.util.List $r0;
        proguard.ClassPath r2;
        proguard.ClassPathEntry r3;
        int $i0;
        java.lang.Object $r1;

        r2 := @this: proguard.ClassPath;

        $i0 := @parameter0: int;

        $r0 = r2.<proguard.ClassPath: java.util.List classPathEntries>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        r3 = (proguard.ClassPathEntry) $r1;

        return r3;
    }

    public boolean hasOutput()
    {
        java.util.List $r1;
        proguard.ClassPath r0;
        proguard.ClassPathEntry $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: proguard.ClassPath;

        $i0 = 0;

     label1:
        $r1 = r0.<proguard.ClassPath: java.util.List classPathEntries>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r1 = r0.<proguard.ClassPath: java.util.List classPathEntries>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (proguard.ClassPathEntry) $r2;

        $z0 = virtualinvoke $r3.<proguard.ClassPathEntry: boolean isOutput()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean isEmpty()
    {
        java.util.List $r1;
        proguard.ClassPath r0;
        boolean $z0;

        r0 := @this: proguard.ClassPath;

        $r1 = r0.<proguard.ClassPath: java.util.List classPathEntries>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public proguard.ClassPathEntry remove(int)
    {
        java.util.List $r0;
        proguard.ClassPath r2;
        proguard.ClassPathEntry r3;
        int $i0;
        java.lang.Object $r1;

        r2 := @this: proguard.ClassPath;

        $i0 := @parameter0: int;

        $r0 = r2.<proguard.ClassPath: java.util.List classPathEntries>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>($i0);

        r3 = (proguard.ClassPathEntry) $r1;

        return r3;
    }

    public int size()
    {
        int $i0;
        java.util.List $r1;
        proguard.ClassPath r0;

        r0 := @this: proguard.ClassPath;

        $r1 = r0.<proguard.ClassPath: java.util.List classPathEntries>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }
}
