public class org.jsoup.nodes.Document extends org.jsoup.nodes.Element
{
    private org.jsoup.nodes.Document$OutputSettings outputSettings;
    private org.jsoup.nodes.Document$QuirksMode quirksMode;

    public void <init>(java.lang.String)
    {
        org.jsoup.nodes.Document$QuirksMode $r4;
        org.jsoup.nodes.Document$OutputSettings $r3;
        org.jsoup.nodes.Document r0;
        java.lang.String $r1;
        org.jsoup.parser.Tag $r2;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>("#root");

        specialinvoke r0.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>($r2, $r1);

        $r3 = new org.jsoup.nodes.Document$OutputSettings;

        specialinvoke $r3.<org.jsoup.nodes.Document$OutputSettings: void <init>()>();

        r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings> = $r3;

        $r4 = <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode noQuirks>;

        r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$QuirksMode quirksMode> = $r4;

        return;
    }

    public static org.jsoup.nodes.Document createShell(java.lang.String)
    {
        java.lang.String $r0;
        org.jsoup.nodes.Document r1;
        org.jsoup.nodes.Element $r2;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r0);

        r1 = new org.jsoup.nodes.Document;

        specialinvoke r1.<org.jsoup.nodes.Document: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke r1.<org.jsoup.nodes.Document: org.jsoup.nodes.Element appendElement(java.lang.String)>("html");

        virtualinvoke $r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>("head");

        virtualinvoke $r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>("body");

        return r1;
    }

    private org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String, org.jsoup.nodes.Node)
    {
        java.util.Iterator $r6;
        org.jsoup.nodes.Node r2;
        java.util.List $r5;
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element r4;
        java.lang.Object $r7;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.jsoup.nodes.Node;

        $r3 = virtualinvoke r2.<org.jsoup.nodes.Node: java.lang.String nodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        r4 = (org.jsoup.nodes.Element) r2;

        return r4;

     label1:
        $r5 = r2.<org.jsoup.nodes.Node: java.util.List childNodes>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.jsoup.nodes.Node) $r7;

        r4 = specialinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>($r1, r2);

        if r4 == null goto label2;

        return r4;

     label3:
        return null;
    }

    private void normaliseStructure(java.lang.String, org.jsoup.nodes.Element)
    {
        java.util.Iterator $r8;
        java.util.ArrayList r3;
        org.jsoup.nodes.Node r10;
        java.util.List $r7;
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r2, $r5, $r6;
        int $i0, $i1;
        java.lang.Object $r9;
        java.lang.String $r1;
        org.jsoup.select.Elements $r4;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.jsoup.nodes.Element;

        $r4 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.select.Elements getElementsByTag(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();

        $i0 = virtualinvoke $r4.<org.jsoup.select.Elements: int size()>();

        if $i0 <= 1 goto label6;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $i0 = 1;

     label1:
        $i1 = virtualinvoke $r4.<org.jsoup.select.Elements: int size()>();

        if $i0 >= $i1 goto label4;

        $r6 = virtualinvoke $r4.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>($i0);

        $r7 = $r6.<org.jsoup.nodes.Node: java.util.List childNodes>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.jsoup.nodes.Node) $r9;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r10);

        goto label2;

     label3:
        virtualinvoke $r6.<org.jsoup.nodes.Node: void remove()>();

        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r8 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.jsoup.nodes.Node) $r9;

        virtualinvoke $r5.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r10);

        goto label5;

     label6:
        $r6 = virtualinvoke $r5.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();

        $z0 = virtualinvoke $r6.<org.jsoup.nodes.Element: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label7;

        virtualinvoke $r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>($r5);

     label7:
        return;
    }

    private void normaliseTextNodes(org.jsoup.nodes.Element)
    {
        java.util.Iterator $r5;
        org.jsoup.nodes.TextNode $r3, $r10;
        java.util.ArrayList r2, $r9;
        org.jsoup.nodes.Node r7;
        java.util.List $r4;
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r1, $r8;
        int $i0, $i1;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 := @parameter0: org.jsoup.nodes.Element;

        $r9 = new java.util.ArrayList;

        r2 = $r9;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r4 = $r1.<org.jsoup.nodes.Element: java.util.List childNodes>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.jsoup.nodes.Node) $r6;

        $z0 = r7 instanceof org.jsoup.nodes.TextNode;

        if $z0 == 0 goto label1;

        $r3 = (org.jsoup.nodes.TextNode) r7;

        $z0 = virtualinvoke $r3.<org.jsoup.nodes.TextNode: boolean isBlank()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $i1 = -1;

        $i0 = $i0 + $i1;

     label3:
        if $i0 < 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (org.jsoup.nodes.Node) $r6;

        virtualinvoke $r1.<org.jsoup.nodes.Element: void removeChild(org.jsoup.nodes.Node)>(r7);

        $r8 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();

        $r10 = new org.jsoup.nodes.TextNode;

        specialinvoke $r10.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>(" ", "");

        virtualinvoke $r8.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>($r10);

        $r8 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();

        virtualinvoke $r8.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>(r7);

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label3;

     label4:
        return;
    }

    public org.jsoup.nodes.Element body()
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r1;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 = specialinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>("body", r0);

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jsoup.nodes.Document r0;

        r0 := @this: org.jsoup.nodes.Document;

        r0 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document clone()>();

        return r0;
    }

    public org.jsoup.nodes.Document clone()
    {
        org.jsoup.nodes.Document$OutputSettings $r3;
        org.jsoup.nodes.Document r0, r2;
        org.jsoup.nodes.Element $r1;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 = specialinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element clone()>();

        r2 = (org.jsoup.nodes.Document) $r1;

        $r3 = r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings>;

        $r3 = virtualinvoke $r3.<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings clone()>();

        r2.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings> = $r3;

        return r2;
    }

    public volatile org.jsoup.nodes.Element clone()
    {
        org.jsoup.nodes.Document r0;

        r0 := @this: org.jsoup.nodes.Document;

        r0 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document clone()>();

        return r0;
    }

    public volatile org.jsoup.nodes.Node clone()
    {
        org.jsoup.nodes.Document r0;

        r0 := @this: org.jsoup.nodes.Document;

        r0 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document clone()>();

        return r0;
    }

    public org.jsoup.nodes.Element createElement(java.lang.String)
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r2;
        java.lang.String $r1;
        org.jsoup.parser.Tag $r3;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.jsoup.nodes.Element;

        $r3 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<org.jsoup.nodes.Document: java.lang.String baseUri()>();

        specialinvoke $r2.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>($r3, $r1);

        return $r2;
    }

    public org.jsoup.nodes.Element head()
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r1;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 = specialinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>("head", r0);

        return $r1;
    }

    public java.lang.String nodeName()
    {
        org.jsoup.nodes.Document r0;

        r0 := @this: org.jsoup.nodes.Document;

        return "#document";
    }

    public org.jsoup.nodes.Document normalise()
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r1, r2;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 = specialinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>("html", r0);

        r2 = $r1;

        if $r1 != null goto label1;

        r2 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element appendElement(java.lang.String)>("html");

     label1:
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>();

        if $r1 != null goto label2;

        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependElement(java.lang.String)>("head");

     label2:
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();

        if $r1 != null goto label3;

        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>("body");

     label3:
        $r1 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>();

        specialinvoke r0.<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>($r1);

        specialinvoke r0.<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>(r2);

        specialinvoke r0.<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>(r0);

        specialinvoke r0.<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>("head", r2);

        specialinvoke r0.<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>("body", r2);

        return r0;
    }

    public java.lang.String outerHtml()
    {
        java.lang.String $r1;
        org.jsoup.nodes.Document r0;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 = specialinvoke r0.<org.jsoup.nodes.Element: java.lang.String html()>();

        return $r1;
    }

    public org.jsoup.nodes.Document$OutputSettings outputSettings()
    {
        org.jsoup.nodes.Document$OutputSettings r1;
        org.jsoup.nodes.Document r0;

        r0 := @this: org.jsoup.nodes.Document;

        r1 = r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings>;

        return r1;
    }

    public org.jsoup.nodes.Document outputSettings(org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Document$OutputSettings $r1;
        org.jsoup.nodes.Document r0;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 := @parameter0: org.jsoup.nodes.Document$OutputSettings;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r1);

        r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings> = $r1;

        return r0;
    }

    public org.jsoup.nodes.Document$QuirksMode quirksMode()
    {
        org.jsoup.nodes.Document$QuirksMode r1;
        org.jsoup.nodes.Document r0;

        r0 := @this: org.jsoup.nodes.Document;

        r1 = r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$QuirksMode quirksMode>;

        return r1;
    }

    public org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode)
    {
        org.jsoup.nodes.Document$QuirksMode $r1;
        org.jsoup.nodes.Document r0;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 := @parameter0: org.jsoup.nodes.Document$QuirksMode;

        r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$QuirksMode quirksMode> = $r1;

        return r0;
    }

    public org.jsoup.nodes.Element text(java.lang.String)
    {
        java.lang.String $r1;
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r2;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();

        virtualinvoke $r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element text(java.lang.String)>($r1);

        return r0;
    }

    public java.lang.String title()
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r2;
        org.jsoup.select.Elements $r1;
        java.lang.String $r3;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.select.Elements getElementsByTag(java.lang.String)>("title");

        $r2 = virtualinvoke $r1.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.jsoup.nodes.Element: java.lang.String text()>();

        $r3 = staticinvoke <org.jsoup.helper.StringUtil: java.lang.String normaliseWhitespace(java.lang.String)>($r3);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        return $r3;

     label1:
        return "";
    }

    public void title(java.lang.String)
    {
        org.jsoup.nodes.Document r0;
        org.jsoup.nodes.Element $r3;
        java.lang.String $r1;
        org.jsoup.select.Elements $r2;

        r0 := @this: org.jsoup.nodes.Document;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.select.Elements getElementsByTag(java.lang.String)>("title");

        $r3 = virtualinvoke $r2.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();

        if $r3 != null goto label1;

        $r3 = virtualinvoke r0.<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>();

        $r3 = virtualinvoke $r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>("title");

        virtualinvoke $r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element text(java.lang.String)>($r1);

        return;

     label1:
        virtualinvoke $r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element text(java.lang.String)>($r1);

        return;
    }
}
