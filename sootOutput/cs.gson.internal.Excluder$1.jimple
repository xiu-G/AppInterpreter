class cs.gson.internal.Excluder$1 extends cs.gson.TypeAdapter
{
    private cs.gson.TypeAdapter delegate;
    final cs.gson.internal.Excluder this$0;
    private final cs.gson.Gson val$gson;
    private final boolean val$skipDeserialize;
    private final boolean val$skipSerialize;
    private final cs.gson.reflect.TypeToken val$type;

    void <init>(cs.gson.internal.Excluder, boolean, boolean, cs.gson.Gson, cs.gson.reflect.TypeToken)
    {
        cs.gson.internal.Excluder $r1;
        cs.gson.Gson $r2;
        cs.gson.reflect.TypeToken $r3;
        cs.gson.internal.Excluder$1 r0;
        boolean $z0, $z1;

        r0 := @this: cs.gson.internal.Excluder$1;

        $r1 := @parameter0: cs.gson.internal.Excluder;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r2 := @parameter3: cs.gson.Gson;

        $r3 := @parameter4: cs.gson.reflect.TypeToken;

        r0.<cs.gson.internal.Excluder$1: cs.gson.internal.Excluder this$0> = $r1;

        r0.<cs.gson.internal.Excluder$1: boolean val$skipDeserialize> = $z0;

        r0.<cs.gson.internal.Excluder$1: boolean val$skipSerialize> = $z1;

        r0.<cs.gson.internal.Excluder$1: cs.gson.Gson val$gson> = $r2;

        r0.<cs.gson.internal.Excluder$1: cs.gson.reflect.TypeToken val$type> = $r3;

        specialinvoke r0.<cs.gson.TypeAdapter: void <init>()>();

        return;
    }

    private cs.gson.TypeAdapter delegate()
    {
        cs.gson.TypeAdapter $r4;
        cs.gson.Gson $r1;
        cs.gson.internal.Excluder $r2;
        cs.gson.reflect.TypeToken $r3;
        cs.gson.internal.Excluder$1 r0;

        r0 := @this: cs.gson.internal.Excluder$1;

        $r4 = r0.<cs.gson.internal.Excluder$1: cs.gson.TypeAdapter delegate>;

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r1 = r0.<cs.gson.internal.Excluder$1: cs.gson.Gson val$gson>;

        $r2 = r0.<cs.gson.internal.Excluder$1: cs.gson.internal.Excluder this$0>;

        $r3 = r0.<cs.gson.internal.Excluder$1: cs.gson.reflect.TypeToken val$type>;

        $r4 = virtualinvoke $r1.<cs.gson.Gson: cs.gson.TypeAdapter getDelegateAdapter(cs.gson.TypeAdapterFactory,cs.gson.reflect.TypeToken)>($r2, $r3);

        r0.<cs.gson.internal.Excluder$1: cs.gson.TypeAdapter delegate> = $r4;

        return $r4;
    }

    public java.lang.Object read(cs.gson.stream.JsonReader) throws java.io.IOException
    {
        cs.gson.TypeAdapter $r2;
        java.lang.Object $r3;
        cs.gson.stream.JsonReader $r1;
        cs.gson.internal.Excluder$1 r0;
        boolean $z0;

        r0 := @this: cs.gson.internal.Excluder$1;

        $r1 := @parameter0: cs.gson.stream.JsonReader;

        $z0 = r0.<cs.gson.internal.Excluder$1: boolean val$skipDeserialize>;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<cs.gson.stream.JsonReader: void skipValue()>();

        return null;

     label1:
        $r2 = specialinvoke r0.<cs.gson.internal.Excluder$1: cs.gson.TypeAdapter delegate()>();

        $r3 = virtualinvoke $r2.<cs.gson.TypeAdapter: java.lang.Object read(cs.gson.stream.JsonReader)>($r1);

        return $r3;
    }

    public void write(cs.gson.stream.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        cs.gson.TypeAdapter $r3;
        java.lang.Object r2;
        cs.gson.internal.Excluder$1 r0;
        cs.gson.stream.JsonWriter $r1;
        boolean $z0;

        r0 := @this: cs.gson.internal.Excluder$1;

        $r1 := @parameter0: cs.gson.stream.JsonWriter;

        r2 := @parameter1: java.lang.Object;

        $z0 = r0.<cs.gson.internal.Excluder$1: boolean val$skipSerialize>;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter nullValue()>();

        return;

     label1:
        $r3 = specialinvoke r0.<cs.gson.internal.Excluder$1: cs.gson.TypeAdapter delegate()>();

        virtualinvoke $r3.<cs.gson.TypeAdapter: void write(cs.gson.stream.JsonWriter,java.lang.Object)>($r1, r2);

        return;
    }
}
