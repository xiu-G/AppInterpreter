public class com.mobclick.android.t extends java.lang.Object
{
    static java.lang.String a;
    public static int b;

    static void <clinit>()
    {
        <com.mobclick.android.t: java.lang.String a> = "utf-8";

        return;
    }

    public void <init>()
    {
        com.mobclick.android.t r0;

        r0 := @this: com.mobclick.android.t;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int a(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.reflect.Field $r6;
        java.lang.Exception $r8;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.Class $r5;
        java.lang.Object $r7;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.StringBuilder;

     label1:
        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".R$");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r2);

        $r1 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.String getName()>();

        $r7 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        $r8 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MobclickAgent", "reflect resource error");

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label4:
        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static int a(java.util.Date, java.util.Date)
    {
        java.util.Date $r0, $r1, $r2;
        int $i2;
        long $l0, $l1;
        boolean $z0;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.util.Date;

        $z0 = virtualinvoke $r1.<java.util.Date: boolean after(java.util.Date)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $l0 = $l1 - $l0;

        $l0 = $l0 / 1000L;

        $i2 = (int) $l0;

        return $i2;

     label2:
        $r0 = $r2;

        $r2 = $r1;

        $r1 = $r0;

        goto label1;
    }

    public static java.lang.String a()
    {
        java.lang.Throwable $r4, $r5;
        int $i0;
        java.lang.String $r0, $r3;
        java.io.FileReader $r1;
        java.io.BufferedReader $r2;
        boolean $z0;

        $r0 = null;

        $r1 = new java.io.FileReader;

     label01:
        specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>("/proc/cpuinfo");

     label02:
        $r2 = new java.io.BufferedReader;

     label03:
        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r1, 1024);

        $r3 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label04:
        $r0 = $r3;

     label05:
        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

        virtualinvoke $r1.<java.io.FileReader: void close()>();

     label06:
        $r0 = $r3;

     label07:
        if $r0 == null goto label08;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(58);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label08:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;

     label09:
        $r4 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label07;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MobclickAgent", "Could not read from file /proc/cpuinfo", $r4);

     label11:
        goto label07;

     label12:
        $r5 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label07;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MobclickAgent", "Could not open file /proc/cpuinfo", $r5);

        goto label07;

        catch java.io.FileNotFoundException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.io.FileNotFoundException from label10 to label11 with label12;
    }

    public static java.lang.String a(java.lang.String, boolean)
    {
        java.lang.Throwable $r4;
        byte[] $r2;
        java.security.MessageDigest $r1;
        short $s3;
        byte $b2;
        java.lang.StringBuffer $r3, $r5;
        java.security.NoSuchAlgorithmException $r6;
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

     label01:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r5 = new java.lang.StringBuffer;

        $r3 = $r5;

     label03:
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r2;

        if $i0 < $i1 goto label08;

     label06:
        $r0 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        return $r0;

     label08:
        $b2 = $r2[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        if $i1 >= 16 goto label10;

        if $z0 != 0 goto label10;

     label09:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label10:
        $i1 = (int) $s3;

     label11:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label12:
        $i0 = $i0 + 1;

        goto label05;

     label13:
        $r4 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label14;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MobclickAgent", "getMD5 error");

        $r6 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke $r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label14:
        return "";

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label13;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label13;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label13;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label13;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label13;
    }

    public static java.lang.String a(java.util.Date)
    {
        java.text.SimpleDateFormat $r2;
        java.lang.String $r1;
        java.util.Date $r0;

        $r0 := @parameter0: java.util.Date;

        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r1 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r0);

        return $r1;
    }

    public static java.lang.String a(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

     label1:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("channel");

     label2:
        if $z0 == 0 goto label4;

     label3:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("channel");

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("channel", $r1);

     label4:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        return $r1;

     label5:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        goto label4;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void a(android.content.Context)
    {
        android.content.Context $r0;
        android.widget.Toast $r2;
        int $i0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.mobclick.android.t: int a(android.content.Context,java.lang.String,java.lang.String)>($r0, "string", "UMToast_IsUpdating");

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>($i0);

        $r2 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, $r1, 0);

        virtualinvoke $r2.<android.widget.Toast: void show()>();

        return;
    }

    public static void a(android.content.Context, java.util.Date)
    {
        android.content.SharedPreferences$Editor $r3;
        android.content.Context $r0;
        android.content.SharedPreferences $r2;
        java.util.Date $r1;
        java.lang.String $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.util.Date;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("exchange_last_request_time", 0);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = staticinvoke <com.mobclick.android.t: java.lang.String a(java.util.Date)>($r1);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("last_request_time", $r4);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static boolean a(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        int $i0;
        java.lang.String $r1, $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>($r1, $r3);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static byte[] a(java.lang.String)
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream $r1;
        java.util.zip.Deflater $r2;
        int $i0, $i1;
        java.lang.String $r0, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        <com.mobclick.android.t: int b> = 0;

        $r2 = new java.util.zip.Deflater;

        specialinvoke $r2.<java.util.zip.Deflater: void <init>()>();

        $r3 = <com.mobclick.android.t: java.lang.String a>;

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

        virtualinvoke $r2.<java.util.zip.Deflater: void setInput(byte[])>($r4);

        virtualinvoke $r2.<java.util.zip.Deflater: void finish()>();

        $r4 = newarray (byte)[8192];

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $z0 = virtualinvoke $r2.<java.util.zip.Deflater: boolean finished()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.util.zip.Deflater: void end()>();

        $r4 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;

     label2:
        $i0 = virtualinvoke $r2.<java.util.zip.Deflater: int deflate(byte[])>($r4);

        $i1 = <com.mobclick.android.t: int b>;

        $i1 = $i1 + $i0;

        <com.mobclick.android.t: int b> = $i1;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i0);

        goto label1;
    }

    public static java.lang.String[] a(javax.microedition.khronos.opengles.GL10)
    {
        javax.microedition.khronos.opengles.GL10 $r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;
        java.lang.Exception $r4;
        boolean $z0;

        $r0 := @parameter0: javax.microedition.khronos.opengles.GL10;

        $r1 = newarray (java.lang.String)[2];

     label1:
        $r2 = interfaceinvoke $r0.<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>(7936);

        $r3 = interfaceinvoke $r0.<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>(7937);

        $r1[0] = $r2;

        $r1[1] = $r3;

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MobclickAgent", "Could not read gpu infor:", $r4);

     label4:
        $r1 = newarray (java.lang.String)[0];

        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String b()
    {
        java.text.SimpleDateFormat $r0;
        java.lang.String $r1;
        java.util.Date $r2;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        $r1 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        return $r1;
    }

    public static java.lang.String b(android.content.Context)
    {
        android.content.Context $r0;
        android.os.Bundle $r4;
        android.content.pm.PackageManager $r1;
        java.lang.String $r2;
        android.content.pm.ApplicationInfo $r3;
        java.lang.Exception $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

     label01:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, 128);

     label02:
        if $r3 == null goto label09;

     label03:
        $r4 = $r3.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $r2 = virtualinvoke $r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("UMENG_APPKEY");

     label04:
        if $r2 == null goto label07;

     label05:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

     label06:
        return $r2;

     label07:
        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label09;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MobclickAgent", "Could not read UMENG_APPKEY meta-data from AndroidManifest.xml.");

     label09:
        return null;

     label10:
        $r5 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label09;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MobclickAgent", "Could not read UMENG_APPKEY meta-data from AndroidManifest.xml.");

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        goto label09;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    public static java.lang.String b(org.json.JSONObject)
    {
        java.lang.Exception $r5;
        org.json.JSONObject $r0, $r1, $r4;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        org.json.JSONArray $r3;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $i0 = 0;

     label01:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("header");

     label02:
        if $r1 == null goto label27;

     label03:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("access_subtype");

     label04:
        if $z0 == 0 goto label06;

     label05:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("access_subtype");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("access_subtype", $r2);

     label06:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("cpu");

     label07:
        if $z0 == 0 goto label09;

     label08:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("cpu");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("cpu", $r2);

     label09:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("app_version");

     label10:
        if $z0 == 0 goto label12;

     label11:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("app_version");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("app_version", $r2);

     label12:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("country");

     label13:
        if $z0 == 0 goto label15;

     label14:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("country");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", $r2);

     label15:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("device_model");

     label16:
        if $z0 == 0 goto label18;

     label17:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("device_model");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("device_model", $r2);

     label18:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("carrier");

     label19:
        if $z0 == 0 goto label21;

     label20:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("carrier");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("carrier", $r2);

     label21:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("language");

     label22:
        if $z0 == 0 goto label24;

     label23:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("language");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", $r2);

     label24:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("channel");

     label25:
        if $z0 == 0 goto label27;

     label26:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("channel");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("channel", $r2);

     label27:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("body");

        $r3 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>("event");

     label28:
        if $r3 == null goto label31;

        $i1 = 0;

     label29:
        $i2 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

     label30:
        if $i1 < $i2 goto label37;

     label31:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>("error");

     label32:
        if $r3 == null goto label35;

     label33:
        $i1 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

     label34:
        if $i0 < $i1 goto label46;

     label35:
        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

     label36:
        return $r2;

     label37:
        $r4 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>($i1);

     label38:
        if $r4 == null goto label45;

     label39:
        $z0 = virtualinvoke $r4.<org.json.JSONObject: boolean has(java.lang.String)>("label");

     label40:
        if $z0 == 0 goto label42;

     label41:
        $r2 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("label");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r2);

        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("label", $r2);

     label42:
        $z0 = virtualinvoke $r4.<org.json.JSONObject: boolean has(java.lang.String)>("tag");

     label43:
        if $z0 == 0 goto label45;

     label44:
        $r2 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("tag");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r2);

        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("tag", $r2);

     label45:
        $i1 = $i1 + 1;

        goto label29;

     label46:
        $r1 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>($i0);

     label47:
        if $r1 == null goto label51;

     label48:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("context");

     label49:
        if $z0 == 0 goto label51;

     label50:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("context");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r2);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("context", $r2);

     label51:
        $i0 = $i0 + 1;

        goto label33;

     label52:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        return $r2;

        catch java.lang.Exception from label01 to label02 with label52;
        catch java.lang.Exception from label03 to label04 with label52;
        catch java.lang.Exception from label05 to label07 with label52;
        catch java.lang.Exception from label08 to label10 with label52;
        catch java.lang.Exception from label11 to label13 with label52;
        catch java.lang.Exception from label14 to label16 with label52;
        catch java.lang.Exception from label17 to label19 with label52;
        catch java.lang.Exception from label20 to label22 with label52;
        catch java.lang.Exception from label23 to label25 with label52;
        catch java.lang.Exception from label26 to label28 with label52;
        catch java.lang.Exception from label29 to label30 with label52;
        catch java.lang.Exception from label31 to label32 with label52;
        catch java.lang.Exception from label33 to label34 with label52;
        catch java.lang.Exception from label35 to label36 with label52;
        catch java.lang.Exception from label37 to label38 with label52;
        catch java.lang.Exception from label39 to label40 with label52;
        catch java.lang.Exception from label41 to label43 with label52;
        catch java.lang.Exception from label44 to label45 with label52;
        catch java.lang.Exception from label46 to label47 with label52;
        catch java.lang.Exception from label48 to label49 with label52;
        catch java.lang.Exception from label50 to label51 with label52;
    }

    public static java.util.Date b(java.lang.String)
    {
        java.util.Date $r1;
        java.text.SimpleDateFormat $r2;
        java.lang.String $r0;
        java.lang.Exception $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.text.SimpleDateFormat;

     label1:
        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r1 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String c(android.content.Context)
    {
        android.content.Context $r0;
        android.telephony.TelephonyManager $r2;
        java.lang.Object $r1;
        java.lang.String $r3;
        java.lang.Exception $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        if $r2 != null goto label1;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobclickAgent", "No IMEI.");

     label1:
        $z0 = staticinvoke <com.mobclick.android.t: boolean a(android.content.Context,java.lang.String)>($r0, "android.permission.READ_PHONE_STATE");

     label2:
        if $z0 == 0 goto label8;

     label3:
        $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

     label4:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label9;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobclickAgent", "No IMEI.");

     label5:
        $r3 = staticinvoke <com.mobclick.android.t: java.lang.String j(android.content.Context)>($r0);

        if $r3 != null goto label9;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobclickAgent", "Failed to take mac as IMEI.");

     label6:
        return null;

     label7:
        $r4 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobclickAgent", "No IMEI.");

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

     label8:
        $r3 = "";

        goto label4;

     label9:
        return $r3;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    public static java.lang.String d(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.mobclick.android.t: java.lang.String c(android.content.Context)>($r0);

        $r1 = staticinvoke <com.mobclick.android.t: java.lang.String a(java.lang.String,boolean)>($r1, 1);

        return $r1;
    }

    public static java.util.Date e(android.content.Context)
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r1;
        java.util.Date $r3;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("exchange_last_request_time", 0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("last_request_time", "1900-01-01 00:00:00");

        $r3 = staticinvoke <com.mobclick.android.t: java.util.Date b(java.lang.String)>($r2);

        return $r3;
    }

    public static org.json.JSONObject f(android.content.Context)
    {
        android.content.pm.PackageManager $r6;
        android.view.WindowManager $r14;
        org.json.JSONObject $r1, $r19;
        android.content.ContentResolver $r9;
        java.util.Locale $r10;
        android.view.Display $r15;
        boolean $z0;
        java.util.TimeZone $r12;
        android.util.DisplayMetrics $r13, $r26;
        java.lang.Exception $r21, $r22, $r23, $r24;
        java.lang.StringBuilder $r16, $r27;
        android.location.Location $r18;
        java.lang.Throwable $r20;
        android.content.Context $r0;
        android.content.pm.PackageManager$NameNotFoundException $r28;
        java.lang.String[] $r17;
        android.content.pm.PackageInfo $r7;
        java.util.Calendar $r11;
        android.telephony.TelephonyManager $r3;
        int $i0, $i1;
        java.lang.String $r4, $r5;
        double $d0;
        android.content.res.Configuration $r8, $r25;
        java.lang.Object $r2;

        $r0 := @parameter0: android.content.Context;

        $r19 = new org.json.JSONObject;

        $r1 = $r19;

        specialinvoke $r19.<org.json.JSONObject: void <init>()>();

     label001:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r3 = (android.telephony.TelephonyManager) $r2;

        $r4 = staticinvoke <com.mobclick.android.t: java.lang.String d(android.content.Context)>($r0);

     label002:
        if $r4 == null goto label005;

     label003:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

     label004:
        if $z0 == 0 goto label008;

     label005:
        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label007;

     label006:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MobclickAgent", "No device id");

     label007:
        return null;

     label008:
        $r5 = staticinvoke <com.mobclick.android.t: java.lang.String c(android.content.Context)>($r0);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("device_id", $r5);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("idmd5", $r4);

     label009:
        $r4 = <android.os.Build: java.lang.String MODEL>;

     label010:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("device_model", $r4);

        $r4 = staticinvoke <com.mobclick.android.t: java.lang.String b(android.content.Context)>($r0);

     label011:
        if $r4 != null goto label014;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label013;

     label012:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MobclickAgent", "No appkey");

     label013:
        return null;

     label014:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("appkey", $r4);

     label015:
        $r4 = <com.mobclick.android.UmengConstants: java.lang.String channel>;

        if $r4 == null goto label062;

        $r4 = <com.mobclick.android.UmengConstants: java.lang.String channel>;

     label016:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("channel", $r4);

     label017:
        $r6 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r4, 0);

     label018:
        $r4 = $r7.<android.content.pm.PackageInfo: java.lang.String versionName>;

        $i0 = $r7.<android.content.pm.PackageInfo: int versionCode>;

     label019:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("app_version", $r4);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("version_code", $i0);

     label020:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sdk_type", "Android");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sdk_version", "3.2.1");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("os", "Android");

     label021:
        $r4 = <android.os.Build$VERSION: java.lang.String RELEASE>;

     label022:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("os_version", $r4);

     label023:
        $r25 = new android.content.res.Configuration;

        $r8 = $r25;

     label024:
        specialinvoke $r25.<android.content.res.Configuration: void <init>()>();

        $r9 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>($r9, $r8);

     label025:
        if $r8 == null goto label074;

     label026:
        $r10 = $r8.<android.content.res.Configuration: java.util.Locale locale>;

     label027:
        if $r10 == null goto label074;

     label028:
        $r10 = $r8.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = virtualinvoke $r10.<java.util.Locale: java.lang.String getCountry()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", $r4);

        $r10 = $r8.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = virtualinvoke $r10.<java.util.Locale: java.lang.String toString()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", $r4);

        $r10 = $r8.<android.content.res.Configuration: java.util.Locale locale>;

        $r11 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r10);

     label029:
        if $r11 == null goto label072;

     label030:
        $r12 = virtualinvoke $r11.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

     label031:
        if $r12 == null goto label070;

     label032:
        $i0 = virtualinvoke $r12.<java.util.TimeZone: int getRawOffset()>();

     label033:
        $i0 = $i0 / 3600000;

     label034:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", $i0);

     label035:
        $r26 = new android.util.DisplayMetrics;

        $r13 = $r26;

     label036:
        specialinvoke $r26.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r14 = (android.view.WindowManager) $r2;

        $r15 = interfaceinvoke $r14.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r15.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r13);

        $i0 = $r13.<android.util.DisplayMetrics: int widthPixels>;

        $i1 = $r13.<android.util.DisplayMetrics: int heightPixels>;

     label037:
        $r27 = new java.lang.StringBuilder;

        $r16 = $r27;

     label038:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("resolution", $r4);

     label039:
        $r17 = staticinvoke <com.mobclick.android.t: java.lang.String[] g(android.content.Context)>($r0);

        $r4 = $r17[0];

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("access", $r4);

        $r4 = $r17[0];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("2G/3G");

     label040:
        if $z0 == 0 goto label042;

     label041:
        $r4 = $r17[1];

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("access_subtype", $r4);

     label042:
        $r4 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("carrier", $r4);

     label043:
        $z0 = <com.mobclick.android.UmengConstants: boolean LOCATION_OPEN>;

        if $z0 == 0 goto label047;

     label044:
        $r18 = staticinvoke <com.mobclick.android.t: android.location.Location k(android.content.Context)>($r0);

     label045:
        if $r18 == null goto label112;

     label046:
        $d0 = virtualinvoke $r18.<android.location.Location: double getLatitude()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("lat", $r4);

        $d0 = virtualinvoke $r18.<android.location.Location: double getLongitude()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("lng", $r4);

     label047:
        $r4 = staticinvoke <com.mobclick.android.t: java.lang.String a()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("cpu", $r4);

     label048:
        $r4 = <com.mobclick.android.MobclickAgent: java.lang.String GPU_VENDER>;

     label049:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

     label050:
        if $z0 != 0 goto label052;

        $r4 = <com.mobclick.android.MobclickAgent: java.lang.String GPU_VENDER>;

     label051:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("gpu_vender", $r4);

     label052:
        $r4 = <com.mobclick.android.MobclickAgent: java.lang.String GPU_RENDERER>;

     label053:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

     label054:
        if $z0 != 0 goto label056;

        $r4 = <com.mobclick.android.MobclickAgent: java.lang.String GPU_RENDERER>;

     label055:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("gpu_renderer", $r4);

     label056:
        $z0 = <com.mobclick.android.UmengConstants: boolean canCollectionUserInfo>;

        if $z0 == 0 goto label060;

     label057:
        $r19 = staticinvoke <com.mobclick.android.t: org.json.JSONObject l(android.content.Context)>($r0);

     label058:
        if $r19 == null goto label060;

     label059:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("uinfo", $r19);

     label060:
        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("package", $r4);

     label061:
        return $r1;

     label062:
        $r4 = staticinvoke <com.mobclick.android.t: java.lang.String h(android.content.Context)>($r0);

     label063:
        goto label016;

     label064:
        $r20 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label066;

     label065:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MobclickAgent", "read version fail");

        $r28 = (android.content.pm.PackageManager$NameNotFoundException) $r20;

        virtualinvoke $r28.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

     label066:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("app_version", "unknown");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("version_code", "unknown");

     label067:
        goto label020;

     label068:
        $r21 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label069;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MobclickAgent", "getMessageHeader error");

        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

     label069:
        return null;

     label070:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", 8);

     label071:
        goto label035;

     label072:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", 8);

     label073:
        goto label035;

     label074:
        $r10 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label075:
        $z0 = <com.mobclick.android.UmengConstants: boolean canUseLCT>;

        if $z0 == 0 goto label098;

        if $r10 == null goto label098;

     label076:
        $r4 = virtualinvoke $r10.<java.util.Locale: java.lang.String getCountry()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label077:
        if $z0 != 0 goto label090;

     label078:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", $r4);

     label079:
        $r4 = virtualinvoke $r10.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label080:
        if $z0 != 0 goto label092;

     label081:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", $r4);

     label082:
        $r11 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r10);

     label083:
        if $r11 == null goto label096;

     label084:
        $r12 = virtualinvoke $r11.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

     label085:
        if $r12 == null goto label094;

     label086:
        $i0 = virtualinvoke $r12.<java.util.TimeZone: int getRawOffset()>();

     label087:
        $i0 = $i0 / 3600000;

     label088:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", $i0);

     label089:
        goto label035;

     label090:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", "Unknown");

     label091:
        goto label079;

     label092:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", "Unknown");

     label093:
        goto label082;

     label094:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", 8);

     label095:
        goto label035;

     label096:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", 8);

     label097:
        goto label035;

     label098:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", "Unknown");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", "Unknown");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", 8);

     label099:
        goto label035;

     label100:
        $r22 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label102;

     label101:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MobclickAgent", "read resolution fail");

        virtualinvoke $r22.<java.lang.Exception: void printStackTrace()>();

     label102:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("resolution", "Unknown");

     label103:
        goto label039;

     label104:
        $r23 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label106;

     label105:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MobclickAgent", "read access fail");

        virtualinvoke $r23.<java.lang.Exception: void printStackTrace()>();

     label106:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("access", "Unknown");

     label107:
        goto label042;

     label108:
        $r24 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label110;

     label109:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MobclickAgent", "read carrier fail");

        virtualinvoke $r24.<java.lang.Exception: void printStackTrace()>();

     label110:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("carrier", "Unknown");

     label111:
        goto label043;

     label112:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("lat", 0.0);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("lng", 0.0);

     label113:
        goto label047;

        catch java.lang.Exception from label001 to label002 with label068;
        catch java.lang.Exception from label003 to label004 with label068;
        catch java.lang.Exception from label006 to label007 with label068;
        catch java.lang.Exception from label008 to label009 with label068;
        catch java.lang.Exception from label010 to label011 with label068;
        catch java.lang.Exception from label012 to label013 with label068;
        catch java.lang.Exception from label014 to label015 with label068;
        catch java.lang.Exception from label016 to label017 with label068;
        catch android.content.pm.PackageManager$NameNotFoundException from label017 to label018 with label064;
        catch android.content.pm.PackageManager$NameNotFoundException from label019 to label020 with label064;
        catch java.lang.Exception from label017 to label020 with label068;
        catch java.lang.Exception from label020 to label021 with label068;
        catch java.lang.Exception from label022 to label023 with label068;
        catch java.lang.Exception from label024 to label025 with label068;
        catch java.lang.Exception from label026 to label027 with label068;
        catch java.lang.Exception from label028 to label029 with label068;
        catch java.lang.Exception from label030 to label031 with label068;
        catch java.lang.Exception from label032 to label033 with label068;
        catch java.lang.Exception from label034 to label035 with label068;
        catch java.lang.Exception from label036 to label037 with label100;
        catch java.lang.Exception from label038 to label039 with label100;
        catch java.lang.Exception from label039 to label040 with label104;
        catch java.lang.Exception from label041 to label042 with label104;
        catch java.lang.Exception from label042 to label043 with label108;
        catch java.lang.Exception from label044 to label045 with label068;
        catch java.lang.Exception from label046 to label048 with label068;
        catch java.lang.Exception from label049 to label050 with label068;
        catch java.lang.Exception from label051 to label052 with label068;
        catch java.lang.Exception from label053 to label054 with label068;
        catch java.lang.Exception from label055 to label056 with label068;
        catch java.lang.Exception from label057 to label058 with label068;
        catch java.lang.Exception from label059 to label061 with label068;
        catch java.lang.Exception from label062 to label063 with label068;
        catch java.lang.Exception from label065 to label067 with label068;
        catch java.lang.Exception from label070 to label071 with label068;
        catch java.lang.Exception from label072 to label073 with label068;
        catch java.lang.Exception from label074 to label075 with label068;
        catch java.lang.Exception from label076 to label077 with label068;
        catch java.lang.Exception from label078 to label080 with label068;
        catch java.lang.Exception from label081 to label083 with label068;
        catch java.lang.Exception from label084 to label085 with label068;
        catch java.lang.Exception from label086 to label087 with label068;
        catch java.lang.Exception from label088 to label089 with label068;
        catch java.lang.Exception from label090 to label091 with label068;
        catch java.lang.Exception from label092 to label093 with label068;
        catch java.lang.Exception from label094 to label095 with label068;
        catch java.lang.Exception from label096 to label097 with label068;
        catch java.lang.Exception from label098 to label099 with label068;
        catch java.lang.Exception from label101 to label103 with label068;
        catch java.lang.Exception from label105 to label107 with label068;
        catch java.lang.Exception from label109 to label111 with label068;
        catch java.lang.Exception from label112 to label113 with label068;
    }

    public static java.lang.String[] g(android.content.Context)
    {
        android.net.ConnectivityManager $r5;
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        android.net.NetworkInfo $r6;
        java.lang.String[] $r1;
        android.net.NetworkInfo$State $r7, $r8;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "Unknown";

        $r1[1] = "Unknown";

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_NETWORK_STATE", $r3);

        if $i0 == 0 goto label1;

        $r1[0] = "Unknown";

        return $r1;

     label1:
        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r5 = (android.net.ConnectivityManager) $r4;

        if $r5 != null goto label2;

        $r1[0] = "Unknown";

        return $r1;

     label2:
        $r6 = virtualinvoke $r5.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(1);

        $r7 = virtualinvoke $r6.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r8 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r7 != $r8 goto label3;

        $r1[0] = "Wi-Fi";

        return $r1;

     label3:
        $r6 = virtualinvoke $r5.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(0);

        $r7 = virtualinvoke $r6.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r8 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r7 != $r8 goto label4;

        $r1[0] = "2G/3G";

        $r3 = virtualinvoke $r6.<android.net.NetworkInfo: java.lang.String getSubtypeName()>();

        $r1[1] = $r3;

     label4:
        return $r1;
    }

    public static java.lang.String h(android.content.Context)
    {
        android.content.Context $r0;
        android.os.Bundle $r4;
        android.content.pm.PackageManager $r2;
        java.lang.Exception $r7;
        java.lang.Object $r5;
        java.lang.String $r1, $r6;
        android.content.pm.ApplicationInfo $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.mobclick.android.UmengConstants: java.lang.String channel>;

        if $r1 == null goto label01;

        $r1 = <com.mobclick.android.UmengConstants: java.lang.String channel>;

        return $r1;

     label01:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 128);

     label02:
        if $r3 == null goto label14;

     label03:
        $r4 = $r3.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label04:
        if $r4 == null goto label14;

     label05:
        $r4 = $r3.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $r5 = virtualinvoke $r4.<android.os.Bundle: java.lang.Object get(java.lang.String)>("UMENG_CHANNEL");

     label06:
        if $r5 == null goto label14;

     label07:
        $r1 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

     label08:
        $r6 = $r1;

        if $r1 == null goto label10;

     label09:
        <com.mobclick.android.UmengConstants: java.lang.String channel> = $r6;

        return $r6;

     label10:
        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label14;

     label11:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MobclickAgent", "Could not read UMENG_CHANNEL meta-data from AndroidManifest.xml.");

     label12:
        $r6 = "Unknown";

        goto label09;

     label13:
        $r7 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label14;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MobclickAgent", "Could not read UMENG_CHANNEL meta-data from AndroidManifest.xml.");

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label14:
        $r6 = "Unknown";

        goto label09;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public static boolean i(android.content.Context)
    {
        android.net.ConnectivityManager $r3;
        android.content.Context $r0;
        android.net.NetworkInfo $r4;
        java.lang.Object $r2;
        android.net.NetworkInfo$State $r1, $r5;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r3 = (android.net.ConnectivityManager) $r2;

        if $r3 != null goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(0);

        $r5 = virtualinvoke $r4.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r1 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r5 != $r1 goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(1);

        $r1 = virtualinvoke $r4.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r1 != $r5 goto label3;

        return 1;

     label3:
        return 0;
    }

    private static java.lang.String j(android.content.Context)
    {
        android.content.Context $r0;
        android.net.wifi.WifiManager $r2;
        android.net.wifi.WifiInfo $r3;
        java.lang.Object $r1;
        java.lang.String $r4;
        java.lang.Exception $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r2 = (android.net.wifi.WifiManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r4 = virtualinvoke $r3.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $z0 = <com.mobclick.android.UmengConstants: boolean testMode>;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("MobclickAgent", "Could not read MAC, forget to include ACCESS_WIFI_STATE permission?", $r5);

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static android.location.Location k(android.content.Context)
    {
        android.content.Context $r0;
        com.mobclick.android.k $r2;
        android.location.Location $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = <com.mobclick.android.MobclickAgent: boolean mUseLocationService>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = new com.mobclick.android.k;

        specialinvoke $r2.<com.mobclick.android.k: void <init>(android.content.Context)>($r0);

        $r1 = virtualinvoke $r2.<com.mobclick.android.k: android.location.Location a()>();

        return $r1;
    }

    private static org.json.JSONObject l(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r5;
        org.json.JSONObject $r1, $r6;
        android.content.SharedPreferences $r2;
        int $i0;
        java.lang.String $r3, $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r6 = new org.json.JSONObject;

        $r1 = $r6;

        specialinvoke $r6.<org.json.JSONObject: void <init>()>();

        $r2 = staticinvoke <com.mobclick.android.MobclickAgent: android.content.SharedPreferences a(android.content.Context)>($r0);

     label01:
        $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("gender", -1);

     label02:
        if $i0 == -1 goto label04;

     label03:
        $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("gender", -1);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("sex", $i0);

     label04:
        $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("age", -1);

     label05:
        if $i0 == -1 goto label07;

     label06:
        $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("age", -1);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("age", $i0);

     label07:
        $r3 = "";

     label08:
        $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("user_id", "");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

     label09:
        if $z0 != 0 goto label11;

     label10:
        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("user_id", "");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("id", $r3);

     label11:
        $r3 = "";

     label12:
        $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("id_source", "");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

     label13:
        if $z0 != 0 goto label15;

     label14:
        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("id_source", "");

        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r3);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("url", $r3);

     label15:
        $i0 = virtualinvoke $r1.<org.json.JSONObject: int length()>();

     label16:
        if $i0 <= 0 goto label18;

        return $r1;

     label17:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

     label18:
        return null;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Exception from label06 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label10 to label11 with label17;
        catch java.lang.Exception from label12 to label13 with label17;
        catch java.lang.Exception from label14 to label16 with label17;
    }
}
