public class com.yellowbook.android2.common.model.MapUtils extends java.lang.Object
{
    public static final int MAX_ZOOM_LEVEL;
    public static final int MIN_ZOOM_LEVEL;

    public void <init>()
    {
        com.yellowbook.android2.common.model.MapUtils r0;

        r0 := @this: com.yellowbook.android2.common.model.MapUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int convertToE6(float)
    {
        int $i0;
        float $f0;
        double $d0;

        $f0 := @parameter0: float;

        $d0 = (double) $f0;

        $d0 = $d0 * 1000000.0;

        $i0 = (int) $d0;

        return $i0;
    }

    public static java.util.ArrayList getDirection(com.yellowbook.android2.common.model.GeoPointInfo, com.yellowbook.android2.common.model.GeoPointInfo)
    {
        com.yellowbook.android2.common.model.GeoPointInfo $r0, $r1;

        $r0 := @parameter0: com.yellowbook.android2.common.model.GeoPointInfo;

        $r1 := @parameter1: com.yellowbook.android2.common.model.GeoPointInfo;

        return null;
    }

    public static java.io.InputStream getUrlAsStream(java.lang.String) throws java.lang.Exception
    {
        java.lang.Throwable $r7;
        org.apache.commons.httpclient.params.HttpClientParams $r3;
        java.lang.Exception $r4, $r6;
        org.apache.commons.httpclient.methods.GetMethod r2;
        org.apache.commons.httpclient.HttpClient r1;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.String $r0;
        java.io.InputStream $r8;

        $r0 := @parameter0: java.lang.String;

        r1 = new org.apache.commons.httpclient.HttpClient;

        specialinvoke r1.<org.apache.commons.httpclient.HttpClient: void <init>()>();

        $r3 = virtualinvoke r1.<org.apache.commons.httpclient.HttpClient: org.apache.commons.httpclient.params.HttpClientParams getParams()>();

        virtualinvoke $r3.<org.apache.commons.httpclient.params.HttpClientParams: void setConnectionManagerTimeout(long)>(3000L);

        r2 = new org.apache.commons.httpclient.methods.GetMethod;

        specialinvoke r2.<org.apache.commons.httpclient.methods.GetMethod: void <init>(java.lang.String)>($r0);

     label01:
        virtualinvoke r1.<org.apache.commons.httpclient.HttpClient: int executeMethod(org.apache.commons.httpclient.HttpMethod)>(r2);

        $i0 = virtualinvoke r2.<org.apache.commons.httpclient.methods.GetMethod: int getStatusCode()>();

     label02:
        if $i0 == 200 goto label09;

     label03:
        virtualinvoke r2.<org.apache.commons.httpclient.methods.GetMethod: void abort()>();

        virtualinvoke r2.<org.apache.commons.httpclient.methods.GetMethod: void releaseConnection()>();

     label04:
        $r4 = new java.lang.Exception;

        $r5 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http get failed, ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status code returned");

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>($r0);

        throw $r4;

     label06:
        $r4 := @caughtexception;

     label07:
        virtualinvoke r2.<org.apache.commons.httpclient.methods.GetMethod: void abort()>();

        virtualinvoke r2.<org.apache.commons.httpclient.methods.GetMethod: void releaseConnection()>();

        $r6 = new java.lang.Exception;

        $r0 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>($r0, $r4);

        throw $r6;

     label08:
        $r7 := @caughtexception;

        throw $r7;

     label09:
        $r8 = virtualinvoke r2.<org.apache.commons.httpclient.methods.GetMethod: java.io.InputStream getResponseBodyAsStream()>();

     label10:
        return $r8;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label03 to label04 with label06;
        catch java.lang.Exception from label05 to label06 with label06;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Exception from label09 to label10 with label06;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static boolean isEmpty(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <com.yellowbook.android2.common.model.MapUtils: int MIN_ZOOM_LEVEL> = 1;

        <com.yellowbook.android2.common.model.MapUtils: int MAX_ZOOM_LEVEL> = 19;

        return;
    }
}
