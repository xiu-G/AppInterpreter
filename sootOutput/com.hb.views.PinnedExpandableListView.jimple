public class com.hb.views.PinnedExpandableListView extends android.widget.ExpandableListView implements android.widget.AbsListView$OnScrollListener, android.widget.ExpandableListView$OnGroupClickListener
{
    private static final int MAX_ALPHA;
    private com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter;
    private float mDownX;
    private float mDownY;
    private android.view.View mHeaderView;
    private int mHeaderViewHeight;
    private boolean mHeaderViewVisible;
    private int mHeaderViewWidth;
    private int mOldState;

    public void <init>(android.content.Context)
    {
        int $i0;
        android.content.Context $r1;
        com.hb.views.PinnedExpandableListView r0;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.ExpandableListView: void <init>(android.content.Context)>($r1);

        $i0 = -1;

        r0.<com.hb.views.PinnedExpandableListView: int mOldState> = $i0;

        specialinvoke r0.<com.hb.views.PinnedExpandableListView: void registerListener()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        com.hb.views.PinnedExpandableListView r0;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $i0 = -1;

        r0.<com.hb.views.PinnedExpandableListView: int mOldState> = $i0;

        specialinvoke r0.<com.hb.views.PinnedExpandableListView: void registerListener()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        com.hb.views.PinnedExpandableListView r0;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $i0 = -1;

        r0.<com.hb.views.PinnedExpandableListView: int mOldState> = $i0;

        specialinvoke r0.<com.hb.views.PinnedExpandableListView: void registerListener()>();

        return;
    }

    private void headerViewClick()
    {
        com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter $r1;
        com.hb.views.PinnedExpandableListView r0;
        int $i0, $i2;
        long $l1;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $i0 = virtualinvoke r0.<com.hb.views.PinnedExpandableListView: int getFirstVisiblePosition()>();

        $l1 = virtualinvoke r0.<com.hb.views.PinnedExpandableListView: long getExpandableListPosition(int)>($i0);

        $i0 = staticinvoke <android.widget.ExpandableListView: int getPackedPositionGroup(long)>($l1);

        $r1 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        $i2 = interfaceinvoke $r1.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: int getGroupClickStatus(int)>($i0);

        if $i2 != 1 goto label2;

        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: boolean collapseGroup(int)>($i0);

        $r1 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        interfaceinvoke $r1.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: void setGroupClickStatus(int,int)>($i0, 0);

     label1:
        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: void setSelectedGroup(int)>($i0);

        return;

     label2:
        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: boolean expandGroup(int)>($i0);

        $r1 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        interfaceinvoke $r1.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: void setGroupClickStatus(int,int)>($i0, 1);

        goto label1;
    }

    private void registerListener()
    {
        com.hb.views.PinnedExpandableListView r0;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>(r0);

        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView$OnGroupClickListener)>(r0);

        return;
    }

    public void configureHeaderView(int, int)
    {
        android.widget.ExpandableListAdapter $r3;
        com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter $r2;
        com.hb.views.PinnedExpandableListView r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        if $r1 == null goto label10;

        $r2 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        if $r2 == null goto label10;

        $r2 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        $r3 = (android.widget.ExpandableListAdapter) $r2;

        $i2 = interfaceinvoke $r3.<android.widget.ExpandableListAdapter: int getGroupCount()>();

        if $i2 != 0 goto label01;

        return;

     label01:
        $r2 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        $i2 = interfaceinvoke $r2.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: int getExpandableHeaderState(int,int)>($i0, $i1);

        lookupswitch($i2)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label06;
            default: goto label02;
        };

     label02:
        return;

     label03:
        r0.<com.hb.views.PinnedExpandableListView: boolean mHeaderViewVisible> = 0;

        return;

     label04:
        $r2 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        interfaceinvoke $r2.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: void configureExpandableHeader(android.view.View,int,int,int)>($r1, $i0, $i1, 255);

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        if $i0 == 0 goto label05;

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        $i0 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewWidth>;

        $i1 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewHeight>;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>(0, 0, $i0, $i1);

     label05:
        r0.<com.hb.views.PinnedExpandableListView: boolean mHeaderViewVisible> = 1;

        return;

     label06:
        $r1 = virtualinvoke r0.<com.hb.views.PinnedExpandableListView: android.view.View getChildAt(int)>(0);

        if $r1 == null goto label10;

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        $i3 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        if $i2 >= $i3 goto label09;

        $i2 = $i2 - $i3;

        $i4 = $i3 + $i2;

        $i4 = $i4 * 255;

        $i3 = $i4 / $i3;

     label07:
        $r2 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        interfaceinvoke $r2.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: void configureExpandableHeader(android.view.View,int,int,int)>($r1, $i0, $i1, $i3);

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        if $i0 == $i2 goto label08;

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        $i0 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewWidth>;

        $i1 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewHeight>;

        $i1 = $i1 + $i2;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>(0, $i2, $i0, $i1);

     label08:
        r0.<com.hb.views.PinnedExpandableListView: boolean mHeaderViewVisible> = 1;

        return;

     label09:
        $i2 = 0;

        $i3 = 255;

        goto label07;

     label10:
        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        com.hb.views.PinnedExpandableListView r0;
        android.view.View $r2;
        android.graphics.Canvas $r1;
        long $l0;
        boolean $z0;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)>($r1);

        $z0 = r0.<com.hb.views.PinnedExpandableListView: boolean mHeaderViewVisible>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        $l0 = virtualinvoke r0.<com.hb.views.PinnedExpandableListView: long getDrawingTime()>();

        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r2, $l0);

     label1:
        return;
    }

    public boolean onGroupClick(android.widget.ExpandableListView, android.view.View, int, long)
    {
        com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter $r3;
        com.hb.views.PinnedExpandableListView r0;
        int $i0, $i2;
        android.view.View $r2;
        long $l1;
        android.widget.ExpandableListView $r1;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $r1 := @parameter0: android.widget.ExpandableListView;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $l1 := @parameter3: long;

        $r3 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        $i2 = interfaceinvoke $r3.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: int getGroupClickStatus(int)>($i0);

        if $i2 != 0 goto label1;

        $r3 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        interfaceinvoke $r3.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: void setGroupClickStatus(int,int)>($i0, 1);

        virtualinvoke $r1.<android.widget.ExpandableListView: boolean expandGroup(int)>($i0);

        virtualinvoke $r1.<android.widget.ExpandableListView: void setSelectedGroup(int)>($i0);

        if $i0 != 0 goto label2;

        $r3 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        $r2 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        interfaceinvoke $r3.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: void configureExpandableHeader(android.view.View,int,int,int)>($r2, $i0, 0, 255);

        return 1;

     label1:
        $r3 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        $i2 = interfaceinvoke $r3.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: int getGroupClickStatus(int)>($i0);

        if $i2 != 1 goto label2;

        $r3 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        interfaceinvoke $r3.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: void setGroupClickStatus(int,int)>($i0, 0);

        virtualinvoke $r1.<android.widget.ExpandableListView: boolean collapseGroup(int)>($i0);

     label2:
        return 1;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        long $l4;
        com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter $r1;
        com.hb.views.PinnedExpandableListView r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.ExpandableListView: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $i0 = virtualinvoke r0.<com.hb.views.PinnedExpandableListView: int getFirstVisiblePosition()>();

        $l4 = virtualinvoke r0.<com.hb.views.PinnedExpandableListView: long getExpandableListPosition(int)>($i0);

        $i0 = staticinvoke <android.widget.ExpandableListView: int getPackedPositionGroup(long)>($l4);

        $i1 = staticinvoke <android.widget.ExpandableListView: int getPackedPositionChild(long)>($l4);

        $r1 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        $i2 = interfaceinvoke $r1.<com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter: int getExpandableHeaderState(int,int)>($i0, $i1);

        $r2 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        if $r2 == null goto label1;

        $r1 = r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter>;

        if $r1 == null goto label1;

        $i3 = r0.<com.hb.views.PinnedExpandableListView: int mOldState>;

        if $i2 == $i3 goto label1;

        r0.<com.hb.views.PinnedExpandableListView: int mOldState> = $i2;

        $r2 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        $i2 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewWidth>;

        $i3 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewHeight>;

        virtualinvoke $r2.<android.view.View: void layout(int,int,int,int)>(0, 0, $i2, $i3);

     label1:
        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: void configureHeaderView(int,int)>($i0, $i1);

        return;
    }

    protected void onMeasure(int, int)
    {
        com.hb.views.PinnedExpandableListView r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.widget.ExpandableListView: void onMeasure(int,int)>($i0, $i1);

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        if $r1 == null goto label1;

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: void measureChild(android.view.View,int,int)>($r1, $i0, $i1);

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewWidth> = $i0;

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewHeight> = $i0;

     label1:
        return;
    }

    public void onScroll(android.widget.AbsListView, int, int, int)
    {
        com.hb.views.PinnedExpandableListView r0;
        int $i0, $i1, $i2;
        android.widget.AbsListView $r1;
        long $l3;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $r1 := @parameter0: android.widget.AbsListView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $l3 = virtualinvoke r0.<com.hb.views.PinnedExpandableListView: long getExpandableListPosition(int)>($i0);

        $i0 = staticinvoke <android.widget.ExpandableListView: int getPackedPositionGroup(long)>($l3);

        $i1 = staticinvoke <android.widget.ExpandableListView: int getPackedPositionChild(long)>($l3);

        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: void configureHeaderView(int,int)>($i0, $i1);

        return;
    }

    public void onScrollStateChanged(android.widget.AbsListView, int)
    {
        int $i0;
        android.widget.AbsListView $r1;
        com.hb.views.PinnedExpandableListView r0;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $r1 := @parameter0: android.widget.AbsListView;

        $i0 := @parameter1: int;

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.hb.views.PinnedExpandableListView r0;
        byte $b1;
        android.view.MotionEvent $r1;
        int $i0;
        float $f0, $f1, $f2, $f3, $f4;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.hb.views.PinnedExpandableListView: boolean mHeaderViewVisible>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.<android.widget.ExpandableListView: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label2:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        r0.<com.hb.views.PinnedExpandableListView: float mDownX> = $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        r0.<com.hb.views.PinnedExpandableListView: float mDownY> = $f0;

        $f0 = r0.<com.hb.views.PinnedExpandableListView: float mDownX>;

        $i0 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewWidth>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpg $f1;

        $i0 = (int) $b1;

        if $i0 > 0 goto label1;

        $f0 = r0.<com.hb.views.PinnedExpandableListView: float mDownY>;

        $i0 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewHeight>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpg $f1;

        $i0 = (int) $b1;

        if $i0 > 0 goto label1;

        return 1;

     label3:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f2 = r0.<com.hb.views.PinnedExpandableListView: float mDownX>;

        $f2 = $f1 - $f2;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $f3 = r0.<com.hb.views.PinnedExpandableListView: float mDownY>;

        $f3 = $f0 - $f3;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $i0 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewWidth>;

        $f4 = (float) $i0;

        $b1 = $f1 cmpg $f4;

        $i0 = (int) $b1;

        if $i0 > 0 goto label1;

        $i0 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewHeight>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpg $f1;

        $i0 = (int) $b1;

        if $i0 > 0 goto label1;

        $i0 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewWidth>;

        $f0 = (float) $i0;

        $b1 = $f2 cmpg $f0;

        $i0 = (int) $b1;

        if $i0 > 0 goto label1;

        $i0 = r0.<com.hb.views.PinnedExpandableListView: int mHeaderViewHeight>;

        $f0 = (float) $i0;

        $b1 = $f3 cmpg $f0;

        $i0 = (int) $b1;

        if $i0 > 0 goto label1;

        $r2 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        if $r2 == null goto label4;

        specialinvoke r0.<com.hb.views.PinnedExpandableListView: void headerViewClick()>();

     label4:
        return 1;
    }

    public void setAdapter(android.widget.ExpandableListAdapter)
    {
        android.widget.ExpandableListAdapter $r1;
        com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter $r2;
        com.hb.views.PinnedExpandableListView r0;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $r1 := @parameter0: android.widget.ExpandableListAdapter;

        specialinvoke r0.<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>($r1);

        $r2 = (com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter) $r1;

        r0.<com.hb.views.PinnedExpandableListView: com.hb.views.PinnedExpandableListView$PinnedHeaderAdapter mAdapter> = $r2;

        return;
    }

    public void setHeaderView(android.view.View)
    {
        com.hb.views.PinnedExpandableListView r0;
        int $i0, $i1;
        android.view.View $r1;
        android.widget.AbsListView$LayoutParams $r2;

        r0 := @this: com.hb.views.PinnedExpandableListView;

        $r1 := @parameter0: android.view.View;

        r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView> = $r1;

        $r2 = new android.widget.AbsListView$LayoutParams;

        $i0 = -1;

        $i1 = -2;

        specialinvoke $r2.<android.widget.AbsListView$LayoutParams: void <init>(int,int)>($i0, $i1);

        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        $r1 = r0.<com.hb.views.PinnedExpandableListView: android.view.View mHeaderView>;

        if $r1 == null goto label1;

        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: void setFadingEdgeLength(int)>(0);

     label1:
        virtualinvoke r0.<com.hb.views.PinnedExpandableListView: void requestLayout()>();

        return;
    }

    public static void <clinit>()
    {
        <com.hb.views.PinnedExpandableListView: int MAX_ALPHA> = 255;

        return;
    }
}
