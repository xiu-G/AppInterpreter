public class com.facebook.ads.NativeAd extends java.lang.Object implements com.facebook.ads.Ad
{
    private static final java.lang.String TAG;
    private static java.util.WeakHashMap viewMapping;
    private com.facebook.ads.internal.NativeAdDataModel adDataModel;
    private com.facebook.ads.AdListener adListener;
    private boolean adLoaded;
    private com.facebook.ads.internal.AdRequestController adRequestController;
    private android.view.View adView;
    private java.util.List clickListeners;
    private final android.content.Context context;
    private com.facebook.ads.NativeAd$EventHandler eventHandler;
    private com.facebook.ads.internal.NativeAdHandler handler;
    private com.facebook.ads.ImpressionListener impListener;
    private volatile boolean loadRequested;
    private int viewabilityThreshold;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;
        java.util.WeakHashMap $r2;

        $r1 = class "Lcom/facebook/ads/NativeAd;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.facebook.ads.NativeAd: java.lang.String TAG> = $r0;

        $r2 = new java.util.WeakHashMap;

        specialinvoke $r2.<java.util.WeakHashMap: void <init>()>();

        <com.facebook.ads.NativeAd: java.util.WeakHashMap viewMapping> = $r2;

        return;
    }

    public void <init>(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        com.facebook.ads.AdSize $r3;
        com.facebook.ads.NativeAd r0;
        com.facebook.ads.NativeAd$1 $r5;
        java.util.ArrayList $r6;
        com.facebook.ads.internal.AdType $r4;
        com.facebook.ads.internal.AdRequestController $r7;
        java.lang.String $r2;

        r0 := @this: com.facebook.ads.NativeAd;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.facebook.ads.NativeAd: android.content.Context context> = $r1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.facebook.ads.NativeAd: java.util.List clickListeners> = $r6;

        $r7 = new com.facebook.ads.internal.AdRequestController;

        $r1 = r0.<com.facebook.ads.NativeAd: android.content.Context context>;

        $r3 = <com.facebook.ads.AdSize: com.facebook.ads.AdSize INTERSTITIAL>;

        $r4 = <com.facebook.ads.internal.AdType: com.facebook.ads.internal.AdType NATIVE>;

        $r5 = new com.facebook.ads.NativeAd$1;

        specialinvoke $r5.<com.facebook.ads.NativeAd$1: void <init>(com.facebook.ads.NativeAd)>(r0);

        specialinvoke $r7.<com.facebook.ads.internal.AdRequestController: void <init>(android.content.Context,java.lang.String,com.facebook.ads.AdSize,boolean,com.facebook.ads.internal.AdType,com.facebook.ads.internal.AdRequest$Callback)>($r1, $r2, $r3, 0, $r4, $r5);

        r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.AdRequestController adRequestController> = $r7;

        return;
    }

    static com.facebook.ads.AdListener access$000(com.facebook.ads.NativeAd)
    {
        com.facebook.ads.AdListener r1;
        com.facebook.ads.NativeAd $r0;

        $r0 := @parameter0: com.facebook.ads.NativeAd;

        r1 = $r0.<com.facebook.ads.NativeAd: com.facebook.ads.AdListener adListener>;

        return r1;
    }

    static com.facebook.ads.internal.NativeAdDataModel access$100(com.facebook.ads.NativeAd)
    {
        com.facebook.ads.internal.NativeAdDataModel r1;
        com.facebook.ads.NativeAd $r0;

        $r0 := @parameter0: com.facebook.ads.NativeAd;

        r1 = $r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdDataModel adDataModel>;

        return r1;
    }

    static com.facebook.ads.internal.NativeAdDataModel access$102(com.facebook.ads.NativeAd, com.facebook.ads.internal.NativeAdDataModel)
    {
        com.facebook.ads.internal.NativeAdDataModel $r1;
        com.facebook.ads.NativeAd $r0;

        $r0 := @parameter0: com.facebook.ads.NativeAd;

        $r1 := @parameter1: com.facebook.ads.internal.NativeAdDataModel;

        $r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdDataModel adDataModel> = $r1;

        return $r1;
    }

    static boolean access$202(com.facebook.ads.NativeAd, boolean)
    {
        com.facebook.ads.NativeAd $r0;
        boolean $z0;

        $r0 := @parameter0: com.facebook.ads.NativeAd;

        $z0 := @parameter1: boolean;

        $r0.<com.facebook.ads.NativeAd: boolean adLoaded> = $z0;

        return $z0;
    }

    static int access$302(com.facebook.ads.NativeAd, int)
    {
        int $i0;
        com.facebook.ads.NativeAd $r0;

        $r0 := @parameter0: com.facebook.ads.NativeAd;

        $i0 := @parameter1: int;

        $r0.<com.facebook.ads.NativeAd: int viewabilityThreshold> = $i0;

        return $i0;
    }

    static boolean access$500(com.facebook.ads.NativeAd)
    {
        com.facebook.ads.NativeAd $r0;
        boolean $z0;

        $r0 := @parameter0: com.facebook.ads.NativeAd;

        $z0 = specialinvoke $r0.<com.facebook.ads.NativeAd: boolean isViewOnScreen()>();

        return $z0;
    }

    static com.facebook.ads.ImpressionListener access$600(com.facebook.ads.NativeAd)
    {
        com.facebook.ads.NativeAd $r0;
        com.facebook.ads.ImpressionListener r1;

        $r0 := @parameter0: com.facebook.ads.NativeAd;

        r1 = $r0.<com.facebook.ads.NativeAd: com.facebook.ads.ImpressionListener impListener>;

        return r1;
    }

    static android.content.Context access$700(com.facebook.ads.NativeAd)
    {
        android.content.Context r1;
        com.facebook.ads.NativeAd $r0;

        $r0 := @parameter0: com.facebook.ads.NativeAd;

        r1 = $r0.<com.facebook.ads.NativeAd: android.content.Context context>;

        return r1;
    }

    static android.view.View access$800(com.facebook.ads.NativeAd)
    {
        android.view.View r1;
        com.facebook.ads.NativeAd $r0;

        $r0 := @parameter0: com.facebook.ads.NativeAd;

        r1 = $r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        return r1;
    }

    private void addListener(android.view.View)
    {
        com.facebook.ads.NativeAd$EventHandler $r3;
        java.util.List $r2;
        com.facebook.ads.NativeAd r0;
        android.view.View $r1;

        r0 := @this: com.facebook.ads.NativeAd;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<com.facebook.ads.NativeAd: java.util.List clickListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.NativeAd$EventHandler eventHandler>;

        virtualinvoke $r1.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r3);

        $r3 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.NativeAd$EventHandler eventHandler>;

        virtualinvoke $r1.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>($r3);

        return;
    }

    private void collectAllSubviews(java.util.List, android.view.View)
    {
        java.util.List $r1;
        com.facebook.ads.NativeAd r0;
        int $i0, $i1;
        android.view.View $r2;
        android.view.ViewGroup $r3;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: android.view.View;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $r3 = (android.view.ViewGroup) $r2;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r3.<android.view.ViewGroup: int getChildCount()>();

        if $i0 >= $i1 goto label2;

        $r2 = virtualinvoke $r3.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        specialinvoke r0.<com.facebook.ads.NativeAd: void collectAllSubviews(java.util.List,android.view.View)>($r1, $r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    private void detachListeners()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        com.facebook.ads.NativeAd r0;
        android.view.View $r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $r1 = r0.<com.facebook.ads.NativeAd: java.util.List clickListeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.view.View) $r3;

        virtualinvoke $r4.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(null);

        virtualinvoke $r4.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>(null);

        goto label1;

     label2:
        $r1 = r0.<com.facebook.ads.NativeAd: java.util.List clickListeners>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public static void downloadAndDisplayImage(com.facebook.ads.NativeAd$Image, android.widget.ImageView)
    {
        com.facebook.ads.NativeAd$Image $r0;
        com.facebook.ads.internal.DownloadImageTask $r2;
        android.widget.ImageView $r1;
        java.lang.String[] $r4;
        java.lang.String $r3;

        $r0 := @parameter0: com.facebook.ads.NativeAd$Image;

        $r1 := @parameter1: android.widget.ImageView;

        $r2 = new com.facebook.ads.internal.DownloadImageTask;

        specialinvoke $r2.<com.facebook.ads.internal.DownloadImageTask: void <init>(android.widget.ImageView)>($r1);

        $r4 = newarray (java.lang.String)[1];

        $r3 = virtualinvoke $r0.<com.facebook.ads.NativeAd$Image: java.lang.String getUrl()>();

        $r4[0] = $r3;

        virtualinvoke $r2.<com.facebook.ads.internal.DownloadImageTask: android.os.AsyncTask execute(java.lang.Object[])>($r4);

        return;
    }

    private void ensureAdRequestController()
    {
        com.facebook.ads.internal.AdClientEvent $r1;
        com.facebook.ads.NativeAd r0;
        com.facebook.ads.internal.AdRequestController $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: com.facebook.ads.NativeAd;

        $r2 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.AdRequestController adRequestController>;

        if $r2 != null goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("No request controller available, has the NativeAd been destroyed?");

        $r1 = staticinvoke <com.facebook.ads.internal.AdClientEvent: com.facebook.ads.internal.AdClientEvent newErrorEvent(java.lang.Exception)>($r3);

        staticinvoke <com.facebook.ads.internal.AdClientEventManager: void addClientEvent(com.facebook.ads.internal.AdClientEvent)>($r1);

        throw $r3;

     label1:
        return;
    }

    private boolean isValidAlpha()
    {
        byte $b1;
        com.facebook.ads.NativeAd r0;
        int $i0;
        float $f0;
        android.view.View $r1;

        r0 := @this: com.facebook.ads.NativeAd;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label2;

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        $f0 = virtualinvoke $r1.<android.view.View: float getAlpha()>();

        $b1 = $f0 cmpl 0.9F;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean isViewOnScreen()
    {
        android.graphics.Rect $r3, $r4;
        android.view.ViewParent $r2;
        com.facebook.ads.NativeAd r0;
        byte $b2;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0;
        double $d0, $d1, $d2;

        r0 := @this: com.facebook.ads.NativeAd;

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        if $r1 == null goto label2;

        $z0 = r0.<com.facebook.ads.NativeAd: boolean adLoaded>;

        if $z0 == 0 goto label2;

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label2;

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 == null goto label2;

        $z0 = specialinvoke r0.<com.facebook.ads.NativeAd: boolean isValidAlpha()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = new android.graphics.Rect;

        $r3 = $r4;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>($r3);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        $i0 = $i1 * $i0;

        $d0 = (double) $i0;

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        $i1 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i0 = $i0 * $i1;

        $d1 = (double) $i0;

        $i0 = r0.<com.facebook.ads.NativeAd: int viewabilityThreshold>;

        $d2 = (double) $i0;

        $d1 = $d1 * $d2;

        $d1 = $d1 / 100.0;

        $b2 = $d0 cmpl $d1;

        $i0 = (int) $b2;

        if $i0 < 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void destroy()
    {
        com.facebook.ads.NativeAd r0;
        com.facebook.ads.internal.NativeAdHandler $r3;
        com.facebook.ads.internal.AdRequestController $r2;
        android.view.View $r1;
        java.util.WeakHashMap $r4;

        r0 := @this: com.facebook.ads.NativeAd;

        $r2 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.AdRequestController adRequestController>;

        if $r2 == null goto label1;

        $r2 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.AdRequestController adRequestController>;

        virtualinvoke $r2.<com.facebook.ads.internal.AdRequestController: void destroy()>();

        r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.AdRequestController adRequestController> = null;

     label1:
        specialinvoke r0.<com.facebook.ads.NativeAd: void detachListeners()>();

        $r3 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdHandler handler>;

        if $r3 == null goto label2;

        $r3 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdHandler handler>;

        virtualinvoke $r3.<com.facebook.ads.internal.NativeAdHandler: void cancelImpressionRetry()>();

        r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdHandler handler> = null;

     label2:
        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        if $r1 == null goto label3;

        $r4 = <com.facebook.ads.NativeAd: java.util.WeakHashMap viewMapping>;

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        r0.<com.facebook.ads.NativeAd: android.view.View adView> = null;

     label3:
        return;
    }

    public java.lang.String getAdBody()
    {
        com.facebook.ads.internal.NativeAdDataModel $r2;
        com.facebook.ads.NativeAd r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $z0 = r0.<com.facebook.ads.NativeAd: boolean adLoaded>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdDataModel adDataModel>;

        $r1 = virtualinvoke $r2.<com.facebook.ads.internal.NativeAdDataModel: java.lang.String getBody()>();

        return $r1;
    }

    public java.lang.String getAdCallToAction()
    {
        com.facebook.ads.internal.NativeAdDataModel $r2;
        com.facebook.ads.NativeAd r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $z0 = r0.<com.facebook.ads.NativeAd: boolean adLoaded>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdDataModel adDataModel>;

        $r1 = virtualinvoke $r2.<com.facebook.ads.internal.NativeAdDataModel: java.lang.String getCallToAction()>();

        return $r1;
    }

    public com.facebook.ads.NativeAd$Image getAdCoverImage()
    {
        com.facebook.ads.NativeAd$Image $r1;
        com.facebook.ads.internal.NativeAdDataModel $r2;
        com.facebook.ads.NativeAd r0;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $z0 = r0.<com.facebook.ads.NativeAd: boolean adLoaded>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdDataModel adDataModel>;

        $r1 = virtualinvoke $r2.<com.facebook.ads.internal.NativeAdDataModel: com.facebook.ads.NativeAd$Image getImage()>();

        return $r1;
    }

    public com.facebook.ads.NativeAd$Image getAdIcon()
    {
        com.facebook.ads.NativeAd$Image $r1;
        com.facebook.ads.internal.NativeAdDataModel $r2;
        com.facebook.ads.NativeAd r0;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $z0 = r0.<com.facebook.ads.NativeAd: boolean adLoaded>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdDataModel adDataModel>;

        $r1 = virtualinvoke $r2.<com.facebook.ads.internal.NativeAdDataModel: com.facebook.ads.NativeAd$Image getIcon()>();

        return $r1;
    }

    public java.lang.String getAdSocialContext()
    {
        com.facebook.ads.internal.NativeAdDataModel $r2;
        com.facebook.ads.NativeAd r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $z0 = r0.<com.facebook.ads.NativeAd: boolean adLoaded>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdDataModel adDataModel>;

        $r1 = virtualinvoke $r2.<com.facebook.ads.internal.NativeAdDataModel: java.lang.String getSocialContext()>();

        return $r1;
    }

    public com.facebook.ads.NativeAd$Rating getAdStarRating()
    {
        com.facebook.ads.NativeAd$Rating $r1;
        com.facebook.ads.internal.NativeAdDataModel $r2;
        com.facebook.ads.NativeAd r0;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $z0 = r0.<com.facebook.ads.NativeAd: boolean adLoaded>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdDataModel adDataModel>;

        $r1 = virtualinvoke $r2.<com.facebook.ads.internal.NativeAdDataModel: com.facebook.ads.NativeAd$Rating getStarRating()>();

        return $r1;
    }

    public java.lang.String getAdTitle()
    {
        com.facebook.ads.internal.NativeAdDataModel $r2;
        com.facebook.ads.NativeAd r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $z0 = r0.<com.facebook.ads.NativeAd: boolean adLoaded>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdDataModel adDataModel>;

        $r1 = virtualinvoke $r2.<com.facebook.ads.internal.NativeAdDataModel: java.lang.String getTitle()>();

        return $r1;
    }

    public boolean isAdLoaded()
    {
        com.facebook.ads.NativeAd r0;
        boolean z0;

        r0 := @this: com.facebook.ads.NativeAd;

        z0 = r0.<com.facebook.ads.NativeAd: boolean adLoaded>;

        return z0;
    }

    public void loadAd()
    {
        java.lang.IllegalStateException $r2;
        com.facebook.ads.internal.AdClientEvent $r1;
        com.facebook.ads.NativeAd r0;
        com.facebook.ads.internal.AdRequestController $r3;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $z0 = r0.<com.facebook.ads.NativeAd: boolean loadRequested>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Ad already loaded");

        $r1 = staticinvoke <com.facebook.ads.internal.AdClientEvent: com.facebook.ads.internal.AdClientEvent newErrorEvent(java.lang.Exception)>($r2);

        staticinvoke <com.facebook.ads.internal.AdClientEventManager: void addClientEvent(com.facebook.ads.internal.AdClientEvent)>($r1);

        throw $r2;

     label1:
        r0.<com.facebook.ads.NativeAd: boolean loadRequested> = 1;

        specialinvoke r0.<com.facebook.ads.NativeAd: void ensureAdRequestController()>();

        $r3 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.AdRequestController adRequestController>;

        virtualinvoke $r3.<com.facebook.ads.internal.AdRequestController: void loadAd()>();

        return;
    }

    public void registerViewForInteraction(android.view.View)
    {
        android.view.View $r1;
        com.facebook.ads.NativeAd r0;
        java.util.ArrayList $r2;

        r0 := @this: com.facebook.ads.NativeAd;

        $r1 := @parameter0: android.view.View;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<com.facebook.ads.NativeAd: void collectAllSubviews(java.util.List,android.view.View)>($r2, $r1);

        virtualinvoke r0.<com.facebook.ads.NativeAd: void registerViewForInteraction(android.view.View,java.util.List)>($r1, $r2);

        return;
    }

    public void registerViewForInteraction(android.view.View, java.util.List)
    {
        android.content.Context $r4;
        com.facebook.ads.internal.AdClientEvent $r6;
        com.facebook.ads.NativeAd$2 $r16;
        com.facebook.ads.NativeAd$EventHandler $r13;
        com.facebook.ads.internal.NativeAdHandler $r15;
        int $i0;
        android.view.View $r1, $r8;
        java.lang.String $r7;
        java.lang.ref.WeakReference $r11;
        java.util.WeakHashMap $r9;
        boolean $z0;
        java.util.Iterator $r14;
        com.facebook.ads.NativeAd r0, $r12;
        java.lang.IllegalArgumentException $r5;
        java.util.List $r2;
        com.facebook.ads.internal.NativeAdDataModel $r3;
        java.lang.Object $r10;

        r0 := @this: com.facebook.ads.NativeAd;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.util.List;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must provide a View");

        $r6 = staticinvoke <com.facebook.ads.internal.AdClientEvent: com.facebook.ads.internal.AdClientEvent newErrorEvent(java.lang.Exception)>($r5);

        staticinvoke <com.facebook.ads.internal.AdClientEventManager: void addClientEvent(com.facebook.ads.internal.AdClientEvent)>($r6);

        throw $r5;

     label1:
        if $r2 == null goto label2;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label3;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid set of clickable views");

        $r6 = staticinvoke <com.facebook.ads.internal.AdClientEvent: com.facebook.ads.internal.AdClientEvent newErrorEvent(java.lang.Exception)>($r5);

        staticinvoke <com.facebook.ads.internal.AdClientEventManager: void addClientEvent(com.facebook.ads.internal.AdClientEvent)>($r6);

        throw $r5;

     label3:
        $z0 = r0.<com.facebook.ads.NativeAd: boolean adLoaded>;

        if $z0 != 0 goto label4;

        $r7 = <com.facebook.ads.NativeAd: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r7, "Ad not loaded");

        return;

     label4:
        $r8 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        if $r8 == null goto label5;

        $r7 = <com.facebook.ads.NativeAd: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, "Native Ad was already registered with a View. Auto unregistering and proceeding.");

        virtualinvoke r0.<com.facebook.ads.NativeAd: void unregisterView()>();

     label5:
        $r9 = <com.facebook.ads.NativeAd: java.util.WeakHashMap viewMapping>;

        $z0 = virtualinvoke $r9.<java.util.WeakHashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label6;

        $r7 = <com.facebook.ads.NativeAd: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, "View already registered with a NativeAd. Auto unregistering and proceeding.");

        $r9 = <com.facebook.ads.NativeAd: java.util.WeakHashMap viewMapping>;

        $r10 = virtualinvoke $r9.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r11 = (java.lang.ref.WeakReference) $r10;

        $r10 = virtualinvoke $r11.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r12 = (com.facebook.ads.NativeAd) $r10;

        virtualinvoke $r12.<com.facebook.ads.NativeAd: void unregisterView()>();

     label6:
        $r13 = new com.facebook.ads.NativeAd$EventHandler;

        specialinvoke $r13.<com.facebook.ads.NativeAd$EventHandler: void <init>(com.facebook.ads.NativeAd,com.facebook.ads.NativeAd$1)>(r0, null);

        r0.<com.facebook.ads.NativeAd: com.facebook.ads.NativeAd$EventHandler eventHandler> = $r13;

        r0.<com.facebook.ads.NativeAd: android.view.View adView> = $r1;

        $r14 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r10 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.view.View) $r10;

        specialinvoke r0.<com.facebook.ads.NativeAd: void addListener(android.view.View)>($r8);

        goto label7;

     label8:
        $r15 = new com.facebook.ads.internal.NativeAdHandler;

        $r16 = new com.facebook.ads.NativeAd$2;

        specialinvoke $r16.<com.facebook.ads.NativeAd$2: void <init>(com.facebook.ads.NativeAd)>(r0);

        $r3 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdDataModel adDataModel>;

        $r4 = r0.<com.facebook.ads.NativeAd: android.content.Context context>;

        specialinvoke $r15.<com.facebook.ads.internal.NativeAdHandler: void <init>(com.facebook.ads.internal.AdHandler$ImpressionHelper,long,com.facebook.ads.internal.NativeAdDataModel,android.content.Context)>($r16, 1000L, $r3, $r4);

        r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdHandler handler> = $r15;

        $r15 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdHandler handler>;

        virtualinvoke $r15.<com.facebook.ads.internal.NativeAdHandler: void trySendImpression()>();

        $r9 = <com.facebook.ads.NativeAd: java.util.WeakHashMap viewMapping>;

        $r11 = new java.lang.ref.WeakReference;

        specialinvoke $r11.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        virtualinvoke $r9.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r11);

        return;
    }

    public void setAdListener(com.facebook.ads.AdListener)
    {
        com.facebook.ads.AdListener $r1;
        com.facebook.ads.NativeAd r0;

        r0 := @this: com.facebook.ads.NativeAd;

        $r1 := @parameter0: com.facebook.ads.AdListener;

        r0.<com.facebook.ads.NativeAd: com.facebook.ads.AdListener adListener> = $r1;

        return;
    }

    public void setImpressionListener(com.facebook.ads.ImpressionListener)
    {
        com.facebook.ads.NativeAd r0;
        com.facebook.ads.ImpressionListener $r1;

        r0 := @this: com.facebook.ads.NativeAd;

        $r1 := @parameter0: com.facebook.ads.ImpressionListener;

        r0.<com.facebook.ads.NativeAd: com.facebook.ads.ImpressionListener impListener> = $r1;

        return;
    }

    public void unregisterView()
    {
        java.lang.IllegalStateException $r5;
        com.facebook.ads.internal.AdClientEvent $r6;
        com.facebook.ads.NativeAd r0;
        com.facebook.ads.internal.NativeAdHandler $r7;
        android.view.View $r1;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        java.util.WeakHashMap $r2;
        boolean $z0;

        r0 := @this: com.facebook.ads.NativeAd;

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = <com.facebook.ads.NativeAd: java.util.WeakHashMap viewMapping>;

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        $z0 = virtualinvoke $r2.<java.util.WeakHashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r2 = <com.facebook.ads.NativeAd: java.util.WeakHashMap viewMapping>;

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        $r3 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.ref.WeakReference) $r3;

        $r3 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 == r0 goto label3;

     label2:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("View not registered with this NativeAd");

        $r6 = staticinvoke <com.facebook.ads.internal.AdClientEvent: com.facebook.ads.internal.AdClientEvent newErrorEvent(java.lang.Exception)>($r5);

        staticinvoke <com.facebook.ads.internal.AdClientEventManager: void addClientEvent(com.facebook.ads.internal.AdClientEvent)>($r6);

        throw $r5;

     label3:
        $r2 = <com.facebook.ads.NativeAd: java.util.WeakHashMap viewMapping>;

        $r1 = r0.<com.facebook.ads.NativeAd: android.view.View adView>;

        virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        specialinvoke r0.<com.facebook.ads.NativeAd: void detachListeners()>();

        $r7 = r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdHandler handler>;

        virtualinvoke $r7.<com.facebook.ads.internal.NativeAdHandler: void cancelImpressionRetry()>();

        r0.<com.facebook.ads.NativeAd: com.facebook.ads.internal.NativeAdHandler handler> = null;

        r0.<com.facebook.ads.NativeAd: android.view.View adView> = null;

        return;
    }
}
