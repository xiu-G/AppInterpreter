public class com.pontiflex.mobile.webview.utilities.DeviceHelper extends java.lang.Object
{

    public void <init>()
    {
        com.pontiflex.mobile.webview.utilities.DeviceHelper r0;

        r0 := @this: com.pontiflex.mobile.webview.utilities.DeviceHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getDeviceCountry(android.content.Context)
    {
        android.content.Context $r0;
        java.util.Locale $r3;
        android.content.res.Configuration $r2;
        java.lang.String $r4;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r3 = $r2.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = virtualinvoke $r3.<java.util.Locale: java.lang.String getCountry()>();

        return $r4;
    }

    public static java.lang.String getDeviceData(android.content.Context, java.lang.String)
    {
        android.content.Context $r0, $r4;
        java.lang.IllegalArgumentException $r2;
        android.app.Application $r5;
        com.pontiflex.mobile.webview.utilities.AppInfo $r7;
        java.lang.String $r1, $r3;
        boolean $z0;
        com.pontiflex.mobile.webview.sdk.AdManager $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context is null");

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("field is null");

        throw $r2;

     label2:
        $r3 = "email";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

        $r1 = staticinvoke <com.pontiflex.mobile.webview.utilities.DeviceHelper: java.lang.String getDeviceSetupEmail(android.content.Context)>($r0);

        return $r1;

     label3:
        $r4 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r5 = (android.app.Application) $r4;

        $r6 = staticinvoke <com.pontiflex.mobile.webview.sdk.AdManager: com.pontiflex.mobile.webview.sdk.AdManager getAdManagerInstance(android.app.Application)>($r5);

        $r7 = virtualinvoke $r6.<com.pontiflex.mobile.webview.sdk.AdManager: com.pontiflex.mobile.webview.utilities.AppInfo getAppInfo()>();

        $r3 = virtualinvoke $r7.<com.pontiflex.mobile.webview.utilities.AppInfo: java.lang.String getCountryFieldName()>();

        if $r3 == null goto label4;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

        $r1 = staticinvoke <com.pontiflex.mobile.webview.utilities.DeviceHelper: java.lang.String getDeviceCountry(android.content.Context)>($r0);

        return $r1;

     label4:
        return "";
    }

    public static java.lang.String getDeviceSetupEmail(android.content.Context)
    {
        java.lang.Throwable $r20, $r21, $r22, $r23;
        android.content.Context $r0, $r3;
        java.lang.Object[] $r11;
        android.content.pm.PackageManager $r6;
        java.lang.String[] $r17;
        com.pontiflex.mobile.webview.utilities.AppInfo $r16;
        int $i0, $i1;
        java.lang.String $r7;
        java.lang.reflect.Method $r10;
        com.pontiflex.mobile.webview.sdk.AdManager $r5;
        boolean $z0;
        java.lang.LinkageError $r19;
        java.lang.Class[] $r9;
        java.lang.IllegalArgumentException $r2;
        java.lang.reflect.Field $r13;
        android.app.Application $r4;
        java.lang.StringBuilder $r1, $r14;
        java.lang.Class $r8;
        java.lang.Object $r12, $r15;
        java.lang.ClassNotFoundException $r18;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label01;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label01:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = (android.app.Application) $r3;

        $r5 = staticinvoke <com.pontiflex.mobile.webview.sdk.AdManager: com.pontiflex.mobile.webview.sdk.AdManager getAdManagerInstance(android.app.Application)>($r4);

        $z0 = virtualinvoke $r5.<com.pontiflex.mobile.webview.sdk.AdManager: boolean isAllowReadDeviceData()>();

        if $z0 != 0 goto label02;

        return "";

     label02:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r6.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.GET_ACCOUNTS", $r7);

        if $i0 != 0 goto label39;

     label03:
        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.accounts.AccountManager");

     label04:
        if $r8 != null goto label07;

     label05:
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        return $r7;

     label07:
        $r9 = newarray (java.lang.Class)[1];

     label08:
        $r9[0] = class "Landroid/content/Context;";

     label09:
        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("get", $r9);

     label10:
        $r11 = newarray (java.lang.Object)[1];

     label11:
        $r11[0] = $r0;

     label12:
        $r12 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r8, $r11);

     label13:
        if $r12 != null goto label16;

     label14:
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        return $r7;

     label16:
        $r8 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

     label17:
        $r9 = newarray (java.lang.Class)[0];

     label18:
        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getAccounts", $r9);

     label19:
        $r11 = newarray (java.lang.Object)[0];

     label20:
        $r12 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r11);

     label21:
        if $r12 != null goto label24;

     label22:
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label23:
        return $r7;

     label24:
        $r8 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isArray()>();

     label25:
        if $z0 == 0 goto label39;

     label26:
        $r11 = (java.lang.Object[]) $r12;

     label27:
        $i0 = lengthof $r11;

        $i1 = 0;

     label28:
        if $i1 >= $i0 goto label39;

        $r12 = $r11[$i1];

     label29:
        $r8 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("type");

     label30:
        $r14 = new java.lang.StringBuilder;

     label31:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r15 = virtualinvoke $r13.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("MOTHER_USER_CREDS_TYPE");

     label32:
        if $z0 == 0 goto label34;

     label33:
        $i1 = $i1 + 1;

        goto label28;

     label34:
        $r8 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("name");

     label35:
        $r14 = new java.lang.StringBuilder;

     label36:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r12 = virtualinvoke $r13.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke $r5.<com.pontiflex.mobile.webview.sdk.AdManager: com.pontiflex.mobile.webview.utilities.AppInfo getAppInfo()>();

        $r17 = virtualinvoke $r16.<com.pontiflex.mobile.webview.utilities.AppInfo: java.lang.String[] getValidationsForFieldNamed(java.lang.String)>("email");

        $z0 = staticinvoke <com.pontiflex.mobile.webview.utilities.FieldValidator: boolean validate(java.lang.String,java.lang.String,java.lang.String[],java.util.Map,android.content.Context)>("email", $r7, $r17, null, $r0);

     label37:
        if $z0 == 0 goto label33;

     label38:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label39:
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label40:
        $r18 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Current version of android doesn\'t support Accounts apis ", $r18);

        goto label39;

     label41:
        $r19 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Current version of android doesn\'t support Accounts apis ", $r19);

        goto label39;

     label42:
        $r20 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Current version of android doesn\'t support Accounts apis ", $r20);

        goto label39;

     label43:
        $r21 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Current version of android doesn\'t support Accounts apis ", $r21);

        goto label39;

     label44:
        $r22 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Current version of android doesn\'t support Accounts apis ", $r22);

        goto label39;

     label45:
        $r23 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Current version of android doesn\'t support Accounts apis ", $r23);

        goto label39;

        catch java.lang.ClassNotFoundException from label03 to label04 with label40;
        catch java.lang.ClassNotFoundException from label05 to label06 with label40;
        catch java.lang.ClassNotFoundException from label09 to label10 with label40;
        catch java.lang.ClassNotFoundException from label12 to label13 with label40;
        catch java.lang.ClassNotFoundException from label14 to label15 with label40;
        catch java.lang.ClassNotFoundException from label16 to label17 with label40;
        catch java.lang.ClassNotFoundException from label18 to label19 with label40;
        catch java.lang.ClassNotFoundException from label20 to label21 with label40;
        catch java.lang.ClassNotFoundException from label22 to label23 with label40;
        catch java.lang.ClassNotFoundException from label24 to label25 with label40;
        catch java.lang.ClassNotFoundException from label29 to label30 with label40;
        catch java.lang.ClassNotFoundException from label31 to label32 with label40;
        catch java.lang.ClassNotFoundException from label34 to label35 with label40;
        catch java.lang.ClassNotFoundException from label36 to label37 with label40;
        catch java.lang.ClassNotFoundException from label38 to label39 with label40;
        catch java.lang.LinkageError from label03 to label04 with label41;
        catch java.lang.LinkageError from label05 to label06 with label41;
        catch java.lang.LinkageError from label07 to label08 with label41;
        catch java.lang.LinkageError from label09 to label11 with label41;
        catch java.lang.LinkageError from label12 to label13 with label41;
        catch java.lang.LinkageError from label14 to label15 with label41;
        catch java.lang.LinkageError from label16 to label21 with label41;
        catch java.lang.LinkageError from label22 to label23 with label41;
        catch java.lang.LinkageError from label24 to label25 with label41;
        catch java.lang.LinkageError from label26 to label27 with label41;
        catch java.lang.LinkageError from label29 to label32 with label41;
        catch java.lang.LinkageError from label34 to label37 with label41;
        catch java.lang.LinkageError from label38 to label39 with label41;
        catch java.lang.NoSuchMethodException from label03 to label04 with label42;
        catch java.lang.NoSuchMethodException from label05 to label06 with label42;
        catch java.lang.NoSuchMethodException from label09 to label10 with label42;
        catch java.lang.NoSuchMethodException from label12 to label13 with label42;
        catch java.lang.NoSuchMethodException from label14 to label15 with label42;
        catch java.lang.NoSuchMethodException from label16 to label17 with label42;
        catch java.lang.NoSuchMethodException from label18 to label19 with label42;
        catch java.lang.NoSuchMethodException from label20 to label21 with label42;
        catch java.lang.NoSuchMethodException from label22 to label23 with label42;
        catch java.lang.NoSuchMethodException from label24 to label25 with label42;
        catch java.lang.NoSuchMethodException from label29 to label30 with label42;
        catch java.lang.NoSuchMethodException from label31 to label32 with label42;
        catch java.lang.NoSuchMethodException from label34 to label35 with label42;
        catch java.lang.NoSuchMethodException from label36 to label37 with label42;
        catch java.lang.NoSuchMethodException from label38 to label39 with label42;
        catch java.lang.NoSuchFieldException from label03 to label04 with label43;
        catch java.lang.NoSuchFieldException from label05 to label06 with label43;
        catch java.lang.NoSuchFieldException from label09 to label10 with label43;
        catch java.lang.NoSuchFieldException from label12 to label13 with label43;
        catch java.lang.NoSuchFieldException from label14 to label15 with label43;
        catch java.lang.NoSuchFieldException from label16 to label17 with label43;
        catch java.lang.NoSuchFieldException from label18 to label19 with label43;
        catch java.lang.NoSuchFieldException from label20 to label21 with label43;
        catch java.lang.NoSuchFieldException from label22 to label23 with label43;
        catch java.lang.NoSuchFieldException from label24 to label25 with label43;
        catch java.lang.NoSuchFieldException from label29 to label30 with label43;
        catch java.lang.NoSuchFieldException from label31 to label32 with label43;
        catch java.lang.NoSuchFieldException from label34 to label35 with label43;
        catch java.lang.NoSuchFieldException from label36 to label37 with label43;
        catch java.lang.NoSuchFieldException from label38 to label39 with label43;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label44;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label44;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label44;
        catch java.lang.reflect.InvocationTargetException from label12 to label13 with label44;
        catch java.lang.reflect.InvocationTargetException from label14 to label15 with label44;
        catch java.lang.reflect.InvocationTargetException from label16 to label17 with label44;
        catch java.lang.reflect.InvocationTargetException from label18 to label19 with label44;
        catch java.lang.reflect.InvocationTargetException from label20 to label21 with label44;
        catch java.lang.reflect.InvocationTargetException from label22 to label23 with label44;
        catch java.lang.reflect.InvocationTargetException from label24 to label25 with label44;
        catch java.lang.reflect.InvocationTargetException from label29 to label30 with label44;
        catch java.lang.reflect.InvocationTargetException from label31 to label32 with label44;
        catch java.lang.reflect.InvocationTargetException from label34 to label35 with label44;
        catch java.lang.reflect.InvocationTargetException from label36 to label37 with label44;
        catch java.lang.reflect.InvocationTargetException from label38 to label39 with label44;
        catch java.lang.IllegalAccessException from label03 to label04 with label45;
        catch java.lang.IllegalAccessException from label05 to label06 with label45;
        catch java.lang.IllegalAccessException from label09 to label10 with label45;
        catch java.lang.IllegalAccessException from label12 to label13 with label45;
        catch java.lang.IllegalAccessException from label14 to label15 with label45;
        catch java.lang.IllegalAccessException from label16 to label17 with label45;
        catch java.lang.IllegalAccessException from label18 to label19 with label45;
        catch java.lang.IllegalAccessException from label20 to label21 with label45;
        catch java.lang.IllegalAccessException from label22 to label23 with label45;
        catch java.lang.IllegalAccessException from label24 to label25 with label45;
        catch java.lang.IllegalAccessException from label29 to label30 with label45;
        catch java.lang.IllegalAccessException from label31 to label32 with label45;
        catch java.lang.IllegalAccessException from label34 to label35 with label45;
        catch java.lang.IllegalAccessException from label36 to label37 with label45;
        catch java.lang.IllegalAccessException from label38 to label39 with label45;
    }

    public static int getScreenDensity(android.app.Activity)
    {
        java.lang.Throwable $r6, $r7;
        android.content.Context $r1;
        java.lang.reflect.Field $r5;
        android.util.DisplayMetrics $r3;
        java.lang.Exception $r8;
        int $i0;
        java.lang.Class $r4;
        android.app.Activity $r0;
        android.content.res.Resources $r2;

        $r0 := @parameter0: android.app.Activity;

     label1:
        $r1 = virtualinvoke $r0.<android.app.Activity: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("densityDpi");

        $i0 = virtualinvoke $r5.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r3);

     label2:
        return $i0;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Pontiflex SDK", "Screen density not available.");

        return 0;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Not able to to get Screen density", $r7);

        return 0;

     label5:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Not able to to get Screen density", $r8);

        return 0;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public static int getScreenHeight(android.app.Activity)
    {
        android.view.WindowManager $r1;
        int $i0;
        android.view.Display $r2;
        android.app.Activity $r0;
        java.lang.Exception $r3;

        $r0 := @parameter0: android.app.Activity;

     label1:
        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r2 = interfaceinvoke $r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r2.<android.view.Display: int getHeight()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Error in detrmining screen height", $r3);

        $i0 = -1;

        return $i0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static int getScreenOrientation(android.app.Activity)
    {
        android.content.Context $r3;
        android.view.WindowManager $r1;
        java.lang.Exception $r6;
        android.content.res.Configuration $r5;
        int $i0, $i1, $i2;
        android.view.Display $r2;
        android.app.Activity $r0;
        android.content.res.Resources $r4;

        $r0 := @parameter0: android.app.Activity;

        $i0 = 0;

     label01:
        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r2 = interfaceinvoke $r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

     label02:
        $r3 = virtualinvoke $r0.<android.app.Activity: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r5.<android.content.res.Configuration: int orientation>;

     label03:
        if $i0 != 0 goto label10;

     label04:
        $i1 = virtualinvoke $r2.<android.view.Display: int getWidth()>();

        $i2 = virtualinvoke $r2.<android.view.Display: int getHeight()>();

     label05:
        if $i1 != $i2 goto label06;

        return 3;

     label06:
        $i1 = virtualinvoke $r2.<android.view.Display: int getWidth()>();

        $i2 = virtualinvoke $r2.<android.view.Display: int getHeight()>();

     label07:
        if $i1 >= $i2 goto label08;

        return 1;

     label08:
        return 2;

     label09:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Error in detrmining screen orientation", $r6);

     label10:
        return $i0;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Exception from label06 to label07 with label09;
    }

    public static int getScreenSize(android.app.Activity)
    {
        java.lang.Throwable $r6, $r7;
        android.content.Context $r1;
        java.lang.reflect.Field $r5;
        java.lang.Exception $r8;
        android.content.res.Configuration $r3;
        int $i0;
        java.lang.Class $r4;
        android.app.Activity $r0;
        android.content.res.Resources $r2;

        $r0 := @parameter0: android.app.Activity;

     label1:
        $r1 = virtualinvoke $r0.<android.app.Activity: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("screenLayout");

        $i0 = virtualinvoke $r5.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r3);

     label2:
        $i0 = $i0 & 15;

        return $i0;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Pontiflex SDK", "Screen size not available.");

        $i0 = -1;

        return $i0;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Not able to to get Screen size", $r7);

        $i0 = -1;

        return $i0;

     label5:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Not able to to get Screen size", $r8);

        $i0 = -1;

        return $i0;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public static int getScreenWidth(android.app.Activity)
    {
        android.view.WindowManager $r1;
        int $i0;
        android.view.Display $r2;
        android.app.Activity $r0;
        java.lang.Exception $r3;

        $r0 := @parameter0: android.app.Activity;

     label1:
        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r2 = interfaceinvoke $r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r2.<android.view.Display: int getWidth()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pontiflex SDK", "Error in detrmining screen width", $r3);

        $i0 = -1;

        return $i0;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
