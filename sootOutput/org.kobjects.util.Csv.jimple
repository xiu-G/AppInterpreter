public class org.kobjects.util.Csv extends java.lang.Object
{

    public void <init>()
    {
        org.kobjects.util.Csv r0;

        r0 := @this: org.kobjects.util.Csv;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String[] decode(java.lang.String)
    {
        java.lang.String[] r2;
        java.util.Vector r3, $r7;
        java.lang.StringBuffer r1, $r8;
        int i0, i1, $i2, $i5;
        java.lang.String $r0, $r5;
        char $c3, c4;
        java.lang.RuntimeException $r10;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r9;

        $r0 := @parameter0: java.lang.String;

        $r7 = new java.util.Vector;

        r3 = $r7;

        specialinvoke $r7.<java.util.Vector: void <init>()>();

        i1 = 0;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

     label01:
        if i1 >= $i2 goto label02;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        i0 = (int) $c3;

        if i0 > 32 goto label02;

        i1 = i1 + 1;

        goto label01;

     label02:
        if i1 < $i2 goto label05;

     label03:
        $i2 = virtualinvoke r3.<java.util.Vector: int size()>();

        r2 = newarray (java.lang.String)[$i2];

        $i2 = 0;

     label04:
        i1 = lengthof r2;

        if $i2 >= i1 goto label18;

        $r4 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>($i2);

        $r0 = (java.lang.String) $r4;

        r2[$i2] = $r0;

        $i2 = $i2 + 1;

        goto label04;

     label05:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        i0 = (int) $c3;

        if i0 != 34 goto label16;

        i1 = i1 + 1;

        $r8 = new java.lang.StringBuffer;

        r1 = $r8;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

     label06:
        i0 = i1 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        i1 = (int) $c3;

        if i1 != 94 goto label09;

        if i0 >= $i2 goto label09;

        i1 = i0 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        c4 = $c3;

        i0 = (int) $c3;

        if i0 != 94 goto label08;

     label07:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c4);

        goto label06;

     label08:
        i0 = (int) $c3;

        $i5 = -64;

        i0 = i0 + $i5;

        c4 = (char) i0;

        goto label07;

     label09:
        i1 = (int) $c3;

        if i1 != 34 goto label19;

        if i0 == $i2 goto label10;

        c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        i1 = (int) c4;

        if i1 == 34 goto label12;

     label10:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        i1 = i0;

     label11:
        if i1 >= $i2 goto label14;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        i0 = (int) $c3;

        if i0 > 32 goto label14;

        i1 = i1 + 1;

        goto label11;

     label12:
        i1 = i0 + 1;

     label13:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label06;

     label14:
        if i1 >= $i2 goto label03;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        i0 = (int) $c3;

        if i0 == 44 goto label15;

        $r10 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Comma expected at ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" line: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r0);

        throw $r10;

     label15:
        i1 = i1 + 1;

        goto label01;

     label16:
        i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(44, i1);

        $i5 = -1;

        if i0 != $i5 goto label17;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(i1);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>($r0);

        goto label03;

     label17:
        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i0);

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        i1 = i0 + 1;

        goto label01;

     label18:
        return r2;

     label19:
        i1 = i0;

        goto label13;
    }

    public static java.lang.String encode(java.lang.String, char)
    {
        char $c0, $c3;
        java.lang.StringBuffer r1, $r2;
        int i1, $i2, $i4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $r2 = new java.lang.StringBuffer;

        r1 = $r2;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i1 >= $i2 goto label6;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        $i2 = (int) $c3;

        $i4 = (int) $c0;

        if $i2 == $i4 goto label2;

        $i2 = (int) $c3;

        if $i2 != 94 goto label4;

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $i2 = (int) $c3;

        if $i2 >= 32 goto label5;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(94);

        $i2 = (int) $c3;

        $i2 = $i2 + 64;

        $c3 = (char) $i2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label3;

     label5:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label3;

     label6:
        $r0 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String encode(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.StringBuffer r1;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label6;

        if i0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label2:
        r2 = $r0[i0];

        $z0 = r2 instanceof java.lang.Number;

        if $z0 != 0 goto label3;

        $z0 = r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label5;

     label3:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        $r3 = staticinvoke <org.kobjects.util.Csv: java.lang.String encode(java.lang.String,char)>($r3, 34);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        goto label4;

     label6:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }
}
