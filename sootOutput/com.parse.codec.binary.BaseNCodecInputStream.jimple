public class com.parse.codec.binary.BaseNCodecInputStream extends java.io.FilterInputStream
{
    private final com.parse.codec.binary.BaseNCodec baseNCodec;
    private final boolean doEncode;
    private final byte[] singleByte;

    protected void <init>(java.io.InputStream, com.parse.codec.binary.BaseNCodec, boolean)
    {
        com.parse.codec.binary.BaseNCodecInputStream r0;
        byte[] $r3;
        com.parse.codec.binary.BaseNCodec $r2;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: com.parse.codec.binary.BaseNCodecInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: com.parse.codec.binary.BaseNCodec;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        $r3 = newarray (byte)[1];

        r0.<com.parse.codec.binary.BaseNCodecInputStream: byte[] singleByte> = $r3;

        r0.<com.parse.codec.binary.BaseNCodecInputStream: boolean doEncode> = $z0;

        r0.<com.parse.codec.binary.BaseNCodecInputStream: com.parse.codec.binary.BaseNCodec baseNCodec> = $r2;

        return;
    }

    public boolean markSupported()
    {
        com.parse.codec.binary.BaseNCodecInputStream r0;

        r0 := @this: com.parse.codec.binary.BaseNCodecInputStream;

        return 0;
    }

    public int read()
    {
        com.parse.codec.binary.BaseNCodecInputStream r0;
        byte[] $r1;
        byte $b1;
        int $i0;

        r0 := @this: com.parse.codec.binary.BaseNCodecInputStream;

        $r1 = r0.<com.parse.codec.binary.BaseNCodecInputStream: byte[] singleByte>;

        $i0 = virtualinvoke r0.<com.parse.codec.binary.BaseNCodecInputStream: int read(byte[],int,int)>($r1, 0, 1);

     label1:
        if $i0 != 0 goto label2;

        $r1 = r0.<com.parse.codec.binary.BaseNCodecInputStream: byte[] singleByte>;

        $i0 = virtualinvoke r0.<com.parse.codec.binary.BaseNCodecInputStream: int read(byte[],int,int)>($r1, 0, 1);

        goto label1;

     label2:
        if $i0 <= 0 goto label4;

        $r1 = r0.<com.parse.codec.binary.BaseNCodecInputStream: byte[] singleByte>;

        $b1 = $r1[0];

        $i0 = (int) $b1;

        if $i0 >= 0 goto label3;

        $r1 = r0.<com.parse.codec.binary.BaseNCodecInputStream: byte[] singleByte>;

        $b1 = $r1[0];

        $i0 = (int) $b1;

        $i0 = $i0 + 256;

        return $i0;

     label3:
        $r1 = r0.<com.parse.codec.binary.BaseNCodecInputStream: byte[] singleByte>;

        $b1 = $r1[0];

        $i0 = (int) $b1;

        return $i0;

     label4:
        return -1;
    }

    public int read(byte[], int, int)
    {
        byte[] $r1, $r5;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.NullPointerException $r2;
        com.parse.codec.binary.BaseNCodecInputStream r0;
        short $s4;
        int $i0, $i1, $i2, $i3;
        com.parse.codec.binary.BaseNCodec $r4;
        boolean $z0;
        java.io.InputStream $r6;

        r0 := @this: com.parse.codec.binary.BaseNCodecInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label01;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label01:
        if $i0 < 0 goto label02;

        if $i1 >= 0 goto label03;

     label02:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label03:
        $i2 = lengthof $r1;

        if $i0 > $i2 goto label04;

        $i2 = $i0 + $i1;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label05;

     label04:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label05:
        if $i1 != 0 goto label06;

        return 0;

     label06:
        $i2 = 0;

     label07:
        if $i2 != 0 goto label12;

        $r4 = r0.<com.parse.codec.binary.BaseNCodecInputStream: com.parse.codec.binary.BaseNCodec baseNCodec>;

        $z0 = virtualinvoke $r4.<com.parse.codec.binary.BaseNCodec: boolean hasData()>();

        if $z0 != 0 goto label09;

        $z0 = r0.<com.parse.codec.binary.BaseNCodecInputStream: boolean doEncode>;

        if $z0 == 0 goto label10;

        $s4 = 4096;

     label08:
        $r5 = newarray (byte)[$s4];

        $r6 = r0.<com.parse.codec.binary.BaseNCodecInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>($r5);

        $z0 = r0.<com.parse.codec.binary.BaseNCodecInputStream: boolean doEncode>;

        if $z0 == 0 goto label11;

        $r4 = r0.<com.parse.codec.binary.BaseNCodecInputStream: com.parse.codec.binary.BaseNCodec baseNCodec>;

        virtualinvoke $r4.<com.parse.codec.binary.BaseNCodec: void encode(byte[],int,int)>($r5, 0, $i2);

     label09:
        $r4 = r0.<com.parse.codec.binary.BaseNCodecInputStream: com.parse.codec.binary.BaseNCodec baseNCodec>;

        $i2 = virtualinvoke $r4.<com.parse.codec.binary.BaseNCodec: int readResults(byte[],int,int)>($r1, $i0, $i1);

        goto label07;

     label10:
        $s4 = 8192;

        goto label08;

     label11:
        $r4 = r0.<com.parse.codec.binary.BaseNCodecInputStream: com.parse.codec.binary.BaseNCodec baseNCodec>;

        virtualinvoke $r4.<com.parse.codec.binary.BaseNCodec: void decode(byte[],int,int)>($r5, 0, $i2);

        goto label09;

     label12:
        return $i2;
    }
}
