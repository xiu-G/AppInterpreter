final class com.parse.ak extends com.parse.a
{
    final com.parse.ParseObject a;

    void <init>(com.parse.ParseObject)
    {
        com.parse.ak r0;
        com.parse.ParseObject $r1;

        r0 := @this: com.parse.ak;

        $r1 := @parameter0: com.parse.ParseObject;

        r0.<com.parse.ak: com.parse.ParseObject a> = $r1;

        specialinvoke r0.<com.parse.a: void <init>(com.parse.k)>(null);

        return;
    }

    public final java.lang.Object a()
    {
        com.parse.ParseCommandCache $r2;
        com.parse.l $r4;
        com.parse.ak r0;
        java.lang.String $r3;
        com.parse.ParseObject $r1;
        com.parse.ParseCommandCache$TestHelper $r5;

        r0 := @this: com.parse.ak;

        $r2 = staticinvoke <com.parse.Parse: com.parse.ParseCommandCache getCommandCache()>();

        $r1 = r0.<com.parse.ak: com.parse.ParseObject a>;

        $r3 = virtualinvoke $r1.<com.parse.ParseObject: java.lang.String getObjectId()>();

        if $r3 != null goto label1;

        $r1 = r0.<com.parse.ak: com.parse.ParseObject a>;

        virtualinvoke $r2.<com.parse.ParseCommandCache: void a(com.parse.ParseObject)>($r1);

     label1:
        $r1 = r0.<com.parse.ak: com.parse.ParseObject a>;

        $r3 = virtualinvoke $r1.<com.parse.ParseObject: java.lang.String getObjectId()>();

        if $r3 == null goto label3;

        $r1 = r0.<com.parse.ak: com.parse.ParseObject a>;

        $r4 = virtualinvoke $r1.<com.parse.ParseObject: com.parse.l constructDeleteCommand()>();

        $r1 = r0.<com.parse.ak: com.parse.ParseObject a>;

        virtualinvoke $r2.<com.parse.ParseCommandCache: void a(com.parse.l,com.parse.ParseObject)>($r4, $r1);

     label2:
        return null;

     label3:
        $r5 = virtualinvoke $r2.<com.parse.ParseCommandCache: com.parse.ParseCommandCache$TestHelper b()>();

        virtualinvoke $r5.<com.parse.ParseCommandCache$TestHelper: void notify(int)>(3);

        goto label2;
    }
}
