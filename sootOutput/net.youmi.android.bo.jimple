class net.youmi.android.bo extends java.lang.Object
{
    static final int[] a;

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[4];

        $r0[0] = 255;

        $r0[1] = 65280;

        $r0[2] = 16711680;

        $r0[3] = -16777216;

        <net.youmi.android.bo: int[] a> = $r0;

        return;
    }

    static final int a(byte, int, int)
    {
        byte $b2;
        int $i0, $i1, $i3;

        $b2 := @parameter0: byte;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i3 = $i0 + $i1;

        if $i3 <= 8 goto label1;

        $i0 = (int) $b2;

        return $i0;

     label1:
        $i0 = 8 - $i0;

        $i0 = $i0 - $i1;

        $i3 = (int) $b2;

        $i0 = $i3 << $i0;

        $i0 = $i0 & 255;

        $i1 = 8 - $i1;

        $i0 = $i0 >>> $i1;

        return $i0;
    }

    static final int a(byte[], int, int)
    {
        byte[] $r0;
        byte $b6;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = 0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i2 < $i1 goto label2;

        return $i4;

     label2:
        $i5 = $i0 + $i2;

        $b6 = $r0[$i5];

        $i5 = (int) $b6;

        $i5 = $i5 << $i3;

        $r1 = <net.youmi.android.bo: int[] a>;

        $i7 = $r1[$i2];

        $i5 = $i5 & $i7;

        $i4 = $i4 | $i5;

        $i3 = $i3 + 8;

        $i2 = $i2 + 1;

        goto label1;
    }

    static final void a(int, int, java.io.ByteArrayOutputStream)
    {
        byte[] $r1;
        java.io.ByteArrayOutputStream $r0;
        byte $b3;
        int $i0, $i1, $i2;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.io.ByteArrayOutputStream;

        $r1 = newarray (byte)[$i0];

        $i0 = $i0 + -1;

     label1:
        if $i0 >= 0 goto label2;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r1);

        return;

     label2:
        $i2 = $i1 & 255;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $i1 = $i1 >>> 8;

        $i0 = $i0 + -1;

        goto label1;
    }

    static final void a(long, int, java.io.ByteArrayOutputStream)
    {
        byte[] $r1;
        java.io.ByteArrayOutputStream $r0;
        byte $b4;
        int $i0, $i3;
        long $l1, $l2;

        $l1 := @parameter0: long;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.io.ByteArrayOutputStream;

        $r1 = newarray (byte)[4];

        $i0 = 3;

     label1:
        if $i0 >= 0 goto label2;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r1);

        return;

     label2:
        $l2 = 255L & $l1;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        $r1[$i0] = $b4;

        $l1 = $l1 >>> 8;

        $i0 = $i0 + -1;

        goto label1;
    }

    static final void a(java.lang.String, java.io.ByteArrayOutputStream)
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream $r1;
        int $i0;
        java.lang.String $r0;
        java.lang.Exception $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.ByteArrayOutputStream;

        if $r0 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(32);

     label2:
        if $i0 <= -1 goto label4;

     label3:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

     label4:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(38);

     label5:
        if $i0 <= -1 goto label7;

     label6:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(38, 95);

     label7:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[])>($r2);

     label8:
        return;

     label9:
        $r3 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label4 to label5 with label9;
        catch java.lang.Exception from label6 to label7 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }
}
