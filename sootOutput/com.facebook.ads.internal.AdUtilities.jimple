public class com.facebook.ads.internal.AdUtilities extends java.lang.Object
{
    private static final java.lang.String ADVERTISING_ID_COLUMN_NAME;
    private static final java.lang.String ATTRIBUTION_ID_COLUMN_NAME;
    private static final android.net.Uri ATTRIBUTION_ID_CONTENT_URI;
    private static final java.lang.String LIMIT_TRACKING_COLUMN_NAME;

    static void <clinit>()
    {
        android.net.Uri $r0;

        <com.facebook.ads.internal.AdUtilities: java.lang.String LIMIT_TRACKING_COLUMN_NAME> = "limit_tracking";

        <com.facebook.ads.internal.AdUtilities: java.lang.String ATTRIBUTION_ID_COLUMN_NAME> = "aid";

        <com.facebook.ads.internal.AdUtilities: java.lang.String ADVERTISING_ID_COLUMN_NAME> = "androidid";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.facebook.katana.provider.AttributionIdProvider");

        <com.facebook.ads.internal.AdUtilities: android.net.Uri ATTRIBUTION_ID_CONTENT_URI> = $r0;

        return;
    }

    public void <init>()
    {
        com.facebook.ads.internal.AdUtilities r0;

        r0 := @this: com.facebook.ads.internal.AdUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void closeQuietly(java.io.Closeable)
    {
        java.lang.Throwable $r1;
        java.io.Closeable $r0;

        $r0 := @parameter0: java.io.Closeable;

        if $r0 != null goto label1;

        return;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void displayDebugMessage(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.facebook.ads.AdSettings: boolean isTestMode(android.content.Context)>($r0);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Impression logged");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (displayed for test ads only)");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return;
    }

    public static com.facebook.ads.internal.AdUtilities$Fb4aData getFb4aData(android.content.ContentResolver)
    {
        java.lang.Throwable $r11;
        android.net.Uri $r2;
        java.lang.String[] $r1;
        java.lang.Exception $r10, $r12;
        android.content.ContentResolver $r0;
        int $i0;
        java.lang.Boolean $r9;
        java.lang.String $r6, $r7, $r8;
        com.facebook.ads.internal.AdUtilities$Fb4aData $r5;
        android.database.Cursor $r3, $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

     label01:
        $r1 = newarray (java.lang.String)[3];

     label02:
        $r1[0] = "aid";

        $r1[1] = "androidid";

        $r1[2] = "limit_tracking";

     label03:
        $r2 = <com.facebook.ads.internal.AdUtilities: android.net.Uri ATTRIBUTION_ID_CONTENT_URI>;

     label04:
        $r3 = virtualinvoke $r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, $r1, null, null, null);

     label05:
        $r4 = $r3;

        if $r3 == null goto label08;

     label06:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

     label07:
        if $z0 != 0 goto label11;

     label08:
        $r5 = new com.facebook.ads.internal.AdUtilities$Fb4aData;

     label09:
        specialinvoke $r5.<com.facebook.ads.internal.AdUtilities$Fb4aData: void <init>(java.lang.String,java.lang.String,boolean)>(null, null, 0);

     label10:
        if $r3 == null goto label23;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return $r5;

     label11:
        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("aid");

        $r6 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("androidid");

        $r7 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("limit_tracking");

        $r8 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r8);

     label12:
        $r5 = new com.facebook.ads.internal.AdUtilities$Fb4aData;

     label13:
        $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        specialinvoke $r5.<com.facebook.ads.internal.AdUtilities$Fb4aData: void <init>(java.lang.String,java.lang.String,boolean)>($r6, $r7, $z0);

     label14:
        if $r3 == null goto label23;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return $r5;

     label15:
        $r10 := @caughtexception;

        $r4 = null;

     label16:
        $r5 = new com.facebook.ads.internal.AdUtilities$Fb4aData;

        specialinvoke $r5.<com.facebook.ads.internal.AdUtilities$Fb4aData: void <init>(java.lang.String,java.lang.String,boolean)>(null, null, 0);

     label17:
        if $r4 == null goto label23;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $r5;

     label18:
        $r11 := @caughtexception;

        $r4 = null;

     label19:
        if $r4 == null goto label20;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label20:
        throw $r11;

     label21:
        $r11 := @caughtexception;

        goto label19;

     label22:
        $r12 := @caughtexception;

        goto label16;

     label23:
        return $r5;

        catch java.lang.Exception from label02 to label03 with label15;
        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label05 with label18;
        catch java.lang.Exception from label06 to label07 with label22;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label08 to label10 with label21;
        catch java.lang.Exception from label11 to label12 with label22;
        catch java.lang.Exception from label13 to label14 with label22;
        catch java.lang.Throwable from label11 to label14 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
    }

    public static transient java.lang.reflect.Method getMethod(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        java.lang.Throwable $r4;
        java.lang.Class[] $r2;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.reflect.Method $r3;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class[];

     label1:
        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r1, $r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public static transient java.lang.reflect.Method getMethod(java.lang.String, java.lang.String, java.lang.Class[])
    {
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        java.lang.ClassNotFoundException $r5;
        java.lang.String $r0, $r1;
        java.lang.reflect.Method $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class[];

     label1:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

        $r4 = staticinvoke <com.facebook.ads.internal.AdUtilities: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r3, $r1, $r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.Object getStringPropertyAsJSON(org.json.JSONObject, java.lang.String)
    {
        org.json.JSONTokener $r4;
        java.lang.IllegalArgumentException $r6;
        org.json.JSONObject $r0;
        java.lang.Object $r2, $r3;
        java.lang.String $r1, $r5;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object opt(java.lang.String)>("error");

        $r3 = $r2;

        if $r2 == null goto label1;

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r4 = new org.json.JSONTokener;

        $r5 = (java.lang.String) $r2;

        specialinvoke $r4.<org.json.JSONTokener: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r4.<org.json.JSONTokener: java.lang.Object nextValue()>();

     label1:
        if $r3 == null goto label2;

        $z0 = $r3 instanceof org.json.JSONObject;

        if $z0 != 0 goto label2;

        $z0 = $r3 instanceof org.json.JSONArray;

        if $z0 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("error");

        throw $r6;

     label2:
        return $r3;
    }

    public static transient java.lang.Object invokeMethod(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])
    {
        java.lang.Object[] $r2;
        java.lang.Object $r0;
        java.lang.reflect.Method $r1;
        java.lang.Exception $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.reflect.Method;

        $r2 := @parameter2: java.lang.Object[];

     label1:
        $r0 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String jsonEncode(java.util.Map)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.json.JSONException $r7;
        org.json.JSONObject $r1;
        java.util.Map $r0;
        java.lang.Object $r4;
        java.lang.String $r6;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

     label2:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

     label3:
        $r6 = (java.lang.String) $r4;

     label4:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r6, $r4);

     label5:
        goto label1;

     label6:
        $r7 := @caughtexception;

        virtualinvoke $r7.<org.json.JSONException: void printStackTrace()>();

        goto label1;

     label7:
        $r6 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        return $r6;

        catch org.json.JSONException from label2 to label3 with label6;
        catch org.json.JSONException from label4 to label5 with label6;
    }

    public static java.lang.String readStreamToString(java.io.InputStream)
    {
        java.lang.Throwable $r6;
        java.io.BufferedInputStream $r1, $r2, $r8;
        java.io.InputStreamReader $r3, $r9;
        int $i0;
        char[] $r5;
        java.lang.StringBuilder $r4, $r10;
        java.lang.String $r7;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r2 = null;

     label01:
        $r8 = new java.io.BufferedInputStream;

     label02:
        $r1 = $r8;

     label03:
        specialinvoke $r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r0);

     label04:
        $r9 = new java.io.InputStreamReader;

     label05:
        $r3 = $r9;

     label06:
        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1);

     label07:
        $r10 = new java.lang.StringBuilder;

     label08:
        $r4 = $r10;

     label09:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

     label10:
        $r5 = newarray (char)[2048];

     label11:
        $i0 = virtualinvoke $r3.<java.io.InputStreamReader: int read(char[])>($r5);

     label12:
        if $i0 == -1 goto label17;

     label13:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r5, 0, $i0);

     label14:
        goto label11;

     label15:
        $r6 := @caughtexception;

        $r2 = $r1;

     label16:
        staticinvoke <com.facebook.ads.internal.AdUtilities: void closeQuietly(java.io.Closeable)>($r2);

        staticinvoke <com.facebook.ads.internal.AdUtilities: void closeQuietly(java.io.Closeable)>($r3);

        throw $r6;

     label17:
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        staticinvoke <com.facebook.ads.internal.AdUtilities: void closeQuietly(java.io.Closeable)>($r1);

        staticinvoke <com.facebook.ads.internal.AdUtilities: void closeQuietly(java.io.Closeable)>($r3);

        return $r7;

     label19:
        $r6 := @caughtexception;

        $r3 = null;

        goto label16;

     label20:
        $r6 := @caughtexception;

        $r3 = null;

        $r2 = $r1;

        goto label16;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
    }
}
