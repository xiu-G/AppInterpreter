public class se.runstar.widgets.CheckableRelativeLayout extends android.widget.RelativeLayout implements android.widget.Checkable
{

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        se.runstar.widgets.CheckableRelativeLayout r0;

        r0 := @this: se.runstar.widgets.CheckableRelativeLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    public boolean isChecked()
    {
        se.runstar.widgets.CheckableRelativeLayout r0;
        int $i0;
        android.view.View $r1;
        android.widget.Checkable r2;
        boolean $z0;

        r0 := @this: se.runstar.widgets.CheckableRelativeLayout;

        $i0 = virtualinvoke r0.<se.runstar.widgets.CheckableRelativeLayout: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r1 = virtualinvoke r0.<se.runstar.widgets.CheckableRelativeLayout: android.view.View getChildAt(int)>(0);

        r2 = (android.widget.Checkable) $r1;

        $z0 = interfaceinvoke r2.<android.widget.Checkable: boolean isChecked()>();

        return $z0;

     label1:
        return 0;
    }

    public void setChecked(boolean)
    {
        se.runstar.widgets.CheckableRelativeLayout r0;
        int $i0, $i1;
        android.view.View $r1;
        android.widget.Checkable $r2;
        boolean $z0, $z1;

        r0 := @this: se.runstar.widgets.CheckableRelativeLayout;

        $z0 := @parameter0: boolean;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<se.runstar.widgets.CheckableRelativeLayout: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r1 = virtualinvoke r0.<se.runstar.widgets.CheckableRelativeLayout: android.view.View getChildAt(int)>($i0);

        $z1 = $r1 instanceof android.widget.Checkable;

        if $z1 == 0 goto label2;

        $r1 = virtualinvoke r0.<se.runstar.widgets.CheckableRelativeLayout: android.view.View getChildAt(int)>($i0);

        $r2 = (android.widget.Checkable) $r1;

        interfaceinvoke $r2.<android.widget.Checkable: void setChecked(boolean)>($z0);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void toggle()
    {
        se.runstar.widgets.CheckableRelativeLayout r0;
        int $i0, $i1;
        android.view.View $r1;
        android.widget.Checkable $r2;
        boolean $z0;

        r0 := @this: se.runstar.widgets.CheckableRelativeLayout;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<se.runstar.widgets.CheckableRelativeLayout: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r1 = virtualinvoke r0.<se.runstar.widgets.CheckableRelativeLayout: android.view.View getChildAt(int)>($i0);

        $z0 = $r1 instanceof android.widget.Checkable;

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<se.runstar.widgets.CheckableRelativeLayout: android.view.View getChildAt(int)>($i0);

        $r2 = (android.widget.Checkable) $r1;

        interfaceinvoke $r2.<android.widget.Checkable: void toggle()>();

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }
}
