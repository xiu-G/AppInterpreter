class it.intelisoft.mobile.crypto.business.activites.Crypto$2 extends java.lang.Object implements android.text.TextWatcher
{
    final it.intelisoft.mobile.crypto.business.activites.Crypto this$0;

    void <init>(it.intelisoft.mobile.crypto.business.activites.Crypto)
    {
        it.intelisoft.mobile.crypto.business.activites.Crypto$2 r0;
        it.intelisoft.mobile.crypto.business.activites.Crypto $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.activites.Crypto$2;

        $r1 := @parameter0: it.intelisoft.mobile.crypto.business.activites.Crypto;

        r0.<it.intelisoft.mobile.crypto.business.activites.Crypto$2: it.intelisoft.mobile.crypto.business.activites.Crypto this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        it.intelisoft.mobile.crypto.business.activites.Crypto$2 r0;
        android.text.Editable $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.activites.Crypto$2;

        $r1 := @parameter0: android.text.Editable;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        java.lang.CharSequence $r1;
        it.intelisoft.mobile.crypto.business.activites.Crypto$2 r0;
        int $i0, $i1, $i2;

        r0 := @this: it.intelisoft.mobile.crypto.business.activites.Crypto$2;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        java.lang.CharSequence $r1;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE $r4;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE $r3;
        android.database.sqlite.SQLiteDatabase $r6;
        java.util.Vector $r7;
        it.intelisoft.mobile.crypto.business.activites.Crypto$2 r0;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager $r5;
        boolean $z0;
        it.intelisoft.mobile.crypto.business.activites.Crypto $r8;

        r0 := @this: it.intelisoft.mobile.crypto.business.activites.Crypto$2;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Key:", $r2);

        if $r1 == null goto label2;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        staticinvoke <it.intelisoft.mobile.crypto.business.activites.Crypto: void access$3(java.lang.String)>($r2);

     label1:
        $r3 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE getInstance()>();

        $r2 = staticinvoke <it.intelisoft.mobile.crypto.business.activites.Crypto: java.lang.String access$4()>();

        $r4 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE getInstance()>();

        $z0 = virtualinvoke $r4.<it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE: boolean getOrderByMostUsed()>();

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager getInstance()>();

        $r6 = virtualinvoke $r5.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.database.sqlite.SQLiteDatabase getDB(java.lang.String,int)>("crypto.db", 1);

        $r7 = virtualinvoke $r3.<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>($r2, $z0, $r6);

        staticinvoke <it.intelisoft.mobile.crypto.business.activites.Crypto: void access$5(java.util.Vector)>($r7);

        $r7 = staticinvoke <it.intelisoft.mobile.crypto.business.activites.Crypto: java.util.Vector access$6()>();

        if $r7 == null goto label3;

        $r8 = r0.<it.intelisoft.mobile.crypto.business.activites.Crypto$2: it.intelisoft.mobile.crypto.business.activites.Crypto this$0>;

        staticinvoke <it.intelisoft.mobile.crypto.business.activites.Crypto: void access$7(it.intelisoft.mobile.crypto.business.activites.Crypto)>($r8);

        return;

     label2:
        staticinvoke <it.intelisoft.mobile.crypto.business.activites.Crypto: void access$3(java.lang.String)>(null);

        goto label1;

     label3:
        return;
    }
}
