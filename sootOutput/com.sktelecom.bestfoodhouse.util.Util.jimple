public class com.sktelecom.bestfoodhouse.util.Util extends java.lang.Object
{

    public void <init>()
    {
        com.sktelecom.bestfoodhouse.util.Util r0;

        r0 := @this: com.sktelecom.bestfoodhouse.util.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String calcBeforeNextMonth(java.lang.String, int)
    {
        java.util.GregorianCalendar r1;
        java.util.Date $r5;
        java.text.SimpleDateFormat r2;
        java.lang.Integer $r4;
        int $i0, $i1, $i2;
        java.lang.String $r0, $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        r2 = new java.text.SimpleDateFormat;

        specialinvoke r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMM");

        r1 = new java.util.GregorianCalendar;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3);

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r0);

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        specialinvoke r1.<java.util.GregorianCalendar: void <init>(int,int,int)>($i1, $i2, 0);

        virtualinvoke r1.<java.util.GregorianCalendar: void add(int,int)>(2, $i0);

        $r5 = virtualinvoke r1.<java.util.GregorianCalendar: java.util.Date getTime()>();

        $r0 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r5);

        return $r0;
    }

    public static java.lang.String calcDistance(double, double, double, double)
    {
        java.lang.Float $r3;
        java.lang.Object[] $r2;
        float[] r0;
        java.util.Formatter r1, $r5;
        float $f0;
        java.lang.String $r4;
        double $d0, d1, $d2, $d3;

        d1 := @parameter0: double;

        $d2 := @parameter1: double;

        $d3 := @parameter2: double;

        $d0 := @parameter3: double;

        r0 = newarray (float)[1];

        $f0 = 0.0F;

        r0[0] = $f0;

        staticinvoke <android.location.Location: void distanceBetween(double,double,double,double,float[])>(d1, $d2, $d3, $d0, r0);

        $r5 = new java.util.Formatter;

        specialinvoke $r5.<java.util.Formatter: void <init>()>();

        $r2 = newarray (java.lang.Object)[1];

        $f0 = r0[0];

        $f0 = $f0 / 1000.0F;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r2[0] = $r3;

        r1 = virtualinvoke $r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%.1f", $r2);

        $r4 = virtualinvoke r1.<java.util.Formatter: java.lang.String toString()>();

        return $r4;
    }

    public static int convertDipToPixel(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        float $f0;
        android.util.DisplayMetrics $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $f0 = (float) $i0;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r2);

        $i0 = (int) $f0;

        return $i0;
    }

    public static java.lang.String convertIsToString(java.io.InputStream)
    {
        java.lang.Throwable $r6;
        java.io.IOException $r9;
        java.io.InputStreamReader r1, $r7;
        int $i0;
        char[] r3;
        java.lang.StringBuilder $r5, $r8;
        java.lang.String r2, $r4;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        r2 = "";

        $r7 = new java.io.InputStreamReader;

        r1 = $r7;

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        r3 = newarray (char)[2000];

     label1:
        $i0 = virtualinvoke r1.<java.io.InputStreamReader: int read(char[])>(r3);

     label2:
        if $i0 > 0 goto label3;

        return r2;

     label3:
        $r4 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>(r3, 0, $i0);

     label4:
        $r8 = new java.lang.StringBuilder;

        $r5 = $r8;

     label5:
        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        r2 = $r4;

        r3 = newarray (char)[2000];

        goto label1;

     label7:
        $r6 := @caughtexception;

        $r9 = (java.io.IOException) $r6;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

        return "";

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public static java.lang.String format(java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r3;
        java.lang.Object $r1;
        java.lang.String $r0;
        java.util.Formatter $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new java.util.Formatter;

        specialinvoke $r2.<java.util.Formatter: void <init>()>();

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        $r2 = virtualinvoke $r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%.0f", $r3);

        $r0 = virtualinvoke $r2.<java.util.Formatter: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String formatDate(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 10 goto label1;

        return $r0;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 10);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", ". ");

        return $r0;
    }

    public static java.lang.String formatFloat(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r4;
        java.lang.Double $r3;
        java.lang.String $r0, $r1;
        java.lang.NullPointerException $r5;
        java.util.Formatter r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r0);

     label2:
        r2 = new java.util.Formatter;

     label3:
        specialinvoke r2.<java.util.Formatter: void <init>()>();

     label4:
        $r4 = newarray (java.lang.Object)[1];

     label5:
        $r4[0] = $r3;

        r2 = virtualinvoke r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%.1f", $r4);

        $r0 = virtualinvoke r2.<java.util.Formatter: java.lang.String toString()>();

     label6:
        return $r0;

     label7:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.NullPointerException: void printStackTrace()>();

        return "";

        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch java.lang.NullPointerException from label3 to label4 with label7;
        catch java.lang.NullPointerException from label5 to label6 with label7;
    }

    public static java.lang.String formatNumber(java.lang.String)
    {
        java.lang.Object[] $r2;
        java.lang.String $r0;
        java.lang.Integer $r3;
        java.util.Formatter r1;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.util.Formatter;

        specialinvoke r1.<java.util.Formatter: void <init>()>();

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r0);

        $r2[0] = $r3;

        r1 = virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%,d", $r2);

        $r0 = virtualinvoke r1.<java.util.Formatter: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String formatString(java.lang.String)
    {
        java.lang.Object[] $r3;
        java.lang.Double $r2;
        java.lang.String $r0;
        java.util.Formatter r1;

        $r0 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r0);

        r1 = new java.util.Formatter;

        specialinvoke r1.<java.util.Formatter: void <init>()>();

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r2;

        r1 = virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%d.dd", $r3);

        $r0 = virtualinvoke r1.<java.util.Formatter: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String formatTime(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 16 goto label1;

        return $r0;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(11, 16);

        return $r0;
    }

    public static java.lang.String getLocalName(android.content.Context, double, double)
    {
        android.location.Address $r5;
        java.lang.Throwable $r7;
        android.content.Context $r1;
        java.io.IOException $r9;
        android.location.Geocoder r0, $r8;
        java.util.List $r3;
        int i0, $i1;
        java.lang.Object $r4;
        java.lang.String r2, $r6;
        double $d0, $d1;

        $r1 := @parameter0: android.content.Context;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        r2 = "";

        $r8 = new android.location.Geocoder;

        r0 = $r8;

     label01:
        specialinvoke $r8.<android.location.Geocoder: void <init>(android.content.Context)>($r1);

        $r3 = virtualinvoke r0.<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>($d0, $d1, 5);

     label02:
        i0 = 0;

     label03:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

     label04:
        if i0 < $i1 goto label06;

     label05:
        return r2;

     label06:
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

     label07:
        $r5 = (android.location.Address) $r4;

     label08:
        $r6 = virtualinvoke $r5.<android.location.Address: java.lang.String getAdminArea()>();

     label09:
        r2 = $r6;

        if $r6 == null goto label10;

        return $r6;

     label10:
        i0 = i0 + 1;

        goto label03;

     label11:
        $r7 := @caughtexception;

        $r9 = (java.io.IOException) $r7;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

        goto label05;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label08 to label09 with label11;
    }

    public static java.lang.String getRealRecentImagePath(android.app.Activity)
    {
        android.net.Uri $r1;
        int $i0;
        java.lang.String[] r2;
        java.lang.String $r4;
        android.app.Activity $r0;
        android.database.Cursor $r3;

        $r0 := @parameter0: android.app.Activity;

        r2 = newarray (java.lang.String)[1];

        r2[0] = "_data";

        $r1 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r3 = virtualinvoke $r0.<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, r2, null, null, null);

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_data");

        interfaceinvoke $r3.<android.database.Cursor: boolean moveToLast()>();

        $r4 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        return $r4;
    }

    public static void showPopup(android.app.Activity, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)
    {
        android.content.Context $r6;
        android.content.Intent r5;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3, $r4;
        android.app.Activity $r0;

        $r0 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: java.lang.String;

        $i1 := @parameter6: int;

        if $i1 != 0 goto label3;

        r5 = new android.content.Intent;

        $r6 = virtualinvoke $r0.<android.app.Activity: android.content.Context getBaseContext()>();

        specialinvoke r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "Lcom/sktelecom/bestfoodhouse/PopupYes;");

     label1:
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r1);

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("message", $r2);

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("yes", $r3);

        if $i1 != 1 goto label2;

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("no", $r4);

     label2:
        virtualinvoke $r0.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>(r5, $i0);

        return;

     label3:
        r5 = new android.content.Intent;

        $r6 = virtualinvoke $r0.<android.app.Activity: android.content.Context getBaseContext()>();

        specialinvoke r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "Lcom/sktelecom/bestfoodhouse/PopupYesNo;");

        goto label1;
    }

    public android.graphics.drawable.Drawable ImageFromURL(java.lang.String)
    {
        java.net.HttpURLConnection r4;
        java.lang.Throwable $r9, $r10;
        java.net.MalformedURLException $r12;
        java.net.URL r2, $r11;
        com.sktelecom.bestfoodhouse.util.Util r0;
        java.io.IOException $r13;
        android.graphics.drawable.Drawable $r6;
        java.lang.NullPointerException $r8;
        java.net.URLConnection $r3;
        java.lang.String $r1;
        java.lang.OutOfMemoryError $r7;
        java.io.InputStream $r5;

        r0 := @this: com.sktelecom.bestfoodhouse.util.Util;

        $r1 := @parameter0: java.lang.String;

     label01:
        $r11 = new java.net.URL;

     label02:
        r2 = $r11;

     label03:
        specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>();

     label04:
        r4 = (java.net.HttpURLConnection) $r3;

     label05:
        virtualinvoke r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke r4.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke r4.<java.net.HttpURLConnection: void connect()>();

        $r5 = virtualinvoke r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label06:
        if $r5 != null goto label09;

     label07:
        virtualinvoke r4.<java.net.HttpURLConnection: void disconnect()>();

     label08:
        return null;

     label09:
        $r6 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>($r5, "src");

        virtualinvoke $r5.<java.io.InputStream: void close()>();

        virtualinvoke r4.<java.net.HttpURLConnection: void disconnect()>();

     label10:
        return $r6;

     label11:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.OutOfMemoryError: void printStackTrace()>();

     label12:
        return null;

     label13:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.NullPointerException: void printStackTrace()>();

        goto label12;

     label14:
        $r9 := @caughtexception;

        $r12 = (java.net.MalformedURLException) $r9;

        virtualinvoke $r12.<java.net.MalformedURLException: void printStackTrace()>();

        goto label12;

     label15:
        $r10 := @caughtexception;

        $r13 = (java.io.IOException) $r10;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        goto label12;

        catch java.lang.OutOfMemoryError from label01 to label02 with label11;
        catch java.lang.OutOfMemoryError from label03 to label04 with label11;
        catch java.lang.OutOfMemoryError from label05 to label06 with label11;
        catch java.lang.OutOfMemoryError from label07 to label08 with label11;
        catch java.lang.OutOfMemoryError from label09 to label10 with label11;
        catch java.lang.NullPointerException from label03 to label04 with label13;
        catch java.lang.NullPointerException from label05 to label06 with label13;
        catch java.lang.NullPointerException from label07 to label08 with label13;
        catch java.lang.NullPointerException from label09 to label10 with label13;
        catch java.net.MalformedURLException from label03 to label04 with label14;
        catch java.net.MalformedURLException from label05 to label06 with label14;
        catch java.net.MalformedURLException from label07 to label08 with label14;
        catch java.net.MalformedURLException from label09 to label10 with label14;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.io.IOException from label09 to label10 with label15;
    }
}
