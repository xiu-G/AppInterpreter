public final class com.trustlook.antivirus.common.ui.i extends java.lang.Object
{
    private static final java.util.Hashtable a;

    static void <clinit>()
    {
        java.util.Hashtable $r0;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <com.trustlook.antivirus.common.ui.i: java.util.Hashtable a> = $r0;

        return;
    }

    public static android.graphics.Typeface a(android.content.Context, java.lang.String)
    {
        android.graphics.Typeface $r5;
        java.lang.Throwable $r9;
        android.content.Context $r0;
        java.lang.Exception $r7;
        android.content.res.AssetManager $r4;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8;
        java.lang.String $r1;
        java.util.Hashtable $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = <com.trustlook.antivirus.common.ui.i: java.util.Hashtable a>;

        entermonitor $r2;

     label01:
        $r3 = <com.trustlook.antivirus.common.ui.i: java.util.Hashtable a>;

        $z0 = virtualinvoke $r3.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r1);

     label02:
        if $z0 != 0 goto label06;

     label03:
        $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r4, $r1);

     label04:
        $r3 = <com.trustlook.antivirus.common.ui.i: java.util.Hashtable a>;

     label05:
        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

     label06:
        $r3 = <com.trustlook.antivirus.common.ui.i: java.util.Hashtable a>;

        $r6 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (android.graphics.Typeface) $r6;

        exitmonitor $r2;

     label07:
        return $r5;

     label08:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not get typeface \'");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' because ");

        $r1 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Typefaces", $r1);

        exitmonitor $r2;

     label09:
        return null;

     label10:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label11:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Throwable from label03 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }
}
