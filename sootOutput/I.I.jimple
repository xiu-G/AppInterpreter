public class I.I extends java.lang.Object
{
    private static byte[] _;
    private static java.lang.String[] __;
    private static int[] ___;

    static void <clinit>()
    {
        byte[] $r0;
        java.lang.String[] $r1;
        byte $b0, $b4;
        int[] $r2;
        java.lang.StringBuffer $r5, $r10;
        int $i1, $i2, $i3;
        java.lang.String $r6;
        I.I $r3, $r9;
        java.lang.Exception $r8;
        java.lang.Class $r4;
        java.io.InputStream $r7;

        $r1 = newarray (java.lang.String)[256];

        <I.I: java.lang.String[] __> = $r1;

        $r2 = newarray (int)[256];

        <I.I: int[] ___> = $r2;

        $r9 = new I.I;

        $r3 = $r9;

     label01:
        specialinvoke $r9.<I.I: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r10 = new java.lang.StringBuffer;

        $r5 = $r10;

     label03:
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(73);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(103);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(105);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(102);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r6);

     label04:
        if $r7 == null goto label24;

     label05:
        $i1 = virtualinvoke $r7.<java.io.InputStream: int read()>();

     label06:
        $i1 = $i1 << 16;

     label07:
        $i2 = virtualinvoke $r7.<java.io.InputStream: int read()>();

     label08:
        $i2 = $i2 << 8;

        $i1 = $i1 | $i2;

     label09:
        $i2 = virtualinvoke $r7.<java.io.InputStream: int read()>();

     label10:
        $i1 = $i2 | $i1;

     label11:
        $r0 = newarray (byte)[$i1];

     label12:
        <I.I: byte[] _> = $r0;

        $i2 = 0;

        $b0 = (byte) $i1;

        $r0 = <I.I: byte[] _>;

     label13:
        if $i1 != 0 goto label16;

     label14:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label15:
        return;

     label16:
        $i3 = virtualinvoke $r7.<java.io.InputStream: int read(byte[],int,int)>($r0, $i2, $i1);

     label17:
        if $i3 == -1 goto label14;

        $i1 = $i1 - $i3;

        $i3 = $i3 + $i2;

     label18:
        if $i2 >= $i3 goto label13;

     label19:
        $b4 = $r0[$i2];

     label20:
        $b4 = $b4 ^ $b0;

     label21:
        $r0[$i2] = $b4;

     label22:
        $i2 = $i2 + 1;

        goto label18;

     label23:
        $r8 := @caughtexception;

     label24:
        return;

        catch java.lang.Exception from label01 to label02 with label23;
        catch java.lang.Exception from label03 to label04 with label23;
        catch java.lang.Exception from label05 to label06 with label23;
        catch java.lang.Exception from label07 to label08 with label23;
        catch java.lang.Exception from label09 to label10 with label23;
        catch java.lang.Exception from label11 to label12 with label23;
        catch java.lang.Exception from label14 to label15 with label23;
        catch java.lang.Exception from label16 to label17 with label23;
        catch java.lang.Exception from label19 to label20 with label23;
        catch java.lang.Exception from label21 to label22 with label23;
    }

    public void <init>()
    {
        I.I r0;

        r0 := @this: I.I;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.String I(int)
    {
        java.lang.Throwable $r5;
        byte[] $r2, $r3;
        java.lang.String[] $r4;
        short $s4;
        byte $b3;
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.String $r0, $r6;

        $i1 := @parameter0: int;

        entermonitor class "LI/I;";

        $i2 = $i1 & 255;

     label1:
        $r1 = <I.I: int[] ___>;

        $i0 = $r1[$i2];

        if $i0 == $i1 goto label3;

        $r1 = <I.I: int[] ___>;

        $r1[$i2] = $i1;

        if $i1 >= 0 goto label2;

        $i1 = $i1 & 65535;

     label2:
        $r6 = new java.lang.String;

        $r2 = <I.I: byte[] _>;

        $r3 = <I.I: byte[] _>;

        $i0 = $i1 + -1;

        $b3 = $r3[$i0];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i0 = (int) $s4;

        specialinvoke $r6.<java.lang.String: void <init>(byte[],int,int)>($r2, $i1, $i0);

        $r0 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();

        $r4 = <I.I: java.lang.String[] __>;

        $r4[$i2] = $r0;

     label3:
        $r4 = <I.I: java.lang.String[] __>;

        $r0 = $r4[$i2];

     label4:
        exitmonitor class "LI/I;";

        return $r0;

     label5:
        $r5 := @caughtexception;

        exitmonitor class "LI/I;";

        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
    }
}
