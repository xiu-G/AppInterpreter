public class proguard.classfile.util.MemberFinder extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.MemberVisitor
{
    private static final proguard.classfile.util.MemberFinder$MemberFoundException MEMBER_FOUND;
    private proguard.classfile.Clazz clazz;
    private proguard.classfile.Member member;

    static void <clinit>()
    {
        proguard.classfile.util.MemberFinder$MemberFoundException $r0;

        $r0 = new proguard.classfile.util.MemberFinder$MemberFoundException;

        specialinvoke $r0.<proguard.classfile.util.MemberFinder$MemberFoundException: void <init>(proguard.classfile.util.MemberFinder$1)>(null);

        <proguard.classfile.util.MemberFinder: proguard.classfile.util.MemberFinder$MemberFoundException MEMBER_FOUND> = $r0;

        return;
    }

    public void <init>()
    {
        proguard.classfile.util.MemberFinder r0;

        r0 := @this: proguard.classfile.util.MemberFinder;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        return;
    }

    public proguard.classfile.Clazz correspondingClass()
    {
        proguard.classfile.util.MemberFinder r0;
        proguard.classfile.Clazz r1;

        r0 := @this: proguard.classfile.util.MemberFinder;

        r1 = r0.<proguard.classfile.util.MemberFinder: proguard.classfile.Clazz clazz>;

        return r1;
    }

    public proguard.classfile.Field findField(proguard.classfile.Clazz, proguard.classfile.Clazz, java.lang.String, java.lang.String)
    {
        proguard.classfile.util.MemberFinder r5;
        proguard.classfile.Clazz $r0, $r1;
        java.lang.String $r2, $r3;
        proguard.classfile.Field r6;
        proguard.classfile.Member $r4;

        r5 := @this: proguard.classfile.util.MemberFinder;

        $r0 := @parameter0: proguard.classfile.Clazz;

        $r1 := @parameter1: proguard.classfile.Clazz;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 = virtualinvoke r5.<proguard.classfile.util.MemberFinder: proguard.classfile.Member findMember(proguard.classfile.Clazz,proguard.classfile.Clazz,java.lang.String,java.lang.String,boolean)>($r0, $r1, $r2, $r3, 1);

        r6 = (proguard.classfile.Field) $r4;

        return r6;
    }

    public proguard.classfile.Member findMember(proguard.classfile.Clazz, proguard.classfile.Clazz, java.lang.String, java.lang.String, boolean)
    {
        proguard.classfile.util.MemberFinder r0;
        proguard.classfile.visitor.NamedFieldVisitor $r5;
        proguard.classfile.visitor.MemberClassAccessFilter $r6;
        proguard.classfile.visitor.ClassVisitor $r7;
        proguard.classfile.util.MemberFinder$MemberFoundException $r9;
        proguard.classfile.Member r10;
        proguard.classfile.visitor.NamedMethodVisitor $r8;
        proguard.classfile.Clazz $r1, $r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: proguard.classfile.util.MemberFinder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Clazz;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        r0.<proguard.classfile.util.MemberFinder: proguard.classfile.Clazz clazz> = null;

        r0.<proguard.classfile.util.MemberFinder: proguard.classfile.Member member> = null;

        if $z0 == 0 goto label5;

        $r5 = new proguard.classfile.visitor.NamedFieldVisitor;

        $r6 = new proguard.classfile.visitor.MemberClassAccessFilter;

     label1:
        specialinvoke $r6.<proguard.classfile.visitor.MemberClassAccessFilter: void <init>(proguard.classfile.Clazz,proguard.classfile.visitor.MemberVisitor)>($r1, r0);

        specialinvoke $r5.<proguard.classfile.visitor.NamedFieldVisitor: void <init>(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor)>($r3, $r4, $r6);

     label2:
        $r7 = $r5;

     label3:
        interfaceinvoke $r2.<proguard.classfile.Clazz: void hierarchyAccept(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(1, 1, 1, 0, $r7);

     label4:
        r10 = r0.<proguard.classfile.util.MemberFinder: proguard.classfile.Member member>;

        return r10;

     label5:
        $r8 = new proguard.classfile.visitor.NamedMethodVisitor;

        $r6 = new proguard.classfile.visitor.MemberClassAccessFilter;

     label6:
        specialinvoke $r6.<proguard.classfile.visitor.MemberClassAccessFilter: void <init>(proguard.classfile.Clazz,proguard.classfile.visitor.MemberVisitor)>($r1, r0);

        specialinvoke $r8.<proguard.classfile.visitor.NamedMethodVisitor: void <init>(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor)>($r3, $r4, $r6);

     label7:
        $r7 = $r8;

        goto label3;

     label8:
        $r9 := @caughtexception;

        goto label4;

        catch proguard.classfile.util.MemberFinder$MemberFoundException from label1 to label2 with label8;
        catch proguard.classfile.util.MemberFinder$MemberFoundException from label3 to label4 with label8;
        catch proguard.classfile.util.MemberFinder$MemberFoundException from label6 to label7 with label8;
    }

    public proguard.classfile.Method findMethod(proguard.classfile.Clazz, proguard.classfile.Clazz, java.lang.String, java.lang.String)
    {
        proguard.classfile.util.MemberFinder r5;
        proguard.classfile.Clazz $r0, $r1;
        proguard.classfile.Method r6;
        java.lang.String $r2, $r3;
        proguard.classfile.Member $r4;

        r5 := @this: proguard.classfile.util.MemberFinder;

        $r0 := @parameter0: proguard.classfile.Clazz;

        $r1 := @parameter1: proguard.classfile.Clazz;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 = virtualinvoke r5.<proguard.classfile.util.MemberFinder: proguard.classfile.Member findMember(proguard.classfile.Clazz,proguard.classfile.Clazz,java.lang.String,java.lang.String,boolean)>($r0, $r1, $r2, $r3, 0);

        r6 = (proguard.classfile.Method) $r4;

        return r6;
    }

    public boolean isOverriden(proguard.classfile.Clazz, proguard.classfile.Method)
    {
        proguard.classfile.util.MemberFinder r0;
        proguard.classfile.util.MemberFinder$MemberFoundException $r7;
        proguard.classfile.visitor.NamedMethodVisitor $r3;
        proguard.classfile.Clazz $r1;
        proguard.classfile.Method $r2;
        java.lang.String $r5, $r6;
        proguard.classfile.visitor.MemberAccessFilter $r4;

        r0 := @this: proguard.classfile.util.MemberFinder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r5 = interfaceinvoke $r2.<proguard.classfile.Method: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r6 = interfaceinvoke $r2.<proguard.classfile.Method: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        r0.<proguard.classfile.util.MemberFinder: proguard.classfile.Clazz clazz> = null;

        r0.<proguard.classfile.util.MemberFinder: proguard.classfile.Member member> = null;

        $r3 = new proguard.classfile.visitor.NamedMethodVisitor;

        $r4 = new proguard.classfile.visitor.MemberAccessFilter;

     label1:
        specialinvoke $r4.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(0, 2, r0);

        specialinvoke $r3.<proguard.classfile.visitor.NamedMethodVisitor: void <init>(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor)>($r5, $r6, $r4);

        interfaceinvoke $r1.<proguard.classfile.Clazz: void hierarchyAccept(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(0, 0, 0, 1, $r3);

     label2:
        return 0;

     label3:
        $r7 := @caughtexception;

        return 1;

        catch proguard.classfile.util.MemberFinder$MemberFoundException from label1 to label2 with label3;
    }

    public boolean isShadowed(proguard.classfile.Clazz, proguard.classfile.Field)
    {
        proguard.classfile.util.MemberFinder r0;
        proguard.classfile.visitor.NamedFieldVisitor $r3;
        proguard.classfile.Field $r2;
        proguard.classfile.util.MemberFinder$MemberFoundException $r7;
        proguard.classfile.Clazz $r1;
        java.lang.String $r5, $r6;
        proguard.classfile.visitor.MemberAccessFilter $r4;

        r0 := @this: proguard.classfile.util.MemberFinder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        $r5 = interfaceinvoke $r2.<proguard.classfile.Field: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r6 = interfaceinvoke $r2.<proguard.classfile.Field: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        r0.<proguard.classfile.util.MemberFinder: proguard.classfile.Clazz clazz> = null;

        r0.<proguard.classfile.util.MemberFinder: proguard.classfile.Member member> = null;

        $r3 = new proguard.classfile.visitor.NamedFieldVisitor;

        $r4 = new proguard.classfile.visitor.MemberAccessFilter;

     label1:
        specialinvoke $r4.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(0, 2, r0);

        specialinvoke $r3.<proguard.classfile.visitor.NamedFieldVisitor: void <init>(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor)>($r5, $r6, $r4);

        interfaceinvoke $r1.<proguard.classfile.Clazz: void hierarchyAccept(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(0, 0, 0, 1, $r3);

     label2:
        return 0;

     label3:
        $r7 := @caughtexception;

        return 1;

        catch proguard.classfile.util.MemberFinder$MemberFoundException from label1 to label2 with label3;
    }

    public void visitAnyMember(proguard.classfile.Clazz, proguard.classfile.Member)
    {
        proguard.classfile.util.MemberFinder r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.Member $r2;
        proguard.classfile.util.MemberFinder$MemberFoundException $r3;

        r0 := @this: proguard.classfile.util.MemberFinder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Member;

        r0.<proguard.classfile.util.MemberFinder: proguard.classfile.Clazz clazz> = $r1;

        r0.<proguard.classfile.util.MemberFinder: proguard.classfile.Member member> = $r2;

        $r3 = <proguard.classfile.util.MemberFinder: proguard.classfile.util.MemberFinder$MemberFoundException MEMBER_FOUND>;

        throw $r3;
    }
}
