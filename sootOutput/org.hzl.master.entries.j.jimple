public final class org.hzl.master.entries.j extends java.lang.Object implements java.io.Serializable, java.util.Comparator
{
    private java.util.List a;
    private java.util.Map b;
    private java.lang.Long c;
    private org.hzl.master.entries.j d;
    private java.util.List e;
    private transient java.util.Map f;
    private transient java.util.Map g;
    private org.hzl.master.entries.k h;

    public void <init>(java.util.List, java.util.Map, java.lang.Long)
    {
        java.util.List $r1, $r5;
        java.lang.Long $r3;
        java.util.Map $r2;
        org.hzl.master.entries.k $r6;
        org.hzl.master.entries.j r0;
        java.util.ArrayList $r4;

        r0 := @this: org.hzl.master.entries.j;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.Map;

        $r3 := @parameter2: java.lang.Long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.hzl.master.entries.j: java.util.List a> = $r1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        r0.<org.hzl.master.entries.j: java.util.List e> = $r4;

        $r5 = r0.<org.hzl.master.entries.j: java.util.List e>;

        staticinvoke <java.util.Collections: void copy(java.util.List,java.util.List)>($r5, $r1);

        $r6 = <org.hzl.master.entries.k: org.hzl.master.entries.k a>;

        r0.<org.hzl.master.entries.j: org.hzl.master.entries.k h> = $r6;

        $r1 = r0.<org.hzl.master.entries.j: java.util.List e>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r1, r0);

        r0.<org.hzl.master.entries.j: java.util.Map b> = $r2;

        r0.<org.hzl.master.entries.j: java.lang.Long c> = $r3;

        return;
    }

    private java.lang.Double a(org.hzl.master.entries.f)
    {
        java.lang.IllegalStateException $r3;
        java.lang.Double $r6;
        java.util.Map $r2;
        org.hzl.master.entries.f $r1;
        java.lang.Object $r5;
        java.lang.String $r4;
        org.hzl.master.entries.j r0;

        r0 := @this: org.hzl.master.entries.j;

        $r1 := @parameter0: org.hzl.master.entries.f;

        $r2 = r0.<org.hzl.master.entries.j: java.util.Map f>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("sort() hasn\'t been called yet!");

        throw $r3;

     label1:
        $r2 = r0.<org.hzl.master.entries.j: java.util.Map f>;

        $r4 = virtualinvoke $r1.<org.hzl.master.entries.f: java.lang.String b()>();

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (java.lang.Double) $r5;

        return $r6;
    }

    private java.lang.Double b(org.hzl.master.entries.f)
    {
        java.lang.IllegalStateException $r3;
        java.lang.Double $r7;
        java.util.Map $r4;
        org.hzl.master.entries.f $r1;
        java.lang.Object $r6;
        java.lang.String $r5;
        org.hzl.master.entries.j r0, $r2;

        r0 := @this: org.hzl.master.entries.j;

        $r1 := @parameter0: org.hzl.master.entries.f;

        $r2 = r0.<org.hzl.master.entries.j: org.hzl.master.entries.j d>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setPreviousStats() hasn\'t been called yet");

        throw $r3;

     label1:
        $r4 = r0.<org.hzl.master.entries.j: java.util.Map g>;

        if $r4 != null goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("sort() hasn\'t been called yet!");

        throw $r3;

     label2:
        $r4 = r0.<org.hzl.master.entries.j: java.util.Map g>;

        $r5 = virtualinvoke $r1.<org.hzl.master.entries.f: java.lang.String b()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.lang.Double) $r6;

        return $r7;
    }

    public final java.util.List a()
    {
        java.util.List r1;
        org.hzl.master.entries.j r0;

        r0 := @this: org.hzl.master.entries.j;

        r1 = r0.<org.hzl.master.entries.j: java.util.List a>;

        return r1;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        java.lang.Double $r9, $r10;
        java.lang.Integer $r7, $r8;
        int $i0;
        org.hzl.master.entries.f $r3, $r4;
        java.lang.Object $r1, $r2;
        org.hzl.master.entries.k $r5, $r6;
        org.hzl.master.entries.j r0;

        r0 := @this: org.hzl.master.entries.j;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (org.hzl.master.entries.f) $r1;

        $r4 = (org.hzl.master.entries.f) $r2;

        $r5 = r0.<org.hzl.master.entries.j: org.hzl.master.entries.k h>;

        $r6 = <org.hzl.master.entries.k: org.hzl.master.entries.k a>;

        if $r5 != $r6 goto label1;

        $r7 = virtualinvoke $r3.<org.hzl.master.entries.f: java.lang.Integer a()>();

        $r8 = virtualinvoke $r4.<org.hzl.master.entries.f: java.lang.Integer a()>();

        $i0 = virtualinvoke $r7.<java.lang.Integer: int compareTo(java.lang.Integer)>($r8);

        return $i0;

     label1:
        $r5 = r0.<org.hzl.master.entries.j: org.hzl.master.entries.k h>;

        $r6 = <org.hzl.master.entries.k: org.hzl.master.entries.k b>;

        if $r5 != $r6 goto label2;

        $r7 = virtualinvoke $r3.<org.hzl.master.entries.f: java.lang.Integer a()>();

        $r8 = virtualinvoke $r4.<org.hzl.master.entries.f: java.lang.Integer a()>();

        $i0 = virtualinvoke $r7.<java.lang.Integer: int compareTo(java.lang.Integer)>($r8);

        $i0 = neg $i0;

        return $i0;

     label2:
        $r5 = r0.<org.hzl.master.entries.j: org.hzl.master.entries.k h>;

        $r6 = <org.hzl.master.entries.k: org.hzl.master.entries.k c>;

        if $r5 != $r6 goto label3;

        $r9 = specialinvoke r0.<org.hzl.master.entries.j: java.lang.Double a(org.hzl.master.entries.f)>($r3);

        $r10 = specialinvoke r0.<org.hzl.master.entries.j: java.lang.Double a(org.hzl.master.entries.f)>($r4);

        $i0 = virtualinvoke $r9.<java.lang.Double: int compareTo(java.lang.Double)>($r10);

        return $i0;

     label3:
        $r5 = r0.<org.hzl.master.entries.j: org.hzl.master.entries.k h>;

        $r6 = <org.hzl.master.entries.k: org.hzl.master.entries.k d>;

        if $r5 != $r6 goto label4;

        $r9 = specialinvoke r0.<org.hzl.master.entries.j: java.lang.Double a(org.hzl.master.entries.f)>($r3);

        $r10 = specialinvoke r0.<org.hzl.master.entries.j: java.lang.Double a(org.hzl.master.entries.f)>($r4);

        $i0 = virtualinvoke $r9.<java.lang.Double: int compareTo(java.lang.Double)>($r10);

        $i0 = neg $i0;

        return $i0;

     label4:
        $r5 = r0.<org.hzl.master.entries.j: org.hzl.master.entries.k h>;

        $r6 = <org.hzl.master.entries.k: org.hzl.master.entries.k e>;

        if $r5 != $r6 goto label5;

        $r9 = specialinvoke r0.<org.hzl.master.entries.j: java.lang.Double b(org.hzl.master.entries.f)>($r3);

        $r10 = specialinvoke r0.<org.hzl.master.entries.j: java.lang.Double b(org.hzl.master.entries.f)>($r4);

        $i0 = virtualinvoke $r9.<java.lang.Double: int compareTo(java.lang.Double)>($r10);

        return $i0;

     label5:
        $r5 = r0.<org.hzl.master.entries.j: org.hzl.master.entries.k h>;

        $r6 = <org.hzl.master.entries.k: org.hzl.master.entries.k f>;

        if $r5 != $r6 goto label6;

        $r9 = specialinvoke r0.<org.hzl.master.entries.j: java.lang.Double b(org.hzl.master.entries.f)>($r3);

        $r10 = specialinvoke r0.<org.hzl.master.entries.j: java.lang.Double b(org.hzl.master.entries.f)>($r4);

        $i0 = virtualinvoke $r9.<java.lang.Double: int compareTo(java.lang.Double)>($r10);

        $i0 = neg $i0;

        return $i0;

     label6:
        return 0;
    }
}
