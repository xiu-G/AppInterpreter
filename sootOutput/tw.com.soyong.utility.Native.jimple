public class tw.com.soyong.utility.Native extends java.lang.Object
{
    private static tw.com.soyong.mebook.SyInputStream mIs;
    public static h mSC;

    static void <clinit>()
    {
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("native");

        return;
    }

    public void <init>()
    {
        tw.com.soyong.utility.Native r0;

        r0 := @this: tw.com.soyong.utility.Native;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void Close()
    {
        java.lang.Throwable $r1;
        java.io.IOException $r2;
        tw.com.soyong.mebook.SyInputStream $r0;

        $r0 = <tw.com.soyong.utility.Native: tw.com.soyong.mebook.SyInputStream mIs>;

        if $r0 == null goto label3;

        $r0 = <tw.com.soyong.utility.Native: tw.com.soyong.mebook.SyInputStream mIs>;

     label1:
        virtualinvoke $r0.<tw.com.soyong.mebook.SyInputStream: void close()>();

     label2:
        <tw.com.soyong.utility.Native: tw.com.soyong.mebook.SyInputStream mIs> = null;

     label3:
        staticinvoke <tw.com.soyong.utility.Native: void close()>();

        return;

     label4:
        $r1 := @caughtexception;

        $r2 = (java.io.IOException) $r1;

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

        goto label2;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public static boolean InitDRMMp3(h, java.lang.String)
    {
        h $r0;
        int $i0;
        java.lang.String $r1;
        tw.com.soyong.mebook.SyInputStream $r2;

        $r0 := @parameter0: h;

        $r1 := @parameter1: java.lang.String;

        $r2 = new tw.com.soyong.mebook.SyInputStream;

        specialinvoke $r2.<tw.com.soyong.mebook.SyInputStream: void <init>(h,java.lang.String,int)>($r0, $r1, 1);

        $i0 = $r2.<tw.com.soyong.mebook.SyInputStream: int mOpenState>;

        if $i0 == 0 goto label1;

        return 0;

     label1:
        <tw.com.soyong.utility.Native: h mSC> = $r0;

        <tw.com.soyong.utility.Native: tw.com.soyong.mebook.SyInputStream mIs> = $r2;

        return 1;
    }

    public static void callback(int)
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("callback:");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("jni-test", $r1);

        return;
    }

    public static native void close();

    public static byte[] fatchData(int)
    {
        java.lang.Throwable $r2;
        byte[] $r1;
        int $i0;
        java.io.IOException $r3;
        tw.com.soyong.mebook.SyInputStream $r0;

        $i0 := @parameter0: int;

        $r1 = newarray (byte)[$i0];

        $r0 = <tw.com.soyong.utility.Native: tw.com.soyong.mebook.SyInputStream mIs>;

     label1:
        virtualinvoke $r0.<tw.com.soyong.mebook.SyInputStream: int read(byte[])>($r1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = (java.io.IOException) $r2;

        virtualinvoke $r3.<java.io.IOException: void printStackTrace()>();

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static native int getNumChannel();

    public static native int getSamplePerSec();

    public static native java.lang.String hideCertainWords(java.lang.String, int, int);

    public static native boolean open(java.lang.String);

    public static native int read(byte[]);

    public static native void reset();

    public static void seek(long)
    {
        java.lang.Throwable $r1;
        long $l0;
        java.io.IOException $r2;
        tw.com.soyong.mebook.SyInputStream $r0;

        $l0 := @parameter0: long;

        $r0 = <tw.com.soyong.utility.Native: tw.com.soyong.mebook.SyInputStream mIs>;

     label1:
        virtualinvoke $r0.<tw.com.soyong.mebook.SyInputStream: void seek(long)>($l0);

        staticinvoke <tw.com.soyong.utility.Native: void reset()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = (java.io.IOException) $r1;

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
