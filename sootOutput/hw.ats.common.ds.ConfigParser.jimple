public class hw.ats.common.ds.ConfigParser extends java.lang.Object
{
    private static final java.lang.String TAG;
    private java.net.URL feedUrl;
    private java.io.InputStream inputstream;

    public void <init>(java.io.InputStream)
    {
        hw.ats.common.ds.ConfigParser r0;
        java.io.InputStream $r1;

        r0 := @this: hw.ats.common.ds.ConfigParser;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<hw.ats.common.ds.ConfigParser: java.net.URL feedUrl> = null;

        r0.<hw.ats.common.ds.ConfigParser: java.io.InputStream inputstream> = null;

        r0.<hw.ats.common.ds.ConfigParser: java.io.InputStream inputstream> = $r1;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.Throwable $r3;
        java.net.URL $r2;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;
        hw.ats.common.ds.ConfigParser r0;

        r0 := @this: hw.ats.common.ds.ConfigParser;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<hw.ats.common.ds.ConfigParser: java.net.URL feedUrl> = null;

        r0.<hw.ats.common.ds.ConfigParser: java.io.InputStream inputstream> = null;

        $r2 = new java.net.URL;

     label1:
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1);

     label2:
        r0.<hw.ats.common.ds.ConfigParser: java.net.URL feedUrl> = $r2;

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    private java.io.InputStream getInputStream()
    {
        java.lang.Throwable $r4;
        java.net.URL $r2;
        java.net.URLConnection $r3;
        java.lang.RuntimeException $r5;
        hw.ats.common.ds.ConfigParser r0;
        java.io.InputStream $r1;

        r0 := @this: hw.ats.common.ds.ConfigParser;

        $r1 = r0.<hw.ats.common.ds.ConfigParser: java.io.InputStream inputstream>;

        if $r1 == null goto label1;

        $r1 = r0.<hw.ats.common.ds.ConfigParser: java.io.InputStream inputstream>;

        return $r1;

     label1:
        $r2 = r0.<hw.ats.common.ds.ConfigParser: java.net.URL feedUrl>;

     label2:
        $r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        $r1 = virtualinvoke $r3.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private void ownerValue(org.w3c.dom.Node, hw.ats.common.model.Config)
    {
        org.w3c.dom.NodeList $r3;
        hw.ats.common.ds.ConfigParser r0;
        org.w3c.dom.Node $r1;
        int $i0, $i1;
        java.lang.String $r4;
        hw.ats.common.model.Config $r2;
        boolean $z0;

        r0 := @this: hw.ats.common.ds.ConfigParser;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 := @parameter1: hw.ats.common.model.Config;

        $r3 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        if $r3 == null goto label5;

        $i0 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $i0 = 0;

     label2:
        $i1 = interfaceinvoke $r3.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 >= $i1 goto label5;

        $r1 = interfaceinvoke $r3.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

        $r4 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("name");

        if $z0 == 0 goto label4;

        $r4 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r1);

        $r2.<hw.ats.common.model.Config: java.lang.String owner_name> = $r4;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r4 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("email");

        if $z0 == 0 goto label3;

        $r4 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r1);

        $r2.<hw.ats.common.model.Config: java.lang.String owner_email> = $r4;

        goto label3;

     label5:
        return;
    }

    private int textNodeIntValue(org.w3c.dom.Node)
    {
        org.w3c.dom.Node $r1;
        int $i0;
        java.lang.String $r2;
        hw.ats.common.ds.ConfigParser r0;

        r0 := @this: hw.ats.common.ds.ConfigParser;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r1);

        $i0 = staticinvoke <com.humanwares.util.StringUtil: int intValue(java.lang.String)>($r2);

        return $i0;
    }

    private java.lang.String textNodeValue(org.w3c.dom.Node)
    {
        java.lang.String $r2;
        hw.ats.common.ds.ConfigParser r0;
        org.w3c.dom.Node $r1;

        r0 := @this: hw.ats.common.ds.ConfigParser;

        $r1 := @parameter0: org.w3c.dom.Node;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r1 == null goto label2;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r2;

     label2:
        return null;
    }

    public hw.ats.common.model.Config parse()
    {
        java.util.Date $r14;
        long $l2;
        hw.ats.common.ds.ConfigParser r0;
        org.w3c.dom.Document $r5;
        org.w3c.dom.Node $r8, $r9;
        int $i0, $i1;
        java.lang.String $r10, $r11;
        boolean $z0;
        org.w3c.dom.NodeList $r7;
        java.lang.RuntimeException $r13;
        java.lang.Exception $r12;
        org.w3c.dom.Element $r6;
        javax.xml.parsers.DocumentBuilder $r3;
        java.lang.StringBuilder $r15;
        javax.xml.parsers.DocumentBuilderFactory $r2;
        hw.ats.common.model.Config r1;
        java.io.InputStream $r4;

        r0 := @this: hw.ats.common.ds.ConfigParser;

        $r2 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label01:
        $r3 = virtualinvoke $r2.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r4 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.io.InputStream getInputStream()>();

        $r5 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r4);

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $i0 = interfaceinvoke $r7.<org.w3c.dom.NodeList: int getLength()>();

     label02:
        if $i0 != 0 goto label03;

        return null;

     label03:
        r1 = new hw.ats.common.model.Config;

     label04:
        specialinvoke r1.<hw.ats.common.model.Config: void <init>()>();

     label05:
        $i0 = 0;

     label06:
        $i1 = interfaceinvoke $r7.<org.w3c.dom.NodeList: int getLength()>();

     label07:
        if $i0 < $i1 goto label08;

        return r1;

     label08:
        $r8 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

     label09:
        if $r8 != null goto label11;

     label10:
        $i0 = $i0 + 1;

        goto label06;

     label11:
        $r9 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

        $r10 = interfaceinvoke $r9.<org.w3c.dom.Node: java.lang.String getNodeName()>();

     label12:
        $r11 = "id";

     label13:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label14:
        if $z0 == 0 goto label18;

     label15:
        $i1 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: int textNodeIntValue(org.w3c.dom.Node)>($r8);

        r1.<hw.ats.common.model.Config: int uid> = $i1;

     label16:
        goto label10;

     label17:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label18:
        $r11 = "title";

     label19:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label20:
        if $z0 == 0 goto label23;

     label21:
        interfaceinvoke $r8.<org.w3c.dom.Node: void normalize()>();

        $r10 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r8);

        r1.<hw.ats.common.model.Config: java.lang.String title> = $r10;

     label22:
        goto label10;

     label23:
        $r11 = "description";

     label24:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label25:
        if $z0 == 0 goto label28;

     label26:
        interfaceinvoke $r8.<org.w3c.dom.Node: void normalize()>();

        $r10 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r8);

        r1.<hw.ats.common.model.Config: java.lang.String memo> = $r10;

     label27:
        goto label10;

     label28:
        $r11 = "app_link";

     label29:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label30:
        if $z0 == 0 goto label35;

     label31:
        $r10 = r1.<hw.ats.common.model.Config: java.lang.String url>;

     label32:
        if $r10 != null goto label10;

     label33:
        interfaceinvoke $r8.<org.w3c.dom.Node: void normalize()>();

        $r10 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r8);

        r1.<hw.ats.common.model.Config: java.lang.String url> = $r10;

     label34:
        goto label10;

     label35:
        $r11 = "link";

     label36:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label37:
        if $z0 == 0 goto label42;

     label38:
        $r10 = r1.<hw.ats.common.model.Config: java.lang.String site>;

     label39:
        if $r10 != null goto label10;

     label40:
        interfaceinvoke $r8.<org.w3c.dom.Node: void normalize()>();

        $r10 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r8);

        r1.<hw.ats.common.model.Config: java.lang.String site> = $r10;

     label41:
        goto label10;

     label42:
        $r11 = "version";

     label43:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label44:
        if $z0 == 0 goto label47;

     label45:
        interfaceinvoke $r8.<org.w3c.dom.Node: void normalize()>();

        $r10 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r8);

        r1.<hw.ats.common.model.Config: java.lang.String version> = $r10;

     label46:
        goto label10;

     label47:
        $r11 = "updated";

     label48:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label49:
        if $z0 == 0 goto label54;

        $r14 = new java.util.Date;

     label50:
        $i1 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: int textNodeIntValue(org.w3c.dom.Node)>($r8);

     label51:
        $i1 = $i1 * 1000;

        $l2 = (long) $i1;

     label52:
        specialinvoke $r14.<java.util.Date: void <init>(long)>($l2);

        r1.<hw.ats.common.model.Config: java.util.Date chgdate> = $r14;

     label53:
        goto label10;

     label54:
        $r11 = "template";

     label55:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label56:
        if $z0 == 0 goto label59;

     label57:
        interfaceinvoke $r8.<org.w3c.dom.Node: void normalize()>();

        $r10 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r8);

        r1.<hw.ats.common.model.Config: java.lang.String template> = $r10;

     label58:
        goto label10;

     label59:
        $r11 = "payment";

     label60:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label61:
        if $z0 == 0 goto label64;

     label62:
        $i1 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: int textNodeIntValue(org.w3c.dom.Node)>($r8);

        r1.<hw.ats.common.model.Config: int payment> = $i1;

     label63:
        goto label10;

     label64:
        $r11 = "owner";

     label65:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label66:
        if $z0 == 0 goto label69;

     label67:
        specialinvoke r0.<hw.ats.common.ds.ConfigParser: void ownerValue(org.w3c.dom.Node,hw.ats.common.model.Config)>($r8, r1);

     label68:
        goto label10;

     label69:
        $r11 = "package_name";

     label70:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label71:
        if $z0 == 0 goto label10;

        $r15 = new java.lang.StringBuilder;

     label72:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("package_name = ");

        $r10 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r8);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ConfigParser", $r10);

        $r10 = specialinvoke r0.<hw.ats.common.ds.ConfigParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r8);

        r1.<hw.ats.common.model.Config: java.lang.String package_name> = $r10;

     label73:
        goto label10;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Exception from label06 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label19 to label20 with label17;
        catch java.lang.Exception from label21 to label22 with label17;
        catch java.lang.Exception from label24 to label25 with label17;
        catch java.lang.Exception from label26 to label27 with label17;
        catch java.lang.Exception from label29 to label30 with label17;
        catch java.lang.Exception from label31 to label32 with label17;
        catch java.lang.Exception from label33 to label34 with label17;
        catch java.lang.Exception from label36 to label37 with label17;
        catch java.lang.Exception from label38 to label39 with label17;
        catch java.lang.Exception from label40 to label41 with label17;
        catch java.lang.Exception from label43 to label44 with label17;
        catch java.lang.Exception from label45 to label46 with label17;
        catch java.lang.Exception from label48 to label49 with label17;
        catch java.lang.Exception from label50 to label51 with label17;
        catch java.lang.Exception from label52 to label53 with label17;
        catch java.lang.Exception from label55 to label56 with label17;
        catch java.lang.Exception from label57 to label58 with label17;
        catch java.lang.Exception from label60 to label61 with label17;
        catch java.lang.Exception from label62 to label63 with label17;
        catch java.lang.Exception from label65 to label66 with label17;
        catch java.lang.Exception from label67 to label68 with label17;
        catch java.lang.Exception from label70 to label71 with label17;
        catch java.lang.Exception from label72 to label73 with label17;
    }

    public static void <clinit>()
    {
        <hw.ats.common.ds.ConfigParser: java.lang.String TAG> = "ConfigParser";

        return;
    }
}
