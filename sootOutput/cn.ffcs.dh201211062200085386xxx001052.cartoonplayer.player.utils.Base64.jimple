public class cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64 extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    public static final int CRLF;
    public static final int DEFAULT;
    public static final int NO_CLOSE;
    public static final int NO_PADDING;
    public static final int NO_WRAP;
    public static final int URL_SAFE;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: int URL_SAFE> = 8;

        <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: int NO_WRAP> = 2;

        <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: int NO_PADDING> = 1;

        <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: int NO_CLOSE> = 16;

        <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: int DEFAULT> = 0;

        <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: int CRLF> = 4;

        <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: boolean $assertionsDisabled> = 0;

        $r0 = class "Lcn/ffcs/dh201211062200085386xxx001052/cartoonplayer/player/utils/Base64;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;

        return;
    }

    private void <init>()
    {
        cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64 r0;

        r0 := @this: cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decode(java.lang.String, int)
    {
        int $i0;
        byte[] $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r1 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: byte[] decode(byte[],int)>($r1, $i0);

        return $r1;
    }

    public static byte[] decode(byte[], int)
    {
        int $i0, $i1;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = lengthof $r0;

        $r0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: byte[] decode(byte[],int,int,int)>($r0, 0, $i1, $i0);

        return $r0;
    }

    public static byte[] decode(byte[], int, int, int)
    {
        byte[] $r0, $r2;
        cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Decoder r1;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        r1 = new cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Decoder;

        $i3 = $i1 * 3;

        $i3 = $i3 / 4;

        $r2 = newarray (byte)[$i3];

        specialinvoke r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Decoder: void <init>(int,byte[])>($i2, $r2);

        $z0 = virtualinvoke r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Decoder: boolean process(byte[],int,int,boolean)>($r0, $i0, $i1, 1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad base-64");

        throw $r3;

     label1:
        $i0 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Decoder: int op>;

        $r0 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Decoder: byte[] output>;

        $i1 = lengthof $r0;

        if $i0 != $i1 goto label2;

        $r0 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Decoder: byte[] output>;

        return $r0;

     label2:
        $i0 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Decoder: int op>;

        $r0 = newarray (byte)[$i0];

        $r2 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Decoder: byte[] output>;

        $i0 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Decoder: int op>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r0, 0, $i0);

        return $r0;
    }

    public static byte[] encode(byte[], int)
    {
        int $i0, $i1;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = lengthof $r0;

        $r0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: byte[] encode(byte[],int,int,int)>($r0, 0, $i1, $i0);

        return $r0;
    }

    public static byte[] encode(byte[], int, int, int)
    {
        byte[] $r0, $r2;
        cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Encoder r1, $r3;
        java.lang.AssertionError $r4;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r3 = new cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Encoder;

        r1 = $r3;

        specialinvoke $r3.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Encoder: void <init>(int,byte[])>($i2, null);

        $i2 = $i1 / 3;

        $i2 = $i2 * 4;

        $z0 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Encoder: boolean do_padding>;

        if $z0 == 0 goto label4;

        $i3 = $i1 % 3;

        if $i3 <= 0 goto label1;

        $i2 = $i2 + 4;

     label1:
        $z0 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Encoder: boolean do_newline>;

        if $z0 == 0 goto label3;

        if $i1 <= 0 goto label3;

        $i3 = -1;

        $i3 = $i1 + $i3;

        $i3 = $i3 / 57;

        $i3 = $i3 + 1;

        $z0 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Encoder: boolean do_cr>;

        if $z0 == 0 goto label8;

        $b4 = 2;

     label2:
        $i3 = $b4 * $i3;

        $i2 = $i2 + $i3;

     label3:
        $r2 = newarray (byte)[$i2];

        r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Encoder: byte[] output> = $r2;

        virtualinvoke r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Encoder: boolean process(byte[],int,int,boolean)>($r0, $i0, $i1, 1);

        $z0 = <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: boolean $assertionsDisabled>;

        if $z0 != 0 goto label9;

        $i0 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Encoder: int op>;

        if $i0 == $i2 goto label9;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label4:
        $i3 = $i1 % 3;

        lookupswitch($i3)
        {
            case 0: goto label1;
            case 1: goto label6;
            case 2: goto label7;
            default: goto label5;
        };

     label5:
        goto label1;

     label6:
        $i2 = $i2 + 2;

        goto label1;

     label7:
        $i2 = $i2 + 3;

        goto label1;

     label8:
        $b4 = 1;

        goto label2;

     label9:
        $r0 = r1.<cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64$Encoder: byte[] output>;

        return $r0;
    }

    public static java.lang.String encodeToString(byte[], int)
    {
        java.lang.Throwable r1;
        byte[] $r0;
        int $i0;
        java.lang.String $r2;
        java.lang.AssertionError $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 = new java.lang.String;

     label1:
        $r0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: byte[] encode(byte[],int)>($r0, $i0);

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "US-ASCII");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String encodeToString(byte[], int, int, int)
    {
        java.lang.Throwable r1;
        byte[] $r0;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        java.lang.AssertionError $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = new java.lang.String;

     label1:
        $r0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Base64: byte[] encode(byte[],int,int,int)>($r0, $i0, $i1, $i2);

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "US-ASCII");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
