class com.mt.airad.IlllIllIIIlIIIII extends java.lang.Object
{

    private void <init>()
    {
        com.mt.airad.IlllIllIIIlIIIII r0;

        r0 := @this: com.mt.airad.IlllIllIIIlIIIII;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static java.lang.reflect.Field _$1(java.lang.Class, java.lang.String)
    {
        java.lang.Throwable $r3;
        java.lang.Class $r1;
        java.lang.String $r0;
        java.lang.reflect.Field $r2;

        $r1 := @parameter0: java.lang.Class;

        $r0 := @parameter1: java.lang.String;

     label1:
        if $r1 == class "Ljava/lang/Object;" goto label5;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r0);

     label3:
        return $r2;

     label4:
        $r3 := @caughtexception;

        $r1 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label5:
        return null;

        catch java.lang.NoSuchFieldException from label2 to label3 with label4;
    }

    protected static java.lang.reflect.Field _$1(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.Class $r2;
        java.lang.String $r1;
        java.lang.reflect.Field $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <com.mt.airad.IlllIllIIIlIIIII: java.lang.reflect.Field _$1(java.lang.Class,java.lang.String)>($r2, $r1);

        return $r3;
    }

    protected static void _$1(java.lang.reflect.Field)
    {
        int $i0;
        java.lang.Class $r1;
        java.lang.reflect.Field $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Field;

        $i0 = virtualinvoke $r0.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 != 0 goto label2;

     label1:
        virtualinvoke $r0.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        return;
    }

    protected static boolean _$1(java.lang.Object, java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.lang.Object $r0, $r2;
        java.lang.String $r1;
        java.lang.reflect.Field $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Object;

        $r3 = staticinvoke <com.mt.airad.IlllIllIIIlIIIII: java.lang.reflect.Field _$1(java.lang.Object,java.lang.String)>($r0, $r1);

        if $r3 != null goto label1;

        return 0;

     label1:
        staticinvoke <com.mt.airad.IlllIllIIIlIIIII: void _$1(java.lang.reflect.Field)>($r3);

     label2:
        virtualinvoke $r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r0, $r2);

     label3:
        return 1;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.IllegalAccessException from label2 to label3 with label4;
    }
}
