public class proguard.ant.ClassPathElement extends org.apache.tools.ant.types.Path
{
    static java.lang.Class class$org$apache$tools$ant$types$DataType;
    private java.lang.String earFilter;
    private java.lang.String filter;
    private java.lang.String jarFilter;
    private java.lang.String warFilter;
    private java.lang.String zipFilter;

    public void <init>(org.apache.tools.ant.Project)
    {
        org.apache.tools.ant.Project $r1;
        proguard.ant.ClassPathElement r0;

        r0 := @this: proguard.ant.ClassPathElement;

        $r1 := @parameter0: org.apache.tools.ant.Project;

        specialinvoke r0.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r1);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r2;
        java.lang.ClassNotFoundException $r3;
        java.lang.String $r0;
        java.lang.NoClassDefFoundError $r1;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r1 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke $r3.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r1.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r1;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public void appendClassPathEntriesTo(proguard.ClassPath, boolean)
    {
        java.lang.Throwable $r21;
        proguard.ClassPath $r1;
        proguard.ant.ClassPathElement r0;
        java.lang.String[] $r11;
        org.apache.tools.ant.types.Path $r10;
        proguard.ClassPathEntry $r2, $r20;
        java.lang.StringBuffer $r12, $r17;
        int $i0, $i1;
        org.apache.tools.ant.Project $r3;
        java.lang.String $r8;
        boolean $z0, $z1;
        org.apache.tools.ant.BuildException $r18;
        org.apache.tools.ant.DirectoryScanner $r14;
        java.io.File $r4, $r15, $r19;
        java.util.List $r16;
        org.apache.tools.ant.types.AbstractFileSet $r13;
        java.lang.Class $r5, $r6, $r7;
        java.lang.Object $r9;

        r0 := @this: proguard.ant.ClassPathElement;

        $r1 := @parameter0: proguard.ClassPath;

        $z0 := @parameter1: boolean;

        $r3 = virtualinvoke r0.<proguard.ant.ClassPathElement: org.apache.tools.ant.Project getProject()>();

        $r4 = virtualinvoke $r3.<org.apache.tools.ant.Project: java.io.File getBaseDir()>();

        $z1 = virtualinvoke r0.<proguard.ant.ClassPathElement: boolean isReference()>();

        if $z1 == 0 goto label08;

        $r5 = <proguard.ant.ClassPathElement: java.lang.Class class$org$apache$tools$ant$types$DataType>;

        if $r5 != null goto label04;

        $r6 = staticinvoke <proguard.ant.ClassPathElement: java.lang.Class class$(java.lang.String)>("org.apache.tools.ant.types.DataType");

        $r5 = $r6;

        <proguard.ant.ClassPathElement: java.lang.Class class$org$apache$tools$ant$types$DataType> = $r6;

     label01:
        $r6 = <proguard.ant.ClassPathElement: java.lang.Class class$org$apache$tools$ant$types$DataType>;

        if $r6 != null goto label05;

        $r6 = staticinvoke <proguard.ant.ClassPathElement: java.lang.Class class$(java.lang.String)>("org.apache.tools.ant.types.DataType");

        $r7 = $r6;

        <proguard.ant.ClassPathElement: java.lang.Class class$org$apache$tools$ant$types$DataType> = $r6;

     label02:
        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke r0.<proguard.ant.ClassPathElement: java.lang.Object getCheckedRef(java.lang.Class,java.lang.String)>($r5, $r8);

        $z1 = $r9 instanceof org.apache.tools.ant.types.Path;

        if $z1 == 0 goto label06;

        $r10 = (org.apache.tools.ant.types.Path) $r9;

        $r11 = virtualinvoke $r10.<org.apache.tools.ant.types.Path: java.lang.String[] list()>();

     label03:
        if $z0 == 0 goto label09;

        $i0 = lengthof $r11;

        if $i0 == 1 goto label09;

        $r18 = new org.apache.tools.ant.BuildException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The <outjar> element must specify exactly one file or directory [");

        $i0 = lengthof $r11;

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r8);

        $r21 = (java.lang.Throwable) $r18;

        throw $r21;

     label04:
        $r5 = <proguard.ant.ClassPathElement: java.lang.Class class$org$apache$tools$ant$types$DataType>;

        goto label01;

     label05:
        $r7 = <proguard.ant.ClassPathElement: java.lang.Class class$org$apache$tools$ant$types$DataType>;

        goto label02;

     label06:
        $z1 = $r9 instanceof org.apache.tools.ant.types.AbstractFileSet;

        if $z1 == 0 goto label07;

        $r13 = (org.apache.tools.ant.types.AbstractFileSet) $r9;

        $r3 = virtualinvoke r0.<proguard.ant.ClassPathElement: org.apache.tools.ant.Project getProject()>();

        $r14 = virtualinvoke $r13.<org.apache.tools.ant.types.AbstractFileSet: org.apache.tools.ant.DirectoryScanner getDirectoryScanner(org.apache.tools.ant.Project)>($r3);

        $r4 = virtualinvoke $r14.<org.apache.tools.ant.DirectoryScanner: java.io.File getBasedir()>();

        $r11 = virtualinvoke $r14.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] getIncludedFiles()>();

        goto label03;

     label07:
        $r18 = new org.apache.tools.ant.BuildException;

        specialinvoke $r18.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("The refid attribute doesn\'t point to a <path> element or a <fileset> element");

        $r21 = (java.lang.Throwable) $r18;

        throw $r21;

     label08:
        $r11 = virtualinvoke r0.<proguard.ant.ClassPathElement: java.lang.String[] list()>();

        goto label03;

     label09:
        $i0 = 0;

     label10:
        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label13;

        $r8 = $r11[$i0];

        $r19 = new java.io.File;

        $r15 = $r19;

        specialinvoke $r19.<java.io.File: void <init>(java.lang.String)>($r8);

        $r20 = new proguard.ClassPathEntry;

        $r2 = $r20;

        $z1 = virtualinvoke $r15.<java.io.File: boolean isAbsolute()>();

        if $z1 == 0 goto label12;

     label11:
        specialinvoke $r20.<proguard.ClassPathEntry: void <init>(java.io.File,boolean)>($r15, $z0);

        $r8 = r0.<proguard.ant.ClassPathElement: java.lang.String filter>;

        $r16 = staticinvoke <proguard.util.ListUtil: java.util.List commaSeparatedList(java.lang.String)>($r8);

        virtualinvoke $r2.<proguard.ClassPathEntry: void setFilter(java.util.List)>($r16);

        $r8 = r0.<proguard.ant.ClassPathElement: java.lang.String jarFilter>;

        $r16 = staticinvoke <proguard.util.ListUtil: java.util.List commaSeparatedList(java.lang.String)>($r8);

        virtualinvoke $r2.<proguard.ClassPathEntry: void setJarFilter(java.util.List)>($r16);

        $r8 = r0.<proguard.ant.ClassPathElement: java.lang.String warFilter>;

        $r16 = staticinvoke <proguard.util.ListUtil: java.util.List commaSeparatedList(java.lang.String)>($r8);

        virtualinvoke $r2.<proguard.ClassPathEntry: void setWarFilter(java.util.List)>($r16);

        $r8 = r0.<proguard.ant.ClassPathElement: java.lang.String earFilter>;

        $r16 = staticinvoke <proguard.util.ListUtil: java.util.List commaSeparatedList(java.lang.String)>($r8);

        virtualinvoke $r2.<proguard.ClassPathEntry: void setEarFilter(java.util.List)>($r16);

        $r8 = r0.<proguard.ant.ClassPathElement: java.lang.String zipFilter>;

        $r16 = staticinvoke <proguard.util.ListUtil: java.util.List commaSeparatedList(java.lang.String)>($r8);

        virtualinvoke $r2.<proguard.ClassPathEntry: void setZipFilter(java.util.List)>($r16);

        virtualinvoke $r1.<proguard.ClassPath: boolean add(proguard.ClassPathEntry)>($r2);

        $i0 = $i0 + 1;

        goto label10;

     label12:
        $r19 = new java.io.File;

        specialinvoke $r19.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r8);

        $r15 = $r19;

        goto label11;

     label13:
        return;
    }

    public void setDir(java.io.File)
    {
        proguard.ant.ClassPathElement r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ClassPathElement;

        $r1 := @parameter0: java.io.File;

        virtualinvoke r0.<proguard.ant.ClassPathElement: void setLocation(java.io.File)>($r1);

        return;
    }

    public void setEarfilter(java.lang.String)
    {
        proguard.ant.ClassPathElement r0;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ClassPathElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassPathElement: java.lang.String earFilter> = $r1;

        return;
    }

    public void setFile(java.io.File)
    {
        proguard.ant.ClassPathElement r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ClassPathElement;

        $r1 := @parameter0: java.io.File;

        virtualinvoke r0.<proguard.ant.ClassPathElement: void setLocation(java.io.File)>($r1);

        return;
    }

    public void setFilter(java.lang.String)
    {
        proguard.ant.ClassPathElement r0;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ClassPathElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassPathElement: java.lang.String filter> = $r1;

        return;
    }

    public void setJarfilter(java.lang.String)
    {
        proguard.ant.ClassPathElement r0;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ClassPathElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassPathElement: java.lang.String jarFilter> = $r1;

        return;
    }

    public void setName(java.io.File)
    {
        proguard.ant.ClassPathElement r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ClassPathElement;

        $r1 := @parameter0: java.io.File;

        virtualinvoke r0.<proguard.ant.ClassPathElement: void setLocation(java.io.File)>($r1);

        return;
    }

    public void setWarfilter(java.lang.String)
    {
        proguard.ant.ClassPathElement r0;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ClassPathElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassPathElement: java.lang.String warFilter> = $r1;

        return;
    }

    public void setZipfilter(java.lang.String)
    {
        proguard.ant.ClassPathElement r0;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ClassPathElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassPathElement: java.lang.String zipFilter> = $r1;

        return;
    }
}
