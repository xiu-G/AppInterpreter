public class cn.hi321.browser.media.http.BinaryHttpResponseHandler extends cn.hi321.browser.media.http.AsyncHttpResponseHandler
{
    private static java.lang.String[] mAllowedContentTypes;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "image/jpeg";

        $r0[1] = "image/png";

        <cn.hi321.browser.media.http.BinaryHttpResponseHandler: java.lang.String[] mAllowedContentTypes> = $r0;

        return;
    }

    public void <init>()
    {
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        specialinvoke r0.<cn.hi321.browser.media.http.AsyncHttpResponseHandler: void <init>()>();

        return;
    }

    public void <init>(java.lang.String[])
    {
        java.lang.String[] $r1;
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        $r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void <init>()>();

        <cn.hi321.browser.media.http.BinaryHttpResponseHandler: java.lang.String[] mAllowedContentTypes> = $r1;

        return;
    }

    protected void handleFailureMessage(java.lang.Throwable, byte[])
    {
        java.lang.Throwable $r1;
        byte[] $r2;
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: byte[];

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void onFailure(java.lang.Throwable,byte[])>($r1, $r2);

        return;
    }

    protected void handleMessage(android.os.Message)
    {
        java.lang.Throwable $r6;
        byte[] $r5;
        java.lang.Object[] r3;
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;
        java.lang.Integer $r4;
        android.os.Message $r1;
        int $i0;
        java.lang.Object r2;
        java.lang.String $r7;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        $r1 := @parameter0: android.os.Message;

        $i0 = $r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        specialinvoke r0.<cn.hi321.browser.media.http.AsyncHttpResponseHandler: void handleMessage(android.os.Message)>($r1);

        return;

     label2:
        r2 = $r1.<android.os.Message: java.lang.Object obj>;

        r3 = (java.lang.Object[]) r2;

        r2 = r3[0];

        $r4 = (java.lang.Integer) r2;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r2 = r3[1];

        $r5 = (byte[]) r2;

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void handleSuccessMessage(int,byte[])>($i0, $r5);

        return;

     label3:
        r2 = $r1.<android.os.Message: java.lang.Object obj>;

        r3 = (java.lang.Object[]) r2;

        r2 = r3[0];

        $r6 = (java.lang.Throwable) r2;

        r2 = r3[1];

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void handleFailureMessage(java.lang.Throwable,java.lang.String)>($r6, $r7);

        return;
    }

    protected void handleSuccessMessage(int, byte[])
    {
        int $i0;
        byte[] $r1;
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void onSuccess(int,byte[])>($i0, $r1);

        return;
    }

    public void onFailure(java.lang.Throwable, byte[])
    {
        java.lang.Throwable $r1;
        byte[] $r2;
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: byte[];

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void onFailure(java.lang.Throwable)>($r1);

        return;
    }

    public void onSuccess(int, byte[])
    {
        int $i0;
        byte[] $r1;
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void onSuccess(byte[])>($r1);

        return;
    }

    public void onSuccess(byte[])
    {
        byte[] $r1;
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        $r1 := @parameter0: byte[];

        return;
    }

    protected void sendFailureMessage(java.lang.Throwable, byte[])
    {
        java.lang.Throwable $r1;
        byte[] $r2;
        java.lang.Object[] $r4;
        android.os.Message $r3;
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: byte[];

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r4[1] = $r2;

        $r3 = virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r4);

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void sendMessage(android.os.Message)>($r3);

        return;
    }

    void sendResponseMessage(org.apache.http.HttpResponse)
    {
        java.lang.Throwable r4;
        byte[] r8, $r13;
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;
        java.lang.String[] $r10;
        org.apache.http.Header r3;
        org.apache.http.StatusLine $r6;
        int $i0, $i1;
        java.lang.String r2, $r11;
        boolean z0, $z1;
        org.apache.http.Header[] $r7;
        org.apache.http.client.HttpResponseException $r9;
        org.apache.http.HttpEntity $r12;
        org.apache.http.HttpResponse $r1;
        org.apache.http.entity.BufferedHttpEntity r5;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        $r1 := @parameter0: org.apache.http.HttpResponse;

        $i0 = 0;

        $r6 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r7 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("Content-Type");

        r8 = null;

        $i1 = lengthof $r7;

        if $i1 == 1 goto label01;

        $r9 = new org.apache.http.client.HttpResponseException;

        $i0 = interfaceinvoke $r6.<org.apache.http.StatusLine: int getStatusCode()>();

        specialinvoke $r9.<org.apache.http.client.HttpResponseException: void <init>(int,java.lang.String)>($i0, "None, or more than one, Content-Type Header found!");

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void sendFailureMessage(java.lang.Throwable,byte[])>($r9, null);

        return;

     label01:
        r3 = $r7[0];

        z0 = 0;

        $r10 = <cn.hi321.browser.media.http.BinaryHttpResponseHandler: java.lang.String[] mAllowedContentTypes>;

        $i1 = lengthof $r10;

     label02:
        if $i0 < $i1 goto label03;

        if z0 != 0 goto label05;

        $r9 = new org.apache.http.client.HttpResponseException;

        $i0 = interfaceinvoke $r6.<org.apache.http.StatusLine: int getStatusCode()>();

        specialinvoke $r9.<org.apache.http.client.HttpResponseException: void <init>(int,java.lang.String)>($i0, "Content-Type not allowed!");

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void sendFailureMessage(java.lang.Throwable,byte[])>($r9, null);

        return;

     label03:
        r2 = $r10[$i0];

        $r11 = interfaceinvoke r3.<org.apache.http.Header: java.lang.String getValue()>();

        $z1 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>(r2, $r11);

        if $z1 == 0 goto label04;

        z0 = 1;

     label04:
        $i0 = $i0 + 1;

        goto label02;

     label05:
        r5 = null;

     label06:
        $r12 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label07:
        if $r12 == null goto label09;

        r5 = new org.apache.http.entity.BufferedHttpEntity;

     label08:
        specialinvoke r5.<org.apache.http.entity.BufferedHttpEntity: void <init>(org.apache.http.HttpEntity)>($r12);

     label09:
        $r13 = staticinvoke <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>(r5);

     label10:
        r8 = $r13;

     label11:
        $i0 = interfaceinvoke $r6.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 < 300 goto label13;

        $r9 = new org.apache.http.client.HttpResponseException;

        $i0 = interfaceinvoke $r6.<org.apache.http.StatusLine: int getStatusCode()>();

        r2 = interfaceinvoke $r6.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        specialinvoke $r9.<org.apache.http.client.HttpResponseException: void <init>(int,java.lang.String)>($i0, r2);

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void sendFailureMessage(java.lang.Throwable,byte[])>($r9, r8);

        return;

     label12:
        r4 := @caughtexception;

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void sendFailureMessage(java.lang.Throwable,byte[])>(r4, null);

        goto label11;

     label13:
        $i0 = interfaceinvoke $r6.<org.apache.http.StatusLine: int getStatusCode()>();

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void sendSuccessMessage(int,byte[])>($i0, r8);

        return;

        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.io.IOException from label09 to label10 with label12;
    }

    protected void sendSuccessMessage(int, byte[])
    {
        byte[] $r1;
        java.lang.Object[] $r2;
        android.os.Message $r4;
        cn.hi321.browser.media.http.BinaryHttpResponseHandler r0;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: cn.hi321.browser.media.http.BinaryHttpResponseHandler;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r2[1] = $r1;

        $r4 = virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: android.os.Message obtainMessage(int,java.lang.Object)>(0, $r2);

        virtualinvoke r0.<cn.hi321.browser.media.http.BinaryHttpResponseHandler: void sendMessage(android.os.Message)>($r4);

        return;
    }
}
