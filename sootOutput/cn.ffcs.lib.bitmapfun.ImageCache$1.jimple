class cn.ffcs.lib.bitmapfun.ImageCache$1 extends android.support.v4.util.LruCache
{
    final cn.ffcs.lib.bitmapfun.ImageCache this$0;

    void <init>(cn.ffcs.lib.bitmapfun.ImageCache, int)
    {
        int $i0;
        cn.ffcs.lib.bitmapfun.ImageCache$1 r0;
        cn.ffcs.lib.bitmapfun.ImageCache $r1;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageCache$1;

        $r1 := @parameter0: cn.ffcs.lib.bitmapfun.ImageCache;

        $i0 := @parameter1: int;

        r0.<cn.ffcs.lib.bitmapfun.ImageCache$1: cn.ffcs.lib.bitmapfun.ImageCache this$0> = $r1;

        specialinvoke r0.<android.support.v4.util.LruCache: void <init>(int)>($i0);

        return;
    }

    protected volatile int sizeOf(java.lang.Object, java.lang.Object)
    {
        android.graphics.Bitmap $r4;
        int $i0;
        cn.ffcs.lib.bitmapfun.ImageCache$1 r0;
        java.lang.Object $r1, $r2;
        java.lang.String $r3;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageCache$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) $r1;

        $r4 = (android.graphics.Bitmap) $r2;

        $i0 = virtualinvoke r0.<cn.ffcs.lib.bitmapfun.ImageCache$1: int sizeOf(java.lang.String,android.graphics.Bitmap)>($r3, $r4);

        return $i0;
    }

    protected int sizeOf(java.lang.String, android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r2;
        int $i0;
        cn.ffcs.lib.bitmapfun.ImageCache$1 r0;
        java.lang.String $r1;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageCache$1;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        $i0 = staticinvoke <cn.ffcs.lib.bitmapfun.Utils: int getBitmapSize(android.graphics.Bitmap)>($r2);

        return $i0;
    }
}
