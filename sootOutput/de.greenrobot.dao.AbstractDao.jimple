public abstract class de.greenrobot.dao.AbstractDao extends java.lang.Object
{
    protected final de.greenrobot.dao.internal.DaoConfig config;
    protected final android.database.sqlite.SQLiteDatabase db;
    protected de.greenrobot.dao.identityscope.IdentityScope identityScope;
    protected de.greenrobot.dao.identityscope.IdentityScopeLong identityScopeLong;
    protected final int pkOrdinal;
    protected final de.greenrobot.dao.AbstractDaoSession session;
    protected de.greenrobot.dao.internal.TableStatements statements;

    public void <init>(de.greenrobot.dao.internal.DaoConfig)
    {
        de.greenrobot.dao.internal.DaoConfig $r1;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: de.greenrobot.dao.internal.DaoConfig;

        specialinvoke r0.<de.greenrobot.dao.AbstractDao: void <init>(de.greenrobot.dao.internal.DaoConfig,de.greenrobot.dao.AbstractDaoSession)>($r1, null);

        return;
    }

    public void <init>(de.greenrobot.dao.internal.DaoConfig, de.greenrobot.dao.AbstractDaoSession)
    {
        de.greenrobot.dao.internal.DaoConfig $r1;
        de.greenrobot.dao.AbstractDaoSession $r2;
        de.greenrobot.dao.internal.TableStatements $r6;
        android.database.sqlite.SQLiteDatabase $r4;
        de.greenrobot.dao.identityscope.IdentityScope $r3;
        de.greenrobot.dao.identityscope.IdentityScopeLong $r5;
        de.greenrobot.dao.Property $r7;
        de.greenrobot.dao.AbstractDao r0;
        int $i0;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: de.greenrobot.dao.internal.DaoConfig;

        $r2 := @parameter1: de.greenrobot.dao.AbstractDaoSession;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config> = $r1;

        r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.AbstractDaoSession session> = $r2;

        $r4 = $r1.<de.greenrobot.dao.internal.DaoConfig: android.database.sqlite.SQLiteDatabase db>;

        r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db> = $r4;

        $r3 = virtualinvoke $r1.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.identityscope.IdentityScope getIdentityScope()>();

        r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope> = $r3;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        $z0 = $r3 instanceof de.greenrobot.dao.identityscope.IdentityScopeLong;

        if $z0 == 0 goto label1;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        $r5 = (de.greenrobot.dao.identityscope.IdentityScopeLong) $r3;

        r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScopeLong identityScopeLong> = $r5;

     label1:
        $r6 = $r1.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.internal.TableStatements statements>;

        r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements> = $r6;

        $r7 = $r1.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property pkProperty>;

        if $r7 == null goto label3;

        $r7 = $r1.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property pkProperty>;

        $i0 = $r7.<de.greenrobot.dao.Property: int ordinal>;

     label2:
        r0.<de.greenrobot.dao.AbstractDao: int pkOrdinal> = $i0;

        return;

     label3:
        $i0 = -1;

        goto label2;
    }

    private void deleteByKeyInsideSynchronized(java.lang.Object, android.database.sqlite.SQLiteStatement)
    {
        long $l0;
        de.greenrobot.dao.DaoException $r4;
        java.lang.Long $r3;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r2;
        android.database.sqlite.SQLiteStatement $r1;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: android.database.sqlite.SQLiteStatement;

        $z0 = $r2 instanceof java.lang.Long;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.Long) $r2;

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(1, $l0);

     label1:
        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void execute()>();

        return;

     label2:
        if $r2 != null goto label3;

        $r4 = new de.greenrobot.dao.DaoException;

        specialinvoke $r4.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>("Cannot delete entity, key is null");

        throw $r4;

     label3:
        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(1, $r5);

        goto label1;
    }

    private void deleteInTxInternal(java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Throwable $r10, $r11, $r12;
        java.util.Iterator $r8;
        java.lang.Iterable $r1, $r2;
        de.greenrobot.dao.internal.TableStatements $r3;
        java.util.ArrayList $r5;
        android.database.sqlite.SQLiteDatabase $r6;
        de.greenrobot.dao.identityscope.IdentityScope $r7;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r9;
        android.database.sqlite.SQLiteStatement $r4;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 := @parameter1: java.lang.Iterable;

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void assertSinglePk()>();

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r4 = virtualinvoke $r3.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement getDeleteStatement()>();

        $r5 = null;

        $r6 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label01:
        entermonitor $r4;

     label02:
        $r7 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r7 == null goto label03;

        $r7 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r7.<de.greenrobot.dao.identityscope.IdentityScope: void lock()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

     label03:
        if $r1 == null goto label13;

     label04:
        $r8 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r9 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object getKeyVerified(java.lang.Object)>($r9);

        specialinvoke r0.<de.greenrobot.dao.AbstractDao: void deleteByKeyInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement)>($r9, $r4);

        if $r5 == null goto label05;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);

     label06:
        goto label05;

     label07:
        $r10 := @caughtexception;

     label08:
        $r7 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r7 == null goto label09;

        $r7 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r7.<de.greenrobot.dao.identityscope.IdentityScope: void unlock()>();

     label09:
        throw $r10;

     label10:
        $r11 := @caughtexception;

     label11:
        exitmonitor $r4;

        throw $r11;

     label12:
        $r12 := @caughtexception;

        $r6 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r12;

     label13:
        $r7 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r7 == null goto label14;

        $r7 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r7.<de.greenrobot.dao.identityscope.IdentityScope: void unlock()>();

     label14:
        exitmonitor $r4;

     label15:
        $r6 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label16:
        if $r5 == null goto label20;

     label17:
        $r7 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

     label18:
        if $r7 == null goto label20;

     label19:
        $r7 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r7.<de.greenrobot.dao.identityscope.IdentityScope: void remove(java.lang.Iterable)>($r5);

     label20:
        $r6 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label08 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label15 with label10;
        catch java.lang.Throwable from label15 to label16 with label12;
        catch java.lang.Throwable from label17 to label18 with label12;
        catch java.lang.Throwable from label19 to label20 with label12;
    }

    private long executeInsert(java.lang.Object, android.database.sqlite.SQLiteStatement)
    {
        java.lang.Throwable $r4, $r5, $r6;
        long $l0;
        android.database.sqlite.SQLiteDatabase $r3;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1;
        android.database.sqlite.SQLiteStatement $r2;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: android.database.sqlite.SQLiteStatement;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $z0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>();

        if $z0 == 0 goto label04;

        entermonitor $r2;

     label01:
        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object)>($r2, $r1);

        $l0 = virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

        exitmonitor $r2;

     label02:
        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void updateKeyAfterInsertAndAttach(java.lang.Object,long,boolean)>($r1, $l0, 1);

        return $l0;

     label03:
        $r4 := @caughtexception;

        exitmonitor $r2;

        throw $r4;

     label04:
        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label05:
        entermonitor $r2;

     label06:
        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object)>($r2, $r1);

        $l0 = virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

        exitmonitor $r2;

     label07:
        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label08:
        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label02;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor $r2;

        throw $r5;

     label11:
        $r6 := @caughtexception;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    private void executeInsertInTx(android.database.sqlite.SQLiteStatement, java.lang.Iterable, boolean)
    {
        java.lang.Throwable $r7, $r8, $r9;
        java.util.Iterator $r5;
        long $l0;
        java.lang.Iterable $r2;
        android.database.sqlite.SQLiteDatabase $r3;
        de.greenrobot.dao.identityscope.IdentityScope $r4;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r6;
        android.database.sqlite.SQLiteStatement $r1;
        boolean $z0, $z1;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: android.database.sqlite.SQLiteStatement;

        $r2 := @parameter1: java.lang.Iterable;

        $z0 := @parameter2: boolean;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label01:
        entermonitor $r1;

     label02:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r4 == null goto label03;

        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r4.<de.greenrobot.dao.identityscope.IdentityScope: void lock()>();

     label03:
        $r5 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object)>($r1, $r6);

        if $z0 == 0 goto label12;

        $l0 = virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void updateKeyAfterInsertAndAttach(java.lang.Object,long,boolean)>($r6, $l0, 0);

     label05:
        goto label04;

     label06:
        $r7 := @caughtexception;

     label07:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r4 == null goto label08;

        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r4.<de.greenrobot.dao.identityscope.IdentityScope: void unlock()>();

     label08:
        throw $r7;

     label09:
        $r8 := @caughtexception;

     label10:
        exitmonitor $r1;

        throw $r8;

     label11:
        $r9 := @caughtexception;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r9;

     label12:
        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void execute()>();

     label13:
        goto label04;

     label14:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r4 == null goto label15;

        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r4.<de.greenrobot.dao.identityscope.IdentityScope: void unlock()>();

     label15:
        exitmonitor $r1;

     label16:
        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label17:
        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label07 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label14 to label16 with label09;
        catch java.lang.Throwable from label16 to label17 with label11;
    }

    protected void assertSinglePk()
    {
        de.greenrobot.dao.internal.DaoConfig $r1;
        de.greenrobot.dao.DaoException $r3;
        de.greenrobot.dao.AbstractDao r0;
        int $i0;
        java.lang.String[] $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        $r2 = $r1.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] pkColumns>;

        $i0 = lengthof $r2;

        if $i0 == 1 goto label1;

        $r3 = new de.greenrobot.dao.DaoException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r1 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        $r5 = $r1.<de.greenrobot.dao.internal.DaoConfig: java.lang.String tablename>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") does not have a single-column primary key");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        return;
    }

    protected void attachEntity(java.lang.Object)
    {
        java.lang.Object $r1;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        return;
    }

    protected final void attachEntity(java.lang.Object, java.lang.Object, boolean)
    {
        de.greenrobot.dao.identityscope.IdentityScope $r3;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $z0 := @parameter2: boolean;

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void attachEntity(java.lang.Object)>($r2);

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r3 == null goto label2;

        if $r1 == null goto label2;

        if $z0 == 0 goto label1;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r3.<de.greenrobot.dao.identityscope.IdentityScope: void put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;

     label1:
        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r3.<de.greenrobot.dao.identityscope.IdentityScope: void putNoLock(java.lang.Object,java.lang.Object)>($r1, $r2);

     label2:
        return;
    }

    protected abstract void bindValues(android.database.sqlite.SQLiteStatement, java.lang.Object);

    public long count()
    {
        de.greenrobot.dao.internal.DaoConfig $r3;
        android.database.sqlite.SQLiteDatabase $r1;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.StringBuilder $r2;
        long $l0;
        java.lang.String $r4;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("\'");

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        $r4 = $r3.<de.greenrobot.dao.internal.DaoConfig: java.lang.String tablename>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $l0 = staticinvoke <android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r1, $r4);

        return $l0;
    }

    public void delete(java.lang.Object)
    {
        java.lang.Object $r1;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void assertSinglePk()>();

        $r1 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object getKeyVerified(java.lang.Object)>($r1);

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void deleteByKey(java.lang.Object)>($r1);

        return;
    }

    public void deleteAll()
    {
        de.greenrobot.dao.internal.DaoConfig $r3;
        android.database.sqlite.SQLiteDatabase $r1;
        de.greenrobot.dao.identityscope.IdentityScope $r5;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("DELETE FROM \'");

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        $r4 = $r3.<de.greenrobot.dao.internal.DaoConfig: java.lang.String tablename>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r5 == null goto label1;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r5.<de.greenrobot.dao.identityscope.IdentityScope: void clear()>();

     label1:
        return;
    }

    public void deleteByKey(java.lang.Object)
    {
        java.lang.Throwable $r6, $r7, $r8;
        de.greenrobot.dao.internal.TableStatements $r2;
        android.database.sqlite.SQLiteDatabase $r4;
        de.greenrobot.dao.identityscope.IdentityScope $r5;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1;
        android.database.sqlite.SQLiteStatement $r3;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void assertSinglePk()>();

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r3 = virtualinvoke $r2.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement getDeleteStatement()>();

        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $z0 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>();

        if $z0 == 0 goto label04;

        entermonitor $r3;

     label01:
        specialinvoke r0.<de.greenrobot.dao.AbstractDao: void deleteByKeyInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement)>($r1, $r3);

        exitmonitor $r3;

     label02:
        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r5 == null goto label12;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r5.<de.greenrobot.dao.identityscope.IdentityScope: void remove(java.lang.Object)>($r1);

        return;

     label03:
        $r6 := @caughtexception;

        exitmonitor $r3;

        throw $r6;

     label04:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label05:
        entermonitor $r3;

     label06:
        specialinvoke r0.<de.greenrobot.dao.AbstractDao: void deleteByKeyInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement)>($r1, $r3);

        exitmonitor $r3;

     label07:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label08:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label02;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor $r3;

        throw $r7;

     label11:
        $r8 := @caughtexception;

        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r8;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public void deleteByKeyInTx(java.lang.Iterable)
    {
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Iterable $r1;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<de.greenrobot.dao.AbstractDao: void deleteInTxInternal(java.lang.Iterable,java.lang.Iterable)>(null, $r1);

        return;
    }

    public transient void deleteByKeyInTx(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] $r1;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke r0.<de.greenrobot.dao.AbstractDao: void deleteInTxInternal(java.lang.Iterable,java.lang.Iterable)>(null, $r2);

        return;
    }

    public void deleteInTx(java.lang.Iterable)
    {
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Iterable $r1;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<de.greenrobot.dao.AbstractDao: void deleteInTxInternal(java.lang.Iterable,java.lang.Iterable)>($r1, null);

        return;
    }

    public transient void deleteInTx(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] $r1;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke r0.<de.greenrobot.dao.AbstractDao: void deleteInTxInternal(java.lang.Iterable,java.lang.Iterable)>($r2, null);

        return;
    }

    public boolean detach(java.lang.Object)
    {
        de.greenrobot.dao.identityscope.IdentityScope $r2;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1, $r3;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object getKeyVerified(java.lang.Object)>($r1);

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        $z0 = interfaceinvoke $r2.<de.greenrobot.dao.identityscope.IdentityScope: boolean detach(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $z0;

     label1:
        return 0;
    }

    public java.lang.String[] getAllColumns()
    {
        de.greenrobot.dao.internal.DaoConfig $r1;
        java.lang.String[] r2;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        r2 = $r1.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] allColumns>;

        return r2;
    }

    public android.database.sqlite.SQLiteDatabase getDatabase()
    {
        android.database.sqlite.SQLiteDatabase r1;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        r1 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        return r1;
    }

    protected abstract java.lang.Object getKey(java.lang.Object);

    protected java.lang.Object getKeyVerified(java.lang.Object)
    {
        de.greenrobot.dao.DaoException $r4;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1, $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object getKey(java.lang.Object)>($r1);

        if $r2 != null goto label2;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Entity may not be null");

        throw $r3;

     label1:
        $r4 = new de.greenrobot.dao.DaoException;

        specialinvoke $r4.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>("Entity has no key");

        throw $r4;

     label2:
        return $r2;
    }

    public java.lang.String[] getNonPkColumns()
    {
        de.greenrobot.dao.internal.DaoConfig $r1;
        java.lang.String[] r2;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        r2 = $r1.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] nonPkColumns>;

        return r2;
    }

    public java.lang.String[] getPkColumns()
    {
        de.greenrobot.dao.internal.DaoConfig $r1;
        java.lang.String[] r2;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        r2 = $r1.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] pkColumns>;

        return r2;
    }

    public de.greenrobot.dao.Property getPkProperty()
    {
        de.greenrobot.dao.internal.DaoConfig $r1;
        de.greenrobot.dao.Property r2;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        r2 = $r1.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property pkProperty>;

        return r2;
    }

    public de.greenrobot.dao.Property[] getProperties()
    {
        de.greenrobot.dao.internal.DaoConfig $r1;
        de.greenrobot.dao.Property[] r2;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        r2 = $r1.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property[] properties>;

        return r2;
    }

    public de.greenrobot.dao.AbstractDaoSession getSession()
    {
        de.greenrobot.dao.AbstractDaoSession r1;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        r1 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.AbstractDaoSession session>;

        return r1;
    }

    de.greenrobot.dao.internal.TableStatements getStatements()
    {
        de.greenrobot.dao.internal.DaoConfig $r1;
        de.greenrobot.dao.AbstractDao r0;
        de.greenrobot.dao.internal.TableStatements r2;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        r2 = $r1.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.internal.TableStatements statements>;

        return r2;
    }

    public java.lang.String getTablename()
    {
        de.greenrobot.dao.internal.DaoConfig $r1;
        java.lang.String r2;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        r2 = $r1.<de.greenrobot.dao.internal.DaoConfig: java.lang.String tablename>;

        return r2;
    }

    public long insert(java.lang.Object)
    {
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1;
        long $l0;
        android.database.sqlite.SQLiteStatement $r3;
        de.greenrobot.dao.internal.TableStatements $r2;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r3 = virtualinvoke $r2.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement getInsertStatement()>();

        $l0 = specialinvoke r0.<de.greenrobot.dao.AbstractDao: long executeInsert(java.lang.Object,android.database.sqlite.SQLiteStatement)>($r1, $r3);

        return $l0;
    }

    public void insertInTx(java.lang.Iterable)
    {
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Iterable $r1;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Iterable;

        $z0 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: boolean isEntityUpdateable()>();

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void insertInTx(java.lang.Iterable,boolean)>($r1, $z0);

        return;
    }

    public void insertInTx(java.lang.Iterable, boolean)
    {
        de.greenrobot.dao.AbstractDao r0;
        android.database.sqlite.SQLiteStatement $r2;
        java.lang.Iterable $r1;
        boolean $z0;
        de.greenrobot.dao.internal.TableStatements $r3;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Iterable;

        $z0 := @parameter1: boolean;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r2 = virtualinvoke $r3.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement getInsertStatement()>();

        specialinvoke r0.<de.greenrobot.dao.AbstractDao: void executeInsertInTx(android.database.sqlite.SQLiteStatement,java.lang.Iterable,boolean)>($r2, $r1, $z0);

        return;
    }

    public transient void insertInTx(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] $r1;
        de.greenrobot.dao.AbstractDao r0;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $z0 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: boolean isEntityUpdateable()>();

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void insertInTx(java.lang.Iterable,boolean)>($r2, $z0);

        return;
    }

    public long insertOrReplace(java.lang.Object)
    {
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1;
        long $l0;
        android.database.sqlite.SQLiteStatement $r3;
        de.greenrobot.dao.internal.TableStatements $r2;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r3 = virtualinvoke $r2.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement getInsertOrReplaceStatement()>();

        $l0 = specialinvoke r0.<de.greenrobot.dao.AbstractDao: long executeInsert(java.lang.Object,android.database.sqlite.SQLiteStatement)>($r1, $r3);

        return $l0;
    }

    public void insertOrReplaceInTx(java.lang.Iterable)
    {
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Iterable $r1;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Iterable;

        $z0 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: boolean isEntityUpdateable()>();

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void insertOrReplaceInTx(java.lang.Iterable,boolean)>($r1, $z0);

        return;
    }

    public void insertOrReplaceInTx(java.lang.Iterable, boolean)
    {
        de.greenrobot.dao.AbstractDao r0;
        android.database.sqlite.SQLiteStatement $r2;
        java.lang.Iterable $r1;
        boolean $z0;
        de.greenrobot.dao.internal.TableStatements $r3;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Iterable;

        $z0 := @parameter1: boolean;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r2 = virtualinvoke $r3.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement getInsertOrReplaceStatement()>();

        specialinvoke r0.<de.greenrobot.dao.AbstractDao: void executeInsertInTx(android.database.sqlite.SQLiteStatement,java.lang.Iterable,boolean)>($r2, $r1, $z0);

        return;
    }

    public transient void insertOrReplaceInTx(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] $r1;
        de.greenrobot.dao.AbstractDao r0;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $z0 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: boolean isEntityUpdateable()>();

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void insertOrReplaceInTx(java.lang.Iterable,boolean)>($r2, $z0);

        return;
    }

    public long insertWithoutSettingPk(java.lang.Object)
    {
        java.lang.Throwable $r5, $r6, $r7;
        long $l0;
        de.greenrobot.dao.internal.TableStatements $r3;
        android.database.sqlite.SQLiteDatabase $r2;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1;
        android.database.sqlite.SQLiteStatement $r4;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r4 = virtualinvoke $r3.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement getInsertStatement()>();

        $r2 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $z0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>();

        if $z0 == 0 goto label04;

        entermonitor $r4;

     label01:
        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object)>($r4, $r1);

        $l0 = virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

        exitmonitor $r4;

     label02:
        return $l0;

     label03:
        $r5 := @caughtexception;

        exitmonitor $r4;

        throw $r5;

     label04:
        $r2 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label05:
        entermonitor $r4;

     label06:
        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object)>($r4, $r1);

        $l0 = virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

        exitmonitor $r4;

     label07:
        $r2 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label08:
        $r2 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return $l0;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor $r4;

        throw $r6;

     label11:
        $r7 := @caughtexception;

        $r2 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    protected abstract boolean isEntityUpdateable();

    public java.lang.Object load(java.lang.Object)
    {
        java.lang.String[] $r6;
        de.greenrobot.dao.internal.TableStatements $r4;
        android.database.sqlite.SQLiteDatabase $r8;
        de.greenrobot.dao.identityscope.IdentityScope $r2;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1, $r3;
        java.lang.String $r5, $r7;
        android.database.Cursor $r9;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void assertSinglePk()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r2 == null goto label2;

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        $r3 = interfaceinvoke $r2.<de.greenrobot.dao.identityscope.IdentityScope: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label3;

     label2:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r5 = virtualinvoke $r4.<de.greenrobot.dao.internal.TableStatements: java.lang.String getSelectByKey()>();

        $r6 = newarray (java.lang.String)[1];

        $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r6[0] = $r7;

        $r8 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $r9 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, $r6);

        $r1 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object loadUniqueAndCloseCursor(android.database.Cursor)>($r9);

        return $r1;

     label3:
        return $r3;
    }

    public java.util.List loadAll()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        java.util.List $r5;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.String $r3;
        de.greenrobot.dao.internal.TableStatements $r2;
        android.database.Cursor $r4;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r3 = virtualinvoke $r2.<de.greenrobot.dao.internal.TableStatements: java.lang.String getSelectAll()>();

        $r4 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r3, null);

        $r5 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.util.List loadAllAndCloseCursor(android.database.Cursor)>($r4);

        return $r5;
    }

    protected java.util.List loadAllAndCloseCursor(android.database.Cursor)
    {
        java.lang.Throwable $r3;
        java.util.List $r2;
        de.greenrobot.dao.AbstractDao r0;
        android.database.Cursor $r1;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: android.database.Cursor;

     label1:
        $r2 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.util.List loadAllFromCursor(android.database.Cursor)>($r1);

     label2:
        interfaceinvoke $r1.<android.database.Cursor: void close()>();

        return $r2;

     label3:
        $r3 := @caughtexception;

        interfaceinvoke $r1.<android.database.Cursor: void close()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected java.util.List loadAllFromCursor(android.database.Cursor)
    {
        java.lang.Throwable $r9;
        java.util.ArrayList $r1, $r10;
        android.database.CursorWindow $r4;
        de.greenrobot.dao.AbstractDao r0;
        int $i0, $i1;
        java.lang.String $r8;
        boolean $z0;
        android.database.Cursor $r13;
        android.database.CrossProcessCursor $r3;
        de.greenrobot.dao.identityscope.IdentityScope $r5;
        de.greenrobot.dao.internal.FastCursor $r11;
        java.lang.Object $r2, $r6;
        java.lang.StringBuilder $r7, $r12;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r2 := @parameter0: android.database.Cursor;

        $r13 = (android.database.Cursor) $r2;

        $i0 = interfaceinvoke $r13.<android.database.Cursor: int getCount()>();

        $r10 = new java.util.ArrayList;

        $r1 = $r10;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        $z0 = $r2 instanceof android.database.CrossProcessCursor;

        if $z0 == 0 goto label1;

        $r3 = (android.database.CrossProcessCursor) $r2;

        $r4 = interfaceinvoke $r3.<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>();

        if $r4 == null goto label1;

        $i1 = virtualinvoke $r4.<android.database.CursorWindow: int getNumRows()>();

        if $i1 != $i0 goto label4;

        $r11 = new de.greenrobot.dao.internal.FastCursor;

        $r2 = $r11;

        specialinvoke $r11.<de.greenrobot.dao.internal.FastCursor: void <init>(android.database.CursorWindow)>($r4);

     label1:
        $r13 = (android.database.Cursor) $r2;

        $z0 = interfaceinvoke $r13.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label7;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r5 == null goto label2;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r5.<de.greenrobot.dao.identityscope.IdentityScope: void lock()>();

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r5.<de.greenrobot.dao.identityscope.IdentityScope: void reserveRoom(int)>($i0);

     label2:
        $r13 = (android.database.Cursor) $r2;

        $r6 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object loadCurrent(android.database.Cursor,int,boolean)>($r13, 0, 0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r13 = (android.database.Cursor) $r2;

        $z0 = interfaceinvoke $r13.<android.database.Cursor: boolean moveToNext()>();

     label3:
        if $z0 != 0 goto label2;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r5 == null goto label7;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r5.<de.greenrobot.dao.identityscope.IdentityScope: void unlock()>();

        return $r1;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Window vs. result size: ");

        $i1 = virtualinvoke $r4.<android.database.CursorWindow: int getNumRows()>();

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <de.greenrobot.dao.DaoLog: int d(java.lang.String)>($r8);

        goto label1;

     label5:
        $r9 := @caughtexception;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r5 == null goto label6;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r5.<de.greenrobot.dao.identityscope.IdentityScope: void unlock()>();

     label6:
        throw $r9;

     label7:
        return $r1;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public java.lang.Object loadByRowId(long)
    {
        long $l0;
        java.lang.String[] $r1;
        de.greenrobot.dao.internal.TableStatements $r4;
        android.database.sqlite.SQLiteDatabase $r3;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r6;
        java.lang.String $r2;
        android.database.Cursor $r5;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $l0 := @parameter0: long;

        $r1 = newarray (java.lang.String)[1];

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r1[0] = $r2;

        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r2 = virtualinvoke $r4.<de.greenrobot.dao.internal.TableStatements: java.lang.String getSelectByRowId()>();

        $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r2, $r1);

        $r6 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object loadUniqueAndCloseCursor(android.database.Cursor)>($r5);

        return $r6;
    }

    protected final java.lang.Object loadCurrent(android.database.Cursor, int, boolean)
    {
        long $l2;
        de.greenrobot.dao.identityscope.IdentityScopeLong $r2;
        de.greenrobot.dao.identityscope.IdentityScope $r4;
        de.greenrobot.dao.AbstractDao r0;
        int $i0, $i1;
        java.lang.Object $r3, $r5;
        android.database.Cursor $r1;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: android.database.Cursor;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScopeLong identityScopeLong>;

        if $r2 == null goto label05;

        goto label01;

     label01:
        $i1 = r0.<de.greenrobot.dao.AbstractDao: int pkOrdinal>;

        $i1 = $i1 + 0;

        $l2 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i1);

        if $z0 == 0 goto label03;

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScopeLong identityScopeLong>;

        $r3 = virtualinvoke $r2.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.lang.Object get2(long)>($l2);

     label02:
        if $r3 != null goto label10;

        $r3 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object readEntity(android.database.Cursor,int)>($r1, 0);

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void attachEntity(java.lang.Object)>($r3);

        if $z0 == 0 goto label04;

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScopeLong identityScopeLong>;

        virtualinvoke $r2.<de.greenrobot.dao.identityscope.IdentityScopeLong: void put2(long,java.lang.Object)>($l2, $r3);

        return $r3;

     label03:
        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScopeLong identityScopeLong>;

        $r3 = virtualinvoke $r2.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.lang.Object get2NoLock(long)>($l2);

        goto label02;

     label04:
        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScopeLong identityScopeLong>;

        virtualinvoke $r2.<de.greenrobot.dao.identityscope.IdentityScopeLong: void put2NoLock(long,java.lang.Object)>($l2, $r3);

        return $r3;

     label05:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r4 == null goto label09;

        $r3 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object readKey(android.database.Cursor,int)>($r1, 0);

        goto label06;

     label06:
        if $z0 == 0 goto label08;

        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        $r5 = interfaceinvoke $r4.<de.greenrobot.dao.identityscope.IdentityScope: java.lang.Object get(java.lang.Object)>($r3);

     label07:
        if $r5 != null goto label11;

        $r5 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object readEntity(android.database.Cursor,int)>($r1, 0);

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void attachEntity(java.lang.Object,java.lang.Object,boolean)>($r3, $r5, $z0);

        return $r5;

     label08:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        $r5 = interfaceinvoke $r4.<de.greenrobot.dao.identityscope.IdentityScope: java.lang.Object getNoLock(java.lang.Object)>($r3);

        goto label07;

     label09:
        $r3 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object readEntity(android.database.Cursor,int)>($r1, 0);

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void attachEntity(java.lang.Object)>($r3);

     label10:
        return $r3;

     label11:
        return $r5;
    }

    protected final java.lang.Object loadCurrentOther(de.greenrobot.dao.AbstractDao, android.database.Cursor, int)
    {
        de.greenrobot.dao.AbstractDao r0, $r1;
        int $i0;
        java.lang.Object $r3;
        android.database.Cursor $r2;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: de.greenrobot.dao.AbstractDao;

        $r2 := @parameter1: android.database.Cursor;

        $i0 := @parameter2: int;

        $r3 = virtualinvoke $r1.<de.greenrobot.dao.AbstractDao: java.lang.Object loadCurrent(android.database.Cursor,int,boolean)>($r2, $i0, 1);

        return $r3;
    }

    protected java.lang.Object loadUnique(android.database.Cursor)
    {
        de.greenrobot.dao.DaoException $r2;
        de.greenrobot.dao.AbstractDao r0;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.Object $r5;
        java.lang.String $r4;
        android.database.Cursor $r1;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: android.database.Cursor;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean isLast()>();

        if $z0 != 0 goto label2;

        $r2 = new de.greenrobot.dao.DaoException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected unique result, but count was ");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getCount()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r5 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object loadCurrent(android.database.Cursor,int,boolean)>($r1, 0, 1);

        return $r5;
    }

    protected java.lang.Object loadUniqueAndCloseCursor(android.database.Cursor)
    {
        java.lang.Throwable $r3;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r2;
        android.database.Cursor $r1;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: android.database.Cursor;

     label1:
        $r2 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object loadUnique(android.database.Cursor)>($r1);

     label2:
        interfaceinvoke $r1.<android.database.Cursor: void close()>();

        return $r2;

     label3:
        $r3 := @caughtexception;

        interfaceinvoke $r1.<android.database.Cursor: void close()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public de.greenrobot.dao.query.QueryBuilder queryBuilder()
    {
        de.greenrobot.dao.AbstractDao r0;
        de.greenrobot.dao.query.QueryBuilder $r1;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 = staticinvoke <de.greenrobot.dao.query.QueryBuilder: de.greenrobot.dao.query.QueryBuilder internalCreate(de.greenrobot.dao.AbstractDao)>(r0);

        return $r1;
    }

    public transient java.util.List queryRaw(java.lang.String, java.lang.String[])
    {
        java.lang.String[] $r2;
        de.greenrobot.dao.internal.TableStatements $r5;
        android.database.sqlite.SQLiteDatabase $r3;
        java.util.List $r8;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r6;
        android.database.Cursor $r7;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $r3 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r6 = virtualinvoke $r5.<de.greenrobot.dao.internal.TableStatements: java.lang.String getSelectAll()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, $r2);

        $r8 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.util.List loadAllAndCloseCursor(android.database.Cursor)>($r7);

        return $r8;
    }

    public transient de.greenrobot.dao.query.Query queryRawCreate(java.lang.String, java.lang.Object[])
    {
        java.util.List $r3;
        java.lang.Object[] $r2;
        de.greenrobot.dao.query.Query $r4;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.String $r1;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r4 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.query.Query queryRawCreateListArgs(java.lang.String,java.util.Collection)>($r1, $r3);

        return $r4;
    }

    public de.greenrobot.dao.query.Query queryRawCreateListArgs(java.lang.String, java.util.Collection)
    {
        java.lang.Object[] $r6;
        de.greenrobot.dao.query.Query $r7;
        java.util.Collection $r2;
        de.greenrobot.dao.internal.TableStatements $r4;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Collection;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r5 = virtualinvoke $r4.<de.greenrobot.dao.internal.TableStatements: java.lang.String getSelectAll()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray()>();

        $r7 = staticinvoke <de.greenrobot.dao.query.Query: de.greenrobot.dao.query.Query internalCreate(de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.Object[])>(r0, $r1, $r6);

        return $r7;
    }

    protected abstract java.lang.Object readEntity(android.database.Cursor, int);

    protected abstract void readEntity(android.database.Cursor, java.lang.Object, int);

    protected abstract java.lang.Object readKey(android.database.Cursor, int);

    public void refresh(java.lang.Object)
    {
        java.lang.Throwable $r12;
        java.lang.String[] $r5;
        de.greenrobot.dao.internal.TableStatements $r3;
        android.database.sqlite.SQLiteDatabase $r7;
        de.greenrobot.dao.DaoException $r9;
        de.greenrobot.dao.AbstractDao r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.StringBuilder $r10;
        java.lang.Class $r11;
        java.lang.String $r4, $r6;
        android.database.Cursor $r8;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void assertSinglePk()>();

        $r2 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object getKeyVerified(java.lang.Object)>($r1);

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r4 = virtualinvoke $r3.<de.greenrobot.dao.internal.TableStatements: java.lang.String getSelectByKey()>();

        $r5 = newarray (java.lang.String)[1];

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r5[0] = $r6;

        $r7 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $r8 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r4, $r5);

     label1:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

     label2:
        if $z0 != 0 goto label5;

     label3:
        $r9 = new de.greenrobot.dao.DaoException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Entity does not exist in the database anymore: ");

        $r11 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with key ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>($r4);

        throw $r9;

     label4:
        $r12 := @caughtexception;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        throw $r12;

     label5:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean isLast()>();

     label6:
        if $z0 != 0 goto label8;

     label7:
        $r9 = new de.greenrobot.dao.DaoException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected unique result, but count was ");

        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getCount()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>($r4);

        throw $r9;

     label8:
        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void readEntity(android.database.Cursor,java.lang.Object,int)>($r8, $r1, 0);

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void attachEntity(java.lang.Object,java.lang.Object,boolean)>($r2, $r1, 1);

     label9:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label9 with label4;
    }

    public void update(java.lang.Object)
    {
        java.lang.Throwable $r5, $r6, $r7;
        de.greenrobot.dao.internal.TableStatements $r2;
        android.database.sqlite.SQLiteDatabase $r4;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1;
        android.database.sqlite.SQLiteStatement $r3;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void assertSinglePk()>();

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r3 = virtualinvoke $r2.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement getUpdateStatement()>();

        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        $z0 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>();

        if $z0 == 0 goto label04;

        entermonitor $r3;

     label01:
        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void updateInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement,boolean)>($r1, $r3, 1);

        exitmonitor $r3;

     label02:
        return;

     label03:
        $r5 := @caughtexception;

        exitmonitor $r3;

        throw $r5;

     label04:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label05:
        entermonitor $r3;

     label06:
        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void updateInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement,boolean)>($r1, $r3, 1);

        exitmonitor $r3;

     label07:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label08:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor $r3;

        throw $r6;

     label11:
        $r7 := @caughtexception;

        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public void updateInTx(java.lang.Iterable)
    {
        java.lang.Throwable $r8, $r9, $r10;
        java.util.Iterator $r6;
        java.lang.Iterable $r1;
        de.greenrobot.dao.internal.TableStatements $r2;
        android.database.sqlite.SQLiteDatabase $r4;
        de.greenrobot.dao.identityscope.IdentityScope $r5;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r7;
        android.database.sqlite.SQLiteStatement $r3;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Iterable;

        $r2 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.TableStatements statements>;

        $r3 = virtualinvoke $r2.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement getUpdateStatement()>();

        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label01:
        entermonitor $r3;

     label02:
        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r5 == null goto label03;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r5.<de.greenrobot.dao.identityscope.IdentityScope: void lock()>();

     label03:
        $r6 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void updateInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement,boolean)>($r7, $r3, 0);

     label05:
        goto label04;

     label06:
        $r8 := @caughtexception;

     label07:
        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r5 == null goto label08;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r5.<de.greenrobot.dao.identityscope.IdentityScope: void unlock()>();

     label08:
        throw $r8;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor $r3;

        throw $r9;

     label11:
        $r10 := @caughtexception;

        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r10;

     label12:
        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        if $r5 == null goto label13;

        $r5 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        interfaceinvoke $r5.<de.greenrobot.dao.identityscope.IdentityScope: void unlock()>();

     label13:
        exitmonitor $r3;

     label14:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label15:
        $r4 = r0.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label07 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label14 with label09;
        catch java.lang.Throwable from label14 to label15 with label11;
    }

    public transient void updateInTx(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] $r1;
        de.greenrobot.dao.AbstractDao r0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void updateInTx(java.lang.Iterable)>($r2);

        return;
    }

    protected void updateInsideSynchronized(java.lang.Object, android.database.sqlite.SQLiteStatement, boolean)
    {
        de.greenrobot.dao.internal.DaoConfig $r3;
        java.lang.String[] $r4;
        long $l1;
        de.greenrobot.dao.DaoException $r7;
        java.lang.Long $r6;
        de.greenrobot.dao.AbstractDao r0;
        int $i0;
        java.lang.Object $r1, $r5;
        android.database.sqlite.SQLiteStatement $r2;
        java.lang.String $r8;
        boolean $z0, $z1;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: android.database.sqlite.SQLiteStatement;

        $z0 := @parameter2: boolean;

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object)>($r2, $r1);

        $r3 = r0.<de.greenrobot.dao.AbstractDao: de.greenrobot.dao.internal.DaoConfig config>;

        $r4 = $r3.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] allColumns>;

        $i0 = lengthof $r4;

        $i0 = $i0 + 1;

        $r5 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object getKey(java.lang.Object)>($r1);

        $z1 = $r5 instanceof java.lang.Long;

        if $z1 == 0 goto label2;

        $r6 = (java.lang.Long) $r5;

        $l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>($i0, $l1);

     label1:
        virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: void execute()>();

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void attachEntity(java.lang.Object,java.lang.Object,boolean)>($r5, $r1, $z0);

        return;

     label2:
        if $r5 != null goto label3;

        $r7 = new de.greenrobot.dao.DaoException;

        specialinvoke $r7.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>("Cannot update entity without key - was it inserted before?");

        throw $r7;

     label3:
        $r8 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>($i0, $r8);

        goto label1;
    }

    protected abstract java.lang.Object updateKeyAfterInsert(java.lang.Object, long);

    protected void updateKeyAfterInsertAndAttach(java.lang.Object, long, boolean)
    {
        byte $b1;
        de.greenrobot.dao.AbstractDao r0;
        java.lang.Object $r1, $r2;
        long $l0;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $r2 = virtualinvoke r0.<de.greenrobot.dao.AbstractDao: java.lang.Object updateKeyAfterInsert(java.lang.Object,long)>($r1, $l0);

        virtualinvoke r0.<de.greenrobot.dao.AbstractDao: void attachEntity(java.lang.Object,java.lang.Object,boolean)>($r2, $r1, $z0);

        return;

     label1:
        staticinvoke <de.greenrobot.dao.DaoLog: int w(java.lang.String)>("Could not insert row (executeInsert returned -1)");

        return;
    }
}
