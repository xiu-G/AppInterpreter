public class com.google.tagmanager.TagManager extends java.lang.Object
{
    private static com.google.tagmanager.TagManager sInstance;
    private final com.google.tagmanager.TagManager$ContainerProvider mContainerProvider;
    private final java.util.concurrent.ConcurrentMap mContainers;
    private final android.content.Context mContext;
    private volatile java.lang.String mCtfeServerAddr;
    private final com.google.tagmanager.DataLayer mDataLayer;
    private volatile com.google.tagmanager.TagManager$RefreshMode mRefreshMode;

    void <init>(android.content.Context, com.google.tagmanager.TagManager$ContainerProvider, com.google.tagmanager.DataLayer)
    {
        android.content.Context $r1;
        com.google.tagmanager.TagManager r0;
        java.util.concurrent.ConcurrentHashMap $r6;
        com.google.tagmanager.TagManager$RefreshMode $r5;
        com.google.tagmanager.DataLayer $r3;
        java.lang.NullPointerException $r4;
        com.google.tagmanager.AdwordsClickReferrerListener $r8;
        com.google.tagmanager.TagManager$ContainerProvider $r2;
        com.google.tagmanager.TagManager$1 $r7;

        r0 := @this: com.google.tagmanager.TagManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.google.tagmanager.TagManager$ContainerProvider;

        $r3 := @parameter2: com.google.tagmanager.DataLayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("context cannot be null");

        throw $r4;

     label1:
        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.google.tagmanager.TagManager: android.content.Context mContext> = $r1;

        r0.<com.google.tagmanager.TagManager: com.google.tagmanager.TagManager$ContainerProvider mContainerProvider> = $r2;

        $r5 = <com.google.tagmanager.TagManager$RefreshMode: com.google.tagmanager.TagManager$RefreshMode STANDARD>;

        r0.<com.google.tagmanager.TagManager: com.google.tagmanager.TagManager$RefreshMode mRefreshMode> = $r5;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.google.tagmanager.TagManager: java.util.concurrent.ConcurrentMap mContainers> = $r6;

        r0.<com.google.tagmanager.TagManager: com.google.tagmanager.DataLayer mDataLayer> = $r3;

        $r3 = r0.<com.google.tagmanager.TagManager: com.google.tagmanager.DataLayer mDataLayer>;

        $r7 = new com.google.tagmanager.TagManager$1;

        specialinvoke $r7.<com.google.tagmanager.TagManager$1: void <init>(com.google.tagmanager.TagManager)>(r0);

        virtualinvoke $r3.<com.google.tagmanager.DataLayer: void registerListener(com.google.tagmanager.DataLayer$Listener)>($r7);

        $r3 = r0.<com.google.tagmanager.TagManager: com.google.tagmanager.DataLayer mDataLayer>;

        $r8 = new com.google.tagmanager.AdwordsClickReferrerListener;

        $r1 = r0.<com.google.tagmanager.TagManager: android.content.Context mContext>;

        specialinvoke $r8.<com.google.tagmanager.AdwordsClickReferrerListener: void <init>(android.content.Context)>($r1);

        virtualinvoke $r3.<com.google.tagmanager.DataLayer: void registerListener(com.google.tagmanager.DataLayer$Listener)>($r8);

        return;
    }

    static void access$000(com.google.tagmanager.TagManager, java.lang.String)
    {
        java.lang.String $r1;
        com.google.tagmanager.TagManager $r0;

        $r0 := @parameter0: com.google.tagmanager.TagManager;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.google.tagmanager.TagManager: void refreshTagsInAllContainers(java.lang.String)>($r1);

        return;
    }

    public static com.google.tagmanager.TagManager getInstance(android.content.Context)
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        com.google.tagmanager.TagManager $r1;
        com.google.tagmanager.TagManager$2 $r3;
        com.google.tagmanager.DataLayer $r2;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/google/tagmanager/TagManager;";

     label1:
        $r1 = <com.google.tagmanager.TagManager: com.google.tagmanager.TagManager sInstance>;

        if $r1 != null goto label2;

        $r3 = new com.google.tagmanager.TagManager$2;

        specialinvoke $r3.<com.google.tagmanager.TagManager$2: void <init>()>();

        $r1 = new com.google.tagmanager.TagManager;

        $r2 = new com.google.tagmanager.DataLayer;

        specialinvoke $r2.<com.google.tagmanager.DataLayer: void <init>()>();

        specialinvoke $r1.<com.google.tagmanager.TagManager: void <init>(android.content.Context,com.google.tagmanager.TagManager$ContainerProvider,com.google.tagmanager.DataLayer)>($r0, $r3, $r2);

        <com.google.tagmanager.TagManager: com.google.tagmanager.TagManager sInstance> = $r1;

     label2:
        $r1 = <com.google.tagmanager.TagManager: com.google.tagmanager.TagManager sInstance>;

        exitmonitor class "Lcom/google/tagmanager/TagManager;";

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/google/tagmanager/TagManager;";

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void refreshTagsInAllContainers(java.lang.String)
    {
        java.util.Iterator $r4;
        com.google.tagmanager.TagManager r0;
        java.util.Collection $r3;
        java.util.concurrent.ConcurrentMap $r2;
        com.google.tagmanager.Container $r6;
        java.lang.Object $r5;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.google.tagmanager.TagManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.tagmanager.TagManager: java.util.concurrent.ConcurrentMap mContainers>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.google.tagmanager.Container) $r5;

        virtualinvoke $r6.<com.google.tagmanager.Container: void evaluateTags(java.lang.String)>($r1);

        goto label1;

     label2:
        return;
    }

    public com.google.tagmanager.Container getContainer(java.lang.String)
    {
        com.google.tagmanager.TagManager r0;
        com.google.tagmanager.Container $r4;
        java.lang.Object $r2;
        java.lang.String $r1;
        java.util.concurrent.ConcurrentMap $r3;

        r0 := @this: com.google.tagmanager.TagManager;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.google.tagmanager.TagManager: java.util.concurrent.ConcurrentMap mContainers>;

        $r2 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.google.tagmanager.Container) $r2;

        return $r4;
    }

    public android.content.Context getContext()
    {
        android.content.Context r1;
        com.google.tagmanager.TagManager r0;

        r0 := @this: com.google.tagmanager.TagManager;

        r1 = r0.<com.google.tagmanager.TagManager: android.content.Context mContext>;

        return r1;
    }

    public com.google.tagmanager.DataLayer getDataLayer()
    {
        com.google.tagmanager.TagManager r0;
        com.google.tagmanager.DataLayer r1;

        r0 := @this: com.google.tagmanager.TagManager;

        r1 = r0.<com.google.tagmanager.TagManager: com.google.tagmanager.DataLayer mDataLayer>;

        return r1;
    }

    public com.google.tagmanager.Logger getLogger()
    {
        com.google.tagmanager.TagManager r0;
        com.google.tagmanager.Logger $r1;

        r0 := @this: com.google.tagmanager.TagManager;

        $r1 = staticinvoke <com.google.tagmanager.Log: com.google.tagmanager.Logger getLogger()>();

        return $r1;
    }

    public com.google.tagmanager.TagManager$RefreshMode getRefreshMode()
    {
        com.google.tagmanager.TagManager$RefreshMode r1;
        com.google.tagmanager.TagManager r0;

        r0 := @this: com.google.tagmanager.TagManager;

        r1 = r0.<com.google.tagmanager.TagManager: com.google.tagmanager.TagManager$RefreshMode mRefreshMode>;

        return r1;
    }

    public com.google.tagmanager.Container openContainer(java.lang.String, com.google.tagmanager.Container$Callback)
    {
        android.content.Context $r4;
        com.google.tagmanager.TagManager r0;
        java.lang.IllegalArgumentException $r8;
        java.util.concurrent.ConcurrentMap $r6;
        com.google.tagmanager.Container $r5;
        com.google.tagmanager.Container$Callback $r2;
        com.google.tagmanager.TagManager$ContainerProvider $r3;
        java.lang.Object $r7;
        java.lang.StringBuilder $r9;
        java.lang.String $r1;

        r0 := @this: com.google.tagmanager.TagManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.tagmanager.Container$Callback;

        $r3 = r0.<com.google.tagmanager.TagManager: com.google.tagmanager.TagManager$ContainerProvider mContainerProvider>;

        $r4 = r0.<com.google.tagmanager.TagManager: android.content.Context mContext>;

        $r5 = interfaceinvoke $r3.<com.google.tagmanager.TagManager$ContainerProvider: com.google.tagmanager.Container newContainer(android.content.Context,java.lang.String,com.google.tagmanager.TagManager)>($r4, $r1, r0);

        $r6 = r0.<com.google.tagmanager.TagManager: java.util.concurrent.ConcurrentMap mContainers>;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r1, $r5);

        if $r7 == null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Container id:");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been opened.");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label1:
        $r1 = r0.<com.google.tagmanager.TagManager: java.lang.String mCtfeServerAddr>;

        if $r1 == null goto label2;

        $r1 = r0.<com.google.tagmanager.TagManager: java.lang.String mCtfeServerAddr>;

        virtualinvoke $r5.<com.google.tagmanager.Container: void setCtfeServerAddress(java.lang.String)>($r1);

     label2:
        virtualinvoke $r5.<com.google.tagmanager.Container: void load(com.google.tagmanager.Container$Callback)>($r2);

        return $r5;
    }

    boolean removeContainer(java.lang.String)
    {
        com.google.tagmanager.TagManager r0;
        java.lang.Object $r2;
        java.lang.String $r1;
        java.util.concurrent.ConcurrentMap $r3;

        r0 := @this: com.google.tagmanager.TagManager;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.google.tagmanager.TagManager: java.util.concurrent.ConcurrentMap mContainers>;

        $r2 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    void setCtfeServerAddress(java.lang.String)
    {
        java.lang.String $r1;
        com.google.tagmanager.TagManager r0;

        r0 := @this: com.google.tagmanager.TagManager;

        $r1 := @parameter0: java.lang.String;

        r0.<com.google.tagmanager.TagManager: java.lang.String mCtfeServerAddr> = $r1;

        return;
    }

    public void setLogger(com.google.tagmanager.Logger)
    {
        com.google.tagmanager.TagManager r0;
        com.google.tagmanager.Logger $r1;

        r0 := @this: com.google.tagmanager.TagManager;

        $r1 := @parameter0: com.google.tagmanager.Logger;

        staticinvoke <com.google.tagmanager.Log: void setLogger(com.google.tagmanager.Logger)>($r1);

        return;
    }

    boolean setPreviewData(android.net.Uri)
    {
        com.google.tagmanager.PreviewManager$PreviewMode $r5;
        java.lang.Throwable $r9;
        com.google.tagmanager.TagManager r0;
        android.net.Uri $r1;
        java.util.concurrent.ConcurrentMap $r6;
        int[] $r4;
        int $i0;
        java.lang.String $r3, $r13;
        boolean $z0;
        java.util.Map$Entry $r12;
        java.util.Iterator $r11;
        java.util.Set $r10;
        com.google.tagmanager.Container $r8;
        java.lang.Object $r7;
        com.google.tagmanager.PreviewManager $r2;

        r0 := @this: com.google.tagmanager.TagManager;

        $r1 := @parameter0: android.net.Uri;

        entermonitor r0;

     label01:
        $r2 = staticinvoke <com.google.tagmanager.PreviewManager: com.google.tagmanager.PreviewManager getInstance()>();

        $z0 = virtualinvoke $r2.<com.google.tagmanager.PreviewManager: boolean setPreviewData(android.net.Uri)>($r1);

        if $z0 == 0 goto label12;

        $r3 = virtualinvoke $r2.<com.google.tagmanager.PreviewManager: java.lang.String getContainerId()>();

        $r4 = <com.google.tagmanager.TagManager$3: int[] $SwitchMap$com$google$tagmanager$PreviewManager$PreviewMode>;

        $r5 = virtualinvoke $r2.<com.google.tagmanager.PreviewManager: com.google.tagmanager.PreviewManager$PreviewMode getPreviewMode()>();

        $i0 = virtualinvoke $r5.<com.google.tagmanager.PreviewManager$PreviewMode: int ordinal()>();

        $i0 = $r4[$i0];

     label02:
        lookupswitch($i0)
        {
            case 1: goto label05;
            case 2: goto label08;
            case 3: goto label08;
            default: goto label03;
        };

     label03:
        $z0 = 1;

     label04:
        exitmonitor r0;

        return $z0;

     label05:
        $r6 = r0.<com.google.tagmanager.TagManager: java.util.concurrent.ConcurrentMap mContainers>;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r3);

        $r8 = (com.google.tagmanager.Container) $r7;

        if $r8 == null goto label03;

        virtualinvoke $r8.<com.google.tagmanager.Container: void setCtfeUrlPathAndQuery(java.lang.String)>(null);

        virtualinvoke $r8.<com.google.tagmanager.Container: void refresh()>();

     label06:
        goto label03;

     label07:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

     label08:
        $r6 = r0.<com.google.tagmanager.TagManager: java.util.concurrent.ConcurrentMap mContainers>;

        $r10 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r7 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (com.google.tagmanager.Container) $r7;

        $r7 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r7;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label10;

        $r13 = virtualinvoke $r2.<com.google.tagmanager.PreviewManager: java.lang.String getCTFEUrlPath()>();

        virtualinvoke $r8.<com.google.tagmanager.Container: void setCtfeUrlPathAndQuery(java.lang.String)>($r13);

        virtualinvoke $r8.<com.google.tagmanager.Container: void refresh()>();

        goto label09;

     label10:
        $r13 = virtualinvoke $r8.<com.google.tagmanager.Container: java.lang.String getCtfeUrlPathAndQuery()>();

        if $r13 == null goto label09;

        virtualinvoke $r8.<com.google.tagmanager.Container: void setCtfeUrlPathAndQuery(java.lang.String)>(null);

        virtualinvoke $r8.<com.google.tagmanager.Container: void refresh()>();

     label11:
        goto label09;

     label12:
        $z0 = 0;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label11 with label07;
    }

    public void setRefreshMode(com.google.tagmanager.TagManager$RefreshMode)
    {
        com.google.tagmanager.TagManager$RefreshMode $r1;
        com.google.tagmanager.TagManager r0;

        r0 := @this: com.google.tagmanager.TagManager;

        $r1 := @parameter0: com.google.tagmanager.TagManager$RefreshMode;

        r0.<com.google.tagmanager.TagManager: com.google.tagmanager.TagManager$RefreshMode mRefreshMode> = $r1;

        return;
    }
}
