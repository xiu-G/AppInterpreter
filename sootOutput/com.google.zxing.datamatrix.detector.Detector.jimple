public final class com.google.zxing.datamatrix.detector.Detector extends java.lang.Object
{
    private static final java.lang.Integer[] INTEGERS;
    private final com.google.zxing.common.BitMatrix image;
    private final com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector;

    static void <clinit>()
    {
        java.lang.Integer $r1;
        java.lang.Integer[] $r0;

        $r0 = newarray (java.lang.Integer)[5];

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(0);

        $r0[0] = $r1;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);

        $r0[1] = $r1;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(2);

        $r0[2] = $r1;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(3);

        $r0[3] = $r1;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(4);

        $r0[4] = $r1;

        <com.google.zxing.datamatrix.detector.Detector: java.lang.Integer[] INTEGERS> = $r0;

        return;
    }

    public void <init>(com.google.zxing.common.BitMatrix)
    {
        com.google.zxing.common.BitMatrix $r1;
        com.google.zxing.datamatrix.detector.Detector r0;
        com.google.zxing.common.detector.WhiteRectangleDetector $r2;

        r0 := @this: com.google.zxing.datamatrix.detector.Detector;

        $r1 := @parameter0: com.google.zxing.common.BitMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix image> = $r1;

        $r2 = new com.google.zxing.common.detector.WhiteRectangleDetector;

        specialinvoke $r2.<com.google.zxing.common.detector.WhiteRectangleDetector: void <init>(com.google.zxing.common.BitMatrix)>($r1);

        r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector> = $r2;

        return;
    }

    private com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, int)
    {
        com.google.zxing.ResultPoint $r1, $r2, $r3, $r4, $r5;
        com.google.zxing.datamatrix.detector.Detector r0;
        int $i0, $i1, $i2;
        com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions $r6;
        float $f0, $f1, $f2, $f3;
        boolean $z0;

        r0 := @this: com.google.zxing.datamatrix.detector.Detector;

        $r1 := @parameter0: com.google.zxing.ResultPoint;

        $r2 := @parameter1: com.google.zxing.ResultPoint;

        $r3 := @parameter2: com.google.zxing.ResultPoint;

        $r4 := @parameter3: com.google.zxing.ResultPoint;

        $i0 := @parameter4: int;

        $i1 = staticinvoke <com.google.zxing.datamatrix.detector.Detector: int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r1, $r2);

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i1 = staticinvoke <com.google.zxing.datamatrix.detector.Detector: int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r3, $r4);

        $f1 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getX()>();

        $f2 = virtualinvoke $r3.<com.google.zxing.ResultPoint: float getX()>();

        $f1 = $f1 - $f2;

        $f2 = (float) $i1;

        $f1 = $f1 / $f2;

        $f2 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getY()>();

        $f3 = virtualinvoke $r3.<com.google.zxing.ResultPoint: float getY()>();

        $f2 = $f2 - $f3;

        $f3 = (float) $i1;

        $f2 = $f2 / $f3;

        $r5 = new com.google.zxing.ResultPoint;

        $f3 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getX()>();

        $f1 = $f1 * $f0;

        $f1 = $f1 + $f3;

        $f3 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getY()>();

        $f0 = $f0 * $f2;

        $f0 = $f0 + $f3;

        specialinvoke $r5.<com.google.zxing.ResultPoint: void <init>(float,float)>($f1, $f0);

        $i1 = staticinvoke <com.google.zxing.datamatrix.detector.Detector: int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r1, $r2);

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = staticinvoke <com.google.zxing.datamatrix.detector.Detector: int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r2, $r4);

        $f1 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getX()>();

        $f2 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getX()>();

        $f1 = $f1 - $f2;

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        $f2 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getY()>();

        $f3 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getY()>();

        $f2 = $f2 - $f3;

        $f3 = (float) $i0;

        $f2 = $f2 / $f3;

        $r1 = new com.google.zxing.ResultPoint;

        $f3 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getX()>();

        $f1 = $f1 * $f0;

        $f1 = $f1 + $f3;

        $f3 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getY()>();

        $f0 = $f0 * $f2;

        $f0 = $f0 + $f3;

        specialinvoke $r1.<com.google.zxing.ResultPoint: void <init>(float,float)>($f1, $f0);

        $z0 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: boolean isValid(com.google.zxing.ResultPoint)>($r5);

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: boolean isValid(com.google.zxing.ResultPoint)>($r1);

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        return null;

     label2:
        $z0 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: boolean isValid(com.google.zxing.ResultPoint)>($r1);

        if $z0 != 0 goto label3;

        return $r5;

     label3:
        $r6 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r3, $r5);

        $i0 = virtualinvoke $r6.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int getTransitions()>();

        $r6 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r2, $r5);

        $i1 = virtualinvoke $r6.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int getTransitions()>();

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $r6 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r3, $r1);

        $i1 = virtualinvoke $r6.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int getTransitions()>();

        $r6 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r2, $r1);

        $i2 = virtualinvoke $r6.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int getTransitions()>();

        $i1 = $i1 - $i2;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        if $i0 > $i1 goto label4;

        return $r5;

     label4:
        return $r1;
    }

    private static int distance(com.google.zxing.ResultPoint, com.google.zxing.ResultPoint)
    {
        com.google.zxing.ResultPoint $r0, $r1;
        int $i0;
        float $f0, $f1, $f2, $f3;
        double $d0;

        $r0 := @parameter0: com.google.zxing.ResultPoint;

        $r1 := @parameter1: com.google.zxing.ResultPoint;

        $f0 = virtualinvoke $r0.<com.google.zxing.ResultPoint: float getX()>();

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f0 = $f0 - $f1;

        $f1 = virtualinvoke $r0.<com.google.zxing.ResultPoint: float getX()>();

        $f2 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f1 = $f1 - $f2;

        $f0 = $f0 * $f1;

        $f1 = virtualinvoke $r0.<com.google.zxing.ResultPoint: float getY()>();

        $f2 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $f1 = $f1 - $f2;

        $f2 = virtualinvoke $r0.<com.google.zxing.ResultPoint: float getY()>();

        $f3 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $f2 = $f2 - $f3;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        $i0 = staticinvoke <com.google.zxing.datamatrix.detector.Detector: int round(float)>($f0);

        return $i0;
    }

    private static void increment(java.util.Hashtable, com.google.zxing.ResultPoint)
    {
        com.google.zxing.ResultPoint $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        java.util.Hashtable $r0;
        java.lang.Integer[] $r4;

        $r0 := @parameter0: java.util.Hashtable;

        $r1 := @parameter1: com.google.zxing.ResultPoint;

        $r2 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.lang.Integer) $r2;

        if $r3 != null goto label2;

        $r4 = <com.google.zxing.datamatrix.detector.Detector: java.lang.Integer[] INTEGERS>;

        $r3 = $r4[1];

     label1:
        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;

     label2:
        $r4 = <com.google.zxing.datamatrix.detector.Detector: java.lang.Integer[] INTEGERS>;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i0 = $i0 + 1;

        $r3 = $r4[$i0];

        goto label1;
    }

    private boolean isValid(com.google.zxing.ResultPoint)
    {
        com.google.zxing.ResultPoint $r1;
        com.google.zxing.datamatrix.detector.Detector r0;
        byte $b0;
        int $i1;
        float $f0, $f1;
        com.google.zxing.common.BitMatrix $r2;

        r0 := @this: com.google.zxing.datamatrix.detector.Detector;

        $r1 := @parameter0: com.google.zxing.ResultPoint;

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 < 0 goto label1;

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $r2 = r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix image>;

        $i1 = $r2.<com.google.zxing.common.BitMatrix: int width>;

        $f1 = (float) $i1;

        $b0 = $f0 cmpg $f1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $r2 = r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix image>;

        $i1 = $r2.<com.google.zxing.common.BitMatrix: int height>;

        $f1 = (float) $i1;

        $b0 = $f0 cmpg $f1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static int round(float)
    {
        int $i0;
        float $f0;

        $f0 := @parameter0: float;

        $f0 = 0.5F + $f0;

        $i0 = (int) $f0;

        return $i0;
    }

    private static com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix, com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, int) throws com.google.zxing.NotFoundException
    {
        com.google.zxing.ResultPoint $r1, $r2, $r3, $r4;
        int $i0;
        com.google.zxing.common.GridSampler $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        com.google.zxing.common.BitMatrix $r0;

        $r0 := @parameter0: com.google.zxing.common.BitMatrix;

        $r1 := @parameter1: com.google.zxing.ResultPoint;

        $r2 := @parameter2: com.google.zxing.ResultPoint;

        $r3 := @parameter3: com.google.zxing.ResultPoint;

        $r4 := @parameter4: com.google.zxing.ResultPoint;

        $i0 := @parameter5: int;

        $r5 = staticinvoke <com.google.zxing.common.GridSampler: com.google.zxing.common.GridSampler getInstance()>();

        $f0 = (float) $i0;

        $f0 = $f0 - 0.5F;

        $f1 = (float) $i0;

        $f1 = $f1 - 0.5F;

        $f2 = (float) $i0;

        $f2 = $f2 - 0.5F;

        $f3 = (float) $i0;

        $f3 = $f3 - 0.5F;

        $f4 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f5 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $f6 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getX()>();

        $f7 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getY()>();

        $f8 = virtualinvoke $r3.<com.google.zxing.ResultPoint: float getX()>();

        $f9 = virtualinvoke $r3.<com.google.zxing.ResultPoint: float getY()>();

        $f10 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getX()>();

        $f11 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getY()>();

        $r0 = virtualinvoke $r5.<com.google.zxing.common.GridSampler: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>($r0, $i0, 0.5F, 0.5F, $f0, 0.5F, $f1, $f2, 0.5F, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11);

        return $r0;
    }

    private com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint, com.google.zxing.ResultPoint)
    {
        com.google.zxing.ResultPoint $r1, $r2;
        com.google.zxing.datamatrix.detector.Detector r0;
        byte $b8, $b9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11;
        com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions $r4;
        boolean $z0, $z1, $z2;
        float $f0;
        com.google.zxing.common.BitMatrix $r3;

        r0 := @this: com.google.zxing.datamatrix.detector.Detector;

        $r1 := @parameter0: com.google.zxing.ResultPoint;

        $r2 := @parameter1: com.google.zxing.ResultPoint;

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $i1 = (int) $f0;

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $i2 = (int) $f0;

        $f0 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getX()>();

        $i3 = (int) $f0;

        $f0 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getY()>();

        $i4 = (int) $f0;

        $i0 = $i4 - $i2;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i5 = $i3 - $i1;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        if $i0 <= $i5 goto label12;

        $z0 = 1;

     label01:
        if $z0 == 0 goto label22;

     label02:
        $i0 = $i4 - $i2;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i5 = $i3 - $i1;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        $i6 = neg $i0;

        $i7 = $i6 >> 1;

        if $i1 >= $i3 goto label13;

        $b8 = 1;

     label03:
        if $i2 >= $i4 goto label14;

        $b9 = 1;

     label04:
        $i6 = 0;

        $r3 = r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix image>;

        if $z0 == 0 goto label15;

        $i10 = $i1;

     label05:
        if $z0 == 0 goto label16;

        $i11 = $i2;

     label06:
        $z1 = virtualinvoke $r3.<com.google.zxing.common.BitMatrix: boolean get(int,int)>($i10, $i11);

     label07:
        if $i2 == $i4 goto label21;

        $r3 = r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix image>;

        if $z0 == 0 goto label17;

        $i10 = $i1;

     label08:
        if $z0 == 0 goto label18;

        $i11 = $i2;

     label09:
        $z2 = virtualinvoke $r3.<com.google.zxing.common.BitMatrix: boolean get(int,int)>($i10, $i11);

        if $z2 == $z1 goto label10;

        $i6 = $i6 + 1;

        $z1 = $z2;

     label10:
        $i7 = $i7 + $i5;

        if $i7 <= 0 goto label20;

        if $i1 != $i3 goto label19;

        $i2 = $i6;

     label11:
        $r4 = new com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions;

        specialinvoke $r4.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: void <init>(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,com.google.zxing.datamatrix.detector.Detector$1)>($r1, $r2, $i2, null);

        return $r4;

     label12:
        $z0 = 0;

        goto label01;

     label13:
        $b8 = -1;

        goto label03;

     label14:
        $b9 = -1;

        goto label04;

     label15:
        $i10 = $i2;

        goto label05;

     label16:
        $i11 = $i1;

        goto label06;

     label17:
        $i10 = $i2;

        goto label08;

     label18:
        $i11 = $i1;

        goto label09;

     label19:
        $i1 = $i1 + $b8;

        $i7 = $i7 - $i0;

     label20:
        $i2 = $i2 + $b9;

        goto label07;

     label21:
        $i2 = $i6;

        goto label11;

     label22:
        $i0 = $i4;

        $i4 = $i3;

        $i3 = $i0;

        $i0 = $i2;

        $i2 = $i1;

        $i1 = $i0;

        goto label02;
    }

    public com.google.zxing.common.DetectorResult detect() throws com.google.zxing.NotFoundException
    {
        com.google.zxing.ResultPoint $r3, $r4, $r5, $r6, $r13, $r14, $r15, $r17;
        com.google.zxing.common.detector.WhiteRectangleDetector $r1;
        java.util.Enumeration $r16;
        java.lang.Integer $r18;
        java.util.Vector $r7;
        com.google.zxing.datamatrix.detector.Detector r0;
        com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions $r8, $r11;
        int $i0, $i1, $i2;
        java.util.Hashtable $r12;
        boolean $z0;
        com.google.zxing.common.DetectorResult $r21;
        com.google.zxing.ResultPoint[] $r2;
        com.google.zxing.NotFoundException $r19;
        com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator $r9;
        java.lang.Object $r10;
        com.google.zxing.common.BitMatrix $r20;

        r0 := @this: com.google.zxing.datamatrix.detector.Detector;

        $r1 = r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector>;

        $r2 = virtualinvoke $r1.<com.google.zxing.common.detector.WhiteRectangleDetector: com.google.zxing.ResultPoint[] detect()>();

        $r3 = $r2[0];

        $r4 = $r2[1];

        $r5 = $r2[2];

        $r6 = $r2[3];

        $r7 = new java.util.Vector;

        specialinvoke $r7.<java.util.Vector: void <init>(int)>(4);

        $r8 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r3, $r4);

        virtualinvoke $r7.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $r8 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r3, $r5);

        virtualinvoke $r7.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $r8 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r4, $r6);

        virtualinvoke $r7.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $r8 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r5, $r6);

        virtualinvoke $r7.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $r9 = new com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator;

        specialinvoke $r9.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator: void <init>(com.google.zxing.datamatrix.detector.Detector$1)>(null);

        staticinvoke <com.google.zxing.common.Collections: void insertionSort(java.util.Vector,com.google.zxing.common.Comparator)>($r7, $r9);

        $r10 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        $r8 = (com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) $r10;

        $r10 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(1);

        $r11 = (com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) $r10;

        $r12 = new java.util.Hashtable;

        specialinvoke $r12.<java.util.Hashtable: void <init>()>();

        $r13 = virtualinvoke $r8.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint getFrom()>();

        staticinvoke <com.google.zxing.datamatrix.detector.Detector: void increment(java.util.Hashtable,com.google.zxing.ResultPoint)>($r12, $r13);

        $r13 = virtualinvoke $r8.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint getTo()>();

        staticinvoke <com.google.zxing.datamatrix.detector.Detector: void increment(java.util.Hashtable,com.google.zxing.ResultPoint)>($r12, $r13);

        $r13 = virtualinvoke $r11.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint getFrom()>();

        staticinvoke <com.google.zxing.datamatrix.detector.Detector: void increment(java.util.Hashtable,com.google.zxing.ResultPoint)>($r12, $r13);

        $r13 = virtualinvoke $r11.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint getTo()>();

        staticinvoke <com.google.zxing.datamatrix.detector.Detector: void increment(java.util.Hashtable,com.google.zxing.ResultPoint)>($r12, $r13);

        $r14 = null;

        $r15 = null;

        $r13 = null;

        $r16 = virtualinvoke $r12.<java.util.Hashtable: java.util.Enumeration keys()>();

     label01:
        $z0 = interfaceinvoke $r16.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label04;

        $r10 = interfaceinvoke $r16.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r17 = (com.google.zxing.ResultPoint) $r10;

        $r10 = virtualinvoke $r12.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r17);

        $r18 = (java.lang.Integer) $r10;

        $i0 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        if $i0 != 2 goto label03;

        $r15 = $r17;

        $r17 = $r13;

     label02:
        $r13 = $r17;

        goto label01;

     label03:
        if $r14 != null goto label02;

        $r14 = $r17;

        $r17 = $r13;

        goto label02;

     label04:
        if $r14 == null goto label05;

        if $r15 == null goto label05;

        if $r13 != null goto label06;

     label05:
        $r19 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        throw $r19;

     label06:
        $r2 = newarray (com.google.zxing.ResultPoint)[3];

        $r2[0] = $r14;

        $r2[1] = $r15;

        $r2[2] = $r13;

        staticinvoke <com.google.zxing.ResultPoint: void orderBestPatterns(com.google.zxing.ResultPoint[])>($r2);

        $r13 = $r2[0];

        $r17 = $r2[1];

        $r14 = $r2[2];

        $z0 = virtualinvoke $r12.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label11;

     label07:
        $r8 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r14, $r3);

        $i0 = virtualinvoke $r8.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int getTransitions()>();

        $r8 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r13, $r3);

        $i1 = virtualinvoke $r8.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int getTransitions()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = $i0;

        $i2 = $i0 & 1;

        if $i2 != 1 goto label08;

        $i1 = $i0 + 1;

     label08:
        $i0 = $i1 + 2;

        $r4 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)>($r17, $r13, $r14, $r3, $i0);

        $r5 = $r4;

        if $r4 != null goto label09;

        $r5 = $r3;

     label09:
        $r8 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r14, $r5);

        $i0 = virtualinvoke $r8.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int getTransitions()>();

        $r8 = specialinvoke r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r13, $r5);

        $i1 = virtualinvoke $r8.<com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int getTransitions()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i0 = $i0 + 1;

        $i1 = $i0 & 1;

        if $i1 != 1 goto label10;

        $i0 = $i0 + 1;

     label10:
        $r20 = r0.<com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix image>;

        $r20 = staticinvoke <com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)>($r20, $r14, $r17, $r13, $r5, $i0);

        $r21 = new com.google.zxing.common.DetectorResult;

        $r2 = newarray (com.google.zxing.ResultPoint)[4];

        $r2[0] = $r14;

        $r2[1] = $r17;

        $r2[2] = $r13;

        $r2[3] = $r5;

        specialinvoke $r21.<com.google.zxing.common.DetectorResult: void <init>(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint[])>($r20, $r2);

        return $r21;

     label11:
        $z0 = virtualinvoke $r12.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r4);

        if $z0 != 0 goto label12;

        $r3 = $r4;

        goto label07;

     label12:
        $z0 = virtualinvoke $r12.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r5);

        if $z0 != 0 goto label13;

        $r3 = $r5;

        goto label07;

     label13:
        $r3 = $r6;

        goto label07;
    }
}
