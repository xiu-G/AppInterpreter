public class org.jsoup.nodes.Comment extends org.jsoup.nodes.Node
{
    private static final java.lang.String COMMENT_KEY;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Attributes $r3;
        org.jsoup.nodes.Comment r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.jsoup.nodes.Comment;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.jsoup.nodes.Node: void <init>(java.lang.String)>($r2);

        $r3 = r0.<org.jsoup.nodes.Comment: org.jsoup.nodes.Attributes attributes>;

        virtualinvoke $r3.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>("comment", $r1);

        return;
    }

    public java.lang.String getData()
    {
        org.jsoup.nodes.Comment r0;
        org.jsoup.nodes.Attributes $r2;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Comment;

        $r2 = r0.<org.jsoup.nodes.Comment: org.jsoup.nodes.Attributes attributes>;

        $r1 = virtualinvoke $r2.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("comment");

        return $r1;
    }

    public java.lang.String nodeName()
    {
        org.jsoup.nodes.Comment r0;

        r0 := @this: org.jsoup.nodes.Comment;

        return "#comment";
    }

    void outerHtmlHead(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Document$OutputSettings $r2;
        int $i0;
        org.jsoup.nodes.Comment r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.Comment;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;

        $z0 = virtualinvoke $r2.<org.jsoup.nodes.Document$OutputSettings: boolean prettyPrint()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.jsoup.nodes.Comment: void indent(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings)>($r1, $i0, $r2);

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!--");

        $r3 = virtualinvoke r0.<org.jsoup.nodes.Comment: java.lang.String getData()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->");

        return;
    }

    void outerHtmlTail(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Document$OutputSettings $r2;
        int $i0;
        org.jsoup.nodes.Comment r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.jsoup.nodes.Comment;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;

        return;
    }

    public java.lang.String toString()
    {
        org.jsoup.nodes.Comment r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.nodes.Comment;

        $r1 = virtualinvoke r0.<org.jsoup.nodes.Comment: java.lang.String outerHtml()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.jsoup.nodes.Comment: java.lang.String COMMENT_KEY> = "comment";

        return;
    }
}
