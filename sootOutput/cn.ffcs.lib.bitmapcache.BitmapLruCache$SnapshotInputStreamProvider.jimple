final class cn.ffcs.lib.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider extends java.lang.Object implements cn.ffcs.lib.bitmapcache.BitmapLruCache$InputStreamProvider
{
    final java.lang.String mKey;
    final cn.ffcs.lib.bitmapcache.BitmapLruCache this$0;

    void <init>(cn.ffcs.lib.bitmapcache.BitmapLruCache, java.lang.String)
    {
        cn.ffcs.lib.bitmapcache.BitmapLruCache $r1;
        java.lang.String $r2;
        cn.ffcs.lib.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider r0;

        r0 := @this: cn.ffcs.lib.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider;

        $r1 := @parameter0: cn.ffcs.lib.bitmapcache.BitmapLruCache;

        $r2 := @parameter1: java.lang.String;

        r0.<cn.ffcs.lib.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider: cn.ffcs.lib.bitmapcache.BitmapLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cn.ffcs.lib.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider: java.lang.String mKey> = $r2;

        return;
    }

    public java.io.InputStream getInputStream()
    {
        java.lang.Throwable r1;
        com.jakewharton.disklrucache.DiskLruCache$Snapshot $r5;
        com.jakewharton.disklrucache.DiskLruCache $r3;
        cn.ffcs.lib.bitmapcache.BitmapLruCache $r2;
        java.lang.StringBuilder $r7;
        java.lang.String $r4, $r8;
        cn.ffcs.lib.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider r0;
        java.io.InputStream $r6;

        r0 := @this: cn.ffcs.lib.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider;

        $r2 = r0.<cn.ffcs.lib.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider: cn.ffcs.lib.bitmapcache.BitmapLruCache this$0>;

     label1:
        $r3 = staticinvoke <cn.ffcs.lib.bitmapcache.BitmapLruCache: com.jakewharton.disklrucache.DiskLruCache access$200(cn.ffcs.lib.bitmapcache.BitmapLruCache)>($r2);

     label2:
        $r4 = r0.<cn.ffcs.lib.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider: java.lang.String mKey>;

     label3:
        $r5 = virtualinvoke $r3.<com.jakewharton.disklrucache.DiskLruCache: com.jakewharton.disklrucache.DiskLruCache$Snapshot get(java.lang.String)>($r4);

     label4:
        if $r5 == null goto label8;

     label5:
        $r6 = virtualinvoke $r5.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: java.io.InputStream getInputStream(int)>(0);

     label6:
        return $r6;

     label7:
        r1 := @caughtexception;

        $r4 = <cn.ffcs.lib.bitmapcache.Constants: java.lang.String LOG_TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could open disk cache for url: ");

        $r8 = r0.<cn.ffcs.lib.bitmapcache.BitmapLruCache$SnapshotInputStreamProvider: java.lang.String mKey>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, $r8, r1);

     label8:
        return null;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }
}
