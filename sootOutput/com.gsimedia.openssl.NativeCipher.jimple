public class com.gsimedia.openssl.NativeCipher extends java.lang.Object
{
    public static final int AES_BLOCK_SIZE;
    public static final int AES_DECRYPT;
    public static final int AES_ENCRYPT;

    static void <clinit>()
    {
        <com.gsimedia.openssl.NativeCipher: int AES_ENCRYPT> = 1;

        <com.gsimedia.openssl.NativeCipher: int AES_DECRYPT> = 0;

        <com.gsimedia.openssl.NativeCipher: int AES_BLOCK_SIZE> = 16;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("NativeCipher");

        return;
    }

    public void <init>()
    {
        com.gsimedia.openssl.NativeCipher r0;

        r0 := @this: com.gsimedia.openssl.NativeCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native int AES_cbc_encrypt(byte[], int, int, byte[], int, com.gsimedia.openssl.AESKey, byte[], int);

    public static native int AES_cbc_encrypt(byte[], byte[], int, com.gsimedia.openssl.AESKey, byte[], int);

    public static native int AES_ecb_encrypt(byte[], int, int, byte[], int, com.gsimedia.openssl.AESKey, int);

    public static native int AES_ecb_encrypt(byte[], byte[], com.gsimedia.openssl.AESKey, int);

    public static native com.gsimedia.openssl.AESKey AES_set_decrypt_key(byte[], int);

    public static native com.gsimedia.openssl.AESKey AES_set_encrypt_key(byte[], int);
}
