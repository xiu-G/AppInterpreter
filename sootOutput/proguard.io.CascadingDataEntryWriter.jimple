public class proguard.io.CascadingDataEntryWriter extends java.lang.Object implements proguard.io.DataEntryWriter
{
    private proguard.io.DataEntryWriter dataEntryWriter1;
    private proguard.io.DataEntryWriter dataEntryWriter2;

    public void <init>(proguard.io.DataEntryWriter, proguard.io.DataEntryWriter)
    {
        proguard.io.CascadingDataEntryWriter r0;
        proguard.io.DataEntryWriter $r1, $r2;

        r0 := @this: proguard.io.CascadingDataEntryWriter;

        $r1 := @parameter0: proguard.io.DataEntryWriter;

        $r2 := @parameter1: proguard.io.DataEntryWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.io.CascadingDataEntryWriter: proguard.io.DataEntryWriter dataEntryWriter1> = $r1;

        r0.<proguard.io.CascadingDataEntryWriter: proguard.io.DataEntryWriter dataEntryWriter2> = $r2;

        return;
    }

    public void close() throws java.io.IOException
    {
        proguard.io.CascadingDataEntryWriter r0;
        proguard.io.DataEntryWriter $r1;

        r0 := @this: proguard.io.CascadingDataEntryWriter;

        $r1 = r0.<proguard.io.CascadingDataEntryWriter: proguard.io.DataEntryWriter dataEntryWriter1>;

        interfaceinvoke $r1.<proguard.io.DataEntryWriter: void close()>();

        $r1 = r0.<proguard.io.CascadingDataEntryWriter: proguard.io.DataEntryWriter dataEntryWriter2>;

        interfaceinvoke $r1.<proguard.io.DataEntryWriter: void close()>();

        r0.<proguard.io.CascadingDataEntryWriter: proguard.io.DataEntryWriter dataEntryWriter1> = null;

        r0.<proguard.io.CascadingDataEntryWriter: proguard.io.DataEntryWriter dataEntryWriter2> = null;

        return;
    }

    public boolean createDirectory(proguard.io.DataEntry) throws java.io.IOException
    {
        proguard.io.CascadingDataEntryWriter r0;
        proguard.io.DataEntry $r1;
        proguard.io.DataEntryWriter $r2;
        boolean $z0;

        r0 := @this: proguard.io.CascadingDataEntryWriter;

        $r1 := @parameter0: proguard.io.DataEntry;

        $r2 = r0.<proguard.io.CascadingDataEntryWriter: proguard.io.DataEntryWriter dataEntryWriter1>;

        $z0 = interfaceinvoke $r2.<proguard.io.DataEntryWriter: boolean createDirectory(proguard.io.DataEntry)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<proguard.io.CascadingDataEntryWriter: proguard.io.DataEntryWriter dataEntryWriter2>;

        $z0 = interfaceinvoke $r2.<proguard.io.DataEntryWriter: boolean createDirectory(proguard.io.DataEntry)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public java.io.OutputStream getOutputStream(proguard.io.DataEntry) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        proguard.io.CascadingDataEntryWriter r0;
        proguard.io.DataEntry $r1;

        r0 := @this: proguard.io.CascadingDataEntryWriter;

        $r1 := @parameter0: proguard.io.DataEntry;

        $r2 = virtualinvoke r0.<proguard.io.CascadingDataEntryWriter: java.io.OutputStream getOutputStream(proguard.io.DataEntry,proguard.io.Finisher)>($r1, null);

        return $r2;
    }

    public java.io.OutputStream getOutputStream(proguard.io.DataEntry, proguard.io.Finisher) throws java.io.IOException
    {
        java.io.OutputStream $r4;
        proguard.io.CascadingDataEntryWriter r0;
        proguard.io.Finisher $r2;
        proguard.io.DataEntry $r1;
        proguard.io.DataEntryWriter $r3;

        r0 := @this: proguard.io.CascadingDataEntryWriter;

        $r1 := @parameter0: proguard.io.DataEntry;

        $r2 := @parameter1: proguard.io.Finisher;

        $r3 = r0.<proguard.io.CascadingDataEntryWriter: proguard.io.DataEntryWriter dataEntryWriter1>;

        $r4 = interfaceinvoke $r3.<proguard.io.DataEntryWriter: java.io.OutputStream getOutputStream(proguard.io.DataEntry,proguard.io.Finisher)>($r1, $r2);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r3 = r0.<proguard.io.CascadingDataEntryWriter: proguard.io.DataEntryWriter dataEntryWriter2>;

        $r4 = interfaceinvoke $r3.<proguard.io.DataEntryWriter: java.io.OutputStream getOutputStream(proguard.io.DataEntry,proguard.io.Finisher)>($r1, $r2);

        return $r4;
    }
}
