final class org.jsoup.safety.Cleaner$CleaningVisitor extends java.lang.Object implements org.jsoup.select.NodeVisitor
{
    private org.jsoup.nodes.Element destination;
    private int numDiscarded;
    private final org.jsoup.nodes.Element root;
    final org.jsoup.safety.Cleaner this$0;

    private void <init>(org.jsoup.safety.Cleaner, org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.safety.Cleaner $r1;
        org.jsoup.safety.Cleaner$CleaningVisitor r0;
        org.jsoup.nodes.Element $r2, $r3;

        r0 := @this: org.jsoup.safety.Cleaner$CleaningVisitor;

        $r1 := @parameter0: org.jsoup.safety.Cleaner;

        $r2 := @parameter1: org.jsoup.nodes.Element;

        $r3 := @parameter2: org.jsoup.nodes.Element;

        r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.safety.Cleaner this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jsoup.safety.Cleaner$CleaningVisitor: int numDiscarded> = 0;

        r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.nodes.Element root> = $r2;

        r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.nodes.Element destination> = $r3;

        return;
    }

    void <init>(org.jsoup.safety.Cleaner, org.jsoup.nodes.Element, org.jsoup.nodes.Element, org.jsoup.safety.Cleaner$1)
    {
        org.jsoup.safety.Cleaner $r1;
        org.jsoup.safety.Cleaner$CleaningVisitor r0;
        org.jsoup.nodes.Element $r2, $r3;
        org.jsoup.safety.Cleaner$1 $r4;

        r0 := @this: org.jsoup.safety.Cleaner$CleaningVisitor;

        $r1 := @parameter0: org.jsoup.safety.Cleaner;

        $r2 := @parameter1: org.jsoup.nodes.Element;

        $r3 := @parameter2: org.jsoup.nodes.Element;

        $r4 := @parameter3: org.jsoup.safety.Cleaner$1;

        specialinvoke r0.<org.jsoup.safety.Cleaner$CleaningVisitor: void <init>(org.jsoup.safety.Cleaner,org.jsoup.nodes.Element,org.jsoup.nodes.Element)>($r1, $r2, $r3);

        return;
    }

    static int access$300(org.jsoup.safety.Cleaner$CleaningVisitor)
    {
        int i0;
        org.jsoup.safety.Cleaner$CleaningVisitor $r0;

        $r0 := @parameter0: org.jsoup.safety.Cleaner$CleaningVisitor;

        i0 = $r0.<org.jsoup.safety.Cleaner$CleaningVisitor: int numDiscarded>;

        return i0;
    }

    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.safety.Whitelist $r5;
        org.jsoup.nodes.TextNode r3, r9;
        org.jsoup.safety.Cleaner$CleaningVisitor r0;
        org.jsoup.safety.Cleaner$ElementMeta $r7;
        org.jsoup.nodes.Node $r1;
        org.jsoup.safety.Cleaner $r4;
        org.jsoup.nodes.Element r2, $r8;
        int $i0, $i1;
        java.lang.String $r6, $r10;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Cleaner$CleaningVisitor;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof org.jsoup.nodes.Element;

        if $z0 == 0 goto label2;

        r2 = (org.jsoup.nodes.Element) $r1;

        $r4 = r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.safety.Cleaner this$0>;

        $r5 = staticinvoke <org.jsoup.safety.Cleaner: org.jsoup.safety.Whitelist access$000(org.jsoup.safety.Cleaner)>($r4);

        $r6 = virtualinvoke r2.<org.jsoup.nodes.Element: java.lang.String tagName()>();

        $z0 = virtualinvoke $r5.<org.jsoup.safety.Whitelist: boolean isSafeTag(java.lang.String)>($r6);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.safety.Cleaner this$0>;

        $r7 = staticinvoke <org.jsoup.safety.Cleaner: org.jsoup.safety.Cleaner$ElementMeta access$100(org.jsoup.safety.Cleaner,org.jsoup.nodes.Element)>($r4, r2);

        r2 = $r7.<org.jsoup.safety.Cleaner$ElementMeta: org.jsoup.nodes.Element el>;

        $r8 = r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.nodes.Element destination>;

        virtualinvoke $r8.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r2);

        $i0 = r0.<org.jsoup.safety.Cleaner$CleaningVisitor: int numDiscarded>;

        $i1 = $r7.<org.jsoup.safety.Cleaner$ElementMeta: int numAttribsDiscarded>;

        $i0 = $i0 + $i1;

        r0.<org.jsoup.safety.Cleaner$CleaningVisitor: int numDiscarded> = $i0;

        r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.nodes.Element destination> = r2;

        return;

     label1:
        r2 = r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.nodes.Element root>;

        if $r1 == r2 goto label4;

        $i0 = r0.<org.jsoup.safety.Cleaner$CleaningVisitor: int numDiscarded>;

        $i0 = $i0 + 1;

        r0.<org.jsoup.safety.Cleaner$CleaningVisitor: int numDiscarded> = $i0;

        return;

     label2:
        $z0 = $r1 instanceof org.jsoup.nodes.TextNode;

        if $z0 == 0 goto label3;

        r9 = (org.jsoup.nodes.TextNode) $r1;

        r3 = new org.jsoup.nodes.TextNode;

        $r6 = virtualinvoke r9.<org.jsoup.nodes.TextNode: java.lang.String getWholeText()>();

        $r10 = virtualinvoke $r1.<org.jsoup.nodes.Node: java.lang.String baseUri()>();

        specialinvoke r3.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>($r6, $r10);

        r2 = r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.nodes.Element destination>;

        virtualinvoke r2.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>(r3);

        return;

     label3:
        $i0 = r0.<org.jsoup.safety.Cleaner$CleaningVisitor: int numDiscarded>;

        $i0 = $i0 + 1;

        r0.<org.jsoup.safety.Cleaner$CleaningVisitor: int numDiscarded> = $i0;

     label4:
        return;
    }

    public void tail(org.jsoup.nodes.Node, int)
    {
        org.jsoup.safety.Whitelist $r3;
        org.jsoup.safety.Cleaner$CleaningVisitor r0;
        org.jsoup.nodes.Node $r1;
        org.jsoup.safety.Cleaner $r2;
        org.jsoup.nodes.Element $r5;
        int $i0;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Cleaner$CleaningVisitor;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof org.jsoup.nodes.Element;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.safety.Cleaner this$0>;

        $r3 = staticinvoke <org.jsoup.safety.Cleaner: org.jsoup.safety.Whitelist access$000(org.jsoup.safety.Cleaner)>($r2);

        $r4 = virtualinvoke $r1.<org.jsoup.nodes.Node: java.lang.String nodeName()>();

        $z0 = virtualinvoke $r3.<org.jsoup.safety.Whitelist: boolean isSafeTag(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.nodes.Element destination>;

        $r5 = virtualinvoke $r5.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();

        r0.<org.jsoup.safety.Cleaner$CleaningVisitor: org.jsoup.nodes.Element destination> = $r5;

     label1:
        return;
    }
}
