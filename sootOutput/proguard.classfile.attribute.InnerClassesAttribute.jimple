public class proguard.classfile.attribute.InnerClassesAttribute extends proguard.classfile.attribute.Attribute
{
    public proguard.classfile.attribute.InnerClassesInfo[] classes;
    public int u2classesCount;

    public void <init>()
    {
        proguard.classfile.attribute.InnerClassesAttribute r0;

        r0 := @this: proguard.classfile.attribute.InnerClassesAttribute;

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>()>();

        return;
    }

    public void <init>(int, int, proguard.classfile.attribute.InnerClassesInfo[])
    {
        proguard.classfile.attribute.InnerClassesAttribute r0;
        int $i0, $i1;
        proguard.classfile.attribute.InnerClassesInfo[] $r1;

        r0 := @this: proguard.classfile.attribute.InnerClassesAttribute;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: proguard.classfile.attribute.InnerClassesInfo[];

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>(int)>($i0);

        r0.<proguard.classfile.attribute.InnerClassesAttribute: int u2classesCount> = $i1;

        r0.<proguard.classfile.attribute.InnerClassesAttribute: proguard.classfile.attribute.InnerClassesInfo[] classes> = $r1;

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        proguard.classfile.attribute.InnerClassesAttribute r0;
        proguard.classfile.attribute.visitor.AttributeVisitor $r2;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.classfile.attribute.InnerClassesAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.visitor.AttributeVisitor;

        interfaceinvoke $r2.<proguard.classfile.attribute.visitor.AttributeVisitor: void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute)>($r1, r0);

        return;
    }

    public void innerClassEntriesAccept(proguard.classfile.Clazz, proguard.classfile.attribute.visitor.InnerClassesInfoVisitor)
    {
        proguard.classfile.attribute.InnerClassesAttribute r0;
        proguard.classfile.Clazz $r1;
        int $i0, $i1;
        proguard.classfile.attribute.visitor.InnerClassesInfoVisitor $r2;
        proguard.classfile.attribute.InnerClassesInfo[] $r3;
        proguard.classfile.attribute.InnerClassesInfo $r4;

        r0 := @this: proguard.classfile.attribute.InnerClassesAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.visitor.InnerClassesInfoVisitor;

        $i0 = 0;

     label1:
        $i1 = r0.<proguard.classfile.attribute.InnerClassesAttribute: int u2classesCount>;

        if $i0 >= $i1 goto label2;

        $r3 = r0.<proguard.classfile.attribute.InnerClassesAttribute: proguard.classfile.attribute.InnerClassesInfo[] classes>;

        $r4 = $r3[$i0];

        interfaceinvoke $r2.<proguard.classfile.attribute.visitor.InnerClassesInfoVisitor: void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo)>($r1, $r4);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
}
