public class com.conradcaine.fairsandevents.util.ConvertGeoLocation extends java.lang.Object
{
    android.graphics.Point a;
    private com.conradcaine.fairsandevents.util.GeoPoint coordinateBottomRight;
    private com.conradcaine.fairsandevents.util.GeoPoint coordinateTopLeft;
    private com.conradcaine.fairsandevents.util.GeoPoint pixelBottomRight;
    private com.conradcaine.fairsandevents.util.GeoPoint pixelTopLeft;

    public void <init>(com.conradcaine.fairsandevents.util.GeoPoint, com.conradcaine.fairsandevents.util.GeoPoint)
    {
        android.graphics.Point $r3;
        com.conradcaine.fairsandevents.util.GeoPoint $r1, $r2;
        com.conradcaine.fairsandevents.util.ConvertGeoLocation r0;

        r0 := @this: com.conradcaine.fairsandevents.util.ConvertGeoLocation;

        $r1 := @parameter0: com.conradcaine.fairsandevents.util.GeoPoint;

        $r2 := @parameter1: com.conradcaine.fairsandevents.util.GeoPoint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.Point;

        specialinvoke $r3.<android.graphics.Point: void <init>()>();

        r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: android.graphics.Point a> = $r3;

        r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint coordinateTopLeft> = $r1;

        r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint coordinateBottomRight> = $r2;

        return;
    }

    public com.conradcaine.fairsandevents.util.GeoPoint convertGeoLocationToPixel(com.conradcaine.fairsandevents.util.GeoPoint)
    {
        com.conradcaine.fairsandevents.util.GeoPoint $r1, r2, $r3;
        com.conradcaine.fairsandevents.util.ConvertGeoLocation r0;
        double d0, d1, $d2, $d3;

        r0 := @this: com.conradcaine.fairsandevents.util.ConvertGeoLocation;

        $r1 := @parameter0: com.conradcaine.fairsandevents.util.GeoPoint;

        r2 = new com.conradcaine.fairsandevents.util.GeoPoint;

        specialinvoke r2.<com.conradcaine.fairsandevents.util.GeoPoint: void <init>(double,double)>(0.0, 0.0);

        $r3 = r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint coordinateTopLeft>;

        d0 = $r3.<com.conradcaine.fairsandevents.util.GeoPoint: double latitude>;

        $r3 = r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint coordinateBottomRight>;

        d1 = $r3.<com.conradcaine.fairsandevents.util.GeoPoint: double latitude>;

        d0 = d0 - d1;

        r2.<com.conradcaine.fairsandevents.util.GeoPoint: double latitude> = d0;

        $r3 = r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint coordinateBottomRight>;

        d0 = $r3.<com.conradcaine.fairsandevents.util.GeoPoint: double longitude>;

        $r3 = r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint coordinateTopLeft>;

        d1 = $r3.<com.conradcaine.fairsandevents.util.GeoPoint: double longitude>;

        d0 = d0 - d1;

        r2.<com.conradcaine.fairsandevents.util.GeoPoint: double longitude> = d0;

        d0 = $r1.<com.conradcaine.fairsandevents.util.GeoPoint: double latitude>;

        $r3 = r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint coordinateBottomRight>;

        d1 = $r3.<com.conradcaine.fairsandevents.util.GeoPoint: double latitude>;

        d0 = d0 - d1;

        $r1.<com.conradcaine.fairsandevents.util.GeoPoint: double latitude> = d0;

        d0 = $r1.<com.conradcaine.fairsandevents.util.GeoPoint: double longitude>;

        $r3 = r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint coordinateTopLeft>;

        d1 = $r3.<com.conradcaine.fairsandevents.util.GeoPoint: double longitude>;

        d0 = d0 - d1;

        $r1.<com.conradcaine.fairsandevents.util.GeoPoint: double longitude> = d0;

        d0 = $r1.<com.conradcaine.fairsandevents.util.GeoPoint: double latitude>;

        d0 = d0 * 100.0;

        d1 = r2.<com.conradcaine.fairsandevents.util.GeoPoint: double latitude>;

        d0 = d0 / d1;

        d1 = $r1.<com.conradcaine.fairsandevents.util.GeoPoint: double longitude>;

        d1 = d1 * 100.0;

        $d2 = r2.<com.conradcaine.fairsandevents.util.GeoPoint: double longitude>;

        d1 = d1 / $d2;

        $r1 = new com.conradcaine.fairsandevents.util.GeoPoint;

        r2 = r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint pixelBottomRight>;

        $d2 = r2.<com.conradcaine.fairsandevents.util.GeoPoint: double latitude>;

        d1 = $d2 * d1;

        d1 = d1 / 100.0;

        r2 = r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint pixelBottomRight>;

        $d2 = r2.<com.conradcaine.fairsandevents.util.GeoPoint: double longitude>;

        r2 = r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint pixelBottomRight>;

        $d3 = r2.<com.conradcaine.fairsandevents.util.GeoPoint: double longitude>;

        d0 = $d3 * d0;

        d0 = d0 / 100.0;

        d0 = $d2 - d0;

        specialinvoke $r1.<com.conradcaine.fairsandevents.util.GeoPoint: void <init>(double,double)>(d1, d0);

        return $r1;
    }

    public void setMapPixelDimensions(com.conradcaine.fairsandevents.util.GeoPoint, com.conradcaine.fairsandevents.util.GeoPoint)
    {
        com.conradcaine.fairsandevents.util.GeoPoint $r1, $r2;
        com.conradcaine.fairsandevents.util.ConvertGeoLocation r0;

        r0 := @this: com.conradcaine.fairsandevents.util.ConvertGeoLocation;

        $r1 := @parameter0: com.conradcaine.fairsandevents.util.GeoPoint;

        $r2 := @parameter1: com.conradcaine.fairsandevents.util.GeoPoint;

        r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint pixelTopLeft> = $r1;

        r0.<com.conradcaine.fairsandevents.util.ConvertGeoLocation: com.conradcaine.fairsandevents.util.GeoPoint pixelBottomRight> = $r2;

        return;
    }
}
