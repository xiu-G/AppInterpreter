public class com.parse.signpost.signature.PlainTextMessageSigner extends com.parse.signpost.signature.OAuthMessageSigner
{

    public void <init>()
    {
        com.parse.signpost.signature.PlainTextMessageSigner r0;

        r0 := @this: com.parse.signpost.signature.PlainTextMessageSigner;

        specialinvoke r0.<com.parse.signpost.signature.OAuthMessageSigner: void <init>()>();

        return;
    }

    public java.lang.String getSignatureMethod()
    {
        com.parse.signpost.signature.PlainTextMessageSigner r0;

        r0 := @this: com.parse.signpost.signature.PlainTextMessageSigner;

        return "PLAINTEXT";
    }

    public java.lang.String sign(com.parse.signpost.http.HttpRequest, com.parse.signpost.http.HttpParameters)
    {
        com.parse.signpost.http.HttpParameters $r2;
        com.parse.signpost.http.HttpRequest $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.parse.signpost.signature.PlainTextMessageSigner r0;

        r0 := @this: com.parse.signpost.signature.PlainTextMessageSigner;

        $r1 := @parameter0: com.parse.signpost.http.HttpRequest;

        $r2 := @parameter1: com.parse.signpost.http.HttpParameters;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<com.parse.signpost.signature.PlainTextMessageSigner: java.lang.String getConsumerSecret()>();

        $r4 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

        $r4 = virtualinvoke r0.<com.parse.signpost.signature.PlainTextMessageSigner: java.lang.String getTokenSecret()>();

        $r4 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
