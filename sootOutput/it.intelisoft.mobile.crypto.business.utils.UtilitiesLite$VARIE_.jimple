public final class it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ extends java.lang.Object
{
    final it.intelisoft.mobile.crypto.business.utils.UtilitiesLite this$0;

    public void <init>(it.intelisoft.mobile.crypto.business.utils.UtilitiesLite)
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_;

        $r1 := @parameter0: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite;

        r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void forzaGarbageCollector()
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ r0;
        java.lang.Runtime $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        return;
    }

    public java.lang.String getMethodName(java.lang.StackTraceElement[])
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ r0;
        java.lang.StackTraceElement[] $r1;
        int $i0, $i1;
        java.lang.StackTraceElement r2;
        java.lang.String $r3;
        boolean z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_;

        $r1 := @parameter0: java.lang.StackTraceElement[];

        z0 = 0;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return null;

     label2:
        r2 = $r1[$i1];

        if z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        return $r3;

     label3:
        $r3 = virtualinvoke r2.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("getStackTrace");

        $i1 = $i1 + 1;

        goto label1;
    }

    public java.util.Vector smsFormat(java.lang.String, int, java.lang.String)
    {
        java.util.Vector r2, $r6;
        int $i0, i1, $i2, $i3, i4, $i5;
        java.lang.String $r1, $r3, $r4;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ r0;
        char $c6, c7;
        java.lang.StringBuilder $r5, $r7;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_;

        $r3 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r6 = new java.util.Vector;

        r2 = $r6;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        if $r3 == null goto label9;

        if $r1 != null goto label1;

        return r2;

     label1:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        i1 = $i0 - $i2;

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        i4 = $i3;

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i5 == 0 goto label9;

        if $i0 < $i2 goto label9;

        if $i3 > $i0 goto label2;

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r3);

        return r2;

     label2:
        if i4 <= 0 goto label9;

        if i4 >= $i0 goto label3;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r4);

        i4 = 0;

        goto label2;

     label3:
        $c6 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i1);

        c7 = $c6;

        $i2 = (int) $c6;

        if $i2 != 32 goto label5;

        $r7 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(i1, i4);

     label4:
        i4 = virtualinvoke $r3.<java.lang.String: int length()>();

        goto label2;

     label5:
        $i2 = i1;

     label6:
        $i3 = (int) c7;

        if $i3 == 32 goto label7;

        if $i2 > 0 goto label8;

     label7:
        if $i2 < 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i2, i4);

        goto label4;

     label8:
        $i3 = i1 - 20;

        if $i2 < $i3 goto label7;

        $i3 = -1;

        $i2 = $i2 + $i3;

        c7 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i2);

        goto label6;

     label9:
        return r2;
    }

    public void tracciaException(java.lang.Exception)
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ r0;
        java.lang.Exception $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_;

        $r1 := @parameter0: java.lang.Exception;

        virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r1.<java.lang.Exception: java.lang.StackTraceElement[] getStackTrace()>();

        return;
    }

    public void writeException(java.lang.Exception, boolean, java.lang.String)
    {
        java.lang.Throwable $r11, $r12, $r14, $r15, $r16, $r17, $r19;
        int i0, $i1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r6;
        java.lang.StackTraceElement $r10;
        java.lang.String $r2, $r9;
        boolean $z0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_ $r7;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ r0;
        java.io.FileWriter r3, r4;
        java.lang.Exception $r1, $r13, $r18;
        java.lang.StackTraceElement[] $r5;
        java.lang.StringBuilder $r8;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_;

        $r1 := @parameter0: java.lang.Exception;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        r4 = null;

     label01:
        r3 = new java.io.FileWriter;

     label02:
        specialinvoke r3.<java.io.FileWriter: void <init>(java.lang.String,boolean)>($r2, $z0);

     label03:
        $r5 = virtualinvoke $r1.<java.lang.Exception: java.lang.StackTraceElement[] getStackTrace()>();

     label04:
        if $r5 == null goto label12;

     label05:
        $r6 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

     label06:
        $r7 = $r6.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_ DATE>;

     label07:
        $r2 = virtualinvoke $r7.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringSysdate(java.lang.String)>("yyyy_MM_dd HH:mm:ss");

     label08:
        i0 = 0;

     label09:
        $i1 = lengthof $r5;

     label10:
        if i0 < $i1 goto label15;

     label11:
        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>("\n\n");

     label12:
        if r3 == null goto label39;

     label13:
        virtualinvoke r3.<java.io.FileWriter: void close()>();

     label14:
        return;

     label15:
        $r8 = new java.lang.StringBuilder;

     label16:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label17:
        $r10 = $r5[i0];

     label18:
        $r9 = virtualinvoke $r10.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r9);

     label19:
        i0 = i0 + 1;

        goto label09;

     label20:
        $r11 := @caughtexception;

     label21:
        if r4 == null goto label39;

     label22:
        virtualinvoke r4.<java.io.FileWriter: void close()>();

     label23:
        return;

     label24:
        $r12 := @caughtexception;

        return;

     label25:
        $r13 := @caughtexception;

     label26:
        if r4 == null goto label39;

     label27:
        virtualinvoke r4.<java.io.FileWriter: void close()>();

     label28:
        return;

     label29:
        $r14 := @caughtexception;

        return;

     label30:
        $r15 := @caughtexception;

     label31:
        if r4 == null goto label33;

     label32:
        virtualinvoke r4.<java.io.FileWriter: void close()>();

     label33:
        throw $r15;

     label34:
        $r16 := @caughtexception;

        return;

     label35:
        $r17 := @caughtexception;

        goto label33;

     label36:
        $r15 := @caughtexception;

        r4 = r3;

        goto label31;

     label37:
        $r18 := @caughtexception;

        r4 = r3;

        goto label26;

     label38:
        $r19 := @caughtexception;

        r4 = r3;

        goto label21;

     label39:
        return;

        catch java.io.IOException from label02 to label03 with label20;
        catch java.lang.Exception from label02 to label03 with label25;
        catch java.lang.Throwable from label01 to label03 with label30;
        catch java.io.IOException from label03 to label04 with label38;
        catch java.io.IOException from label05 to label06 with label38;
        catch java.io.IOException from label07 to label08 with label38;
        catch java.io.IOException from label11 to label12 with label38;
        catch java.lang.Exception from label03 to label04 with label37;
        catch java.lang.Exception from label05 to label08 with label37;
        catch java.lang.Exception from label09 to label10 with label37;
        catch java.lang.Exception from label11 to label12 with label37;
        catch java.lang.Throwable from label03 to label04 with label36;
        catch java.lang.Throwable from label05 to label08 with label36;
        catch java.lang.Throwable from label11 to label12 with label36;
        catch java.io.IOException from label13 to label14 with label34;
        catch java.io.IOException from label16 to label17 with label38;
        catch java.io.IOException from label18 to label19 with label38;
        catch java.lang.Exception from label16 to label19 with label37;
        catch java.lang.Throwable from label15 to label17 with label36;
        catch java.lang.Throwable from label18 to label19 with label36;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.io.IOException from label32 to label33 with label35;
    }
}
