public final class com.kingroot.sdk.gw extends java.lang.Object
{
    private java.nio.ByteBuffer kk;
    protected java.lang.String kl;

    public void <init>()
    {
        com.kingroot.sdk.gw r0;

        r0 := @this: com.kingroot.sdk.gw;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.kingroot.sdk.gw: java.lang.String kl> = "GBK";

        return;
    }

    public void <init>(byte[])
    {
        com.kingroot.sdk.gw r0;
        byte[] $r1;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.kingroot.sdk.gw: java.lang.String kl> = "GBK";

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r1);

        r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk> = $r2;

        return;
    }

    public void <init>(byte[], int)
    {
        byte[] $r1;
        com.kingroot.sdk.gw r0;
        int $i0;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.kingroot.sdk.gw: java.lang.String kl> = "GBK";

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r1);

        r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk> = $r2;

        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(4);

        return;
    }

    public static int a(com.kingroot.sdk.gw$a, java.nio.ByteBuffer)
    {
        short $s2;
        byte $b0, $b1;
        com.kingroot.sdk.gw$a $r0;
        int $i3;
        java.nio.ByteBuffer $r1;

        $r0 := @parameter0: com.kingroot.sdk.gw$a;

        $r1 := @parameter1: java.nio.ByteBuffer;

        $b0 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

        $b1 = $b0 & 15;

        $r0.<com.kingroot.sdk.gw$a: byte km> = $b1;

        $s2 = (short) $b0;

        $s2 = $s2 & 240;

        $i3 = (int) $s2;

        $i3 = $i3 >> 4;

        $r0.<com.kingroot.sdk.gw$a: int tag> = $i3;

        $i3 = $r0.<com.kingroot.sdk.gw$a: int tag>;

        if $i3 != 15 goto label1;

        $b0 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

        $s2 = (short) $b0;

        $s2 = $s2 & 255;

        $i3 = (int) $s2;

        $r0.<com.kingroot.sdk.gw$a: int tag> = $i3;

        return 2;

     label1:
        return 1;
    }

    private java.util.Map a(java.util.Map, java.util.Map, int, boolean)
    {
        java.util.HashMap $r13;
        byte $b1;
        java.util.Map $r1;
        com.kingroot.sdk.gw r0;
        int $i0, $i2;
        java.lang.String $r10;
        com.kingroot.sdk.gt $r15;
        boolean $z0, $z1;
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        com.kingroot.sdk.gw$a $r8, $r14;
        java.util.Set $r3;
        java.lang.Object $r2, $r5, $r7, $r11, $r12;
        java.lang.StringBuilder $r9, $r16;

        r0 := @this: com.kingroot.sdk.gw;

        $r2 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Map;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $r1 == null goto label01;

        $z1 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label03;

     label01:
        $r13 = new java.util.HashMap;

        $r2 = $r13;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

     label02:
        $r1 = (java.util.Map) $r2;

        return $r1;

     label03:
        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label08;

        $r14 = new com.kingroot.sdk.gw$a;

        $r8 = $r14;

        specialinvoke $r14.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r8);

        $b1 = $r8.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 8: goto label05;
            case 9: goto label04;
            case 10: goto label04;
            case 11: goto label02;
            default: goto label04;
        };

     label04:
        $r15 = new com.kingroot.sdk.gt;

        specialinvoke $r15.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r15;

     label05:
        $i0 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        if $i0 >= 0 goto label06;

        $r15 = new com.kingroot.sdk.gt;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("size invalid: ");

        $r9 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r10);

        throw $r15;

     label06:
        $i2 = 0;

     label07:
        if $i2 >= $i0 goto label09;

        $r11 = virtualinvoke r0.<com.kingroot.sdk.gw: java.lang.Object b(java.lang.Object,int,boolean)>($r5, 0, 1);

        $r12 = virtualinvoke r0.<com.kingroot.sdk.gw: java.lang.Object b(java.lang.Object,int,boolean)>($r7, 1, 1);

        $r1 = (java.util.Map) $r2;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

        $i2 = $i2 + 1;

        goto label07;

     label08:
        if $z0 == 0 goto label10;

        $r15 = new com.kingroot.sdk.gt;

        specialinvoke $r15.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r15;

     label09:
        $r1 = (java.util.Map) $r2;

        return $r1;

     label10:
        $r1 = (java.util.Map) $r2;

        return $r1;
    }

    private void a(byte)
    {
        com.kingroot.sdk.gw$a $r2, $r6;
        java.nio.ByteBuffer $r1;
        byte $b0, $b4;
        com.kingroot.sdk.gw r0;
        int $i1, $i2, $i3;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r4;
        com.kingroot.sdk.gt $r5;

        r0 := @this: com.kingroot.sdk.gw;

        $b0 := @parameter0: byte;

        $i1 = 0;

        $i2 = (int) $b0;

        lookupswitch($i2)
        {
            case 0: goto label02;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label14;
            case 10: goto label18;
            case 11: goto label03;
            case 12: goto label03;
            case 13: goto label16;
            default: goto label01;
        };

     label01:
        $r5 = new com.kingroot.sdk.gt;

        specialinvoke $r5.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("invalid type.");

        throw $r5;

     label02:
        specialinvoke r0.<com.kingroot.sdk.gw: void skip(int)>(1);

     label03:
        return;

     label04:
        specialinvoke r0.<com.kingroot.sdk.gw: void skip(int)>(2);

        return;

     label05:
        specialinvoke r0.<com.kingroot.sdk.gw: void skip(int)>(4);

        return;

     label06:
        specialinvoke r0.<com.kingroot.sdk.gw: void skip(int)>(8);

        return;

     label07:
        specialinvoke r0.<com.kingroot.sdk.gw: void skip(int)>(4);

        return;

     label08:
        specialinvoke r0.<com.kingroot.sdk.gw: void skip(int)>(8);

        return;

     label09:
        $r1 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $b0 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

        $i1 = (int) $b0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label10;

        $i1 = (int) $b0;

        $i1 = $i1 + 256;

     label10:
        specialinvoke r0.<com.kingroot.sdk.gw: void skip(int)>($i1);

        return;

     label11:
        $r1 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt()>();

        specialinvoke r0.<com.kingroot.sdk.gw: void skip(int)>($i1);

        return;

     label12:
        $i2 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

     label13:
        $i3 = $i2 * 2;

        if $i1 >= $i3 goto label19;

        specialinvoke r0.<com.kingroot.sdk.gw: void cp()>();

        $i1 = $i1 + 1;

        goto label13;

     label14:
        $i2 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

     label15:
        if $i1 >= $i2 goto label19;

        specialinvoke r0.<com.kingroot.sdk.gw: void cp()>();

        $i1 = $i1 + 1;

        goto label15;

     label16:
        $r6 = new com.kingroot.sdk.gw$a;

        $r2 = $r6;

        specialinvoke $r6.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r2);

        $b4 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        if $b4 == 0 goto label17;

        $r5 = new com.kingroot.sdk.gt;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("skipField with invalid type, type value: ");

        $i1 = (int) $b0;

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $b0 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i1 = (int) $b0;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r4);

        throw $r5;

     label17:
        $i1 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        specialinvoke r0.<com.kingroot.sdk.gw: void skip(int)>($i1);

        return;

     label18:
        virtualinvoke r0.<com.kingroot.sdk.gw: void co()>();

     label19:
        return;
    }

    private java.lang.Object[] a(java.lang.Object, int, boolean)
    {
        java.lang.Object[] $r7;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0, $i2;
        java.lang.String $r4;
        com.kingroot.sdk.gt $r9;
        boolean $z0, $z1;
        com.kingroot.sdk.gw$a $r2, $r8;
        java.lang.Object $r1, $r6;
        java.lang.StringBuilder $r3, $r10;
        java.lang.Class $r5;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label6;

        $r8 = new com.kingroot.sdk.gw$a;

        $r2 = $r8;

        specialinvoke $r8.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r2);

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 9: goto label2;
            case 10: goto label1;
            case 11: goto label7;
            default: goto label1;
        };

     label1:
        $r9 = new com.kingroot.sdk.gt;

        specialinvoke $r9.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r9;

     label2:
        $i0 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        if $i0 >= 0 goto label3;

        $r9 = new com.kingroot.sdk.gt;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("size invalid: ");

        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r4);

        throw $r9;

     label3:
        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r5, $i0);

        $r7 = (java.lang.Object[]) $r6;

        $i2 = 0;

     label4:
        if $i2 < $i0 goto label5;

        return $r7;

     label5:
        $r6 = virtualinvoke r0.<com.kingroot.sdk.gw: java.lang.Object b(java.lang.Object,int,boolean)>($r1, 0, 1);

        $r7[$i2] = $r6;

        $i2 = $i2 + 1;

        goto label4;

     label6:
        if $z0 == 0 goto label7;

        $r9 = new com.kingroot.sdk.gt;

        specialinvoke $r9.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r9;

     label7:
        return null;
    }

    private int b(com.kingroot.sdk.gw$a)
    {
        com.kingroot.sdk.gw$a $r1;
        com.kingroot.sdk.gw r0;
        int $i0;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: com.kingroot.sdk.gw$a;

        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $r2 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        $i0 = staticinvoke <com.kingroot.sdk.gw: int a(com.kingroot.sdk.gw$a,java.nio.ByteBuffer)>($r1, $r2);

        return $i0;
    }

    private void cp()
    {
        com.kingroot.sdk.gw r0;
        byte $b0;
        com.kingroot.sdk.gw$a $r1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 = new com.kingroot.sdk.gw$a;

        specialinvoke $r1.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r1);

        $b0 = $r1.<com.kingroot.sdk.gw$a: byte km>;

        specialinvoke r0.<com.kingroot.sdk.gw: void a(byte)>($b0);

        return;
    }

    private void skip(int)
    {
        com.kingroot.sdk.gw r0;
        int $i0, $i1;
        java.nio.ByteBuffer $r1, $r2;

        r0 := @this: com.kingroot.sdk.gw;

        $i0 := @parameter0: int;

        $r1 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $i0 = $i1 + $i0;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        return;
    }

    public final boolean J(int)
    {
        java.lang.Throwable $r3;
        com.kingroot.sdk.gw$a $r1, $r4;
        byte $b3;
        com.kingroot.sdk.gw r0;
        int $i0, $i1, $i2;
        com.kingroot.sdk.gt $r2;

        r0 := @this: com.kingroot.sdk.gw;

        $i0 := @parameter0: int;

        $r4 = new com.kingroot.sdk.gw$a;

        $r1 = $r4;

     label01:
        specialinvoke $r4.<com.kingroot.sdk.gw$a: void <init>()>();

     label02:
        $i1 = specialinvoke r0.<com.kingroot.sdk.gw: int b(com.kingroot.sdk.gw$a)>($r1);

     label03:
        $i2 = $r1.<com.kingroot.sdk.gw$a: int tag>;

        if $i0 <= $i2 goto label04;

        $b3 = $r1.<com.kingroot.sdk.gw$a: byte km>;

        $i2 = (int) $b3;

        if $i2 != 11 goto label05;

     label04:
        $i1 = $r1.<com.kingroot.sdk.gw$a: int tag>;

        if $i0 != $i1 goto label11;

        return 1;

     label05:
        specialinvoke r0.<com.kingroot.sdk.gw: void skip(int)>($i1);

     label06:
        $b3 = $r1.<com.kingroot.sdk.gw$a: byte km>;

     label07:
        specialinvoke r0.<com.kingroot.sdk.gw: void a(byte)>($b3);

     label08:
        goto label02;

     label09:
        $r2 := @caughtexception;

        return 0;

     label10:
        $r3 := @caughtexception;

     label11:
        return 0;

        catch com.kingroot.sdk.gt from label01 to label03 with label09;
        catch com.kingroot.sdk.gt from label05 to label06 with label09;
        catch com.kingroot.sdk.gt from label07 to label08 with label09;
        catch java.nio.BufferUnderflowException from label01 to label03 with label10;
        catch java.nio.BufferUnderflowException from label05 to label06 with label10;
        catch java.nio.BufferUnderflowException from label07 to label08 with label10;
    }

    public final byte a(byte, int, boolean)
    {
        com.kingroot.sdk.gw$a $r1, $r3;
        java.nio.ByteBuffer $r2;
        byte $b1, $b2;
        com.kingroot.sdk.gw r0;
        int $i0;
        com.kingroot.sdk.gt $r4;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $b1 := @parameter0: byte;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label5;

        $r3 = new com.kingroot.sdk.gw$a;

        $r1 = $r3;

        specialinvoke $r3.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r1);

        $b2 = $r1.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b2;

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 11: goto label3;
            case 12: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r4;

     label2:
        $b1 = 0;

     label3:
        return $b1;

     label4:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $b1 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        return $b1;

     label5:
        if $z0 == 0 goto label6;

        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r4;

     label6:
        return $b1;
    }

    public final double a(double, int, boolean)
    {
        com.kingroot.sdk.gw$a $r1, $r3;
        java.nio.ByteBuffer $r2;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0;
        float $f0;
        com.kingroot.sdk.gt $r4;
        boolean $z0, $z1;
        double $d0;

        r0 := @this: com.kingroot.sdk.gw;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label6;

        $r3 = new com.kingroot.sdk.gw$a;

        $r1 = $r3;

        specialinvoke $r3.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r1);

        $b1 = $r1.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label1;
            case 9: goto label1;
            case 10: goto label1;
            case 11: goto label3;
            case 12: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r4;

     label2:
        $d0 = 0.0;

     label3:
        return $d0;

     label4:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $f0 = virtualinvoke $r2.<java.nio.ByteBuffer: float getFloat()>();

        $d0 = (double) $f0;

        return $d0;

     label5:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $d0 = virtualinvoke $r2.<java.nio.ByteBuffer: double getDouble()>();

        return $d0;

     label6:
        if $z0 == 0 goto label7;

        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r4;

     label7:
        return $d0;
    }

    public final float a(float, int, boolean)
    {
        com.kingroot.sdk.gw$a $r1, $r3;
        java.nio.ByteBuffer $r2;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0;
        float $f0;
        com.kingroot.sdk.gt $r4;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $f0 := @parameter0: float;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label5;

        $r3 = new com.kingroot.sdk.gw$a;

        $r1 = $r3;

        specialinvoke $r3.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r1);

        $b1 = $r1.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 4: goto label4;
            case 11: goto label3;
            case 12: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r4;

     label2:
        $f0 = 0.0F;

     label3:
        return $f0;

     label4:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $f0 = virtualinvoke $r2.<java.nio.ByteBuffer: float getFloat()>();

        return $f0;

     label5:
        if $z0 == 0 goto label6;

        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r4;

     label6:
        return $f0;
    }

    public final int a(int, int, boolean)
    {
        com.kingroot.sdk.gw$a $r1, $r3;
        java.nio.ByteBuffer $r2;
        short $s3;
        byte $b2;
        com.kingroot.sdk.gw r0;
        int $i0, $i1;
        com.kingroot.sdk.gt $r4;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label7;

        $r3 = new com.kingroot.sdk.gw$a;

        $r1 = $r3;

        specialinvoke $r3.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r1);

        $b2 = $r1.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b2;

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            case 11: goto label3;
            case 12: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r4;

     label2:
        $i1 = 0;

     label3:
        return $i1;

     label4:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $b2 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        $i1 = (int) $b2;

        return $i1;

     label5:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $s3 = virtualinvoke $r2.<java.nio.ByteBuffer: short getShort()>();

        $i1 = (int) $s3;

        return $i1;

     label6:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt()>();

        return $i1;

     label7:
        if $z0 == 0 goto label8;

        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r4;

     label8:
        return $i1;
    }

    public final long a(long, int, boolean)
    {
        com.kingroot.sdk.gw$a $r1, $r3;
        long $l1;
        java.nio.ByteBuffer $r2;
        short $s3;
        byte $b2;
        com.kingroot.sdk.gw r0;
        int $i0;
        com.kingroot.sdk.gt $r4;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $l1 := @parameter0: long;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label7;

        $r3 = new com.kingroot.sdk.gw$a;

        $r1 = $r3;

        specialinvoke $r3.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r1);

        $b2 = $r1.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b2;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 12: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r4;

     label2:
        return 0L;

     label3:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $b2 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        $l1 = (long) $b2;

        return $l1;

     label4:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $s3 = virtualinvoke $r2.<java.nio.ByteBuffer: short getShort()>();

        $l1 = (long) $s3;

        return $l1;

     label5:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt()>();

        $l1 = (long) $i0;

        return $l1;

     label6:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $l1 = virtualinvoke $r2.<java.nio.ByteBuffer: long getLong()>();

        return $l1;

     label7:
        if $z0 == 0 goto label8;

        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r4;

     label8:
        return $l1;
    }

    public final com.kingroot.sdk.gy a(com.kingroot.sdk.gy, int, boolean)
    {
        com.kingroot.sdk.gw$a $r4, $r7;
        java.lang.Exception $r5;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0;
        com.kingroot.sdk.gy $r1;
        java.lang.Class $r2;
        java.lang.Object $r3;
        java.lang.String $r6;
        com.kingroot.sdk.gt $r8;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: com.kingroot.sdk.gy;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label5;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r1 = (com.kingroot.sdk.gy) $r3;

     label2:
        $r7 = new com.kingroot.sdk.gw$a;

        $r4 = $r7;

        specialinvoke $r7.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r4);

        $b1 = $r4.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        if $i0 == 10 goto label4;

        $r8 = new com.kingroot.sdk.gt;

        specialinvoke $r8.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r8;

     label3:
        $r5 := @caughtexception;

        $r8 = new com.kingroot.sdk.gt;

        $r6 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r8.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r6);

        throw $r8;

     label4:
        virtualinvoke $r1.<com.kingroot.sdk.gy: void a(com.kingroot.sdk.gw)>(r0);

        virtualinvoke r0.<com.kingroot.sdk.gw: void co()>();

        return $r1;

     label5:
        if $z0 == 0 goto label6;

        $r8 = new com.kingroot.sdk.gt;

        specialinvoke $r8.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r8;

     label6:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final java.lang.String a(int, boolean)
    {
        java.lang.Throwable $r6, $r8;
        byte[] $r4;
        java.nio.ByteBuffer $r3;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0, $i2;
        java.lang.String $r1, $r5, $r11;
        com.kingroot.sdk.gt $r10;
        boolean $z0, $z1;
        com.kingroot.sdk.gw$a $r2, $r9;
        java.lang.StringBuilder $r7, $r12;

        r0 := @this: com.kingroot.sdk.gw;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = null;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label13;

        $r9 = new com.kingroot.sdk.gw$a;

        $r2 = $r9;

        specialinvoke $r9.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r2);

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 6: goto label02;
            case 7: goto label07;
            case 8: goto label01;
            case 9: goto label01;
            case 10: goto label01;
            case 11: goto label05;
            default: goto label01;
        };

     label01:
        $r10 = new com.kingroot.sdk.gt;

        specialinvoke $r10.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r10;

     label02:
        $r3 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $b1 = virtualinvoke $r3.<java.nio.ByteBuffer: byte get()>();

        $i0 = (int) $b1;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label03;

        $i0 = (int) $b1;

        $i0 = $i0 + 256;

     label03:
        $r4 = newarray (byte)[$i0];

        $r3 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r4);

        $r11 = new java.lang.String;

        $r1 = $r11;

        $r5 = r0.<com.kingroot.sdk.gw: java.lang.String kl>;

     label04:
        specialinvoke $r11.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, $r5);

     label05:
        return $r1;

     label06:
        $r6 := @caughtexception;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>($r4);

        return $r5;

     label07:
        $r3 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int getInt()>();

        if $i0 > 104857600 goto label08;

        if $i0 >= 0 goto label09;

     label08:
        $r10 = new com.kingroot.sdk.gt;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("String too long: ");

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r1);

        throw $r10;

     label09:
        $r4 = newarray (byte)[$i0];

        $r3 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r4);

        $r11 = new java.lang.String;

        $r5 = r0.<com.kingroot.sdk.gw: java.lang.String kl>;

     label10:
        specialinvoke $r11.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, $r5);

     label11:
        return $r11;

     label12:
        $r8 := @caughtexception;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>($r4);

        return $r5;

     label13:
        if $z0 == 0 goto label14;

        $r10 = new com.kingroot.sdk.gt;

        specialinvoke $r10.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r10;

     label14:
        return null;

        catch java.io.UnsupportedEncodingException from label04 to label05 with label06;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label12;
    }

    public final java.util.HashMap a(java.util.Map, int, boolean)
    {
        java.util.Map $r1;
        com.kingroot.sdk.gw r0;
        int $i0;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: java.util.Map;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r1 = specialinvoke r0.<com.kingroot.sdk.gw: java.util.Map a(java.util.Map,java.util.Map,int,boolean)>($r2, $r1, $i0, $z0);

        $r2 = (java.util.HashMap) $r1;

        return $r2;
    }

    public final java.util.List a(java.util.List, int, boolean)
    {
        java.lang.Object[] $r4;
        java.util.ArrayList $r2;
        java.util.List $r1;
        com.kingroot.sdk.gw r0;
        int $i0, $i1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $i1 = 0;

        if $r1 == null goto label1;

        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;

     label2:
        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = specialinvoke r0.<com.kingroot.sdk.gw: java.lang.Object[] a(java.lang.Object,int,boolean)>($r3, $i0, $z0);

        if $r4 != null goto label3;

        return null;

     label3:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label4:
        $i0 = lengthof $r4;

        if $i1 < $i0 goto label5;

        return $r2;

     label5:
        $r3 = $r4[$i1];

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label4;
    }

    public final short a(short, int, boolean)
    {
        com.kingroot.sdk.gw$a $r1, $r3;
        java.nio.ByteBuffer $r2;
        short $s1;
        byte $b2;
        com.kingroot.sdk.gw r0;
        int $i0;
        com.kingroot.sdk.gt $r4;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $s1 := @parameter0: short;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label6;

        $r3 = new com.kingroot.sdk.gw$a;

        $r1 = $r3;

        specialinvoke $r3.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r1);

        $b2 = $r1.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b2;

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 11: goto label3;
            case 12: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r4;

     label2:
        $s1 = 0;

     label3:
        return $s1;

     label4:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $b2 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        $s1 = (short) $b2;

        return $s1;

     label5:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $s1 = virtualinvoke $r2.<java.nio.ByteBuffer: short getShort()>();

        return $s1;

     label6:
        if $z0 == 0 goto label7;

        $r4 = new com.kingroot.sdk.gt;

        specialinvoke $r4.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r4;

     label7:
        return $s1;
    }

    public final void a(com.kingroot.sdk.gw$a)
    {
        com.kingroot.sdk.gw r0;
        java.nio.ByteBuffer $r2;
        com.kingroot.sdk.gw$a $r1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: com.kingroot.sdk.gw$a;

        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        staticinvoke <com.kingroot.sdk.gw: int a(com.kingroot.sdk.gw$a,java.nio.ByteBuffer)>($r1, $r2);

        return;
    }

    public final boolean a(boolean, int, boolean)
    {
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $z1 := @parameter2: boolean;

        $b1 = virtualinvoke r0.<com.kingroot.sdk.gw: byte a(byte,int,boolean)>(0, $i0, $z1);

        if $b1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final byte[] a(byte[], int, boolean)
    {
        byte[] $r1;
        com.kingroot.sdk.gw$a $r2, $r3, $r8;
        java.nio.ByteBuffer $r6;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0, $i2;
        java.lang.StringBuilder $r4, $r9;
        java.lang.String $r5;
        com.kingroot.sdk.gt $r7;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = null;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label09;

        $r3 = new com.kingroot.sdk.gw$a;

        $r2 = $r3;

        specialinvoke $r3.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r2);

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i2 = (int) $b1;

        lookupswitch($i2)
        {
            case 9: goto label06;
            case 10: goto label01;
            case 11: goto label05;
            case 12: goto label01;
            case 13: goto label02;
            default: goto label01;
        };

     label01:
        $r7 = new com.kingroot.sdk.gt;

        specialinvoke $r7.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r7;

     label02:
        $r8 = new com.kingroot.sdk.gw$a;

        $r3 = $r8;

        specialinvoke $r8.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r3);

        $b1 = $r3.<com.kingroot.sdk.gw$a: byte km>;

        if $b1 == 0 goto label03;

        $r7 = new com.kingroot.sdk.gt;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("type mismatch, tag: ");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type: ");

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $b1 = $r3.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r5);

        throw $r7;

     label03:
        $i2 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        if $i2 >= 0 goto label04;

        $r7 = new com.kingroot.sdk.gt;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalid size, tag: ");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type: ");

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $b1 = $r3.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r5);

        throw $r7;

     label04:
        $r1 = newarray (byte)[$i2];

        $r6 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r1);

     label05:
        return $r1;

     label06:
        $i0 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        if $i0 >= 0 goto label07;

        $r7 = new com.kingroot.sdk.gt;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("size invalid: ");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r5);

        throw $r7;

     label07:
        $r1 = newarray (byte)[$i0];

        $i2 = 0;

     label08:
        if $i2 >= $i0 goto label10;

        $b1 = $r1[0];

        $b1 = virtualinvoke r0.<com.kingroot.sdk.gw: byte a(byte,int,boolean)>($b1, 0, 1);

        $r1[$i2] = $b1;

        $i2 = $i2 + 1;

        goto label08;

     label09:
        if $z0 == 0 goto label11;

        $r7 = new com.kingroot.sdk.gt;

        specialinvoke $r7.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r7;

     label10:
        return $r1;

     label11:
        return null;
    }

    public final double[] a(double[], int, boolean)
    {
        com.kingroot.sdk.gw$a $r2, $r5;
        double[] $r1;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0, $i2;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r4;
        com.kingroot.sdk.gt $r6;
        boolean $z0, $z1;
        double $d0;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = null;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label7;

        $r5 = new com.kingroot.sdk.gw$a;

        $r2 = $r5;

        specialinvoke $r5.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r2);

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 9: goto label2;
            case 10: goto label1;
            case 11: goto label5;
            default: goto label1;
        };

     label1:
        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r6;

     label2:
        $i0 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        if $i0 >= 0 goto label3;

        $r6 = new com.kingroot.sdk.gt;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("size invalid: ");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r4);

        throw $r6;

     label3:
        $r1 = newarray (double)[$i0];

        $i2 = 0;

     label4:
        if $i2 < $i0 goto label6;

     label5:
        return $r1;

     label6:
        $d0 = $r1[0];

        $d0 = virtualinvoke r0.<com.kingroot.sdk.gw: double a(double,int,boolean)>($d0, 0, 1);

        $r1[$i2] = $d0;

        $i2 = $i2 + 1;

        goto label4;

     label7:
        if $z0 == 0 goto label8;

        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r6;

     label8:
        return null;
    }

    public final float[] a(float[], int, boolean)
    {
        com.kingroot.sdk.gw$a $r2, $r5;
        float[] $r1;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0, $i2;
        float $f0;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r4;
        com.kingroot.sdk.gt $r6;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: float[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = null;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label7;

        $r5 = new com.kingroot.sdk.gw$a;

        $r2 = $r5;

        specialinvoke $r5.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r2);

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 9: goto label2;
            case 10: goto label1;
            case 11: goto label5;
            default: goto label1;
        };

     label1:
        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r6;

     label2:
        $i0 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        if $i0 >= 0 goto label3;

        $r6 = new com.kingroot.sdk.gt;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("size invalid: ");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r4);

        throw $r6;

     label3:
        $r1 = newarray (float)[$i0];

        $i2 = 0;

     label4:
        if $i2 < $i0 goto label6;

     label5:
        return $r1;

     label6:
        $f0 = $r1[0];

        $f0 = virtualinvoke r0.<com.kingroot.sdk.gw: float a(float,int,boolean)>($f0, 0, 1);

        $r1[$i2] = $f0;

        $i2 = $i2 + 1;

        goto label4;

     label7:
        if $z0 == 0 goto label8;

        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r6;

     label8:
        return null;
    }

    public final int[] a(int[], int, boolean)
    {
        com.kingroot.sdk.gw$a $r2, $r5;
        byte $b1;
        int[] $r1;
        com.kingroot.sdk.gw r0;
        int $i0, $i2, $i3;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r4;
        com.kingroot.sdk.gt $r6;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = null;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label7;

        $r5 = new com.kingroot.sdk.gw$a;

        $r2 = $r5;

        specialinvoke $r5.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r2);

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 9: goto label2;
            case 10: goto label1;
            case 11: goto label5;
            default: goto label1;
        };

     label1:
        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r6;

     label2:
        $i0 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        if $i0 >= 0 goto label3;

        $r6 = new com.kingroot.sdk.gt;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("size invalid: ");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r4);

        throw $r6;

     label3:
        $r1 = newarray (int)[$i0];

        $i2 = 0;

     label4:
        if $i2 < $i0 goto label6;

     label5:
        return $r1;

     label6:
        $i3 = $r1[0];

        $i3 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>($i3, 0, 1);

        $r1[$i2] = $i3;

        $i2 = $i2 + 1;

        goto label4;

     label7:
        if $z0 == 0 goto label8;

        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r6;

     label8:
        return null;
    }

    public final long[] a(long[], int, boolean)
    {
        com.kingroot.sdk.gw$a $r2, $r5;
        long $l3;
        long[] $r1;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0, $i2;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r4;
        com.kingroot.sdk.gt $r6;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: long[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = null;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label7;

        $r5 = new com.kingroot.sdk.gw$a;

        $r2 = $r5;

        specialinvoke $r5.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r2);

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 9: goto label2;
            case 10: goto label1;
            case 11: goto label5;
            default: goto label1;
        };

     label1:
        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r6;

     label2:
        $i0 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        if $i0 >= 0 goto label3;

        $r6 = new com.kingroot.sdk.gt;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("size invalid: ");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r4);

        throw $r6;

     label3:
        $r1 = newarray (long)[$i0];

        $i2 = 0;

     label4:
        if $i2 < $i0 goto label6;

     label5:
        return $r1;

     label6:
        $l3 = $r1[0];

        $l3 = virtualinvoke r0.<com.kingroot.sdk.gw: long a(long,int,boolean)>($l3, 0, 1);

        $r1[$i2] = $l3;

        $i2 = $i2 + 1;

        goto label4;

     label7:
        if $z0 == 0 goto label8;

        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r6;

     label8:
        return null;
    }

    public final java.lang.Object[] a(java.lang.Object[], int, boolean)
    {
        java.lang.Object[] $r1;
        com.kingroot.sdk.gw r0;
        int $i0, $i1;
        java.lang.Object $r3;
        com.kingroot.sdk.gt $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        if $r1 == null goto label1;

        $i1 = lengthof $r1;

        if $i1 != 0 goto label2;

     label1:
        $r2 = new com.kingroot.sdk.gt;

        specialinvoke $r2.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("unable to get type of key and value.");

        throw $r2;

     label2:
        $r3 = $r1[0];

        $r1 = specialinvoke r0.<com.kingroot.sdk.gw: java.lang.Object[] a(java.lang.Object,int,boolean)>($r3, $i0, $z0);

        return $r1;
    }

    public final short[] a(short[], int, boolean)
    {
        com.kingroot.sdk.gw$a $r2, $r5;
        short $s3;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0, $i2;
        java.lang.StringBuilder $r3, $r7;
        short[] $r1;
        java.lang.String $r4;
        com.kingroot.sdk.gt $r6;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: short[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = null;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label7;

        $r5 = new com.kingroot.sdk.gw$a;

        $r2 = $r5;

        specialinvoke $r5.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r2);

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 9: goto label2;
            case 10: goto label1;
            case 11: goto label5;
            default: goto label1;
        };

     label1:
        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r6;

     label2:
        $i0 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        if $i0 >= 0 goto label3;

        $r6 = new com.kingroot.sdk.gt;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("size invalid: ");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r4);

        throw $r6;

     label3:
        $r1 = newarray (short)[$i0];

        $i2 = 0;

     label4:
        if $i2 < $i0 goto label6;

     label5:
        return $r1;

     label6:
        $s3 = $r1[0];

        $s3 = virtualinvoke r0.<com.kingroot.sdk.gw: short a(short,int,boolean)>($s3, 0, 1);

        $r1[$i2] = $s3;

        $i2 = $i2 + 1;

        goto label4;

     label7:
        if $z0 == 0 goto label8;

        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r6;

     label8:
        return null;
    }

    public final boolean[] a(boolean[], int, boolean)
    {
        com.kingroot.sdk.gw$a $r2, $r5;
        boolean[] $r1;
        byte $b1;
        com.kingroot.sdk.gw r0;
        int $i0, $i2;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r4;
        com.kingroot.sdk.gt $r6;
        boolean $z0, $z1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r1 = null;

        $z1 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean J(int)>($i0);

        if $z1 == 0 goto label7;

        $r5 = new com.kingroot.sdk.gw$a;

        $r2 = $r5;

        specialinvoke $r5.<com.kingroot.sdk.gw$a: void <init>()>();

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r2);

        $b1 = $r2.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        lookupswitch($i0)
        {
            case 9: goto label2;
            case 10: goto label1;
            case 11: goto label5;
            default: goto label1;
        };

     label1:
        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("type mismatch.");

        throw $r6;

     label2:
        $i0 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, 0, 1);

        if $i0 >= 0 goto label3;

        $r6 = new com.kingroot.sdk.gt;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("size invalid: ");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>($r4);

        throw $r6;

     label3:
        $r1 = newarray (boolean)[$i0];

        $i2 = 0;

     label4:
        if $i2 < $i0 goto label6;

     label5:
        return $r1;

     label6:
        $z0 = $r1[0];

        $z0 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean a(boolean,int,boolean)>($z0, 0, 1);

        $r1[$i2] = $z0;

        $i2 = $i2 + 1;

        goto label4;

     label7:
        if $z0 == 0 goto label8;

        $r6 = new com.kingroot.sdk.gt;

        specialinvoke $r6.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("require field not exist.");

        throw $r6;

     label8:
        return null;
    }

    public final int au(java.lang.String)
    {
        com.kingroot.sdk.gw r0;
        java.lang.String $r1;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: java.lang.String;

        r0.<com.kingroot.sdk.gw: java.lang.String kl> = $r1;

        return 0;
    }

    public final java.lang.Object b(java.lang.Object, int, boolean)
    {
        java.lang.Float $r7;
        byte[] $r15;
        java.lang.Integer $r5;
        byte $b1;
        java.lang.Long $r6;
        int[] $r18;
        java.lang.Short $r4;
        java.util.Map $r10;
        com.kingroot.sdk.gw r0;
        com.kingroot.sdk.gy $r13;
        java.lang.Byte $r2;
        com.kingroot.sdk.gt $r23;
        boolean $z0, $z1;
        java.util.List $r12;
        float $f0;
        short[] $r17;
        java.lang.Object[] $r22;
        java.lang.Double $r8;
        double[] $r21;
        long $l3;
        java.util.HashMap $r11;
        float[] $r20;
        short $s2;
        long[] $r19;
        int $i0;
        java.lang.Boolean $r3;
        java.lang.String $r9;
        double $d0;
        boolean[] $r16;
        java.lang.Object $r1;
        java.lang.Class $r14;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 = $r1 instanceof java.lang.Byte;

        if $z1 == 0 goto label01;

        $b1 = virtualinvoke r0.<com.kingroot.sdk.gw: byte a(byte,int,boolean)>(0, $i0, $z0);

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r2;

     label01:
        $z1 = $r1 instanceof java.lang.Boolean;

        if $z1 == 0 goto label02;

        $z0 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean a(boolean,int,boolean)>(0, $i0, $z0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r3;

     label02:
        $z1 = $r1 instanceof java.lang.Short;

        if $z1 == 0 goto label03;

        $s2 = virtualinvoke r0.<com.kingroot.sdk.gw: short a(short,int,boolean)>(0, $i0, $z0);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        return $r4;

     label03:
        $z1 = $r1 instanceof java.lang.Integer;

        if $z1 == 0 goto label04;

        $i0 = virtualinvoke r0.<com.kingroot.sdk.gw: int a(int,int,boolean)>(0, $i0, $z0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r5;

     label04:
        $z1 = $r1 instanceof java.lang.Long;

        if $z1 == 0 goto label05;

        $l3 = virtualinvoke r0.<com.kingroot.sdk.gw: long a(long,int,boolean)>(0L, $i0, $z0);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        return $r6;

     label05:
        $z1 = $r1 instanceof java.lang.Float;

        if $z1 == 0 goto label06;

        $f0 = virtualinvoke r0.<com.kingroot.sdk.gw: float a(float,int,boolean)>(0.0F, $i0, $z0);

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;

     label06:
        $z1 = $r1 instanceof java.lang.Double;

        if $z1 == 0 goto label07;

        $d0 = virtualinvoke r0.<com.kingroot.sdk.gw: double a(double,int,boolean)>(0.0, $i0, $z0);

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r8;

     label07:
        $z1 = $r1 instanceof java.lang.String;

        if $z1 == 0 goto label08;

        $r9 = virtualinvoke r0.<com.kingroot.sdk.gw: java.lang.String a(int,boolean)>($i0, $z0);

        return $r9;

     label08:
        $z1 = $r1 instanceof java.util.Map;

        if $z1 == 0 goto label09;

        $r10 = (java.util.Map) $r1;

        $r11 = virtualinvoke r0.<com.kingroot.sdk.gw: java.util.HashMap a(java.util.Map,int,boolean)>($r10, $i0, $z0);

        return $r11;

     label09:
        $z1 = $r1 instanceof java.util.List;

        if $z1 == 0 goto label10;

        $r12 = (java.util.List) $r1;

        $r12 = virtualinvoke r0.<com.kingroot.sdk.gw: java.util.List a(java.util.List,int,boolean)>($r12, $i0, $z0);

        return $r12;

     label10:
        $z1 = $r1 instanceof com.kingroot.sdk.gy;

        if $z1 == 0 goto label11;

        $r13 = (com.kingroot.sdk.gy) $r1;

        $r13 = virtualinvoke r0.<com.kingroot.sdk.gw: com.kingroot.sdk.gy a(com.kingroot.sdk.gy,int,boolean)>($r13, $i0, $z0);

        return $r13;

     label11:
        $r14 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r14.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label20;

        $z1 = $r1 instanceof byte[];

        if $z1 != 0 goto label12;

        $z1 = $r1 instanceof java.lang.Byte[];

        if $z1 == 0 goto label13;

     label12:
        $r15 = virtualinvoke r0.<com.kingroot.sdk.gw: byte[] a(byte[],int,boolean)>(null, $i0, $z0);

        return $r15;

     label13:
        $z1 = $r1 instanceof boolean[];

        if $z1 == 0 goto label14;

        $r16 = virtualinvoke r0.<com.kingroot.sdk.gw: boolean[] a(boolean[],int,boolean)>(null, $i0, $z0);

        return $r16;

     label14:
        $z1 = $r1 instanceof short[];

        if $z1 == 0 goto label15;

        $r17 = virtualinvoke r0.<com.kingroot.sdk.gw: short[] a(short[],int,boolean)>(null, $i0, $z0);

        return $r17;

     label15:
        $z1 = $r1 instanceof int[];

        if $z1 == 0 goto label16;

        $r18 = virtualinvoke r0.<com.kingroot.sdk.gw: int[] a(int[],int,boolean)>(null, $i0, $z0);

        return $r18;

     label16:
        $z1 = $r1 instanceof long[];

        if $z1 == 0 goto label17;

        $r19 = virtualinvoke r0.<com.kingroot.sdk.gw: long[] a(long[],int,boolean)>(null, $i0, $z0);

        return $r19;

     label17:
        $z1 = $r1 instanceof float[];

        if $z1 == 0 goto label18;

        $r20 = virtualinvoke r0.<com.kingroot.sdk.gw: float[] a(float[],int,boolean)>(null, $i0, $z0);

        return $r20;

     label18:
        $z1 = $r1 instanceof double[];

        if $z1 == 0 goto label19;

        $r21 = virtualinvoke r0.<com.kingroot.sdk.gw: double[] a(double[],int,boolean)>(null, $i0, $z0);

        return $r21;

     label19:
        $r22 = (java.lang.Object[]) $r1;

        $r22 = virtualinvoke r0.<com.kingroot.sdk.gw: java.lang.Object[] a(java.lang.Object[],int,boolean)>($r22, $i0, $z0);

        return $r22;

     label20:
        $r23 = new com.kingroot.sdk.gt;

        specialinvoke $r23.<com.kingroot.sdk.gt: void <init>(java.lang.String)>("read object error: unsupport type.");

        throw $r23;
    }

    public final void co()
    {
        byte $b1;
        com.kingroot.sdk.gw$a $r1, $r3;
        com.kingroot.sdk.gw r0;
        int $i0;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.kingroot.sdk.gw;

        $r3 = new com.kingroot.sdk.gw$a;

        $r1 = $r3;

        specialinvoke $r3.<com.kingroot.sdk.gw$a: void <init>()>();

     label1:
        $r2 = r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk>;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        if $i0 == 0 goto label2;

        virtualinvoke r0.<com.kingroot.sdk.gw: void a(com.kingroot.sdk.gw$a)>($r1);

        $b1 = $r1.<com.kingroot.sdk.gw$a: byte km>;

        specialinvoke r0.<com.kingroot.sdk.gw: void a(byte)>($b1);

        $b1 = $r1.<com.kingroot.sdk.gw$a: byte km>;

        $i0 = (int) $b1;

        if $i0 != 11 goto label1;

     label2:
        return;
    }

    public final void o(byte[])
    {
        com.kingroot.sdk.gw r0;
        byte[] $r1;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.kingroot.sdk.gw;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r1);

        r0.<com.kingroot.sdk.gw: java.nio.ByteBuffer kk> = $r2;

        return;
    }
}
