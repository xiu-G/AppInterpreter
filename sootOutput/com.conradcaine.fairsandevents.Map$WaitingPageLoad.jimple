class com.conradcaine.fairsandevents.Map$WaitingPageLoad extends java.lang.Object
{
    final com.conradcaine.fairsandevents.Map this$0;
    private java.lang.Thread thread;

    public void <init>(com.conradcaine.fairsandevents.Map)
    {
        com.conradcaine.fairsandevents.Map $r1;
        com.conradcaine.fairsandevents.Map$WaitingPageLoad$1 $r2;
        com.conradcaine.fairsandevents.Map$WaitingPageLoad r0;

        r0 := @this: com.conradcaine.fairsandevents.Map$WaitingPageLoad;

        $r1 := @parameter0: com.conradcaine.fairsandevents.Map;

        r0.<com.conradcaine.fairsandevents.Map$WaitingPageLoad: com.conradcaine.fairsandevents.Map this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.conradcaine.fairsandevents.Map$WaitingPageLoad$1;

        specialinvoke $r2.<com.conradcaine.fairsandevents.Map$WaitingPageLoad$1: void <init>(com.conradcaine.fairsandevents.Map$WaitingPageLoad)>(r0);

        r0.<com.conradcaine.fairsandevents.Map$WaitingPageLoad: java.lang.Thread thread> = $r2;

        return;
    }

    static com.conradcaine.fairsandevents.Map access$0(com.conradcaine.fairsandevents.Map$WaitingPageLoad)
    {
        com.conradcaine.fairsandevents.Map r1;
        com.conradcaine.fairsandevents.Map$WaitingPageLoad $r0;

        $r0 := @parameter0: com.conradcaine.fairsandevents.Map$WaitingPageLoad;

        r1 = $r0.<com.conradcaine.fairsandevents.Map$WaitingPageLoad: com.conradcaine.fairsandevents.Map this$0>;

        return r1;
    }

    public void startThread()
    {
        com.conradcaine.fairsandevents.Map$WaitingPageLoad r0;
        java.lang.Thread $r1;

        r0 := @this: com.conradcaine.fairsandevents.Map$WaitingPageLoad;

        $r1 = r0.<com.conradcaine.fairsandevents.Map$WaitingPageLoad: java.lang.Thread thread>;

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        return;
    }

    public void stopThread()
    {
        com.conradcaine.fairsandevents.Map$WaitingPageLoad r0;
        java.lang.Thread $r1;

        r0 := @this: com.conradcaine.fairsandevents.Map$WaitingPageLoad;

        $r1 = r0.<com.conradcaine.fairsandevents.Map$WaitingPageLoad: java.lang.Thread thread>;

        virtualinvoke $r1.<java.lang.Thread: void stop()>();

        return;
    }
}
