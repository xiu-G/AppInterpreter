public class com.nexage.android.NexageAdFetcher extends java.lang.Object
{
    private static java.util.regex.Pattern s_AdPattern;
    private static boolean s_BannarPaused;
    static java.util.HashMap s_FetcherMap;
    private com.nexage.android.NexageAdFetcher$FetchThread m_FetchThread;
    private java.util.ArrayList m_InterstitialList;
    private volatile boolean m_Ready;
    private final java.util.Vector m_RequestQ;
    private boolean m_Suspended;
    private final java.lang.String position;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <com.nexage.android.NexageAdFetcher: java.util.regex.Pattern s_AdPattern> = null;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap> = $r0;

        <com.nexage.android.NexageAdFetcher: boolean s_BannarPaused> = 0;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        java.util.Vector $r2;
        com.nexage.android.NexageAdFetcher r0;

        r0 := @this: com.nexage.android.NexageAdFetcher;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.nexage.android.NexageAdFetcher: java.util.ArrayList m_InterstitialList> = null;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ> = $r2;

        r0.<com.nexage.android.NexageAdFetcher: boolean m_Ready> = 0;

        r0.<com.nexage.android.NexageAdFetcher: com.nexage.android.NexageAdFetcher$FetchThread m_FetchThread> = null;

        r0.<com.nexage.android.NexageAdFetcher: boolean m_Suspended> = 0;

        r0.<com.nexage.android.NexageAdFetcher: java.lang.String position> = $r1;

        return;
    }

    static boolean access$000(com.nexage.android.NexageAdFetcher)
    {
        com.nexage.android.NexageAdFetcher $r0;
        boolean $z0;

        $r0 := @parameter0: com.nexage.android.NexageAdFetcher;

        $z0 = specialinvoke $r0.<com.nexage.android.NexageAdFetcher: boolean running()>();

        return $z0;
    }

    static java.util.Vector access$100(com.nexage.android.NexageAdFetcher)
    {
        java.util.Vector r1;
        com.nexage.android.NexageAdFetcher $r0;

        $r0 := @parameter0: com.nexage.android.NexageAdFetcher;

        r1 = $r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ>;

        return r1;
    }

    static boolean access$202(com.nexage.android.NexageAdFetcher, boolean)
    {
        com.nexage.android.NexageAdFetcher $r0;
        boolean $z0;

        $r0 := @parameter0: com.nexage.android.NexageAdFetcher;

        $z0 := @parameter1: boolean;

        $r0.<com.nexage.android.NexageAdFetcher: boolean m_Suspended> = $z0;

        return $z0;
    }

    static java.lang.String access$300(com.nexage.android.NexageAdFetcher)
    {
        java.lang.String r1;
        com.nexage.android.NexageAdFetcher $r0;

        $r0 := @parameter0: com.nexage.android.NexageAdFetcher;

        r1 = $r0.<com.nexage.android.NexageAdFetcher: java.lang.String position>;

        return r1;
    }

    static void access$400(com.nexage.android.NexageAdFetcher)
    {
        com.nexage.android.NexageAdFetcher $r0;

        $r0 := @parameter0: com.nexage.android.NexageAdFetcher;

        specialinvoke $r0.<com.nexage.android.NexageAdFetcher: void myWait()>();

        return;
    }

    static void access$500(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        staticinvoke <com.nexage.android.NexageAdFetcher: void pauseBannar(boolean)>($z0);

        return;
    }

    public static void checkPause(java.lang.String)
    {
        java.lang.Throwable $r2, $r3;
        java.lang.Class $r1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        entermonitor class "Lcom/nexage/android/NexageAdFetcher;";

     label1:
        $z0 = <com.nexage.android.NexageAdFetcher: boolean s_BannarPaused>;

     label2:
        if $z0 == 0 goto label5;

     label3:
        $r1 = class "Lcom/nexage/android/NexageAdFetcher;";

     label4:
        virtualinvoke $r1.<java.lang.Object: void wait()>();

     label5:
        exitmonitor class "Lcom/nexage/android/NexageAdFetcher;";

        return;

     label6:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/nexage/android/NexageAdFetcher;";

        throw $r2;

     label7:
        $r3 := @caughtexception;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.InterruptedException from label4 to label5 with label7;
        catch java.lang.Throwable from label3 to label5 with label6;
    }

    public static void checkSuspend()
    {
        java.lang.Throwable $r6, $r7;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        com.nexage.android.NexageAdFetcher r5;
        java.util.HashMap $r0, $r1;
        java.lang.Object $r4;
        boolean $z0;

        staticinvoke <com.nexage.android.NexageAdFetcher: void checkPause(java.lang.String)>("RULE");

        $r0 = <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap>;

        entermonitor $r0;

     label01:
        $r1 = <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.nexage.android.NexageAdFetcher) $r4;

        $z0 = r5.<com.nexage.android.NexageAdFetcher: boolean m_Suspended>;

        if $z0 != 0 goto label02;

        exitmonitor $r0;

     label03:
        return;

     label04:
        staticinvoke <com.nexage.android.NexageLog: void i(java.lang.String,java.lang.String)>("RULE", "Suspend download");

     label05:
        $r1 = <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap>;

     label06:
        virtualinvoke $r1.<java.lang.Object: void wait()>();

     label07:
        $r1 = <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap>;

     label08:
        virtualinvoke $r1.<java.lang.Object: void wait(long)>(250L);

        staticinvoke <com.nexage.android.NexageLog: void i(java.lang.String,java.lang.String)>("RULE", "Resume download");

     label09:
        exitmonitor $r0;

     label10:
        return;

     label11:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label12:
        throw $r6;

     label13:
        $r7 := @caughtexception;

        goto label09;

        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.InterruptedException from label04 to label05 with label13;
        catch java.lang.InterruptedException from label06 to label07 with label13;
        catch java.lang.InterruptedException from label08 to label09 with label13;
        catch java.lang.Throwable from label04 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static com.nexage.android.Ad getAd(com.nexage.android.NexageContext, com.nexage.android.reports2.AdService2, android.app.Activity, java.lang.String, com.nexage.android.rules.AdTag, int)
    {
        com.nexage.android.reports2.AdService2 $r1;
        java.net.HttpURLConnection r10, $r15;
        byte[] $r17;
        java.net.URL r7, $r53;
        com.nexage.android.NexageAdView r22;
        android.view.View $r21;
        boolean $z0;
        com.nexage.android.NexageListener $r25;
        com.nexage.android.NexageExpandableListener $r24;
        java.lang.Exception $r27, $r31, $r33, r34, $r35, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50;
        java.lang.StringBuilder r5, $r52;
        java.lang.Throwable r26, r29, r30, r32, $r36;
        com.nexage.android.rules.AdTag $r4;
        com.nexage.android.interstitial.InterstitialLayout $r20;
        com.nexage.android.OrmmaAd $r23;
        java.net.SocketException $r57;
        java.net.URLConnection $r14;
        int $i0, i1, $i2;
        com.nexage.android.Ad r9;
        java.lang.String $r3, $r8, $r13;
        com.nexage.android.NexageContext $r0;
        java.io.OutputStream $r16;
        java.io.InputStreamReader $r28, $r54;
        java.net.UnknownHostException $r56;
        com.nexage.android.rtb.RTBAd $r51;
        com.nexage.android.interstitial.VideoAd $r19;
        java.io.BufferedReader r6, r12, $r55;
        android.app.Activity $r2;
        java.io.InputStream r11, $r18;

        $r0 := @parameter0: com.nexage.android.NexageContext;

        $r1 := @parameter1: com.nexage.android.reports2.AdService2;

        $r2 := @parameter2: android.app.Activity;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: com.nexage.android.rules.AdTag;

        $i0 := @parameter5: int;

        $r8 = $r4.<com.nexage.android.rules.AdTag: java.lang.String networkId>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("RTB");

        if $z0 == 0 goto label051;

        $r51 = new com.nexage.android.rtb.RTBAd;

        r9 = $r51;

        specialinvoke $r51.<com.nexage.android.rtb.RTBAd: void <init>(com.nexage.android.NexageContext,com.nexage.android.reports2.AdService2)>($r0, $r1);

     label001:
        virtualinvoke r9.<com.nexage.android.Ad: void setTag(com.nexage.android.rules.AdTag)>($r4);

        r10 = null;

        r11 = null;

        r12 = null;

        i1 = -1;

     label002:
        $r8 = $r4.<com.nexage.android.rules.AdTag: java.lang.String adPostParams>;

     label003:
        $i2 = virtualinvoke $r8.<java.lang.String: int length()>();

     label004:
        if $i2 <= 1 goto label053;

        $z0 = 1;

     label005:
        $r8 = virtualinvoke r9.<com.nexage.android.Ad: java.lang.String getRequestURL(com.nexage.android.rules.AdTag)>($r4);

     label006:
        $r52 = new java.lang.StringBuilder;

     label007:
        r5 = $r52;

     label008:
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAd: ");

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r13 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void v(java.lang.String,java.lang.String)>($r3, $r13);

     label009:
        $r53 = new java.net.URL;

     label010:
        r7 = $r53;

     label011:
        specialinvoke $r53.<java.net.URL: void <init>(java.lang.String)>($r8);

        staticinvoke <java.net.HttpURLConnection: void setFollowRedirects(boolean)>(1);

        $r14 = virtualinvoke r7.<java.net.URL: java.net.URLConnection openConnection()>();

     label012:
        $r15 = (java.net.HttpURLConnection) $r14;

     label013:
        r10 = $r15;

     label014:
        virtualinvoke $r15.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        virtualinvoke $r15.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        virtualinvoke $r15.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r15.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Connection", "close");

     label015:
        if $z0 == 0 goto label054;

     label016:
        virtualinvoke $r15.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke $r15.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label017:
        $r8 = <com.nexage.android.NexageContext: java.lang.String s_UserAgent>;

     label018:
        if $r8 == null goto label024;

     label019:
        $r8 = <com.nexage.android.NexageContext: java.lang.String s_UserAgent>;

     label020:
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

     label021:
        if $i0 <= 0 goto label024;

     label022:
        $r8 = <com.nexage.android.NexageContext: java.lang.String s_UserAgent>;

     label023:
        virtualinvoke $r15.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r8);

     label024:
        if $z0 == 0 goto label033;

     label025:
        $r16 = virtualinvoke $r15.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

     label026:
        $r8 = $r4.<com.nexage.android.rules.AdTag: java.lang.String adPostParams>;

     label027:
        $r17 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r16.<java.io.OutputStream: void write(byte[])>($r17);

     label028:
        $r52 = new java.lang.StringBuilder;

     label029:
        r5 = $r52;

     label030:
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("postParams: ");

     label031:
        $r8 = $r4.<com.nexage.android.rules.AdTag: java.lang.String adPostParams>;

     label032:
        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void v(java.lang.String,java.lang.String)>($r3, $r8);

     label033:
        $i0 = virtualinvoke $r15.<java.net.HttpURLConnection: int getResponseCode()>();

     label034:
        if $i0 == 200 goto label035;

        if $i0 != 201 goto label086;

     label035:
        $r18 = virtualinvoke $r15.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label036:
        r11 = $r18;

     label037:
        $r8 = $r4.<com.nexage.android.rules.AdTag: java.lang.String networkId>;

     label038:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("VAST");

     label039:
        if $z0 == 0 goto label065;

     label040:
        $r19 = (com.nexage.android.interstitial.VideoAd) r9;

     label041:
        $i0 = virtualinvoke $r19.<com.nexage.android.interstitial.VideoAd: int prepare(java.io.InputStream)>($r18);

     label042:
        i1 = $i0;

     label043:
        if r11 == null goto label045;

     label044:
        virtualinvoke r11.<java.io.InputStream: void close()>();

     label045:
        if r12 == null goto label047;

     label046:
        virtualinvoke r12.<java.io.BufferedReader: void close()>();

     label047:
        if $r15 == null goto label049;

     label048:
        virtualinvoke $r15.<java.net.HttpURLConnection: void disconnect()>();

     label049:
        lookupswitch(i1)
        {
            case -3: goto label141;
            case -2: goto label140;
            case -1: goto label139;
            default: goto label050;
        };

     label050:
        virtualinvoke r9.<com.nexage.android.Ad: com.nexage.android.reports2.AdNetRequest addRequestToReport(int,com.nexage.android.rules.AdTag)>(i1, $r4);

        if i1 != 1 goto label142;

        return r9;

     label051:
        $r20 = virtualinvoke $r0.<com.nexage.android.NexageContext: com.nexage.android.interstitial.InterstitialLayout interstitialLayout()>();

        if $r20 == null goto label052;

        $r8 = $r4.<com.nexage.android.rules.AdTag: java.lang.String networkId>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("VAST");

        if $z0 == 0 goto label052;

        $r19 = new com.nexage.android.interstitial.VideoAd;

        r9 = $r19;

        specialinvoke $r19.<com.nexage.android.interstitial.VideoAd: void <init>(com.nexage.android.NexageContext,com.nexage.android.reports2.AdService2)>($r0, $r1);

        $i0 = 5000;

        goto label001;

     label052:
        $r23 = new com.nexage.android.OrmmaAd;

        r9 = $r23;

        specialinvoke $r23.<com.nexage.android.OrmmaAd: void <init>(com.nexage.android.NexageContext,com.nexage.android.reports2.AdService2)>($r0, $r1);

        if $r0 == null goto label001;

        $r21 = virtualinvoke $r0.<com.nexage.android.NexageContext: android.view.View getView()>();

        if $r21 == null goto label001;

        if r9 == null goto label001;

        $r21 = virtualinvoke $r0.<com.nexage.android.NexageContext: android.view.View getView()>();

        $z0 = $r21 instanceof com.nexage.android.NexageAdView;

        if $z0 == 0 goto label001;

        $z0 = r9 instanceof com.nexage.android.OrmmaAd;

        if $z0 == 0 goto label001;

        $r21 = virtualinvoke $r0.<com.nexage.android.NexageContext: android.view.View getView()>();

        r22 = (com.nexage.android.NexageAdView) $r21;

        $r23 = (com.nexage.android.OrmmaAd) r9;

        virtualinvoke $r23.<com.nexage.android.OrmmaAd: void setNexageAdView(com.nexage.android.NexageAdView)>(r22);

        $r23 = (com.nexage.android.OrmmaAd) r9;

        $r24 = virtualinvoke r22.<com.nexage.android.NexageAdView: com.nexage.android.NexageExpandableListener getExpandableListener()>();

        virtualinvoke $r23.<com.nexage.android.OrmmaAd: void setExpandableListener(com.nexage.android.NexageExpandableListener)>($r24);

        $r23 = (com.nexage.android.OrmmaAd) r9;

        $r25 = virtualinvoke r22.<com.nexage.android.NexageAdView: com.nexage.android.NexageListener getListener()>();

        virtualinvoke $r23.<com.nexage.android.OrmmaAd: void setNexageListener(com.nexage.android.NexageListener)>($r25);

        goto label001;

     label053:
        $z0 = 0;

        goto label005;

     label054:
        virtualinvoke $r15.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

     label055:
        goto label017;

     label056:
        r26 := @caughtexception;

     label057:
        i1 = -2;

        if r11 == null goto label059;

     label058:
        virtualinvoke r11.<java.io.InputStream: void close()>();

     label059:
        if r12 == null goto label061;

     label060:
        virtualinvoke r12.<java.io.BufferedReader: void close()>();

     label061:
        if r10 == null goto label049;

     label062:
        virtualinvoke r10.<java.net.HttpURLConnection: void disconnect()>();

     label063:
        goto label049;

     label064:
        $r27 := @caughtexception;

        goto label049;

     label065:
        $r52 = new java.lang.StringBuilder;

     label066:
        r5 = $r52;

     label067:
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

     label068:
        $r55 = new java.io.BufferedReader;

     label069:
        r6 = $r55;

     label070:
        $r54 = new java.io.InputStreamReader;

     label071:
        $r28 = $r54;

     label072:
        specialinvoke $r54.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r18);

        specialinvoke $r55.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r28, 4096);

     label073:
        $r8 = virtualinvoke r6.<java.io.BufferedReader: java.lang.String readLine()>();

     label074:
        if $r8 == null goto label078;

     label075:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label076:
        goto label073;

     label077:
        r29 := @caughtexception;

        r12 = r6;

        goto label057;

     label078:
        $r8 = staticinvoke <com.nexage.android.NexageAdFetcher: java.lang.String getAd(java.lang.StringBuilder,com.nexage.android.rules.AdTag)>(r5, $r4);

     label079:
        if $r8 == null goto label082;

     label080:
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

     label081:
        if $i0 >= 32 goto label084;

     label082:
        i1 = -1;

     label083:
        r12 = r6;

        goto label043;

     label084:
        $i0 = virtualinvoke r9.<com.nexage.android.Ad: int prepare(java.lang.String)>($r8);

     label085:
        i1 = $i0;

        goto label083;

     label086:
        $r52 = new java.lang.StringBuilder;

     label087:
        r5 = $r52;

     label088:
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAd got error http status: ");

     label089:
        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(-1);

        $r8 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void d(java.lang.String)>($r8);

     label090:
        goto label043;

     label091:
        r30 := @caughtexception;

     label092:
        $r8 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r52 = new java.lang.StringBuilder;

     label093:
        r5 = $r52;

     label094:
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAd UnknownHostException: ");

        $r56 = (java.net.UnknownHostException) r30;

        $r13 = virtualinvoke $r56.<java.net.UnknownHostException: java.lang.String getMessage()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void w(java.lang.String,java.lang.String)>($r8, $r13);

     label095:
        i1 = -3;

        if r11 == null goto label097;

     label096:
        virtualinvoke r11.<java.io.InputStream: void close()>();

     label097:
        if r12 == null goto label099;

     label098:
        virtualinvoke r12.<java.io.BufferedReader: void close()>();

     label099:
        if r10 == null goto label049;

     label100:
        virtualinvoke r10.<java.net.HttpURLConnection: void disconnect()>();

     label101:
        goto label049;

     label102:
        $r31 := @caughtexception;

        goto label049;

     label103:
        r32 := @caughtexception;

     label104:
        $r8 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r52 = new java.lang.StringBuilder;

     label105:
        r5 = $r52;

     label106:
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAd SocketException: ");

        $r57 = (java.net.SocketException) r32;

        $r13 = virtualinvoke $r57.<java.net.SocketException: java.lang.String getMessage()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void w(java.lang.String,java.lang.String)>($r8, $r13);

     label107:
        i1 = -3;

        if r11 == null goto label109;

     label108:
        virtualinvoke r11.<java.io.InputStream: void close()>();

     label109:
        if r12 == null goto label111;

     label110:
        virtualinvoke r12.<java.io.BufferedReader: void close()>();

     label111:
        if r10 == null goto label049;

     label112:
        virtualinvoke r10.<java.net.HttpURLConnection: void disconnect()>();

     label113:
        goto label049;

     label114:
        $r33 := @caughtexception;

        goto label049;

     label115:
        r34 := @caughtexception;

     label116:
        $r8 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r52 = new java.lang.StringBuilder;

     label117:
        r5 = $r52;

     label118:
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAd Exception: ");

        $r13 = virtualinvoke r34.<java.lang.Exception: java.lang.String getMessage()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void w(java.lang.String,java.lang.String)>($r8, $r13);

     label119:
        i1 = -3;

     label120:
        $r52 = new java.lang.StringBuilder;

     label121:
        r5 = $r52;

     label122:
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fetch (URL) ad exception:");

        $r8 = virtualinvoke r34.<java.lang.Exception: java.lang.String toString()>();

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void w(java.lang.String,java.lang.String)>($r3, $r8);

     label123:
        if r11 == null goto label125;

     label124:
        virtualinvoke r11.<java.io.InputStream: void close()>();

     label125:
        if r12 == null goto label127;

     label126:
        virtualinvoke r12.<java.io.BufferedReader: void close()>();

     label127:
        if r10 == null goto label049;

     label128:
        virtualinvoke r10.<java.net.HttpURLConnection: void disconnect()>();

     label129:
        goto label049;

     label130:
        $r35 := @caughtexception;

        goto label049;

     label131:
        $r36 := @caughtexception;

     label132:
        if r11 == null goto label134;

     label133:
        virtualinvoke r11.<java.io.InputStream: void close()>();

     label134:
        if r12 == null goto label136;

     label135:
        virtualinvoke r12.<java.io.BufferedReader: void close()>();

     label136:
        if r10 == null goto label138;

     label137:
        virtualinvoke r10.<java.net.HttpURLConnection: void disconnect()>();

     label138:
        throw $r36;

     label139:
        staticinvoke <com.nexage.android.NexageLog: void d(java.lang.String,java.lang.String)>($r3, "Error: no ad -- empty");

        goto label050;

     label140:
        staticinvoke <com.nexage.android.NexageLog: void d(java.lang.String,java.lang.String)>($r3, "Error: no ad -- timeout");

        goto label050;

     label141:
        staticinvoke <com.nexage.android.NexageLog: void d(java.lang.String,java.lang.String)>($r3, "Error: no ad -- unknown error");

        goto label050;

     label142:
        return null;

     label143:
        $r37 := @caughtexception;

        goto label045;

     label144:
        $r38 := @caughtexception;

        goto label047;

     label145:
        $r39 := @caughtexception;

        goto label049;

     label146:
        $r40 := @caughtexception;

        goto label059;

     label147:
        $r41 := @caughtexception;

        goto label061;

     label148:
        $r42 := @caughtexception;

        goto label097;

     label149:
        $r43 := @caughtexception;

        goto label099;

     label150:
        $r44 := @caughtexception;

        goto label109;

     label151:
        $r45 := @caughtexception;

        goto label111;

     label152:
        $r46 := @caughtexception;

        goto label125;

     label153:
        $r47 := @caughtexception;

        goto label127;

     label154:
        $r48 := @caughtexception;

        goto label134;

     label155:
        $r49 := @caughtexception;

        goto label136;

     label156:
        $r50 := @caughtexception;

        goto label138;

     label157:
        $r36 := @caughtexception;

        r12 = r6;

        goto label132;

     label158:
        r34 := @caughtexception;

        r12 = r6;

        goto label116;

     label159:
        r32 := @caughtexception;

        r12 = r6;

        goto label104;

     label160:
        r30 := @caughtexception;

        r12 = r6;

        goto label092;

        catch java.net.SocketTimeoutException from label003 to label004 with label056;
        catch java.net.SocketTimeoutException from label005 to label006 with label056;
        catch java.net.SocketTimeoutException from label008 to label009 with label056;
        catch java.net.SocketTimeoutException from label011 to label012 with label056;
        catch java.net.SocketTimeoutException from label014 to label015 with label056;
        catch java.net.SocketTimeoutException from label016 to label017 with label056;
        catch java.net.SocketTimeoutException from label020 to label021 with label056;
        catch java.net.SocketTimeoutException from label023 to label024 with label056;
        catch java.net.SocketTimeoutException from label025 to label026 with label056;
        catch java.net.SocketTimeoutException from label027 to label028 with label056;
        catch java.net.SocketTimeoutException from label030 to label031 with label056;
        catch java.net.SocketTimeoutException from label032 to label034 with label056;
        catch java.net.SocketTimeoutException from label035 to label036 with label056;
        catch java.net.SocketTimeoutException from label038 to label039 with label056;
        catch java.net.SocketTimeoutException from label041 to label042 with label056;
        catch java.net.UnknownHostException from label003 to label004 with label091;
        catch java.net.UnknownHostException from label005 to label006 with label091;
        catch java.net.UnknownHostException from label008 to label009 with label091;
        catch java.net.UnknownHostException from label011 to label012 with label091;
        catch java.net.UnknownHostException from label014 to label015 with label091;
        catch java.net.UnknownHostException from label016 to label017 with label091;
        catch java.net.UnknownHostException from label020 to label021 with label091;
        catch java.net.UnknownHostException from label023 to label024 with label091;
        catch java.net.UnknownHostException from label025 to label026 with label091;
        catch java.net.UnknownHostException from label027 to label028 with label091;
        catch java.net.UnknownHostException from label030 to label031 with label091;
        catch java.net.UnknownHostException from label032 to label034 with label091;
        catch java.net.UnknownHostException from label035 to label036 with label091;
        catch java.net.UnknownHostException from label038 to label039 with label091;
        catch java.net.UnknownHostException from label041 to label042 with label091;
        catch java.net.SocketException from label003 to label004 with label103;
        catch java.net.SocketException from label005 to label006 with label103;
        catch java.net.SocketException from label008 to label009 with label103;
        catch java.net.SocketException from label011 to label012 with label103;
        catch java.net.SocketException from label014 to label015 with label103;
        catch java.net.SocketException from label016 to label017 with label103;
        catch java.net.SocketException from label020 to label021 with label103;
        catch java.net.SocketException from label023 to label024 with label103;
        catch java.net.SocketException from label025 to label026 with label103;
        catch java.net.SocketException from label027 to label028 with label103;
        catch java.net.SocketException from label030 to label031 with label103;
        catch java.net.SocketException from label032 to label034 with label103;
        catch java.net.SocketException from label035 to label036 with label103;
        catch java.net.SocketException from label038 to label039 with label103;
        catch java.net.SocketException from label041 to label042 with label103;
        catch java.lang.Exception from label002 to label004 with label115;
        catch java.lang.Exception from label005 to label006 with label115;
        catch java.lang.Exception from label008 to label009 with label115;
        catch java.lang.Exception from label011 to label013 with label115;
        catch java.lang.Exception from label014 to label015 with label115;
        catch java.lang.Exception from label016 to label017 with label115;
        catch java.lang.Exception from label020 to label021 with label115;
        catch java.lang.Exception from label023 to label024 with label115;
        catch java.lang.Exception from label025 to label028 with label115;
        catch java.lang.Exception from label030 to label034 with label115;
        catch java.lang.Exception from label035 to label036 with label115;
        catch java.lang.Exception from label037 to label039 with label115;
        catch java.lang.Exception from label040 to label042 with label115;
        catch java.lang.Throwable from label002 to label004 with label131;
        catch java.lang.Throwable from label005 to label007 with label131;
        catch java.lang.Throwable from label008 to label010 with label131;
        catch java.lang.Throwable from label011 to label013 with label131;
        catch java.lang.Throwable from label014 to label015 with label131;
        catch java.lang.Throwable from label016 to label018 with label131;
        catch java.lang.Throwable from label019 to label021 with label131;
        catch java.lang.Throwable from label022 to label024 with label131;
        catch java.lang.Throwable from label025 to label029 with label131;
        catch java.lang.Throwable from label030 to label034 with label131;
        catch java.lang.Throwable from label035 to label036 with label131;
        catch java.lang.Throwable from label037 to label039 with label131;
        catch java.lang.Throwable from label040 to label042 with label131;
        catch java.lang.Exception from label044 to label045 with label143;
        catch java.lang.Exception from label046 to label047 with label144;
        catch java.lang.Exception from label048 to label049 with label145;
        catch java.net.SocketTimeoutException from label054 to label055 with label056;
        catch java.net.UnknownHostException from label054 to label055 with label091;
        catch java.net.SocketException from label054 to label055 with label103;
        catch java.lang.Exception from label054 to label055 with label115;
        catch java.lang.Throwable from label054 to label055 with label131;
        catch java.lang.Exception from label058 to label059 with label146;
        catch java.lang.Exception from label060 to label061 with label147;
        catch java.lang.Exception from label062 to label063 with label064;
        catch java.net.SocketTimeoutException from label067 to label068 with label056;
        catch java.net.SocketTimeoutException from label072 to label073 with label056;
        catch java.net.UnknownHostException from label067 to label068 with label091;
        catch java.net.UnknownHostException from label072 to label073 with label091;
        catch java.net.SocketException from label067 to label068 with label103;
        catch java.net.SocketException from label072 to label073 with label103;
        catch java.lang.Exception from label067 to label068 with label115;
        catch java.lang.Exception from label072 to label073 with label115;
        catch java.lang.Throwable from label065 to label066 with label131;
        catch java.lang.Throwable from label067 to label069 with label131;
        catch java.lang.Throwable from label070 to label071 with label131;
        catch java.lang.Throwable from label072 to label073 with label131;
        catch java.net.SocketTimeoutException from label073 to label074 with label077;
        catch java.net.SocketTimeoutException from label075 to label076 with label077;
        catch java.net.SocketTimeoutException from label078 to label079 with label077;
        catch java.net.SocketTimeoutException from label080 to label081 with label077;
        catch java.net.SocketTimeoutException from label084 to label085 with label077;
        catch java.net.UnknownHostException from label073 to label074 with label160;
        catch java.net.UnknownHostException from label075 to label076 with label160;
        catch java.net.UnknownHostException from label078 to label079 with label160;
        catch java.net.UnknownHostException from label080 to label081 with label160;
        catch java.net.UnknownHostException from label084 to label085 with label160;
        catch java.net.SocketException from label073 to label074 with label159;
        catch java.net.SocketException from label075 to label076 with label159;
        catch java.net.SocketException from label078 to label079 with label159;
        catch java.net.SocketException from label080 to label081 with label159;
        catch java.net.SocketException from label084 to label085 with label159;
        catch java.lang.Exception from label073 to label074 with label158;
        catch java.lang.Exception from label075 to label076 with label158;
        catch java.lang.Exception from label078 to label079 with label158;
        catch java.lang.Exception from label080 to label081 with label158;
        catch java.lang.Exception from label084 to label085 with label158;
        catch java.lang.Throwable from label073 to label074 with label157;
        catch java.lang.Throwable from label075 to label076 with label157;
        catch java.lang.Throwable from label078 to label079 with label157;
        catch java.lang.Throwable from label080 to label081 with label157;
        catch java.lang.Throwable from label084 to label085 with label157;
        catch java.net.SocketTimeoutException from label088 to label089 with label056;
        catch java.net.SocketTimeoutException from label089 to label090 with label056;
        catch java.net.UnknownHostException from label088 to label089 with label091;
        catch java.net.UnknownHostException from label089 to label090 with label091;
        catch java.net.SocketException from label088 to label089 with label103;
        catch java.net.SocketException from label089 to label090 with label103;
        catch java.lang.Exception from label088 to label089 with label115;
        catch java.lang.Exception from label089 to label090 with label115;
        catch java.lang.Throwable from label086 to label087 with label131;
        catch java.lang.Throwable from label088 to label089 with label131;
        catch java.lang.Throwable from label089 to label090 with label131;
        catch java.lang.Throwable from label092 to label093 with label131;
        catch java.lang.Throwable from label094 to label095 with label131;
        catch java.lang.Exception from label096 to label097 with label148;
        catch java.lang.Exception from label098 to label099 with label149;
        catch java.lang.Exception from label100 to label101 with label102;
        catch java.lang.Throwable from label104 to label105 with label131;
        catch java.lang.Throwable from label106 to label107 with label131;
        catch java.lang.Exception from label108 to label109 with label150;
        catch java.lang.Exception from label110 to label111 with label151;
        catch java.lang.Exception from label112 to label113 with label114;
        catch java.lang.Throwable from label116 to label117 with label131;
        catch java.lang.Throwable from label118 to label119 with label131;
        catch java.lang.Throwable from label120 to label121 with label131;
        catch java.lang.Throwable from label122 to label123 with label131;
        catch java.lang.Exception from label124 to label125 with label152;
        catch java.lang.Exception from label126 to label127 with label153;
        catch java.lang.Exception from label128 to label129 with label130;
        catch java.lang.Exception from label133 to label134 with label154;
        catch java.lang.Exception from label135 to label136 with label155;
        catch java.lang.Exception from label137 to label138 with label156;
    }

    private static java.lang.String getAd(java.lang.StringBuilder, com.nexage.android.rules.AdTag)
    {
        com.nexage.android.rules.AdTag $r1;
        java.util.regex.Matcher $r5;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r3;
        java.util.regex.Pattern $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: com.nexage.android.rules.AdTag;

        $r2 = $r1.<com.nexage.android.rules.AdTag: java.lang.String networkId>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ADTECH");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<!--(.|\n)*?-->", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        if $z0 == 0 goto label1;

        $r3 = $r1.<com.nexage.android.rules.AdTag: java.lang.String adValidateRegex>;

        if $r3 == null goto label3;

        $r3 = $r1.<com.nexage.android.rules.AdTag: java.lang.String adValidateRegex>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r3 = $r1.<com.nexage.android.rules.AdTag: java.lang.String adValidateRegex>;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        return null;

     label1:
        $r4 = <com.nexage.android.NexageAdFetcher: java.util.regex.Pattern s_AdPattern>;

        if $r4 != null goto label2;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?i)<((a|ref)\\s+href|script|embed|object|link|img|http://)");

        <com.nexage.android.NexageAdFetcher: java.util.regex.Pattern s_AdPattern> = $r4;

     label2:
        $r4 = <com.nexage.android.NexageAdFetcher: java.util.regex.Pattern s_AdPattern>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label3;

        return null;

     label3:
        return $r2;
    }

    static com.nexage.android.NexageAdFetcher getFetcher(java.lang.String)
    {
        com.nexage.android.NexageAdFetcher r3;
        java.lang.Object $r1;
        java.util.HashMap $r2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap>;

        $r1 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        r3 = (com.nexage.android.NexageAdFetcher) $r1;

        if r3 != null goto label1;

        r3 = new com.nexage.android.NexageAdFetcher;

        specialinvoke r3.<com.nexage.android.NexageAdFetcher: void <init>(java.lang.String)>($r0);

        $r2 = <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r3);

     label1:
        return r3;
    }

    private void myWait()
    {
        java.lang.Throwable $r1, $r2;
        com.nexage.android.NexageAdFetcher r0;
        boolean $z0;

        r0 := @this: com.nexage.android.NexageAdFetcher;

        entermonitor r0;

     label1:
        $z0 = r0.<com.nexage.android.NexageAdFetcher: boolean m_Ready>;

     label2:
        if $z0 != 0 goto label4;

     label3:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label4:
        r0.<com.nexage.android.NexageAdFetcher: boolean m_Ready> = 0;

     label5:
        exitmonitor r0;

        return;

     label6:
        $r1 := @caughtexception;

        goto label4;

     label7:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.InterruptedException from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public static void nudgeAllFetchers()
    {
        java.lang.Throwable $r6, $r7;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        com.nexage.android.NexageAdFetcher r5;
        java.util.HashMap $r0, $r1;
        java.lang.Object $r4;
        boolean $z0;

        $r0 = <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap>;

        entermonitor $r0;

     label1:
        $r1 = <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.nexage.android.NexageAdFetcher) $r4;

        entermonitor r5;

     label3:
        virtualinvoke r5.<java.lang.Object: void notifyAll()>();

        r5.<com.nexage.android.NexageAdFetcher: boolean m_Ready> = 1;

        exitmonitor r5;

        goto label2;

     label4:
        $r6 := @caughtexception;

        exitmonitor r5;

     label5:
        throw $r6;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r0;

     label7:
        throw $r7;

     label8:
        exitmonitor $r0;

     label9:
        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label3 to label5 with label4;
        catch java.lang.Throwable from label5 to label7 with label6;
        catch java.lang.Throwable from label8 to label9 with label6;
    }

    private static void pauseBannar(boolean)
    {
        java.lang.Throwable $r1;
        java.lang.Class $r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        entermonitor class "Lcom/nexage/android/NexageAdFetcher;";

     label1:
        <com.nexage.android.NexageAdFetcher: boolean s_BannarPaused> = $z0;

        if $z0 != 0 goto label2;

        $r0 = class "Lcom/nexage/android/NexageAdFetcher;";

        virtualinvoke $r0.<java.lang.Object: void notifyAll()>();

     label2:
        exitmonitor class "Lcom/nexage/android/NexageAdFetcher;";

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/nexage/android/NexageAdFetcher;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean running()
    {
        java.lang.Throwable $r2;
        java.util.Vector $r1;
        com.nexage.android.NexageAdFetcher r0;
        boolean $z0, $z1;

        r0 := @this: com.nexage.android.NexageAdFetcher;

        $z1 = 1;

        entermonitor r0;

     label1:
        $r1 = r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ>;

        $z0 = virtualinvoke $r1.<java.util.Vector: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        r0.<com.nexage.android.NexageAdFetcher: com.nexage.android.NexageAdFetcher$FetchThread m_FetchThread> = null;

        r0.<com.nexage.android.NexageAdFetcher: boolean m_Suspended> = 1;

     label2:
        $z1 = 0;

     label3:
        exitmonitor r0;

        return $z1;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    boolean add(com.nexage.android.NexageContext)
    {
        java.lang.Throwable $r7;
        com.nexage.android.NexageAdFetcher$FetchThread $r8;
        java.lang.IllegalStateException $r6;
        com.nexage.android.interstitial.InterstitialLayout $r3;
        com.nexage.android.NexageAdFetcher r0;
        java.util.Vector $r2;
        int $i0;
        java.lang.Object $r4;
        com.nexage.android.NexageContext $r1, $r5;
        boolean $z0, $z1;

        r0 := @this: com.nexage.android.NexageAdFetcher;

        $r1 := @parameter0: com.nexage.android.NexageContext;

        entermonitor r0;

     label01:
        $r2 = r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ>;

        $z0 = virtualinvoke $r2.<java.util.Vector: boolean isEmpty()>();

        if $z0 != 0 goto label07;

        $r3 = virtualinvoke $r1.<com.nexage.android.NexageContext: com.nexage.android.interstitial.InterstitialLayout interstitialLayout()>();

        if $r3 == null goto label05;

        $z0 = 1;

     label02:
        $r2 = r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ>;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.lang.Object get(int)>(0);

        $r5 = (com.nexage.android.NexageContext) $r4;

        $r3 = virtualinvoke $r5.<com.nexage.android.NexageContext: com.nexage.android.interstitial.InterstitialLayout interstitialLayout()>();

        if $r3 == null goto label06;

        $z1 = 1;

     label03:
        if $z0 == $z1 goto label07;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot use the same Nexage Mediation position for both Interstitial Ad and Banner Ad");

        throw $r6;

     label04:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

     label05:
        $z0 = 0;

        goto label02;

     label06:
        $z1 = 0;

        goto label03;

     label07:
        $r3 = virtualinvoke $r1.<com.nexage.android.NexageContext: com.nexage.android.interstitial.InterstitialLayout interstitialLayout()>();

        if $r3 == null goto label11;

        $r2 = r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ>;

        $z0 = virtualinvoke $r2.<java.util.Vector: boolean isEmpty()>();

        if $z0 != 0 goto label11;

        $z0 = 1;

     label08:
        if $z0 == 0 goto label12;

        $r2 = r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

     label09:
        if $i0 <= 1 goto label12;

        $z0 = 0;

     label10:
        exitmonitor r0;

        return $z0;

     label11:
        $z0 = 0;

        goto label08;

     label12:
        $r2 = r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ>;

        virtualinvoke $r2.<java.util.Vector: boolean add(java.lang.Object)>($r1);

        if $z0 == 0 goto label13;

        $z0 = 1;

        goto label10;

     label13:
        $r8 = r0.<com.nexage.android.NexageAdFetcher: com.nexage.android.NexageAdFetcher$FetchThread m_FetchThread>;

        if $r8 != null goto label15;

        $r8 = new com.nexage.android.NexageAdFetcher$FetchThread;

        specialinvoke $r8.<com.nexage.android.NexageAdFetcher$FetchThread: void <init>(com.nexage.android.NexageAdFetcher)>(r0);

        r0.<com.nexage.android.NexageAdFetcher: com.nexage.android.NexageAdFetcher$FetchThread m_FetchThread> = $r8;

        $r8 = r0.<com.nexage.android.NexageAdFetcher: com.nexage.android.NexageAdFetcher$FetchThread m_FetchThread>;

        virtualinvoke $r8.<com.nexage.android.NexageAdFetcher$FetchThread: void start()>();

     label14:
        $z0 = 1;

        goto label10;

     label15:
        virtualinvoke $r1.<com.nexage.android.NexageContext: void nudgeAdFetcher()>();

     label16:
        goto label14;

        catch java.lang.Throwable from label01 to label04 with label04;
        catch java.lang.Throwable from label07 to label09 with label04;
        catch java.lang.Throwable from label12 to label16 with label04;
    }

    java.util.ArrayList getInterstitialList()
    {
        java.lang.Throwable $r2;
        com.nexage.android.NexageAdFetcher r0;
        java.util.ArrayList $r1;

        r0 := @this: com.nexage.android.NexageAdFetcher;

        entermonitor r0;

     label1:
        $r1 = r0.<com.nexage.android.NexageAdFetcher: java.util.ArrayList m_InterstitialList>;

        if $r1 != null goto label2;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.nexage.android.NexageAdFetcher: java.util.ArrayList m_InterstitialList> = $r1;

     label2:
        $r1 = r0.<com.nexage.android.NexageAdFetcher: java.util.ArrayList m_InterstitialList>;

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void remove(com.nexage.android.NexageContext)
    {
        java.lang.Throwable $r6, $r7;
        com.nexage.android.interstitial.InterstitialLayout $r3;
        com.nexage.android.NexageAdFetcher r0;
        java.util.HashMap $r4, $r5;
        java.util.Vector $r2;
        java.lang.Object $r8;
        com.nexage.android.NexageContext $r1;
        boolean $z0;

        r0 := @this: com.nexage.android.NexageAdFetcher;

        $r1 := @parameter0: com.nexage.android.NexageContext;

        entermonitor r0;

     label1:
        $r2 = r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ>;

        virtualinvoke $r2.<java.util.Vector: boolean remove(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r1.<com.nexage.android.NexageContext: com.nexage.android.interstitial.InterstitialLayout interstitialLayout()>();

        if $r3 != null goto label8;

        $r4 = <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap>;

        entermonitor $r4;

     label2:
        $r5 = <com.nexage.android.NexageAdFetcher: java.util.HashMap s_FetcherMap>;

        virtualinvoke $r5.<java.lang.Object: void notify()>();

        exitmonitor $r4;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor $r4;

     label6:
        throw $r6;

     label7:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

     label8:
        $r2 = r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ>;

        $z0 = virtualinvoke $r2.<java.util.Vector: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<com.nexage.android.NexageAdFetcher: java.util.Vector m_RequestQ>;

        $r8 = virtualinvoke $r2.<java.util.Vector: java.lang.Object get(int)>(0);

        $r1 = (com.nexage.android.NexageContext) $r8;

        if $r1 == null goto label3;

        $r3 = virtualinvoke $r1.<com.nexage.android.NexageContext: com.nexage.android.interstitial.InterstitialLayout interstitialLayout()>();

        if $r3 == null goto label3;

        virtualinvoke $r1.<com.nexage.android.NexageContext: void nudgeAdFetcher()>();

     label9:
        goto label3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void wake()
    {
        java.lang.Throwable $r1;
        com.nexage.android.NexageAdFetcher r0;

        r0 := @this: com.nexage.android.NexageAdFetcher;

        entermonitor r0;

     label1:
        r0.<com.nexage.android.NexageAdFetcher: boolean m_Ready> = 1;

        virtualinvoke r0.<java.lang.Object: void notify()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
