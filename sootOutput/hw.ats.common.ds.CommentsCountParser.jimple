public class hw.ats.common.ds.CommentsCountParser extends java.lang.Object
{

    public void <init>()
    {
        hw.ats.common.ds.CommentsCountParser r0;

        r0 := @this: hw.ats.common.ds.CommentsCountParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int parse(java.lang.String)
    {
        byte[] $r10;
        java.net.URL r4, $r14;
        javax.xml.parsers.SAXParserFactory $r5;
        org.xml.sax.XMLReader $r7;
        java.net.URLConnection $r8;
        hw.ats.common.ds.CommentsCountParser$XmlHandler r3, $r17;
        javax.xml.parsers.SAXParser $r6;
        int $i0;
        hw.ats.common.ds.CommentsCountParser r0;
        java.lang.String $r1, $r16;
        org.apache.http.util.ByteArrayBuffer r2, $r15;
        org.xml.sax.InputSource $r12, $r19;
        java.lang.Exception $r11;
        java.io.StringReader $r13, $r18;
        java.io.InputStream $r9;

        r0 := @this: hw.ats.common.ds.CommentsCountParser;

        $r1 := @parameter0: java.lang.String;

        $r14 = new java.net.URL;

        r4 = $r14;

     label01:
        specialinvoke $r14.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r5 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r6 = virtualinvoke $r5.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r7 = virtualinvoke $r6.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        $r8 = virtualinvoke r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r9 = virtualinvoke $r8.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label02:
        $r15 = new org.apache.http.util.ByteArrayBuffer;

        r2 = $r15;

     label03:
        specialinvoke $r15.<org.apache.http.util.ByteArrayBuffer: void <init>(int)>(1000);

     label04:
        $r10 = newarray (byte)[1024];

     label05:
        $i0 = virtualinvoke $r9.<java.io.InputStream: int read(byte[])>($r10);

     label06:
        if $i0 == -1 goto label10;

     label07:
        virtualinvoke r2.<org.apache.http.util.ByteArrayBuffer: void append(byte[],int,int)>($r10, 0, $i0);

     label08:
        goto label05;

     label09:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

        return 0;

     label10:
        $r16 = new java.lang.String;

        $r1 = $r16;

     label11:
        $r10 = virtualinvoke r2.<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>();

        specialinvoke $r16.<java.lang.String: void <init>(byte[],java.lang.String)>($r10, "UTF-8");

     label12:
        $r17 = new hw.ats.common.ds.CommentsCountParser$XmlHandler;

        r3 = $r17;

     label13:
        specialinvoke $r17.<hw.ats.common.ds.CommentsCountParser$XmlHandler: void <init>(hw.ats.common.ds.CommentsCountParser)>(r0);

        interfaceinvoke $r7.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r3);

     label14:
        $r19 = new org.xml.sax.InputSource;

        $r12 = $r19;

        $r18 = new java.io.StringReader;

        $r13 = $r18;

     label15:
        specialinvoke $r18.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke $r19.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r13);

        interfaceinvoke $r7.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r12);

        $r1 = virtualinvoke r3.<hw.ats.common.ds.CommentsCountParser$XmlHandler: java.lang.String getCommentsCount()>();

        $i0 = staticinvoke <com.humanwares.util.StringUtil: int intValue(java.lang.String)>($r1);

     label16:
        return $i0;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label11 to label12 with label09;
        catch java.lang.Exception from label13 to label14 with label09;
        catch java.lang.Exception from label15 to label16 with label09;
    }
}
