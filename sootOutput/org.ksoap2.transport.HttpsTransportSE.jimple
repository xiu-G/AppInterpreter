public class org.ksoap2.transport.HttpsTransportSE extends org.ksoap2.transport.HttpTransportSE
{
    static final java.lang.String PROTOCOL;
    private org.ksoap2.transport.HttpsServiceConnectionSE conn;
    private final java.lang.String file;
    private final java.lang.String host;
    private final int port;
    private final int timeout;

    public void <init>(java.lang.String, int, java.lang.String, int)
    {
        org.ksoap2.transport.HttpsTransportSE r0;
        java.lang.StringBuffer $r3;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r4;

        r0 := @this: org.ksoap2.transport.HttpsTransportSE;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $i1 := @parameter3: int;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("https://");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<org.ksoap2.transport.HttpTransportSE: void <init>(java.lang.String)>($r4);

        r0.<org.ksoap2.transport.HttpsTransportSE: org.ksoap2.transport.HttpsServiceConnectionSE conn> = null;

        r0.<org.ksoap2.transport.HttpsTransportSE: java.lang.String host> = $r1;

        r0.<org.ksoap2.transport.HttpsTransportSE: int port> = $i0;

        r0.<org.ksoap2.transport.HttpsTransportSE: java.lang.String file> = $r2;

        r0.<org.ksoap2.transport.HttpsTransportSE: int timeout> = $i1;

        return;
    }

    public org.ksoap2.transport.ServiceConnection getConnection()
    {
        org.ksoap2.transport.HttpsTransportSE r0;
        org.ksoap2.transport.HttpsServiceConnectionSE r1;

        r0 := @this: org.ksoap2.transport.HttpsTransportSE;

        r1 = r0.<org.ksoap2.transport.HttpsTransportSE: org.ksoap2.transport.HttpsServiceConnectionSE conn>;

        return r1;
    }

    public java.lang.String getHost()
    {
        org.ksoap2.transport.HttpsTransportSE r0;
        java.lang.Throwable r1;
        java.net.MalformedURLException $r5;
        java.net.URL $r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.ksoap2.transport.HttpsTransportSE;

        $r4 = new java.net.URL;

        $r2 = $r4;

        $r3 = r0.<org.ksoap2.transport.HttpsTransportSE: java.lang.String url>;

     label1:
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>();

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r5 = (java.net.MalformedURLException) r1;

        virtualinvoke $r5.<java.net.MalformedURLException: void printStackTrace()>();

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public java.lang.String getPath()
    {
        org.ksoap2.transport.HttpsTransportSE r0;
        java.lang.Throwable r1;
        java.net.MalformedURLException $r5;
        java.net.URL $r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.ksoap2.transport.HttpsTransportSE;

        $r4 = new java.net.URL;

        $r2 = $r4;

        $r3 = r0.<org.ksoap2.transport.HttpsTransportSE: java.lang.String url>;

     label1:
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>();

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r5 = (java.net.MalformedURLException) r1;

        virtualinvoke $r5.<java.net.MalformedURLException: void printStackTrace()>();

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public int getPort()
    {
        org.ksoap2.transport.HttpsTransportSE r0;
        java.lang.Throwable r1;
        java.net.MalformedURLException $r5;
        java.net.URL $r2, $r4;
        int $i0;
        java.lang.String $r3;

        r0 := @this: org.ksoap2.transport.HttpsTransportSE;

        $r4 = new java.net.URL;

        $r2 = $r4;

        $r3 = r0.<org.ksoap2.transport.HttpsTransportSE: java.lang.String url>;

     label1:
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3);

        $i0 = virtualinvoke $r2.<java.net.URL: int getPort()>();

     label2:
        return $i0;

     label3:
        r1 := @caughtexception;

        $r5 = (java.net.MalformedURLException) r1;

        virtualinvoke $r5.<java.net.MalformedURLException: void printStackTrace()>();

        $i0 = -1;

        return $i0;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    protected org.ksoap2.transport.ServiceConnection getServiceConnection() throws java.io.IOException
    {
        org.ksoap2.transport.HttpsTransportSE r0;
        int $i0, $i1;
        org.ksoap2.transport.HttpsServiceConnectionSE $r3;
        java.lang.String $r1, $r2;

        r0 := @this: org.ksoap2.transport.HttpsTransportSE;

        $r3 = new org.ksoap2.transport.HttpsServiceConnectionSE;

        $r1 = r0.<org.ksoap2.transport.HttpsTransportSE: java.lang.String host>;

        $i0 = r0.<org.ksoap2.transport.HttpsTransportSE: int port>;

        $r2 = r0.<org.ksoap2.transport.HttpsTransportSE: java.lang.String file>;

        $i1 = r0.<org.ksoap2.transport.HttpsTransportSE: int timeout>;

        specialinvoke $r3.<org.ksoap2.transport.HttpsServiceConnectionSE: void <init>(java.lang.String,int,java.lang.String,int)>($r1, $i0, $r2, $i1);

        r0.<org.ksoap2.transport.HttpsTransportSE: org.ksoap2.transport.HttpsServiceConnectionSE conn> = $r3;

        $r3 = r0.<org.ksoap2.transport.HttpsTransportSE: org.ksoap2.transport.HttpsServiceConnectionSE conn>;

        return $r3;
    }

    public static void <clinit>()
    {
        <org.ksoap2.transport.HttpsTransportSE: java.lang.String PROTOCOL> = "https";

        return;
    }
}
