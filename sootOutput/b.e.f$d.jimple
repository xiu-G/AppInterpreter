final class b.e.f$d extends java.lang.Object implements java.util.Iterator, java.util.Map$Entry
{
    int b;
    int c;
    boolean d;
    final b.e.f e;

    void <init>(b.e.f)
    {
        int $i0;
        b.e.f $r1;
        b.e.f$d r0;

        r0 := @this: b.e.f$d;

        $r1 := @parameter0: b.e.f;

        r0.<b.e.f$d: b.e.f e> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<b.e.f$d: boolean d> = 0;

        $i0 = virtualinvoke $r1.<b.e.f: int d()>();

        $i0 = $i0 + -1;

        r0.<b.e.f$d: int b> = $i0;

        r0.<b.e.f$d: int c> = -1;

        return;
    }

    public java.util.Map$Entry b()
    {
        b.e.f$d r0;
        int $i0;
        java.util.NoSuchElementException $r1;
        boolean $z0;

        r0 := @this: b.e.f$d;

        $z0 = virtualinvoke r0.<b.e.f$d: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<b.e.f$d: int c>;

        $i0 = $i0 + 1;

        r0.<b.e.f$d: int c> = $i0;

        r0.<b.e.f$d: boolean d> = 1;

        return r0;

     label1:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.IllegalStateException $r5;
        java.util.Map$Entry $r2;
        b.e.f $r3;
        b.e.f$d r0;
        int $i0;
        java.lang.Object $r1, $r4;
        boolean $z0;

        r0 := @this: b.e.f$d;

        $r1 := @parameter0: java.lang.Object;

        $z0 = r0.<b.e.f$d: boolean d>;

        if $z0 == 0 goto label2;

        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (java.util.Map$Entry) $r1;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = r0.<b.e.f$d: b.e.f e>;

        $i0 = r0.<b.e.f$d: int c>;

        $r4 = virtualinvoke $r3.<b.e.f: java.lang.Object b(int,int)>($i0, 0);

        $z0 = staticinvoke <b.e.c: boolean c(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r3 = r0.<b.e.f$d: b.e.f e>;

        $i0 = r0.<b.e.f$d: int c>;

        $r4 = virtualinvoke $r3.<b.e.f: java.lang.Object b(int,int)>($i0, 1);

        $z0 = staticinvoke <b.e.c: boolean c(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 == 0 goto label3;

        return 1;

     label2:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r5;

     label3:
        return 0;
    }

    public java.lang.Object getKey()
    {
        java.lang.IllegalStateException $r3;
        b.e.f$d r0;
        int $i0;
        java.lang.Object $r1;
        b.e.f $r2;
        boolean $z0;

        r0 := @this: b.e.f$d;

        $z0 = r0.<b.e.f$d: boolean d>;

        if $z0 == 0 goto label1;

        $r2 = r0.<b.e.f$d: b.e.f e>;

        $i0 = r0.<b.e.f$d: int c>;

        $r1 = virtualinvoke $r2.<b.e.f: java.lang.Object b(int,int)>($i0, 0);

        return $r1;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r3;
    }

    public java.lang.Object getValue()
    {
        java.lang.IllegalStateException $r3;
        b.e.f$d r0;
        int $i0;
        java.lang.Object $r1;
        b.e.f $r2;
        boolean $z0;

        r0 := @this: b.e.f$d;

        $z0 = r0.<b.e.f$d: boolean d>;

        if $z0 == 0 goto label1;

        $r2 = r0.<b.e.f$d: b.e.f e>;

        $i0 = r0.<b.e.f$d: int c>;

        $r1 = virtualinvoke $r2.<b.e.f: java.lang.Object b(int,int)>($i0, 1);

        return $r1;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r3;
    }

    public boolean hasNext()
    {
        int $i0, $i1;
        b.e.f$d r0;

        r0 := @this: b.e.f$d;

        $i1 = r0.<b.e.f$d: int c>;

        $i0 = r0.<b.e.f$d: int b>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        java.lang.IllegalStateException $r4;
        b.e.f $r1;
        b.e.f$d r0;
        int $i0, $i1;
        java.lang.Object $r2, $r3;
        boolean $z0;

        r0 := @this: b.e.f$d;

        $z0 = r0.<b.e.f$d: boolean d>;

        if $z0 == 0 goto label4;

        $r1 = r0.<b.e.f$d: b.e.f e>;

        $i0 = r0.<b.e.f$d: int c>;

        $i1 = 0;

        $r2 = virtualinvoke $r1.<b.e.f: java.lang.Object b(int,int)>($i0, 0);

        $r1 = r0.<b.e.f$d: b.e.f e>;

        $i0 = r0.<b.e.f$d: int c>;

        $r3 = virtualinvoke $r1.<b.e.f: java.lang.Object b(int,int)>($i0, 1);

        if $r2 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        if $r3 == null goto label3;

        $i1 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label3:
        $i1 = $i0 ^ $i1;

        return $i1;

     label4:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r4;
    }

    public volatile java.lang.Object next()
    {
        b.e.f$d r0;

        r0 := @this: b.e.f$d;

        virtualinvoke r0.<b.e.f$d: java.util.Map$Entry b()>();

        return r0;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r2;
        b.e.f$d r0;
        int $i0;
        b.e.f $r1;
        boolean $z0;

        r0 := @this: b.e.f$d;

        $z0 = r0.<b.e.f$d: boolean d>;

        if $z0 == 0 goto label1;

        $r1 = r0.<b.e.f$d: b.e.f e>;

        $i0 = r0.<b.e.f$d: int c>;

        virtualinvoke $r1.<b.e.f: void h(int)>($i0);

        $i0 = r0.<b.e.f$d: int c>;

        $i0 = $i0 + -1;

        r0.<b.e.f$d: int c> = $i0;

        $i0 = r0.<b.e.f$d: int b>;

        $i0 = $i0 + -1;

        r0.<b.e.f$d: int b> = $i0;

        r0.<b.e.f$d: boolean d> = 0;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.lang.IllegalStateException $r3;
        b.e.f$d r0;
        int $i0;
        java.lang.Object $r1;
        b.e.f $r2;
        boolean $z0;

        r0 := @this: b.e.f$d;

        $r1 := @parameter0: java.lang.Object;

        $z0 = r0.<b.e.f$d: boolean d>;

        if $z0 == 0 goto label1;

        $r2 = r0.<b.e.f$d: b.e.f e>;

        $i0 = r0.<b.e.f$d: int c>;

        $r1 = virtualinvoke $r2.<b.e.f: java.lang.Object i(int,java.lang.Object)>($i0, $r1);

        return $r1;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r3;
    }

    public java.lang.String toString()
    {
        b.e.f$d r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: b.e.f$d;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<b.e.f$d: java.lang.Object getKey()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r2 = virtualinvoke r0.<b.e.f$d: java.lang.Object getValue()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
