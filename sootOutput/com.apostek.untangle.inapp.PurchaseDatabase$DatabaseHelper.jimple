class com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper extends android.database.sqlite.SQLiteOpenHelper
{
    final com.apostek.untangle.inapp.PurchaseDatabase this$0;

    public void <init>(com.apostek.untangle.inapp.PurchaseDatabase, android.content.Context)
    {
        com.apostek.untangle.inapp.PurchaseDatabase $r1;
        android.content.Context $r2;
        com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper r0;

        r0 := @this: com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper;

        $r1 := @parameter0: com.apostek.untangle.inapp.PurchaseDatabase;

        $r2 := @parameter1: android.content.Context;

        r0.<com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper: com.apostek.untangle.inapp.PurchaseDatabase this$0> = $r1;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r2, "purchase.db", null, 1);

        return;
    }

    private void createPurchaseTable(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper r0;

        r0 := @this: com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE history(_id TEXT PRIMARY KEY, state INTEGER, productId TEXT, developerPayload TEXT, purchaseTime INTEGER)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE purchased(_id TEXT PRIMARY KEY, quantity INTEGER)");

        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper r0;

        r0 := @this: com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper: void createPurchaseTable(android.database.sqlite.SQLiteDatabase)>($r1);

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 == 1 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Database upgrade from old: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PurchaseDatabase", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS history");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS purchased");

        specialinvoke r0.<com.apostek.untangle.inapp.PurchaseDatabase$DatabaseHelper: void createPurchaseTable(android.database.sqlite.SQLiteDatabase)>($r1);

     label1:
        return;
    }
}
