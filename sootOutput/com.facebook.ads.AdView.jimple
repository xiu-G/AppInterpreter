public class com.facebook.ads.AdView extends android.widget.RelativeLayout implements com.facebook.ads.Ad
{
    private static final int DEFAULT_ALPHA;
    private static final java.lang.String DEFAULT_ENCODING;
    private static final java.lang.String DEFAULT_MIME_TYPE;
    private static final int MIN_ALPHA;
    private static final java.lang.String TAG;
    private com.facebook.ads.internal.HtmlAdHandler adHandler;
    private com.facebook.ads.AdListener adListener;
    private com.facebook.ads.internal.AdRequestController adRequestController;
    private final com.facebook.ads.AdSize adSize;
    private android.webkit.WebView adWebView;
    private int currentAlpha;
    private com.facebook.ads.ImpressionListener impListener;
    private final android.util.DisplayMetrics metrics;
    private final java.lang.String placementId;
    private final com.facebook.ads.AdView$ScreenStateReceiver screenStateReceiver;
    private int viewabilityThreshold;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        <com.facebook.ads.AdView: int MIN_ALPHA> = 229;

        <com.facebook.ads.AdView: java.lang.String DEFAULT_MIME_TYPE> = "text/html";

        <com.facebook.ads.AdView: java.lang.String DEFAULT_ENCODING> = "utf-8";

        <com.facebook.ads.AdView: int DEFAULT_ALPHA> = 255;

        $r1 = class "Lcom/facebook/ads/AdView;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.facebook.ads.AdView: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>(android.content.Context, java.lang.String, com.facebook.ads.AdSize)
    {
        com.facebook.ads.AdView r0;
        android.content.Context $r1;
        com.facebook.ads.AdSize $r3, $r5;
        java.lang.IllegalArgumentException $r6;
        com.facebook.ads.AdView$ScreenStateReceiver $r9;
        android.util.DisplayMetrics $r8;
        com.facebook.ads.AdView$1 $r4;
        com.facebook.ads.internal.HtmlAdHandler $r10;
        java.lang.String $r2;
        android.webkit.WebView $r11;
        android.content.res.Resources $r7;

        r0 := @this: com.facebook.ads.AdView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.facebook.ads.AdSize;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context)>($r1);

        r0.<com.facebook.ads.AdView: int currentAlpha> = 255;

        r0.<com.facebook.ads.AdView: com.facebook.ads.AdListener adListener> = null;

        r0.<com.facebook.ads.AdView: com.facebook.ads.ImpressionListener impListener> = null;

        if $r3 == null goto label1;

        $r5 = <com.facebook.ads.AdSize: com.facebook.ads.AdSize INTERSTITIAL>;

        if $r3 != $r5 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("adSize");

        throw $r6;

     label2:
        r0.<com.facebook.ads.AdView: java.lang.String placementId> = $r2;

        r0.<com.facebook.ads.AdView: com.facebook.ads.AdSize adSize> = $r3;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r0.<com.facebook.ads.AdView: android.util.DisplayMetrics metrics> = $r8;

        $r9 = new com.facebook.ads.AdView$ScreenStateReceiver;

        specialinvoke $r9.<com.facebook.ads.AdView$ScreenStateReceiver: void <init>(com.facebook.ads.AdView,com.facebook.ads.AdView$1)>(r0, null);

        r0.<com.facebook.ads.AdView: com.facebook.ads.AdView$ScreenStateReceiver screenStateReceiver> = $r9;

        specialinvoke r0.<com.facebook.ads.AdView: void initializeView(android.content.Context)>($r1);

        $r10 = new com.facebook.ads.internal.HtmlAdHandler;

        $r11 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        $r4 = new com.facebook.ads.AdView$1;

        specialinvoke $r4.<com.facebook.ads.AdView$1: void <init>(com.facebook.ads.AdView)>(r0);

        specialinvoke $r10.<com.facebook.ads.internal.HtmlAdHandler: void <init>(android.webkit.WebView,com.facebook.ads.internal.AdHandler$ImpressionHelper,long,android.content.Context)>($r11, $r4, 1000L, $r1);

        r0.<com.facebook.ads.AdView: com.facebook.ads.internal.HtmlAdHandler adHandler> = $r10;

        specialinvoke r0.<com.facebook.ads.AdView: void registerScreenStateReceiver()>();

        return;
    }

    static boolean access$100(com.facebook.ads.AdView)
    {
        com.facebook.ads.AdView $r0;
        boolean $z0;

        $r0 := @parameter0: com.facebook.ads.AdView;

        $z0 = specialinvoke $r0.<com.facebook.ads.AdView: boolean isAdViewVisible()>();

        return $z0;
    }

    static com.facebook.ads.internal.AdRequestController access$200(com.facebook.ads.AdView)
    {
        com.facebook.ads.AdView $r0;
        com.facebook.ads.internal.AdRequestController r1;

        $r0 := @parameter0: com.facebook.ads.AdView;

        r1 = $r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequestController adRequestController>;

        return r1;
    }

    static com.facebook.ads.ImpressionListener access$300(com.facebook.ads.AdView)
    {
        com.facebook.ads.AdView $r0;
        com.facebook.ads.ImpressionListener r1;

        $r0 := @parameter0: com.facebook.ads.AdView;

        r1 = $r0.<com.facebook.ads.AdView: com.facebook.ads.ImpressionListener impListener>;

        return r1;
    }

    static com.facebook.ads.internal.HtmlAdHandler access$500(com.facebook.ads.AdView)
    {
        com.facebook.ads.AdView $r0;
        com.facebook.ads.internal.HtmlAdHandler r1;

        $r0 := @parameter0: com.facebook.ads.AdView;

        r1 = $r0.<com.facebook.ads.AdView: com.facebook.ads.internal.HtmlAdHandler adHandler>;

        return r1;
    }

    static com.facebook.ads.AdListener access$600(com.facebook.ads.AdView)
    {
        com.facebook.ads.AdView $r0;
        com.facebook.ads.AdListener r1;

        $r0 := @parameter0: com.facebook.ads.AdView;

        r1 = $r0.<com.facebook.ads.AdView: com.facebook.ads.AdListener adListener>;

        return r1;
    }

    static void access$700(com.facebook.ads.AdView, com.facebook.ads.internal.HtmlAdDataModel)
    {
        com.facebook.ads.AdView $r0;
        com.facebook.ads.internal.HtmlAdDataModel $r1;

        $r0 := @parameter0: com.facebook.ads.AdView;

        $r1 := @parameter1: com.facebook.ads.internal.HtmlAdDataModel;

        specialinvoke $r0.<com.facebook.ads.AdView: void updateView(com.facebook.ads.internal.HtmlAdDataModel)>($r1);

        return;
    }

    static int access$802(com.facebook.ads.AdView, int)
    {
        com.facebook.ads.AdView $r0;
        int $i0;

        $r0 := @parameter0: com.facebook.ads.AdView;

        $i0 := @parameter1: int;

        $r0.<com.facebook.ads.AdView: int viewabilityThreshold> = $i0;

        return $i0;
    }

    static java.lang.String access$900()
    {
        java.lang.String r0;

        r0 = <com.facebook.ads.AdView: java.lang.String TAG>;

        return r0;
    }

    private com.facebook.ads.internal.AdRequest$Callback createAdRequestCallback()
    {
        com.facebook.ads.AdView r0;
        com.facebook.ads.AdView$2 $r1;

        r0 := @this: com.facebook.ads.AdView;

        $r1 = new com.facebook.ads.AdView$2;

        specialinvoke $r1.<com.facebook.ads.AdView$2: void <init>(com.facebook.ads.AdView)>(r0);

        return $r1;
    }

    private void ensureAdRequestController()
    {
        com.facebook.ads.AdView r0;
        com.facebook.ads.internal.AdRequestController $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.facebook.ads.AdView;

        $r1 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequestController adRequestController>;

        if $r1 != null goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("No request controller available, has the AdView been destroyed?");

        throw $r2;

     label1:
        return;
    }

    private void initializeView(android.content.Context)
    {
        com.facebook.ads.AdView r0;
        android.content.Context $r1;
        com.facebook.ads.AdSize $r2;
        com.facebook.ads.internal.AdRequest$Callback $r9;
        com.facebook.ads.AdView$AdWebViewClient $r5;
        com.facebook.ads.internal.AdType $r3;
        com.facebook.ads.internal.AdWebViewInterface $r6;
        com.facebook.ads.internal.AdRequestController $r7;
        java.lang.String $r8;
        android.webkit.WebView $r4;

        r0 := @this: com.facebook.ads.AdView;

        $r1 := @parameter0: android.content.Context;

        $r4 = new android.webkit.WebView;

        specialinvoke $r4.<android.webkit.WebView: void <init>(android.content.Context)>($r1);

        r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView> = $r4;

        $r4 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        virtualinvoke $r4.<android.webkit.WebView: void setVisibility(int)>(8);

        $r4 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        $r5 = new com.facebook.ads.AdView$AdWebViewClient;

        specialinvoke $r5.<com.facebook.ads.AdView$AdWebViewClient: void <init>(com.facebook.ads.AdView,com.facebook.ads.AdView$1)>(r0, null);

        $r6 = new com.facebook.ads.internal.AdWebViewInterface;

        specialinvoke $r6.<com.facebook.ads.internal.AdWebViewInterface: void <init>()>();

        staticinvoke <com.facebook.ads.internal.AdWebViewUtils: void config(android.webkit.WebView,android.webkit.WebViewClient,com.facebook.ads.internal.AdWebViewInterface)>($r4, $r5, $r6);

        $r4 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        virtualinvoke r0.<com.facebook.ads.AdView: void addView(android.view.View)>($r4);

        specialinvoke r0.<com.facebook.ads.AdView: void resizeAdView()>();

        $r7 = new com.facebook.ads.internal.AdRequestController;

        $r1 = virtualinvoke r0.<com.facebook.ads.AdView: android.content.Context getContext()>();

        $r8 = r0.<com.facebook.ads.AdView: java.lang.String placementId>;

        $r2 = r0.<com.facebook.ads.AdView: com.facebook.ads.AdSize adSize>;

        $r3 = <com.facebook.ads.internal.AdType: com.facebook.ads.internal.AdType HTML>;

        $r9 = specialinvoke r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequest$Callback createAdRequestCallback()>();

        specialinvoke $r7.<com.facebook.ads.internal.AdRequestController: void <init>(android.content.Context,java.lang.String,com.facebook.ads.AdSize,boolean,com.facebook.ads.internal.AdType,com.facebook.ads.internal.AdRequest$Callback)>($r1, $r8, $r2, 1, $r3, $r9);

        r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequestController adRequestController> = $r7;

        return;
    }

    private boolean isAdViewVisible()
    {
        com.facebook.ads.AdView r0;
        android.view.ViewParent $r1;
        com.facebook.ads.AdSize $r4;
        android.util.DisplayMetrics $r3;
        int[] $r2;
        int $i0, $i1, $i2;
        float $f0, $f1;
        double $d0, $d1;

        r0 := @this: com.facebook.ads.AdView;

        $i0 = virtualinvoke r0.<com.facebook.ads.AdView: int getVisibility()>();

        if $i0 == 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<com.facebook.ads.AdView: android.view.ViewParent getParent()>();

        if $r1 == null goto label3;

        $i0 = r0.<com.facebook.ads.AdView: int currentAlpha>;

        if $i0 < 229 goto label3;

        $r2 = newarray (int)[2];

        virtualinvoke r0.<com.facebook.ads.AdView: void getLocationOnScreen(int[])>($r2);

        $i0 = $r2[0];

        if $i0 < 0 goto label3;

        $r3 = r0.<com.facebook.ads.AdView: android.util.DisplayMetrics metrics>;

        $i0 = $r3.<android.util.DisplayMetrics: int widthPixels>;

        $i1 = $r2[0];

        $i0 = $i0 - $i1;

        $r4 = r0.<com.facebook.ads.AdView: com.facebook.ads.AdSize adSize>;

        $i1 = virtualinvoke $r4.<com.facebook.ads.AdSize: int getWidth()>();

        $f0 = (float) $i1;

        $r3 = r0.<com.facebook.ads.AdView: android.util.DisplayMetrics metrics>;

        $f1 = $r3.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 * $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i1 = (int) $d0;

        if $i0 < $i1 goto label3;

        $r4 = r0.<com.facebook.ads.AdView: com.facebook.ads.AdSize adSize>;

        $i0 = virtualinvoke $r4.<com.facebook.ads.AdSize: int getHeight()>();

        $f0 = (float) $i0;

        $r3 = r0.<com.facebook.ads.AdView: android.util.DisplayMetrics metrics>;

        $f1 = $r3.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 * $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i1 = (int) $d0;

        $d0 = (double) $i1;

        $i0 = r0.<com.facebook.ads.AdView: int viewabilityThreshold>;

        $d1 = (double) $i0;

        $d1 = 100.0 - $d1;

        $d0 = $d0 * $d1;

        $d0 = $d0 / 100.0;

        $i0 = (int) $d0;

        $i2 = $r2[1];

        if $i2 >= 0 goto label2;

        $i2 = $r2[1];

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        if $i2 > $i0 goto label3;

     label2:
        $i2 = $r2[1];

        $i1 = $i2 + $i1;

        $r3 = r0.<com.facebook.ads.AdView: android.util.DisplayMetrics metrics>;

        $i2 = $r3.<android.util.DisplayMetrics: int heightPixels>;

        $i1 = $i1 - $i2;

        if $i1 > $i0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private void registerScreenStateReceiver()
    {
        com.facebook.ads.AdView r0;
        android.content.Context $r3;
        android.content.IntentFilter $r1;
        com.facebook.ads.AdView$ScreenStateReceiver $r2;

        r0 := @this: com.facebook.ads.AdView;

        $r1 = new android.content.IntentFilter;

        specialinvoke $r1.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        $r3 = virtualinvoke r0.<com.facebook.ads.AdView: android.content.Context getContext()>();

        $r2 = r0.<com.facebook.ads.AdView: com.facebook.ads.AdView$ScreenStateReceiver screenStateReceiver>;

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, $r1);

        return;
    }

    private void resizeAdView()
    {
        com.facebook.ads.AdView r0;
        com.facebook.ads.AdSize $r4;
        android.util.DisplayMetrics $r2;
        android.widget.RelativeLayout$LayoutParams $r3;
        int $i0, $i1;
        float $f0, $f1;
        android.webkit.WebView $r1;
        double $d0;

        r0 := @this: com.facebook.ads.AdView;

        $r1 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        if $r1 == null goto label3;

        $r2 = r0.<com.facebook.ads.AdView: android.util.DisplayMetrics metrics>;

        $i0 = $r2.<android.util.DisplayMetrics: int widthPixels>;

        $f0 = (float) $i0;

        $r2 = r0.<com.facebook.ads.AdView: android.util.DisplayMetrics metrics>;

        $f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $r3 = new android.widget.RelativeLayout$LayoutParams;

        $r4 = r0.<com.facebook.ads.AdView: com.facebook.ads.AdSize adSize>;

        $i1 = virtualinvoke $r4.<com.facebook.ads.AdSize: int getWidth()>();

        if $i0 < $i1 goto label2;

        $r2 = r0.<com.facebook.ads.AdView: android.util.DisplayMetrics metrics>;

        $i0 = $r2.<android.util.DisplayMetrics: int widthPixels>;

     label1:
        $r4 = r0.<com.facebook.ads.AdView: com.facebook.ads.AdSize adSize>;

        $i1 = virtualinvoke $r4.<com.facebook.ads.AdSize: int getHeight()>();

        $f0 = (float) $i1;

        $r2 = r0.<com.facebook.ads.AdView: android.util.DisplayMetrics metrics>;

        $f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 * $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i1 = (int) $d0;

        specialinvoke $r3.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        virtualinvoke $r3.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(14);

        $r1 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        virtualinvoke $r1.<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

        return;

     label2:
        $r4 = r0.<com.facebook.ads.AdView: com.facebook.ads.AdSize adSize>;

        $i0 = virtualinvoke $r4.<com.facebook.ads.AdSize: int getWidth()>();

        $f0 = (float) $i0;

        $r2 = r0.<com.facebook.ads.AdView: android.util.DisplayMetrics metrics>;

        $f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 * $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        goto label1;

     label3:
        return;
    }

    private void unregisterScreenStateReceiver()
    {
        com.facebook.ads.AdView r0;
        android.content.Context $r2;
        com.facebook.ads.AdView$ScreenStateReceiver $r1;

        r0 := @this: com.facebook.ads.AdView;

        $r2 = virtualinvoke r0.<com.facebook.ads.AdView: android.content.Context getContext()>();

        $r1 = r0.<com.facebook.ads.AdView: com.facebook.ads.AdView$ScreenStateReceiver screenStateReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        return;
    }

    private void updateView(com.facebook.ads.internal.HtmlAdDataModel)
    {
        com.facebook.ads.AdView r0;
        com.facebook.ads.internal.HtmlAdDataModel $r1;
        java.lang.String $r2;
        android.webkit.WebView $r3;

        r0 := @this: com.facebook.ads.AdView;

        $r1 := @parameter0: com.facebook.ads.internal.HtmlAdDataModel;

        $r3 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        if $r3 == null goto label1;

        $r3 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        virtualinvoke $r3.<android.webkit.WebView: void loadUrl(java.lang.String)>("about:blank");

        $r3 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        virtualinvoke $r3.<android.webkit.WebView: void clearCache(boolean)>(1);

        $r3 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        virtualinvoke $r3.<android.webkit.WebView: void setVisibility(int)>(8);

        $r3 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        $r2 = virtualinvoke $r1.<com.facebook.ads.internal.HtmlAdDataModel: java.lang.String getMarkup()>();

        virtualinvoke $r3.<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("https://www.facebook.com/", $r2, "text/html", "utf-8", null);

        $r3 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        virtualinvoke $r3.<android.webkit.WebView: void setVisibility(int)>(0);

     label1:
        return;
    }

    public void destroy()
    {
        com.facebook.ads.AdView r0;
        java.lang.Object[] $r7;
        java.lang.Class[] $r6;
        java.lang.Exception $r8;
        com.facebook.ads.internal.HtmlAdHandler $r3;
        com.facebook.ads.internal.AdRequestController $r2;
        java.lang.Class $r5;
        android.webkit.WebView $r4;
        java.lang.reflect.Method $r1;

        r0 := @this: com.facebook.ads.AdView;

        $r2 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequestController adRequestController>;

        if $r2 == null goto label1;

        $r2 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequestController adRequestController>;

        virtualinvoke $r2.<com.facebook.ads.internal.AdRequestController: void destroy()>();

        r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequestController adRequestController> = null;

     label1:
        $r3 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.HtmlAdHandler adHandler>;

        virtualinvoke $r3.<com.facebook.ads.internal.HtmlAdHandler: void cancelImpressionRetry()>();

        $r3 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.HtmlAdHandler adHandler>;

        virtualinvoke $r3.<com.facebook.ads.internal.HtmlAdHandler: void destroy()>();

        $r4 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        if $r4 == null goto label7;

        specialinvoke r0.<com.facebook.ads.AdView: void unregisterScreenStateReceiver()>();

        $r5 = class "Landroid/webkit/WebView;";

        $r6 = newarray (java.lang.Class)[0];

     label2:
        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("onPause", $r6);

        $r4 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

     label3:
        $r7 = newarray (java.lang.Object)[0];

     label4:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r7);

     label5:
        $r4 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        virtualinvoke r0.<com.facebook.ads.AdView: void removeView(android.view.View)>($r4);

        $r4 = r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView>;

        virtualinvoke $r4.<android.webkit.WebView: void destroy()>();

        r0.<com.facebook.ads.AdView: android.webkit.WebView adWebView> = null;

        return;

     label6:
        $r8 := @caughtexception;

        goto label5;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void disableAutoRefresh()
    {
        com.facebook.ads.AdView r0;
        com.facebook.ads.internal.AdRequestController $r1;

        r0 := @this: com.facebook.ads.AdView;

        $r1 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequestController adRequestController>;

        virtualinvoke $r1.<com.facebook.ads.internal.AdRequestController: void disableRefresh()>();

        return;
    }

    public void loadAd()
    {
        com.facebook.ads.AdView r0;
        com.facebook.ads.internal.AdRequestController $r1;

        r0 := @this: com.facebook.ads.AdView;

        specialinvoke r0.<com.facebook.ads.AdView: void ensureAdRequestController()>();

        $r1 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequestController adRequestController>;

        virtualinvoke $r1.<com.facebook.ads.internal.AdRequestController: void loadAd()>();

        return;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        com.facebook.ads.AdView r0;
        android.content.res.Configuration $r1;

        r0 := @this: com.facebook.ads.AdView;

        $r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.widget.RelativeLayout: void onConfigurationChanged(android.content.res.Configuration)>($r1);

        specialinvoke r0.<com.facebook.ads.AdView: void resizeAdView()>();

        return;
    }

    protected boolean onSetAlpha(int)
    {
        com.facebook.ads.AdView r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.facebook.ads.AdView;

        $i0 := @parameter0: int;

        r0.<com.facebook.ads.AdView: int currentAlpha> = $i0;

        $z0 = specialinvoke r0.<android.widget.RelativeLayout: boolean onSetAlpha(int)>($i0);

        return $z0;
    }

    protected void onWindowVisibilityChanged(int)
    {
        com.facebook.ads.AdView r0;
        com.facebook.ads.internal.HtmlAdHandler $r2;
        int $i0;
        com.facebook.ads.internal.AdRequestController $r1;

        r0 := @this: com.facebook.ads.AdView;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.widget.RelativeLayout: void onWindowVisibilityChanged(int)>($i0);

        $r1 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequestController adRequestController>;

        if $r1 == null goto label1;

        $r1 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.AdRequestController adRequestController>;

        virtualinvoke $r1.<com.facebook.ads.internal.AdRequestController: void onWindowVisibilityChanged(int)>($i0);

     label1:
        if $i0 != 0 goto label2;

        $r2 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.HtmlAdHandler adHandler>;

        virtualinvoke $r2.<com.facebook.ads.internal.HtmlAdHandler: void scheduleImpressionRetry()>();

        return;

     label2:
        $r2 = r0.<com.facebook.ads.AdView: com.facebook.ads.internal.HtmlAdHandler adHandler>;

        virtualinvoke $r2.<com.facebook.ads.internal.HtmlAdHandler: void cancelImpressionRetry()>();

        return;
    }

    public void setAdListener(com.facebook.ads.AdListener)
    {
        com.facebook.ads.AdView r0;
        com.facebook.ads.AdListener $r1;

        r0 := @this: com.facebook.ads.AdView;

        $r1 := @parameter0: com.facebook.ads.AdListener;

        r0.<com.facebook.ads.AdView: com.facebook.ads.AdListener adListener> = $r1;

        return;
    }

    public void setImpressionListener(com.facebook.ads.ImpressionListener)
    {
        com.facebook.ads.AdView r0;
        com.facebook.ads.ImpressionListener $r1;

        r0 := @this: com.facebook.ads.AdView;

        $r1 := @parameter0: com.facebook.ads.ImpressionListener;

        r0.<com.facebook.ads.AdView: com.facebook.ads.ImpressionListener impListener> = $r1;

        return;
    }
}
