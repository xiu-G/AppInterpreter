public class com.baidu.mobstat.m extends java.lang.Object
{

    public static java.lang.String a(java.lang.String)
    {
        java.util.Iterator $r3;
        java.lang.String[] $r2;
        org.json.JSONException $r7, $r8;
        org.json.JSONObject $r1;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r0, $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new org.json.JSONObject;

     label01:
        specialinvoke $r1.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label02:
        $i0 = virtualinvoke $r1.<org.json.JSONObject: int length()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.util.Iterator keys()>();

        $i0 = 0;

     label03:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (java.lang.String) $r4;

     label04:
        $r5 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r0);

     label05:
        $r6 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r2[$i0] = $r0;

        $i0 = $i0 + 1;

        goto label03;

     label08:
        $r7 := @caughtexception;

        staticinvoke <com.baidu.mobstat.n: int b(java.lang.String)>("String to JSONObject error, return desc string!");

        virtualinvoke $r7.<org.json.JSONException: void printStackTrace()>();

        return $r0;

     label09:
        $r8 := @caughtexception;

        virtualinvoke $r8.<org.json.JSONException: void printStackTrace()>();

        goto label03;

     label10:
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r2);

        $r0 = $r2[0];

        $i0 = 1;

     label11:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label12;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r0 = $r2[$i0];

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label11;

     label12:
        return $r0;

        catch org.json.JSONException from label01 to label02 with label08;
        catch org.json.JSONException from label04 to label05 with label09;
        catch org.json.JSONException from label06 to label07 with label09;
    }

    public static org.json.JSONObject a(org.json.JSONObject, org.json.JSONObject)
    {
        java.util.Iterator $r3;
        org.json.JSONException $r7, $r8, $r9, $r10;
        org.json.JSONObject $r0, $r1, $r2;
        java.lang.Object $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: org.json.JSONObject;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

     label02:
        $r6 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r5);

     label03:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r5, $r6);

     label04:
        goto label01;

     label05:
        $r7 := @caughtexception;

     label06:
        virtualinvoke $r7.<org.json.JSONException: void printStackTrace()>();

     label07:
        goto label01;

     label08:
        $r8 := @caughtexception;

        virtualinvoke $r8.<org.json.JSONException: void printStackTrace()>();

        goto label01;

     label09:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.util.Iterator keys()>();

     label10:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

     label11:
        $r6 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r5);

     label12:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r5, $r6);

     label13:
        goto label10;

     label14:
        $r9 := @caughtexception;

     label15:
        virtualinvoke $r9.<org.json.JSONException: void printStackTrace()>();

     label16:
        goto label10;

     label17:
        $r10 := @caughtexception;

        virtualinvoke $r10.<org.json.JSONException: void printStackTrace()>();

        goto label10;

     label18:
        return $r2;

        catch org.json.JSONException from label02 to label03 with label08;
        catch org.json.JSONException from label03 to label04 with label05;
        catch org.json.JSONException from label06 to label07 with label08;
        catch org.json.JSONException from label11 to label12 with label17;
        catch org.json.JSONException from label12 to label13 with label14;
        catch org.json.JSONException from label15 to label16 with label17;
    }
}
