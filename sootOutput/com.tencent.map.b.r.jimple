public final class com.tencent.map.b.r extends java.lang.Object
{

    public static java.lang.String a(java.lang.String)
    {
        byte[] $r3;
        java.security.MessageDigest $r2;
        java.lang.Exception $r6;
        short $s3;
        byte $b2;
        int $i0, $i1, $i4;
        java.lang.StringBuilder $r0, $r5;
        java.lang.String $r1, $r4;

        $r1 := @parameter0: java.lang.String;

     label01:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r5 = new java.lang.StringBuilder;

        $r0 = $r5;

     label03:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i0 = lengthof $r3;

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label10;

     label06:
        $b2 = $r3[$i1];

     label07:
        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i4 = (int) $s3;

     label08:
        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

     label09:
        $i1 = $i1 + 1;

        goto label05;

     label10:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        return $r4;

     label12:
        $r6 := @caughtexception;

        return $r1;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public static byte[] a(byte[])
    {
        byte[] $r0;
        java.io.ByteArrayOutputStream $r2;
        int $i0;
        java.util.zip.DeflaterOutputStream $r1;
        java.lang.Exception $r3;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.util.zip.DeflaterOutputStream;

        specialinvoke $r1.<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream)>($r2);

     label2:
        $i0 = lengthof $r0;

        virtualinvoke $r1.<java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>($r0, 0, $i0);

        virtualinvoke $r1.<java.util.zip.DeflaterOutputStream: void finish()>();

        virtualinvoke $r1.<java.util.zip.DeflaterOutputStream: void flush()>();

        virtualinvoke $r1.<java.util.zip.DeflaterOutputStream: void close()>();

     label3:
        $r0 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

     label4:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static byte[] b(byte[])
    {
        java.lang.Throwable $r5;
        byte[] $r0, $r3, $r4;
        java.util.zip.InflaterInputStream $r2;
        java.lang.Exception $r6;
        java.io.ByteArrayInputStream $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: byte[];

        $i2 = 0;

        if $r0 != null goto label01;

        return null;

     label01:
        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        $r2 = new java.util.zip.InflaterInputStream;

        specialinvoke $r2.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r1);

        $r3 = newarray (byte)[0];

        $r0 = newarray (byte)[1024];

     label02:
        $i1 = virtualinvoke $r2.<java.util.zip.InflaterInputStream: int read(byte[])>($r0);

     label03:
        if $i1 <= 0 goto label11;

        $i2 = $i2 + $i1;

     label04:
        $r4 = newarray (byte)[$i2];

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r4, $i0, $i1);

     label05:
        if $i1 > 0 goto label10;

     label06:
        virtualinvoke $r1.<java.io.ByteArrayInputStream: void close()>();

        virtualinvoke $r2.<java.util.zip.InflaterInputStream: void close()>();

     label07:
        return $r4;

     label08:
        $r5 := @caughtexception;

        return null;

     label09:
        $r6 := @caughtexception;

        return null;

     label10:
        $r3 = $r4;

        goto label02;

     label11:
        $r4 = $r3;

        goto label05;

        catch java.lang.Exception from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.io.IOException from label06 to label07 with label08;
    }
}
