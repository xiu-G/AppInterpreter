public class proguard.io.DirectoryWriter extends java.lang.Object implements proguard.io.DataEntryWriter
{
    private final java.io.File baseFile;
    private java.io.File currentFile;
    private proguard.io.Finisher currentFinisher;
    private java.io.OutputStream currentOutputStream;
    private final boolean isFile;

    public void <init>(java.io.File, boolean)
    {
        proguard.io.DirectoryWriter r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: proguard.io.DirectoryWriter;

        $r1 := @parameter0: java.io.File;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.io.DirectoryWriter: java.io.File baseFile> = $r1;

        r0.<proguard.io.DirectoryWriter: boolean isFile> = $z0;

        return;
    }

    private void closeEntry() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        proguard.io.DirectoryWriter r0;
        proguard.io.Finisher $r2;

        r0 := @this: proguard.io.DirectoryWriter;

        $r1 = r0.<proguard.io.DirectoryWriter: java.io.OutputStream currentOutputStream>;

        if $r1 == null goto label2;

        $r2 = r0.<proguard.io.DirectoryWriter: proguard.io.Finisher currentFinisher>;

        if $r2 == null goto label1;

        $r2 = r0.<proguard.io.DirectoryWriter: proguard.io.Finisher currentFinisher>;

        interfaceinvoke $r2.<proguard.io.Finisher: void finish()>();

        r0.<proguard.io.DirectoryWriter: proguard.io.Finisher currentFinisher> = null;

     label1:
        $r1 = r0.<proguard.io.DirectoryWriter: java.io.OutputStream currentOutputStream>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        r0.<proguard.io.DirectoryWriter: java.io.OutputStream currentOutputStream> = null;

        r0.<proguard.io.DirectoryWriter: java.io.File currentFile> = null;

     label2:
        return;
    }

    private java.io.File getFile(proguard.io.DataEntry)
    {
        char $c0;
        proguard.io.DirectoryWriter r0;
        java.lang.String $r4;
        proguard.io.DataEntry $r1;
        java.io.File $r2, $r3;
        boolean $z0;

        r0 := @this: proguard.io.DirectoryWriter;

        $r1 := @parameter0: proguard.io.DataEntry;

        $z0 = r0.<proguard.io.DirectoryWriter: boolean isFile>;

        if $z0 == 0 goto label1;

        $r2 = r0.<proguard.io.DirectoryWriter: java.io.File baseFile>;

        return $r2;

     label1:
        $r3 = new java.io.File;

        $r2 = r0.<proguard.io.DirectoryWriter: java.io.File baseFile>;

        $r4 = interfaceinvoke $r1.<proguard.io.DataEntry: java.lang.String getName()>();

        $c0 = <java.io.File: char separatorChar>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(47, $c0);

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r4);

        return $r3;
    }

    public void close() throws java.io.IOException
    {
        proguard.io.DirectoryWriter r0;

        r0 := @this: proguard.io.DirectoryWriter;

        specialinvoke r0.<proguard.io.DirectoryWriter: void closeEntry()>();

        return;
    }

    public boolean createDirectory(proguard.io.DataEntry) throws java.io.IOException
    {
        java.lang.StringBuffer $r4;
        java.io.IOException $r3;
        proguard.io.DirectoryWriter r0;
        java.lang.String $r5;
        proguard.io.DataEntry $r1;
        java.io.File $r2;
        boolean $z0;

        r0 := @this: proguard.io.DirectoryWriter;

        $r1 := @parameter0: proguard.io.DataEntry;

        $z0 = r0.<proguard.io.DirectoryWriter: boolean isFile>;

        if $z0 != 0 goto label1;

        $r2 = r0.<proguard.io.DirectoryWriter: java.io.File currentFile>;

        if $r2 == null goto label1;

        specialinvoke r0.<proguard.io.DirectoryWriter: void closeEntry()>();

     label1:
        $r2 = specialinvoke r0.<proguard.io.DirectoryWriter: java.io.File getFile(proguard.io.DataEntry)>($r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label2;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t create directory [");

        $r5 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        return 1;
    }

    public java.io.OutputStream getOutputStream(proguard.io.DataEntry) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        proguard.io.DirectoryWriter r0;
        proguard.io.DataEntry $r1;

        r0 := @this: proguard.io.DirectoryWriter;

        $r1 := @parameter0: proguard.io.DataEntry;

        $r2 = virtualinvoke r0.<proguard.io.DirectoryWriter: java.io.OutputStream getOutputStream(proguard.io.DataEntry,proguard.io.Finisher)>($r1, null);

        return $r2;
    }

    public java.io.OutputStream getOutputStream(proguard.io.DataEntry, proguard.io.Finisher) throws java.io.IOException
    {
        java.io.OutputStream $r5;
        proguard.io.Finisher $r2;
        java.io.FileOutputStream $r10;
        java.io.IOException $r6;
        proguard.io.DirectoryWriter r0;
        java.io.File $r3, $r4;
        java.io.BufferedOutputStream $r9;
        java.lang.StringBuffer $r7;
        java.lang.String $r8;
        proguard.io.DataEntry $r1;
        boolean $z0;

        r0 := @this: proguard.io.DirectoryWriter;

        $r1 := @parameter0: proguard.io.DataEntry;

        $r2 := @parameter1: proguard.io.Finisher;

        $r3 = specialinvoke r0.<proguard.io.DirectoryWriter: java.io.File getFile(proguard.io.DataEntry)>($r1);

        $z0 = r0.<proguard.io.DirectoryWriter: boolean isFile>;

        if $z0 != 0 goto label1;

        $r4 = r0.<proguard.io.DirectoryWriter: java.io.File currentFile>;

        if $r4 == null goto label1;

        $r4 = r0.<proguard.io.DirectoryWriter: java.io.File currentFile>;

        $z0 = virtualinvoke $r4.<java.io.File: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        specialinvoke r0.<proguard.io.DirectoryWriter: void closeEntry()>();

     label1:
        $r5 = r0.<proguard.io.DirectoryWriter: java.io.OutputStream currentOutputStream>;

        if $r5 != null goto label3;

        $r4 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();

        if $r4 == null goto label2;

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label2;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t create directory [");

        $r8 = virtualinvoke $r4.<java.io.File: java.lang.String getPath()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label2:
        $r9 = new java.io.BufferedOutputStream;

        $r10 = new java.io.FileOutputStream;

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

        specialinvoke $r9.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r10);

        r0.<proguard.io.DirectoryWriter: java.io.OutputStream currentOutputStream> = $r9;

        r0.<proguard.io.DirectoryWriter: proguard.io.Finisher currentFinisher> = $r2;

        r0.<proguard.io.DirectoryWriter: java.io.File currentFile> = $r3;

     label3:
        $r5 = r0.<proguard.io.DirectoryWriter: java.io.OutputStream currentOutputStream>;

        return $r5;
    }
}
