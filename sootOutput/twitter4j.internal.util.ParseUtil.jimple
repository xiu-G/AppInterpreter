public final class twitter4j.internal.util.ParseUtil extends java.lang.Object
{
    private static java.lang.ThreadLocal formatMap;

    static void <clinit>()
    {
        twitter4j.internal.util.ParseUtil$1 $r0;

        $r0 = new twitter4j.internal.util.ParseUtil$1;

        specialinvoke $r0.<twitter4j.internal.util.ParseUtil$1: void <init>()>();

        <twitter4j.internal.util.ParseUtil: java.lang.ThreadLocal formatMap> = $r0;

        return;
    }

    private void <init>()
    {
        java.lang.AssertionError $r1;
        twitter4j.internal.util.ParseUtil r0;

        r0 := @this: twitter4j.internal.util.ParseUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public static boolean getBoolean(java.lang.String, org.json.JSONObject)
    {
        org.json.JSONObject $r1;
        java.lang.Boolean $r3;
        java.lang.String $r0, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

        $r0 = staticinvoke <twitter4j.internal.util.ParseUtil: java.lang.String getRawString(java.lang.String,org.json.JSONObject)>($r0, $r1);

        if $r0 == null goto label1;

        $r2 = "null";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r0);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static java.util.Date getDate(java.lang.String, java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.Throwable r2;
        java.lang.ThreadLocal $r3;
        java.util.TimeZone $r8;
        java.util.Date $r9;
        java.text.SimpleDateFormat r6, $r11;
        java.lang.Exception $r14;
        java.util.Locale $r7;
        java.lang.StringBuffer $r10, $r12;
        java.util.Map $r5;
        twitter4j.TwitterException $r13;
        java.lang.Object $r4;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = <twitter4j.internal.util.ParseUtil: java.lang.ThreadLocal formatMap>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r5 = (java.util.Map) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (java.text.SimpleDateFormat) $r4;

        if r6 != null goto label1;

        $r11 = new java.text.SimpleDateFormat;

        r6 = $r11;

        $r7 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $r11.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r1, $r7);

        $r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke r6.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r8);

        $r3 = <twitter4j.internal.util.ParseUtil: java.lang.ThreadLocal formatMap>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r5 = (java.util.Map) $r4;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r6);

     label1:
        $r9 = virtualinvoke r6.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

     label2:
        return $r9;

     label3:
        r2 := @caughtexception;

        $r13 = new twitter4j.TwitterException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected date format(");

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") returned from twitter.com");

        $r0 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = (java.lang.Exception) r2;

        specialinvoke $r13.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception)>($r0, $r14);

        throw $r13;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public static java.util.Date getDate(java.lang.String, org.json.JSONObject) throws twitter4j.TwitterException
    {
        java.lang.String $r0;
        org.json.JSONObject $r1;
        java.util.Date $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

        $r2 = staticinvoke <twitter4j.internal.util.ParseUtil: java.util.Date getDate(java.lang.String,org.json.JSONObject,java.lang.String)>("created_at", $r1, "EEE MMM d HH:mm:ss z yyyy");

        return $r2;
    }

    public static java.util.Date getDate(java.lang.String, org.json.JSONObject, java.lang.String) throws twitter4j.TwitterException
    {
        org.json.JSONObject $r1;
        java.util.Date $r4;
        java.lang.String $r0, $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

        $r2 := @parameter2: java.lang.String;

        $r0 = staticinvoke <twitter4j.internal.util.ParseUtil: java.lang.String getUnescapedString(java.lang.String,org.json.JSONObject)>("created_at", $r1);

        $r3 = "null";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        if $r0 != null goto label2;

     label1:
        return null;

     label2:
        $r4 = staticinvoke <twitter4j.internal.util.ParseUtil: java.util.Date getDate(java.lang.String,java.lang.String)>($r0, $r2);

        return $r4;
    }

    public static double getDouble(java.lang.String, org.json.JSONObject)
    {
        org.json.JSONObject $r1;
        java.lang.Double $r3;
        java.lang.String $r0, $r2;
        boolean $z0;
        double $d0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

        $r0 = staticinvoke <twitter4j.internal.util.ParseUtil: java.lang.String getRawString(java.lang.String,org.json.JSONObject)>($r0, $r1);

        if $r0 == null goto label1;

        $r2 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r2 = "null";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return -1.0;

     label2:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r0);

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public static int getInt(java.lang.String)
    {
        java.lang.Throwable $r3;
        int $i0;
        java.lang.String $r0, $r1;
        java.lang.Integer $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = "null";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return -1;

     label2:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r0);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

     label3:
        return $i0;

     label4:
        $r3 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public static int getInt(java.lang.String, org.json.JSONObject)
    {
        int $i0;
        java.lang.String $r0;
        org.json.JSONObject $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

        $r0 = staticinvoke <twitter4j.internal.util.ParseUtil: java.lang.String getRawString(java.lang.String,org.json.JSONObject)>($r0, $r1);

        $i0 = staticinvoke <twitter4j.internal.util.ParseUtil: int getInt(java.lang.String)>($r0);

        return $i0;
    }

    public static long getLong(java.lang.String)
    {
        java.lang.Long $r2;
        int $i0;
        long $l1;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = "null";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return -1L;

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("+");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r0);

        $l1 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        $l1 = $l1 + 1L;

        return $l1;

     label3:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r0);

        $l1 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l1;
    }

    public static long getLong(java.lang.String, org.json.JSONObject)
    {
        long $l0;
        java.lang.String $r0;
        org.json.JSONObject $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

        $r0 = staticinvoke <twitter4j.internal.util.ParseUtil: java.lang.String getRawString(java.lang.String,org.json.JSONObject)>($r0, $r1);

        $l0 = staticinvoke <twitter4j.internal.util.ParseUtil: long getLong(java.lang.String)>($r0);

        return $l0;
    }

    public static java.lang.String getRawString(java.lang.String, org.json.JSONObject)
    {
        org.json.JSONException $r2;
        org.json.JSONObject $r1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

     label1:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean isNull(java.lang.String)>($r0);

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r0 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r0);

     label4:
        return $r0;

     label5:
        $r2 := @caughtexception;

        return null;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    public static java.lang.String getURLDecodedString(java.lang.String, org.json.JSONObject)
    {
        java.lang.Throwable $r3;
        org.json.JSONObject $r1;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

        $r0 = staticinvoke <twitter4j.internal.util.ParseUtil: java.lang.String getRawString(java.lang.String,org.json.JSONObject)>($r0, $r1);

        if $r0 == null goto label4;

     label1:
        $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r0, "UTF-8");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        return $r0;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String getUnescapedString(java.lang.String, org.json.JSONObject)
    {
        java.lang.String $r0;
        org.json.JSONObject $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

        $r0 = staticinvoke <twitter4j.internal.util.ParseUtil: java.lang.String getRawString(java.lang.String,org.json.JSONObject)>($r0, $r1);

        $r0 = staticinvoke <twitter4j.internal.http.HTMLEntity: java.lang.String unescape(java.lang.String)>($r0);

        return $r0;
    }
}
