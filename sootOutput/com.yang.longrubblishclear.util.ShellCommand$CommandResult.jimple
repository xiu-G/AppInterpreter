public class com.yang.longrubblishclear.util.ShellCommand$CommandResult extends java.lang.Object
{
    public final java.lang.Integer exit_value;
    public final java.lang.String stderr;
    public final java.lang.String stdout;
    final com.yang.longrubblishclear.util.ShellCommand this$0;

    void <init>(com.yang.longrubblishclear.util.ShellCommand, java.lang.Integer)
    {
        com.yang.longrubblishclear.util.ShellCommand $r1;
        com.yang.longrubblishclear.util.ShellCommand$CommandResult r0;
        java.lang.Integer $r2;

        r0 := @this: com.yang.longrubblishclear.util.ShellCommand$CommandResult;

        $r1 := @parameter0: com.yang.longrubblishclear.util.ShellCommand;

        $r2 := @parameter1: java.lang.Integer;

        specialinvoke r0.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: void <init>(com.yang.longrubblishclear.util.ShellCommand,java.lang.Integer,java.lang.String,java.lang.String)>($r1, $r2, null, null);

        return;
    }

    void <init>(com.yang.longrubblishclear.util.ShellCommand, java.lang.Integer, java.lang.String, java.lang.String)
    {
        com.yang.longrubblishclear.util.ShellCommand $r1;
        com.yang.longrubblishclear.util.ShellCommand$CommandResult r0;
        java.lang.String $r3, $r4;
        java.lang.Integer $r2;

        r0 := @this: com.yang.longrubblishclear.util.ShellCommand$CommandResult;

        $r1 := @parameter0: com.yang.longrubblishclear.util.ShellCommand;

        $r2 := @parameter1: java.lang.Integer;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        r0.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: com.yang.longrubblishclear.util.ShellCommand this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.Integer exit_value> = $r2;

        r0.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.String stdout> = $r3;

        r0.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.String stderr> = $r4;

        return;
    }

    public boolean success()
    {
        int $i0;
        com.yang.longrubblishclear.util.ShellCommand$CommandResult r0;
        java.lang.Integer $r1;

        r0 := @this: com.yang.longrubblishclear.util.ShellCommand$CommandResult;

        $r1 = r0.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.Integer exit_value>;

        if $r1 == null goto label1;

        $r1 = r0.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.Integer exit_value>;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        com.yang.longrubblishclear.util.ShellCommand$CommandResult r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.Integer $r3;

        r0 := @this: com.yang.longrubblishclear.util.ShellCommand$CommandResult;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("CommandResult [stdout=");

        $r2 = r0.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.String stdout>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stderr=");

        $r2 = r0.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.String stderr>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", exit_value=");

        $r3 = r0.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.Integer exit_value>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
