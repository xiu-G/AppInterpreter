public class io.vov.vitamio.Vitamio extends java.lang.Object
{
    private static final java.lang.String[] LIBS_AV;
    private static final java.lang.String[] LIBS_CODECS;
    private static final java.lang.String LIBS_LOCK;
    private static final java.lang.String[] LIBS_PLAYER;
    private static final java.lang.String[] LIBS_SCANNER;
    private static final int VITAMIO_ARMV6;
    private static final int VITAMIO_ARMV6_VFP;
    private static final int VITAMIO_ARMV7_NEON;
    private static final int VITAMIO_ARMV7_VFPV3;
    private static final int VITAMIO_NOT_SUPPORTED;
    private static final int VITAMIO_VERSION_CODE;
    private static final java.lang.String VITAMIO_VERSION_NAME;
    private static java.lang.String vitamioLibraryPath;
    private static java.lang.String vitamioPackage;
    private static final int vitamioType;

    static void <clinit>()
    {
        int $i0, $i1;
        java.lang.String[] $r0;

        <io.vov.vitamio.Vitamio: java.lang.String VITAMIO_VERSION_NAME> = "3.0";

        <io.vov.vitamio.Vitamio: int VITAMIO_VERSION_CODE> = 300;

        <io.vov.vitamio.Vitamio: int VITAMIO_NOT_SUPPORTED> = -1;

        <io.vov.vitamio.Vitamio: int VITAMIO_ARMV7_VFPV3> = 70;

        <io.vov.vitamio.Vitamio: int VITAMIO_ARMV7_NEON> = 71;

        <io.vov.vitamio.Vitamio: int VITAMIO_ARMV6_VFP> = 61;

        <io.vov.vitamio.Vitamio: int VITAMIO_ARMV6> = 60;

        <io.vov.vitamio.Vitamio: java.lang.String LIBS_LOCK> = ".lock";

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "libffmpeg.so";

        $r0[1] = "libOMX.8.so";

        $r0[2] = "libOMX.9.so";

        $r0[3] = "libOMX.11.so";

        $r0[4] = "libOMX.14.so";

        <io.vov.vitamio.Vitamio: java.lang.String[] LIBS_CODECS> = $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "libvplayer.so";

        <io.vov.vitamio.Vitamio: java.lang.String[] LIBS_PLAYER> = $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "libvscanner.so";

        <io.vov.vitamio.Vitamio: java.lang.String[] LIBS_SCANNER> = $r0;

        $r0 = newarray (java.lang.String)[6];

        $r0[0] = "libvao.0.so";

        $r0[1] = "libvvo.0.so";

        $r0[2] = "libvvo.7.so";

        $r0[3] = "libvvo.8.so";

        $r0[4] = "libvvo.9.so";

        $r0[5] = "libvvo.j.so";

        <io.vov.vitamio.Vitamio: java.lang.String[] LIBS_AV> = $r0;

        $i0 = staticinvoke <io.vov.utils.CPU: int getFeature()>();

        $i1 = $i0 & 32;

        if $i1 <= 0 goto label2;

        <io.vov.vitamio.Vitamio: int vitamioType> = 71;

     label1:
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("vinit");

        return;

     label2:
        $i1 = $i0 & 16;

        if $i1 <= 0 goto label3;

        $i1 = $i0 & 8;

        if $i1 <= 0 goto label3;

        <io.vov.vitamio.Vitamio: int vitamioType> = 70;

        goto label1;

     label3:
        $i1 = $i0 & 4;

        if $i1 <= 0 goto label4;

        $i1 = $i0 & 2;

        if $i1 <= 0 goto label4;

        <io.vov.vitamio.Vitamio: int vitamioType> = 61;

        goto label1;

     label4:
        $i0 = $i0 & 2;

        if $i0 <= 0 goto label5;

        <io.vov.vitamio.Vitamio: int vitamioType> = 60;

        goto label1;

     label5:
        <io.vov.vitamio.Vitamio: int vitamioType> = -1;

        goto label1;

        return;
    }

    public void <init>()
    {
        io.vov.vitamio.Vitamio r0;

        r0 := @this: io.vov.vitamio.Vitamio;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String copyCompressedLib(android.content.Context, int, java.lang.String)
    {
        java.lang.Throwable $r17;
        android.content.Context $r0;
        byte[] r3;
        java.io.BufferedInputStream r2, r7, $r20;
        int $i0;
        java.lang.String $r1, r9, $r10, $r12;
        boolean $z0;
        java.io.FileOutputStream r5, r8, $r21;
        java.lang.Exception r4, r16;
        java.io.File r13, $r19;
        java.lang.StringBuilder $r11, $r18;
        java.io.InputStream r6, $r15;
        android.content.res.Resources $r14;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        r3 = newarray (byte)[1024];

        r6 = null;

        r7 = null;

        r8 = null;

        r9 = null;

     label01:
        $r10 = staticinvoke <io.vov.vitamio.Vitamio: java.lang.String getLibraryPath()>();

     label02:
        $r18 = new java.lang.StringBuilder;

     label03:
        $r11 = $r18;

     label04:
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libarm.so");

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        r9 = $r1;

     label06:
        $r19 = new java.io.File;

     label07:
        r13 = $r19;

     label08:
        specialinvoke $r19.<java.io.File: void <init>(java.lang.String)>($r10);

        $z0 = virtualinvoke r13.<java.io.File: boolean exists()>();

     label09:
        if $z0 == 0 goto label13;

     label10:
        $z0 = virtualinvoke r13.<java.io.File: boolean isDirectory()>();

     label11:
        if $z0 != 0 goto label13;

     label12:
        virtualinvoke r13.<java.io.File: boolean delete()>();

     label13:
        $z0 = virtualinvoke r13.<java.io.File: boolean exists()>();

     label14:
        if $z0 != 0 goto label16;

     label15:
        virtualinvoke r13.<java.io.File: boolean mkdirs()>();

     label16:
        $r19 = new java.io.File;

     label17:
        r13 = $r19;

     label18:
        specialinvoke $r19.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke r13.<java.io.File: boolean exists()>();

     label19:
        if $z0 == 0 goto label23;

     label20:
        $z0 = virtualinvoke r13.<java.io.File: boolean isFile()>();

     label21:
        if $z0 != 0 goto label23;

     label22:
        virtualinvoke r13.<java.io.File: boolean delete()>();

     label23:
        $z0 = virtualinvoke r13.<java.io.File: boolean exists()>();

     label24:
        if $z0 != 0 goto label26;

     label25:
        virtualinvoke r13.<java.io.File: boolean createNewFile()>();

     label26:
        $r14 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

     label27:
        r6 = $r15;

     label28:
        $r20 = new java.io.BufferedInputStream;

     label29:
        r2 = $r20;

     label30:
        specialinvoke $r20.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r15);

     label31:
        $r21 = new java.io.FileOutputStream;

     label32:
        r5 = $r21;

     label33:
        specialinvoke $r21.<java.io.FileOutputStream: void <init>(java.lang.String)>(r9);

     label34:
        $i0 = virtualinvoke r2.<java.io.BufferedInputStream: int read(byte[])>(r3);

     label35:
        if $i0 != -1 goto label42;

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r5);

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r2);

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>($r15);

        return r9;

     label36:
        r4 := @caughtexception;

     label37:
        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("loadLib", r4);

     label38:
        goto label26;

     label39:
        r16 := @caughtexception;

     label40:
        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("loadLib", r16);

     label41:
        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r8);

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r7);

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r6);

        return null;

     label42:
        virtualinvoke r5.<java.io.FileOutputStream: void write(byte[])>(r3);

     label43:
        goto label34;

     label44:
        r16 := @caughtexception;

        r8 = r5;

        r7 = r2;

        goto label40;

     label45:
        $r17 := @caughtexception;

     label46:
        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r8);

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r7);

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r6);

        throw $r17;

     label47:
        $r17 := @caughtexception;

        r7 = r2;

        goto label46;

     label48:
        $r17 := @caughtexception;

        r8 = r5;

        r7 = r2;

        goto label46;

     label49:
        r16 := @caughtexception;

        r7 = r2;

        goto label40;

        catch java.lang.Exception from label01 to label02 with label36;
        catch java.lang.Exception from label04 to label05 with label36;
        catch java.lang.Exception from label08 to label09 with label36;
        catch java.lang.Exception from label10 to label11 with label36;
        catch java.lang.Exception from label12 to label14 with label36;
        catch java.lang.Exception from label15 to label16 with label36;
        catch java.lang.Exception from label18 to label19 with label36;
        catch java.lang.Exception from label20 to label21 with label36;
        catch java.lang.Exception from label22 to label24 with label36;
        catch java.lang.Exception from label25 to label26 with label36;
        catch java.lang.Throwable from label01 to label03 with label45;
        catch java.lang.Throwable from label04 to label05 with label45;
        catch java.lang.Throwable from label06 to label07 with label45;
        catch java.lang.Throwable from label08 to label09 with label45;
        catch java.lang.Throwable from label10 to label11 with label45;
        catch java.lang.Throwable from label12 to label14 with label45;
        catch java.lang.Throwable from label15 to label17 with label45;
        catch java.lang.Throwable from label18 to label19 with label45;
        catch java.lang.Throwable from label20 to label21 with label45;
        catch java.lang.Throwable from label22 to label24 with label45;
        catch java.lang.Throwable from label25 to label26 with label45;
        catch java.lang.Exception from label26 to label27 with label39;
        catch java.lang.Exception from label30 to label31 with label39;
        catch java.lang.Throwable from label26 to label27 with label45;
        catch java.lang.Throwable from label28 to label29 with label45;
        catch java.lang.Throwable from label30 to label31 with label45;
        catch java.lang.Exception from label33 to label34 with label49;
        catch java.lang.Throwable from label31 to label32 with label47;
        catch java.lang.Throwable from label33 to label34 with label47;
        catch java.lang.Exception from label34 to label35 with label44;
        catch java.lang.Throwable from label34 to label35 with label48;
        catch java.lang.Exception from label37 to label38 with label39;
        catch java.lang.Throwable from label37 to label38 with label45;
        catch java.lang.Throwable from label40 to label41 with label45;
        catch java.lang.Exception from label42 to label43 with label44;
        catch java.lang.Throwable from label42 to label43 with label48;
    }

    private static boolean extractLibs(android.content.Context, int)
    {
        java.lang.Throwable r10, $r11;
        android.content.Context $r0;
        java.lang.Object[] $r5;
        long $l1, $l3;
        int $i0, $i2;
        java.lang.String $r4, $r6, $r7;
        boolean $z0;
        double $d0;
        java.io.FileWriter r1, r9;
        java.io.File r2, $r8;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i2 = staticinvoke <io.vov.utils.AndroidContextUtils: int getVersionCode(android.content.Context)>($r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("loadLibs start ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

        r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        $r4 = staticinvoke <io.vov.vitamio.Vitamio: java.lang.String getLibraryPath()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".lock");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label01:
        $r4 = staticinvoke <io.vov.vitamio.Vitamio: java.lang.String copyCompressedLib(android.content.Context,int,java.lang.String)>($r0, $i0, "libarm.so");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("copyCompressedLib time: ");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l3 - $l1;

        $d0 = (double) $l3;

        $d0 = $d0 / 1000.0;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>($r6, $r5);

        $r6 = staticinvoke <io.vov.vitamio.Vitamio: java.lang.String getLibraryPath()>();

        $i0 = staticinvoke <io.vov.vitamio.Vitamio: int getVitamioType()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $z0 = staticinvoke <io.vov.vitamio.Vitamio: boolean native_initializeLibs(java.lang.String,java.lang.String,java.lang.String)>($r4, $r6, $r7);

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r4);

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        r9 = null;

     label02:
        virtualinvoke r2.<java.io.File: boolean createNewFile()>();

     label03:
        r1 = new java.io.FileWriter;

     label04:
        specialinvoke r1.<java.io.FileWriter: void <init>(java.io.File)>(r2);

     label05:
        virtualinvoke r1.<java.io.FileWriter: void write(int)>($i2);

     label06:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("initializeNativeLibs: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("loadLibs time: ");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l3 - $l1;

        $d0 = (double) $l1;

        $d0 = $d0 / 1000.0;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r1);

        return 1;

     label07:
        r10 := @caughtexception;

     label08:
        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("Error creating lock file", r10);

     label09:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("initializeNativeLibs: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("loadLibs time: ");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l3 - $l1;

        $d0 = (double) $l1;

        $d0 = $d0 / 1000.0;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r9);

        return 0;

     label10:
        $r11 := @caughtexception;

     label11:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("initializeNativeLibs: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("loadLibs time: ");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l3 - $l1;

        $d0 = (double) $l1;

        $d0 = $d0 / 1000.0;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r9);

        throw $r11;

     label12:
        $r11 := @caughtexception;

        r9 = r1;

        goto label11;

     label13:
        r10 := @caughtexception;

        r9 = r1;

        goto label08;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.io.IOException from label04 to label05 with label07;
        catch java.lang.Throwable from label02 to label05 with label10;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    protected static final java.lang.String getLibraryPath()
    {
        java.lang.String r0;

        r0 = <io.vov.vitamio.Vitamio: java.lang.String vitamioLibraryPath>;

        return r0;
    }

    private static final java.util.List getRequiredLibs()
    {
        java.lang.String[] r1;
        java.util.ArrayList r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String r0;
        java.lang.String[][] $r3;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = newarray (java.lang.String[])[4];

        r1 = <io.vov.vitamio.Vitamio: java.lang.String[] LIBS_CODECS>;

        $r3[0] = r1;

        r1 = <io.vov.vitamio.Vitamio: java.lang.String[] LIBS_PLAYER>;

        $r3[1] = r1;

        r1 = <io.vov.vitamio.Vitamio: java.lang.String[] LIBS_SCANNER>;

        $r3[2] = r1;

        r1 = <io.vov.vitamio.Vitamio: java.lang.String[] LIBS_AV>;

        $r3[3] = r1;

        $i0 = lengthof $r3;

        $i2 = 0;

     label1:
        if $i2 < $i0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(".lock");

        return r2;

     label2:
        r1 = $r3[$i2];

        $i1 = lengthof r1;

        $i3 = 0;

     label3:
        if $i3 < $i1 goto label4;

        $i2 = $i2 + 1;

        goto label1;

     label4:
        r0 = r1[$i3];

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        $i3 = $i3 + 1;

        goto label3;
    }

    protected static java.lang.String getVitamioPackage()
    {
        java.lang.String r0;

        r0 = <io.vov.vitamio.Vitamio: java.lang.String vitamioPackage>;

        return r0;
    }

    protected static int getVitamioType()
    {
        int i0;

        i0 = <io.vov.vitamio.Vitamio: int vitamioType>;

        return i0;
    }

    public static boolean initialize(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <io.vov.vitamio.Vitamio: boolean isInitialized(android.content.Context)>($r0);

        if $z0 != 0 goto label1;

        $i0 = <io.vov.vitamio.R$raw: int libarm>;

        $z0 = staticinvoke <io.vov.vitamio.Vitamio: boolean extractLibs(android.content.Context,int)>($r0, $i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static boolean isInitialized(android.content.Context)
    {
        java.lang.Throwable r12, $r13;
        android.content.Context $r0;
        java.lang.Object[] $r9;
        java.lang.String[] $r5;
        java.lang.Integer $r10;
        int $i0, $i1;
        java.lang.String $r3;
        boolean $z0;
        java.util.Iterator $r7;
        java.io.File r1;
        java.util.List $r6;
        java.lang.StringBuilder $r4;
        java.lang.Object $r11;
        java.io.FileReader r2, r8;

        $r0 := @parameter0: android.content.Context;

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        <io.vov.vitamio.Vitamio: java.lang.String vitamioPackage> = $r3;

        $r4 = new java.lang.StringBuilder;

        $r3 = staticinvoke <io.vov.utils.AndroidContextUtils: java.lang.String getDataDir(android.content.Context)>($r0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libs/");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <io.vov.vitamio.Vitamio: java.lang.String vitamioLibraryPath> = $r3;

        r1 = new java.io.File;

        $r3 = staticinvoke <io.vov.vitamio.Vitamio: java.lang.String getLibraryPath()>();

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label21;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label21;

        $r5 = virtualinvoke r1.<java.io.File: java.lang.String[] list()>();

        if $r5 == null goto label21;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r5);

        $r6 = staticinvoke <io.vov.vitamio.Vitamio: java.util.List getRequiredLibs()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label12;

        r1 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        $r3 = staticinvoke <io.vov.vitamio.Vitamio: java.lang.String getLibraryPath()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".lock");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r3);

        r8 = null;

     label02:
        r2 = new java.io.FileReader;

     label03:
        specialinvoke r2.<java.io.FileReader: void <init>(java.io.File)>(r1);

     label04:
        $i0 = staticinvoke <io.vov.utils.AndroidContextUtils: int getVersionCode(android.content.Context)>($r0);

        $i1 = virtualinvoke r2.<java.io.FileReader: int read()>();

     label05:
        $r9 = newarray (java.lang.Object)[2];

     label06:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label07:
        $r9[0] = $r10;

     label08:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label09:
        $r9[1] = $r10;

     label10:
        staticinvoke <io.vov.utils.Log: void i(java.lang.String,java.lang.Object[])>("isNativeLibsInited, APP VERSION: %d, Vitamio Library version: %d", $r9);

     label11:
        if $i1 != $i0 goto label18;

        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r2);

        return 1;

     label12:
        $r11 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r11;

        $i0 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r5, $r3);

        if $i0 >= 0 goto label01;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = $r3;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Object[])>("Native libs %s not exists!", $r9);

        return 0;

     label13:
        r12 := @caughtexception;

     label14:
        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("isNativeLibsInited", r12);

     label15:
        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r8);

        return 0;

     label16:
        $r13 := @caughtexception;

     label17:
        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r8);

        throw $r13;

     label18:
        staticinvoke <io.vov.utils.IOUtils: void closeStream(java.io.Closeable)>(r2);

        return 0;

     label19:
        $r13 := @caughtexception;

        r8 = r2;

        goto label17;

     label20:
        r12 := @caughtexception;

        r8 = r2;

        goto label14;

     label21:
        return 0;

        catch java.io.IOException from label03 to label04 with label13;
        catch java.lang.Throwable from label02 to label04 with label16;
        catch java.io.IOException from label04 to label05 with label20;
        catch java.io.IOException from label06 to label07 with label20;
        catch java.io.IOException from label08 to label09 with label20;
        catch java.io.IOException from label10 to label11 with label20;
        catch java.lang.Throwable from label04 to label11 with label19;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    private static native boolean native_initializeLibs(java.lang.String, java.lang.String, java.lang.String);
}
