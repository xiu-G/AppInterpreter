public final class de.greenrobot.dao.internal.DaoConfig extends java.lang.Object implements java.lang.Cloneable
{
    public final java.lang.String[] allColumns;
    public final android.database.sqlite.SQLiteDatabase db;
    private de.greenrobot.dao.identityscope.IdentityScope identityScope;
    public final boolean keyIsNumeric;
    public final java.lang.String[] nonPkColumns;
    public final java.lang.String[] pkColumns;
    public final de.greenrobot.dao.Property pkProperty;
    public final de.greenrobot.dao.Property[] properties;
    public final de.greenrobot.dao.internal.TableStatements statements;
    public final java.lang.String tablename;

    public void <init>(android.database.sqlite.SQLiteDatabase, java.lang.Class)
    {
        java.lang.Object[] $r12;
        java.lang.String[] $r9, $r14;
        java.util.ArrayList $r3, $r4;
        de.greenrobot.dao.internal.TableStatements $r13;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        java.lang.String $r5;
        boolean $z0;
        de.greenrobot.dao.internal.DaoConfig r0;
        de.greenrobot.dao.Property[] $r8;
        java.lang.reflect.Field $r6;
        java.lang.Exception $r16;
        de.greenrobot.dao.DaoException $r17;
        de.greenrobot.dao.Property $r10, $r11;
        java.lang.Class $r2, $r15;
        java.lang.Object $r7;

        r0 := @this: de.greenrobot.dao.internal.DaoConfig;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<de.greenrobot.dao.internal.DaoConfig: android.database.sqlite.SQLiteDatabase db> = $r1;

     label01:
        $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TABLENAME");

        $r7 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r5 = (java.lang.String) $r7;

        r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String tablename> = $r5;

        $r8 = staticinvoke <de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property[] reflectProperties(java.lang.Class)>($r2);

        r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property[] properties> = $r8;

        $i0 = lengthof $r8;

        $r9 = newarray (java.lang.String)[$i0];

        r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] allColumns> = $r9;

     label02:
        $r3 = new java.util.ArrayList;

     label03:
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label04:
        $r4 = new java.util.ArrayList;

     label05:
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label06:
        $i0 = 0;

        $r10 = null;

     label07:
        $i1 = lengthof $r8;

     label08:
        if $i0 >= $i1 goto label15;

     label09:
        $r11 = $r8[$i0];

        $r5 = $r11.<de.greenrobot.dao.Property: java.lang.String columnName>;

        $r9 = r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] allColumns>;

        $r9[$i0] = $r5;

        $z0 = $r11.<de.greenrobot.dao.Property: boolean primaryKey>;

     label10:
        if $z0 == 0 goto label13;

     label11:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label12:
        $i0 = $i0 + 1;

        $r10 = $r11;

        goto label07;

     label13:
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label14:
        $r11 = $r10;

        goto label12;

     label15:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r9 = newarray (java.lang.String)[$i0];

        $r12 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r9 = (java.lang.String[]) $r12;

        r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] nonPkColumns> = $r9;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r9 = newarray (java.lang.String)[$i0];

        $r12 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r9 = (java.lang.String[]) $r12;

        r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] pkColumns> = $r9;

        $r9 = r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] pkColumns>;

        $i0 = lengthof $r9;

     label16:
        if $i0 != 1 goto label42;

     label17:
        r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property pkProperty> = $r10;

     label18:
        $r13 = new de.greenrobot.dao.internal.TableStatements;

     label19:
        $r5 = r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String tablename>;

        $r9 = r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] allColumns>;

        $r14 = r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] pkColumns>;

        specialinvoke $r13.<de.greenrobot.dao.internal.TableStatements: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],java.lang.String[])>($r1, $r5, $r9, $r14);

        r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.internal.TableStatements statements> = $r13;

        $r10 = r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property pkProperty>;

     label20:
        if $r10 == null goto label44;

     label21:
        $r10 = r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property pkProperty>;

        $r2 = $r10.<de.greenrobot.dao.Property: java.lang.Class type>;

     label22:
        $r15 = <java.lang.Long: java.lang.Class TYPE>;

     label23:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

     label24:
        if $z0 != 0 goto label39;

     label25:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Long;");

     label26:
        if $z0 != 0 goto label39;

        $r15 = <java.lang.Integer: java.lang.Class TYPE>;

     label27:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

     label28:
        if $z0 != 0 goto label39;

     label29:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Integer;");

     label30:
        if $z0 != 0 goto label39;

        $r15 = <java.lang.Short: java.lang.Class TYPE>;

     label31:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

     label32:
        if $z0 != 0 goto label39;

     label33:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Short;");

     label34:
        if $z0 != 0 goto label39;

        $r15 = <java.lang.Byte: java.lang.Class TYPE>;

     label35:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

     label36:
        if $z0 != 0 goto label39;

     label37:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Byte;");

     label38:
        if $z0 == 0 goto label43;

     label39:
        $z0 = 1;

     label40:
        r0.<de.greenrobot.dao.internal.DaoConfig: boolean keyIsNumeric> = $z0;

     label41:
        return;

     label42:
        $r10 = null;

        goto label17;

     label43:
        $z0 = 0;

        goto label40;

     label44:
        r0.<de.greenrobot.dao.internal.DaoConfig: boolean keyIsNumeric> = 0;

     label45:
        return;

     label46:
        $r16 := @caughtexception;

        $r17 = new de.greenrobot.dao.DaoException;

        specialinvoke $r17.<de.greenrobot.dao.DaoException: void <init>(java.lang.String,java.lang.Throwable)>("Could not init DAOConfig", $r16);

        throw $r17;

        catch java.lang.Exception from label01 to label02 with label46;
        catch java.lang.Exception from label03 to label04 with label46;
        catch java.lang.Exception from label05 to label06 with label46;
        catch java.lang.Exception from label07 to label08 with label46;
        catch java.lang.Exception from label09 to label10 with label46;
        catch java.lang.Exception from label11 to label12 with label46;
        catch java.lang.Exception from label13 to label14 with label46;
        catch java.lang.Exception from label15 to label16 with label46;
        catch java.lang.Exception from label17 to label18 with label46;
        catch java.lang.Exception from label19 to label20 with label46;
        catch java.lang.Exception from label21 to label22 with label46;
        catch java.lang.Exception from label23 to label24 with label46;
        catch java.lang.Exception from label25 to label26 with label46;
        catch java.lang.Exception from label27 to label28 with label46;
        catch java.lang.Exception from label29 to label30 with label46;
        catch java.lang.Exception from label31 to label32 with label46;
        catch java.lang.Exception from label33 to label34 with label46;
        catch java.lang.Exception from label35 to label36 with label46;
        catch java.lang.Exception from label37 to label38 with label46;
        catch java.lang.Exception from label40 to label41 with label46;
        catch java.lang.Exception from label44 to label45 with label46;
    }

    public void <init>(de.greenrobot.dao.internal.DaoConfig)
    {
        de.greenrobot.dao.internal.DaoConfig r0, $r1;
        de.greenrobot.dao.Property[] $r4;
        java.lang.String[] $r5;
        de.greenrobot.dao.internal.TableStatements $r7;
        android.database.sqlite.SQLiteDatabase $r2;
        de.greenrobot.dao.Property $r6;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.internal.DaoConfig;

        $r1 := @parameter0: de.greenrobot.dao.internal.DaoConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<de.greenrobot.dao.internal.DaoConfig: android.database.sqlite.SQLiteDatabase db>;

        r0.<de.greenrobot.dao.internal.DaoConfig: android.database.sqlite.SQLiteDatabase db> = $r2;

        $r3 = $r1.<de.greenrobot.dao.internal.DaoConfig: java.lang.String tablename>;

        r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String tablename> = $r3;

        $r4 = $r1.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property[] properties>;

        r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property[] properties> = $r4;

        $r5 = $r1.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] allColumns>;

        r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] allColumns> = $r5;

        $r5 = $r1.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] pkColumns>;

        r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] pkColumns> = $r5;

        $r5 = $r1.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] nonPkColumns>;

        r0.<de.greenrobot.dao.internal.DaoConfig: java.lang.String[] nonPkColumns> = $r5;

        $r6 = $r1.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property pkProperty>;

        r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.Property pkProperty> = $r6;

        $r7 = $r1.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.internal.TableStatements statements>;

        r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.internal.TableStatements statements> = $r7;

        $z0 = $r1.<de.greenrobot.dao.internal.DaoConfig: boolean keyIsNumeric>;

        r0.<de.greenrobot.dao.internal.DaoConfig: boolean keyIsNumeric> = $z0;

        return;
    }

    private static de.greenrobot.dao.Property[] reflectProperties(java.lang.Class)
    {
        java.util.ArrayList $r4;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        boolean $z0;
        de.greenrobot.dao.Property[] $r8;
        java.util.Iterator $r9;
        java.lang.reflect.Field $r5;
        java.lang.reflect.Field[] $r3;
        de.greenrobot.dao.DaoException $r11;
        de.greenrobot.dao.Property $r7, $r10;
        java.lang.Class $r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r6;

        $r0 := @parameter0: java.lang.Class;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$Properties");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r2);

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r5 = $r3[$i1];

        $i2 = virtualinvoke $r5.<java.lang.reflect.Field: int getModifiers()>();

        $i2 = $i2 & 9;

        if $i2 != 9 goto label2;

        $r6 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $z0 = $r6 instanceof de.greenrobot.dao.Property;

        if $z0 == 0 goto label2;

        $r7 = (de.greenrobot.dao.Property) $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r8 = newarray (de.greenrobot.dao.Property)[$i0];

        $r9 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (de.greenrobot.dao.Property) $r6;

        $i0 = $r7.<de.greenrobot.dao.Property: int ordinal>;

        $r10 = $r8[$i0];

        if $r10 == null goto label5;

        $r11 = new de.greenrobot.dao.DaoException;

        specialinvoke $r11.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>("Duplicate property ordinals");

        throw $r11;

     label5:
        $i0 = $r7.<de.greenrobot.dao.Property: int ordinal>;

        $r8[$i0] = $r7;

        goto label4;

     label6:
        return $r8;
    }

    public final de.greenrobot.dao.internal.DaoConfig clone()
    {
        de.greenrobot.dao.internal.DaoConfig r0, $r1;

        r0 := @this: de.greenrobot.dao.internal.DaoConfig;

        $r1 = new de.greenrobot.dao.internal.DaoConfig;

        specialinvoke $r1.<de.greenrobot.dao.internal.DaoConfig: void <init>(de.greenrobot.dao.internal.DaoConfig)>(r0);

        return $r1;
    }

    public final volatile java.lang.Object clone()
    {
        de.greenrobot.dao.internal.DaoConfig r0;

        r0 := @this: de.greenrobot.dao.internal.DaoConfig;

        r0 = virtualinvoke r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.internal.DaoConfig clone()>();

        return r0;
    }

    public final de.greenrobot.dao.identityscope.IdentityScope getIdentityScope()
    {
        de.greenrobot.dao.internal.DaoConfig r0;
        de.greenrobot.dao.identityscope.IdentityScope r1;

        r0 := @this: de.greenrobot.dao.internal.DaoConfig;

        r1 = r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.identityscope.IdentityScope identityScope>;

        return r1;
    }

    public final void initIdentityScope(de.greenrobot.dao.identityscope.IdentityScopeType)
    {
        de.greenrobot.dao.internal.DaoConfig r0;
        java.lang.IllegalArgumentException $r5;
        de.greenrobot.dao.identityscope.IdentityScopeType $r1, $r2;
        de.greenrobot.dao.identityscope.IdentityScopeLong $r3;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        de.greenrobot.dao.identityscope.IdentityScopeObject $r4;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.internal.DaoConfig;

        $r1 := @parameter0: de.greenrobot.dao.identityscope.IdentityScopeType;

        $r2 = <de.greenrobot.dao.identityscope.IdentityScopeType: de.greenrobot.dao.identityscope.IdentityScopeType None>;

        if $r1 != $r2 goto label1;

        r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.identityscope.IdentityScope identityScope> = null;

        return;

     label1:
        $r2 = <de.greenrobot.dao.identityscope.IdentityScopeType: de.greenrobot.dao.identityscope.IdentityScopeType Session>;

        if $r1 != $r2 goto label3;

        $z0 = r0.<de.greenrobot.dao.internal.DaoConfig: boolean keyIsNumeric>;

        if $z0 == 0 goto label2;

        $r3 = new de.greenrobot.dao.identityscope.IdentityScopeLong;

        specialinvoke $r3.<de.greenrobot.dao.identityscope.IdentityScopeLong: void <init>()>();

        r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.identityscope.IdentityScope identityScope> = $r3;

        return;

     label2:
        $r4 = new de.greenrobot.dao.identityscope.IdentityScopeObject;

        specialinvoke $r4.<de.greenrobot.dao.identityscope.IdentityScopeObject: void <init>()>();

        r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.identityscope.IdentityScope identityScope> = $r4;

        return;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unsupported type: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;
    }

    public final void setIdentityScope(de.greenrobot.dao.identityscope.IdentityScope)
    {
        de.greenrobot.dao.internal.DaoConfig r0;
        de.greenrobot.dao.identityscope.IdentityScope $r1;

        r0 := @this: de.greenrobot.dao.internal.DaoConfig;

        $r1 := @parameter0: de.greenrobot.dao.identityscope.IdentityScope;

        r0.<de.greenrobot.dao.internal.DaoConfig: de.greenrobot.dao.identityscope.IdentityScope identityScope> = $r1;

        return;
    }
}
