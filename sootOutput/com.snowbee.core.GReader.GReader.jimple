public class com.snowbee.core.GReader.GReader extends java.lang.Object
{
    private static final java.lang.String _API_URL;
    private static final java.lang.String _ATOM_URL;
    private static final java.lang.String _AUTHPARAMS;
    private static final java.lang.String _DISABLE_TAG_URL;
    private static final java.lang.String _EDIT_TAG_URL;
    private static final java.lang.String _READER_BASE_URL;
    private static final java.lang.String _RENAME_TAG_URL;
    private static final java.lang.String _STREAM_CONTENTS_URL;
    private static final java.lang.String _SUBSCRIPTION_LIST_URL;
    private static final java.lang.String _SUBSCRIPTION_URL;
    private static final java.lang.String _TAG_LIST_URL;
    private static final int _TIMEOUT;
    private static final java.lang.String _UNREAD_COUNT_URL;
    private static final java.lang.String _USERAGENT;
    private static final java.lang.String _USER_LABEL;

    public void <init>()
    {
        com.snowbee.core.GReader.GReader r0;

        r0 := @this: com.snowbee.core.GReader.GReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String clearNewLine(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\'", "\'\'");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("\n");

        if $z0 != 0 goto label4;

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("\n");

        if $z0 != 0 goto label5;

     label3:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("\n\n");

        if $i0 != -1 goto label6;

        return $r0;

     label4:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - 2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label1;

     label5:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - 2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(2, $i0);

        goto label2;

     label6:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        goto label3;
    }

    private static java.lang.String encodeUrl(android.os.Bundle)
    {
        android.os.Bundle $r0;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.lang.StringBuilder r1, $r6;
        java.lang.Object $r5;
        java.lang.String $r4, $r7;
        boolean z0, $z1;

        $r0 := @parameter0: android.os.Bundle;

        if $r0 != null goto label1;

        return "";

     label1:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        z0 = 1;

        $r2 = virtualinvoke $r0.<android.os.Bundle: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r5;

        if z0 == 0 goto label5;

        z0 = 0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

     label4:
        $r6 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        goto label2;

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        goto label4;
    }

    public static java.util.List getFeed(java.lang.String, java.lang.String, int) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        java.util.ArrayList $r6;
        java.util.List $r4;
        org.json.JSONException $r5;
        org.json.JSONObject $r3;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("https://www.google.com/reader/api/0/stream/contents/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <com.snowbee.core.GReader.GReader: org.json.JSONObject requestJSONObject(java.lang.String,java.lang.String)>($r0, $r1);

        $r4 = staticinvoke <com.snowbee.core.GReader.GReader: java.util.List getFeed(org.json.JSONObject,int)>($r3, $i0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<org.json.JSONException: void printStackTrace()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        return $r6;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static java.util.List getFeed(org.json.JSONObject, int) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        com.snowbee.core.GReader.Feed r1;
        java.util.ArrayList r2;
        org.json.JSONException $r7;
        org.json.JSONObject $r0, $r6;
        int $i0, i1, $i2;
        java.lang.String $r4;
        org.json.JSONArray $r3, $r5;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $i0 := @parameter1: int;

     label01:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("items");

     label02:
        r2 = new java.util.ArrayList;

     label03:
        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label04:
        if $r3 == null goto label07;

        i1 = 0;

     label05:
        $i2 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

     label06:
        if i1 >= $i2 goto label07;

        if i1 < $i0 goto label08;

     label07:
        return r2;

     label08:
        $r0 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i1);

     label09:
        r1 = new com.snowbee.core.GReader.Feed;

     label10:
        specialinvoke r1.<com.snowbee.core.GReader.Feed: void <init>()>();

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("crawlTimeMsec");

     label11:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String crawlTimeMsec> = $r4;

     label12:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("timestampUsec");

     label13:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String timestampUsec> = $r4;

     label14:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("id");

     label15:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String id> = $r4;

     label16:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("title");

     label17:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String title> = $r4;

     label18:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("published");

     label19:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String published> = $r4;

     label20:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("updated");

     label21:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String updated> = $r4;

     label22:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("alternate");

     label23:
        if $z0 == 0 goto label26;

     label24:
        $r5 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("alternate");

        $r6 = virtualinvoke $r5.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

        $r4 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("href");

     label25:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String alternate_href> = $r4;

     label26:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("summary");

     label27:
        if $z0 == 0 goto label37;

     label28:
        $r0 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("summary");

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("content");

     label29:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String content> = $r4;

     label30:
        $r4 = r1.<com.snowbee.core.GReader.Feed: java.lang.String content>;

     label31:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{\"content\":\"", "");

     label32:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String content> = $r4;

        $r4 = r1.<com.snowbee.core.GReader.Feed: java.lang.String content>;

     label33:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\",\"direction\":\"ltr\"}", "");

        $r4 = staticinvoke <com.snowbee.core.GReader.GReader: java.lang.String clearNewLine(java.lang.String)>($r4);

     label34:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String content> = $r4;

     label35:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label36:
        i1 = i1 + 1;

        goto label05;

     label37:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("content");

     label38:
        if $z0 == 0 goto label30;

     label39:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("content");

     label40:
        r1.<com.snowbee.core.GReader.Feed: java.lang.String content> = $r4;

        goto label30;

     label41:
        $r7 := @caughtexception;

        virtualinvoke $r7.<org.json.JSONException: void printStackTrace()>();

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        return r2;

        catch org.json.JSONException from label01 to label02 with label41;
        catch org.json.JSONException from label03 to label04 with label41;
        catch org.json.JSONException from label05 to label06 with label41;
        catch org.json.JSONException from label08 to label09 with label41;
        catch org.json.JSONException from label10 to label11 with label41;
        catch org.json.JSONException from label12 to label13 with label41;
        catch org.json.JSONException from label14 to label15 with label41;
        catch org.json.JSONException from label16 to label17 with label41;
        catch org.json.JSONException from label18 to label19 with label41;
        catch org.json.JSONException from label20 to label21 with label41;
        catch org.json.JSONException from label22 to label23 with label41;
        catch org.json.JSONException from label24 to label25 with label41;
        catch org.json.JSONException from label26 to label27 with label41;
        catch org.json.JSONException from label28 to label29 with label41;
        catch org.json.JSONException from label31 to label32 with label41;
        catch org.json.JSONException from label33 to label34 with label41;
        catch org.json.JSONException from label35 to label36 with label41;
        catch org.json.JSONException from label37 to label38 with label41;
        catch org.json.JSONException from label39 to label40 with label41;
    }

    public static java.util.List getSubscriptionList(java.lang.String) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        java.util.List $r2;
        org.json.JSONException $r3;
        org.json.JSONObject $r1;
        java.lang.String $r0;
        java.util.ArrayList $r4;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.snowbee.core.GReader.GReader: org.json.JSONObject requestJSONObject(java.lang.String,java.lang.String)>("https://www.google.com/reader/api/0/subscription/list?output=json", $r0);

        $r2 = staticinvoke <com.snowbee.core.GReader.GReader: java.util.List getSubscriptionList(org.json.JSONObject)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        return $r4;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static java.util.List getSubscriptionList(org.json.JSONObject) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        com.snowbee.core.GReader.SubScription r1;
        java.util.ArrayList r2;
        org.json.JSONException $r5;
        org.json.JSONObject $r0;
        int i0, $i1;
        java.lang.String $r4;
        org.json.JSONArray $r3;

        $r0 := @parameter0: org.json.JSONObject;

     label01:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("subscriptions");

     label02:
        r2 = new java.util.ArrayList;

     label03:
        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label04:
        if $r3 == null goto label07;

        i0 = 0;

     label05:
        $i1 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

     label06:
        if i0 < $i1 goto label08;

     label07:
        return r2;

     label08:
        $r0 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

     label09:
        r1 = new com.snowbee.core.GReader.SubScription;

     label10:
        specialinvoke r1.<com.snowbee.core.GReader.SubScription: void <init>()>();

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("id");

     label11:
        r1.<com.snowbee.core.GReader.SubScription: java.lang.String id> = $r4;

     label12:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("title");

     label13:
        r1.<com.snowbee.core.GReader.SubScription: java.lang.String title> = $r4;

     label14:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("sortid");

     label15:
        r1.<com.snowbee.core.GReader.SubScription: java.lang.String sortid> = $r4;

     label16:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("firstitemmsec");

     label17:
        r1.<com.snowbee.core.GReader.SubScription: java.lang.String firstitemmsec> = $r4;

     label18:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label19:
        i0 = i0 + 1;

        goto label05;

     label20:
        $r5 := @caughtexception;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        return r2;

        catch org.json.JSONException from label01 to label02 with label20;
        catch org.json.JSONException from label03 to label04 with label20;
        catch org.json.JSONException from label05 to label06 with label20;
        catch org.json.JSONException from label08 to label09 with label20;
        catch org.json.JSONException from label10 to label11 with label20;
        catch org.json.JSONException from label12 to label13 with label20;
        catch org.json.JSONException from label14 to label15 with label20;
        catch org.json.JSONException from label16 to label17 with label20;
        catch org.json.JSONException from label18 to label19 with label20;
    }

    public static java.util.List getSubscriptionUnreadCount(java.lang.String) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        java.util.List $r2;
        org.json.JSONException $r3;
        org.json.JSONObject $r1;
        java.lang.String $r0;
        java.util.ArrayList $r4;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.snowbee.core.GReader.GReader: org.json.JSONObject requestJSONObject(java.lang.String,java.lang.String)>("https://www.google.com/reader/api/0/unread-count?allcomments=true&output=json", $r0);

        $r2 = staticinvoke <com.snowbee.core.GReader.GReader: java.util.List getSubscriptionUnreadCount(org.json.JSONObject)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        return $r4;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static java.util.List getSubscriptionUnreadCount(org.json.JSONObject) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        com.snowbee.core.GReader.SubScription r1;
        java.util.ArrayList r2;
        org.json.JSONException $r5;
        org.json.JSONObject $r0;
        int i0, $i1;
        java.lang.String $r4;
        org.json.JSONArray $r3;

        $r0 := @parameter0: org.json.JSONObject;

     label01:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("unreadcounts");

     label02:
        r2 = new java.util.ArrayList;

     label03:
        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label04:
        if $r3 == null goto label07;

        i0 = 0;

     label05:
        $i1 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

     label06:
        if i0 < $i1 goto label08;

     label07:
        return r2;

     label08:
        $r0 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

     label09:
        r1 = new com.snowbee.core.GReader.SubScription;

     label10:
        specialinvoke r1.<com.snowbee.core.GReader.SubScription: void <init>()>();

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("id");

     label11:
        r1.<com.snowbee.core.GReader.SubScription: java.lang.String id> = $r4;

     label12:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("count");

     label13:
        r1.<com.snowbee.core.GReader.SubScription: java.lang.String count> = $r4;

     label14:
        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("newestItemTimestampUsec");

     label15:
        r1.<com.snowbee.core.GReader.SubScription: java.lang.String newestItemTimestampUsec> = $r4;

     label16:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label17:
        i0 = i0 + 1;

        goto label05;

     label18:
        $r5 := @caughtexception;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        return r2;

        catch org.json.JSONException from label01 to label02 with label18;
        catch org.json.JSONException from label03 to label04 with label18;
        catch org.json.JSONException from label05 to label06 with label18;
        catch org.json.JSONException from label08 to label09 with label18;
        catch org.json.JSONException from label10 to label11 with label18;
        catch org.json.JSONException from label12 to label13 with label18;
        catch org.json.JSONException from label14 to label15 with label18;
        catch org.json.JSONException from label16 to label17 with label18;
    }

    public static org.json.JSONObject requestJSONObject(java.lang.String, java.lang.String) throws org.json.JSONException, java.io.UnsupportedEncodingException, java.io.IOException
    {
        java.lang.String $r0, $r1;
        org.json.JSONObject $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <com.snowbee.core.Google.GoogleAPI: java.lang.String requestGoogleData(java.lang.String,java.lang.String)>($r0, $r1);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<body>", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("</body>", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\'", "\'\'");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&quot;", "\'");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\'\'", "&quot;");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<br><br>", "<br>");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<br><p", "<p");

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        return $r2;
    }

    public static org.apache.http.HttpResponse requestPost(java.lang.String, android.os.Bundle, java.util.List)
    {
        org.apache.http.impl.client.DefaultHttpClient r3, $r15;
        java.lang.Throwable $r10;
        org.apache.http.client.methods.HttpPost r5, $r12;
        android.os.Bundle $r1;
        org.apache.http.params.BasicHttpParams r4, $r14;
        org.apache.http.client.entity.UrlEncodedFormEntity $r8, $r13;
        java.lang.String $r0;
        java.io.IOException $r16;
        java.util.List r2;
        org.apache.http.params.HttpParams $r7;
        org.apache.http.HttpResponse $r9;
        java.lang.StringBuilder $r6, $r11;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: java.util.List;

        $r12 = new org.apache.http.client.methods.HttpPost;

        r5 = $r12;

        $r11 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r0 = staticinvoke <com.snowbee.core.GReader.GReader: java.lang.String encodeUrl(android.os.Bundle)>($r1);

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r0);

     label1:
        $r7 = virtualinvoke r5.<org.apache.http.client.methods.HttpPost: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r7.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.expect-continue", 0);

     label2:
        $r13 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        $r8 = $r13;

     label3:
        specialinvoke $r13.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r2, "UTF-8");

        virtualinvoke r5.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r8);

     label4:
        $r14 = new org.apache.http.params.BasicHttpParams;

        r4 = $r14;

     label5:
        specialinvoke $r14.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r4, 10000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r4, 12000);

     label6:
        $r15 = new org.apache.http.impl.client.DefaultHttpClient;

        r3 = $r15;

     label7:
        specialinvoke $r15.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r4);

        $r9 = virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r5);

     label8:
        return $r9;

     label9:
        $r10 := @caughtexception;

        $r16 = (java.io.IOException) $r10;

        virtualinvoke $r16.<java.io.IOException: void printStackTrace()>();

        return null;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label6 with label9;
        catch java.io.IOException from label7 to label8 with label9;
    }

    public static void <clinit>()
    {
        <com.snowbee.core.GReader.GReader: java.lang.String _USER_LABEL> = "user/-/label/";

        <com.snowbee.core.GReader.GReader: java.lang.String _USERAGENT> = "Mozilla";

        <com.snowbee.core.GReader.GReader: java.lang.String _UNREAD_COUNT_URL> = "https://www.google.com/reader/api/0/unread-count?allcomments=true&output=json";

        <com.snowbee.core.GReader.GReader: int _TIMEOUT> = 10000;

        <com.snowbee.core.GReader.GReader: java.lang.String _TAG_LIST_URL> = "https://www.google.com/reader/api/0/tag/list";

        <com.snowbee.core.GReader.GReader: java.lang.String _SUBSCRIPTION_URL> = "https://www.google.com/reader/api/0/subscription/edit";

        <com.snowbee.core.GReader.GReader: java.lang.String _SUBSCRIPTION_LIST_URL> = "https://www.google.com/reader/api/0/subscription/list?output=json";

        <com.snowbee.core.GReader.GReader: java.lang.String _STREAM_CONTENTS_URL> = "https://www.google.com/reader/api/0/stream/contents";

        <com.snowbee.core.GReader.GReader: java.lang.String _RENAME_TAG_URL> = "https://www.google.com/reader/api/0/rename-tag";

        <com.snowbee.core.GReader.GReader: java.lang.String _READER_BASE_URL> = "https://www.google.com/reader/";

        <com.snowbee.core.GReader.GReader: java.lang.String _EDIT_TAG_URL> = "https://www.google.com/reader/api/0/tag/edit";

        <com.snowbee.core.GReader.GReader: java.lang.String _DISABLE_TAG_URL> = "https://www.google.com/reader/api/0/disable-tag";

        <com.snowbee.core.GReader.GReader: java.lang.String _AUTHPARAMS> = "GoogleLogin auth=";

        <com.snowbee.core.GReader.GReader: java.lang.String _ATOM_URL> = "https://www.google.com/reader/atom";

        <com.snowbee.core.GReader.GReader: java.lang.String _API_URL> = "https://www.google.com/reader/api/0/";

        return;
    }
}
