class cn.hi321.browser.media.http.RetryHandler extends java.lang.Object implements org.apache.http.client.HttpRequestRetryHandler
{
    private static final int RETRY_SLEEP_TIME_MILLIS;
    private static java.util.HashSet exceptionBlacklist;
    private static java.util.HashSet exceptionWhitelist;
    private final int maxRetries;

    static void <clinit>()
    {
        java.util.HashSet $r0;

        <cn.hi321.browser.media.http.RetryHandler: int RETRY_SLEEP_TIME_MILLIS> = 1500;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <cn.hi321.browser.media.http.RetryHandler: java.util.HashSet exceptionWhitelist> = $r0;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <cn.hi321.browser.media.http.RetryHandler: java.util.HashSet exceptionBlacklist> = $r0;

        $r0 = <cn.hi321.browser.media.http.RetryHandler: java.util.HashSet exceptionWhitelist>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>(class "Lorg/apache/http/NoHttpResponseException;");

        $r0 = <cn.hi321.browser.media.http.RetryHandler: java.util.HashSet exceptionWhitelist>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>(class "Ljava/net/UnknownHostException;");

        $r0 = <cn.hi321.browser.media.http.RetryHandler: java.util.HashSet exceptionWhitelist>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>(class "Ljava/net/SocketException;");

        $r0 = <cn.hi321.browser.media.http.RetryHandler: java.util.HashSet exceptionBlacklist>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>(class "Ljava/io/InterruptedIOException;");

        $r0 = <cn.hi321.browser.media.http.RetryHandler: java.util.HashSet exceptionBlacklist>;

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>(class "Ljavax/net/ssl/SSLException;");

        return;
    }

    public void <init>(int)
    {
        int $i0;
        cn.hi321.browser.media.http.RetryHandler r0;

        r0 := @this: cn.hi321.browser.media.http.RetryHandler;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cn.hi321.browser.media.http.RetryHandler: int maxRetries> = 5;

        return;
    }

    protected boolean isInList(java.util.HashSet, java.lang.Throwable)
    {
        java.util.HashSet r1;
        java.lang.Throwable $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.Class $r5;
        cn.hi321.browser.media.http.RetryHandler r0;
        boolean $z0;

        r0 := @this: cn.hi321.browser.media.http.RetryHandler;

        r1 := @parameter0: java.util.HashSet;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = virtualinvoke r1.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Class) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isInstance(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;
    }

    public boolean retryRequest(java.io.IOException, int, org.apache.http.protocol.HttpContext)
    {
        java.io.IOException $r1;
        org.apache.http.client.methods.HttpUriRequest r5;
        java.util.HashSet $r7;
        org.apache.http.protocol.HttpContext $r2;
        int $i0, $i1;
        java.lang.Boolean r4;
        java.lang.Object $r3;
        cn.hi321.browser.media.http.RetryHandler r0;
        java.lang.String $r6;
        boolean z0, $z1, $z2;

        r0 := @this: cn.hi321.browser.media.http.RetryHandler;

        $r1 := @parameter0: java.io.IOException;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.apache.http.protocol.HttpContext;

        z0 = 1;

        $r3 = interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.request_sent");

        r4 = (java.lang.Boolean) $r3;

        if r4 == null goto label4;

        $z1 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

        $z1 = 1;

     label1:
        $i1 = r0.<cn.hi321.browser.media.http.RetryHandler: int maxRetries>;

        if $i0 <= $i1 goto label5;

        z0 = 0;

     label2:
        if z0 == 0 goto label9;

        $r3 = interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.request");

        r5 = (org.apache.http.client.methods.HttpUriRequest) $r3;

        $r6 = interfaceinvoke r5.<org.apache.http.client.methods.HttpUriRequest: java.lang.String getMethod()>();

        z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("POST");

        if z0 == 0 goto label8;

        z0 = 0;

     label3:
        if z0 == 0 goto label9;

        staticinvoke <android.os.SystemClock: void sleep(long)>(1500L);

        return z0;

     label4:
        $z1 = 0;

        goto label1;

     label5:
        $r7 = <cn.hi321.browser.media.http.RetryHandler: java.util.HashSet exceptionBlacklist>;

        $z2 = virtualinvoke r0.<cn.hi321.browser.media.http.RetryHandler: boolean isInList(java.util.HashSet,java.lang.Throwable)>($r7, $r1);

        if $z2 == 0 goto label6;

        z0 = 0;

        goto label2;

     label6:
        $r7 = <cn.hi321.browser.media.http.RetryHandler: java.util.HashSet exceptionWhitelist>;

        $z2 = virtualinvoke r0.<cn.hi321.browser.media.http.RetryHandler: boolean isInList(java.util.HashSet,java.lang.Throwable)>($r7, $r1);

        if $z2 == 0 goto label7;

        z0 = 1;

        goto label2;

     label7:
        if $z1 != 0 goto label2;

        z0 = 1;

        goto label2;

     label8:
        z0 = 1;

        goto label3;

     label9:
        virtualinvoke $r1.<java.io.IOException: void printStackTrace()>();

        return z0;
    }
}
