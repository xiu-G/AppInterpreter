public class u.aly.cs extends u.aly.cy
{
    private static final u.aly.dd d;
    private static final u.aly.ct e;
    private static final byte[] f;
    private static final byte h;
    private static final byte i;
    private static final byte j;
    private static final byte k;
    private static final int l;
    byte[] a;
    byte[] b;
    byte[] c;
    private u.aly.bx m;
    private short n;
    private u.aly.ct o;
    private java.lang.Boolean p;
    private final long q;
    private byte[] r;

    static void <clinit>()
    {
        byte[] $r2;
        u.aly.ct $r1;
        u.aly.dd $r0;

        <u.aly.cs: int l> = 5;

        <u.aly.cs: byte k> = -32;

        <u.aly.cs: byte j> = 31;

        <u.aly.cs: byte i> = 1;

        <u.aly.cs: byte h> = -126;

        $r0 = new u.aly.dd;

        specialinvoke $r0.<u.aly.dd: void <init>(java.lang.String)>("");

        <u.aly.cs: u.aly.dd d> = $r0;

        $r1 = new u.aly.ct;

        specialinvoke $r1.<u.aly.ct: void <init>(java.lang.String,byte,short)>("", 0, 0);

        <u.aly.cs: u.aly.ct e> = $r1;

        $r2 = newarray (byte)[16];

        <u.aly.cs: byte[] f> = $r2;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[0] = 0;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[2] = 1;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[3] = 3;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[6] = 4;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[8] = 5;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[10] = 6;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[4] = 7;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[11] = 8;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[15] = 9;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[14] = 10;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[13] = 11;

        $r2 = <u.aly.cs: byte[] f>;

        $r2[12] = 12;

        return;
    }

    public void <init>(u.aly.dm)
    {
        u.aly.dm $r1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: u.aly.dm;

        specialinvoke r0.<u.aly.cs: void <init>(u.aly.dm,long)>($r1, -1L);

        return;
    }

    public void <init>(u.aly.dm, long)
    {
        byte[] $r3;
        u.aly.dm $r1;
        u.aly.bx $r2;
        long $l0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: u.aly.dm;

        $l0 := @parameter1: long;

        specialinvoke r0.<u.aly.cy: void <init>(u.aly.dm)>($r1);

        $r2 = new u.aly.bx;

        specialinvoke $r2.<u.aly.bx: void <init>(int)>(15);

        r0.<u.aly.cs: u.aly.bx m> = $r2;

        r0.<u.aly.cs: short n> = 0;

        r0.<u.aly.cs: u.aly.ct o> = null;

        r0.<u.aly.cs: java.lang.Boolean p> = null;

        $r3 = newarray (byte)[5];

        r0.<u.aly.cs: byte[] a> = $r3;

        $r3 = newarray (byte)[10];

        r0.<u.aly.cs: byte[] b> = $r3;

        $r3 = newarray (byte)[1];

        r0.<u.aly.cs: byte[] r> = $r3;

        $r3 = newarray (byte)[1];

        r0.<u.aly.cs: byte[] c> = $r3;

        r0.<u.aly.cs: long q> = $l0;

        return;
    }

    private int E() throws u.aly.cf
    {
        byte[] $r2;
        short $s7;
        byte $b5, $b6;
        u.aly.dm $r1;
        int $i0, $i1, $i2, $i3, $i4;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 = 0;

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $i1 = virtualinvoke $r1.<u.aly.dm: int h()>();

        if $i1 < 5 goto label5;

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $r2 = virtualinvoke $r1.<u.aly.dm: byte[] f()>();

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $i2 = virtualinvoke $r1.<u.aly.dm: int g()>();

        $i3 = 0;

        $i1 = 0;

     label1:
        $i4 = $i2 + $i0;

        $b5 = $r2[$i4];

        $b6 = $b5 & 127;

        $i4 = (int) $b6;

        $i4 = $i4 << $i3;

        $i1 = $i1 | $i4;

        $s7 = (short) $b5;

        $s7 = $s7 & 128;

        $i4 = (int) $s7;

        if $i4 == 128 goto label2;

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $i0 = $i0 + 1;

        virtualinvoke $r1.<u.aly.dm: void a(int)>($i0);

        return $i1;

     label2:
        $i3 = $i3 + 7;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $i0 = $i0 + 7;

     label4:
        $b5 = virtualinvoke r0.<u.aly.cs: byte u()>();

        $b6 = $b5 & 127;

        $i2 = (int) $b6;

        $i2 = $i2 << $i0;

        $i1 = $i1 | $i2;

        $s7 = (short) $b5;

        $s7 = $s7 & 128;

        $i2 = (int) $s7;

        if $i2 == 128 goto label3;

        return $i1;

     label5:
        $i1 = 0;

        goto label4;
    }

    private long F() throws u.aly.cf
    {
        byte[] $r2;
        long $l1, $l7;
        short $s8;
        byte $b5, $b6;
        u.aly.dm $r1;
        int $i0, $i2, $i3, $i4;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 = 0;

        $l1 = 0L;

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $i2 = virtualinvoke $r1.<u.aly.dm: int h()>();

        if $i2 < 10 goto label4;

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $r2 = virtualinvoke $r1.<u.aly.dm: byte[] f()>();

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $i2 = virtualinvoke $r1.<u.aly.dm: int g()>();

        $i3 = 0;

     label1:
        $i4 = $i2 + $i0;

        $b5 = $r2[$i4];

        $b6 = $b5 & 127;

        $l7 = (long) $b6;

        $l7 = $l7 << $i3;

        $l1 = $l1 | $l7;

        $s8 = (short) $b5;

        $s8 = $s8 & 128;

        $i4 = (int) $s8;

        if $i4 == 128 goto label2;

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $i0 = $i0 + 1;

        virtualinvoke $r1.<u.aly.dm: void a(int)>($i0);

        return $l1;

     label2:
        $i3 = $i3 + 7;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $i0 = $i0 + 7;

     label4:
        $b5 = virtualinvoke r0.<u.aly.cs: byte u()>();

        $b6 = $b5 & 127;

        $l7 = (long) $b6;

        $l7 = $l7 << $i0;

        $l1 = $l1 | $l7;

        $s8 = (short) $b5;

        $s8 = $s8 & 128;

        $i2 = (int) $s8;

        if $i2 == 128 goto label3;

        return $l1;
    }

    private long a(byte[])
    {
        byte[] $r1;
        byte $b0;
        long $l1, $l2;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: byte[];

        $b0 = $r1[7];

        $l1 = (long) $b0;

        $l1 = $l1 & 255L;

        $l1 = $l1 << 56;

        $b0 = $r1[6];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 48;

        $l1 = $l1 | $l2;

        $b0 = $r1[5];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 40;

        $l1 = $l1 | $l2;

        $b0 = $r1[4];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 32;

        $l1 = $l1 | $l2;

        $b0 = $r1[3];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 24;

        $l1 = $l1 | $l2;

        $b0 = $r1[2];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 16;

        $l1 = $l1 | $l2;

        $b0 = $r1[1];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 8;

        $l1 = $l1 | $l2;

        $b0 = $r1[0];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l1 = $l1 | $l2;

        return $l1;
    }

    private void a(long, byte[], int)
    {
        byte[] $r1;
        long $l0, $l3;
        byte $b5;
        int $i1, $i2, $i4;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $l0 := @parameter0: long;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $l3 = $l0 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[0] = $b5;

        $l3 = $l0 >> 8;

        $l3 = $l3 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[1] = $b5;

        $l3 = $l0 >> 16;

        $l3 = $l3 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[2] = $b5;

        $l3 = $l0 >> 24;

        $l3 = $l3 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[3] = $b5;

        $l3 = $l0 >> 32;

        $l3 = $l3 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[4] = $b5;

        $l3 = $l0 >> 40;

        $l3 = $l3 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[5] = $b5;

        $l3 = $l0 >> 48;

        $l3 = $l3 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[6] = $b5;

        $l0 = $l0 >> 56;

        $l0 = $l0 & 255L;

        $i2 = (int) $l0;

        $b5 = (byte) $i2;

        $r1[7] = $b5;

        return;
    }

    private void a(u.aly.ct, byte) throws u.aly.cf
    {
        short $s1, $s2;
        byte $b0;
        int $i3, $i4;
        u.aly.ct $r1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: u.aly.ct;

        $b0 := @parameter1: byte;

        $i3 = (int) $b0;

        if $i3 != -1 goto label1;

        $b0 = $r1.<u.aly.ct: byte b>;

        $b0 = specialinvoke r0.<u.aly.cs: byte e(byte)>($b0);

     label1:
        $s1 = $r1.<u.aly.ct: short c>;

        $s2 = r0.<u.aly.cs: short n>;

        $i3 = (int) $s1;

        $i4 = (int) $s2;

        if $i3 <= $i4 goto label3;

        $s1 = $r1.<u.aly.ct: short c>;

        $s2 = r0.<u.aly.cs: short n>;

        $i3 = (int) $s1;

        $i4 = (int) $s2;

        $i3 = $i3 - $i4;

        if $i3 > 15 goto label3;

        $s1 = $r1.<u.aly.ct: short c>;

        $s2 = r0.<u.aly.cs: short n>;

        $i3 = (int) $s1;

        $i4 = (int) $s2;

        $i3 = $i3 - $i4;

        $i3 = $i3 << 4;

        $i4 = (int) $b0;

        $i3 = $i3 | $i4;

        specialinvoke r0.<u.aly.cs: void d(int)>($i3);

     label2:
        $s1 = $r1.<u.aly.ct: short c>;

        r0.<u.aly.cs: short n> = $s1;

        return;

     label3:
        specialinvoke r0.<u.aly.cs: void b(byte)>($b0);

        $s1 = $r1.<u.aly.ct: short c>;

        virtualinvoke r0.<u.aly.cs: void a(short)>($s1);

        goto label2;
    }

    private void a(byte[], int, int) throws u.aly.cf
    {
        byte[] $r1;
        u.aly.dm $r2;
        int $i0, $i1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<u.aly.cs: void b(int)>($i1);

        $r2 = r0.<u.aly.cs: u.aly.dm g>;

        virtualinvoke $r2.<u.aly.dm: void b(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    private void b(byte) throws u.aly.cf
    {
        byte[] $r1;
        byte $b0;
        u.aly.dm $r2;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $b0 := @parameter0: byte;

        $r1 = r0.<u.aly.cs: byte[] r>;

        $r1[0] = $b0;

        $r2 = r0.<u.aly.cs: u.aly.dm g>;

        $r1 = r0.<u.aly.cs: byte[] r>;

        virtualinvoke $r2.<u.aly.dm: void b(byte[])>($r1);

        return;
    }

    private void b(int) throws u.aly.cf
    {
        byte[] $r1;
        byte $b3;
        u.aly.dm $r2;
        int $i0, $i1, $i2, $i4;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 := @parameter0: int;

        $i1 = 0;

     label1:
        $i2 = $i0 & -128;

        if $i2 != 0 goto label2;

        $r1 = r0.<u.aly.cs: byte[] a>;

        $i2 = $i1 + 1;

        $b3 = (byte) $i0;

        $r1[$i1] = $b3;

        $r2 = r0.<u.aly.cs: u.aly.dm g>;

        $r1 = r0.<u.aly.cs: byte[] a>;

        virtualinvoke $r2.<u.aly.dm: void b(byte[],int,int)>($r1, 0, $i2);

        return;

     label2:
        $r1 = r0.<u.aly.cs: byte[] a>;

        $i4 = $i0 & 127;

        $i4 = $i4 | 128;

        $b3 = (byte) $i4;

        $r1[$i1] = $b3;

        $i0 = $i0 >>> 7;

        $i1 = $i1 + 1;

        goto label1;
    }

    private void b(long) throws u.aly.cf
    {
        byte[] $r1;
        long $l0, $l2;
        byte $b3;
        u.aly.dm $r2;
        int $i1, $i4, $i5;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $l0 := @parameter0: long;

        $i1 = 0;

     label1:
        $l2 = -128L & $l0;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label2;

        $r1 = r0.<u.aly.cs: byte[] b>;

        $i4 = $i1 + 1;

        $i5 = (int) $l0;

        $b3 = (byte) $i5;

        $r1[$i1] = $b3;

        $r2 = r0.<u.aly.cs: u.aly.dm g>;

        $r1 = r0.<u.aly.cs: byte[] b>;

        virtualinvoke $r2.<u.aly.dm: void b(byte[],int,int)>($r1, 0, $i4);

        return;

     label2:
        $r1 = r0.<u.aly.cs: byte[] b>;

        $l2 = 127L & $l0;

        $l2 = $l2 | 128L;

        $i5 = (int) $l2;

        $b3 = (byte) $i5;

        $r1[$i1] = $b3;

        $l0 = $l0 >>> 7;

        $i1 = $i1 + 1;

        goto label1;
    }

    private int c(int)
    {
        int $i0, $i1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 := @parameter0: int;

        $i1 = $i0 << 1;

        $i0 = $i0 >> 31;

        $i0 = $i1 ^ $i0;

        return $i0;
    }

    private long c(long)
    {
        long $l0, $l1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $l0 := @parameter0: long;

        $l1 = $l0 << 1;

        $l0 = $l0 >> 63;

        $l0 = $l1 ^ $l0;

        return $l0;
    }

    private boolean c(byte)
    {
        int $i1;
        byte $b0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $b0 := @parameter0: byte;

        $b0 = $b0 & 15;

        if $b0 == 1 goto label2;

        $i1 = (int) $b0;

        if $i1 != 2 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    private byte d(byte) throws u.aly.cz
    {
        u.aly.cz $r4;
        byte $b0, $b1;
        int $i2;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $b0 := @parameter0: byte;

        $b1 = $b0 & 15;

        $i2 = (int) $b1;

        lookupswitch($i2)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            default: goto label01;
        };

     label01:
        $r4 = new u.aly.cz;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("don\'t know what type: ");

        $b0 = $b0 & 15;

        $i2 = (int) $b0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<u.aly.cz: void <init>(java.lang.String)>($r2);

        throw $r4;

     label02:
        return 0;

     label03:
        return 2;

     label04:
        return 3;

     label05:
        return 6;

     label06:
        return 8;

     label07:
        return 10;

     label08:
        return 4;

     label09:
        return 11;

     label10:
        return 15;

     label11:
        return 14;

     label12:
        return 13;

     label13:
        return 12;
    }

    private long d(long)
    {
        long $l0, $l1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $l0 := @parameter0: long;

        $l1 = $l0 >>> 1;

        $l0 = 1L & $l0;

        $l0 = neg $l0;

        $l0 = $l1 ^ $l0;

        return $l0;
    }

    private void d(int) throws u.aly.cf
    {
        int $i0;
        byte $b1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 := @parameter0: int;

        $b1 = (byte) $i0;

        specialinvoke r0.<u.aly.cs: void b(byte)>($b1);

        return;
    }

    private byte e(byte)
    {
        byte[] $r1;
        byte $b0;
        int $i1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $b0 := @parameter0: byte;

        $r1 = <u.aly.cs: byte[] f>;

        $i1 = (int) $b0;

        $b0 = $r1[$i1];

        return $b0;
    }

    private byte[] e(int) throws u.aly.cf
    {
        byte[] $r2;
        u.aly.dm $r1;
        int $i0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        $r2 = newarray (byte)[0];

        return $r2;

     label1:
        $r2 = newarray (byte)[$i0];

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        virtualinvoke $r1.<u.aly.dm: int d(byte[],int,int)>($r2, 0, $i0);

        return $r2;
    }

    private void f(int) throws u.aly.cz
    {
        u.aly.cz $r4;
        long $l1, $l3;
        byte $b2;
        int $i0, $i4;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r4 = new u.aly.cz;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative length: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<u.aly.cz: void <init>(java.lang.String)>($r2);

        throw $r4;

     label1:
        $l1 = r0.<u.aly.cs: long q>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label2;

        $l1 = (long) $i0;

        $l3 = r0.<u.aly.cs: long q>;

        $b2 = $l1 cmp $l3;

        $i4 = (int) $b2;

        if $i4 <= 0 goto label2;

        $r4 = new u.aly.cz;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Length exceeded max allowed: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<u.aly.cz: void <init>(java.lang.String)>($r2);

        throw $r4;

     label2:
        return;
    }

    private int g(int)
    {
        int $i0, $i1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 := @parameter0: int;

        $i1 = $i0 >>> 1;

        $i0 = $i0 & 1;

        $i0 = neg $i0;

        $i0 = $i1 ^ $i0;

        return $i0;
    }

    public java.nio.ByteBuffer A() throws u.aly.cf
    {
        byte[] $r1;
        u.aly.dm $r2;
        int $i0;
        u.aly.cs r0;
        java.nio.ByteBuffer $r3;

        r0 := @this: u.aly.cs;

        $i0 = specialinvoke r0.<u.aly.cs: int E()>();

        specialinvoke r0.<u.aly.cs: void f(int)>($i0);

        if $i0 != 0 goto label1;

        $r1 = newarray (byte)[0];

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r1);

        return $r3;

     label1:
        $r1 = newarray (byte)[$i0];

        $r2 = r0.<u.aly.cs: u.aly.dm g>;

        virtualinvoke $r2.<u.aly.dm: int d(byte[],int,int)>($r1, 0, $i0);

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r1);

        return $r3;
    }

    public void B()
    {
        u.aly.bx $r1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 = r0.<u.aly.cs: u.aly.bx m>;

        virtualinvoke $r1.<u.aly.bx: void c()>();

        r0.<u.aly.cs: short n> = 0;

        return;
    }

    public void a() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        return;
    }

    public void a(byte) throws u.aly.cf
    {
        byte $b0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $b0 := @parameter0: byte;

        specialinvoke r0.<u.aly.cs: void b(byte)>($b0);

        return;
    }

    protected void a(byte, int) throws u.aly.cf
    {
        short $s2;
        byte $b0;
        int $i1, $i3;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        if $i1 > 14 goto label1;

        $i1 = $i1 << 4;

        $b0 = specialinvoke r0.<u.aly.cs: byte e(byte)>($b0);

        $i3 = (int) $b0;

        $i1 = $i1 | $i3;

        specialinvoke r0.<u.aly.cs: void d(int)>($i1);

        return;

     label1:
        $b0 = specialinvoke r0.<u.aly.cs: byte e(byte)>($b0);

        $s2 = (short) $b0;

        $s2 = $s2 | 240;

        $i3 = (int) $s2;

        specialinvoke r0.<u.aly.cs: void d(int)>($i3);

        specialinvoke r0.<u.aly.cs: void b(int)>($i1);

        return;
    }

    public void a(double) throws u.aly.cf
    {
        byte[] $r1;
        u.aly.dm $r2;
        long $l0;
        u.aly.cs r0;
        double $d0;

        r0 := @this: u.aly.cs;

        $d0 := @parameter0: double;

        $r1 = newarray (byte)[8];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 0;

        $r1[7] = 0;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        specialinvoke r0.<u.aly.cs: void a(long,byte[],int)>($l0, $r1, 0);

        $r2 = r0.<u.aly.cs: u.aly.dm g>;

        virtualinvoke $r2.<u.aly.dm: void b(byte[])>($r1);

        return;
    }

    public void a(int) throws u.aly.cf
    {
        int $i0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 := @parameter0: int;

        $i0 = specialinvoke r0.<u.aly.cs: int c(int)>($i0);

        specialinvoke r0.<u.aly.cs: void b(int)>($i0);

        return;
    }

    public void a(long) throws u.aly.cf
    {
        long $l0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $l0 := @parameter0: long;

        $l0 = specialinvoke r0.<u.aly.cs: long c(long)>($l0);

        specialinvoke r0.<u.aly.cs: void b(long)>($l0);

        return;
    }

    public void a(java.lang.String) throws u.aly.cf
    {
        java.lang.Throwable $r3;
        byte[] $r2;
        int $i0;
        java.lang.String $r1;
        u.aly.cf $r4;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        $i0 = lengthof $r2;

     label3:
        specialinvoke r0.<u.aly.cs: void a(byte[],int,int)>($r2, 0, $i0);

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        $r4 = new u.aly.cf;

        specialinvoke $r4.<u.aly.cf: void <init>(java.lang.String)>("UTF-8 not supported!");

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    public void a(java.nio.ByteBuffer) throws u.aly.cf
    {
        byte[] $r2;
        int $i0, $i1, $i2;
        u.aly.cs r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int limit()>();

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $i0 = $i0 - $i1;

        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $i2 = virtualinvoke $r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i1 = $i1 + $i2;

        specialinvoke r0.<u.aly.cs: void a(byte[],int,int)>($r2, $i1, $i0);

        return;
    }

    public void a(u.aly.ct) throws u.aly.cf
    {
        byte $b0;
        int $i1;
        u.aly.ct $r1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: u.aly.ct;

        $b0 = $r1.<u.aly.ct: byte b>;

        $i1 = (int) $b0;

        if $i1 != 2 goto label1;

        r0.<u.aly.cs: u.aly.ct o> = $r1;

        return;

     label1:
        specialinvoke r0.<u.aly.cs: void a(u.aly.ct,byte)>($r1, -1);

        return;
    }

    public void a(u.aly.cu) throws u.aly.cf
    {
        byte $b0;
        int $i1;
        u.aly.cu $r1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: u.aly.cu;

        $b0 = $r1.<u.aly.cu: byte a>;

        $i1 = $r1.<u.aly.cu: int b>;

        virtualinvoke r0.<u.aly.cs: void a(byte,int)>($b0, $i1);

        return;
    }

    public void a(u.aly.cv) throws u.aly.cf
    {
        byte $b1;
        int $i0, $i2;
        u.aly.cv $r1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: u.aly.cv;

        $i0 = $r1.<u.aly.cv: int c>;

        if $i0 != 0 goto label1;

        specialinvoke r0.<u.aly.cs: void d(int)>(0);

        return;

     label1:
        $i0 = $r1.<u.aly.cv: int c>;

        specialinvoke r0.<u.aly.cs: void b(int)>($i0);

        $b1 = $r1.<u.aly.cv: byte a>;

        $b1 = specialinvoke r0.<u.aly.cs: byte e(byte)>($b1);

        $i0 = (int) $b1;

        $i0 = $i0 << 4;

        $b1 = $r1.<u.aly.cv: byte b>;

        $b1 = specialinvoke r0.<u.aly.cs: byte e(byte)>($b1);

        $i2 = (int) $b1;

        $i0 = $i0 | $i2;

        specialinvoke r0.<u.aly.cs: void d(int)>($i0);

        return;
    }

    public void a(u.aly.cw) throws u.aly.cf
    {
        byte $b0;
        int $i1, $i2;
        u.aly.cw $r1;
        java.lang.String $r2;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: u.aly.cw;

        specialinvoke r0.<u.aly.cs: void b(byte)>(-126);

        $b0 = $r1.<u.aly.cw: byte b>;

        $i1 = (int) $b0;

        $i1 = $i1 << 5;

        $i2 = -32;

        $i1 = $i1 & $i2;

        $i1 = $i1 | 1;

        specialinvoke r0.<u.aly.cs: void d(int)>($i1);

        $i1 = $r1.<u.aly.cw: int c>;

        specialinvoke r0.<u.aly.cs: void b(int)>($i1);

        $r2 = $r1.<u.aly.cw: java.lang.String a>;

        virtualinvoke r0.<u.aly.cs: void a(java.lang.String)>($r2);

        return;
    }

    public void a(u.aly.dc) throws u.aly.cf
    {
        byte $b0;
        int $i1;
        u.aly.cs r0;
        u.aly.dc $r1;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: u.aly.dc;

        $b0 = $r1.<u.aly.dc: byte a>;

        $i1 = $r1.<u.aly.dc: int b>;

        virtualinvoke r0.<u.aly.cs: void a(byte,int)>($b0, $i1);

        return;
    }

    public void a(u.aly.dd) throws u.aly.cf
    {
        short $s0;
        u.aly.bx $r2;
        u.aly.cs r0;
        u.aly.dd $r1;

        r0 := @this: u.aly.cs;

        $r1 := @parameter0: u.aly.dd;

        $r2 = r0.<u.aly.cs: u.aly.bx m>;

        $s0 = r0.<u.aly.cs: short n>;

        virtualinvoke $r2.<u.aly.bx: void a(short)>($s0);

        r0.<u.aly.cs: short n> = 0;

        return;
    }

    public void a(short) throws u.aly.cf
    {
        int $i1;
        short $s0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $s0 := @parameter0: short;

        $i1 = (int) $s0;

        $i1 = specialinvoke r0.<u.aly.cs: int c(int)>($i1);

        specialinvoke r0.<u.aly.cs: void b(int)>($i1);

        return;
    }

    public void a(boolean) throws u.aly.cf
    {
        byte $b0;
        u.aly.ct $r1;
        u.aly.cs r0;
        boolean $z0;

        r0 := @this: u.aly.cs;

        $z0 := @parameter0: boolean;

        $b0 = 1;

        $r1 = r0.<u.aly.cs: u.aly.ct o>;

        if $r1 == null goto label3;

        $r1 = r0.<u.aly.cs: u.aly.ct o>;

        if $z0 == 0 goto label2;

     label1:
        specialinvoke r0.<u.aly.cs: void a(u.aly.ct,byte)>($r1, $b0);

        r0.<u.aly.cs: u.aly.ct o> = null;

        return;

     label2:
        $b0 = 2;

        goto label1;

     label3:
        if $z0 == 0 goto label5;

     label4:
        specialinvoke r0.<u.aly.cs: void b(byte)>($b0);

        return;

     label5:
        $b0 = 2;

        goto label4;
    }

    public void b() throws u.aly.cf
    {
        u.aly.bx $r1;
        short $s0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 = r0.<u.aly.cs: u.aly.bx m>;

        $s0 = virtualinvoke $r1.<u.aly.bx: short a()>();

        r0.<u.aly.cs: short n> = $s0;

        return;
    }

    public void c() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        return;
    }

    public void d() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        specialinvoke r0.<u.aly.cs: void b(byte)>(0);

        return;
    }

    public void e() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        return;
    }

    public void f() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        return;
    }

    public void g() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        return;
    }

    public u.aly.cw h() throws u.aly.cf
    {
        u.aly.cz $r4;
        byte $b0, $b1;
        int $i2, $i3;
        java.lang.StringBuilder $r1, $r3;
        u.aly.cw $r5;
        java.lang.String $r2;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $b0 = virtualinvoke r0.<u.aly.cs: byte u()>();

        $i2 = (int) $b0;

        $i3 = -126;

        if $i2 == $i3 goto label1;

        $r4 = new u.aly.cz;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected protocol id ");

        $i2 = -126;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got ");

        $i2 = (int) $b0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<u.aly.cz: void <init>(java.lang.String)>($r2);

        throw $r4;

     label1:
        $b0 = virtualinvoke r0.<u.aly.cs: byte u()>();

        $b1 = $b0 & 31;

        if $b1 == 1 goto label2;

        $r4 = new u.aly.cz;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected version 1 but got ");

        $i2 = (int) $b1;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<u.aly.cz: void <init>(java.lang.String)>($r2);

        throw $r4;

     label2:
        $i2 = (int) $b0;

        $i2 = $i2 >> 5;

        $i2 = $i2 & 3;

        $b0 = (byte) $i2;

        $i2 = specialinvoke r0.<u.aly.cs: int E()>();

        $r2 = virtualinvoke r0.<u.aly.cs: java.lang.String z()>();

        $r5 = new u.aly.cw;

        specialinvoke $r5.<u.aly.cw: void <init>(java.lang.String,byte,int)>($r2, $b0, $i2);

        return $r5;
    }

    public void i() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        return;
    }

    public u.aly.dd j() throws u.aly.cf
    {
        short $s0;
        u.aly.bx $r1;
        u.aly.cs r0;
        u.aly.dd r2;

        r0 := @this: u.aly.cs;

        $r1 = r0.<u.aly.cs: u.aly.bx m>;

        $s0 = r0.<u.aly.cs: short n>;

        virtualinvoke $r1.<u.aly.bx: void a(short)>($s0);

        r0.<u.aly.cs: short n> = 0;

        r2 = <u.aly.cs: u.aly.dd d>;

        return r2;
    }

    public void k() throws u.aly.cf
    {
        u.aly.bx $r1;
        short $s0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 = r0.<u.aly.cs: u.aly.bx m>;

        $s0 = virtualinvoke $r1.<u.aly.bx: short a()>();

        r0.<u.aly.cs: short n> = $s0;

        return;
    }

    public u.aly.ct l() throws u.aly.cf
    {
        short $s1, $s4;
        byte $b0, $b3;
        int $i2, $i5;
        java.lang.Boolean $r2;
        u.aly.ct $r1, $r3;
        u.aly.cs r0;
        boolean $z0;

        r0 := @this: u.aly.cs;

        $b0 = virtualinvoke r0.<u.aly.cs: byte u()>();

        if $b0 != 0 goto label1;

        $r1 = <u.aly.cs: u.aly.ct e>;

        return $r1;

     label1:
        $s1 = (short) $b0;

        $s1 = $s1 & 240;

        $i2 = (int) $s1;

        $i2 = $i2 >> 4;

        $s1 = (short) $i2;

        if $s1 != 0 goto label5;

        $s1 = virtualinvoke r0.<u.aly.cs: short v()>();

     label2:
        $r3 = new u.aly.ct;

        $r1 = $r3;

        $b3 = $b0 & 15;

        $b3 = specialinvoke r0.<u.aly.cs: byte d(byte)>($b3);

        specialinvoke $r3.<u.aly.ct: void <init>(java.lang.String,byte,short)>("", $b3, $s1);

        $z0 = specialinvoke r0.<u.aly.cs: boolean c(byte)>($b0);

        if $z0 == 0 goto label4;

        $b0 = $b0 & 15;

        if $b0 != 1 goto label6;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label3:
        r0.<u.aly.cs: java.lang.Boolean p> = $r2;

     label4:
        $s1 = $r1.<u.aly.ct: short c>;

        r0.<u.aly.cs: short n> = $s1;

        return $r1;

     label5:
        $s4 = r0.<u.aly.cs: short n>;

        $i2 = (int) $s1;

        $i5 = (int) $s4;

        $i2 = $i2 + $i5;

        $s1 = (short) $i2;

        goto label2;

     label6:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label3;
    }

    public void m() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        return;
    }

    public u.aly.cv n() throws u.aly.cf
    {
        byte $b1, $b3;
        int $i0, $i2;
        u.aly.cv $r1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 = specialinvoke r0.<u.aly.cs: int E()>();

        if $i0 != 0 goto label2;

        $b1 = 0;

     label1:
        $r1 = new u.aly.cv;

        $i2 = $b1 >> 4;

        $b3 = (byte) $i2;

        $b3 = specialinvoke r0.<u.aly.cs: byte d(byte)>($b3);

        $b1 = $b1 & 15;

        $b1 = specialinvoke r0.<u.aly.cs: byte d(byte)>($b1);

        specialinvoke $r1.<u.aly.cv: void <init>(byte,byte,int)>($b3, $b1, $i0);

        return $r1;

     label2:
        $b1 = virtualinvoke r0.<u.aly.cs: byte u()>();

        goto label1;
    }

    public void o() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        return;
    }

    public u.aly.cu p() throws u.aly.cf
    {
        byte $b0;
        int $i1;
        u.aly.cu $r1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $b0 = virtualinvoke r0.<u.aly.cs: byte u()>();

        $i1 = (int) $b0;

        $i1 = $i1 >> 4;

        $i1 = $i1 & 15;

        if $i1 != 15 goto label1;

        $i1 = specialinvoke r0.<u.aly.cs: int E()>();

     label1:
        $b0 = specialinvoke r0.<u.aly.cs: byte d(byte)>($b0);

        $r1 = new u.aly.cu;

        specialinvoke $r1.<u.aly.cu: void <init>(byte,int)>($b0, $i1);

        return $r1;
    }

    public void q() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        return;
    }

    public u.aly.dc r() throws u.aly.cf
    {
        u.aly.cu $r2;
        u.aly.cs r0;
        u.aly.dc $r1;

        r0 := @this: u.aly.cs;

        $r1 = new u.aly.dc;

        $r2 = virtualinvoke r0.<u.aly.cs: u.aly.cu p()>();

        specialinvoke $r1.<u.aly.dc: void <init>(u.aly.cu)>($r2);

        return $r1;
    }

    public void s() throws u.aly.cf
    {
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        return;
    }

    public boolean t() throws u.aly.cf
    {
        byte $b0;
        java.lang.Boolean $r1;
        u.aly.cs r0;
        boolean $z0;

        r0 := @this: u.aly.cs;

        $r1 = r0.<u.aly.cs: java.lang.Boolean p>;

        if $r1 == null goto label1;

        $r1 = r0.<u.aly.cs: java.lang.Boolean p>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        r0.<u.aly.cs: java.lang.Boolean p> = null;

        return $z0;

     label1:
        $b0 = virtualinvoke r0.<u.aly.cs: byte u()>();

        if $b0 == 1 goto label2;

        return 0;

     label2:
        return 1;
    }

    public byte u() throws u.aly.cf
    {
        byte[] $r2;
        byte $b1;
        u.aly.dm $r1;
        int $i0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $i0 = virtualinvoke $r1.<u.aly.dm: int h()>();

        if $i0 <= 0 goto label1;

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $r2 = virtualinvoke $r1.<u.aly.dm: byte[] f()>();

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $i0 = virtualinvoke $r1.<u.aly.dm: int g()>();

        $b1 = $r2[$i0];

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        virtualinvoke $r1.<u.aly.dm: void a(int)>(1);

        return $b1;

     label1:
        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        $r2 = r0.<u.aly.cs: byte[] c>;

        virtualinvoke $r1.<u.aly.dm: int d(byte[],int,int)>($r2, 0, 1);

        $r2 = r0.<u.aly.cs: byte[] c>;

        $b1 = $r2[0];

        return $b1;
    }

    public short v() throws u.aly.cf
    {
        int $i0;
        short $s1;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 = specialinvoke r0.<u.aly.cs: int E()>();

        $i0 = specialinvoke r0.<u.aly.cs: int g(int)>($i0);

        $s1 = (short) $i0;

        return $s1;
    }

    public int w() throws u.aly.cf
    {
        int $i0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 = specialinvoke r0.<u.aly.cs: int E()>();

        $i0 = specialinvoke r0.<u.aly.cs: int g(int)>($i0);

        return $i0;
    }

    public long x() throws u.aly.cf
    {
        long $l0;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $l0 = specialinvoke r0.<u.aly.cs: long F()>();

        $l0 = specialinvoke r0.<u.aly.cs: long d(long)>($l0);

        return $l0;
    }

    public double y() throws u.aly.cf
    {
        byte[] $r2;
        u.aly.dm $r1;
        long $l0;
        u.aly.cs r0;
        double $d0;

        r0 := @this: u.aly.cs;

        $r2 = newarray (byte)[8];

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

        virtualinvoke $r1.<u.aly.dm: int d(byte[],int,int)>($r2, 0, 8);

        $l0 = specialinvoke r0.<u.aly.cs: long a(byte[])>($r2);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public java.lang.String z() throws u.aly.cf
    {
        java.lang.Throwable $r4;
        byte[] $r3;
        u.aly.cf $r5;
        u.aly.dm $r1;
        int $i0, $i1;
        java.lang.String $r2;
        u.aly.cs r0;

        r0 := @this: u.aly.cs;

        $i0 = specialinvoke r0.<u.aly.cs: int E()>();

        specialinvoke r0.<u.aly.cs: void f(int)>($i0);

        if $i0 != 0 goto label01;

        return "";

     label01:
        $r1 = r0.<u.aly.cs: u.aly.dm g>;

     label02:
        $i1 = virtualinvoke $r1.<u.aly.dm: int h()>();

     label03:
        if $i1 < $i0 goto label11;

        $r2 = new java.lang.String;

        $r1 = r0.<u.aly.cs: u.aly.dm g>;

     label04:
        $r3 = virtualinvoke $r1.<u.aly.dm: byte[] f()>();

     label05:
        $r1 = r0.<u.aly.cs: u.aly.dm g>;

     label06:
        $i1 = virtualinvoke $r1.<u.aly.dm: int g()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r3, $i1, $i0, "UTF-8");

     label07:
        $r1 = r0.<u.aly.cs: u.aly.dm g>;

     label08:
        virtualinvoke $r1.<u.aly.dm: void a(int)>($i0);

     label09:
        return $r2;

     label10:
        $r4 := @caughtexception;

        $r5 = new u.aly.cf;

        specialinvoke $r5.<u.aly.cf: void <init>(java.lang.String)>("UTF-8 not supported!");

        throw $r5;

     label11:
        $r2 = new java.lang.String;

     label12:
        $r3 = specialinvoke r0.<u.aly.cs: byte[] e(int)>($i0);

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "UTF-8");

     label13:
        return $r2;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label10;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label10;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label10;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label10;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label10;
    }
}
