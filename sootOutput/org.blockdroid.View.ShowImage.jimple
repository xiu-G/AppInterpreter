public class org.blockdroid.View.ShowImage extends android.app.Activity
{
    public static final java.lang.String LOADBITMAP;
    private static final int MENU_ID_PAN;
    private static final int MENU_ID_RESET;
    private static final int MENU_ID_ZOOM;
    private static final java.lang.String TAG;
    org.blockdroid.Others.Base64EncodeDecode base64;
    private android.graphics.Bitmap bm;
    private org.blockdroid.SingleTouch.BasicZoomControl mZoomControl;
    private org.blockdroid.SingleTouch.BasicZoomListener mZoomListener;
    private org.blockdroid.SingleTouch.ImageZoomView mZoomView;
    private android.widget.LinearLayout rl;
    private java.lang.String strImgAddress;
    private org.blockdroid.MultiTouch.TouchImageView tiv;
    public android.content.Intent ipcIntent;
    public android.content.Intent ipcResultIntent;

    public void <init>()
    {
        org.blockdroid.View.ShowImage r0;
        org.blockdroid.Others.Base64EncodeDecode $r1;

        r0 := @this: org.blockdroid.View.ShowImage;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        $r1 = new org.blockdroid.Others.Base64EncodeDecode;

        specialinvoke $r1.<org.blockdroid.Others.Base64EncodeDecode: void <init>()>();

        r0.<org.blockdroid.View.ShowImage: org.blockdroid.Others.Base64EncodeDecode base64> = $r1;

        return;
    }

    static java.lang.String access$0(org.blockdroid.View.ShowImage)
    {
        org.blockdroid.View.ShowImage $r0;
        java.lang.String r1;

        $r0 := @parameter0: org.blockdroid.View.ShowImage;

        r1 = $r0.<org.blockdroid.View.ShowImage: java.lang.String strImgAddress>;

        return r1;
    }

    static void access$1(org.blockdroid.View.ShowImage, android.graphics.Bitmap)
    {
        org.blockdroid.View.ShowImage $r0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: org.blockdroid.View.ShowImage;

        $r1 := @parameter1: android.graphics.Bitmap;

        $r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm> = $r1;

        return;
    }

    static android.graphics.Bitmap access$2(org.blockdroid.View.ShowImage)
    {
        org.blockdroid.View.ShowImage $r0;
        android.graphics.Bitmap r1;

        $r0 := @parameter0: org.blockdroid.View.ShowImage;

        r1 = $r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm>;

        return r1;
    }

    static void access$3(org.blockdroid.View.ShowImage)
    {
        org.blockdroid.View.ShowImage $r0;

        $r0 := @parameter0: org.blockdroid.View.ShowImage;

        specialinvoke $r0.<org.blockdroid.View.ShowImage: void errorMessage()>();

        return;
    }

    static void access$4(org.blockdroid.View.ShowImage)
    {
        org.blockdroid.View.ShowImage $r0;

        $r0 := @parameter0: org.blockdroid.View.ShowImage;

        specialinvoke $r0.<org.blockdroid.View.ShowImage: void multiScroll()>();

        return;
    }

    static void access$5(org.blockdroid.View.ShowImage)
    {
        org.blockdroid.View.ShowImage $r0;

        $r0 := @parameter0: org.blockdroid.View.ShowImage;

        specialinvoke $r0.<org.blockdroid.View.ShowImage: void singleScroll()>();

        return;
    }

    static void access$6(org.blockdroid.View.ShowImage)
    {
        org.blockdroid.View.ShowImage $r0;

        $r0 := @parameter0: org.blockdroid.View.ShowImage;

        specialinvoke $r0.<org.blockdroid.View.ShowImage: void prefInfoMessage()>();

        return;
    }

    static void access$7(org.blockdroid.View.ShowImage)
    {
        org.blockdroid.View.ShowImage $r0;

        $r0 := @parameter0: org.blockdroid.View.ShowImage;

        specialinvoke $r0.<org.blockdroid.View.ShowImage: void editPrefs()>();

        return;
    }

    private android.widget.LinearLayout buildGUIAdmob()
    {
        android.widget.LinearLayout r2, $r5;
        org.blockdroid.View.ShowImage r0;
        com.mobclix.android.sdk.MobclixMMABannerXLAdView r1, $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r8;
        android.widget.LinearLayout$LayoutParams $r6;
        java.lang.String $r4;

        r0 := @this: org.blockdroid.View.ShowImage;

        $r5 = new android.widget.LinearLayout;

        r2 = $r5;

        specialinvoke $r5.<android.widget.LinearLayout: void <init>(android.content.Context)>(r0);

        $r6 = new android.widget.LinearLayout$LayoutParams;

        $i0 = -1;

        $i1 = -2;

        specialinvoke $r6.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        virtualinvoke r2.<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r6);

        $r7 = new com.mobclix.android.sdk.MobclixMMABannerXLAdView;

        r1 = $r7;

        specialinvoke $r7.<com.mobclix.android.sdk.MobclixMMABannerXLAdView: void <init>(android.content.Context)>(r0);

        virtualinvoke r1.<com.mobclix.android.sdk.MobclixMMABannerXLAdView: void setVisibility(int)>(0);

        virtualinvoke r1.<com.mobclix.android.sdk.MobclixMMABannerXLAdView: void getAd()>();

        virtualinvoke r2.<android.widget.LinearLayout: void addView(android.view.View)>(r1);

        $r8 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<com.mobclix.android.sdk.MobclixMMABannerXLAdView: int getHeight()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ShowImage.java", $r4);

        return r2;
    }

    private void editPrefs()
    {
        org.blockdroid.View.ShowImage r0;
        android.content.SharedPreferences$Editor $r2;
        android.content.SharedPreferences $r1;

        r0 := @this: org.blockdroid.View.ShowImage;

        $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("ZOOMMESSAGE", 0);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    private void enableMessage()
    {
        org.blockdroid.View.ShowImage r0;
        android.content.SharedPreferences$Editor $r2;
        android.content.SharedPreferences $r1;

        r0 := @this: org.blockdroid.View.ShowImage;

        $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("ZOOMMESSAGE", 1);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    private void errorMessage()
    {
        org.blockdroid.View.ShowImage r0;
        android.widget.Toast $r1;

        r0 := @this: org.blockdroid.View.ShowImage;

        $r1 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, "N\u00e5nting gick snett, f\u00f6rs\u00f6k igen.", 1);

        virtualinvoke $r1.<android.widget.Toast: void show()>();

        virtualinvoke r0.<org.blockdroid.View.ShowImage: void finish()>();

        return;
    }

    private void multiScroll()
    {
        android.widget.LinearLayout $r2, $r9;
        android.view.WindowManager $r4;
        byte $b1;
        int $i0, $i2;
        android.view.Display $r5;
        android.widget.LinearLayout$LayoutParams $r10;
        java.lang.String $r7;
        android.graphics.Matrix r1, $r13;
        org.blockdroid.MultiTouch.TouchImageView $r3, $r11;
        org.blockdroid.View.ShowImage r0;
        android.graphics.Bitmap $r6, $r8;
        float f0, f1, $f2;
        java.lang.StringBuilder $r12;

        r0 := @this: org.blockdroid.View.ShowImage;

        $r9 = new android.widget.LinearLayout;

        specialinvoke $r9.<android.widget.LinearLayout: void <init>(android.content.Context)>(r0);

        r0.<org.blockdroid.View.ShowImage: android.widget.LinearLayout rl> = $r9;

        $r2 = r0.<org.blockdroid.View.ShowImage: android.widget.LinearLayout rl>;

        $r10 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r10.<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>(-1, -1, 17.0F);

        virtualinvoke $r2.<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r10);

        $r11 = new org.blockdroid.MultiTouch.TouchImageView;

        specialinvoke $r11.<org.blockdroid.MultiTouch.TouchImageView: void <init>(android.content.Context)>(r0);

        r0.<org.blockdroid.View.ShowImage: org.blockdroid.MultiTouch.TouchImageView tiv> = $r11;

        $r4 = virtualinvoke r0.<org.blockdroid.View.ShowImage: android.view.WindowManager getWindowManager()>();

        $r5 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r5.<android.view.Display: int getWidth()>();

        f1 = (float) $i0;

        $i0 = virtualinvoke $r5.<android.view.Display: int getHeight()>();

        f0 = (float) $i0;

        $r6 = r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm>;

        $i0 = virtualinvoke $r6.<android.graphics.Bitmap: int getWidth()>();

        $f2 = (float) $i0;

        f1 = f1 / $f2;

        $r12 = new java.lang.StringBuilder;

        $r6 = r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm>;

        $i0 = virtualinvoke $r6.<android.graphics.Bitmap: int getWidth()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BILDBREDD", $r7);

        $r6 = r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm>;

        $i0 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i0;

        $f2 = $f2 * f1;

        $b1 = $f2 cmpl f0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label1;

        $r6 = r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm>;

        $i0 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();

        f1 = (float) $i0;

        f1 = f0 / f1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SIZETOBIG", "TOBIGG");

     label1:
        $r13 = new android.graphics.Matrix;

        r1 = $r13;

        specialinvoke $r13.<android.graphics.Matrix: void <init>()>();

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>(f1, f1);

        $r6 = r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm>;

        $r8 = r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm>;

        $i0 = virtualinvoke $r8.<android.graphics.Bitmap: int getWidth()>();

        $r8 = r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm>;

        $i2 = virtualinvoke $r8.<android.graphics.Bitmap: int getHeight()>();

        $r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r6, 0, 0, $i0, $i2, r1, 1);

        $r3 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.MultiTouch.TouchImageView tiv>;

        virtualinvoke $r3.<org.blockdroid.MultiTouch.TouchImageView: void setImageBitmap(android.graphics.Bitmap)>($r6);

        $r3 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.MultiTouch.TouchImageView tiv>;

        $r10 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r10.<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>(-1, -1, 17.0F);

        virtualinvoke $r3.<org.blockdroid.MultiTouch.TouchImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r10);

        $r2 = r0.<org.blockdroid.View.ShowImage: android.widget.LinearLayout rl>;

        $r3 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.MultiTouch.TouchImageView tiv>;

        virtualinvoke $r2.<android.widget.LinearLayout: void addView(android.view.View)>($r3);

        $r2 = r0.<org.blockdroid.View.ShowImage: android.widget.LinearLayout rl>;

        virtualinvoke r0.<org.blockdroid.View.ShowImage: void setContentView(android.view.View)>($r2);

        return;
    }

    private void prefInfoMessage()
    {
        org.blockdroid.View.ShowImage r0;
        java.lang.Throwable $r3;
        org.blockdroid.View.ShowImage$1 $r2;
        android.app.AlertDialog$Builder r1;

        r0 := @this: org.blockdroid.View.ShowImage;

        r1 = new android.app.AlertDialog$Builder;

     label1:
        specialinvoke r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        virtualinvoke r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("Du kan v\u00e4lja mellan \"multitouch-zoom\" eller \"singletouch-zoom\". F\u00f6r er med mobiler utan multitouch rekommederar jag d\u00e4rf\u00f6r att ni \u00e4ndrar detta under inst\u00e4llningar. Man kan komma \u00e5t inst\u00e4llningar via f\u00f6rsta sidan eller s\u00f6ksidan.");

     label2:
        $r2 = new org.blockdroid.View.ShowImage$1;

     label3:
        specialinvoke $r2.<org.blockdroid.View.ShowImage$1: void <init>(org.blockdroid.View.ShowImage)>(r0);

        virtualinvoke r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Ok", $r2);

        virtualinvoke r1.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        return;

        catch android.view.WindowManager$BadTokenException from label1 to label2 with label5;
        catch android.view.WindowManager$BadTokenException from label3 to label4 with label5;
    }

    private void resetZoomState()
    {
        org.blockdroid.View.ShowImage r0;
        org.blockdroid.SingleTouch.BasicZoomControl $r1;
        org.blockdroid.SingleTouch.ZoomState $r2;

        r0 := @this: org.blockdroid.View.ShowImage;

        $r1 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomControl mZoomControl>;

        $r2 = virtualinvoke $r1.<org.blockdroid.SingleTouch.BasicZoomControl: org.blockdroid.SingleTouch.ZoomState getZoomState()>();

        virtualinvoke $r2.<org.blockdroid.SingleTouch.ZoomState: void setPanX(float)>(0.5F);

        $r1 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomControl mZoomControl>;

        $r2 = virtualinvoke $r1.<org.blockdroid.SingleTouch.BasicZoomControl: org.blockdroid.SingleTouch.ZoomState getZoomState()>();

        virtualinvoke $r2.<org.blockdroid.SingleTouch.ZoomState: void setPanY(float)>(0.5F);

        $r1 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomControl mZoomControl>;

        $r2 = virtualinvoke $r1.<org.blockdroid.SingleTouch.BasicZoomControl: org.blockdroid.SingleTouch.ZoomState getZoomState()>();

        virtualinvoke $r2.<org.blockdroid.SingleTouch.ZoomState: void setZoom(float)>(1.0F);

        $r1 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomControl mZoomControl>;

        $r2 = virtualinvoke $r1.<org.blockdroid.SingleTouch.BasicZoomControl: org.blockdroid.SingleTouch.ZoomState getZoomState()>();

        virtualinvoke $r2.<org.blockdroid.SingleTouch.ZoomState: void notifyObservers()>();

        return;
    }

    private void singleScroll()
    {
        org.blockdroid.SingleTouch.BasicZoomControl $r1;
        org.blockdroid.SingleTouch.BasicZoomListener $r2;
        org.blockdroid.SingleTouch.ZoomState $r5;
        org.blockdroid.SingleTouch.AspectQuotient $r7;
        org.blockdroid.View.ShowImage r0;
        android.graphics.Bitmap $r6;
        android.view.View $r3;
        org.blockdroid.SingleTouch.ImageZoomView $r4;

        r0 := @this: org.blockdroid.View.ShowImage;

        virtualinvoke r0.<org.blockdroid.View.ShowImage: void setContentView(int)>(2130903064);

        $r1 = new org.blockdroid.SingleTouch.BasicZoomControl;

        specialinvoke $r1.<org.blockdroid.SingleTouch.BasicZoomControl: void <init>()>();

        r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomControl mZoomControl> = $r1;

        $r2 = new org.blockdroid.SingleTouch.BasicZoomListener;

        specialinvoke $r2.<org.blockdroid.SingleTouch.BasicZoomListener: void <init>()>();

        r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomListener mZoomListener> = $r2;

        $r2 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomListener mZoomListener>;

        $r1 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomControl mZoomControl>;

        virtualinvoke $r2.<org.blockdroid.SingleTouch.BasicZoomListener: void setZoomControl(org.blockdroid.SingleTouch.BasicZoomControl)>($r1);

        $r3 = virtualinvoke r0.<org.blockdroid.View.ShowImage: android.view.View findViewById(int)>(2131361952);

        $r4 = (org.blockdroid.SingleTouch.ImageZoomView) $r3;

        r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.ImageZoomView mZoomView> = $r4;

        $r4 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.ImageZoomView mZoomView>;

        $r1 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomControl mZoomControl>;

        $r5 = virtualinvoke $r1.<org.blockdroid.SingleTouch.BasicZoomControl: org.blockdroid.SingleTouch.ZoomState getZoomState()>();

        virtualinvoke $r4.<org.blockdroid.SingleTouch.ImageZoomView: void setZoomState(org.blockdroid.SingleTouch.ZoomState)>($r5);

        $r4 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.ImageZoomView mZoomView>;

        $r6 = r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm>;

        virtualinvoke $r4.<org.blockdroid.SingleTouch.ImageZoomView: void setImage(android.graphics.Bitmap)>($r6);

        $r4 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.ImageZoomView mZoomView>;

        $r2 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomListener mZoomListener>;

        virtualinvoke $r4.<org.blockdroid.SingleTouch.ImageZoomView: void setOnTouchListener(android.view.View$OnTouchListener)>($r2);

        $r1 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomControl mZoomControl>;

        $r4 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.ImageZoomView mZoomView>;

        $r7 = virtualinvoke $r4.<org.blockdroid.SingleTouch.ImageZoomView: org.blockdroid.SingleTouch.AspectQuotient getAspectQuotient()>();

        virtualinvoke $r1.<org.blockdroid.SingleTouch.BasicZoomControl: void setAspectQuotient(org.blockdroid.SingleTouch.AspectQuotient)>($r7);

        specialinvoke r0.<org.blockdroid.View.ShowImage: void resetZoomState()>();

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        org.blockdroid.View.ShowImage r0;
        android.os.Bundle $r1;
        android.content.Context[] $r5;
        org.blockdroid.View.ShowImage$LoadImg $r4;
        android.content.Intent $r2;
        java.lang.String $r3;

        r0 := @this: org.blockdroid.View.ShowImage;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1);

        $r2 = virtualinvoke r0.<org.blockdroid.View.ShowImage: android.content.Intent getIntent()>();

        $r3 = virtualinvoke $r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("LOADBITMAP");

        r0.<org.blockdroid.View.ShowImage: java.lang.String strImgAddress> = $r3;

        $r3 = r0.<org.blockdroid.View.ShowImage: java.lang.String strImgAddress>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ShowImage.java", $r3);

        $r4 = new org.blockdroid.View.ShowImage$LoadImg;

        specialinvoke $r4.<org.blockdroid.View.ShowImage$LoadImg: void <init>(org.blockdroid.View.ShowImage)>(r0);

        $r5 = newarray (android.content.Context)[0];

        virtualinvoke $r4.<org.blockdroid.View.ShowImage$LoadImg: android.os.AsyncTask execute(java.lang.Object[])>($r5);

        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        org.blockdroid.View.ShowImage r0;
        android.view.Menu $r1;
        boolean $z0;

        r0 := @this: org.blockdroid.View.ShowImage;

        $r1 := @parameter0: android.view.Menu;

        $z0 = staticinvoke <org.blockdroid.View.Prefs: boolean getMultiZoom(android.content.Context)>(r0);

        if $z0 != 0 goto label1;

        interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 0, 0, "Zooma");

        interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 1, 1, "Flytta");

        interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 2, 2, "Reset");

     label1:
        $z0 = specialinvoke r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>($r1);

        return $z0;
    }

    protected void onDestroy()
    {
        org.blockdroid.View.ShowImage r0;
        org.blockdroid.SingleTouch.BasicZoomControl $r3;
        android.graphics.Bitmap $r1;
        org.blockdroid.SingleTouch.ZoomState $r4;
        org.blockdroid.SingleTouch.ImageZoomView $r2;
        java.lang.NullPointerException $r5;
        boolean $z0;

        r0 := @this: org.blockdroid.View.ShowImage;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

     label1:
        $r1 = r0.<org.blockdroid.View.ShowImage: android.graphics.Bitmap bm>;

        virtualinvoke $r1.<android.graphics.Bitmap: void recycle()>();

        $z0 = staticinvoke <org.blockdroid.View.Prefs: boolean getMultiZoom(android.content.Context)>(r0);

     label2:
        if $z0 != 0 goto label6;

     label3:
        $r2 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.ImageZoomView mZoomView>;

        virtualinvoke $r2.<org.blockdroid.SingleTouch.ImageZoomView: void setOnTouchListener(android.view.View$OnTouchListener)>(null);

        $r3 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomControl mZoomControl>;

        $r4 = virtualinvoke $r3.<org.blockdroid.SingleTouch.BasicZoomControl: org.blockdroid.SingleTouch.ZoomState getZoomState()>();

        virtualinvoke $r4.<org.blockdroid.SingleTouch.ZoomState: void deleteObservers()>();

     label4:
        return;

     label5:
        $r5 := @caughtexception;

     label6:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label5;
        catch java.lang.NullPointerException from label3 to label4 with label5;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        org.blockdroid.View.ShowImage r0;
        org.blockdroid.SingleTouch.BasicZoomListener $r2;
        org.blockdroid.SingleTouch.BasicZoomListener$ControlType $r3;
        int $i0;
        android.view.MenuItem $r1;
        boolean $z0;

        r0 := @this: org.blockdroid.View.ShowImage;

        $r1 := @parameter0: android.view.MenuItem;

        $z0 = staticinvoke <org.blockdroid.View.Prefs: boolean getMultiZoom(android.content.Context)>(r0);

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>($r1);

        return $z0;

     label2:
        $r2 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomListener mZoomListener>;

        $r3 = <org.blockdroid.SingleTouch.BasicZoomListener$ControlType: org.blockdroid.SingleTouch.BasicZoomListener$ControlType ZOOM>;

        virtualinvoke $r2.<org.blockdroid.SingleTouch.BasicZoomListener: void setControlType(org.blockdroid.SingleTouch.BasicZoomListener$ControlType)>($r3);

        goto label1;

     label3:
        $r2 = r0.<org.blockdroid.View.ShowImage: org.blockdroid.SingleTouch.BasicZoomListener mZoomListener>;

        $r3 = <org.blockdroid.SingleTouch.BasicZoomListener$ControlType: org.blockdroid.SingleTouch.BasicZoomListener$ControlType PAN>;

        virtualinvoke $r2.<org.blockdroid.SingleTouch.BasicZoomListener: void setControlType(org.blockdroid.SingleTouch.BasicZoomListener$ControlType)>($r3);

        goto label1;

     label4:
        specialinvoke r0.<org.blockdroid.View.ShowImage: void resetZoomState()>();

        goto label1;
    }

    public void onResume()
    {
        org.blockdroid.View.ShowImage r0;
        int $i0;
        java.lang.String $r1;
        java.lang.Integer $r2;

        r0 := @this: org.blockdroid.View.ShowImage;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ShowImage.java", "onResume");

        $r1 = staticinvoke <org.blockdroid.View.Prefs: java.lang.String getOrientation(android.content.Context)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        return;

     label2:
        virtualinvoke r0.<org.blockdroid.View.ShowImage: void setRequestedOrientation(int)>(-1);

        return;

     label3:
        virtualinvoke r0.<org.blockdroid.View.ShowImage: void setRequestedOrientation(int)>(1);

        return;

     label4:
        virtualinvoke r0.<org.blockdroid.View.ShowImage: void setRequestedOrientation(int)>(0);

        return;
    }

    public android.content.Intent getIntent()
    {
        org.blockdroid.View.ShowImage this;
        android.content.Intent $r0;

        this := @this: org.blockdroid.View.ShowImage;

        $r0 = this.<org.blockdroid.View.ShowImage: android.content.Intent ipcIntent>;

        return $r0;
    }

    public void setIntent(android.content.Intent)
    {
        org.blockdroid.View.ShowImage this;
        android.content.Intent parameter0;

        this := @this: org.blockdroid.View.ShowImage;

        parameter0 := @parameter0: android.content.Intent;

        this.<org.blockdroid.View.ShowImage: android.content.Intent ipcIntent> = parameter0;

        return;
    }

    public void setResult(int, android.content.Intent)
    {
        org.blockdroid.View.ShowImage this;
        int parameter0;
        android.content.Intent parameter1;

        this := @this: org.blockdroid.View.ShowImage;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: android.content.Intent;

        this.<org.blockdroid.View.ShowImage: android.content.Intent ipcResultIntent> = parameter1;

        return;
    }

    public static void <clinit>()
    {
        <org.blockdroid.View.ShowImage: java.lang.String TAG> = "ShowImage.java";

        <org.blockdroid.View.ShowImage: int MENU_ID_ZOOM> = 0;

        <org.blockdroid.View.ShowImage: int MENU_ID_RESET> = 2;

        <org.blockdroid.View.ShowImage: int MENU_ID_PAN> = 1;

        <org.blockdroid.View.ShowImage: java.lang.String LOADBITMAP> = "LOADBITMAP";

        return;
    }
}
