final class c.a.b.a.f.q extends java.lang.Object implements c.a.b.a.f.w
{
    private final java.util.concurrent.Executor a;
    private final java.lang.Object b;
    private c.a.b.a.f.c c;

    public void <init>(java.util.concurrent.Executor, c.a.b.a.f.c)
    {
        java.util.concurrent.Executor $r1;
        java.lang.Object $r3;
        c.a.b.a.f.c $r2;
        c.a.b.a.f.q r0;

        r0 := @this: c.a.b.a.f.q;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: c.a.b.a.f.c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<c.a.b.a.f.q: java.lang.Object b> = $r3;

        r0.<c.a.b.a.f.q: java.util.concurrent.Executor a> = $r1;

        r0.<c.a.b.a.f.q: c.a.b.a.f.c c> = $r2;

        return;
    }

    static java.lang.Object a(c.a.b.a.f.q)
    {
        java.lang.Object r1;
        c.a.b.a.f.q $r0;

        $r0 := @parameter0: c.a.b.a.f.q;

        r1 = $r0.<c.a.b.a.f.q: java.lang.Object b>;

        return r1;
    }

    static c.a.b.a.f.c c(c.a.b.a.f.q)
    {
        c.a.b.a.f.c r1;
        c.a.b.a.f.q $r0;

        $r0 := @parameter0: c.a.b.a.f.q;

        r1 = $r0.<c.a.b.a.f.q: c.a.b.a.f.c c>;

        return r1;
    }

    public final void b(c.a.b.a.f.g)
    {
        java.lang.Throwable $r6;
        java.util.concurrent.Executor $r4;
        c.a.b.a.f.q r0;
        c.a.b.a.f.r $r5;
        c.a.b.a.f.g $r1;
        java.lang.Object $r2;
        c.a.b.a.f.c $r3;
        boolean $z0;

        r0 := @this: c.a.b.a.f.q;

        $r1 := @parameter0: c.a.b.a.f.g;

        $z0 = virtualinvoke $r1.<c.a.b.a.f.g: boolean k()>();

        if $z0 != 0 goto label8;

        $z0 = virtualinvoke $r1.<c.a.b.a.f.g: boolean i()>();

        if $z0 != 0 goto label8;

        $r2 = r0.<c.a.b.a.f.q: java.lang.Object b>;

        entermonitor $r2;

     label1:
        $r3 = r0.<c.a.b.a.f.q: c.a.b.a.f.c c>;

        if $r3 != null goto label3;

        exitmonitor $r2;

     label2:
        return;

     label3:
        exitmonitor $r2;

     label4:
        $r4 = r0.<c.a.b.a.f.q: java.util.concurrent.Executor a>;

        $r5 = new c.a.b.a.f.r;

        specialinvoke $r5.<c.a.b.a.f.r: void <init>(c.a.b.a.f.q,c.a.b.a.f.g)>(r0, $r1);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor $r2;

     label7:
        throw $r6;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
