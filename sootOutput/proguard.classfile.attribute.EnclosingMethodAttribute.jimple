public class proguard.classfile.attribute.EnclosingMethodAttribute extends proguard.classfile.attribute.Attribute
{
    public proguard.classfile.Clazz referencedClass;
    public proguard.classfile.Method referencedMethod;
    public int u2classIndex;
    public int u2nameAndTypeIndex;

    public void <init>()
    {
        proguard.classfile.attribute.EnclosingMethodAttribute r0;

        r0 := @this: proguard.classfile.attribute.EnclosingMethodAttribute;

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>()>();

        return;
    }

    public void <init>(int, int, int)
    {
        proguard.classfile.attribute.EnclosingMethodAttribute r0;
        int $i0, $i1, $i2;

        r0 := @this: proguard.classfile.attribute.EnclosingMethodAttribute;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>(int)>($i0);

        r0.<proguard.classfile.attribute.EnclosingMethodAttribute: int u2classIndex> = $i1;

        r0.<proguard.classfile.attribute.EnclosingMethodAttribute: int u2nameAndTypeIndex> = $i2;

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        proguard.classfile.attribute.EnclosingMethodAttribute r0;
        proguard.classfile.attribute.visitor.AttributeVisitor $r2;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.classfile.attribute.EnclosingMethodAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.visitor.AttributeVisitor;

        interfaceinvoke $r2.<proguard.classfile.attribute.visitor.AttributeVisitor: void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute)>($r1, r0);

        return;
    }

    public java.lang.String getClassName(proguard.classfile.Clazz)
    {
        proguard.classfile.attribute.EnclosingMethodAttribute r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: proguard.classfile.attribute.EnclosingMethodAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $i0 = r0.<proguard.classfile.attribute.EnclosingMethodAttribute: int u2classIndex>;

        $r2 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getClassName(int)>($i0);

        return $r2;
    }

    public java.lang.String getName(proguard.classfile.Clazz)
    {
        proguard.classfile.attribute.EnclosingMethodAttribute r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: proguard.classfile.attribute.EnclosingMethodAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $i0 = r0.<proguard.classfile.attribute.EnclosingMethodAttribute: int u2nameAndTypeIndex>;

        $r2 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getName(int)>($i0);

        return $r2;
    }

    public java.lang.String getType(proguard.classfile.Clazz)
    {
        proguard.classfile.attribute.EnclosingMethodAttribute r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: proguard.classfile.attribute.EnclosingMethodAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $i0 = r0.<proguard.classfile.attribute.EnclosingMethodAttribute: int u2nameAndTypeIndex>;

        $r2 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getType(int)>($i0);

        return $r2;
    }

    public void referencedClassAccept(proguard.classfile.visitor.ClassVisitor)
    {
        proguard.classfile.attribute.EnclosingMethodAttribute r0;
        proguard.classfile.Clazz $r2;
        proguard.classfile.visitor.ClassVisitor $r1;

        r0 := @this: proguard.classfile.attribute.EnclosingMethodAttribute;

        $r1 := @parameter0: proguard.classfile.visitor.ClassVisitor;

        $r2 = r0.<proguard.classfile.attribute.EnclosingMethodAttribute: proguard.classfile.Clazz referencedClass>;

        if $r2 == null goto label1;

        $r2 = r0.<proguard.classfile.attribute.EnclosingMethodAttribute: proguard.classfile.Clazz referencedClass>;

        interfaceinvoke $r2.<proguard.classfile.Clazz: void accept(proguard.classfile.visitor.ClassVisitor)>($r1);

     label1:
        return;
    }

    public void referencedMethodAccept(proguard.classfile.visitor.MemberVisitor)
    {
        proguard.classfile.attribute.EnclosingMethodAttribute r0;
        proguard.classfile.Clazz $r2;
        proguard.classfile.visitor.MemberVisitor $r1;
        proguard.classfile.Method $r3;

        r0 := @this: proguard.classfile.attribute.EnclosingMethodAttribute;

        $r1 := @parameter0: proguard.classfile.visitor.MemberVisitor;

        $r3 = r0.<proguard.classfile.attribute.EnclosingMethodAttribute: proguard.classfile.Method referencedMethod>;

        if $r3 == null goto label1;

        $r3 = r0.<proguard.classfile.attribute.EnclosingMethodAttribute: proguard.classfile.Method referencedMethod>;

        $r2 = r0.<proguard.classfile.attribute.EnclosingMethodAttribute: proguard.classfile.Clazz referencedClass>;

        interfaceinvoke $r3.<proguard.classfile.Method: void accept(proguard.classfile.Clazz,proguard.classfile.visitor.MemberVisitor)>($r2, $r1);

     label1:
        return;
    }
}
