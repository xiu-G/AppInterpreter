public class proguard.optimize.info.MethodOptimizationInfo extends java.lang.Object
{
    private boolean accessesPackageCode;
    private boolean accessesPrivateCode;
    private boolean accessesProtectedCode;
    private boolean branchesBackward;
    private boolean canBeMadePrivate;
    private boolean catchesExceptions;
    private boolean hasNoSideEffects;
    private boolean hasSideEffects;
    private int invocationCount;
    private boolean invokesSuperMethods;
    private int parameterSize;
    private proguard.evaluation.value.Value[] parameters;
    private proguard.evaluation.value.Value returnValue;
    private long usedParameters;

    public void <init>(proguard.classfile.Clazz, proguard.classfile.Method)
    {
        proguard.evaluation.value.Value[] $r4;
        proguard.classfile.Clazz $r1;
        int $i0, $i1, $i2;
        proguard.classfile.Method $r2;
        java.lang.String $r3;
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasNoSideEffects> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasSideEffects> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean canBeMadePrivate> = 1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean catchesExceptions> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean branchesBackward> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean invokesSuperMethods> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPrivateCode> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPackageCode> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesProtectedCode> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: int invocationCount> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: int parameterSize> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: long usedParameters> = 0L;

        $r3 = interfaceinvoke $r2.<proguard.classfile.Method: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalMethodParameterCount(java.lang.String)>($r3);

        $i1 = $i0;

        $i2 = interfaceinvoke $r2.<proguard.classfile.Method: int getAccessFlags()>();

        $i2 = $i2 & 8;

        if $i2 != 0 goto label1;

        $i1 = $i0 + 1;

     label1:
        if $i1 <= 0 goto label2;

        $r4 = newarray (proguard.evaluation.value.Value)[$i1];

        r0.<proguard.optimize.info.MethodOptimizationInfo: proguard.evaluation.value.Value[] parameters> = $r4;

     label2:
        return;
    }

    public static proguard.optimize.info.MethodOptimizationInfo getMethodOptimizationInfo(proguard.classfile.Method)
    {
        proguard.classfile.Method $r0;
        java.lang.Object $r2;
        proguard.optimize.info.MethodOptimizationInfo $r3;
        proguard.classfile.Member $r1;
        boolean $z0;

        $r0 := @parameter0: proguard.classfile.Method;

        $r1 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.Member lastMember(proguard.classfile.Member)>($r0);

        $r2 = interfaceinvoke $r1.<proguard.classfile.Member: java.lang.Object getVisitorInfo()>();

        $z0 = $r2 instanceof proguard.optimize.info.MethodOptimizationInfo;

        if $z0 == 0 goto label1;

        $r3 = (proguard.optimize.info.MethodOptimizationInfo) $r2;

        return $r3;

     label1:
        return null;
    }

    public static void setMethodOptimizationInfo(proguard.classfile.Clazz, proguard.classfile.Method)
    {
        proguard.classfile.Clazz $r0;
        proguard.classfile.Method $r1;
        proguard.optimize.info.MethodOptimizationInfo $r2;
        proguard.classfile.Member $r3;

        $r0 := @parameter0: proguard.classfile.Clazz;

        $r1 := @parameter1: proguard.classfile.Method;

        $r3 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.Member lastMember(proguard.classfile.Member)>($r1);

        $r2 = new proguard.optimize.info.MethodOptimizationInfo;

        specialinvoke $r2.<proguard.optimize.info.MethodOptimizationInfo: void <init>(proguard.classfile.Clazz,proguard.classfile.Method)>($r0, $r1);

        interfaceinvoke $r3.<proguard.classfile.Member: void setVisitorInfo(java.lang.Object)>($r2);

        return;
    }

    public boolean accessesPackageCode()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPackageCode>;

        return z0;
    }

    public boolean accessesPrivateCode()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPrivateCode>;

        return z0;
    }

    public boolean accessesProtectedCode()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesProtectedCode>;

        return z0;
    }

    public boolean branchesBackward()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean branchesBackward>;

        return z0;
    }

    public boolean canBeMadePrivate()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean canBeMadePrivate>;

        return z0;
    }

    public boolean catchesExceptions()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean catchesExceptions>;

        return z0;
    }

    public void generalizeParameter(int, proguard.evaluation.value.Value)
    {
        int $i0;
        proguard.optimize.info.MethodOptimizationInfo r0;
        proguard.evaluation.value.Value[] $r2, $r3;
        proguard.evaluation.value.Value $r1, $r4;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        $i0 := @parameter0: int;

        $r1 := @parameter1: proguard.evaluation.value.Value;

        $r2 = r0.<proguard.optimize.info.MethodOptimizationInfo: proguard.evaluation.value.Value[] parameters>;

        $r3 = r0.<proguard.optimize.info.MethodOptimizationInfo: proguard.evaluation.value.Value[] parameters>;

        $r4 = $r3[$i0];

        if $r4 == null goto label1;

        $r3 = r0.<proguard.optimize.info.MethodOptimizationInfo: proguard.evaluation.value.Value[] parameters>;

        $r4 = $r3[$i0];

        $r1 = virtualinvoke $r4.<proguard.evaluation.value.Value: proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value)>($r1);

     label1:
        $r2[$i0] = $r1;

        return;
    }

    public void generalizeReturnValue(proguard.evaluation.value.Value)
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        proguard.evaluation.value.Value $r1, $r2;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        $r1 := @parameter0: proguard.evaluation.value.Value;

        $r2 = r0.<proguard.optimize.info.MethodOptimizationInfo: proguard.evaluation.value.Value returnValue>;

        if $r2 == null goto label1;

        $r2 = r0.<proguard.optimize.info.MethodOptimizationInfo: proguard.evaluation.value.Value returnValue>;

        $r1 = virtualinvoke $r2.<proguard.evaluation.value.Value: proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value)>($r1);

     label1:
        r0.<proguard.optimize.info.MethodOptimizationInfo: proguard.evaluation.value.Value returnValue> = $r1;

        return;
    }

    public int getInvocationCount()
    {
        int i0;
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        i0 = r0.<proguard.optimize.info.MethodOptimizationInfo: int invocationCount>;

        return i0;
    }

    public proguard.evaluation.value.Value getParameter(int)
    {
        int $i0;
        proguard.optimize.info.MethodOptimizationInfo r0;
        proguard.evaluation.value.Value[] $r1;
        proguard.evaluation.value.Value $r2;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        $i0 := @parameter0: int;

        $r1 = r0.<proguard.optimize.info.MethodOptimizationInfo: proguard.evaluation.value.Value[] parameters>;

        if $r1 == null goto label1;

        $r1 = r0.<proguard.optimize.info.MethodOptimizationInfo: proguard.evaluation.value.Value[] parameters>;

        $r2 = $r1[$i0];

        return $r2;

     label1:
        return null;
    }

    public int getParameterSize()
    {
        int i0;
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        i0 = r0.<proguard.optimize.info.MethodOptimizationInfo: int parameterSize>;

        return i0;
    }

    public proguard.evaluation.value.Value getReturnValue()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        proguard.evaluation.value.Value r1;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        r1 = r0.<proguard.optimize.info.MethodOptimizationInfo: proguard.evaluation.value.Value returnValue>;

        return r1;
    }

    public long getUsedParameters()
    {
        long l0;
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        l0 = r0.<proguard.optimize.info.MethodOptimizationInfo: long usedParameters>;

        return l0;
    }

    public boolean hasNoSideEffects()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasNoSideEffects>;

        return z0;
    }

    public boolean hasSideEffects()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasSideEffects>;

        return z0;
    }

    public void incrementInvocationCount()
    {
        int $i0;
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        $i0 = r0.<proguard.optimize.info.MethodOptimizationInfo: int invocationCount>;

        $i0 = $i0 + 1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: int invocationCount> = $i0;

        return;
    }

    public boolean invokesSuperMethods()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean invokesSuperMethods>;

        return z0;
    }

    public boolean isParameterUsed(int)
    {
        byte $b3;
        int $i0;
        long $l1, $l2;
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        $i0 := @parameter0: int;

        if $i0 >= 64 goto label1;

        $l1 = r0.<proguard.optimize.info.MethodOptimizationInfo: long usedParameters>;

        $i0 = 1 << $i0;

        $l2 = (long) $i0;

        $l1 = $l1 & $l2;

        $b3 = $l1 cmp 0L;

        if $b3 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void merge(proguard.optimize.info.MethodOptimizationInfo)
    {
        proguard.optimize.info.MethodOptimizationInfo r0, $r1;
        boolean $z0, $z1;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        $r1 := @parameter0: proguard.optimize.info.MethodOptimizationInfo;

        if $r1 == null goto label1;

        $z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasNoSideEffects>;

        $z1 = $r1.<proguard.optimize.info.MethodOptimizationInfo: boolean hasNoSideEffects>;

        $z0 = $z0 & $z1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasNoSideEffects> = $z0;

        $z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasSideEffects>;

        $z1 = $r1.<proguard.optimize.info.MethodOptimizationInfo: boolean hasSideEffects>;

        $z0 = $z0 | $z1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasSideEffects> = $z0;

        $z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean catchesExceptions>;

        $z1 = $r1.<proguard.optimize.info.MethodOptimizationInfo: boolean catchesExceptions>;

        $z0 = $z0 | $z1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean catchesExceptions> = $z0;

        $z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean branchesBackward>;

        $z1 = $r1.<proguard.optimize.info.MethodOptimizationInfo: boolean branchesBackward>;

        $z0 = $z0 | $z1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean branchesBackward> = $z0;

        $z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean invokesSuperMethods>;

        $z1 = $r1.<proguard.optimize.info.MethodOptimizationInfo: boolean invokesSuperMethods>;

        $z0 = $z0 | $z1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean invokesSuperMethods> = $z0;

        $z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPrivateCode>;

        $z1 = $r1.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPrivateCode>;

        $z0 = $z0 | $z1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPrivateCode> = $z0;

        $z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPackageCode>;

        $z1 = $r1.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPackageCode>;

        $z0 = $z0 | $z1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPackageCode> = $z0;

        $z0 = r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesProtectedCode>;

        $z1 = $r1.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesProtectedCode>;

        $z0 = $z0 | $z1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesProtectedCode> = $z0;

        return;

     label1:
        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasNoSideEffects> = 0;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasSideEffects> = 1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean catchesExceptions> = 1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean branchesBackward> = 1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean invokesSuperMethods> = 1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPrivateCode> = 1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPackageCode> = 1;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesProtectedCode> = 1;

        return;
    }

    public void setAccessesPackageCode()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPackageCode> = 1;

        return;
    }

    public void setAccessesPrivateCode()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesPrivateCode> = 1;

        return;
    }

    public void setAccessesProtectedCode()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean accessesProtectedCode> = 1;

        return;
    }

    public void setBranchesBackward()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean branchesBackward> = 1;

        return;
    }

    public void setCanNotBeMadePrivate()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean canBeMadePrivate> = 0;

        return;
    }

    public void setCatchesExceptions()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean catchesExceptions> = 1;

        return;
    }

    public void setInvokesSuperMethods()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean invokesSuperMethods> = 1;

        return;
    }

    public void setNoSideEffects()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasNoSideEffects> = 1;

        return;
    }

    public void setParameterSize(int)
    {
        int $i0;
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        $i0 := @parameter0: int;

        r0.<proguard.optimize.info.MethodOptimizationInfo: int parameterSize> = $i0;

        return;
    }

    public void setParameterUsed(int)
    {
        int $i0;
        long $l1, $l2;
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        $i0 := @parameter0: int;

        $l1 = r0.<proguard.optimize.info.MethodOptimizationInfo: long usedParameters>;

        $i0 = 1 << $i0;

        $l2 = (long) $i0;

        $l1 = $l1 | $l2;

        r0.<proguard.optimize.info.MethodOptimizationInfo: long usedParameters> = $l1;

        return;
    }

    public void setSideEffects()
    {
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        r0.<proguard.optimize.info.MethodOptimizationInfo: boolean hasSideEffects> = 1;

        return;
    }

    public void setUsedParameters(long)
    {
        long $l0;
        proguard.optimize.info.MethodOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.MethodOptimizationInfo;

        $l0 := @parameter0: long;

        r0.<proguard.optimize.info.MethodOptimizationInfo: long usedParameters> = $l0;

        return;
    }
}
