public class proguard.obfuscate.SimpleNameFactory extends java.lang.Object implements proguard.obfuscate.NameFactory
{
    private static final int CHARACTER_COUNT;
    private static final java.util.List cachedLowerCaseNames;
    private static final java.util.List cachedMixedCaseNames;
    private final boolean generateMixedCaseNames;
    private int index;

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        <proguard.obfuscate.SimpleNameFactory: int CHARACTER_COUNT> = 26;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <proguard.obfuscate.SimpleNameFactory: java.util.List cachedMixedCaseNames> = $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <proguard.obfuscate.SimpleNameFactory: java.util.List cachedLowerCaseNames> = $r0;

        return;
    }

    public void <init>()
    {
        proguard.obfuscate.SimpleNameFactory r0;

        r0 := @this: proguard.obfuscate.SimpleNameFactory;

        specialinvoke r0.<proguard.obfuscate.SimpleNameFactory: void <init>(boolean)>(1);

        return;
    }

    public void <init>(boolean)
    {
        proguard.obfuscate.SimpleNameFactory r0;
        boolean $z0;

        r0 := @this: proguard.obfuscate.SimpleNameFactory;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.obfuscate.SimpleNameFactory: int index> = 0;

        r0.<proguard.obfuscate.SimpleNameFactory: boolean generateMixedCaseNames> = $z0;

        return;
    }

    private char charAt(int)
    {
        proguard.obfuscate.SimpleNameFactory r0;
        byte $b1;
        int $i0;
        char $c2;

        r0 := @this: proguard.obfuscate.SimpleNameFactory;

        $i0 := @parameter0: int;

        if $i0 >= 26 goto label2;

        $b1 = 97;

     label1:
        $i0 = $b1 + $i0;

        $c2 = (char) $i0;

        return $c2;

     label2:
        $b1 = 39;

        goto label1;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r1;
        proguard.obfuscate.SimpleNameFactory $r2;
        java.lang.String[] $r0;

        $r0 := @parameter0: java.lang.String[];

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Some mixed-case names:");

        $r2 = new proguard.obfuscate.SimpleNameFactory;

        specialinvoke $r2.<proguard.obfuscate.SimpleNameFactory: void <init>(boolean)>(1);

        staticinvoke <proguard.obfuscate.SimpleNameFactory: void printNameSamples(proguard.obfuscate.SimpleNameFactory,int)>($r2, 60);

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Some lower-case names:");

        $r2 = new proguard.obfuscate.SimpleNameFactory;

        specialinvoke $r2.<proguard.obfuscate.SimpleNameFactory: void <init>(boolean)>(0);

        staticinvoke <proguard.obfuscate.SimpleNameFactory: void printNameSamples(proguard.obfuscate.SimpleNameFactory,int)>($r2, 60);

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Some more mixed-case names:");

        $r2 = new proguard.obfuscate.SimpleNameFactory;

        specialinvoke $r2.<proguard.obfuscate.SimpleNameFactory: void <init>(boolean)>(1);

        staticinvoke <proguard.obfuscate.SimpleNameFactory: void printNameSamples(proguard.obfuscate.SimpleNameFactory,int)>($r2, 80);

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Some more lower-case names:");

        $r2 = new proguard.obfuscate.SimpleNameFactory;

        specialinvoke $r2.<proguard.obfuscate.SimpleNameFactory: void <init>(boolean)>(0);

        staticinvoke <proguard.obfuscate.SimpleNameFactory: void printNameSamples(proguard.obfuscate.SimpleNameFactory,int)>($r2, 80);

        return;
    }

    private java.lang.String name(int)
    {
        proguard.obfuscate.SimpleNameFactory r0;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: proguard.obfuscate.SimpleNameFactory;

        $i0 := @parameter0: int;

        $z0 = r0.<proguard.obfuscate.SimpleNameFactory: boolean generateMixedCaseNames>;

        if $z0 == 0 goto label2;

        $r1 = <proguard.obfuscate.SimpleNameFactory: java.util.List cachedMixedCaseNames>;

     label1:
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        r3 = (java.lang.String) $r2;

        return r3;

     label2:
        $r1 = <proguard.obfuscate.SimpleNameFactory: java.util.List cachedLowerCaseNames>;

        goto label1;

     label3:
        r3 = specialinvoke r0.<proguard.obfuscate.SimpleNameFactory: java.lang.String newName(int)>($i0);

        interfaceinvoke $r1.<java.util.List: void add(int,java.lang.Object)>($i0, r3);

        return r3;
    }

    private java.lang.String newName(int)
    {
        proguard.obfuscate.SimpleNameFactory r0;
        char $c3;
        byte $b1;
        java.lang.StringBuffer $r3;
        int $i0, $i2;
        char[] $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: proguard.obfuscate.SimpleNameFactory;

        $i0 := @parameter0: int;

        $z0 = r0.<proguard.obfuscate.SimpleNameFactory: boolean generateMixedCaseNames>;

        if $z0 == 0 goto label2;

        $b1 = 52;

     label1:
        $i2 = $i0 / $b1;

        $i0 = $i0 % $b1;

        $c3 = specialinvoke r0.<proguard.obfuscate.SimpleNameFactory: char charAt(int)>($i0);

        if $i2 != 0 goto label3;

        $r1 = new java.lang.String;

        $r2 = newarray (char)[1];

        $r2[0] = $c3;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        return $r1;

     label2:
        $b1 = 26;

        goto label1;

     label3:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $i0 = $i2 - 1;

        $r1 = specialinvoke r0.<proguard.obfuscate.SimpleNameFactory: java.lang.String name(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    private static void printNameSamples(proguard.obfuscate.SimpleNameFactory, int)
    {
        java.io.PrintStream $r1;
        proguard.obfuscate.SimpleNameFactory $r0;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        java.lang.String $r3;

        $r0 := @parameter0: proguard.obfuscate.SimpleNameFactory;

        $i0 := @parameter1: int;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  [");

        $r3 = virtualinvoke $r0.<proguard.obfuscate.SimpleNameFactory: java.lang.String nextName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String nextName()
    {
        proguard.obfuscate.SimpleNameFactory r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: proguard.obfuscate.SimpleNameFactory;

        $i1 = r0.<proguard.obfuscate.SimpleNameFactory: int index>;

        $i0 = $i1 + 1;

        r0.<proguard.obfuscate.SimpleNameFactory: int index> = $i0;

        $r1 = specialinvoke r0.<proguard.obfuscate.SimpleNameFactory: java.lang.String name(int)>($i1);

        return $r1;
    }

    public void reset()
    {
        proguard.obfuscate.SimpleNameFactory r0;

        r0 := @this: proguard.obfuscate.SimpleNameFactory;

        r0.<proguard.obfuscate.SimpleNameFactory: int index> = 0;

        return;
    }
}
