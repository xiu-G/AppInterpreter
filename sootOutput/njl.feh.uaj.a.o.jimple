public class njl.feh.uaj.a.o extends java.lang.Object
{
    static final njl.feh.uaj.a.q a;
    static final njl.feh.uaj.a.q b;

    static void <clinit>()
    {
        njl.feh.uaj.a.p $r1;
        njl.feh.uaj.a.q $r0;

        $r0 = staticinvoke <njl.feh.uaj.a.r: njl.feh.uaj.a.q a(java.lang.String)>(null);

        <njl.feh.uaj.a.o: njl.feh.uaj.a.q a> = $r0;

        $r1 = new njl.feh.uaj.a.p;

        specialinvoke $r1.<njl.feh.uaj.a.p: void <init>()>();

        <njl.feh.uaj.a.o: njl.feh.uaj.a.q b> = $r1;

        return;
    }

    public static long a(byte[], int, int)
    {
        byte[] $r0;
        long $l2, $l7;
        java.lang.IllegalArgumentException $r4;
        byte $b4;
        int $i0, $i1, $i3, $i5, $i6;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $l2 = 0L;

        $i3 = $i0 + $i1;

        if $i1 >= 2 goto label01;

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Length ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be at least 2");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label01:
        $b4 = $r0[$i0];

        if $b4 != 0 goto label10;

        return 0L;

     label02:
        if $i5 >= $i3 goto label03;

        $b4 = $r0[$i5];

        $i6 = (int) $b4;

        if $i6 != 32 goto label03;

        $i5 = $i5 + 1;

        goto label02;

     label03:
        $i6 = $i3 + -1;

        $b4 = $r0[$i6];

        if $b4 == 0 goto label04;

        $i6 = (int) $b4;

        if $i6 != 32 goto label08;

     label04:
        $i3 = $i3 + -1;

        $i6 = $i3 + -1;

        $b4 = $r0[$i6];

        if $b4 == 0 goto label05;

        $i6 = (int) $b4;

        if $i6 != 32 goto label06;

     label05:
        $i3 = $i3 + -1;

     label06:
        if $i5 >= $i3 goto label11;

        $b4 = $r0[$i5];

        $i6 = (int) $b4;

        if $i6 < 48 goto label07;

        $i6 = (int) $b4;

        if $i6 <= 55 goto label09;

     label07:
        $r4 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <njl.feh.uaj.a.o: java.lang.String a(byte[],int,int,int,byte)>($r0, $i0, $i1, $i5, $b4);

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label08:
        $r4 = new java.lang.IllegalArgumentException;

        $i5 = $i3 + -1;

        $r2 = staticinvoke <njl.feh.uaj.a.o: java.lang.String a(byte[],int,int,int,byte)>($r0, $i0, $i1, $i5, $b4);

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label09:
        $l2 = $l2 << 3;

        $i6 = (int) $b4;

        $i6 = $i6 + -48;

        $l7 = (long) $i6;

        $i5 = $i5 + 1;

        $l2 = $l7 + $l2;

        goto label06;

     label10:
        $i5 = $i0;

        goto label02;

     label11:
        return $l2;
    }

    private static long a(byte[], int, int, boolean)
    {
        byte[] $r0;
        long $l2, $l7;
        java.lang.IllegalArgumentException $r4;
        short $s6;
        byte $b5;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;
        boolean $z0;
        double $d0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $i1 < 9 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("At offset ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" byte binary number");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds maximum signed long");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label1:
        $l2 = 0L;

        $i3 = 1;

     label2:
        if $i3 >= $i1 goto label3;

        $l2 = $l2 << 8;

        $i4 = $i0 + $i3;

        $b5 = $r0[$i4];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $l7 = (long) $s6;

        $i3 = $i3 + 1;

        $l2 = $l7 + $l2;

        goto label2;

     label3:
        if $z0 == 0 goto label4;

        $l2 = $l2 - 1L;

        $i0 = $i1 + -1;

        $i0 = $i0 * 8;

        $d0 = (double) $i0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);

        $l7 = (long) $d0;

        $l7 = $l7 - 1L;

        $l2 = $l2 ^ $l7;

        if $z0 == 0 goto label4;

        $l2 = neg $l2;

     label4:
        return $l2;
    }

    private static java.lang.String a(byte[], int, int, int, byte)
    {
        byte[] $r0;
        byte $b3;
        int $i0, $i1, $i2, $i4;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String $r1, $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $b3 := @parameter4: byte;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>($r0, $i0, $i1);

        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\u0000", "{NUL}");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte ");

        $i4 = (int) $b3;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at offset ");

        $i0 = $i2 - $i0;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in \'");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' len=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String a(byte[], int, int, njl.feh.uaj.a.q)
    {
        byte[] $r0, $r3;
        njl.feh.uaj.a.q $r1;
        byte $b3;
        int $i0, $i1, $i2;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: njl.feh.uaj.a.q;

     label1:
        if $i1 <= 0 goto label3;

        $i2 = $i0 + $i1;

        $i2 = $i2 + -1;

        $b3 = $r0[$i2];

        if $b3 == 0 goto label2;

        if $i1 <= 0 goto label3;

        $r3 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i0, $r3, 0, $i1);

        $r2 = interfaceinvoke $r1.<njl.feh.uaj.a.q: java.lang.String a(byte[])>($r3);

        return $r2;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        return "";
    }

    public static boolean a(byte[], int)
    {
        int $i0;
        byte[] $r0;
        byte $b1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $b1 = $r0[$i0];

        if $b1 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static long b(byte[], int, int)
    {
        byte[] $r0;
        long $l4;
        short $s3;
        byte $b2;
        int $i0, $i1, $i5;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $b2 = $r0[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 128;

        if $s3 != 0 goto label1;

        $l4 = staticinvoke <njl.feh.uaj.a.o: long a(byte[],int,int)>($r0, $i0, $i1);

        return $l4;

     label1:
        $b2 = $r0[$i0];

        $i5 = (int) $b2;

        if $i5 != -1 goto label3;

        $z0 = 1;

     label2:
        if $i1 >= 9 goto label4;

        $l4 = staticinvoke <njl.feh.uaj.a.o: long a(byte[],int,int,boolean)>($r0, $i0, $i1, $z0);

        return $l4;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        $l4 = staticinvoke <njl.feh.uaj.a.o: long b(byte[],int,int,boolean)>($r0, $i0, $i1, $z0);

        return $l4;
    }

    private static long b(byte[], int, int, boolean)
    {
        byte[] $r0, $r1;
        long $l4;
        java.lang.IllegalArgumentException $r7;
        int $i0, $i1, $i2, $i3;
        java.math.BigInteger $r2, $r3;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i3 = $i1 + -1;

        $r1 = newarray (byte)[$i3];

        $i3 = $i0 + 1;

        $i2 = $i1 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i3, $r1, 0, $i2);

        $r3 = new java.math.BigInteger;

        $r2 = $r3;

        specialinvoke $r3.<java.math.BigInteger: void <init>(byte[])>($r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-1L);

        $r2 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r3);

        $r2 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger not()>();

     label1:
        $i3 = virtualinvoke $r2.<java.math.BigInteger: int bitLength()>();

        if $i3 <= 63 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("At offset ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" byte binary number");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds maximum signed long");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r7;

     label2:
        if $z0 == 0 goto label3;

        $l4 = virtualinvoke $r2.<java.math.BigInteger: long longValue()>();

        $l4 = neg $l4;

        return $l4;

     label3:
        $l4 = virtualinvoke $r2.<java.math.BigInteger: long longValue()>();

        return $l4;
    }

    public static java.lang.String c(byte[], int, int)
    {
        java.lang.Throwable $r4, $r5;
        byte[] $r0;
        njl.feh.uaj.a.q $r2;
        java.lang.RuntimeException $r1;
        int $i0, $i1;
        java.lang.String $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = <njl.feh.uaj.a.o: njl.feh.uaj.a.q a>;

     label1:
        $r3 = staticinvoke <njl.feh.uaj.a.o: java.lang.String a(byte[],int,int,njl.feh.uaj.a.q)>($r0, $i0, $i1, $r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r2 = <njl.feh.uaj.a.o: njl.feh.uaj.a.q b>;

     label4:
        $r3 = staticinvoke <njl.feh.uaj.a.o: java.lang.String a(byte[],int,int,njl.feh.uaj.a.q)>($r0, $i0, $i1, $r2);

     label5:
        return $r3;

     label6:
        $r5 := @caughtexception;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }
}
