public class proguard.GPL extends java.lang.Object
{

    public void <init>()
    {
        proguard.GPL r0;

        r0 := @this: proguard.GPL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void check()
    {
        java.io.PrintStream $r2;
        byte[] $r6;
        java.io.ByteArrayOutputStream $r0;
        java.util.Set $r7;
        java.io.LineNumberReader $r3;
        java.io.InputStreamReader $r4;
        java.lang.Exception $r1;
        java.io.ByteArrayInputStream $r5;
        java.lang.StringBuffer $r9;
        int $i0;
        java.lang.String $r8;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.lang.Exception;

        specialinvoke $r1.<java.lang.Exception: void <init>()>();

        $r2 = new java.io.PrintStream;

        specialinvoke $r2.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r0);

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r2);

        $r3 = new java.io.LineNumberReader;

        $r4 = new java.io.InputStreamReader;

        $r5 = new java.io.ByteArrayInputStream;

        $r6 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r3.<java.io.LineNumberReader: void <init>(java.io.Reader)>($r4);

        $r7 = staticinvoke <proguard.GPL: java.util.Set unknownPackageNames(java.io.LineNumberReader)>($r3);

        $i0 = interfaceinvoke $r7.<java.util.Set: int size()>();

        if $i0 <= 0 goto label1;

        $r8 = staticinvoke <proguard.GPL: java.lang.String uniquePackageNames(java.util.Set)>($r7);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("ProGuard is released under the GNU General Public License. The authors of all");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("programs or plugins that link to it (");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...) therefore");

        $r8 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("must ensure that these programs carry the GNU General Public License as well.");

     label1:
        return;
    }

    private static boolean containsPrefix(java.util.Set, java.lang.String)
    {
        int $i0, $i1;
        java.util.Set $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.String;

        $i0 = 0;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(46, $i0);

        $i0 = $i1;

        if $i1 >= 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    private static boolean isKnown(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("java");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("sun.reflect");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("proguard");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("org.apache.tools.ant");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("org.apache.tools.maven");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("org.eclipse");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("org.netbeans");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("com.sun.kvem");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("net.certiv.proguarddt");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("eclipseme");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("jg.j2me");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("jg.common");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("jg.buildengine");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r6;
        java.util.Set $r4;
        java.lang.String[] $r0;
        java.io.LineNumberReader $r2;
        java.io.InputStreamReader $r3;
        int $i0;
        java.lang.String $r5;
        java.io.InputStream $r1;

        $r0 := @parameter0: java.lang.String[];

        $r2 = new java.io.LineNumberReader;

        $r3 = new java.io.InputStreamReader;

        $r1 = <java.lang.System: java.io.InputStream in>;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1);

        specialinvoke $r2.<java.io.LineNumberReader: void <init>(java.io.Reader)>($r3);

        $r4 = staticinvoke <proguard.GPL: java.util.Set unknownPackageNames(java.io.LineNumberReader)>($r2);

        $i0 = interfaceinvoke $r4.<java.util.Set: int size()>();

        if $i0 <= 0 goto label1;

        $r5 = staticinvoke <proguard.GPL: java.lang.String uniquePackageNames(java.util.Set)>($r4);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        return;
    }

    private static java.lang.String trimSuffix(java.lang.String, char)
    {
        int $i1;
        char $c0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $i1 = (int) $c0;

        $i1 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>($i1);

        if $i1 >= 0 goto label1;

        return "";

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r0;
    }

    private static java.lang.String uniquePackageNames(java.util.Set)
    {
        java.util.Iterator $r2;
        java.lang.StringBuffer $r1, $r5;
        java.util.Set $r0;
        java.lang.Object $r3;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Set;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $z0 = staticinvoke <proguard.GPL: boolean containsPrefix(java.util.Set,java.lang.String)>($r0, $r4);

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        goto label1;

     label2:
        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private static java.util.Set unknownPackageNames(java.io.LineNumberReader)
    {
        java.util.HashSet $r1;
        java.lang.Throwable $r3;
        int $i0;
        java.io.LineNumberReader $r0;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: java.io.LineNumberReader;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

     label01:
        $r2 = virtualinvoke $r0.<java.io.LineNumberReader: java.lang.String readLine()>();

     label02:
        if $r2 != null goto label03;

        return $r1;

     label03:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("at ");

     label04:
        if $z0 == 0 goto label01;

     label05:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(2);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r2 = staticinvoke <proguard.GPL: java.lang.String trimSuffix(java.lang.String,char)>($r2, 40);

        $r2 = staticinvoke <proguard.GPL: java.lang.String trimSuffix(java.lang.String,char)>($r2, 46);

        $r2 = staticinvoke <proguard.GPL: java.lang.String trimSuffix(java.lang.String,char)>($r2, 46);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

     label06:
        if $i0 <= 0 goto label01;

     label07:
        $z0 = staticinvoke <proguard.GPL: boolean isKnown(java.lang.String)>($r2);

     label08:
        if $z0 != 0 goto label01;

     label09:
        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

     label10:
        goto label01;

     label11:
        $r3 := @caughtexception;

        return $r1;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }
}
