public final class com.parse.PushService extends android.app.Service
{
    private static final java.lang.String TAG;
    static int consecutiveFailures;
    private static int defaultPushPort;
    private static int delaySeconds;
    private static java.lang.String pushServer;
    static java.util.concurrent.Semaphore sleepSemaphore;
    static java.net.Socket socket;
    private boolean destroyed;
    private java.util.Timer keepAliveTimer;
    private int pushPort;
    private com.parse.os.ParseAsyncTask task;

    static void <clinit>()
    {
        <com.parse.PushService: java.lang.String TAG> = "com.parse.PushService";

        <com.parse.PushService: java.lang.String pushServer> = "push.parse.com";

        <com.parse.PushService: int defaultPushPort> = 8253;

        return;
    }

    public void <init>()
    {
        com.parse.PushService r0;

        r0 := @this: com.parse.PushService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        r0.<com.parse.PushService: boolean destroyed> = 0;

        r0.<com.parse.PushService: java.util.Timer keepAliveTimer> = null;

        return;
    }

    static void access$000(com.parse.PushService)
    {
        com.parse.PushService $r0;

        $r0 := @parameter0: com.parse.PushService;

        staticinvoke <com.parse.PushService: boolean sendMessage(java.lang.String)>("{}");

        return;
    }

    static int access$100()
    {
        int i0;

        i0 = <com.parse.PushService: int delaySeconds>;

        return i0;
    }

    static boolean access$200(com.parse.PushService)
    {
        com.parse.PushService $r0;
        boolean z0;

        $r0 := @parameter0: com.parse.PushService;

        z0 = $r0.<com.parse.PushService: boolean destroyed>;

        return z0;
    }

    static void access$300(com.parse.PushService)
    {
        com.parse.PushService $r0;

        $r0 := @parameter0: com.parse.PushService;

        specialinvoke $r0.<com.parse.PushService: void increaseDelay()>();

        return;
    }

    static java.lang.String access$400()
    {
        java.lang.String r0;

        r0 = <com.parse.PushService: java.lang.String pushServer>;

        return r0;
    }

    static int access$500(com.parse.PushService)
    {
        int i0;
        com.parse.PushService $r0;

        $r0 := @parameter0: com.parse.PushService;

        i0 = $r0.<com.parse.PushService: int pushPort>;

        return i0;
    }

    static boolean access$600(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <com.parse.PushService: boolean sendSubscriptionInformation(android.content.Context)>($r0);

        return $z0;
    }

    static void access$700(com.parse.PushService, java.io.BufferedReader)
    {
        java.io.BufferedReader $r1;
        com.parse.PushService $r0;

        $r0 := @parameter0: com.parse.PushService;

        $r1 := @parameter1: java.io.BufferedReader;

        specialinvoke $r0.<com.parse.PushService: void readInBackground(java.io.BufferedReader)>($r1);

        return;
    }

    public static java.util.Set getSubscriptions(android.content.Context)
    {
        java.lang.Throwable $r2;
        android.content.Context $r0;
        java.util.Set $r1;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/parse/PushService;";

     label1:
        $r1 = staticinvoke <com.parse.ap: java.util.Set c(android.content.Context)>($r0);

     label2:
        exitmonitor class "Lcom/parse/PushService;";

        return $r1;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/parse/PushService;";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void increaseDelay()
    {
        int $i0;
        com.parse.PushService r0;

        r0 := @this: com.parse.PushService;

        $i0 = <com.parse.PushService: int consecutiveFailures>;

        $i0 = $i0 + 1;

        <com.parse.PushService: int consecutiveFailures> = $i0;

        $i0 = <com.parse.PushService: int delaySeconds>;

        $i0 = $i0 * 2;

        <com.parse.PushService: int delaySeconds> = $i0;

        $i0 = <com.parse.PushService: int delaySeconds>;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i0);

        <com.parse.PushService: int delaySeconds> = $i0;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 300);

        <com.parse.PushService: int delaySeconds> = $i0;

        return;
    }

    private void readInBackground(java.io.BufferedReader)
    {
        com.parse.os.ParseAsyncTask $r3;
        java.io.BufferedReader $r1;
        com.parse.bo $r2;
        java.lang.Void[] $r4;
        com.parse.PushService r0;
        boolean $z0;

        r0 := @this: com.parse.PushService;

        $r1 := @parameter0: java.io.BufferedReader;

        $z0 = r0.<com.parse.PushService: boolean destroyed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new com.parse.bo;

        specialinvoke $r2.<com.parse.bo: void <init>(com.parse.PushService,java.io.BufferedReader,com.parse.PushService)>(r0, $r1, r0);

        r0.<com.parse.PushService: com.parse.os.ParseAsyncTask task> = $r2;

        $r3 = r0.<com.parse.PushService: com.parse.os.ParseAsyncTask task>;

        $r4 = newarray (java.lang.Void)[0];

        virtualinvoke $r3.<com.parse.os.ParseAsyncTask: com.parse.os.ParseAsyncTask execute(java.lang.Object[])>($r4);

        return;
    }

    static void resetDelay()
    {
        <com.parse.PushService: int delaySeconds> = 0;

        <com.parse.PushService: int consecutiveFailures> = 0;

        return;
    }

    private void sendKeepAlive()
    {
        com.parse.PushService r0;

        r0 := @this: com.parse.PushService;

        staticinvoke <com.parse.PushService: boolean sendMessage(java.lang.String)>("{}");

        return;
    }

    static boolean sendMessage(java.lang.String)
    {
        java.io.OutputStream $r4;
        java.lang.Throwable $r7, $r8;
        java.net.Socket $r1;
        java.io.BufferedWriter $r2;
        int $i0;
        java.io.OutputStreamWriter $r3;
        java.lang.StringBuilder $r5;
        java.lang.String $r0, $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.parse.PushService: java.net.Socket socket>;

        if $r1 != null goto label01;

        return 0;

     label01:
        $r2 = new java.io.BufferedWriter;

        $r3 = new java.io.OutputStreamWriter;

        $r1 = <com.parse.PushService: java.net.Socket socket>;

     label02:
        $r4 = virtualinvoke $r1.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r4, "UTF-8");

        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r3, 8192);

     label03:
        $r5 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("subscribing with ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{}");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");

     label05:
        $r1 = <com.parse.PushService: java.net.Socket socket>;

     label06:
        $i0 = virtualinvoke $r1.<java.net.Socket: int getPort()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.PushService", $r6);

     label07:
        $r5 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{}");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>($r0);

        virtualinvoke $r2.<java.io.BufferedWriter: void flush()>();

     label09:
        return 1;

     label10:
        $r7 := @caughtexception;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", "unsupported encoding", $r7);

        return 0;

     label11:
        $r8 := @caughtexception;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", "could not construct writer", $r8);

        return 0;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label10;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label10;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label10;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label10;
        catch java.io.IOException from label02 to label03 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label08 to label09 with label11;
    }

    private static boolean sendSubscriptionInformation(android.content.Context)
    {
        java.lang.Throwable $r3;
        android.content.Context $r0;
        org.json.JSONObject $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/parse/PushService;";

     label1:
        $z0 = staticinvoke <com.parse.ap: boolean d(android.content.Context)>($r0);

     label2:
        if $z0 != 0 goto label4;

        $z0 = 0;

     label3:
        exitmonitor class "Lcom/parse/PushService;";

        return $z0;

     label4:
        $r1 = staticinvoke <com.parse.ap: org.json.JSONObject e(android.content.Context)>($r0);

        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        $z0 = staticinvoke <com.parse.PushService: boolean sendMessage(java.lang.String)>($r2);

     label5:
        goto label3;

     label6:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/parse/PushService;";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static void setDefaultPushCallback(android.content.Context, java.lang.Class)
    {
        java.lang.Throwable $r6;
        android.content.Context $r0;
        android.content.pm.PackageManager $r4;
        int $i0;
        java.lang.Class $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 0);

     label2:
        $i0 = $r5.<android.content.pm.ApplicationInfo: int icon>;

        staticinvoke <com.parse.PushService: void setDefaultPushCallback(android.content.Context,java.lang.Class,int)>($r0, $r1, $i0);

        return;

     label3:
        $r6 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("missing package ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", $r3, $r6);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static void setDefaultPushCallback(android.content.Context, java.lang.Class, int)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.Class $r1;
        android.content.Intent $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.Class;

        $i0 := @parameter2: int;

        staticinvoke <com.parse.ap: void a(android.content.Context,java.lang.Class,int)>($r0, $r1, $i0);

        if $r1 == null goto label1;

        staticinvoke <com.parse.PushService: void startService(android.content.Context)>($r0);

        return;

     label1:
        $z0 = staticinvoke <com.parse.ap: boolean a(android.content.Context)>($r0);

        if $z0 != 0 goto label2;

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.PushService", "Shutting down push service. No remaining channels");

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "Lcom/parse/PushService;");

        virtualinvoke $r0.<android.content.Context: boolean stopService(android.content.Intent)>($r2);

     label2:
        return;
    }

    static void sleep(int)
    {
        java.util.concurrent.Semaphore $r2;
        int $i0, $i2;
        java.lang.StringBuilder $r0, $r3;
        long $l1;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sleeping ");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logV(java.lang.String,java.lang.String)>("com.parse.PushService", $r1);

        $r2 = <com.parse.PushService: java.util.concurrent.Semaphore sleepSemaphore>;

        if $r2 != null goto label1;

        $l1 = (long) $i0;

        staticinvoke <java.lang.Thread: void sleep(long)>($l1);

        return;

     label1:
        if $i0 <= 100 goto label2;

        virtualinvoke $r2.<java.util.concurrent.Semaphore: void acquire(int)>(100);

        $i2 = -100;

        $i0 = $i0 + $i2;

        goto label1;

     label2:
        virtualinvoke $r2.<java.util.concurrent.Semaphore: void acquire(int)>($i0);

        return;
    }

    private static void startService(android.content.Context)
    {
        java.lang.Throwable $r3;
        android.content.Context $r0;
        android.content.ComponentName $r1;
        android.content.Intent $r2;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/parse/PushService;";

     label1:
        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.PushService", "ensuring push service is started");

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "Lcom/parse/PushService;");

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>($r2);

        if $r1 != null goto label2;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String)>("com.parse.PushService", "Could not start the push service. Make sure that the XML tag <service android:name=\"com.parse.PushService\" /> is in your AndroidManifest.xml as a child of the <application> element.");

     label2:
        exitmonitor class "Lcom/parse/PushService;";

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/parse/PushService;";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void startServiceIfRequired(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <com.parse.ap: boolean a(android.content.Context)>($r0);

        if $z0 != 0 goto label1;

        staticinvoke <com.parse.Parse: void logW(java.lang.String,java.lang.String)>("com.parse.PushService", "No known push routes; will not start push service");

        return;

     label1:
        staticinvoke <com.parse.PushService: void startService(android.content.Context)>($r0);

        return;
    }

    public static void subscribe(android.content.Context, java.lang.String, java.lang.Class)
    {
        java.lang.Throwable $r7;
        android.content.Context $r0;
        android.content.pm.PackageManager $r5;
        int $i0;
        java.lang.Class $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r4;
        android.content.pm.ApplicationInfo $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class;

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r4, 0);

     label2:
        $i0 = $r6.<android.content.pm.ApplicationInfo: int icon>;

        staticinvoke <com.parse.PushService: void subscribe(android.content.Context,java.lang.String,java.lang.Class,int)>($r0, $r1, $r2, $i0);

        return;

     label3:
        $r7 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("missing package ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", $r1, $r7);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static void subscribe(android.content.Context, java.lang.String, java.lang.Class, int)
    {
        java.lang.Throwable $r3;
        android.content.Context $r0;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class;

        $i0 := @parameter3: int;

        entermonitor class "Lcom/parse/PushService;";

     label1:
        staticinvoke <com.parse.PushService: void startService(android.content.Context)>($r0);

        staticinvoke <com.parse.ap: boolean a(android.content.Context,java.lang.String,java.lang.Class,int)>($r0, $r1, $r2, $i0);

     label2:
        exitmonitor class "Lcom/parse/PushService;";

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/parse/PushService;";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void unsubscribe(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r3;
        android.content.Context $r0;
        android.content.Intent $r2;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "Lcom/parse/PushService;";

     label1:
        staticinvoke <com.parse.ap: boolean a(android.content.Context,java.lang.String)>($r0, $r1);

        $z0 = staticinvoke <com.parse.ap: boolean a(android.content.Context)>($r0);

        if $z0 != 0 goto label2;

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.PushService", "Shutting down push service. No remaining channels");

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "Lcom/parse/PushService;");

        virtualinvoke $r0.<android.content.Context: boolean stopService(android.content.Intent)>($r2);

     label2:
        exitmonitor class "Lcom/parse/PushService;";

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/parse/PushService;";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static void usePort(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        <com.parse.PushService: int defaultPushPort> = $i0;

        return;
    }

    static void useServer(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.parse.PushService: java.lang.String pushServer> = $r0;

        return;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.content.Intent $r1;
        java.lang.IllegalArgumentException $r2;
        com.parse.PushService r0;

        r0 := @this: com.parse.PushService;

        $r1 := @parameter0: android.content.Intent;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You cannot bind directly to the PushService. Use PushService.subscribe instead.");

        throw $r2;
    }

    public final void onCreate()
    {
        int $i0;
        java.util.Timer $r1;
        com.parse.bn $r2;
        com.parse.PushService r0;

        r0 := @this: com.parse.PushService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.PushService", "creating push service");

        $i0 = <com.parse.PushService: int defaultPushPort>;

        r0.<com.parse.PushService: int pushPort> = $i0;

        $r1 = new java.util.Timer;

        specialinvoke $r1.<java.util.Timer: void <init>(java.lang.String,boolean)>("com.parse.PushService.keepAliveTimer", 1);

        r0.<com.parse.PushService: java.util.Timer keepAliveTimer> = $r1;

        $r1 = r0.<com.parse.PushService: java.util.Timer keepAliveTimer>;

        $r2 = new com.parse.bn;

        specialinvoke $r2.<com.parse.bn: void <init>(com.parse.PushService)>(r0);

        virtualinvoke $r1.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r2, 1200000L, 1200000L);

        staticinvoke <com.parse.PushService: void resetDelay()>();

        specialinvoke r0.<com.parse.PushService: void readInBackground(java.io.BufferedReader)>(null);

        return;
    }

    public final void onDestroy()
    {
        java.lang.Throwable $r4, $r5;
        java.net.Socket $r3;
        com.parse.os.ParseAsyncTask $r1;
        java.util.Timer $r2;
        com.parse.PushService r0;

        r0 := @this: com.parse.PushService;

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.PushService", "destroying push service");

        $r1 = r0.<com.parse.PushService: com.parse.os.ParseAsyncTask task>;

        virtualinvoke $r1.<com.parse.os.ParseAsyncTask: boolean cancel(boolean)>(1);

        $r2 = r0.<com.parse.PushService: java.util.Timer keepAliveTimer>;

        virtualinvoke $r2.<java.util.Timer: void cancel()>();

        entermonitor r0;

     label1:
        r0.<com.parse.PushService: boolean destroyed> = 1;

        $r3 = <com.parse.PushService: java.net.Socket socket>;

        <com.parse.PushService: java.net.Socket socket> = null;

        exitmonitor r0;

     label2:
        if $r3 == null goto label7;

     label3:
        virtualinvoke $r3.<java.net.Socket: void close()>();

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label6:
        $r5 := @caughtexception;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label6;
    }
}
