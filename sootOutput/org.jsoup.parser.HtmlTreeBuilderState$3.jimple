final enum class org.jsoup.parser.HtmlTreeBuilderState$3 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        int $i0;
        org.jsoup.parser.HtmlTreeBuilderState$3 r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$3;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>("BeforeHead", 2, null);

        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token$StartTag $r4;
        org.jsoup.parser.Token $r1;
        java.lang.String[] $r9;
        org.jsoup.parser.HtmlTreeBuilderState$3 r0;
        org.jsoup.parser.Token$EndTag $r8;
        org.jsoup.parser.HtmlTreeBuilderState $r6;
        org.jsoup.nodes.Element $r7;
        org.jsoup.parser.Token$Comment $r3;
        java.lang.String $r5;
        org.jsoup.parser.HtmlTreeBuilder $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$3;

        $r1 := @parameter0: org.jsoup.parser.Token;

        $r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isComment()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r3);

        return 1;

     label2:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isDoctype()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        return 0;

     label3:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isStartTag()>();

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r5 = virtualinvoke $r4.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z0 == 0 goto label4;

        $r6 = <org.jsoup.parser.HtmlTreeBuilderState$3: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        $z0 = virtualinvoke $r6.<org.jsoup.parser.HtmlTreeBuilderState: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r1, $r2);

        return $z0;

     label4:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isStartTag()>();

        if $z0 == 0 goto label5;

        $r4 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r5 = virtualinvoke $r4.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("head");

        if $z0 == 0 goto label5;

        $r4 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r7 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r4);

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void setHeadElement(org.jsoup.nodes.Element)>($r7);

        $r6 = <org.jsoup.parser.HtmlTreeBuilderState$3: org.jsoup.parser.HtmlTreeBuilderState InHead>;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r6);

        return 1;

     label5:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isEndTag()>();

        if $z0 == 0 goto label6;

        $r8 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        $r5 = virtualinvoke $r8.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        $r9 = newarray (java.lang.String)[4];

        $r9[0] = "head";

        $r9[1] = "body";

        $r9[2] = "html";

        $r9[3] = "br";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r5, $r9);

        if $z0 == 0 goto label6;

        $r4 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r4.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("head");

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r4);

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        return $z0;

     label6:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isEndTag()>();

        if $z0 == 0 goto label7;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        return 0;

     label7:
        $r4 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r4.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("head");

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r4);

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        return $z0;
    }
}
