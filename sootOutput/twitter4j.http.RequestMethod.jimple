final class twitter4j.http.RequestMethod extends java.lang.Object implements java.io.Serializable
{
    public static final twitter4j.http.RequestMethod DELETE;
    public static final twitter4j.http.RequestMethod GET;
    public static final twitter4j.http.RequestMethod HEAD;
    public static final twitter4j.http.RequestMethod POST;
    public static final twitter4j.http.RequestMethod PUT;
    private static final java.util.Map instances;
    private static final long serialVersionUID;
    private final java.lang.String name;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        twitter4j.http.RequestMethod $r1;

        <twitter4j.http.RequestMethod: long serialVersionUID> = -4399222582680270381L;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(5);

        <twitter4j.http.RequestMethod: java.util.Map instances> = $r0;

        $r1 = new twitter4j.http.RequestMethod;

        specialinvoke $r1.<twitter4j.http.RequestMethod: void <init>(java.lang.String)>("GET");

        <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod GET> = $r1;

        $r1 = new twitter4j.http.RequestMethod;

        specialinvoke $r1.<twitter4j.http.RequestMethod: void <init>(java.lang.String)>("POST");

        <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod POST> = $r1;

        $r1 = new twitter4j.http.RequestMethod;

        specialinvoke $r1.<twitter4j.http.RequestMethod: void <init>(java.lang.String)>("DELETE");

        <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod DELETE> = $r1;

        $r1 = new twitter4j.http.RequestMethod;

        specialinvoke $r1.<twitter4j.http.RequestMethod: void <init>(java.lang.String)>("HEAD");

        <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod HEAD> = $r1;

        $r1 = new twitter4j.http.RequestMethod;

        specialinvoke $r1.<twitter4j.http.RequestMethod: void <init>(java.lang.String)>("PUT");

        <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod PUT> = $r1;

        return;
    }

    private void <init>(java.lang.String)
    {
        twitter4j.http.RequestMethod r0;
        java.lang.String $r1;
        java.util.Map $r2;

        r0 := @this: twitter4j.http.RequestMethod;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.http.RequestMethod: java.lang.String name> = $r1;

        $r2 = <twitter4j.http.RequestMethod: java.util.Map instances>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r0);

        return;
    }

    private static twitter4j.http.RequestMethod getInstance(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r1;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r2 = <twitter4j.http.RequestMethod: java.util.Map instances>;

        $r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (twitter4j.http.RequestMethod) $r1;

        return $r3;
    }

    private java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        twitter4j.http.RequestMethod r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.http.RequestMethod;

        $r1 = r0.<twitter4j.http.RequestMethod: java.lang.String name>;

        r0 = staticinvoke <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod getInstance(java.lang.String)>($r1);

        return r0;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.http.RequestMethod r0, r3;
        java.lang.Object $r1;
        java.lang.String $r2, $r4;
        boolean $z0;

        r0 := @this: twitter4j.http.RequestMethod;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof twitter4j.http.RequestMethod;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = (twitter4j.http.RequestMethod) $r1;

        $r4 = r0.<twitter4j.http.RequestMethod: java.lang.String name>;

        $r2 = r3.<twitter4j.http.RequestMethod: java.lang.String name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        twitter4j.http.RequestMethod r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.http.RequestMethod;

        $r1 = r0.<twitter4j.http.RequestMethod: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public final java.lang.String name()
    {
        twitter4j.http.RequestMethod r0;
        java.lang.String r1;

        r0 := @this: twitter4j.http.RequestMethod;

        r1 = r0.<twitter4j.http.RequestMethod: java.lang.String name>;

        return r1;
    }

    public java.lang.String toString()
    {
        twitter4j.http.RequestMethod r0;
        java.lang.String $r2;
        java.lang.StringBuffer $r1;

        r0 := @this: twitter4j.http.RequestMethod;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RequestMethod{name=\'");

        $r2 = r0.<twitter4j.http.RequestMethod: java.lang.String name>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
