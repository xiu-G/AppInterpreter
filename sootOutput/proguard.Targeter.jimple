public class proguard.Targeter extends java.lang.Object
{
    private final proguard.Configuration configuration;

    public void <init>(proguard.Configuration)
    {
        proguard.Configuration $r1;
        proguard.Targeter r0;

        r0 := @this: proguard.Targeter;

        $r1 := @parameter0: proguard.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.Targeter: proguard.Configuration configuration> = $r1;

        return;
    }

    public void execute(proguard.classfile.ClassPool) throws java.io.IOException
    {
        java.io.PrintStream $r6;
        java.util.Iterator $r7;
        java.io.IOException $r12;
        java.lang.Integer $r9;
        proguard.classfile.ClassPool $r1;
        java.util.HashSet $r4;
        java.util.List $r3;
        java.lang.StringBuffer $r11;
        proguard.Configuration $r2;
        int $i0;
        proguard.Targeter r0;
        proguard.classfile.visitor.ClassVersionSetter $r5;
        java.lang.Object $r8;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: proguard.Targeter;

        $r1 := @parameter0: proguard.classfile.ClassPool;

        $r2 = r0.<proguard.Targeter: proguard.Configuration configuration>;

        $r3 = $r2.<proguard.Configuration: java.util.List warn>;

        if $r3 == null goto label3;

        $r4 = null;

     label1:
        $r5 = new proguard.classfile.visitor.ClassVersionSetter;

        $r2 = r0.<proguard.Targeter: proguard.Configuration configuration>;

        $i0 = $r2.<proguard.Configuration: int targetClassVersion>;

        specialinvoke $r5.<proguard.classfile.visitor.ClassVersionSetter: void <init>(int,java.util.Set)>($i0, $r4);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r5);

        if $r4 == null goto label5;

        $i0 = interfaceinvoke $r4.<java.util.Set: int size()>();

        if $i0 <= 0 goto label5;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>("Warning: some classes have more recent versions (");

        $r7 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.Integer) $r8;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $i0 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r10 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassVersion(int)>($i0);

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>($r10);

        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>(",");

        goto label2;

     label3:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        goto label1;

     label4:
        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(")");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         than the target version (");

        $r2 = r0.<proguard.Targeter: proguard.Configuration configuration>;

        $i0 = $r2.<proguard.Configuration: int targetClassVersion>;

        $r10 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassVersion(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(").");

        $r10 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r2 = r0.<proguard.Targeter: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean ignoreWarnings>;

        if $z0 != 0 goto label5;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("         If you are sure this is not a problem,");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("         you could try your luck using the \'-ignorewarnings\' option.");

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Please correct the above warnings first.");

        throw $r12;

     label5:
        return;
    }
}
