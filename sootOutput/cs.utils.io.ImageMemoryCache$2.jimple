class cs.utils.io.ImageMemoryCache$2 extends java.util.LinkedHashMap
{
    private static final long serialVersionUID;
    final cs.utils.io.ImageMemoryCache this$0;

    void <init>(cs.utils.io.ImageMemoryCache, int, float, boolean)
    {
        cs.utils.io.ImageMemoryCache$2 r0;
        int $i0;
        float $f0;
        cs.utils.io.ImageMemoryCache $r1;
        boolean $z0;

        r0 := @this: cs.utils.io.ImageMemoryCache$2;

        $r1 := @parameter0: cs.utils.io.ImageMemoryCache;

        $i0 := @parameter1: int;

        $f0 := @parameter2: float;

        $z0 := @parameter3: boolean;

        r0.<cs.utils.io.ImageMemoryCache$2: cs.utils.io.ImageMemoryCache this$0> = $r1;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(15, 0.75F, 1);

        return;
    }

    protected boolean removeEldestEntry(java.util.Map$Entry)
    {
        cs.utils.io.ImageMemoryCache$2 r0;
        int $i0;
        java.util.Map$Entry r1;

        r0 := @this: cs.utils.io.ImageMemoryCache$2;

        r1 := @parameter0: java.util.Map$Entry;

        $i0 = virtualinvoke r0.<cs.utils.io.ImageMemoryCache$2: int size()>();

        if $i0 <= 15 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <cs.utils.io.ImageMemoryCache$2: long serialVersionUID> = 6040103833179403725L;

        return;
    }
}
