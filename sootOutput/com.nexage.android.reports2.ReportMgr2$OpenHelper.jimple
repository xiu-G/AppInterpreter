class com.nexage.android.reports2.ReportMgr2$OpenHelper extends android.database.sqlite.SQLiteOpenHelper
{
    private static final java.lang.String DATABASE_NAME;
    private static final int DATABASE_VERSION;

    static void <clinit>()
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        <com.nexage.android.reports2.ReportMgr2$OpenHelper: int DATABASE_VERSION> = 10;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nexage_");

        $r1 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getDCN()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_Cache.db");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.nexage.android.reports2.ReportMgr2$OpenHelper: java.lang.String DATABASE_NAME> = $r1;

        return;
    }

    void <init>(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.String $r2;
        com.nexage.android.reports2.ReportMgr2$OpenHelper r0;

        r0 := @this: com.nexage.android.reports2.ReportMgr2$OpenHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 = <com.nexage.android.reports2.ReportMgr2$OpenHelper: java.lang.String DATABASE_NAME>;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, $r2, null, 10);

        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.nexage.android.reports2.ReportMgr2$OpenHelper r0;

        r0 := @this: com.nexage.android.reports2.ReportMgr2$OpenHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE reqTable(seq INTEGER PRIMARY KEY,pos TEXT,posSeq INTEGER,st INTEGER,ts INTEGER,respTime INTEGER,tagId TEXT,buyer TEXT,pru TEXT)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE clickTable(seq INTEGER PRIMARY KEY,pos TEXT,posSeq INTEGER,ts INTEGER,tagId TEXT)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE diplayTable(seq INTEGER PRIMARY KEY,pos TEXT,posSeq INTEGER,ts INTEGER,tagId TEXT,buyer TEXT,pru TEXT)");

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.nexage.android.reports2.ReportMgr2$OpenHelper r0;
        int $i0, $i1;

        r0 := @this: com.nexage.android.reports2.ReportMgr2$OpenHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <com.nexage.android.NexageLog: void i(java.lang.String,java.lang.String)>("REPORT", "Re-created DB");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS reqTable");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS clickTable");

        virtualinvoke r0.<com.nexage.android.reports2.ReportMgr2$OpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1);

        return;
    }
}
