public class twitter4j.auth.OAuth2Authorization extends java.lang.Object implements java.io.Serializable, twitter4j.auth.Authorization, twitter4j.auth.OAuth2Support
{
    private static final long serialVersionUID;
    private final twitter4j.conf.Configuration conf;
    private java.lang.String consumerKey;
    private java.lang.String consumerSecret;
    private twitter4j.internal.http.HttpClientWrapper http;
    private twitter4j.auth.OAuth2Token token;

    public void <init>(twitter4j.conf.Configuration)
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.internal.http.HttpClientWrapper $r4;
        twitter4j.auth.OAuth2Authorization r0;
        java.lang.String $r2, $r3;

        r0 := @this: twitter4j.auth.OAuth2Authorization;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.auth.OAuth2Authorization: twitter4j.conf.Configuration conf> = $r1;

        $r2 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getOAuthConsumerKey()>();

        $r3 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getOAuthConsumerSecret()>();

        virtualinvoke r0.<twitter4j.auth.OAuth2Authorization: void setOAuthConsumer(java.lang.String,java.lang.String)>($r2, $r3);

        $r4 = new twitter4j.internal.http.HttpClientWrapper;

        specialinvoke $r4.<twitter4j.internal.http.HttpClientWrapper: void <init>(twitter4j.internal.http.HttpClientWrapperConfiguration)>($r1);

        r0.<twitter4j.auth.OAuth2Authorization: twitter4j.internal.http.HttpClientWrapper http> = $r4;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.auth.OAuth2Token $r5, $r6;
        twitter4j.auth.OAuth2Authorization r0, $r2;
        java.lang.Object $r1;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: twitter4j.auth.OAuth2Authorization;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label8;

        $z0 = $r1 instanceof twitter4j.auth.OAuth2Authorization;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (twitter4j.auth.OAuth2Authorization) $r1;

        $r3 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerKey>;

        if $r3 == null goto label5;

        $r3 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerKey>;

        $r4 = $r2.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerKey>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label8;

     label2:
        $r3 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerSecret>;

        if $r3 == null goto label6;

        $r3 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerSecret>;

        $r4 = $r2.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerSecret>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label8;

     label3:
        $r5 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        if $r5 == null goto label7;

        $r5 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        $r6 = $r2.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        $z0 = virtualinvoke $r5.<twitter4j.auth.OAuth2Token: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label8;

     label4:
        return 1;

     label5:
        $r3 = $r2.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerKey>;

        if $r3 == null goto label2;

        return 0;

     label6:
        $r3 = $r2.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerSecret>;

        if $r3 == null goto label3;

        return 0;

     label7:
        $r5 = $r2.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        if $r5 == null goto label4;

     label8:
        return 0;
    }

    public java.lang.String getAuthorizationHeader(twitter4j.internal.http.HttpRequest)
    {
        java.lang.Throwable $r7;
        byte[] $r6;
        twitter4j.auth.OAuth2Token $r2;
        twitter4j.internal.http.HttpRequest $r1;
        twitter4j.auth.OAuth2Authorization r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r3, $r5;

        r0 := @this: twitter4j.auth.OAuth2Authorization;

        $r1 := @parameter0: twitter4j.internal.http.HttpRequest;

        $r2 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        if $r2 != null goto label6;

        $r3 = "";

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerKey>;

     label1:
        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8");

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label2:
        $r5 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerSecret>;

     label3:
        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r3 = $r5;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Basic ");

        $r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <twitter4j.internal.http.BASE64Encoder: java.lang.String encode(byte[])>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label6:
        $r2 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        $r3 = virtualinvoke $r2.<twitter4j.auth.OAuth2Token: java.lang.String generateAuthorizationHeader()>();

        return $r3;

     label7:
        $r7 := @caughtexception;

        goto label5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label7;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label7;
    }

    public twitter4j.auth.OAuth2Token getOAuth2Token()
    {
        java.lang.IllegalStateException $r2;
        twitter4j.internal.http.HttpParameter $r4;
        twitter4j.auth.OAuth2Token $r1;
        twitter4j.internal.http.HttpClientWrapper $r5;
        twitter4j.auth.OAuth2Authorization r0;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r6;
        int $i0;
        twitter4j.TwitterException $r9;
        java.lang.String $r7;
        twitter4j.internal.http.HttpParameter[] $r3;

        r0 := @this: twitter4j.auth.OAuth2Authorization;

        $r1 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("OAuth 2 Bearer Token is already available.");

        throw $r2;

     label1:
        $r3 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r4 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r4.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("grant_type", "client_credentials");

        $r3[0] = $r4;

        $r5 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.internal.http.HttpClientWrapper http>;

        $r6 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getOAuth2TokenURL()>();

        $r8 = virtualinvoke $r5.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r7, $r3, r0);

        $i0 = virtualinvoke $r8.<twitter4j.internal.http.HttpResponse: int getStatusCode()>();

        if $i0 == 200 goto label2;

        $r9 = new twitter4j.TwitterException;

        specialinvoke $r9.<twitter4j.TwitterException: void <init>(java.lang.String,twitter4j.internal.http.HttpResponse)>("Obtaining OAuth 2 Bearer Token failed.", $r8);

        throw $r9;

     label2:
        $r1 = new twitter4j.auth.OAuth2Token;

        specialinvoke $r1.<twitter4j.auth.OAuth2Token: void <init>(twitter4j.internal.http.HttpResponse)>($r8);

        r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token> = $r1;

        $r1 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        return $r1;
    }

    public int hashCode()
    {
        twitter4j.auth.OAuth2Token $r2;
        int $i0, $i1, $i2;
        twitter4j.auth.OAuth2Authorization r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.auth.OAuth2Authorization;

        $i0 = 0;

        $r1 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerKey>;

        if $r1 == null goto label4;

        $r1 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerKey>;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label1:
        $i1 = $i1 * 31;

        $r1 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerSecret>;

        if $r1 == null goto label5;

        $r1 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerSecret>;

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label2:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r2 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        if $r2 == null goto label3;

        $r2 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        $i0 = virtualinvoke $r2.<twitter4j.auth.OAuth2Token: int hashCode()>();

     label3:
        $i0 = $i1 + $i0;

        return $i0;

     label4:
        $i1 = 0;

        goto label1;

     label5:
        $i2 = 0;

        goto label2;
    }

    public void invalidateOAuth2Token()
    {
        java.lang.Throwable $r10;
        java.lang.IllegalStateException $r2;
        twitter4j.internal.http.HttpParameter $r4;
        twitter4j.auth.OAuth2Token $r1;
        twitter4j.internal.http.HttpClientWrapper $r6;
        twitter4j.auth.OAuth2Authorization r0;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r7;
        int $i0;
        twitter4j.TwitterException $r9;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r3;

        r0 := @this: twitter4j.auth.OAuth2Authorization;

        $r1 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("OAuth 2 Bearer Token is not available.");

        throw $r2;

     label1:
        $r3 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r4 = new twitter4j.internal.http.HttpParameter;

        $r1 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        $r5 = virtualinvoke $r1.<twitter4j.auth.OAuth2Token: java.lang.String getAccessToken()>();

        specialinvoke $r4.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("access_token", $r5);

        $r3[0] = $r4;

        $r1 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

     label2:
        r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token> = null;

        $r6 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.internal.http.HttpClientWrapper http>;

        $r7 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r7.<twitter4j.conf.Configuration: java.lang.String getOAuth2InvalidateTokenURL()>();

        $r8 = virtualinvoke $r6.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r5, $r3, r0);

        $i0 = virtualinvoke $r8.<twitter4j.internal.http.HttpResponse: int getStatusCode()>();

     label3:
        if $i0 == 200 goto label6;

     label4:
        $r9 = new twitter4j.TwitterException;

        specialinvoke $r9.<twitter4j.TwitterException: void <init>(java.lang.String,twitter4j.internal.http.HttpResponse)>("Invalidating OAuth 2 Bearer Token failed.", $r8);

        throw $r9;

     label5:
        $r10 := @caughtexception;

        r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token> = $r1;

        throw $r10;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public boolean isEnabled()
    {
        twitter4j.auth.OAuth2Token $r1;
        twitter4j.auth.OAuth2Authorization r0;

        r0 := @this: twitter4j.auth.OAuth2Authorization;

        $r1 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setOAuth2Token(twitter4j.auth.OAuth2Token)
    {
        twitter4j.auth.OAuth2Token $r1;
        twitter4j.auth.OAuth2Authorization r0;

        r0 := @this: twitter4j.auth.OAuth2Authorization;

        $r1 := @parameter0: twitter4j.auth.OAuth2Token;

        r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token> = $r1;

        return;
    }

    public void setOAuthConsumer(java.lang.String, java.lang.String)
    {
        twitter4j.auth.OAuth2Authorization r0;
        java.lang.String $r1, $r2;

        r0 := @this: twitter4j.auth.OAuth2Authorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label3;

     label1:
        r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerKey> = $r1;

        if $r2 == null goto label4;

     label2:
        r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerSecret> = $r2;

        return;

     label3:
        $r1 = "";

        goto label1;

     label4:
        $r2 = "";

        goto label2;
    }

    public java.lang.String toString()
    {
        twitter4j.auth.OAuth2Token $r3;
        java.lang.StringBuilder $r1;
        twitter4j.auth.OAuth2Authorization r0;
        java.lang.String $r2;

        r0 := @this: twitter4j.auth.OAuth2Authorization;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("OAuth2Authorization{consumerKey=\'");

        $r2 = r0.<twitter4j.auth.OAuth2Authorization: java.lang.String consumerKey>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", consumerSecret=\'******************************************\', token=");

        $r3 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        if $r3 != null goto label2;

        $r2 = "null";

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $r3 = r0.<twitter4j.auth.OAuth2Authorization: twitter4j.auth.OAuth2Token token>;

        $r2 = virtualinvoke $r3.<twitter4j.auth.OAuth2Token: java.lang.String toString()>();

        goto label1;
    }

    public static void <clinit>()
    {
        <twitter4j.auth.OAuth2Authorization: long serialVersionUID> = 4274784415515174129L;

        return;
    }
}
