class b.e.b$a extends b.e.f
{
    final b.e.b d;

    void <init>(b.e.b)
    {
        b.e.b$a r0;
        b.e.b $r1;

        r0 := @this: b.e.b$a;

        $r1 := @parameter0: b.e.b;

        r0.<b.e.b$a: b.e.b d> = $r1;

        specialinvoke r0.<b.e.f: void <init>()>();

        return;
    }

    protected void a()
    {
        b.e.b$a r0;
        b.e.b $r1;

        r0 := @this: b.e.b$a;

        $r1 = r0.<b.e.b$a: b.e.b d>;

        virtualinvoke $r1.<b.e.b: void clear()>();

        return;
    }

    protected java.lang.Object b(int, int)
    {
        java.lang.Object[] $r2;
        b.e.b $r1;
        int $i0, $i1;
        java.lang.Object $r3;
        b.e.b$a r0;

        r0 := @this: b.e.b$a;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<b.e.b$a: b.e.b d>;

        $r2 = $r1.<b.e.b: java.lang.Object[] c>;

        $r3 = $r2[$i0];

        return $r3;
    }

    protected java.util.Map c()
    {
        java.lang.UnsupportedOperationException $r1;
        b.e.b$a r0;

        r0 := @this: b.e.b$a;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not a map");

        throw $r1;
    }

    protected int d()
    {
        int i0;
        b.e.b$a r0;
        b.e.b $r1;

        r0 := @this: b.e.b$a;

        $r1 = r0.<b.e.b$a: b.e.b d>;

        i0 = $r1.<b.e.b: int d>;

        return i0;
    }

    protected int e(java.lang.Object)
    {
        b.e.b $r1;
        int $i0;
        java.lang.Object $r2;
        b.e.b$a r0;

        r0 := @this: b.e.b$a;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.e.b$a: b.e.b d>;

        $i0 = virtualinvoke $r1.<b.e.b: int indexOf(java.lang.Object)>($r2);

        return $i0;
    }

    protected int f(java.lang.Object)
    {
        b.e.b $r1;
        int $i0;
        java.lang.Object $r2;
        b.e.b$a r0;

        r0 := @this: b.e.b$a;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.e.b$a: b.e.b d>;

        $i0 = virtualinvoke $r1.<b.e.b: int indexOf(java.lang.Object)>($r2);

        return $i0;
    }

    protected void g(java.lang.Object, java.lang.Object)
    {
        b.e.b $r3;
        java.lang.Object $r1, $r2;
        b.e.b$a r0;

        r0 := @this: b.e.b$a;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<b.e.b$a: b.e.b d>;

        virtualinvoke $r3.<b.e.b: boolean add(java.lang.Object)>($r1);

        return;
    }

    protected void h(int)
    {
        int $i0;
        b.e.b$a r0;
        b.e.b $r1;

        r0 := @this: b.e.b$a;

        $i0 := @parameter0: int;

        $r1 = r0.<b.e.b$a: b.e.b d>;

        virtualinvoke $r1.<b.e.b: java.lang.Object l(int)>($i0);

        return;
    }

    protected java.lang.Object i(int, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r2;
        int $i0;
        java.lang.Object $r1;
        b.e.b$a r0;

        r0 := @this: b.e.b$a;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not a map");

        throw $r2;
    }
}
