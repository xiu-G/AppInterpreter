class net.sourceforge.pinyin4j.ResourceHelper extends java.lang.Object
{
    static java.lang.Class class$net$sourceforge$pinyin4j$ResourceHelper;

    void <init>()
    {
        net.sourceforge.pinyin4j.ResourceHelper r0;

        r0 := @this: net.sourceforge.pinyin4j.ResourceHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r2;
        java.lang.ClassNotFoundException $r3;
        java.lang.String $r0;
        java.lang.NoClassDefFoundError $r1;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("net.sourceforge.pinyin4j.ResourceHelper");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r1 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke $r3.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r1.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r1;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static java.io.BufferedInputStream getResourceInputStream(java.lang.String)
    {
        java.io.BufferedInputStream $r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r0;
        java.io.InputStream $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.BufferedInputStream;

        $r2 = <net.sourceforge.pinyin4j.ResourceHelper: java.lang.Class class$net$sourceforge$pinyin4j$ResourceHelper>;

        if $r2 != null goto label2;

        $r2 = staticinvoke <net.sourceforge.pinyin4j.ResourceHelper: java.lang.Class class$(java.lang.String)>("net.sourceforge.pinyin4j.ResourceHelper");

        $r3 = $r2;

        <net.sourceforge.pinyin4j.ResourceHelper: java.lang.Class class$net$sourceforge$pinyin4j$ResourceHelper> = $r2;

     label1:
        $r4 = virtualinvoke $r3.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/pinyindb/unicode_to_hanyu_pinyin.txt");

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r4);

        return $r1;

     label2:
        $r3 = <net.sourceforge.pinyin4j.ResourceHelper: java.lang.Class class$net$sourceforge$pinyin4j$ResourceHelper>;

        goto label1;
    }
}
