public class it.intelisoft.mobile.crypto.business.utils.DataDump extends java.lang.Object
{
    private java.lang.String name_;
    private java.util.HashMap values_;

    public void <init>()
    {
        it.intelisoft.mobile.crypto.business.utils.DataDump r0;
        java.util.HashMap $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.DataDump;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.util.HashMap values_> = $r1;

        r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String name_> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        it.intelisoft.mobile.crypto.business.utils.DataDump r0;
        java.util.HashMap $r2;
        java.lang.String $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.DataDump;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.util.HashMap values_> = $r2;

        r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String name_> = null;

        r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String name_> = $r1;

        return;
    }

    public void addParam(java.lang.String, java.lang.Object)
    {
        it.intelisoft.mobile.crypto.business.utils.DataDump r0;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        java.lang.String $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.DataDump;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == null goto label1;

        $r3 = r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.util.HashMap values_>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label1:
        return;
    }

    public void clear(java.lang.String)
    {
        it.intelisoft.mobile.crypto.business.utils.DataDump r0;
        java.util.HashMap $r2;
        java.lang.String $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.DataDump;

        $r1 := @parameter0: java.lang.String;

        r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String name_> = $r1;

        $r2 = r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.util.HashMap values_>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        return;
    }

    public java.lang.String dumpValues()
    {
        java.util.Iterator $r6;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ $r9;
        java.util.Set $r5;
        java.util.HashMap $r4;
        java.lang.Exception $r12;
        it.intelisoft.mobile.crypto.business.utils.DataDump r0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r8;
        java.lang.StringBuilder $r3;
        java.lang.Object $r7;
        java.lang.String r1, $r2, $r10, $r11;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.DataDump;

        r1 = "";

        $r2 = r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String name_>;

        if $r2 == null goto label01;

        $r3 = new java.lang.StringBuilder;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("");

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NAME:[");

        r1 = r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String name_>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.util.HashMap values_>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        if $r6 == null goto label10;

     label03:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label04:
        if $z0 != 0 goto label05;

        return r1;

     label05:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.String) $r7;

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.DataDump: java.util.HashMap values_>;

        $r7 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r8 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        $r9 = $r8.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ DATATYPES>;

        $r10 = virtualinvoke $r9.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getObjType(java.lang.Object)>($r7);

     label06:
        $r3 = new java.lang.StringBuilder;

     label07:
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" KEY:[");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] TYPE:[");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] VALUE:[");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        r1 = $r2;

        goto label02;

     label09:
        $r12 := @caughtexception;

     label10:
        return r1;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }
}
