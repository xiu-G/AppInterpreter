public class com.snowbee.core.Contact.ContactAPIV1Factory extends com.snowbee.core.Contact.ContactAPIAbstractFactory
{
    static int EMAIL_ID_COLUMN_INDEX;
    static final java.lang.String[] EMAIL_LOOKUP_PROJECTION;
    static int EMAIL_LOOKUP_STRING_COLUMN_INDEX;
    static int PHONE_ID_COLUMN_INDEX;
    static final java.lang.String[] PHONE_LOOKUP_PROJECTION;
    static int PHONE_LOOKUP_STRING_COLUMN_INDEX;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "_id";

        $r0[1] = "lookup";

        <com.snowbee.core.Contact.ContactAPIV1Factory: java.lang.String[] PHONE_LOOKUP_PROJECTION> = $r0;

        <com.snowbee.core.Contact.ContactAPIV1Factory: int PHONE_ID_COLUMN_INDEX> = 0;

        <com.snowbee.core.Contact.ContactAPIV1Factory: int PHONE_LOOKUP_STRING_COLUMN_INDEX> = 1;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "contact_id";

        $r0[1] = "lookup";

        <com.snowbee.core.Contact.ContactAPIV1Factory: java.lang.String[] EMAIL_LOOKUP_PROJECTION> = $r0;

        <com.snowbee.core.Contact.ContactAPIV1Factory: int EMAIL_ID_COLUMN_INDEX> = 0;

        <com.snowbee.core.Contact.ContactAPIV1Factory: int EMAIL_LOOKUP_STRING_COLUMN_INDEX> = 1;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.snowbee.core.Contact.ContactAPIV1Factory r0;
        android.content.Context $r1;

        r0 := @this: com.snowbee.core.Contact.ContactAPIV1Factory;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.snowbee.core.Contact.ContactAPIAbstractFactory: void <init>(android.content.Context)>($r1);

        return;
    }

    private com.snowbee.core.Contact.Contact getContact(android.content.Context, com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE, java.lang.String)
    {
        com.snowbee.core.Contact.ContactAPIV1Factory r0;
        java.lang.Throwable $r15;
        android.content.Context $r1;
        byte[] $r14;
        com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE $r2, $r5;
        android.net.Uri $r6;
        java.lang.String[] $r9;
        long $l1;
        android.content.ContentResolver $r8;
        java.lang.Long $r12;
        int $i0;
        java.lang.String $r3, $r7;
        android.database.Cursor $r10;
        boolean $z0;
        com.snowbee.core.Contact.Contact r4, $r11;
        java.io.InputStream $r13;

        r0 := @this: com.snowbee.core.Contact.ContactAPIV1Factory;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE;

        $r3 := @parameter2: java.lang.String;

        r4 = new com.snowbee.core.Contact.Contact;

        specialinvoke r4.<com.snowbee.core.Contact.Contact: void <init>(java.lang.String)>($r3);

        $r5 = <com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE: com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE NUMBER>;

        if $r2 != $r5 goto label2;

        $r6 = <android.provider.ContactsContract$PhoneLookup: android.net.Uri CONTENT_FILTER_URI>;

        $r7 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r3);

        $r6 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r6, $r7);

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = <com.snowbee.core.Contact.ContactAPIV1Factory: java.lang.String[] PHONE_LOOKUP_PROJECTION>;

        $r10 = virtualinvoke $r8.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r9, null, null, null);

        if $r10 == null goto label1;

        $z0 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label1;

        $i0 = <com.snowbee.core.Contact.ContactAPIV1Factory: int PHONE_ID_COLUMN_INDEX>;

        $l1 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>($i0);

        $i0 = <com.snowbee.core.Contact.ContactAPIV1Factory: int PHONE_LOOKUP_STRING_COLUMN_INDEX>;

        $r7 = interfaceinvoke $r10.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r6 = staticinvoke <android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>($l1, $r7);

        r4 = specialinvoke r0.<com.snowbee.core.Contact.ContactAPIV1Factory: com.snowbee.core.Contact.Contact lookupContact(android.content.Context,android.net.Uri,java.lang.String)>($r1, $r6, $r3);

     label1:
        return r4;

     label2:
        $r5 = <com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE: com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE EMAIL>;

        if $r2 != $r5 goto label3;

        $r6 = <android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_LOOKUP_URI>;

        $r7 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r3);

        $r6 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r6, $r7);

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = <com.snowbee.core.Contact.ContactAPIV1Factory: java.lang.String[] EMAIL_LOOKUP_PROJECTION>;

        $r10 = virtualinvoke $r8.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r9, null, null, null);

        if $r10 == null goto label1;

        $z0 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label1;

        $i0 = <com.snowbee.core.Contact.ContactAPIV1Factory: int EMAIL_ID_COLUMN_INDEX>;

        $l1 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>($i0);

        $i0 = <com.snowbee.core.Contact.ContactAPIV1Factory: int EMAIL_LOOKUP_STRING_COLUMN_INDEX>;

        $r7 = interfaceinvoke $r10.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r6 = staticinvoke <android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>($l1, $r7);

        r4 = specialinvoke r0.<com.snowbee.core.Contact.ContactAPIV1Factory: com.snowbee.core.Contact.Contact lookupContact(android.content.Context,android.net.Uri,java.lang.String)>($r1, $r6, $r3);

        goto label1;

     label3:
        $r5 = <com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE: com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE ID>;

        if $r2 != $r5 goto label1;

        $r6 = <android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_LOOKUP_URI>;

        $r7 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r3);

        $r6 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r6, $r7);

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = <com.snowbee.core.Contact.ContactAPIV1Factory: java.lang.String[] EMAIL_LOOKUP_PROJECTION>;

        $r10 = virtualinvoke $r8.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r9, null, null, null);

        if $r10 == null goto label1;

        $z0 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label1;

        $i0 = <com.snowbee.core.Contact.ContactAPIV1Factory: int EMAIL_ID_COLUMN_INDEX>;

        $l1 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>($i0);

        $i0 = <com.snowbee.core.Contact.ContactAPIV1Factory: int EMAIL_LOOKUP_STRING_COLUMN_INDEX>;

        $r7 = interfaceinvoke $r10.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r6 = staticinvoke <android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>($l1, $r7);

        $r11 = specialinvoke r0.<com.snowbee.core.Contact.ContactAPIV1Factory: com.snowbee.core.Contact.Contact lookupContact(android.content.Context,android.net.Uri,java.lang.String)>($r1, $r6, $r3);

        r4 = $r11;

        $r6 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r3);

        $l1 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r6, $l1);

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r13 = staticinvoke <android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>($r8, $r6);

        if $r13 != null goto label4;

        return null;

     label4:
        $i0 = virtualinvoke $r13.<java.io.InputStream: int available()>();

     label5:
        $r14 = newarray (byte)[$i0];

     label6:
        virtualinvoke $r11.<com.snowbee.core.Contact.Contact: void setAvatarData(byte[])>($r14);

     label7:
        goto label1;

     label8:
        $r15 := @caughtexception;

        goto label1;

        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private android.net.Uri getDataUri(android.content.Context, android.net.Uri)
    {
        com.snowbee.core.Contact.ContactAPIV1Factory r0;
        android.content.Context $r1;
        android.net.Uri $r2;
        long $l1;
        java.lang.IllegalArgumentException $r6;
        java.util.List $r3;
        android.content.ContentResolver $r7;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.snowbee.core.Contact.ContactAPIV1Factory;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.net.Uri;

        $r3 = virtualinvoke $r2.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 < 3 goto label2;

        $r4 = "lookup";

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(1);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 != 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Expecting lookup-style Uri");

        throw $r6;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 3 goto label4;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>($r7, $r2);

     label4:
        $l1 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>($r2);

        $r2 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r2 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r2, $l1);

        $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "data");

        return $r2;
    }

    private com.snowbee.core.Contact.Contact lookupContact(android.content.Context, android.net.Uri, java.lang.String)
    {
        com.snowbee.core.Contact.ContactAPIV1Factory r0;
        android.content.Context $r1;
        byte[] $r10;
        android.net.Uri $r2;
        java.lang.String[] $r6, $r7;
        long $l0;
        com.snowbee.core.Contact.Contact r4;
        android.content.ContentResolver $r5;
        int $i1;
        java.lang.String $r3, $r9;
        android.database.Cursor $r8;
        boolean $z0;

        r0 := @this: com.snowbee.core.Contact.ContactAPIV1Factory;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.net.Uri;

        $r3 := @parameter2: java.lang.String;

        r4 = new com.snowbee.core.Contact.Contact;

        specialinvoke r4.<com.snowbee.core.Contact.Contact: void <init>(java.lang.String)>($r3);

        $r2 = specialinvoke r0.<com.snowbee.core.Contact.ContactAPIV1Factory: android.net.Uri getDataUri(android.content.Context,android.net.Uri)>($r1, $r2);

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = <com.snowbee.core.Contact.ContactAPIV1Factory$DataQuery: java.lang.String[] PROJECTION>;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "vnd.android.cursor.item/photo";

        $r7[1] = "vnd.android.cursor.item/photo";

        $r8 = virtualinvoke $r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, $r6, "mimetype!=? OR (mimetype=? AND _id=photo_id)", $r7, null);

     label1:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label2;

        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToLast()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r8.<android.database.Cursor: java.lang.String getString(int)>(3);

        virtualinvoke r4.<com.snowbee.core.Contact.Contact: void setName(java.lang.String)>($r3);

        $l0 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>(14);

        virtualinvoke r4.<com.snowbee.core.Contact.Contact: void setPersonId(long)>($l0);

        return r4;

     label2:
        $r3 = interfaceinvoke $r8.<android.database.Cursor: java.lang.String getString(int)>(11);

        $r9 = "vnd.android.cursor.item/photo";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("data15");

        $r10 = interfaceinvoke $r8.<android.database.Cursor: byte[] getBlob(int)>($i1);

        virtualinvoke r4.<com.snowbee.core.Contact.Contact: void setAvatarData(byte[])>($r10);

        goto label1;

     label3:
        return r4;
    }

    public com.snowbee.core.Contact.Contact getContactInfoForEmailAddress(java.lang.String)
    {
        com.snowbee.core.Contact.ContactAPIV1Factory r0;
        android.content.Context $r4;
        com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE $r2;
        com.snowbee.core.Contact.Contact $r3;
        java.lang.String $r1;

        r0 := @this: com.snowbee.core.Contact.ContactAPIV1Factory;

        $r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.snowbee.core.Contact.ContactAPIV1Factory: android.content.Context mContext>;

        $r2 = <com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE: com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE EMAIL>;

        $r3 = specialinvoke r0.<com.snowbee.core.Contact.ContactAPIV1Factory: com.snowbee.core.Contact.Contact getContact(android.content.Context,com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE,java.lang.String)>($r4, $r2, $r1);

        return $r3;
    }

    public com.snowbee.core.Contact.Contact getContactInfoForPhoneNumber(java.lang.String)
    {
        com.snowbee.core.Contact.ContactAPIV1Factory r0;
        android.content.Context $r4;
        com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE $r2;
        com.snowbee.core.Contact.Contact $r3;
        java.lang.String $r1;

        r0 := @this: com.snowbee.core.Contact.ContactAPIV1Factory;

        $r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.snowbee.core.Contact.ContactAPIV1Factory: android.content.Context mContext>;

        $r2 = <com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE: com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE NUMBER>;

        $r3 = specialinvoke r0.<com.snowbee.core.Contact.ContactAPIV1Factory: com.snowbee.core.Contact.Contact getContact(android.content.Context,com.snowbee.core.Contact.ContactAPIV1Factory$LOOKUP_TYPE,java.lang.String)>($r4, $r2, $r1);

        return $r3;
    }
}
