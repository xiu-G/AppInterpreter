class com.mobclix.android.sdk.Mobclix$FetchImageThread extends java.lang.Object implements java.lang.Runnable
{
    private android.graphics.Bitmap bmImg;
    private com.mobclix.android.sdk.Mobclix$BitmapHandler handler;
    private java.lang.String imageUrl;

    void <init>(java.lang.String, com.mobclix.android.sdk.Mobclix$BitmapHandler)
    {
        com.mobclix.android.sdk.Mobclix$FetchImageThread r0;
        com.mobclix.android.sdk.Mobclix$BitmapHandler $r2;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix$FetchImageThread;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mobclix.android.sdk.Mobclix$BitmapHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mobclix.android.sdk.Mobclix$FetchImageThread: java.lang.String imageUrl> = $r1;

        r0.<com.mobclix.android.sdk.Mobclix$FetchImageThread: com.mobclix.android.sdk.Mobclix$BitmapHandler handler> = $r2;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r8;
        org.apache.http.HttpEntity $r4;
        com.mobclix.android.sdk.Mobclix$BitmapHandler $r7;
        com.mobclix.android.sdk.Mobclix$FetchImageThread r0;
        com.mobclix.android.sdk.Mobclix$MobclixHttpClient r1;
        android.graphics.Bitmap $r6;
        org.apache.http.HttpResponse $r3;
        java.lang.String $r2;
        java.io.InputStream $r5;

        r0 := @this: com.mobclix.android.sdk.Mobclix$FetchImageThread;

     label1:
        r1 = new com.mobclix.android.sdk.Mobclix$MobclixHttpClient;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix$FetchImageThread: java.lang.String imageUrl>;

        specialinvoke r1.<com.mobclix.android.sdk.Mobclix$MobclixHttpClient: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<com.mobclix.android.sdk.Mobclix$MobclixHttpClient: org.apache.http.HttpResponse execute()>();

        $r4 = interfaceinvoke $r3.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r6 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r5);

        r0.<com.mobclix.android.sdk.Mobclix$FetchImageThread: android.graphics.Bitmap bmImg> = $r6;

        interfaceinvoke $r4.<org.apache.http.HttpEntity: void consumeContent()>();

        $r7 = r0.<com.mobclix.android.sdk.Mobclix$FetchImageThread: com.mobclix.android.sdk.Mobclix$BitmapHandler handler>;

        $r6 = r0.<com.mobclix.android.sdk.Mobclix$FetchImageThread: android.graphics.Bitmap bmImg>;

        virtualinvoke $r7.<com.mobclix.android.sdk.Mobclix$BitmapHandler: void setBitmap(android.graphics.Bitmap)>($r6);

     label2:
        $r7 = r0.<com.mobclix.android.sdk.Mobclix$FetchImageThread: com.mobclix.android.sdk.Mobclix$BitmapHandler handler>;

        virtualinvoke $r7.<com.mobclix.android.sdk.Mobclix$BitmapHandler: boolean sendEmptyMessage(int)>(0);

        return;

     label3:
        $r8 := @caughtexception;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
