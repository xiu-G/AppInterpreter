public final class cs.gson.internal.bind.TypeAdapters extends java.lang.Object
{
    public static final cs.gson.TypeAdapter BIG_DECIMAL;
    public static final cs.gson.TypeAdapter BIG_INTEGER;
    public static final cs.gson.TypeAdapter BIT_SET;
    public static final cs.gson.TypeAdapterFactory BIT_SET_FACTORY;
    public static final cs.gson.TypeAdapter BOOLEAN;
    public static final cs.gson.TypeAdapter BOOLEAN_AS_STRING;
    public static final cs.gson.TypeAdapterFactory BOOLEAN_FACTORY;
    public static final cs.gson.TypeAdapter BYTE;
    public static final cs.gson.TypeAdapterFactory BYTE_FACTORY;
    public static final cs.gson.TypeAdapter CALENDAR;
    public static final cs.gson.TypeAdapterFactory CALENDAR_FACTORY;
    public static final cs.gson.TypeAdapter CHARACTER;
    public static final cs.gson.TypeAdapterFactory CHARACTER_FACTORY;
    public static final cs.gson.TypeAdapter CLASS;
    public static final cs.gson.TypeAdapterFactory CLASS_FACTORY;
    public static final cs.gson.TypeAdapter DOUBLE;
    public static final cs.gson.TypeAdapterFactory ENUM_FACTORY;
    public static final cs.gson.TypeAdapter FLOAT;
    public static final cs.gson.TypeAdapter INET_ADDRESS;
    public static final cs.gson.TypeAdapterFactory INET_ADDRESS_FACTORY;
    public static final cs.gson.TypeAdapter INTEGER;
    public static final cs.gson.TypeAdapterFactory INTEGER_FACTORY;
    public static final cs.gson.TypeAdapter JSON_ELEMENT;
    public static final cs.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY;
    public static final cs.gson.TypeAdapter LOCALE;
    public static final cs.gson.TypeAdapterFactory LOCALE_FACTORY;
    public static final cs.gson.TypeAdapter LONG;
    public static final cs.gson.TypeAdapter NUMBER;
    public static final cs.gson.TypeAdapterFactory NUMBER_FACTORY;
    public static final cs.gson.TypeAdapter SHORT;
    public static final cs.gson.TypeAdapterFactory SHORT_FACTORY;
    public static final cs.gson.TypeAdapter STRING;
    public static final cs.gson.TypeAdapter STRING_BUFFER;
    public static final cs.gson.TypeAdapterFactory STRING_BUFFER_FACTORY;
    public static final cs.gson.TypeAdapter STRING_BUILDER;
    public static final cs.gson.TypeAdapterFactory STRING_BUILDER_FACTORY;
    public static final cs.gson.TypeAdapterFactory STRING_FACTORY;
    public static final cs.gson.TypeAdapterFactory TIMESTAMP_FACTORY;
    public static final cs.gson.TypeAdapter URI;
    public static final cs.gson.TypeAdapterFactory URI_FACTORY;
    public static final cs.gson.TypeAdapter URL;
    public static final cs.gson.TypeAdapterFactory URL_FACTORY;
    public static final cs.gson.TypeAdapter UUID;
    public static final cs.gson.TypeAdapterFactory UUID_FACTORY;

    static void <clinit>()
    {
        cs.gson.internal.bind.TypeAdapters$15 $r17;
        cs.gson.internal.bind.TypeAdapters$14 $r16;
        cs.gson.internal.bind.TypeAdapters$17 $r19;
        cs.gson.internal.bind.TypeAdapters$16 $r18;
        cs.gson.internal.bind.TypeAdapters$11 $r13;
        cs.gson.internal.bind.TypeAdapters$10 $r12;
        cs.gson.internal.bind.TypeAdapters$13 $r15;
        cs.gson.internal.bind.TypeAdapters$12 $r14;
        cs.gson.internal.bind.TypeAdapters$19 $r21;
        cs.gson.internal.bind.TypeAdapters$18 $r20;
        cs.gson.internal.bind.TypeAdapters$20 $r22;
        cs.gson.internal.bind.TypeAdapters$25 $r27;
        cs.gson.TypeAdapterFactory $r2;
        cs.gson.internal.bind.TypeAdapters$22 $r24;
        cs.gson.internal.bind.TypeAdapters$9 $r11;
        cs.gson.internal.bind.TypeAdapters$21 $r23;
        cs.gson.internal.bind.TypeAdapters$24 $r26;
        cs.gson.internal.bind.TypeAdapters$23 $r25;
        cs.gson.internal.bind.TypeAdapters$6 $r8;
        cs.gson.internal.bind.TypeAdapters$5 $r7;
        cs.gson.internal.bind.TypeAdapters$8 $r10;
        cs.gson.internal.bind.TypeAdapters$7 $r9;
        cs.gson.internal.bind.TypeAdapters$2 $r3;
        cs.gson.internal.bind.TypeAdapters$1 $r0;
        cs.gson.internal.bind.TypeAdapters$4 $r5;
        cs.gson.internal.bind.TypeAdapters$3 $r4;
        cs.gson.TypeAdapter $r1;
        java.lang.Class $r6;

        $r0 = new cs.gson.internal.bind.TypeAdapters$1;

        specialinvoke $r0.<cs.gson.internal.bind.TypeAdapters$1: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter CLASS> = $r0;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter CLASS>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/lang/Class;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory CLASS_FACTORY> = $r2;

        $r3 = new cs.gson.internal.bind.TypeAdapters$2;

        specialinvoke $r3.<cs.gson.internal.bind.TypeAdapters$2: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter BIT_SET> = $r3;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter BIT_SET>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/util/BitSet;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory BIT_SET_FACTORY> = $r2;

        $r4 = new cs.gson.internal.bind.TypeAdapters$3;

        specialinvoke $r4.<cs.gson.internal.bind.TypeAdapters$3: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter BOOLEAN> = $r4;

        $r5 = new cs.gson.internal.bind.TypeAdapters$4;

        specialinvoke $r5.<cs.gson.internal.bind.TypeAdapters$4: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter BOOLEAN_AS_STRING> = $r5;

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter BOOLEAN>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,cs.gson.TypeAdapter)>($r6, class "Ljava/lang/Boolean;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory BOOLEAN_FACTORY> = $r2;

        $r7 = new cs.gson.internal.bind.TypeAdapters$5;

        specialinvoke $r7.<cs.gson.internal.bind.TypeAdapters$5: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter BYTE> = $r7;

        $r6 = <java.lang.Byte: java.lang.Class TYPE>;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter BYTE>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,cs.gson.TypeAdapter)>($r6, class "Ljava/lang/Byte;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory BYTE_FACTORY> = $r2;

        $r8 = new cs.gson.internal.bind.TypeAdapters$6;

        specialinvoke $r8.<cs.gson.internal.bind.TypeAdapters$6: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter SHORT> = $r8;

        $r6 = <java.lang.Short: java.lang.Class TYPE>;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter SHORT>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,cs.gson.TypeAdapter)>($r6, class "Ljava/lang/Short;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory SHORT_FACTORY> = $r2;

        $r9 = new cs.gson.internal.bind.TypeAdapters$7;

        specialinvoke $r9.<cs.gson.internal.bind.TypeAdapters$7: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter INTEGER> = $r9;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter INTEGER>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,cs.gson.TypeAdapter)>($r6, class "Ljava/lang/Integer;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory INTEGER_FACTORY> = $r2;

        $r10 = new cs.gson.internal.bind.TypeAdapters$8;

        specialinvoke $r10.<cs.gson.internal.bind.TypeAdapters$8: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter LONG> = $r10;

        $r11 = new cs.gson.internal.bind.TypeAdapters$9;

        specialinvoke $r11.<cs.gson.internal.bind.TypeAdapters$9: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter FLOAT> = $r11;

        $r12 = new cs.gson.internal.bind.TypeAdapters$10;

        specialinvoke $r12.<cs.gson.internal.bind.TypeAdapters$10: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter DOUBLE> = $r12;

        $r13 = new cs.gson.internal.bind.TypeAdapters$11;

        specialinvoke $r13.<cs.gson.internal.bind.TypeAdapters$11: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter NUMBER> = $r13;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter NUMBER>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/lang/Number;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory NUMBER_FACTORY> = $r2;

        $r14 = new cs.gson.internal.bind.TypeAdapters$12;

        specialinvoke $r14.<cs.gson.internal.bind.TypeAdapters$12: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter CHARACTER> = $r14;

        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter CHARACTER>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,cs.gson.TypeAdapter)>($r6, class "Ljava/lang/Character;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory CHARACTER_FACTORY> = $r2;

        $r15 = new cs.gson.internal.bind.TypeAdapters$13;

        specialinvoke $r15.<cs.gson.internal.bind.TypeAdapters$13: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter STRING> = $r15;

        $r16 = new cs.gson.internal.bind.TypeAdapters$14;

        specialinvoke $r16.<cs.gson.internal.bind.TypeAdapters$14: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter BIG_DECIMAL> = $r16;

        $r17 = new cs.gson.internal.bind.TypeAdapters$15;

        specialinvoke $r17.<cs.gson.internal.bind.TypeAdapters$15: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter BIG_INTEGER> = $r17;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter STRING>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/lang/String;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory STRING_FACTORY> = $r2;

        $r18 = new cs.gson.internal.bind.TypeAdapters$16;

        specialinvoke $r18.<cs.gson.internal.bind.TypeAdapters$16: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter STRING_BUILDER> = $r18;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter STRING_BUILDER>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/lang/StringBuilder;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory STRING_BUILDER_FACTORY> = $r2;

        $r19 = new cs.gson.internal.bind.TypeAdapters$17;

        specialinvoke $r19.<cs.gson.internal.bind.TypeAdapters$17: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter STRING_BUFFER> = $r19;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter STRING_BUFFER>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/lang/StringBuffer;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory STRING_BUFFER_FACTORY> = $r2;

        $r20 = new cs.gson.internal.bind.TypeAdapters$18;

        specialinvoke $r20.<cs.gson.internal.bind.TypeAdapters$18: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter URL> = $r20;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter URL>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/net/URL;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory URL_FACTORY> = $r2;

        $r21 = new cs.gson.internal.bind.TypeAdapters$19;

        specialinvoke $r21.<cs.gson.internal.bind.TypeAdapters$19: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter URI> = $r21;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter URI>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/net/URI;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory URI_FACTORY> = $r2;

        $r22 = new cs.gson.internal.bind.TypeAdapters$20;

        specialinvoke $r22.<cs.gson.internal.bind.TypeAdapters$20: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter INET_ADDRESS> = $r22;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter INET_ADDRESS>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/net/InetAddress;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory INET_ADDRESS_FACTORY> = $r2;

        $r23 = new cs.gson.internal.bind.TypeAdapters$21;

        specialinvoke $r23.<cs.gson.internal.bind.TypeAdapters$21: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter UUID> = $r23;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter UUID>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/util/UUID;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory UUID_FACTORY> = $r2;

        $r24 = new cs.gson.internal.bind.TypeAdapters$22;

        specialinvoke $r24.<cs.gson.internal.bind.TypeAdapters$22: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory TIMESTAMP_FACTORY> = $r24;

        $r25 = new cs.gson.internal.bind.TypeAdapters$23;

        specialinvoke $r25.<cs.gson.internal.bind.TypeAdapters$23: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter CALENDAR> = $r25;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter CALENDAR>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/util/Calendar;", class "Ljava/util/GregorianCalendar;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory CALENDAR_FACTORY> = $r2;

        $r26 = new cs.gson.internal.bind.TypeAdapters$24;

        specialinvoke $r26.<cs.gson.internal.bind.TypeAdapters$24: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter LOCALE> = $r26;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter LOCALE>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Ljava/util/Locale;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory LOCALE_FACTORY> = $r2;

        $r27 = new cs.gson.internal.bind.TypeAdapters$25;

        specialinvoke $r27.<cs.gson.internal.bind.TypeAdapters$25: void <init>()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter JSON_ELEMENT> = $r27;

        $r1 = <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapter JSON_ELEMENT>;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,cs.gson.TypeAdapter)>(class "Lcs/gson/JsonElement;", $r1);

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY> = $r2;

        $r2 = staticinvoke <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory newEnumTypeHierarchyFactory()>();

        <cs.gson.internal.bind.TypeAdapters: cs.gson.TypeAdapterFactory ENUM_FACTORY> = $r2;

        return;
    }

    private void <init>()
    {
        cs.gson.internal.bind.TypeAdapters r0;

        r0 := @this: cs.gson.internal.bind.TypeAdapters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static cs.gson.TypeAdapterFactory newEnumTypeHierarchyFactory()
    {
        cs.gson.internal.bind.TypeAdapters$26 $r0;

        $r0 = new cs.gson.internal.bind.TypeAdapters$26;

        specialinvoke $r0.<cs.gson.internal.bind.TypeAdapters$26: void <init>()>();

        return $r0;
    }

    public static cs.gson.TypeAdapterFactory newFactory(cs.gson.reflect.TypeToken, cs.gson.TypeAdapter)
    {
        cs.gson.TypeAdapter r1;
        cs.gson.internal.bind.TypeAdapters$27 $r2;
        cs.gson.reflect.TypeToken r0;

        r0 := @parameter0: cs.gson.reflect.TypeToken;

        r1 := @parameter1: cs.gson.TypeAdapter;

        $r2 = new cs.gson.internal.bind.TypeAdapters$27;

        specialinvoke $r2.<cs.gson.internal.bind.TypeAdapters$27: void <init>(cs.gson.reflect.TypeToken,cs.gson.TypeAdapter)>(r0, r1);

        return $r2;
    }

    public static cs.gson.TypeAdapterFactory newFactory(java.lang.Class, cs.gson.TypeAdapter)
    {
        java.lang.Class r0;
        cs.gson.internal.bind.TypeAdapters$28 $r2;
        cs.gson.TypeAdapter r1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: cs.gson.TypeAdapter;

        $r2 = new cs.gson.internal.bind.TypeAdapters$28;

        specialinvoke $r2.<cs.gson.internal.bind.TypeAdapters$28: void <init>(java.lang.Class,cs.gson.TypeAdapter)>(r0, r1);

        return $r2;
    }

    public static cs.gson.TypeAdapterFactory newFactory(java.lang.Class, java.lang.Class, cs.gson.TypeAdapter)
    {
        cs.gson.TypeAdapter r2;
        java.lang.Class r0, r1;
        cs.gson.internal.bind.TypeAdapters$29 $r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: cs.gson.TypeAdapter;

        $r3 = new cs.gson.internal.bind.TypeAdapters$29;

        specialinvoke $r3.<cs.gson.internal.bind.TypeAdapters$29: void <init>(java.lang.Class,java.lang.Class,cs.gson.TypeAdapter)>(r0, r1, r2);

        return $r3;
    }

    public static cs.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class, java.lang.Class, cs.gson.TypeAdapter)
    {
        cs.gson.TypeAdapter r2;
        java.lang.Class r0, r1;
        cs.gson.internal.bind.TypeAdapters$30 $r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: cs.gson.TypeAdapter;

        $r3 = new cs.gson.internal.bind.TypeAdapters$30;

        specialinvoke $r3.<cs.gson.internal.bind.TypeAdapters$30: void <init>(java.lang.Class,java.lang.Class,cs.gson.TypeAdapter)>(r0, r1, r2);

        return $r3;
    }

    public static cs.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class, cs.gson.TypeAdapter)
    {
        java.lang.Class r0;
        cs.gson.internal.bind.TypeAdapters$31 $r2;
        cs.gson.TypeAdapter r1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: cs.gson.TypeAdapter;

        $r2 = new cs.gson.internal.bind.TypeAdapters$31;

        specialinvoke $r2.<cs.gson.internal.bind.TypeAdapters$31: void <init>(java.lang.Class,cs.gson.TypeAdapter)>(r0, r1);

        return $r2;
    }
}
