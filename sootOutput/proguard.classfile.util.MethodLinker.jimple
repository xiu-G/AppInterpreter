public class proguard.classfile.util.MethodLinker extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor
{
    private final java.util.Map memberMap;

    public void <init>()
    {
        proguard.classfile.util.MethodLinker r0;
        java.util.HashMap $r1;

        r0 := @this: proguard.classfile.util.MethodLinker;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<proguard.classfile.util.MethodLinker: java.util.Map memberMap> = $r1;

        return;
    }

    public static proguard.classfile.Member lastMember(proguard.classfile.Member)
    {
        java.lang.Object $r1;
        proguard.classfile.Member $r0;
        boolean $z0;

        $r0 := @parameter0: proguard.classfile.Member;

     label1:
        $r1 = interfaceinvoke $r0.<proguard.classfile.Member: java.lang.Object getVisitorInfo()>();

        if $r1 == null goto label2;

        $r1 = interfaceinvoke $r0.<proguard.classfile.Member: java.lang.Object getVisitorInfo()>();

        $z0 = $r1 instanceof proguard.classfile.Member;

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke $r0.<proguard.classfile.Member: java.lang.Object getVisitorInfo()>();

        $r0 = (proguard.classfile.Member) $r1;

        goto label1;

     label2:
        return $r0;
    }

    public static proguard.classfile.VisitorAccepter lastVisitorAccepter(proguard.classfile.VisitorAccepter)
    {
        java.lang.Object $r1;
        proguard.classfile.VisitorAccepter $r0;
        boolean $z0;

        $r0 := @parameter0: proguard.classfile.VisitorAccepter;

     label1:
        $r1 = interfaceinvoke $r0.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        if $r1 == null goto label2;

        $r1 = interfaceinvoke $r0.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        $z0 = $r1 instanceof proguard.classfile.VisitorAccepter;

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke $r0.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        $r0 = (proguard.classfile.VisitorAccepter) $r1;

        goto label1;

     label2:
        return $r0;
    }

    private static void link(proguard.classfile.Member, proguard.classfile.Member)
    {
        proguard.classfile.Member $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: proguard.classfile.Member;

        $r1 := @parameter1: proguard.classfile.Member;

        $r0 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.Member lastMember(proguard.classfile.Member)>($r0);

        $r1 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.Member lastMember(proguard.classfile.Member)>($r1);

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $z0 = $r1 instanceof proguard.classfile.LibraryMember;

        if $z0 == 0 goto label1;

        interfaceinvoke $r0.<proguard.classfile.Member: void setVisitorInfo(java.lang.Object)>($r1);

        return;

     label1:
        interfaceinvoke $r1.<proguard.classfile.Member: void setVisitorInfo(java.lang.Object)>($r0);

     label2:
        return;
    }

    public void visitAnyClass(proguard.classfile.Clazz)
    {
        proguard.classfile.util.MethodLinker r0;
        proguard.classfile.Clazz $r1;
        java.util.Map $r4;
        proguard.classfile.visitor.AllMethodVisitor $r2;
        proguard.classfile.visitor.MemberAccessFilter $r3;

        r0 := @this: proguard.classfile.util.MethodLinker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 = new proguard.classfile.visitor.AllMethodVisitor;

        $r3 = new proguard.classfile.visitor.MemberAccessFilter;

        specialinvoke $r3.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(0, 2, r0);

        specialinvoke $r2.<proguard.classfile.visitor.AllMethodVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r3);

        interfaceinvoke $r1.<proguard.classfile.Clazz: void hierarchyAccept(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(1, 1, 1, 0, $r2);

        $r4 = r0.<proguard.classfile.util.MethodLinker: java.util.Map memberMap>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        return;
    }

    public void visitAnyMember(proguard.classfile.Clazz, proguard.classfile.Member)
    {
        proguard.classfile.util.MethodLinker r0;
        proguard.classfile.Member $r2, $r8;
        proguard.classfile.Clazz $r1;
        java.lang.StringBuffer $r5;
        java.util.Map $r6;
        java.lang.Object $r7;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: proguard.classfile.util.MethodLinker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Member;

        $r3 = interfaceinvoke $r2.<proguard.classfile.Member: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r4 = interfaceinvoke $r2.<proguard.classfile.Member: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("<clinit>");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<proguard.classfile.util.MethodLinker: java.util.Map memberMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r8 = (proguard.classfile.Member) $r7;

        if $r8 != null goto label2;

        $r2 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.Member lastMember(proguard.classfile.Member)>($r2);

        $r6 = r0.<proguard.classfile.util.MethodLinker: java.util.Map memberMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);

        return;

     label2:
        staticinvoke <proguard.classfile.util.MethodLinker: void link(proguard.classfile.Member,proguard.classfile.Member)>($r2, $r8);

     label3:
        return;
    }
}
