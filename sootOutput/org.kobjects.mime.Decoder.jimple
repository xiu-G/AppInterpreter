public class org.kobjects.mime.Decoder extends java.lang.Object
{
    java.lang.String boundary;
    char[] buf;
    java.lang.String characterEncoding;
    boolean consumed;
    boolean eof;
    java.util.Hashtable header;
    java.io.InputStream is;

    public void <init>(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        org.kobjects.mime.Decoder r0;
        java.lang.String $r2;
        java.io.InputStream $r1;

        r0 := @this: org.kobjects.mime.Decoder;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.kobjects.mime.Decoder: void <init>(java.io.InputStream,java.lang.String,java.lang.String)>($r1, $r2, null);

        return;
    }

    public void <init>(java.io.InputStream, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.IOException $r6;
        org.kobjects.mime.Decoder r0;
        char[] $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r2, $r3;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.kobjects.mime.Decoder;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = newarray (char)[256];

        r0.<org.kobjects.mime.Decoder: char[] buf> = $r4;

        r0.<org.kobjects.mime.Decoder: java.lang.String characterEncoding> = $r3;

        r0.<org.kobjects.mime.Decoder: java.io.InputStream is> = $r1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.kobjects.mime.Decoder: java.lang.String boundary> = $r2;

     label1:
        $r2 = specialinvoke r0.<org.kobjects.mime.Decoder: java.lang.String readLine()>();

        if $r2 != null goto label2;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF");

        throw $r6;

     label2:
        $r3 = r0.<org.kobjects.mime.Decoder: java.lang.String boundary>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("--");

        if $z0 == 0 goto label3;

        r0.<org.kobjects.mime.Decoder: boolean eof> = 1;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label3:
        r0.<org.kobjects.mime.Decoder: boolean consumed> = 1;

        return;
    }

    public static java.util.Hashtable getHeaderElements(java.lang.String)
    {
        char $c2;
        java.lang.RuntimeException $r7;
        int i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r0, r2, $r4;
        java.util.Hashtable r1, $r5;

        $r0 := @parameter0: java.lang.String;

        r2 = "";

        i0 = 0;

        $r5 = new java.util.Hashtable;

        r1 = $r5;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label1:
        if i0 >= $i1 goto label2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        $i3 = (int) $c2;

        if $i3 > 32 goto label2;

        i0 = i0 + 1;

        goto label1;

     label2:
        if i0 < $i1 goto label3;

        return r1;

     label3:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        $i3 = (int) $c2;

        if $i3 != 34 goto label5;

        i0 = i0 + 1;

        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(34, i0);

        $i4 = -1;

        if $i3 != $i4 goto label4;

        $r7 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End quote expected in ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r0);

        throw $r7;

     label4:
        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r4);

        i0 = $i3 + 2;

        if i0 >= $i1 goto label8;

        $i3 = -1;

        $i3 = i0 + $i3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i3 = (int) $c2;

        if $i3 == 59 goto label7;

        $r7 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expected in ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r0);

        throw $r7;

     label5:
        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(59, i0);

        $i4 = -1;

        if $i3 != $i4 goto label6;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(i0);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r0);

        return r1;

     label6:
        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r4);

        i0 = $i3 + 1;

     label7:
        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(61, i0);

        $i4 = -1;

        if $i3 == $i4 goto label8;

        r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        i0 = $i3 + 1;

        goto label1;

     label8:
        return r1;
    }

    private final java.lang.String readLine() throws java.io.IOException
    {
        char $c3;
        org.kobjects.mime.Decoder r0;
        int i0, $i1, i2;
        char[] r1, $r3, $r4;
        java.lang.String $r5;
        java.io.InputStream $r2;

        r0 := @this: org.kobjects.mime.Decoder;

        i2 = 0;

     label1:
        $r2 = r0.<org.kobjects.mime.Decoder: java.io.InputStream is>;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        i0 = -1;

        if $i1 != i0 goto label2;

        if i2 != 0 goto label2;

        return null;

     label2:
        i0 = -1;

        if $i1 == i0 goto label3;

        if $i1 != 10 goto label4;

     label3:
        $r5 = new java.lang.String;

        r1 = r0.<org.kobjects.mime.Decoder: char[] buf>;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i2);

        return $r5;

     label4:
        if $i1 == 13 goto label1;

        r1 = r0.<org.kobjects.mime.Decoder: char[] buf>;

        i0 = lengthof r1;

        if i2 < i0 goto label5;

        r1 = r0.<org.kobjects.mime.Decoder: char[] buf>;

        i0 = lengthof r1;

        i0 = i0 * 3;

        i0 = i0 / 2;

        r1 = newarray (char)[i0];

        $r3 = r0.<org.kobjects.mime.Decoder: char[] buf>;

        $r4 = r0.<org.kobjects.mime.Decoder: char[] buf>;

        i0 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, i0);

        r0.<org.kobjects.mime.Decoder: char[] buf> = r1;

     label5:
        r1 = r0.<org.kobjects.mime.Decoder: char[] buf>;

        $c3 = (char) $i1;

        r1[i2] = $c3;

        i2 = i2 + 1;

        goto label1;
    }

    public java.lang.String getHeader(java.lang.String)
    {
        org.kobjects.mime.Decoder r0;
        java.lang.Object $r3;
        java.lang.String $r1;
        java.util.Hashtable $r2;

        r0 := @this: org.kobjects.mime.Decoder;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.kobjects.mime.Decoder: java.util.Hashtable header>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        return $r1;
    }

    public java.util.Enumeration getHeaderNames()
    {
        org.kobjects.mime.Decoder r0;
        java.util.Enumeration $r1;
        java.util.Hashtable $r2;

        r0 := @this: org.kobjects.mime.Decoder;

        $r2 = r0.<org.kobjects.mime.Decoder: java.util.Hashtable header>;

        $r1 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r1;
    }

    public boolean next() throws java.io.IOException
    {
        java.io.IOException $r7;
        org.kobjects.mime.Decoder r0;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r2, $r4;
        java.util.Hashtable $r1, $r5;
        boolean $z0;

        r0 := @this: org.kobjects.mime.Decoder;

        $z0 = r0.<org.kobjects.mime.Decoder: boolean consumed>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.kobjects.mime.Decoder: void readContent(java.io.OutputStream)>(null);

     label1:
        $z0 = r0.<org.kobjects.mime.Decoder: boolean eof>;

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<org.kobjects.mime.Decoder: java.util.Hashtable header> = $r5;

     label3:
        $r2 = specialinvoke r0.<org.kobjects.mime.Decoder: java.lang.String readLine()>();

        if $r2 == null goto label4;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label5;

     label4:
        r0.<org.kobjects.mime.Decoder: boolean consumed> = 0;

        return 1;

     label5:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(58);

        $i1 = -1;

        if $i0 != $i1 goto label6;

        $r7 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("colon missing in multipart header line: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r7;

     label6:
        $r1 = r0.<org.kobjects.mime.Decoder: java.util.Hashtable header>;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = $i0 + 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r2);

        goto label3;
    }

    public java.lang.String readContent() throws java.io.IOException
    {
        org.kobjects.mime.Decoder r0;
        java.io.PrintStream $r4;
        byte[] $r3;
        java.io.ByteArrayOutputStream r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r2, $r6;

        r0 := @this: org.kobjects.mime.Decoder;

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r0.<org.kobjects.mime.Decoder: void readContent(java.io.OutputStream)>(r1);

        $r2 = r0.<org.kobjects.mime.Decoder: java.lang.String characterEncoding>;

        if $r2 != null goto label2;

        $r2 = new java.lang.String;

        $r3 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

     label1:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field content: \'");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return $r2;

     label2:
        $r2 = new java.lang.String;

        $r3 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r6 = r0.<org.kobjects.mime.Decoder: java.lang.String characterEncoding>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, $r6);

        goto label1;
    }

    public void readContent(java.io.OutputStream) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r8;
        org.kobjects.mime.Decoder r0;
        byte $b5;
        int i0, $i1, i4, $i6;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;
        java.io.OutputStream $r1;
        char $c2, $c3;
        java.io.IOException $r9;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r5, $r10;
        java.io.InputStream $r6;

        r0 := @this: org.kobjects.mime.Decoder;

        $r1 := @parameter0: java.io.OutputStream;

        $z0 = r0.<org.kobjects.mime.Decoder: boolean consumed>;

        if $z0 == 0 goto label01;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Content already consumed!");

        throw $r7;

     label01:
        virtualinvoke r0.<org.kobjects.mime.Decoder: java.lang.String getHeader(java.lang.String)>("Content-Type");

        $r2 = "base64";

        $r3 = virtualinvoke r0.<org.kobjects.mime.Decoder: java.lang.String getHeader(java.lang.String)>("Content-Transfer-Encoding");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label07;

        $r8 = new java.io.ByteArrayOutputStream;

        specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>();

     label02:
        $r2 = specialinvoke r0.<org.kobjects.mime.Decoder: java.lang.String readLine()>();

        $r3 = $r2;

        if $r2 != null goto label03;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF");

        throw $r9;

     label03:
        $r4 = r0.<org.kobjects.mime.Decoder: java.lang.String boundary>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label06;

     label04:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("--");

        if $z0 == 0 goto label05;

        r0.<org.kobjects.mime.Decoder: boolean eof> = 1;

     label05:
        r0.<org.kobjects.mime.Decoder: boolean consumed> = 1;

        return;

     label06:
        staticinvoke <org.kobjects.base64.Base64: void decode(java.lang.String,java.io.OutputStream)>($r2, $r1);

        goto label02;

     label07:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r2 = r0.<org.kobjects.mime.Decoder: java.lang.String boundary>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = 0;

     label08:
        $r6 = r0.<org.kobjects.mime.Decoder: java.io.InputStream is>;

        $i1 = virtualinvoke $r6.<java.io.InputStream: int read()>();

        i4 = -1;

        if $i1 != i4 goto label09;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unexpected EOF");

        throw $r7;

     label09:
        $c2 = (char) $i1;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i0);

        i4 = (int) $c2;

        $i6 = (int) $c3;

        if i4 != $i6 goto label10;

        i0 = i0 + 1;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i0 != $i1 goto label08;

        $r3 = specialinvoke r0.<org.kobjects.mime.Decoder: java.lang.String readLine()>();

        goto label04;

     label10:
        if i0 <= 0 goto label13;

        i4 = 0;

     label11:
        if i4 >= i0 goto label12;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i4);

        $b5 = (byte) $c2;

        $i6 = (int) $b5;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i6);

        i4 = i4 + 1;

        goto label11;

     label12:
        $c2 = (char) $i1;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        i0 = (int) $c2;

        i4 = (int) $c3;

        if i0 != i4 goto label14;

        i0 = 1;

     label13:
        if i0 != 0 goto label08;

        $b5 = (byte) $i1;

        $i1 = (int) $b5;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i1);

        goto label08;

     label14:
        i0 = 0;

        goto label13;
    }
}
