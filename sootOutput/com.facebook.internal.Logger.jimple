public class com.facebook.internal.Logger extends java.lang.Object
{
    public static final java.lang.String LOG_TAG_BASE;
    private static final java.util.HashMap stringsToReplace;
    private final com.facebook.LoggingBehavior behavior;
    private java.lang.StringBuilder contents;
    private int priority;
    private final java.lang.String tag;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <com.facebook.internal.Logger: java.lang.String LOG_TAG_BASE> = "FacebookSDK.";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.facebook.internal.Logger: java.util.HashMap stringsToReplace> = $r0;

        return;
    }

    public void <init>(com.facebook.LoggingBehavior, java.lang.String)
    {
        com.facebook.internal.Logger r0;
        com.facebook.LoggingBehavior $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;

        r0 := @this: com.facebook.internal.Logger;

        $r1 := @parameter0: com.facebook.LoggingBehavior;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.facebook.internal.Logger: int priority> = 3;

        staticinvoke <com.facebook.internal.Validate: void notNullOrEmpty(java.lang.String,java.lang.String)>("Request", "tag");

        r0.<com.facebook.internal.Logger: com.facebook.LoggingBehavior behavior> = $r1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("FacebookSDK.");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.facebook.internal.Logger: java.lang.String tag> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0.<com.facebook.internal.Logger: java.lang.StringBuilder contents> = $r3;

        return;
    }

    public static void log(com.facebook.LoggingBehavior, int, java.lang.String, java.lang.String)
    {
        java.lang.Exception $r5;
        com.facebook.LoggingBehavior $r0, $r4;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: com.facebook.LoggingBehavior;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.String;

        $z0 = staticinvoke <com.facebook.Settings: boolean isLoggingBehaviorEnabled(com.facebook.LoggingBehavior)>($r0);

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <com.facebook.internal.Logger: java.lang.String replaceStrings(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("FacebookSDK.");

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("FacebookSDK.");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r2, $r1);

        $r4 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior DEVELOPER_ERRORS>;

        if $r0 != $r4 goto label2;

        $r5 = new java.lang.Exception;

        specialinvoke $r5.<java.lang.Exception: void <init>()>();

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

     label2:
        return;
    }

    public static void log(com.facebook.LoggingBehavior, java.lang.String, java.lang.String)
    {
        com.facebook.LoggingBehavior $r0;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: com.facebook.LoggingBehavior;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,int,java.lang.String,java.lang.String)>($r0, 3, $r1, $r2);

        return;
    }

    public static transient void log(com.facebook.LoggingBehavior, java.lang.String, java.lang.String, java.lang.Object[])
    {
        com.facebook.LoggingBehavior $r0;
        java.lang.Object[] $r3;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: com.facebook.LoggingBehavior;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.Object[];

        $z0 = staticinvoke <com.facebook.Settings: boolean isLoggingBehaviorEnabled(com.facebook.LoggingBehavior)>($r0);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, $r3);

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,int,java.lang.String,java.lang.String)>($r0, 3, $r1, $r2);

     label1:
        return;
    }

    public static void registerAccessToken(java.lang.String)
    {
        java.lang.Throwable $r2;
        com.facebook.LoggingBehavior $r1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        entermonitor class "Lcom/facebook/internal/Logger;";

     label1:
        $r1 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior INCLUDE_ACCESS_TOKENS>;

        $z0 = staticinvoke <com.facebook.Settings: boolean isLoggingBehaviorEnabled(com.facebook.LoggingBehavior)>($r1);

        if $z0 != 0 goto label2;

        staticinvoke <com.facebook.internal.Logger: void registerStringToReplace(java.lang.String,java.lang.String)>($r0, "ACCESS_TOKEN_REMOVED");

     label2:
        exitmonitor class "Lcom/facebook/internal/Logger;";

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/facebook/internal/Logger;";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void registerStringToReplace(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r3;
        java.util.HashMap $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "Lcom/facebook/internal/Logger;";

     label1:
        $r2 = <com.facebook.internal.Logger: java.util.HashMap stringsToReplace>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, "ACCESS_TOKEN_REMOVED");

     label2:
        exitmonitor class "Lcom/facebook/internal/Logger;";

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/facebook/internal/Logger;";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static java.lang.String replaceStrings(java.lang.String)
    {
        java.lang.Throwable $r8;
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.lang.CharSequence $r6, $r7;
        java.util.Set $r2;
        java.util.HashMap $r1;
        java.lang.Object $r4;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        entermonitor class "Lcom/facebook/internal/Logger;";

     label1:
        $r1 = <com.facebook.internal.Logger: java.util.HashMap stringsToReplace>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 != 0 goto label4;

        exitmonitor class "Lcom/facebook/internal/Logger;";

        return $r0;

     label4:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.CharSequence) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.CharSequence) $r4;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r6, $r7);

     label5:
        goto label2;

     label6:
        $r8 := @caughtexception;

        exitmonitor class "Lcom/facebook/internal/Logger;";

        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private boolean shouldLog()
    {
        com.facebook.internal.Logger r0;
        com.facebook.LoggingBehavior $r1;
        boolean $z0;

        r0 := @this: com.facebook.internal.Logger;

        $r1 = r0.<com.facebook.internal.Logger: com.facebook.LoggingBehavior behavior>;

        $z0 = staticinvoke <com.facebook.Settings: boolean isLoggingBehaviorEnabled(com.facebook.LoggingBehavior)>($r1);

        return $z0;
    }

    public void append(java.lang.String)
    {
        com.facebook.internal.Logger r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.facebook.internal.Logger;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.facebook.internal.Logger: boolean shouldLog()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.facebook.internal.Logger: java.lang.StringBuilder contents>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label1:
        return;
    }

    public transient void append(java.lang.String, java.lang.Object[])
    {
        com.facebook.internal.Logger r0;
        java.lang.Object[] $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.facebook.internal.Logger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        $z0 = specialinvoke r0.<com.facebook.internal.Logger: boolean shouldLog()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.facebook.internal.Logger: java.lang.StringBuilder contents>;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  %s:\t%s\n", $r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label1:
        return;
    }

    public void append(java.lang.StringBuilder)
    {
        com.facebook.internal.Logger r0;
        java.lang.StringBuilder $r1, $r2;
        boolean $z0;

        r0 := @this: com.facebook.internal.Logger;

        $r1 := @parameter0: java.lang.StringBuilder;

        $z0 = specialinvoke r0.<com.facebook.internal.Logger: boolean shouldLog()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.facebook.internal.Logger: java.lang.StringBuilder contents>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r1);

     label1:
        return;
    }

    public void appendKeyValue(java.lang.String, java.lang.Object)
    {
        com.facebook.internal.Logger r0;
        java.lang.Object[] $r3;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: com.facebook.internal.Logger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r1;

        $r3[1] = $r2;

        virtualinvoke r0.<com.facebook.internal.Logger: void append(java.lang.String,java.lang.Object[])>("  %s:\t%s\n", $r3);

        return;
    }

    public java.lang.String getContents()
    {
        com.facebook.internal.Logger r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.facebook.internal.Logger;

        $r1 = r0.<com.facebook.internal.Logger: java.lang.StringBuilder contents>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <com.facebook.internal.Logger: java.lang.String replaceStrings(java.lang.String)>($r2);

        return $r2;
    }

    public int getPriority()
    {
        com.facebook.internal.Logger r0;
        int i0;

        r0 := @this: com.facebook.internal.Logger;

        i0 = r0.<com.facebook.internal.Logger: int priority>;

        return i0;
    }

    public void log()
    {
        com.facebook.internal.Logger r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;

        r0 := @this: com.facebook.internal.Logger;

        $r2 = r0.<com.facebook.internal.Logger: java.lang.StringBuilder contents>;

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.facebook.internal.Logger: void logString(java.lang.String)>($r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r0.<com.facebook.internal.Logger: java.lang.StringBuilder contents> = $r2;

        return;
    }

    public void logString(java.lang.String)
    {
        com.facebook.internal.Logger r0;
        com.facebook.LoggingBehavior $r2;
        int $i0;
        java.lang.String $r1, $r3;

        r0 := @this: com.facebook.internal.Logger;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.facebook.internal.Logger: com.facebook.LoggingBehavior behavior>;

        $i0 = r0.<com.facebook.internal.Logger: int priority>;

        $r3 = r0.<com.facebook.internal.Logger: java.lang.String tag>;

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,int,java.lang.String,java.lang.String)>($r2, $i0, $r3, $r1);

        return;
    }

    public void setPriority(int)
    {
        com.facebook.internal.Logger r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Integer $r2, $r3;

        r0 := @this: com.facebook.internal.Logger;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1 = newarray (java.lang.Object)[6];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r1[0] = $r3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r1[1] = $r3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r1[2] = $r3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r1[3] = $r3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r1[4] = $r3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r1[5] = $r3;

        staticinvoke <com.facebook.internal.Validate: void oneOf(java.lang.Object,java.lang.String,java.lang.Object[])>($r2, "value", $r1);

        r0.<com.facebook.internal.Logger: int priority> = $i0;

        return;
    }
}
