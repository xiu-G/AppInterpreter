public class proguard.optimize.info.CaughtClassMarker extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor
{

    public void <init>()
    {
        proguard.optimize.info.CaughtClassMarker r0;

        r0 := @this: proguard.optimize.info.CaughtClassMarker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isCaught(proguard.classfile.Clazz)
    {
        proguard.optimize.info.ClassOptimizationInfo $r1;
        proguard.classfile.Clazz $r0;
        boolean $z0;

        $r0 := @parameter0: proguard.classfile.Clazz;

        $r1 = staticinvoke <proguard.optimize.info.ClassOptimizationInfo: proguard.optimize.info.ClassOptimizationInfo getClassOptimizationInfo(proguard.classfile.Clazz)>($r0);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<proguard.optimize.info.ClassOptimizationInfo: boolean isCaught()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static void setCaught(proguard.classfile.Clazz)
    {
        proguard.optimize.info.ClassOptimizationInfo $r1;
        proguard.classfile.Clazz $r0;

        $r0 := @parameter0: proguard.classfile.Clazz;

        $r1 = staticinvoke <proguard.optimize.info.ClassOptimizationInfo: proguard.optimize.info.ClassOptimizationInfo getClassOptimizationInfo(proguard.classfile.Clazz)>($r0);

        if $r1 == null goto label1;

        virtualinvoke $r1.<proguard.optimize.info.ClassOptimizationInfo: void setCaught()>();

     label1:
        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.optimize.info.CaughtClassMarker r0;

        r0 := @this: proguard.optimize.info.CaughtClassMarker;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.ProgramClass $r1;
        proguard.optimize.info.CaughtClassMarker r0;

        r0 := @this: proguard.optimize.info.CaughtClassMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        staticinvoke <proguard.optimize.info.CaughtClassMarker: void setCaught(proguard.classfile.Clazz)>($r1);

        return;
    }
}
