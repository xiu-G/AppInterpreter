public final class twitter4j.TwitterObjectFactory extends java.lang.Object
{
    private static final java.lang.ThreadLocal rawJsonMap;
    private static boolean registeredAtleastOnce;

    static void <clinit>()
    {
        twitter4j.TwitterObjectFactory$1 $r0;

        $r0 = new twitter4j.TwitterObjectFactory$1;

        specialinvoke $r0.<twitter4j.TwitterObjectFactory$1: void <init>()>();

        <twitter4j.TwitterObjectFactory: java.lang.ThreadLocal rawJsonMap> = $r0;

        <twitter4j.TwitterObjectFactory: boolean registeredAtleastOnce> = 0;

        return;
    }

    private void <init>()
    {
        java.lang.AssertionError $r1;
        twitter4j.TwitterObjectFactory r0;

        r0 := @this: twitter4j.TwitterObjectFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("not intended to be instantiated.");

        throw $r1;
    }

    static void clearThreadLocalMap()
    {
        java.lang.Object $r0;
        java.lang.ThreadLocal $r1;
        java.util.Map $r2;

        $r1 = <twitter4j.TwitterObjectFactory: java.lang.ThreadLocal rawJsonMap>;

        $r0 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (java.util.Map) $r0;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        return;
    }

    public static twitter4j.AccountTotals createAccountTotals(java.lang.String)
    {
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.AccountTotalsJSONImpl $r1;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.AccountTotalsJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.AccountTotalsJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static twitter4j.Category createCategory(java.lang.String)
    {
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.CategoryJSONImpl $r1;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.CategoryJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.CategoryJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static twitter4j.DirectMessage createDirectMessage(java.lang.String)
    {
        twitter4j.DirectMessageJSONImpl $r1;
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.DirectMessageJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.DirectMessageJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static twitter4j.IDs createIDs(java.lang.String)
    {
        twitter4j.IDsJSONImpl $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.IDsJSONImpl;

        specialinvoke $r1.<twitter4j.IDsJSONImpl: void <init>(java.lang.String)>($r0);

        return $r1;
    }

    public static twitter4j.Location createLocation(java.lang.String)
    {
        twitter4j.LocationJSONImpl $r1;
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.LocationJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.LocationJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static twitter4j.OEmbed createOEmbed(java.lang.String)
    {
        twitter4j.OEmbedJSONImpl $r1;
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.OEmbedJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.OEmbedJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static java.lang.Object createObject(java.lang.String)
    {
        twitter4j.DirectMessageJSONImpl $r4;
        twitter4j.JSONObjectType$Type $r2;
        twitter4j.StatusDeletionNoticeImpl $r8;
        int[] $r3;
        twitter4j.JSONObject $r1, $r5;
        int $i0;
        twitter4j.TwitterException $r10;
        java.lang.Object $r6;
        java.lang.String $r0;
        twitter4j.StatusJSONImpl $r7;
        twitter4j.JSONException $r9;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.JSONObject;

     label01:
        specialinvoke $r1.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        $r2 = staticinvoke <twitter4j.JSONObjectType: twitter4j.JSONObjectType$Type determine(twitter4j.JSONObject)>($r1);

     label02:
        $r3 = <twitter4j.TwitterObjectFactory$2: int[] $SwitchMap$twitter4j$JSONObjectType$Type>;

     label03:
        $i0 = virtualinvoke $r2.<twitter4j.JSONObjectType$Type: int ordinal()>();

     label04:
        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label06;
            case 2: goto label09;
            case 3: goto label12;
            case 4: goto label15;
            case 5: goto label05;
            case 6: goto label05;
            default: goto label05;
        };

     label05:
        return $r1;

     label06:
        $r4 = new twitter4j.DirectMessageJSONImpl;

     label07:
        $r5 = virtualinvoke $r1.<twitter4j.JSONObject: twitter4j.JSONObject getJSONObject(java.lang.String)>("direct_message");

        specialinvoke $r4.<twitter4j.DirectMessageJSONImpl: void <init>(twitter4j.JSONObject)>($r5);

        $r6 = staticinvoke <twitter4j.TwitterObjectFactory: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r4, $r1);

     label08:
        return $r6;

     label09:
        $r7 = new twitter4j.StatusJSONImpl;

     label10:
        specialinvoke $r7.<twitter4j.StatusJSONImpl: void <init>(twitter4j.JSONObject)>($r1);

        $r6 = staticinvoke <twitter4j.TwitterObjectFactory: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r7, $r1);

     label11:
        return $r6;

     label12:
        $r4 = new twitter4j.DirectMessageJSONImpl;

     label13:
        $r5 = virtualinvoke $r1.<twitter4j.JSONObject: twitter4j.JSONObject getJSONObject(java.lang.String)>("direct_message");

        specialinvoke $r4.<twitter4j.DirectMessageJSONImpl: void <init>(twitter4j.JSONObject)>($r5);

        $r6 = staticinvoke <twitter4j.TwitterObjectFactory: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r4, $r1);

     label14:
        return $r6;

     label15:
        $r8 = new twitter4j.StatusDeletionNoticeImpl;

     label16:
        $r5 = virtualinvoke $r1.<twitter4j.JSONObject: twitter4j.JSONObject getJSONObject(java.lang.String)>("delete");

        $r5 = virtualinvoke $r5.<twitter4j.JSONObject: twitter4j.JSONObject getJSONObject(java.lang.String)>("status");

        specialinvoke $r8.<twitter4j.StatusDeletionNoticeImpl: void <init>(twitter4j.JSONObject)>($r5);

        $r6 = staticinvoke <twitter4j.TwitterObjectFactory: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r8, $r1);

     label17:
        return $r6;

     label18:
        $r9 := @caughtexception;

        $r10 = new twitter4j.TwitterException;

        specialinvoke $r10.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

        catch twitter4j.JSONException from label01 to label02 with label18;
        catch twitter4j.JSONException from label03 to label04 with label18;
        catch twitter4j.JSONException from label07 to label08 with label18;
        catch twitter4j.JSONException from label10 to label11 with label18;
        catch twitter4j.JSONException from label13 to label14 with label18;
        catch twitter4j.JSONException from label16 to label17 with label18;
    }

    public static twitter4j.Place createPlace(java.lang.String)
    {
        twitter4j.PlaceJSONImpl $r1;
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.PlaceJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.PlaceJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static java.util.Map createRateLimitStatus(java.lang.String)
    {
        java.util.Map $r2;
        twitter4j.JSONObject $r3;
        twitter4j.TwitterException $r1;
        java.lang.String $r0;
        twitter4j.JSONException $r4;

        $r0 := @parameter0: java.lang.String;

        $r3 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r3.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        $r2 = staticinvoke <twitter4j.RateLimitStatusJSONImpl: java.util.Map createRateLimitStatuses(twitter4j.JSONObject)>($r3);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r1 = new twitter4j.TwitterException;

        specialinvoke $r1.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r4);

        throw $r1;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static twitter4j.Relationship createRelationship(java.lang.String)
    {
        twitter4j.RelationshipJSONImpl $r1;
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.RelationshipJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.RelationshipJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static twitter4j.SavedSearch createSavedSearch(java.lang.String)
    {
        twitter4j.SavedSearchJSONImpl $r1;
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.SavedSearchJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.SavedSearchJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static twitter4j.Status createStatus(java.lang.String)
    {
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.StatusJSONImpl $r1;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.StatusJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.StatusJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static twitter4j.Trend createTrend(java.lang.String)
    {
        twitter4j.JSONObject $r2;
        twitter4j.TrendJSONImpl $r1;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.TrendJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.TrendJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static twitter4j.Trends createTrends(java.lang.String)
    {
        java.lang.String $r0;
        twitter4j.TrendsJSONImpl $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.TrendsJSONImpl;

        specialinvoke $r1.<twitter4j.TrendsJSONImpl: void <init>(java.lang.String)>($r0);

        return $r1;
    }

    public static twitter4j.User createUser(java.lang.String)
    {
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        twitter4j.UserJSONImpl $r1;
        java.lang.String $r0;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static twitter4j.UserList createUserList(java.lang.String)
    {
        twitter4j.UserListJSONImpl $r1;
        twitter4j.JSONObject $r2;
        twitter4j.TwitterException $r4;
        java.lang.String $r0;
        twitter4j.JSONException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new twitter4j.UserListJSONImpl;

        $r2 = new twitter4j.JSONObject;

     label1:
        specialinvoke $r2.<twitter4j.JSONObject: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<twitter4j.UserListJSONImpl: void <init>(twitter4j.JSONObject)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r4;

        catch twitter4j.JSONException from label1 to label2 with label3;
    }

    public static java.lang.String getRawJSON(java.lang.Object)
    {
        java.lang.IllegalStateException $r1;
        java.lang.ThreadLocal $r2;
        java.util.Map $r4;
        java.lang.Object $r0, $r3;
        java.lang.String $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $z0 = <twitter4j.TwitterObjectFactory: boolean registeredAtleastOnce>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Apparently jsonStoreEnabled is not set to true.");

        throw $r1;

     label1:
        $r2 = <twitter4j.TwitterObjectFactory: java.lang.ThreadLocal rawJsonMap>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (java.util.Map) $r3;

        $r0 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $z0 = $r0 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r5 = (java.lang.String) $r0;

        return $r5;

     label2:
        if $r0 == null goto label3;

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        return $r5;

     label3:
        return null;
    }

    static java.lang.Object registerJSONObject(java.lang.Object, java.lang.Object)
    {
        java.lang.ThreadLocal $r3;
        java.util.Map $r4;
        java.lang.Object $r0, $r1, $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        <twitter4j.TwitterObjectFactory: boolean registeredAtleastOnce> = 1;

        $r3 = <twitter4j.TwitterObjectFactory: java.lang.ThreadLocal rawJsonMap>;

        $r2 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (java.util.Map) $r2;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $r0;
    }
}
