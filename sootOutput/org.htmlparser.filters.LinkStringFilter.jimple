public class org.htmlparser.filters.LinkStringFilter extends java.lang.Object implements org.htmlparser.NodeFilter
{
    protected java.lang.String a;
    protected boolean b;

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        org.htmlparser.filters.LinkStringFilter r0;

        r0 := @this: org.htmlparser.filters.LinkStringFilter;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.htmlparser.filters.LinkStringFilter: void <init>(java.lang.String,boolean)>($r1, 0);

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        java.lang.String $r1;
        org.htmlparser.filters.LinkStringFilter r0;
        boolean $z0;

        r0 := @this: org.htmlparser.filters.LinkStringFilter;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.htmlparser.filters.LinkStringFilter: java.lang.String a> = $r1;

        r0.<org.htmlparser.filters.LinkStringFilter: boolean b> = $z0;

        return;
    }

    public boolean accept(org.htmlparser.Node)
    {
        org.htmlparser.filters.LinkStringFilter r0;
        org.htmlparser.Node $r1;
        org.htmlparser.tags.LinkTag $r4;
        int $i0;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: org.htmlparser.filters.LinkStringFilter;

        $r1 := @parameter0: org.htmlparser.Node;

        $r2 = class "Lorg/htmlparser/tags/LinkTag;";

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 == 0 goto label2;

        $r4 = (org.htmlparser.tags.LinkTag) $r1;

        $r5 = virtualinvoke $r4.<org.htmlparser.tags.LinkTag: java.lang.String getLink()>();

        $z0 = r0.<org.htmlparser.filters.LinkStringFilter: boolean b>;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.htmlparser.filters.LinkStringFilter: java.lang.String a>;

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>($r6);

        if $i0 < 0 goto label2;

        return 1;

     label1:
        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase()>();

        $r6 = r0.<org.htmlparser.filters.LinkStringFilter: java.lang.String a>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toUpperCase()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>($r6);

        if $i0 < 0 goto label2;

        return 1;

     label2:
        return 0;
    }
}
