public class com.tencent.open.utils.AsynLoadImg extends java.lang.Object
{
    private static java.lang.String c;
    private java.lang.String a;
    private com.tencent.open.utils.AsynLoadImgBack b;
    private long d;
    private android.os.Handler e;
    private java.lang.Runnable f;

    public void <init>(android.app.Activity)
    {
        com.tencent.open.utils.AsynLoadImg r0;
        android.os.Looper $r2;
        android.app.Activity $r1;
        com.tencent.open.utils.AsynLoadImg$2 $r3;
        com.tencent.open.utils.AsynLoadImg$1 $r4;

        r0 := @this: com.tencent.open.utils.AsynLoadImg;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.tencent.open.utils.AsynLoadImg$2;

        specialinvoke $r3.<com.tencent.open.utils.AsynLoadImg$2: void <init>(com.tencent.open.utils.AsynLoadImg)>(r0);

        r0.<com.tencent.open.utils.AsynLoadImg: java.lang.Runnable f> = $r3;

        $r4 = new com.tencent.open.utils.AsynLoadImg$1;

        $r2 = virtualinvoke $r1.<android.app.Activity: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<com.tencent.open.utils.AsynLoadImg$1: void <init>(com.tencent.open.utils.AsynLoadImg,android.os.Looper)>(r0, $r2);

        r0.<com.tencent.open.utils.AsynLoadImg: android.os.Handler e> = $r4;

        return;
    }

    static com.tencent.open.utils.AsynLoadImgBack a(com.tencent.open.utils.AsynLoadImg)
    {
        com.tencent.open.utils.AsynLoadImgBack r1;
        com.tencent.open.utils.AsynLoadImg $r0;

        $r0 := @parameter0: com.tencent.open.utils.AsynLoadImg;

        r1 = $r0.<com.tencent.open.utils.AsynLoadImg: com.tencent.open.utils.AsynLoadImgBack b>;

        return r1;
    }

    static java.lang.String a()
    {
        java.lang.String r0;

        r0 = <com.tencent.open.utils.AsynLoadImg: java.lang.String c>;

        return r0;
    }

    static java.lang.String b(com.tencent.open.utils.AsynLoadImg)
    {
        java.lang.String r1;
        com.tencent.open.utils.AsynLoadImg $r0;

        $r0 := @parameter0: com.tencent.open.utils.AsynLoadImg;

        r1 = $r0.<com.tencent.open.utils.AsynLoadImg: java.lang.String a>;

        return r1;
    }

    static android.os.Handler c(com.tencent.open.utils.AsynLoadImg)
    {
        com.tencent.open.utils.AsynLoadImg $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.tencent.open.utils.AsynLoadImg;

        r1 = $r0.<com.tencent.open.utils.AsynLoadImg: android.os.Handler e>;

        return r1;
    }

    static long d(com.tencent.open.utils.AsynLoadImg)
    {
        long l0;
        com.tencent.open.utils.AsynLoadImg $r0;

        $r0 := @parameter0: com.tencent.open.utils.AsynLoadImg;

        l0 = $r0.<com.tencent.open.utils.AsynLoadImg: long d>;

        return l0;
    }

    public static android.graphics.Bitmap getbitmap(java.lang.String)
    {
        java.net.HttpURLConnection $r5;
        java.lang.Throwable $r8;
        java.net.URL $r3, $r10;
        java.io.IOException $r11;
        java.net.URLConnection $r4;
        android.graphics.Bitmap $r7;
        java.lang.StringBuilder $r1, $r9;
        java.lang.String $r0, $r2;
        java.io.InputStream $r6;

        $r0 := @parameter0: java.lang.String;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getbitmap:");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tencent.open.a.b: void a(java.lang.String,java.lang.String)>("AsynLoadImg", $r2);

        $r10 = new java.net.URL;

        $r3 = $r10;

     label1:
        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r4 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

     label2:
        $r5 = (java.net.HttpURLConnection) $r4;

     label3:
        virtualinvoke $r5.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r5.<java.net.HttpURLConnection: void connect()>();

        $r6 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r6);

        virtualinvoke $r6.<java.io.InputStream: void close()>();

     label4:
        $r9 = new java.lang.StringBuilder;

        $r1 = $r9;

     label5:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("image download finished.");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tencent.open.a.b: void a(java.lang.String,java.lang.String)>("AsynLoadImg", $r0);

     label6:
        return $r7;

     label7:
        $r8 := @caughtexception;

        $r11 = (java.io.IOException) $r8;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        staticinvoke <com.tencent.open.a.b: void a(java.lang.String,java.lang.String)>("AsynLoadImg", "getbitmap bmp fail---");

        return null;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public void save(java.lang.String, com.tencent.open.utils.AsynLoadImgBack)
    {
        com.tencent.open.utils.AsynLoadImg r0;
        long $l0;
        java.lang.Runnable $r7;
        java.io.File $r4;
        com.tencent.open.utils.AsynLoadImgBack $r2;
        java.lang.Thread $r6;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        boolean $z0;

        r0 := @this: com.tencent.open.utils.AsynLoadImg;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.tencent.open.utils.AsynLoadImgBack;

        staticinvoke <com.tencent.open.a.b: void a(java.lang.String,java.lang.String)>("AsynLoadImg", "--save---");

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        interfaceinvoke $r2.<com.tencent.open.utils.AsynLoadImgBack: void saved(int,java.lang.String)>(1, null);

        return;

     label2:
        $z0 = staticinvoke <com.tencent.open.utils.Util: boolean hasSDCard()>();

        if $z0 != 0 goto label3;

        interfaceinvoke $r2.<com.tencent.open.utils.AsynLoadImgBack: void saved(int,java.lang.String)>(2, null);

        return;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/tmp/");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.tencent.open.utils.AsynLoadImg: java.lang.String c> = $r5;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.tencent.open.utils.AsynLoadImg: long d> = $l0;

        r0.<com.tencent.open.utils.AsynLoadImg: java.lang.String a> = $r1;

        r0.<com.tencent.open.utils.AsynLoadImg: com.tencent.open.utils.AsynLoadImgBack b> = $r2;

        $r6 = new java.lang.Thread;

        $r7 = r0.<com.tencent.open.utils.AsynLoadImg: java.lang.Runnable f>;

        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable)>($r7);

        virtualinvoke $r6.<java.lang.Thread: void start()>();

        return;
    }

    public boolean saveFile(android.graphics.Bitmap, java.lang.String)
    {
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14;
        java.io.BufferedOutputStream $r4, $r7, $r18;
        android.graphics.Bitmap$CompressFormat $r9;
        java.lang.String $r2, $r3;
        boolean $z0;
        com.tencent.open.utils.AsynLoadImg r0;
        java.io.FileOutputStream $r8, $r17;
        java.io.IOException $r19;
        java.io.File $r5, $r15;
        android.graphics.Bitmap $r1;
        java.lang.StringBuilder $r6, $r16;

        r0 := @this: com.tencent.open.utils.AsynLoadImg;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 := @parameter1: java.lang.String;

        $r3 = <com.tencent.open.utils.AsynLoadImg: java.lang.String c>;

        $r4 = null;

     label01:
        $r15 = new java.io.File;

     label02:
        $r5 = $r15;

     label03:
        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label04:
        if $z0 != 0 goto label06;

     label05:
        virtualinvoke $r5.<java.io.File: boolean mkdir()>();

     label06:
        $r16 = new java.lang.StringBuilder;

     label07:
        $r6 = $r16;

     label08:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r16 = new java.lang.StringBuilder;

     label10:
        $r6 = $r16;

     label11:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveFile:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tencent.open.a.b: void a(java.lang.String,java.lang.String)>("AsynLoadImg", $r2);

     label12:
        $r15 = new java.io.File;

     label13:
        $r5 = $r15;

     label14:
        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r3);

     label15:
        $r18 = new java.io.BufferedOutputStream;

     label16:
        $r7 = $r18;

     label17:
        $r17 = new java.io.FileOutputStream;

     label18:
        $r8 = $r17;

     label19:
        specialinvoke $r17.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

        specialinvoke $r18.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r8);

     label20:
        $r9 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label21:
        virtualinvoke $r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r9, 80, $r7);

        virtualinvoke $r7.<java.io.BufferedOutputStream: void flush()>();

     label22:
        if $r7 == null goto label24;

     label23:
        virtualinvoke $r7.<java.io.BufferedOutputStream: void close()>();

     label24:
        return 1;

     label25:
        $r10 := @caughtexception;

        $r19 = (java.io.IOException) $r10;

        virtualinvoke $r19.<java.io.IOException: void printStackTrace()>();

        goto label24;

     label26:
        $r11 := @caughtexception;

     label27:
        $r19 = (java.io.IOException) $r11;

        virtualinvoke $r19.<java.io.IOException: void printStackTrace()>();

        staticinvoke <com.tencent.open.a.b: void a(java.lang.String,java.lang.String)>("AsynLoadImg", "saveFile bmp fail---");

     label28:
        if $r4 == null goto label39;

     label29:
        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

     label30:
        return 0;

     label31:
        $r12 := @caughtexception;

        $r19 = (java.io.IOException) $r12;

        virtualinvoke $r19.<java.io.IOException: void printStackTrace()>();

        return 0;

     label32:
        $r13 := @caughtexception;

     label33:
        if $r4 == null goto label35;

     label34:
        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

     label35:
        throw $r13;

     label36:
        $r14 := @caughtexception;

        $r19 = (java.io.IOException) $r14;

        virtualinvoke $r19.<java.io.IOException: void printStackTrace()>();

        goto label35;

     label37:
        $r13 := @caughtexception;

        $r4 = $r7;

        goto label33;

     label38:
        $r11 := @caughtexception;

        $r4 = $r7;

        goto label27;

     label39:
        return 0;

        catch java.io.IOException from label03 to label04 with label26;
        catch java.io.IOException from label05 to label06 with label26;
        catch java.io.IOException from label08 to label09 with label26;
        catch java.io.IOException from label11 to label12 with label26;
        catch java.io.IOException from label14 to label15 with label26;
        catch java.io.IOException from label19 to label20 with label26;
        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.lang.Throwable from label05 to label07 with label32;
        catch java.lang.Throwable from label08 to label10 with label32;
        catch java.lang.Throwable from label11 to label13 with label32;
        catch java.lang.Throwable from label14 to label16 with label32;
        catch java.lang.Throwable from label17 to label18 with label32;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.io.IOException from label21 to label22 with label38;
        catch java.lang.Throwable from label20 to label22 with label37;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.lang.Throwable from label27 to label28 with label32;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.io.IOException from label34 to label35 with label36;
    }
}
