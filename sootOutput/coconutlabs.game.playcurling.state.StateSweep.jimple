public class coconutlabs.game.playcurling.state.StateSweep extends coconutlabs.game.playcurling.state.GameState
{

    public void <init>()
    {
        coconutlabs.game.playcurling.state.StateSweep r0;

        r0 := @this: coconutlabs.game.playcurling.state.StateSweep;

        specialinvoke r0.<coconutlabs.game.playcurling.state.GameState: void <init>()>();

        return;
    }

    public void ChangeProcess(coconutlabs.game.playcurling.MainView$MainThread)
    {
        int $i0;
        coconutlabs.game.playcurling.MainView$MainThread $r1;
        coconutlabs.game.playcurling.state.StateSweep r0;
        coconutlabs.game.playcurling.CCLSoundManager $r2, $r3;

        r0 := @this: coconutlabs.game.playcurling.state.StateSweep;

        $r1 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        $r2 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $r3 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLSoundManager: int GetSoundIdSlide()>();

        virtualinvoke $r2.<coconutlabs.game.playcurling.CCLSoundManager: void PlaySound(int,int)>($i0, -1);

        return;
    }

    public void UpdateDisplay(coconutlabs.game.playcurling.MainView$MainThread, coconutlabs.game.playcurling.Renderer, android.graphics.Canvas)
    {
        java.lang.Float $r10;
        java.lang.Object[] $r9;
        java.util.ArrayList $r4;
        coconutlabs.game.playcurling.CCLObject $r8;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r7;
        byte $b2;
        int i0, $i1;
        android.graphics.Canvas $r3;
        java.lang.String $r11;
        boolean $z0;
        coconutlabs.game.playcurling.Renderer $r2;
        coconutlabs.game.playcurling.MainView$MainThread $r1;
        coconutlabs.game.playcurling.CCLStone r6;
        float $f0;
        java.lang.Object $r5;
        android.graphics.Paint $r12;
        coconutlabs.game.playcurling.state.StateSweep r0;

        r0 := @this: coconutlabs.game.playcurling.state.StateSweep;

        $r1 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        $r2 := @parameter1: coconutlabs.game.playcurling.Renderer;

        $r3 := @parameter2: android.graphics.Canvas;

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void adjustCam()>();

        specialinvoke r0.<coconutlabs.game.playcurling.state.GameState: void UpdateDisplay(coconutlabs.game.playcurling.MainView$MainThread,coconutlabs.game.playcurling.Renderer,android.graphics.Canvas)>($r1, $r2, $r3);

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void DrawGuideLine(android.graphics.Canvas)>($r3);

        $r4 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = i0 - 1;

        $r4 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r6 = (coconutlabs.game.playcurling.CCLStone) $r5;

        if r6 == null goto label2;

        $r7 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        i0 = virtualinvoke $r7.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        $r7 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i1 = virtualinvoke $r7.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        if i0 == $i1 goto label2;

        i0 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetEnergy()>();

        if i0 <= 0 goto label1;

        $r3 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $r8 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objSweepArea>;

        virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: void DrawSweepArea(android.graphics.Canvas,coconutlabs.game.playcurling.Renderer,coconutlabs.game.playcurling.CCLObject)>($r3, $r2, $r8);

     label1:
        $z0 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bSweeping>;

        if $z0 == 0 goto label2;

        $r3 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $r8 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objSweeper>;

        i0 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: int m_nSweeperPosX>;

        virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: void DrawSweeper(android.graphics.Canvas,coconutlabs.game.playcurling.Renderer,coconutlabs.game.playcurling.CCLObject,int)>($r3, $r2, $r8, i0);

     label2:
        $r9 = newarray (java.lang.Object)[1];

        $f0 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: float fDist>;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2fft", $r9);

        $f0 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: float fDist>;

        $b2 = $f0 cmpl 0.0F;

        i0 = (int) $b2;

        if i0 <= 0 goto label5;

        $f0 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: float fDist>;

        $b2 = $f0 cmpg 3.0F;

        i0 = (int) $b2;

        if i0 >= 0 goto label3;

        $r3 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        $f0 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $f0 = $f0 / 2.0F;

        $r12 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistNear>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r11, $f0, 65.0F, $r12);

        return;

     label3:
        $f0 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: float fDist>;

        $b2 = $f0 cmpg 5.0F;

        i0 = (int) $b2;

        if i0 >= 0 goto label4;

        $r3 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        $f0 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $f0 = $f0 / 2.0F;

        $r12 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistMedium>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r11, $f0, 62.0F, $r12);

        return;

     label4:
        $r3 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        $f0 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $f0 = $f0 / 2.0F;

        $r12 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistFar>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r11, $f0, 60.0F, $r12);

     label5:
        return;
    }

    public void UpdateLoopProcess(coconutlabs.game.playcurling.MainView$MainThread)
    {
        java.lang.Runnable $r13;
        java.util.ArrayList $r2, $r3;
        coconutlabs.game.playcurling.CCLObject $r7;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r11;
        android.os.Handler $r12;
        int i0, $i1, $i2;
        double $d0;
        boolean $z0;
        coconutlabs.game.playcurling.Physics $r8;
        coconutlabs.game.playcurling.Renderer $r6;
        coconutlabs.game.playcurling.MainView$MainThread $r0;
        coconutlabs.game.playcurling.state.StateEndEndPause $r14;
        coconutlabs.game.playcurling.CCLStone r5;
        coconutlabs.game.playcurling.state.StateChangeTurnPause $r16;
        coconutlabs.game.playcurling.state.StateGameEndPause $r15;
        float f0, f1, $f2;
        java.lang.Object $r4;
        coconutlabs.game.playcurling.state.StateSweep r1;
        coconutlabs.game.playcurling.CCLSoundManager $r9, $r10;

        r1 := @this: coconutlabs.game.playcurling.state.StateSweep;

        $r0 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i0 <= 0 goto label4;

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r3 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = i0 - 1;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (coconutlabs.game.playcurling.CCLStone) $r4;

        $r6 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        f0 = virtualinvoke $r6.<coconutlabs.game.playcurling.Renderer: float GetCenterX()>();

        i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        f1 = (float) i0;

        f0 = f0 - f1;

        $r6 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        f1 = virtualinvoke $r6.<coconutlabs.game.playcurling.Renderer: float GetCenterY()>();

        i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f2 = (float) i0;

        f1 = f1 - $f2;

        f0 = f0 * f0;

        f1 = f1 * f1;

        f0 = f0 + f1;

        $d0 = (double) f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f0 = (float) $d0;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: float fDist> = f0;

        f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float fDist>;

        f1 = <coconutlabs.game.playcurling.CCLDefine: float CONVERSION_TO_FEET>;

        f0 = f0 * f1;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: float fDist> = f0;

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = i0 - 1;

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (coconutlabs.game.playcurling.CCLStone) $r4;

        $i1 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetEnergy()>();

        if $i1 <= 0 goto label4;

        $z0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: boolean GetCurrentSweepAlarm()>();

        if $z0 == 0 goto label1;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bSweeping> = 0;

        virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: void SetFriction(int)>(20);

     label1:
        $i1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosX>;

        $i2 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nPreTouchPosX>;

        $i2 = $i2 + 30;

        if $i1 > $i2 goto label2;

        $i1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosX>;

        $i2 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nPreTouchPosX>;

        $i2 = $i2 - 30;

        if $i1 >= $i2 goto label3;

     label2:
        $r7 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objSweepArea>;

        $i1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosX>;

        $i2 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosY>;

        $z0 = virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: boolean isTouched(int,int,coconutlabs.game.playcurling.Renderer)>($i1, $i2, null);

        if $z0 == 0 goto label3;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bSweeping> = 1;

        virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: void SetFriction(int)>(19);

        virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: void DisableCurveFlag()>();

        virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: void ResetSweepTimer()>();

     label3:
        $z0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bSweeping>;

        if $z0 == 0 goto label4;

        $i1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosX>;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nSweeperPosX> = $i1;

        $i1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nSweeperPosX>;

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (coconutlabs.game.playcurling.CCLStone) $r4;

        $r6 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $i2 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetScreenPosX(coconutlabs.game.playcurling.Renderer)>($r6);

        $i2 = $i2 - 40;

        if $i1 >= $i2 goto label6;

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (coconutlabs.game.playcurling.CCLStone) $r4;

        $r6 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetScreenPosX(coconutlabs.game.playcurling.Renderer)>($r6);

        i0 = i0 - 40;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nSweeperPosX> = i0;

     label4:
        i0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosX>;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nPreTouchPosX> = i0;

        $r8 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.Physics m_physicsSimulator>;

        i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.Physics: int GetTotalEnergy()>();

        if i0 != 0 goto label9;

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i0 <= 0 goto label5;

        $r6 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $r7 = virtualinvoke $r6.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject getBGEnd()>();

        i0 = virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: int GetBottom()>();

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r3 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r5 = (coconutlabs.game.playcurling.CCLStone) $r4;

        $i1 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        if i0 >= $i1 goto label5;

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r3 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = i0 - 1;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean bTooShort> = 1;

     label5:
        virtualinvoke $r0.<coconutlabs.game.playcurling.MainView$MainThread: void CheckNearestStone()>();

        $r9 = staticinvoke <coconutlabs.game.playcurling.CCLSoundManager: coconutlabs.game.playcurling.CCLSoundManager getInstance()>();

        $r10 = staticinvoke <coconutlabs.game.playcurling.CCLSoundManager: coconutlabs.game.playcurling.CCLSoundManager getInstance()>();

        i0 = virtualinvoke $r10.<coconutlabs.game.playcurling.CCLSoundManager: int GetSoundIdSlide()>();

        virtualinvoke $r9.<coconutlabs.game.playcurling.CCLSoundManager: void Stop(int)>(i0);

        $r11 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        i0 = virtualinvoke $r11.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getNumberOfThrownStones()>();

        $r11 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i1 = virtualinvoke $r11.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getNumberOfMaxThrow()>();

        if i0 != $i1 goto label8;

        $r11 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        i0 = virtualinvoke $r11.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getNumberOfEnds()>();

        $r11 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i1 = virtualinvoke $r11.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentEnd()>();

        if i0 <= $i1 goto label7;

        $r12 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Handler m_handlerEndEnd>;

        $r13 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: java.lang.Runnable m_runEndEnd>;

        virtualinvoke $r12.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r13, 3000L);

        $r14 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateEndEndPause stateEndEndPause>;

        virtualinvoke $r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeGameState(coconutlabs.game.playcurling.state.GameState)>($r14);

        return;

     label6:
        $i1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nSweeperPosX>;

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (coconutlabs.game.playcurling.CCLStone) $r4;

        $r6 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $i2 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetScreenPosX(coconutlabs.game.playcurling.Renderer)>($r6);

        $i2 = $i2 + 40;

        if $i1 <= $i2 goto label4;

        $r2 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (coconutlabs.game.playcurling.CCLStone) $r4;

        $r6 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetScreenPosX(coconutlabs.game.playcurling.Renderer)>($r6);

        i0 = i0 + 40;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nSweeperPosX> = i0;

        goto label4;

     label7:
        $r12 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Handler m_handlerGameEnd>;

        $r13 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: java.lang.Runnable m_runGameEnd>;

        virtualinvoke $r12.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r13, 3000L);

        $r15 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateGameEndPause stateGameEndPause>;

        virtualinvoke $r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeGameState(coconutlabs.game.playcurling.state.GameState)>($r15);

        return;

     label8:
        $r12 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Handler m_handlerChangeTurn>;

        $r13 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: java.lang.Runnable m_runChangeTurn>;

        virtualinvoke $r12.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r13, 3000L);

        $r16 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateChangeTurnPause stateChangeTurnPause>;

        virtualinvoke $r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeGameState(coconutlabs.game.playcurling.state.GameState)>($r16);

        return;

     label9:
        virtualinvoke $r0.<coconutlabs.game.playcurling.MainView$MainThread: void UpdateSoundAndVibration(int)>(i0);

        return;
    }

    public void UpdatePhysics(coconutlabs.game.playcurling.MainView$MainThread)
    {
        coconutlabs.game.playcurling.MainView$MainThread $r1;
        coconutlabs.game.playcurling.Physics $r2;
        coconutlabs.game.playcurling.state.StateSweep r0;

        r0 := @this: coconutlabs.game.playcurling.state.StateSweep;

        $r1 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        $r2 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.Physics m_physicsSimulator>;

        virtualinvoke $r2.<coconutlabs.game.playcurling.Physics: void run()>();

        return;
    }

    public void UpdateTouch(coconutlabs.game.playcurling.MainView$MainThread, android.view.MotionEvent)
    {
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r3;
        android.view.MotionEvent $r2;
        int $i0, $i1;
        float $f0;
        coconutlabs.game.playcurling.MainView$MainThread $r1;
        coconutlabs.game.playcurling.state.StateSweep r0;

        r0 := @this: coconutlabs.game.playcurling.state.StateSweep;

        $r1 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        $r2 := @parameter1: android.view.MotionEvent;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getPlayMode()>();

        if $i0 != 1 goto label1;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i1 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        if $i0 != $i1 goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        if $i0 != 2 goto label2;

        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $i0 = (int) $f0;

        $r1.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosX> = $i0;

        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        $i0 = (int) $f0;

        $r1.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosY> = $i0;

     label2:
        return;
    }
}
