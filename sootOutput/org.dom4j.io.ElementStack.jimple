class org.dom4j.io.ElementStack extends java.lang.Object implements org.dom4j.ElementPath
{
    private org.dom4j.io.DispatchHandler handler;
    protected int lastElementIndex;
    protected org.dom4j.Element[] stack;

    public void <init>()
    {
        org.dom4j.io.ElementStack r0;

        r0 := @this: org.dom4j.io.ElementStack;

        specialinvoke r0.<org.dom4j.io.ElementStack: void <init>(int)>(50);

        return;
    }

    public void <init>(int)
    {
        int $i0;
        org.dom4j.Element[] $r1;
        org.dom4j.io.ElementStack r0;

        r0 := @this: org.dom4j.io.ElementStack;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.io.ElementStack: int lastElementIndex> = -1;

        r0.<org.dom4j.io.ElementStack: org.dom4j.io.DispatchHandler handler> = null;

        $r1 = newarray (org.dom4j.Element)[50];

        r0.<org.dom4j.io.ElementStack: org.dom4j.Element[] stack> = $r1;

        return;
    }

    private java.lang.String getHandlerPath(java.lang.String)
    {
        org.dom4j.io.ElementStack r0;
        java.lang.StringBuffer $r4;
        java.lang.String $r1, $r3;
        org.dom4j.io.DispatchHandler $r2;
        boolean $z0;

        r0 := @this: org.dom4j.io.ElementStack;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dom4j.io.ElementStack: org.dom4j.io.DispatchHandler handler>;

        if $r2 != null goto label1;

        $r2 = new org.dom4j.io.DispatchHandler;

        specialinvoke $r2.<org.dom4j.io.DispatchHandler: void <init>()>();

        virtualinvoke r0.<org.dom4j.io.ElementStack: void setDispatchHandler(org.dom4j.io.DispatchHandler)>($r2);

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label2;

        return $r1;

     label2:
        $r3 = virtualinvoke r0.<org.dom4j.io.ElementStack: java.lang.String getPath()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z0 == 0 goto label3;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<org.dom4j.io.ElementStack: java.lang.String getPath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;

     label3:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<org.dom4j.io.ElementStack: java.lang.String getPath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public void addHandler(java.lang.String, org.dom4j.ElementHandler)
    {
        org.dom4j.io.ElementStack r0;
        org.dom4j.ElementHandler $r2;
        java.lang.String $r1;
        org.dom4j.io.DispatchHandler $r3;

        r0 := @this: org.dom4j.io.ElementStack;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.dom4j.ElementHandler;

        $r3 = r0.<org.dom4j.io.ElementStack: org.dom4j.io.DispatchHandler handler>;

        $r1 = specialinvoke r0.<org.dom4j.io.ElementStack: java.lang.String getHandlerPath(java.lang.String)>($r1);

        virtualinvoke $r3.<org.dom4j.io.DispatchHandler: void addHandler(java.lang.String,org.dom4j.ElementHandler)>($r1, $r2);

        return;
    }

    public void clear()
    {
        org.dom4j.io.ElementStack r0;

        r0 := @this: org.dom4j.io.ElementStack;

        r0.<org.dom4j.io.ElementStack: int lastElementIndex> = -1;

        return;
    }

    public boolean containsHandler(java.lang.String)
    {
        org.dom4j.io.ElementStack r0;
        java.lang.String $r1;
        org.dom4j.io.DispatchHandler $r2;
        boolean $z0;

        r0 := @this: org.dom4j.io.ElementStack;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dom4j.io.ElementStack: org.dom4j.io.DispatchHandler handler>;

        $z0 = virtualinvoke $r2.<org.dom4j.io.DispatchHandler: boolean containsHandler(java.lang.String)>($r1);

        return $z0;
    }

    public org.dom4j.Element getCurrent()
    {
        org.dom4j.Element $r1;
        org.dom4j.io.ElementStack r0;

        r0 := @this: org.dom4j.io.ElementStack;

        $r1 = virtualinvoke r0.<org.dom4j.io.ElementStack: org.dom4j.Element peekElement()>();

        return $r1;
    }

    public org.dom4j.io.DispatchHandler getDispatchHandler()
    {
        org.dom4j.io.ElementStack r0;
        org.dom4j.io.DispatchHandler r1;

        r0 := @this: org.dom4j.io.ElementStack;

        r1 = r0.<org.dom4j.io.ElementStack: org.dom4j.io.DispatchHandler handler>;

        return r1;
    }

    public org.dom4j.Element getElement(int)
    {
        org.dom4j.io.ElementStack r0;
        int $i0;
        org.dom4j.Element[] $r2;
        org.dom4j.Element r3;
        java.lang.ArrayIndexOutOfBoundsException r1;

        r0 := @this: org.dom4j.io.ElementStack;

        $i0 := @parameter0: int;

        $r2 = r0.<org.dom4j.io.ElementStack: org.dom4j.Element[] stack>;

     label1:
        r3 = $r2[$i0];

     label2:
        return r3;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    public java.lang.String getPath()
    {
        java.lang.String $r1;
        org.dom4j.io.ElementStack r0;
        org.dom4j.io.DispatchHandler $r2;

        r0 := @this: org.dom4j.io.ElementStack;

        $r2 = r0.<org.dom4j.io.ElementStack: org.dom4j.io.DispatchHandler handler>;

        if $r2 != null goto label1;

        $r2 = new org.dom4j.io.DispatchHandler;

        specialinvoke $r2.<org.dom4j.io.DispatchHandler: void <init>()>();

        virtualinvoke r0.<org.dom4j.io.ElementStack: void setDispatchHandler(org.dom4j.io.DispatchHandler)>($r2);

     label1:
        $r2 = r0.<org.dom4j.io.ElementStack: org.dom4j.io.DispatchHandler handler>;

        $r1 = virtualinvoke $r2.<org.dom4j.io.DispatchHandler: java.lang.String getPath()>();

        return $r1;
    }

    public org.dom4j.Element peekElement()
    {
        org.dom4j.io.ElementStack r0;
        int $i0;
        org.dom4j.Element[] $r1;
        org.dom4j.Element $r2;

        r0 := @this: org.dom4j.io.ElementStack;

        $i0 = r0.<org.dom4j.io.ElementStack: int lastElementIndex>;

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.dom4j.io.ElementStack: org.dom4j.Element[] stack>;

        $i0 = r0.<org.dom4j.io.ElementStack: int lastElementIndex>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public org.dom4j.Element popElement()
    {
        org.dom4j.io.ElementStack r0;
        int $i0, $i1;
        org.dom4j.Element[] $r1;
        org.dom4j.Element $r2;

        r0 := @this: org.dom4j.io.ElementStack;

        $i0 = r0.<org.dom4j.io.ElementStack: int lastElementIndex>;

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.dom4j.io.ElementStack: org.dom4j.Element[] stack>;

        $i0 = r0.<org.dom4j.io.ElementStack: int lastElementIndex>;

        $i1 = $i0 + -1;

        r0.<org.dom4j.io.ElementStack: int lastElementIndex> = $i1;

        $r2 = $r1[$i0];

        return $r2;
    }

    public void pushElement(org.dom4j.Element)
    {
        org.dom4j.io.ElementStack r0;
        int i0, $i1;
        org.dom4j.Element[] $r2;
        org.dom4j.Element $r1;

        r0 := @this: org.dom4j.io.ElementStack;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 = r0.<org.dom4j.io.ElementStack: org.dom4j.Element[] stack>;

        i0 = lengthof $r2;

        $i1 = r0.<org.dom4j.io.ElementStack: int lastElementIndex>;

        $i1 = $i1 + 1;

        r0.<org.dom4j.io.ElementStack: int lastElementIndex> = $i1;

        if $i1 < i0 goto label1;

        i0 = i0 * 2;

        virtualinvoke r0.<org.dom4j.io.ElementStack: void reallocate(int)>(i0);

     label1:
        $r2 = r0.<org.dom4j.io.ElementStack: org.dom4j.Element[] stack>;

        i0 = r0.<org.dom4j.io.ElementStack: int lastElementIndex>;

        $r2[i0] = $r1;

        return;
    }

    protected void reallocate(int)
    {
        org.dom4j.io.ElementStack r0;
        int $i0;
        org.dom4j.Element[] r1, $r2;

        r0 := @this: org.dom4j.io.ElementStack;

        $i0 := @parameter0: int;

        r1 = r0.<org.dom4j.io.ElementStack: org.dom4j.Element[] stack>;

        $r2 = newarray (org.dom4j.Element)[$i0];

        r0.<org.dom4j.io.ElementStack: org.dom4j.Element[] stack> = $r2;

        $r2 = r0.<org.dom4j.io.ElementStack: org.dom4j.Element[] stack>;

        $i0 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r2, 0, $i0);

        return;
    }

    public void removeHandler(java.lang.String)
    {
        java.lang.String $r1;
        org.dom4j.io.ElementStack r0;
        org.dom4j.io.DispatchHandler $r2;

        r0 := @this: org.dom4j.io.ElementStack;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dom4j.io.ElementStack: org.dom4j.io.DispatchHandler handler>;

        $r1 = specialinvoke r0.<org.dom4j.io.ElementStack: java.lang.String getHandlerPath(java.lang.String)>($r1);

        virtualinvoke $r2.<org.dom4j.io.DispatchHandler: org.dom4j.ElementHandler removeHandler(java.lang.String)>($r1);

        return;
    }

    public void setDispatchHandler(org.dom4j.io.DispatchHandler)
    {
        org.dom4j.io.ElementStack r0;
        org.dom4j.io.DispatchHandler $r1;

        r0 := @this: org.dom4j.io.ElementStack;

        $r1 := @parameter0: org.dom4j.io.DispatchHandler;

        r0.<org.dom4j.io.ElementStack: org.dom4j.io.DispatchHandler handler> = $r1;

        return;
    }

    public int size()
    {
        int $i0;
        org.dom4j.io.ElementStack r0;

        r0 := @this: org.dom4j.io.ElementStack;

        $i0 = r0.<org.dom4j.io.ElementStack: int lastElementIndex>;

        $i0 = $i0 + 1;

        return $i0;
    }
}
