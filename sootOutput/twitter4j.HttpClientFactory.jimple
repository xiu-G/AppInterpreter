public final class twitter4j.HttpClientFactory extends java.lang.Object
{
    private static final java.lang.reflect.Constructor HTTP_CLIENT_CONSTRUCTOR;
    private static final java.lang.String HTTP_CLIENT_IMPLEMENTATION;
    private static final java.util.HashMap confClientMap;

    static void <clinit>()
    {
        java.lang.Throwable $r8;
        java.lang.Class[] $r3;
        java.util.HashMap $r5;
        java.lang.AssertionError $r7;
        java.lang.reflect.Constructor $r4;
        java.lang.Class $r0, $r2;
        java.lang.ClassNotFoundException $r6, $r9, $r10;
        java.lang.String $r1;

        <twitter4j.HttpClientFactory: java.lang.String HTTP_CLIENT_IMPLEMENTATION> = "twitter4j.http.httpClient";

        $r0 = null;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("twitter4j.http.httpClient");

        if $r1 == null goto label03;

     label01:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

     label02:
        $r0 = $r2;

     label03:
        if $r0 != null goto label08;

     label04:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.AlternativeHttpClientImpl");

     label05:
        $r0 = $r2;

     label06:
        if $r0 != null goto label08;

     label07:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.HttpClientImpl");

     label08:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Ltwitter4j/HttpClientConfiguration;";

     label09:
        $r4 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label10:
        <twitter4j.HttpClientFactory: java.lang.reflect.Constructor HTTP_CLIENT_CONSTRUCTOR> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        <twitter4j.HttpClientFactory: java.util.HashMap confClientMap> = $r5;

        return;

     label11:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r7;

     label12:
        $r8 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r7;

     label13:
        $r9 := @caughtexception;

        goto label03;

     label14:
        $r10 := @caughtexception;

        goto label06;

        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label13;
        catch java.lang.ClassNotFoundException from label04 to label05 with label14;
        catch java.lang.ClassNotFoundException from label07 to label08 with label11;
        catch java.lang.NoSuchMethodException from label09 to label10 with label12;
    }

    public void <init>()
    {
        twitter4j.HttpClientFactory r0;

        r0 := @this: twitter4j.HttpClientFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static twitter4j.HttpClient getInstance()
    {
        twitter4j.conf.Configuration $r0;
        twitter4j.HttpClientConfiguration $r1;
        twitter4j.HttpClient $r2;

        $r0 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        $r1 = interfaceinvoke $r0.<twitter4j.conf.Configuration: twitter4j.HttpClientConfiguration getHttpClientConfiguration()>();

        $r2 = staticinvoke <twitter4j.HttpClientFactory: twitter4j.HttpClient getInstance(twitter4j.HttpClientConfiguration)>($r1);

        return $r2;
    }

    public static twitter4j.HttpClient getInstance(twitter4j.HttpClientConfiguration)
    {
        java.lang.Throwable $r6, $r8, $r9;
        java.lang.Object[] $r5;
        twitter4j.HttpClientConfiguration $r0;
        java.util.HashMap $r1;
        java.lang.AssertionError $r7;
        java.lang.reflect.Constructor $r4;
        twitter4j.HttpClient $r3;
        java.lang.Object $r2;

        $r0 := @parameter0: twitter4j.HttpClientConfiguration;

        $r1 = <twitter4j.HttpClientFactory: java.util.HashMap confClientMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (twitter4j.HttpClient) $r2;

        if $r3 != null goto label8;

        $r4 = <twitter4j.HttpClientFactory: java.lang.reflect.Constructor HTTP_CLIENT_CONSTRUCTOR>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r0;

     label1:
        $r2 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label2:
        $r3 = (twitter4j.HttpClient) $r2;

        $r1 = <twitter4j.HttpClientFactory: java.util.HashMap confClientMap>;

     label3:
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r3);

     label4:
        return $r3;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r7;

     label7:
        $r9 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r7;

     label8:
        return $r3;

        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
    }
}
