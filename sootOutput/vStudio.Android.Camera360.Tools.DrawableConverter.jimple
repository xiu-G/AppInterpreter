public class vStudio.Android.Camera360.Tools.DrawableConverter extends java.lang.Object
{
    public static final float MAX_WIDTH;

    public void <init>()
    {
        vStudio.Android.Camera360.Tools.DrawableConverter r0;

        r0 := @this: vStudio.Android.Camera360.Tools.DrawableConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        android.graphics.Bitmap$Config $r1;
        android.graphics.Bitmap $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.Canvas $r3;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getOpacity()>();

        $i3 = -1;

        if $i2 == $i3 goto label2;

        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label1:
        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        $r3 = new android.graphics.Canvas;

        specialinvoke $r3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r2);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r3);

        return $r2;

     label2:
        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        goto label1;
    }

    public static boolean isBeyongLimit(int)
    {
        int $i0;
        float $f0;
        byte $b1;

        $i0 := @parameter0: int;

        $f0 = (float) $i0;

        $b1 = $f0 cmpl 800.0F;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static android.graphics.Point obtainLimilt(int, int)
    {
        byte $b2;
        int $i0, $i1, $i3;
        float f0, $f1;
        android.graphics.Point $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        f0 = (float) $i0;

        $b2 = f0 cmpl 800.0F;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label1;

        f0 = (float) $i0;

        f0 = 800.0F / f0;

        $r0 = new android.graphics.Point;

        $f1 = (float) $i0;

        $f1 = $f1 * f0;

        $i0 = (int) $f1;

        $f1 = (float) $i1;

        f0 = $f1 * f0;

        $i1 = (int) f0;

        specialinvoke $r0.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        return $r0;

     label1:
        $r0 = new android.graphics.Point;

        specialinvoke $r0.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        return $r0;
    }

    public static android.graphics.Bitmap toGrayscale(android.graphics.Bitmap)
    {
        android.graphics.ColorMatrixColorFilter r3;
        android.graphics.Bitmap$Config $r5;
        android.graphics.Bitmap $r0, $r6;
        int $i0, $i1;
        android.graphics.Canvas r1;
        android.graphics.Paint r4;
        android.graphics.ColorMatrix r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i1, $i0, $r5);

        r1 = new android.graphics.Canvas;

        specialinvoke r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r6);

        r4 = new android.graphics.Paint;

        specialinvoke r4.<android.graphics.Paint: void <init>()>();

        r2 = new android.graphics.ColorMatrix;

        specialinvoke r2.<android.graphics.ColorMatrix: void <init>()>();

        virtualinvoke r2.<android.graphics.ColorMatrix: void setSaturation(float)>(0.0F);

        r3 = new android.graphics.ColorMatrixColorFilter;

        specialinvoke r3.<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>(r2);

        virtualinvoke r4.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r3);

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r0, 0.0F, 0.0F, r4);

        return $r6;
    }

    public static android.graphics.Bitmap toGrayscale(android.graphics.Bitmap, int)
    {
        int $i0;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $r0 = staticinvoke <vStudio.Android.Camera360.Tools.DrawableConverter: android.graphics.Bitmap toGrayscale(android.graphics.Bitmap)>($r0);

        $r0 = staticinvoke <vStudio.Android.Camera360.Tools.DrawableConverter: android.graphics.Bitmap toRoundCorner(android.graphics.Bitmap,int)>($r0, $i0);

        return $r0;
    }

    public static android.graphics.Bitmap toRoundCorner(android.graphics.Bitmap, int)
    {
        android.graphics.RectF r4;
        android.graphics.Rect r3;
        android.graphics.Bitmap$Config $r5;
        android.graphics.PorterDuff$Mode $r8;
        android.graphics.PorterDuffXfermode $r7;
        android.graphics.Bitmap $r0, $r6;
        int $i0, $i1, $i2;
        float f0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i1, $i2, $r5);

        r1 = new android.graphics.Canvas;

        specialinvoke r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r6);

        r2 = new android.graphics.Paint;

        specialinvoke r2.<android.graphics.Paint: void <init>()>();

        r3 = new android.graphics.Rect;

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        specialinvoke r3.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i1, $i2);

        r4 = new android.graphics.RectF;

        specialinvoke r4.<android.graphics.RectF: void <init>(android.graphics.Rect)>(r3);

        f0 = (float) $i0;

        virtualinvoke r2.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke r1.<android.graphics.Canvas: void drawARGB(int,int,int,int)>(0, 0, 0, 0);

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(-12434878);

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>(r4, f0, f0, r2);

        $r7 = new android.graphics.PorterDuffXfermode;

        $r8 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        specialinvoke $r7.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r8);

        virtualinvoke r2.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r7);

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r0, r3, r3, r2);

        return $r6;
    }

    public static android.graphics.drawable.BitmapDrawable toRoundCorner(android.graphics.drawable.BitmapDrawable, int)
    {
        int $i0;
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: android.graphics.drawable.BitmapDrawable;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        r0 = new android.graphics.drawable.BitmapDrawable;

        $r1 = staticinvoke <vStudio.Android.Camera360.Tools.DrawableConverter: android.graphics.Bitmap toRoundCorner(android.graphics.Bitmap,int)>($r1, $i0);

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r1);

        return r0;
    }

    public static android.graphics.Bitmap zoomBitmap(android.graphics.Bitmap, float)
    {
        android.graphics.Bitmap $r0;
        int i0, i1;
        float $f0, $f1;
        android.graphics.Matrix r1;

        $r0 := @parameter0: android.graphics.Bitmap;

        $f0 := @parameter1: float;

        i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) i0;

        $f1 = $f1 * $f0;

        i0 = (int) $f1;

        i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) i1;

        $f0 = $f1 * $f0;

        i1 = (int) $f0;

        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        $f0 = (float) i0;

        $f1 = (float) i1;

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>($f0, $f1);

        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r0, 0, 0, i0, i1, r1, 1);

        return $r0;
    }

    public static android.graphics.drawable.Drawable zoomDrawable(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        $r2 = staticinvoke <vStudio.Android.Camera360.Tools.DrawableConverter: android.graphics.drawable.Drawable zoomDrawable(android.graphics.drawable.Drawable,float,float)>($r2, 0.75F, 0.75F);

        return $r2;
    }

    public static android.graphics.drawable.Drawable zoomDrawable(android.content.Context, int, float, float)
    {
        android.content.Context $r0;
        int $i0;
        float $f0, $f1;
        android.graphics.drawable.Drawable $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        $r2 = staticinvoke <vStudio.Android.Camera360.Tools.DrawableConverter: android.graphics.drawable.Drawable zoomDrawable(android.graphics.drawable.Drawable,float,float)>($r2, $f0, $f1);

        return $r2;
    }

    public static android.graphics.drawable.Drawable zoomDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r0 = staticinvoke <vStudio.Android.Camera360.Tools.DrawableConverter: android.graphics.drawable.Drawable zoomDrawable(android.graphics.drawable.Drawable,float,float)>($r0, 0.75F, 0.75F);

        return $r0;
    }

    public static android.graphics.drawable.Drawable zoomDrawable(android.graphics.drawable.Drawable, float, float)
    {
        android.graphics.drawable.BitmapDrawable $r3;
        android.graphics.drawable.Drawable $r0;
        android.graphics.Bitmap $r2;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.Matrix r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r2 = staticinvoke <vStudio.Android.Camera360.Tools.DrawableConverter: android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable)>($r0);

        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>($f0, $f1);

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r2, 0, 0, $i0, $i1, r1, 1);

        $r3 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r3.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r2);

        return $r3;
    }

    public static android.graphics.drawable.Drawable zoomDrawable(android.graphics.drawable.Drawable, int, int)
    {
        android.graphics.drawable.BitmapDrawable $r3;
        android.graphics.drawable.Drawable $r0;
        android.graphics.Bitmap $r2;
        int $i0, $i1, $i2, $i3;
        float f0, f1, $f2;
        android.graphics.Matrix r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r2 = staticinvoke <vStudio.Android.Camera360.Tools.DrawableConverter: android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable)>($r0);

        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        f1 = (float) $i0;

        f0 = (float) $i2;

        f1 = f1 / f0;

        f0 = (float) $i1;

        $f2 = (float) $i3;

        f0 = f0 / $f2;

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>(f1, f0);

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r2, 0, 0, $i2, $i3, r1, 1);

        $r3 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r3.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <vStudio.Android.Camera360.Tools.DrawableConverter: float MAX_WIDTH> = 800.0F;

        return;
    }
}
