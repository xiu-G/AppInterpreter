class com.nineoldandroids.util.ReflectiveProperty extends com.nineoldandroids.util.Property
{
    private static final java.lang.String PREFIX_GET;
    private static final java.lang.String PREFIX_IS;
    private static final java.lang.String PREFIX_SET;
    private java.lang.reflect.Field mField;
    private java.lang.reflect.Method mGetter;
    private java.lang.reflect.Method mSetter;

    public void <init>(java.lang.Class, java.lang.Class, java.lang.String)
    {
        java.lang.Throwable $r10, $r11, $r12, $r13, $r15, $r17;
        com.nineoldandroids.util.ReflectiveProperty r0;
        java.lang.String $r3, $r4, $r6;
        java.lang.reflect.Method $r7;
        boolean $z0;
        java.lang.Class[] $r16;
        char $c0;
        java.lang.reflect.Field $r14;
        com.nineoldandroids.util.NoSuchPropertyException $r9;
        java.lang.Class $r1, $r2, $r8;
        java.lang.StringBuilder $r5;

        r0 := @this: com.nineoldandroids.util.ReflectiveProperty;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.nineoldandroids.util.Property: void <init>(java.lang.Class,java.lang.String)>($r2, $r3);

        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $c0 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c0);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1);

        $r5 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("get");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r6, null);

     label02:
        r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mGetter> = $r7;

     label03:
        $r7 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mGetter>;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $z0 = specialinvoke r0.<com.nineoldandroids.util.ReflectiveProperty: boolean typesMatch(java.lang.Class,java.lang.Class)>($r2, $r8);

        if $z0 != 0 goto label25;

        $r9 = new com.nineoldandroids.util.NoSuchPropertyException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Underlying type (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") does not match Property type (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.nineoldandroids.util.NoSuchPropertyException: void <init>(java.lang.String)>($r3);

        throw $r9;

     label04:
        $r10 := @caughtexception;

     label05:
        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r6, null);

     label06:
        r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mGetter> = $r7;

        $r7 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mGetter>;

     label07:
        virtualinvoke $r7.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label08:
        goto label03;

     label09:
        $r11 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("is");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r6, null);

     label11:
        r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mGetter> = $r7;

        goto label03;

     label12:
        $r12 := @caughtexception;

     label13:
        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r6, null);

     label14:
        r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mGetter> = $r7;

        $r7 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mGetter>;

     label15:
        virtualinvoke $r7.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label16:
        goto label03;

     label17:
        $r13 := @caughtexception;

     label18:
        $r14 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r3);

     label19:
        r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Field mField> = $r14;

        $r14 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Field mField>;

     label20:
        $r1 = virtualinvoke $r14.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z0 = specialinvoke r0.<com.nineoldandroids.util.ReflectiveProperty: boolean typesMatch(java.lang.Class,java.lang.Class)>($r2, $r1);

     label21:
        if $z0 != 0 goto label31;

        $r9 = new com.nineoldandroids.util.NoSuchPropertyException;

        $r5 = new java.lang.StringBuilder;

     label22:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Underlying type (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") does not match Property type (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.nineoldandroids.util.NoSuchPropertyException: void <init>(java.lang.String)>($r4);

     label23:
        throw $r9;

     label24:
        $r15 := @caughtexception;

        $r9 = new com.nineoldandroids.util.NoSuchPropertyException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("No accessor method or field found for property with name ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.nineoldandroids.util.NoSuchPropertyException: void <init>(java.lang.String)>($r3);

        throw $r9;

     label25:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("set");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = newarray (java.lang.Class)[1];

        $r16[0] = $r8;

     label26:
        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r3, $r16);

     label27:
        r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mSetter> = $r7;

        $r7 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mSetter>;

     label28:
        virtualinvoke $r7.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label29:
        return;

     label30:
        $r17 := @caughtexception;

     label31:
        return;

        catch java.lang.NoSuchMethodException from label01 to label02 with label04;
        catch java.lang.NoSuchMethodException from label05 to label06 with label09;
        catch java.lang.NoSuchMethodException from label07 to label08 with label09;
        catch java.lang.NoSuchMethodException from label10 to label11 with label12;
        catch java.lang.NoSuchMethodException from label13 to label14 with label17;
        catch java.lang.NoSuchMethodException from label15 to label16 with label17;
        catch java.lang.NoSuchFieldException from label18 to label19 with label24;
        catch java.lang.NoSuchFieldException from label20 to label21 with label24;
        catch java.lang.NoSuchFieldException from label22 to label23 with label24;
        catch java.lang.NoSuchMethodException from label26 to label27 with label30;
        catch java.lang.NoSuchMethodException from label28 to label29 with label30;
    }

    private boolean typesMatch(java.lang.Class, java.lang.Class)
    {
        com.nineoldandroids.util.ReflectiveProperty r0;
        java.lang.Class $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.nineoldandroids.util.ReflectiveProperty;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.Class;

        if $r2 == $r1 goto label8;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label9;

        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        if $r2 != $r3 goto label1;

        if $r1 == class "Ljava/lang/Float;" goto label8;

     label1:
        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r2 != $r3 goto label2;

        if $r1 == class "Ljava/lang/Integer;" goto label8;

     label2:
        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r2 != $r3 goto label3;

        if $r1 == class "Ljava/lang/Boolean;" goto label8;

     label3:
        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        if $r2 != $r3 goto label4;

        if $r1 == class "Ljava/lang/Long;" goto label8;

     label4:
        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        if $r2 != $r3 goto label5;

        if $r1 == class "Ljava/lang/Double;" goto label8;

     label5:
        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        if $r2 != $r3 goto label6;

        if $r1 == class "Ljava/lang/Short;" goto label8;

     label6:
        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        if $r2 != $r3 goto label7;

        if $r1 == class "Ljava/lang/Byte;" goto label8;

     label7:
        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        if $r2 != $r3 goto label9;

        if $r1 == class "Ljava/lang/Character;" goto label8;

        return 0;

     label8:
        return 1;

     label9:
        return 0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.lang.Throwable $r3, $r4, $r6;
        java.lang.AssertionError $r7;
        java.lang.RuntimeException $r8;
        java.lang.reflect.Field $r5;
        java.lang.reflect.InvocationTargetException $r9;
        com.nineoldandroids.util.ReflectiveProperty r0;
        java.lang.Object $r1;
        java.lang.reflect.Method $r2;

        r0 := @this: com.nineoldandroids.util.ReflectiveProperty;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mGetter>;

        if $r2 == null goto label5;

        $r2 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mGetter>;

     label1:
        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, null);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label4:
        $r4 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r9 = (java.lang.reflect.InvocationTargetException) $r4;

        $r3 = virtualinvoke $r9.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r8;

     label5:
        $r5 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Field mField>;

        if $r5 == null goto label9;

        $r5 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Field mField>;

     label6:
        $r1 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

     label7:
        return $r1;

     label8:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label9:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label6 to label7 with label8;
    }

    public boolean isReadOnly()
    {
        com.nineoldandroids.util.ReflectiveProperty r0;
        java.lang.reflect.Field $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: com.nineoldandroids.util.ReflectiveProperty;

        $r1 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mSetter>;

        if $r1 != null goto label1;

        $r2 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Field mField>;

        if $r2 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void set(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r5, $r6, $r8;
        java.lang.Object[] $r4;
        java.lang.AssertionError $r11;
        com.nineoldandroids.util.ReflectiveProperty r0;
        java.lang.String $r10;
        java.lang.reflect.Method $r3;
        java.lang.UnsupportedOperationException $r14;
        java.lang.RuntimeException $r12;
        java.lang.reflect.Field $r7;
        java.lang.reflect.InvocationTargetException $r15;
        java.lang.Object $r1, $r2;
        java.lang.StringBuilder $r9, $r13;

        r0 := @this: com.nineoldandroids.util.ReflectiveProperty;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mSetter>;

        if $r3 == null goto label5;

        $r3 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Method mSetter>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

     label1:
        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label4:
        $r6 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        $r15 = (java.lang.reflect.InvocationTargetException) $r6;

        $r5 = virtualinvoke $r15.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r12;

     label5:
        $r7 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Field mField>;

        if $r7 == null goto label9;

        $r7 = r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.reflect.Field mField>;

     label6:
        virtualinvoke $r7.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r1, $r2);

     label7:
        return;

     label8:
        $r8 := @caughtexception;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label9:
        $r14 = new java.lang.UnsupportedOperationException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Property ");

        $r10 = virtualinvoke r0.<com.nineoldandroids.util.ReflectiveProperty: java.lang.String getName()>();

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is read-only");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10);

        throw $r14;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label6 to label7 with label8;
    }

    public static void <clinit>()
    {
        <com.nineoldandroids.util.ReflectiveProperty: java.lang.String PREFIX_SET> = "set";

        <com.nineoldandroids.util.ReflectiveProperty: java.lang.String PREFIX_IS> = "is";

        <com.nineoldandroids.util.ReflectiveProperty: java.lang.String PREFIX_GET> = "get";

        return;
    }
}
