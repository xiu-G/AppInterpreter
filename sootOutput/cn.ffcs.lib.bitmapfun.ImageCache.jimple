public class cn.ffcs.lib.bitmapfun.ImageCache extends java.lang.Object
{
    private static final boolean DEFAULT_CLEAR_DISK_CACHE_ON_START;
    private static final android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT;
    private static final int DEFAULT_COMPRESS_QUALITY;
    private static final boolean DEFAULT_DISK_CACHE_ENABLED;
    private static final int DEFAULT_DISK_CACHE_SIZE;
    private static final boolean DEFAULT_MEM_CACHE_ENABLED;
    private static final int DEFAULT_MEM_CACHE_SIZE;
    private static final java.lang.String TAG;
    private cn.ffcs.lib.bitmapfun.DiskLruCache mDiskCache;
    private android.support.v4.util.LruCache mMemoryCache;

    static void <clinit>()
    {
        android.graphics.Bitmap$CompressFormat $r0;

        <cn.ffcs.lib.bitmapfun.ImageCache: java.lang.String TAG> = "ImageCache";

        <cn.ffcs.lib.bitmapfun.ImageCache: int DEFAULT_MEM_CACHE_SIZE> = 5242880;

        <cn.ffcs.lib.bitmapfun.ImageCache: boolean DEFAULT_MEM_CACHE_ENABLED> = 1;

        <cn.ffcs.lib.bitmapfun.ImageCache: int DEFAULT_DISK_CACHE_SIZE> = 524288000;

        <cn.ffcs.lib.bitmapfun.ImageCache: boolean DEFAULT_DISK_CACHE_ENABLED> = 1;

        <cn.ffcs.lib.bitmapfun.ImageCache: int DEFAULT_COMPRESS_QUALITY> = 70;

        <cn.ffcs.lib.bitmapfun.ImageCache: boolean DEFAULT_CLEAR_DISK_CACHE_ON_START> = 0;

        $r0 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        <cn.ffcs.lib.bitmapfun.ImageCache: android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT> = $r0;

        return;
    }

    public void <init>(android.content.Context, cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams)
    {
        android.content.Context $r1;
        cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams $r2;
        cn.ffcs.lib.bitmapfun.ImageCache r0;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageCache;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageCache: void init(android.content.Context,cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams)>($r1, $r2);

        return;
    }

    public void <init>(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams $r3;
        cn.ffcs.lib.bitmapfun.ImageCache r0;
        java.lang.String $r2;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageCache;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams;

        specialinvoke $r3.<cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams: void <init>(java.lang.String)>($r2);

        specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageCache: void init(android.content.Context,cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams)>($r1, $r3);

        return;
    }

    static android.graphics.Bitmap$CompressFormat access$000()
    {
        android.graphics.Bitmap$CompressFormat r0;

        r0 = <cn.ffcs.lib.bitmapfun.ImageCache: android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT>;

        return r0;
    }

    public static cn.ffcs.lib.bitmapfun.ImageCache findOrCreateCache(android.support.v4.app.FragmentActivity, cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams)
    {
        cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams $r1;
        android.support.v4.app.FragmentManager $r2;
        cn.ffcs.lib.bitmapfun.RetainFragment $r3;
        cn.ffcs.lib.bitmapfun.ImageCache r5;
        android.support.v4.app.FragmentActivity $r0;
        java.lang.Object $r4;

        $r0 := @parameter0: android.support.v4.app.FragmentActivity;

        $r1 := @parameter1: cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams;

        $r2 = virtualinvoke $r0.<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        $r3 = staticinvoke <cn.ffcs.lib.bitmapfun.RetainFragment: cn.ffcs.lib.bitmapfun.RetainFragment findOrCreateRetainFragment(android.support.v4.app.FragmentManager)>($r2);

        $r4 = virtualinvoke $r3.<cn.ffcs.lib.bitmapfun.RetainFragment: java.lang.Object getObject()>();

        r5 = (cn.ffcs.lib.bitmapfun.ImageCache) $r4;

        if r5 != null goto label1;

        r5 = new cn.ffcs.lib.bitmapfun.ImageCache;

        specialinvoke r5.<cn.ffcs.lib.bitmapfun.ImageCache: void <init>(android.content.Context,cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams)>($r0, $r1);

        virtualinvoke $r3.<cn.ffcs.lib.bitmapfun.RetainFragment: void setObject(java.lang.Object)>(r5);

     label1:
        return r5;
    }

    public static cn.ffcs.lib.bitmapfun.ImageCache findOrCreateCache(android.support.v4.app.FragmentActivity, java.lang.String)
    {
        cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams $r3;
        cn.ffcs.lib.bitmapfun.ImageCache $r2;
        android.support.v4.app.FragmentActivity $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.support.v4.app.FragmentActivity;

        $r1 := @parameter1: java.lang.String;

        $r3 = new cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams;

        specialinvoke $r3.<cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams: void <init>(java.lang.String)>($r1);

        $r2 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageCache: cn.ffcs.lib.bitmapfun.ImageCache findOrCreateCache(android.support.v4.app.FragmentActivity,cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams)>($r0, $r3);

        return $r2;
    }

    private void init(android.content.Context, cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams)
    {
        android.content.Context $r1;
        cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams $r2;
        long $l1;
        cn.ffcs.lib.bitmapfun.ImageCache$1 $r7;
        java.io.File $r4;
        cn.ffcs.lib.bitmapfun.ImageCache r0;
        int $i0;
        android.graphics.Bitmap$CompressFormat $r6;
        java.lang.String $r3;
        cn.ffcs.lib.bitmapfun.DiskLruCache $r5;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageCache;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams;

        $r3 = $r2.<cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams: java.lang.String uniqueName>;

        $r4 = staticinvoke <cn.ffcs.lib.bitmapfun.DiskLruCache: java.io.File getDiskCacheDir(android.content.Context,java.lang.String)>($r1, $r3);

        $z0 = $r2.<cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams: boolean diskCacheEnabled>;

        if $z0 == 0 goto label1;

        $i0 = $r2.<cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams: int diskCacheSize>;

        $l1 = (long) $i0;

        $r5 = staticinvoke <cn.ffcs.lib.bitmapfun.DiskLruCache: cn.ffcs.lib.bitmapfun.DiskLruCache openCache(android.content.Context,java.io.File,long)>($r1, $r4, $l1);

        r0.<cn.ffcs.lib.bitmapfun.ImageCache: cn.ffcs.lib.bitmapfun.DiskLruCache mDiskCache> = $r5;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: cn.ffcs.lib.bitmapfun.DiskLruCache mDiskCache>;

        $r6 = $r2.<cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams: android.graphics.Bitmap$CompressFormat compressFormat>;

        $i0 = $r2.<cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams: int compressQuality>;

        virtualinvoke $r5.<cn.ffcs.lib.bitmapfun.DiskLruCache: void setCompressParams(android.graphics.Bitmap$CompressFormat,int)>($r6, $i0);

        $z0 = $r2.<cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams: boolean clearDiskCacheOnStart>;

        if $z0 == 0 goto label1;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: cn.ffcs.lib.bitmapfun.DiskLruCache mDiskCache>;

        virtualinvoke $r5.<cn.ffcs.lib.bitmapfun.DiskLruCache: void clearCache()>();

     label1:
        $z0 = $r2.<cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams: boolean memoryCacheEnabled>;

        if $z0 == 0 goto label2;

        $r7 = new cn.ffcs.lib.bitmapfun.ImageCache$1;

        $i0 = $r2.<cn.ffcs.lib.bitmapfun.ImageCache$ImageCacheParams: int memCacheSize>;

        specialinvoke $r7.<cn.ffcs.lib.bitmapfun.ImageCache$1: void <init>(cn.ffcs.lib.bitmapfun.ImageCache,int)>(r0, $i0);

        r0.<cn.ffcs.lib.bitmapfun.ImageCache: android.support.v4.util.LruCache mMemoryCache> = $r7;

     label2:
        return;
    }

    public void addBitmapToCache(java.lang.String, android.graphics.Bitmap)
    {
        cn.ffcs.lib.bitmapfun.ImageCache r0;
        android.graphics.Bitmap $r2;
        java.lang.Object $r4;
        java.lang.String $r1;
        cn.ffcs.lib.bitmapfun.DiskLruCache $r5;
        android.support.v4.util.LruCache $r3;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        if $r1 == null goto label3;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: android.support.v4.util.LruCache mMemoryCache>;

        if $r3 == null goto label2;

        $r3 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: android.support.v4.util.LruCache mMemoryCache>;

        $r4 = virtualinvoke $r3.<android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 != null goto label2;

        $r3 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: android.support.v4.util.LruCache mMemoryCache>;

        virtualinvoke $r3.<android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label2:
        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: cn.ffcs.lib.bitmapfun.DiskLruCache mDiskCache>;

        if $r5 == null goto label3;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: cn.ffcs.lib.bitmapfun.DiskLruCache mDiskCache>;

        $z0 = virtualinvoke $r5.<cn.ffcs.lib.bitmapfun.DiskLruCache: boolean containsKey(java.lang.String)>($r1);

        if $z0 != 0 goto label3;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: cn.ffcs.lib.bitmapfun.DiskLruCache mDiskCache>;

        virtualinvoke $r5.<cn.ffcs.lib.bitmapfun.DiskLruCache: void put(java.lang.String,android.graphics.Bitmap)>($r1, $r2);

     label3:
        return;
    }

    public void clearCaches()
    {
        cn.ffcs.lib.bitmapfun.ImageCache r0;
        cn.ffcs.lib.bitmapfun.DiskLruCache $r1;
        android.support.v4.util.LruCache $r2;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageCache;

        $r1 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: cn.ffcs.lib.bitmapfun.DiskLruCache mDiskCache>;

        virtualinvoke $r1.<cn.ffcs.lib.bitmapfun.DiskLruCache: void clearCache()>();

        $r2 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: android.support.v4.util.LruCache mMemoryCache>;

        virtualinvoke $r2.<android.support.v4.util.LruCache: void evictAll()>();

        return;
    }

    public android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String)
    {
        cn.ffcs.lib.bitmapfun.ImageCache r0;
        android.graphics.Bitmap $r2;
        java.lang.String $r1;
        cn.ffcs.lib.bitmapfun.DiskLruCache $r3;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageCache;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: cn.ffcs.lib.bitmapfun.DiskLruCache mDiskCache>;

        if $r3 == null goto label1;

        $r3 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: cn.ffcs.lib.bitmapfun.DiskLruCache mDiskCache>;

        $r2 = virtualinvoke $r3.<cn.ffcs.lib.bitmapfun.DiskLruCache: android.graphics.Bitmap get(java.lang.String)>($r1);

        return $r2;

     label1:
        return null;
    }

    public android.graphics.Bitmap getBitmapFromMemCache(java.lang.String)
    {
        cn.ffcs.lib.bitmapfun.ImageCache r0;
        android.graphics.Bitmap r4;
        java.lang.Object $r2;
        java.lang.String $r1;
        android.support.v4.util.LruCache $r3;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageCache;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: android.support.v4.util.LruCache mMemoryCache>;

        if $r3 == null goto label1;

        $r3 = r0.<cn.ffcs.lib.bitmapfun.ImageCache: android.support.v4.util.LruCache mMemoryCache>;

        $r2 = virtualinvoke $r3.<android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (android.graphics.Bitmap) $r2;

        if r4 == null goto label1;

        return r4;

     label1:
        return null;
    }
}
