public class proguard.classfile.io.ProgramClassReader extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor, proguard.classfile.constant.visitor.ConstantVisitor, proguard.classfile.attribute.visitor.AttributeVisitor, proguard.classfile.attribute.visitor.InnerClassesInfoVisitor, proguard.classfile.attribute.visitor.ExceptionInfoVisitor, proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor, proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor, proguard.classfile.attribute.visitor.LineNumberInfoVisitor, proguard.classfile.attribute.visitor.LocalVariableInfoVisitor, proguard.classfile.attribute.visitor.LocalVariableTypeInfoVisitor, proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor, proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor
{
    private final proguard.classfile.io.RuntimeDataInput dataInput;

    public void <init>(java.io.DataInput)
    {
        proguard.classfile.io.ProgramClassReader r0;
        java.io.DataInput $r1;
        proguard.classfile.io.RuntimeDataInput $r2;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: java.io.DataInput;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        $r2 = new proguard.classfile.io.RuntimeDataInput;

        specialinvoke $r2.<proguard.classfile.io.RuntimeDataInput: void <init>(java.io.DataInput)>($r1);

        r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput> = $r2;

        return;
    }

    private proguard.classfile.attribute.Attribute createAttribute(proguard.classfile.Clazz)
    {
        proguard.classfile.attribute.InnerClassesAttribute $r7;
        proguard.classfile.attribute.preverification.StackMapAttribute $r15;
        proguard.classfile.attribute.SyntheticAttribute $r10;
        proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute $r24;
        proguard.classfile.attribute.DeprecatedAttribute $r9;
        proguard.classfile.attribute.'annotation'.RuntimeInvisibleParameterAnnotationsAttribute $r23;
        proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute $r21;
        proguard.classfile.attribute.SourceDirAttribute $r6;
        proguard.classfile.attribute.preverification.StackMapTableAttribute $r16;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute $r20;
        int $i0, $i1;
        java.lang.String $r3;
        proguard.classfile.attribute.UnknownAttribute $r25;
        proguard.classfile.attribute.ConstantValueAttribute $r12;
        proguard.classfile.io.RuntimeDataInput $r2;
        boolean $z0;
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.EnclosingMethodAttribute $r8;
        proguard.classfile.attribute.LineNumberTableAttribute $r17;
        proguard.classfile.attribute.SourceFileAttribute $r5;
        proguard.classfile.attribute.'annotation'.RuntimeVisibleParameterAnnotationsAttribute $r22;
        proguard.classfile.attribute.CodeAttribute $r14;
        proguard.classfile.attribute.ExceptionsAttribute $r13;
        proguard.classfile.attribute.SignatureAttribute $r11;
        proguard.classfile.attribute.LocalVariableTableAttribute $r18;
        proguard.classfile.attribute.LocalVariableTypeTableAttribute $r19;
        proguard.classfile.attribute.Attribute $r4;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readInt()>();

        $r3 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getString(int)>($i0);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("SourceFile");

        if $z0 == 0 goto label02;

        $r5 = new proguard.classfile.attribute.SourceFileAttribute;

        $r4 = $r5;

        specialinvoke $r5.<proguard.classfile.attribute.SourceFileAttribute: void <init>()>();

     label01:
        $r4.<proguard.classfile.attribute.Attribute: int u2attributeNameIndex> = $i0;

        return $r4;

     label02:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("SourceDir");

        if $z0 == 0 goto label03;

        $r6 = new proguard.classfile.attribute.SourceDirAttribute;

        $r4 = $r6;

        specialinvoke $r6.<proguard.classfile.attribute.SourceDirAttribute: void <init>()>();

        goto label01;

     label03:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("InnerClasses");

        if $z0 == 0 goto label04;

        $r7 = new proguard.classfile.attribute.InnerClassesAttribute;

        $r4 = $r7;

        specialinvoke $r7.<proguard.classfile.attribute.InnerClassesAttribute: void <init>()>();

        goto label01;

     label04:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("EnclosingMethod");

        if $z0 == 0 goto label05;

        $r8 = new proguard.classfile.attribute.EnclosingMethodAttribute;

        $r4 = $r8;

        specialinvoke $r8.<proguard.classfile.attribute.EnclosingMethodAttribute: void <init>()>();

        goto label01;

     label05:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Deprecated");

        if $z0 == 0 goto label06;

        $r9 = new proguard.classfile.attribute.DeprecatedAttribute;

        $r4 = $r9;

        specialinvoke $r9.<proguard.classfile.attribute.DeprecatedAttribute: void <init>()>();

        goto label01;

     label06:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Synthetic");

        if $z0 == 0 goto label07;

        $r10 = new proguard.classfile.attribute.SyntheticAttribute;

        $r4 = $r10;

        specialinvoke $r10.<proguard.classfile.attribute.SyntheticAttribute: void <init>()>();

        goto label01;

     label07:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Signature");

        if $z0 == 0 goto label08;

        $r11 = new proguard.classfile.attribute.SignatureAttribute;

        $r4 = $r11;

        specialinvoke $r11.<proguard.classfile.attribute.SignatureAttribute: void <init>()>();

        goto label01;

     label08:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ConstantValue");

        if $z0 == 0 goto label09;

        $r12 = new proguard.classfile.attribute.ConstantValueAttribute;

        $r4 = $r12;

        specialinvoke $r12.<proguard.classfile.attribute.ConstantValueAttribute: void <init>()>();

        goto label01;

     label09:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Exceptions");

        if $z0 == 0 goto label10;

        $r13 = new proguard.classfile.attribute.ExceptionsAttribute;

        $r4 = $r13;

        specialinvoke $r13.<proguard.classfile.attribute.ExceptionsAttribute: void <init>()>();

        goto label01;

     label10:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Code");

        if $z0 == 0 goto label11;

        $r14 = new proguard.classfile.attribute.CodeAttribute;

        $r4 = $r14;

        specialinvoke $r14.<proguard.classfile.attribute.CodeAttribute: void <init>()>();

        goto label01;

     label11:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("StackMap");

        if $z0 == 0 goto label12;

        $r15 = new proguard.classfile.attribute.preverification.StackMapAttribute;

        $r4 = $r15;

        specialinvoke $r15.<proguard.classfile.attribute.preverification.StackMapAttribute: void <init>()>();

        goto label01;

     label12:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("StackMapTable");

        if $z0 == 0 goto label13;

        $r16 = new proguard.classfile.attribute.preverification.StackMapTableAttribute;

        $r4 = $r16;

        specialinvoke $r16.<proguard.classfile.attribute.preverification.StackMapTableAttribute: void <init>()>();

        goto label01;

     label13:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("LineNumberTable");

        if $z0 == 0 goto label14;

        $r17 = new proguard.classfile.attribute.LineNumberTableAttribute;

        $r4 = $r17;

        specialinvoke $r17.<proguard.classfile.attribute.LineNumberTableAttribute: void <init>()>();

        goto label01;

     label14:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("LocalVariableTable");

        if $z0 == 0 goto label15;

        $r18 = new proguard.classfile.attribute.LocalVariableTableAttribute;

        $r4 = $r18;

        specialinvoke $r18.<proguard.classfile.attribute.LocalVariableTableAttribute: void <init>()>();

        goto label01;

     label15:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("LocalVariableTypeTable");

        if $z0 == 0 goto label16;

        $r19 = new proguard.classfile.attribute.LocalVariableTypeTableAttribute;

        $r4 = $r19;

        specialinvoke $r19.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: void <init>()>();

        goto label01;

     label16:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("RuntimeVisibleAnnotations");

        if $z0 == 0 goto label17;

        $r20 = new proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute;

        $r4 = $r20;

        specialinvoke $r20.<proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute: void <init>()>();

        goto label01;

     label17:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("RuntimeInvisibleAnnotations");

        if $z0 == 0 goto label18;

        $r21 = new proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute;

        $r4 = $r21;

        specialinvoke $r21.<proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute: void <init>()>();

        goto label01;

     label18:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("RuntimeVisibleParameterAnnotations");

        if $z0 == 0 goto label19;

        $r22 = new proguard.classfile.attribute.'annotation'.RuntimeVisibleParameterAnnotationsAttribute;

        $r4 = $r22;

        specialinvoke $r22.<proguard.classfile.attribute.'annotation'.RuntimeVisibleParameterAnnotationsAttribute: void <init>()>();

        goto label01;

     label19:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("RuntimeInvisibleParameterAnnotations");

        if $z0 == 0 goto label20;

        $r23 = new proguard.classfile.attribute.'annotation'.RuntimeInvisibleParameterAnnotationsAttribute;

        $r4 = $r23;

        specialinvoke $r23.<proguard.classfile.attribute.'annotation'.RuntimeInvisibleParameterAnnotationsAttribute: void <init>()>();

        goto label01;

     label20:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("AnnotationDefault");

        if $z0 == 0 goto label21;

        $r24 = new proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute;

        $r4 = $r24;

        specialinvoke $r24.<proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute: void <init>()>();

        goto label01;

     label21:
        $r25 = new proguard.classfile.attribute.UnknownAttribute;

        specialinvoke $r25.<proguard.classfile.attribute.UnknownAttribute: void <init>(int)>($i1);

        $r4 = $r25;

        goto label01;
    }

    private proguard.classfile.constant.Constant createConstant()
    {
        proguard.classfile.constant.FieldrefConstant $r11;
        proguard.classfile.constant.InterfaceMethodrefConstant $r13;
        proguard.classfile.constant.DoubleConstant $r9;
        java.lang.StringBuffer $r3;
        int $i0;
        proguard.classfile.constant.StringConstant $r10;
        java.lang.String $r4;
        proguard.classfile.constant.Utf8Constant $r5;
        proguard.classfile.io.RuntimeDataInput $r2;
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.constant.LongConstant $r8;
        proguard.classfile.constant.ClassConstant $r14;
        proguard.classfile.constant.FloatConstant $r7;
        proguard.classfile.constant.IntegerConstant $r6;
        proguard.classfile.constant.MethodrefConstant $r12;
        java.lang.RuntimeException $r1;
        proguard.classfile.constant.NameAndTypeConstant $r15;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedByte()>();

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label01;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label11;
            case 8: goto label07;
            case 9: goto label08;
            case 10: goto label09;
            case 11: goto label10;
            case 12: goto label12;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown constant type [");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] in constant pool");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label02:
        $r5 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r5.<proguard.classfile.constant.Utf8Constant: void <init>()>();

        return $r5;

     label03:
        $r6 = new proguard.classfile.constant.IntegerConstant;

        specialinvoke $r6.<proguard.classfile.constant.IntegerConstant: void <init>()>();

        return $r6;

     label04:
        $r7 = new proguard.classfile.constant.FloatConstant;

        specialinvoke $r7.<proguard.classfile.constant.FloatConstant: void <init>()>();

        return $r7;

     label05:
        $r8 = new proguard.classfile.constant.LongConstant;

        specialinvoke $r8.<proguard.classfile.constant.LongConstant: void <init>()>();

        return $r8;

     label06:
        $r9 = new proguard.classfile.constant.DoubleConstant;

        specialinvoke $r9.<proguard.classfile.constant.DoubleConstant: void <init>()>();

        return $r9;

     label07:
        $r10 = new proguard.classfile.constant.StringConstant;

        specialinvoke $r10.<proguard.classfile.constant.StringConstant: void <init>()>();

        return $r10;

     label08:
        $r11 = new proguard.classfile.constant.FieldrefConstant;

        specialinvoke $r11.<proguard.classfile.constant.FieldrefConstant: void <init>()>();

        return $r11;

     label09:
        $r12 = new proguard.classfile.constant.MethodrefConstant;

        specialinvoke $r12.<proguard.classfile.constant.MethodrefConstant: void <init>()>();

        return $r12;

     label10:
        $r13 = new proguard.classfile.constant.InterfaceMethodrefConstant;

        specialinvoke $r13.<proguard.classfile.constant.InterfaceMethodrefConstant: void <init>()>();

        return $r13;

     label11:
        $r14 = new proguard.classfile.constant.ClassConstant;

        specialinvoke $r14.<proguard.classfile.constant.ClassConstant: void <init>()>();

        return $r14;

     label12:
        $r15 = new proguard.classfile.constant.NameAndTypeConstant;

        specialinvoke $r15.<proguard.classfile.constant.NameAndTypeConstant: void <init>()>();

        return $r15;
    }

    private proguard.classfile.attribute.'annotation'.ElementValue createElementValue()
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.'annotation'.ConstantElementValue $r5;
        proguard.classfile.attribute.'annotation'.ClassElementValue $r7;
        proguard.classfile.attribute.'annotation'.ArrayElementValue $r9;
        proguard.classfile.attribute.'annotation'.EnumConstantElementValue $r6;
        proguard.classfile.attribute.'annotation'.AnnotationElementValue $r8;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuffer $r3;
        int $i0;
        java.lang.String $r4;
        proguard.classfile.io.RuntimeDataInput $r1;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r1.<proguard.classfile.io.RuntimeDataInput: int readUnsignedByte()>();

        lookupswitch($i0)
        {
            case 64: goto label5;
            case 66: goto label2;
            case 67: goto label2;
            case 68: goto label2;
            case 70: goto label2;
            case 73: goto label2;
            case 74: goto label2;
            case 83: goto label2;
            case 90: goto label2;
            case 91: goto label6;
            case 99: goto label4;
            case 101: goto label3;
            case 115: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown element value tag [");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r5 = new proguard.classfile.attribute.'annotation'.ConstantElementValue;

        specialinvoke $r5.<proguard.classfile.attribute.'annotation'.ConstantElementValue: void <init>(int)>($i0);

        return $r5;

     label3:
        $r6 = new proguard.classfile.attribute.'annotation'.EnumConstantElementValue;

        specialinvoke $r6.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: void <init>()>();

        return $r6;

     label4:
        $r7 = new proguard.classfile.attribute.'annotation'.ClassElementValue;

        specialinvoke $r7.<proguard.classfile.attribute.'annotation'.ClassElementValue: void <init>()>();

        return $r7;

     label5:
        $r8 = new proguard.classfile.attribute.'annotation'.AnnotationElementValue;

        specialinvoke $r8.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: void <init>()>();

        return $r8;

     label6:
        $r9 = new proguard.classfile.attribute.'annotation'.ArrayElementValue;

        specialinvoke $r9.<proguard.classfile.attribute.'annotation'.ArrayElementValue: void <init>()>();

        return $r9;
    }

    private proguard.classfile.attribute.preverification.StackMapFrame createStackMapFrame()
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.preverification.FullFrame $r6;
        proguard.classfile.attribute.preverification.MoreZeroFrame $r5;
        proguard.classfile.attribute.preverification.SameOneFrame $r3;
        int $i0;
        proguard.classfile.attribute.preverification.SameZeroFrame $r2;
        proguard.classfile.attribute.preverification.LessZeroFrame $r4;
        proguard.classfile.io.RuntimeDataInput $r1;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r1.<proguard.classfile.io.RuntimeDataInput: int readUnsignedByte()>();

        if $i0 >= 64 goto label1;

        $r2 = new proguard.classfile.attribute.preverification.SameZeroFrame;

        specialinvoke $r2.<proguard.classfile.attribute.preverification.SameZeroFrame: void <init>(int)>($i0);

        return $r2;

     label1:
        if $i0 >= 247 goto label2;

        $r3 = new proguard.classfile.attribute.preverification.SameOneFrame;

        specialinvoke $r3.<proguard.classfile.attribute.preverification.SameOneFrame: void <init>(int)>($i0);

        return $r3;

     label2:
        if $i0 >= 248 goto label3;

        $r3 = new proguard.classfile.attribute.preverification.SameOneFrame;

        specialinvoke $r3.<proguard.classfile.attribute.preverification.SameOneFrame: void <init>(int)>($i0);

        return $r3;

     label3:
        if $i0 >= 251 goto label4;

        $r4 = new proguard.classfile.attribute.preverification.LessZeroFrame;

        specialinvoke $r4.<proguard.classfile.attribute.preverification.LessZeroFrame: void <init>(int)>($i0);

        return $r4;

     label4:
        if $i0 >= 252 goto label5;

        $r2 = new proguard.classfile.attribute.preverification.SameZeroFrame;

        specialinvoke $r2.<proguard.classfile.attribute.preverification.SameZeroFrame: void <init>(int)>($i0);

        return $r2;

     label5:
        if $i0 >= 255 goto label6;

        $r5 = new proguard.classfile.attribute.preverification.MoreZeroFrame;

        specialinvoke $r5.<proguard.classfile.attribute.preverification.MoreZeroFrame: void <init>(int)>($i0);

        return $r5;

     label6:
        $r6 = new proguard.classfile.attribute.preverification.FullFrame;

        specialinvoke $r6.<proguard.classfile.attribute.preverification.FullFrame: void <init>()>();

        return $r6;
    }

    private proguard.classfile.attribute.preverification.VerificationType createVerificationType()
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.preverification.FloatType $r6;
        java.lang.RuntimeException $r1;
        proguard.classfile.attribute.preverification.NullType $r11;
        java.lang.StringBuffer $r3;
        int $i0;
        proguard.classfile.attribute.preverification.IntegerType $r5;
        proguard.classfile.attribute.preverification.UninitializedType $r12;
        proguard.classfile.attribute.preverification.ObjectType $r10;
        java.lang.String $r4;
        proguard.classfile.attribute.preverification.LongType $r7;
        proguard.classfile.attribute.preverification.DoubleType $r8;
        proguard.classfile.attribute.preverification.TopType $r9;
        proguard.classfile.attribute.preverification.UninitializedThisType $r13;
        proguard.classfile.io.RuntimeDataInput $r2;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedByte()>();

        lookupswitch($i0)
        {
            case 0: goto label06;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label05;
            case 4: goto label04;
            case 5: goto label08;
            case 6: goto label10;
            case 7: goto label07;
            case 8: goto label09;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown verification type [");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] in stack map frame");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label02:
        $r5 = new proguard.classfile.attribute.preverification.IntegerType;

        specialinvoke $r5.<proguard.classfile.attribute.preverification.IntegerType: void <init>()>();

        return $r5;

     label03:
        $r6 = new proguard.classfile.attribute.preverification.FloatType;

        specialinvoke $r6.<proguard.classfile.attribute.preverification.FloatType: void <init>()>();

        return $r6;

     label04:
        $r7 = new proguard.classfile.attribute.preverification.LongType;

        specialinvoke $r7.<proguard.classfile.attribute.preverification.LongType: void <init>()>();

        return $r7;

     label05:
        $r8 = new proguard.classfile.attribute.preverification.DoubleType;

        specialinvoke $r8.<proguard.classfile.attribute.preverification.DoubleType: void <init>()>();

        return $r8;

     label06:
        $r9 = new proguard.classfile.attribute.preverification.TopType;

        specialinvoke $r9.<proguard.classfile.attribute.preverification.TopType: void <init>()>();

        return $r9;

     label07:
        $r10 = new proguard.classfile.attribute.preverification.ObjectType;

        specialinvoke $r10.<proguard.classfile.attribute.preverification.ObjectType: void <init>()>();

        return $r10;

     label08:
        $r11 = new proguard.classfile.attribute.preverification.NullType;

        specialinvoke $r11.<proguard.classfile.attribute.preverification.NullType: void <init>()>();

        return $r11;

     label09:
        $r12 = new proguard.classfile.attribute.preverification.UninitializedType;

        specialinvoke $r12.<proguard.classfile.attribute.preverification.UninitializedType: void <init>()>();

        return $r12;

     label10:
        $r13 = new proguard.classfile.attribute.preverification.UninitializedThisType;

        specialinvoke $r13.<proguard.classfile.attribute.preverification.UninitializedThisType: void <init>()>();

        return $r13;
    }

    public void visitAnnotation(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.attribute.'annotation'.ElementValue[] $r4;
        proguard.classfile.attribute.'annotation'.ElementValue $r5;
        proguard.classfile.Clazz $r1;
        int $i0, $i1;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.'annotation'.Annotation: int u2typeIndex> = $i0;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.'annotation'.Annotation: int u2elementValuesCount> = $i0;

        $i0 = $r2.<proguard.classfile.attribute.'annotation'.Annotation: int u2elementValuesCount>;

        $r4 = newarray (proguard.classfile.attribute.'annotation'.ElementValue)[$i0];

        $r2.<proguard.classfile.attribute.'annotation'.Annotation: proguard.classfile.attribute.'annotation'.ElementValue[] elementValues> = $r4;

        $i0 = 0;

     label1:
        $i1 = $r2.<proguard.classfile.attribute.'annotation'.Annotation: int u2elementValuesCount>;

        if $i0 >= $i1 goto label2;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r5 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.'annotation'.ElementValue createElementValue()>();

        $r5.<proguard.classfile.attribute.'annotation'.ElementValue: int u2elementNameIndex> = $i1;

        virtualinvoke $r5.<proguard.classfile.attribute.'annotation'.ElementValue: void accept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation,proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor)>($r1, $r2, r0);

        $r4 = $r2.<proguard.classfile.attribute.'annotation'.Annotation: proguard.classfile.attribute.'annotation'.ElementValue[] elementValues>;

        $r4[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitAnnotationDefaultAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.'annotation'.ElementValue $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute;

        $r4 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.'annotation'.ElementValue createElementValue()>();

        virtualinvoke $r4.<proguard.classfile.attribute.'annotation'.ElementValue: void accept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation,proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor)>($r1, null, r0);

        $r3.<proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute: proguard.classfile.attribute.'annotation'.ElementValue defaultValue> = $r4;

        return;
    }

    public void visitAnnotationElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.AnnotationElementValue)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.AnnotationElementValue $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.AnnotationElementValue;

        $r2 = new proguard.classfile.attribute.'annotation'.Annotation;

        specialinvoke $r2.<proguard.classfile.attribute.'annotation'.Annotation: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation)>($r1, $r2);

        $r3.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: proguard.classfile.attribute.'annotation'.Annotation annotationValue> = $r2;

        return;
    }

    public void visitAnyAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.AnnotationsAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.'annotation'.Annotation $r5;
        proguard.classfile.attribute.'annotation'.AnnotationsAttribute $r2;
        proguard.classfile.attribute.'annotation'.Annotation[] $r3;
        proguard.classfile.Clazz $r1;
        int $i0, $i1;
        proguard.classfile.io.RuntimeDataInput $r4;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.AnnotationsAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: int u2annotationsCount> = $i0;

        $i0 = $r2.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: int u2annotationsCount>;

        $r3 = newarray (proguard.classfile.attribute.'annotation'.Annotation)[$i0];

        $r2.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[] annotations> = $r3;

        $i0 = 0;

     label1:
        $i1 = $r2.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: int u2annotationsCount>;

        if $i0 >= $i1 goto label2;

        $r5 = new proguard.classfile.attribute.'annotation'.Annotation;

        specialinvoke $r5.<proguard.classfile.attribute.'annotation'.Annotation: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation)>($r1, $r5);

        $r3 = $r2.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[] annotations>;

        $r3[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.'annotation'.Annotation $r5;
        proguard.classfile.attribute.'annotation'.Annotation[][] $r9;
        proguard.classfile.attribute.'annotation'.Annotation[] $r4;
        proguard.classfile.Clazz $r1;
        int[] $r8;
        int $i0, $i1, $i2;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute $r3;
        java.lang.String $r7;
        proguard.classfile.io.RuntimeDataInput $r6;
        boolean $z0;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute;

        $r6 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r6.<proguard.classfile.io.RuntimeDataInput: int readUnsignedByte()>();

        $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2parametersCount> = $i0;

        $r7 = interfaceinvoke $r2.<proguard.classfile.Method: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r2.<proguard.classfile.Method: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalMethodParameterCount(java.lang.String)>($r7);

        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2parametersCount>;

        $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2parametersCount> = $i0;

        $i0 = $i0 - $i1;

     label1:
        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2parametersCount>;

        $r8 = newarray (int)[$i1];

        $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int[] u2parameterAnnotationsCount> = $r8;

        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2parametersCount>;

        $r9 = newarray (proguard.classfile.attribute.'annotation'.Annotation[])[$i1];

        $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[][] parameterAnnotations> = $r9;

     label2:
        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2parametersCount>;

        if $i0 >= $i1 goto label5;

        $r6 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r6.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4 = newarray (proguard.classfile.attribute.'annotation'.Annotation)[$i1];

        $i2 = 0;

     label3:
        if $i2 >= $i1 goto label4;

        $r5 = new proguard.classfile.attribute.'annotation'.Annotation;

        specialinvoke $r5.<proguard.classfile.attribute.'annotation'.Annotation: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation)>($r1, $r5);

        $r4[$i2] = $r5;

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $r8 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int[] u2parameterAnnotationsCount>;

        $r8[$i0] = $i1;

        $r9 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[][] parameterAnnotations>;

        $r9[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label2;

     label5:
        return;

     label6:
        $i0 = 0;

        goto label1;
    }

    public void visitAnyRefConstant(proguard.classfile.Clazz, proguard.classfile.constant.RefConstant)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.constant.RefConstant $r2;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.RefConstant;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.constant.RefConstant: int u2classIndex> = $i0;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.constant.RefConstant: int u2nameAndTypeIndex> = $i0;

        return;
    }

    public void visitAnyVerificationType(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.VerificationType)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.VerificationType $r4;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.VerificationType;

        return;
    }

    public void visitArrayElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.ArrayElementValue)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.attribute.'annotation'.ArrayElementValue $r3;
        proguard.classfile.attribute.'annotation'.ElementValue[] $r4;
        proguard.classfile.attribute.'annotation'.ElementValue $r6;
        proguard.classfile.Clazz $r1;
        int $i0, $i1;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ArrayElementValue;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: int u2elementValuesCount> = $i0;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: int u2elementValuesCount>;

        $r4 = newarray (proguard.classfile.attribute.'annotation'.ElementValue)[$i0];

        $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: proguard.classfile.attribute.'annotation'.ElementValue[] elementValues> = $r4;

        $i0 = 0;

     label1:
        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: int u2elementValuesCount>;

        if $i0 >= $i1 goto label2;

        $r6 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.'annotation'.ElementValue createElementValue()>();

        virtualinvoke $r6.<proguard.classfile.attribute.'annotation'.ElementValue: void accept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation,proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor)>($r1, $r2, r0);

        $r4 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: proguard.classfile.attribute.'annotation'.ElementValue[] elementValues>;

        $r4[$i0] = $r6;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.constant.ClassConstant $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.constant.ClassConstant: int u2nameIndex> = $i0;

        return;
    }

    public void visitClassElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.ClassElementValue)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.attribute.'annotation'.ClassElementValue $r3;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataInput $r4;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ClassElementValue;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.'annotation'.ClassElementValue: int u2classInfoIndex> = $i0;

        return;
    }

    public void visitCodeAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        byte[] $r5;
        proguard.classfile.attribute.Attribute[] $r8;
        proguard.classfile.attribute.ExceptionInfo[] $r6;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.ExceptionInfo $r7;
        proguard.classfile.io.RuntimeDataInput $r4;
        proguard.classfile.attribute.Attribute $r9;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.CodeAttribute: int u2maxStack> = $i0;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.CodeAttribute: int u2maxLocals> = $i0;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readInt()>();

        $r3.<proguard.classfile.attribute.CodeAttribute: int u4codeLength> = $i0;

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u4codeLength>;

        $r5 = newarray (byte)[$i0];

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: void readFully(byte[])>($r5);

        $r3.<proguard.classfile.attribute.CodeAttribute: byte[] code> = $r5;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.CodeAttribute: int u2exceptionTableLength> = $i0;

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2exceptionTableLength>;

        $r6 = newarray (proguard.classfile.attribute.ExceptionInfo)[$i0];

        $r3.<proguard.classfile.attribute.CodeAttribute: proguard.classfile.attribute.ExceptionInfo[] exceptionTable> = $r6;

        $i0 = 0;

     label1:
        $i1 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2exceptionTableLength>;

        if $i0 >= $i1 goto label2;

        $r7 = new proguard.classfile.attribute.ExceptionInfo;

        specialinvoke $r7.<proguard.classfile.attribute.ExceptionInfo: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo)>($r1, $r2, $r3, $r7);

        $r6 = $r3.<proguard.classfile.attribute.CodeAttribute: proguard.classfile.attribute.ExceptionInfo[] exceptionTable>;

        $r6[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.CodeAttribute: int u2attributesCount> = $i0;

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2attributesCount>;

        $r8 = newarray (proguard.classfile.attribute.Attribute)[$i0];

        $r3.<proguard.classfile.attribute.CodeAttribute: proguard.classfile.attribute.Attribute[] attributes> = $r8;

        $i0 = 0;

     label3:
        $i1 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2attributesCount>;

        if $i0 >= $i1 goto label4;

        $r9 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.Attribute createAttribute(proguard.classfile.Clazz)>($r1);

        virtualinvoke $r9.<proguard.classfile.attribute.Attribute: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, $r2, $r3, r0);

        $r8 = $r3.<proguard.classfile.attribute.CodeAttribute: proguard.classfile.attribute.Attribute[] attributes>;

        $r8[$i0] = $r9;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return;
    }

    public void visitConstantElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.ConstantElementValue)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.'annotation'.ConstantElementValue $r3;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataInput $r4;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ConstantElementValue;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: int u2constantValueIndex> = $i0;

        return;
    }

    public void visitConstantValueAttribute(proguard.classfile.Clazz, proguard.classfile.Field, proguard.classfile.attribute.ConstantValueAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.Field $r2;
        proguard.classfile.attribute.ConstantValueAttribute $r3;
        proguard.classfile.io.RuntimeDataInput $r4;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        $r3 := @parameter2: proguard.classfile.attribute.ConstantValueAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.ConstantValueAttribute: int u2constantValueIndex> = $i0;

        return;
    }

    public void visitDeprecatedAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.DeprecatedAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.DeprecatedAttribute $r2;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.DeprecatedAttribute;

        return;
    }

    public void visitDoubleConstant(proguard.classfile.Clazz, proguard.classfile.constant.DoubleConstant)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.io.RuntimeDataInput $r3;
        proguard.classfile.constant.DoubleConstant $r2;
        double $d0;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.DoubleConstant;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $d0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: double readDouble()>();

        $r2.<proguard.classfile.constant.DoubleConstant: double f8value> = $d0;

        return;
    }

    public void visitEnclosingMethodAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.EnclosingMethodAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.EnclosingMethodAttribute $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.EnclosingMethodAttribute;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.EnclosingMethodAttribute: int u2classIndex> = $i0;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.EnclosingMethodAttribute: int u2nameAndTypeIndex> = $i0;

        return;
    }

    public void visitEnumConstantElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.EnumConstantElementValue)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.'annotation'.EnumConstantElementValue $r3;
        proguard.classfile.io.RuntimeDataInput $r4;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.EnumConstantElementValue;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: int u2typeNameIndex> = $i0;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: int u2constantNameIndex> = $i0;

        return;
    }

    public void visitExceptionInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.ExceptionInfo)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.ExceptionInfo $r4;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.ExceptionInfo;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.ExceptionInfo: int u2startPC> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.ExceptionInfo: int u2endPC> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.ExceptionInfo: int u2handlerPC> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.ExceptionInfo: int u2catchType> = $i0;

        return;
    }

    public void visitExceptionsAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.ExceptionsAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        int[] $r5;
        proguard.classfile.attribute.ExceptionsAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r4;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.ExceptionsAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3.<proguard.classfile.attribute.ExceptionsAttribute: int u2exceptionIndexTableLength> = $i0;

        $i0 = $r3.<proguard.classfile.attribute.ExceptionsAttribute: int u2exceptionIndexTableLength>;

        $r5 = newarray (int)[$i0];

        $r3.<proguard.classfile.attribute.ExceptionsAttribute: int[] u2exceptionIndexTable> = $r5;

        $i0 = 0;

     label1:
        $i1 = $r3.<proguard.classfile.attribute.ExceptionsAttribute: int u2exceptionIndexTableLength>;

        if $i0 >= $i1 goto label2;

        $r5 = $r3.<proguard.classfile.attribute.ExceptionsAttribute: int[] u2exceptionIndexTable>;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r5[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitFloatConstant(proguard.classfile.Clazz, proguard.classfile.constant.FloatConstant)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.constant.FloatConstant $r2;
        proguard.classfile.Clazz $r1;
        float $f0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.FloatConstant;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $f0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: float readFloat()>();

        $r2.<proguard.classfile.constant.FloatConstant: float f4value> = $f0;

        return;
    }

    public void visitFullFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.FullFrame)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.preverification.FullFrame $r4;
        proguard.classfile.attribute.preverification.VerificationType $r7;
        proguard.classfile.attribute.preverification.VerificationType[] $r6;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1, $i2;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.FullFrame;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.FullFrame: int u2offsetDelta> = $i1;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.FullFrame: int variablesCount> = $i1;

        $i1 = $r4.<proguard.classfile.attribute.preverification.FullFrame: int variablesCount>;

        $r6 = newarray (proguard.classfile.attribute.preverification.VerificationType)[$i1];

        $r4.<proguard.classfile.attribute.preverification.FullFrame: proguard.classfile.attribute.preverification.VerificationType[] variables> = $r6;

        $i1 = 0;

     label1:
        $i2 = $r4.<proguard.classfile.attribute.preverification.FullFrame: int variablesCount>;

        if $i1 >= $i2 goto label2;

        $r7 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.preverification.VerificationType createVerificationType()>();

        virtualinvoke $r7.<proguard.classfile.attribute.preverification.VerificationType: void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)>($r1, $r2, $r3, $i0, $i1, r0);

        $r6 = $r4.<proguard.classfile.attribute.preverification.FullFrame: proguard.classfile.attribute.preverification.VerificationType[] variables>;

        $r6[$i1] = $r7;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.FullFrame: int stackCount> = $i1;

        $i1 = $r4.<proguard.classfile.attribute.preverification.FullFrame: int stackCount>;

        $r6 = newarray (proguard.classfile.attribute.preverification.VerificationType)[$i1];

        $r4.<proguard.classfile.attribute.preverification.FullFrame: proguard.classfile.attribute.preverification.VerificationType[] stack> = $r6;

        $i1 = 0;

     label3:
        $i2 = $r4.<proguard.classfile.attribute.preverification.FullFrame: int stackCount>;

        if $i1 >= $i2 goto label4;

        $r7 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.preverification.VerificationType createVerificationType()>();

        virtualinvoke $r7.<proguard.classfile.attribute.preverification.VerificationType: void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)>($r1, $r2, $r3, $i0, $i1, r0);

        $r6 = $r4.<proguard.classfile.attribute.preverification.FullFrame: proguard.classfile.attribute.preverification.VerificationType[] stack>;

        $r6[$i1] = $r7;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }

    public void visitInnerClassesAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.InnerClassesAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.InnerClassesAttribute $r2;
        proguard.classfile.attribute.InnerClassesInfo[] $r3;
        proguard.classfile.Clazz $r1;
        int $i0, $i1;
        proguard.classfile.io.RuntimeDataInput $r4;
        proguard.classfile.attribute.InnerClassesInfo $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.InnerClassesAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.InnerClassesAttribute: int u2classesCount> = $i0;

        $i0 = $r2.<proguard.classfile.attribute.InnerClassesAttribute: int u2classesCount>;

        $r3 = newarray (proguard.classfile.attribute.InnerClassesInfo)[$i0];

        $r2.<proguard.classfile.attribute.InnerClassesAttribute: proguard.classfile.attribute.InnerClassesInfo[] classes> = $r3;

        $i0 = 0;

     label1:
        $i1 = $r2.<proguard.classfile.attribute.InnerClassesAttribute: int u2classesCount>;

        if $i0 >= $i1 goto label2;

        $r5 = new proguard.classfile.attribute.InnerClassesInfo;

        specialinvoke $r5.<proguard.classfile.attribute.InnerClassesInfo: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo)>($r1, $r5);

        $r3 = $r2.<proguard.classfile.attribute.InnerClassesAttribute: proguard.classfile.attribute.InnerClassesInfo[] classes>;

        $r3[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitInnerClassesInfo(proguard.classfile.Clazz, proguard.classfile.attribute.InnerClassesInfo)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.InnerClassesInfo $r2;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.InnerClassesInfo;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.InnerClassesInfo: int u2innerClassIndex> = $i0;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.InnerClassesInfo: int u2outerClassIndex> = $i0;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.InnerClassesInfo: int u2innerNameIndex> = $i0;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.InnerClassesInfo: int u2innerClassAccessFlags> = $i0;

        return;
    }

    public void visitIntegerConstant(proguard.classfile.Clazz, proguard.classfile.constant.IntegerConstant)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.IntegerConstant $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.IntegerConstant;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readInt()>();

        $r2.<proguard.classfile.constant.IntegerConstant: int u4value> = $i0;

        return;
    }

    public void visitLessZeroFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.LessZeroFrame)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.LessZeroFrame $r4;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.LessZeroFrame;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.LessZeroFrame: int u2offsetDelta> = $i0;

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.LibraryClass $r1;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        return;
    }

    public void visitLibraryMember(proguard.classfile.LibraryClass, proguard.classfile.LibraryMember)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.LibraryMember $r2;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryMember;

        return;
    }

    public void visitLineNumberInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LineNumberInfo)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.attribute.LineNumberInfo $r4;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LineNumberInfo;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LineNumberInfo: int u2startPC> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LineNumberInfo: int u2lineNumber> = $i0;

        return;
    }

    public void visitLineNumberTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LineNumberTableAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.LineNumberTableAttribute $r4;
        proguard.classfile.attribute.LineNumberInfo $r7;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.attribute.LineNumberInfo[] $r5;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r6;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LineNumberTableAttribute;

        $r6 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r6.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LineNumberTableAttribute: int u2lineNumberTableLength> = $i0;

        $i0 = $r4.<proguard.classfile.attribute.LineNumberTableAttribute: int u2lineNumberTableLength>;

        $r5 = newarray (proguard.classfile.attribute.LineNumberInfo)[$i0];

        $r4.<proguard.classfile.attribute.LineNumberTableAttribute: proguard.classfile.attribute.LineNumberInfo[] lineNumberTable> = $r5;

        $i0 = 0;

     label1:
        $i1 = $r4.<proguard.classfile.attribute.LineNumberTableAttribute: int u2lineNumberTableLength>;

        if $i0 >= $i1 goto label2;

        $r7 = new proguard.classfile.attribute.LineNumberInfo;

        specialinvoke $r7.<proguard.classfile.attribute.LineNumberInfo: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo)>($r1, $r2, $r3, $r7);

        $r5 = $r4.<proguard.classfile.attribute.LineNumberTableAttribute: proguard.classfile.attribute.LineNumberInfo[] lineNumberTable>;

        $r5[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitLocalVariableInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableInfo)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.attribute.LocalVariableInfo $r4;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableInfo;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2startPC> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2length> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2nameIndex> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2descriptorIndex> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2index> = $i0;

        return;
    }

    public void visitLocalVariableTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTableAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.LocalVariableInfo $r7;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.LocalVariableTableAttribute $r4;
        proguard.classfile.attribute.LocalVariableInfo[] $r5;
        proguard.classfile.io.RuntimeDataInput $r6;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTableAttribute;

        $r6 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r6.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: int u2localVariableTableLength> = $i0;

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: int u2localVariableTableLength>;

        $r5 = newarray (proguard.classfile.attribute.LocalVariableInfo)[$i0];

        $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: proguard.classfile.attribute.LocalVariableInfo[] localVariableTable> = $r5;

        $i0 = 0;

     label1:
        $i1 = $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: int u2localVariableTableLength>;

        if $i0 >= $i1 goto label2;

        $r7 = new proguard.classfile.attribute.LocalVariableInfo;

        specialinvoke $r7.<proguard.classfile.attribute.LocalVariableInfo: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo)>($r1, $r2, $r3, $r7);

        $r5 = $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: proguard.classfile.attribute.LocalVariableInfo[] localVariableTable>;

        $r5[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitLocalVariableTypeInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTypeInfo)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r5;
        proguard.classfile.attribute.LocalVariableTypeInfo $r4;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTypeInfo;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2startPC> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2length> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2nameIndex> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2signatureIndex> = $i0;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2index> = $i0;

        return;
    }

    public void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTypeTableAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.LocalVariableTypeInfo $r7;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.LocalVariableTypeTableAttribute $r4;
        proguard.classfile.io.RuntimeDataInput $r6;
        proguard.classfile.attribute.LocalVariableTypeInfo[] $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTypeTableAttribute;

        $r6 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r6.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: int u2localVariableTypeTableLength> = $i0;

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: int u2localVariableTypeTableLength>;

        $r5 = newarray (proguard.classfile.attribute.LocalVariableTypeInfo)[$i0];

        $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: proguard.classfile.attribute.LocalVariableTypeInfo[] localVariableTypeTable> = $r5;

        $i0 = 0;

     label1:
        $i1 = $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: int u2localVariableTypeTableLength>;

        if $i0 >= $i1 goto label2;

        $r7 = new proguard.classfile.attribute.LocalVariableTypeInfo;

        specialinvoke $r7.<proguard.classfile.attribute.LocalVariableTypeInfo: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo)>($r1, $r2, $r3, $r7);

        $r5 = $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: proguard.classfile.attribute.LocalVariableTypeInfo[] localVariableTypeTable>;

        $r5[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitLongConstant(proguard.classfile.Clazz, proguard.classfile.constant.LongConstant)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.constant.LongConstant $r2;
        proguard.classfile.Clazz $r1;
        long $l0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.LongConstant;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $l0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: long readLong()>();

        $r2.<proguard.classfile.constant.LongConstant: long u8value> = $l0;

        return;
    }

    public void visitMoreZeroFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.MoreZeroFrame)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.preverification.VerificationType $r7;
        proguard.classfile.attribute.preverification.MoreZeroFrame $r4;
        proguard.classfile.attribute.preverification.VerificationType[] $r6;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1, $i2;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.MoreZeroFrame;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.MoreZeroFrame: int u2offsetDelta> = $i1;

        $i1 = $r4.<proguard.classfile.attribute.preverification.MoreZeroFrame: int additionalVariablesCount>;

        $r6 = newarray (proguard.classfile.attribute.preverification.VerificationType)[$i1];

        $r4.<proguard.classfile.attribute.preverification.MoreZeroFrame: proguard.classfile.attribute.preverification.VerificationType[] additionalVariables> = $r6;

        $i1 = 0;

     label1:
        $i2 = $r4.<proguard.classfile.attribute.preverification.MoreZeroFrame: int additionalVariablesCount>;

        if $i1 >= $i2 goto label2;

        $r7 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.preverification.VerificationType createVerificationType()>();

        virtualinvoke $r7.<proguard.classfile.attribute.preverification.VerificationType: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)>($r1, $r2, $r3, $i0, r0);

        $r6 = $r4.<proguard.classfile.attribute.preverification.MoreZeroFrame: proguard.classfile.attribute.preverification.VerificationType[] additionalVariables>;

        $r6[$i1] = $r7;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitNameAndTypeConstant(proguard.classfile.Clazz, proguard.classfile.constant.NameAndTypeConstant)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.constant.NameAndTypeConstant $r2;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.NameAndTypeConstant;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.constant.NameAndTypeConstant: int u2nameIndex> = $i0;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.constant.NameAndTypeConstant: int u2descriptorIndex> = $i0;

        return;
    }

    public void visitObjectType(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.ObjectType)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.ObjectType $r4;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.ObjectType;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.ObjectType: int u2classIndex> = $i0;

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.constant.Constant $r4;
        proguard.classfile.ProgramField[] $r6;
        proguard.classfile.ProgramMethod[] $r8;
        proguard.classfile.attribute.Attribute[] $r10;
        proguard.classfile.ProgramClass $r1;
        int[] $r5;
        proguard.classfile.ProgramField $r7;
        proguard.classfile.ProgramMethod $r9;
        int $i0, $i1;
        proguard.classfile.constant.Constant[] $r3;
        proguard.classfile.io.RuntimeDataInput $r2;
        proguard.classfile.attribute.Attribute $r11;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readInt()>();

        $r1.<proguard.classfile.ProgramClass: int u4magic> = $i0;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u4magic>;

        staticinvoke <proguard.classfile.util.ClassUtil: void checkMagicNumber(int)>($i0);

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalClassVersion(int,int)>($i1, $i0);

        $r1.<proguard.classfile.ProgramClass: int u4version> = $i0;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u4version>;

        staticinvoke <proguard.classfile.util.ClassUtil: void checkVersionNumbers(int)>($i0);

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r1.<proguard.classfile.ProgramClass: int u2constantPoolCount> = $i0;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2constantPoolCount>;

        $r3 = newarray (proguard.classfile.constant.Constant)[$i0];

        $r1.<proguard.classfile.ProgramClass: proguard.classfile.constant.Constant[] constantPool> = $r3;

        $i0 = 1;

     label01:
        $i1 = $r1.<proguard.classfile.ProgramClass: int u2constantPoolCount>;

        if $i0 >= $i1 goto label04;

        $r4 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.constant.Constant createConstant()>();

        virtualinvoke $r4.<proguard.classfile.constant.Constant: void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor)>($r1, r0);

        $r3 = $r1.<proguard.classfile.ProgramClass: proguard.classfile.constant.Constant[] constantPool>;

        $r3[$i0] = $r4;

        $i1 = virtualinvoke $r4.<proguard.classfile.constant.Constant: int getTag()>();

        if $i1 == 5 goto label02;

        if $i1 != 6 goto label03;

     label02:
        $r3 = $r1.<proguard.classfile.ProgramClass: proguard.classfile.constant.Constant[] constantPool>;

        $i0 = $i0 + 1;

        $r3[$i0] = null;

     label03:
        $i0 = $i0 + 1;

        goto label01;

     label04:
        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r1.<proguard.classfile.ProgramClass: int u2accessFlags> = $i0;

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r1.<proguard.classfile.ProgramClass: int u2thisClass> = $i0;

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r1.<proguard.classfile.ProgramClass: int u2superClass> = $i0;

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r1.<proguard.classfile.ProgramClass: int u2interfacesCount> = $i0;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2interfacesCount>;

        $r5 = newarray (int)[$i0];

        $r1.<proguard.classfile.ProgramClass: int[] u2interfaces> = $r5;

        $i0 = 0;

     label05:
        $i1 = $r1.<proguard.classfile.ProgramClass: int u2interfacesCount>;

        if $i0 >= $i1 goto label06;

        $r5 = $r1.<proguard.classfile.ProgramClass: int[] u2interfaces>;

        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r5[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label05;

     label06:
        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r1.<proguard.classfile.ProgramClass: int u2fieldsCount> = $i0;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2fieldsCount>;

        $r6 = newarray (proguard.classfile.ProgramField)[$i0];

        $r1.<proguard.classfile.ProgramClass: proguard.classfile.ProgramField[] fields> = $r6;

        $i0 = 0;

     label07:
        $i1 = $r1.<proguard.classfile.ProgramClass: int u2fieldsCount>;

        if $i0 >= $i1 goto label08;

        $r7 = new proguard.classfile.ProgramField;

        specialinvoke $r7.<proguard.classfile.ProgramField: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField)>($r1, $r7);

        $r6 = $r1.<proguard.classfile.ProgramClass: proguard.classfile.ProgramField[] fields>;

        $r6[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label07;

     label08:
        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r1.<proguard.classfile.ProgramClass: int u2methodsCount> = $i0;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2methodsCount>;

        $r8 = newarray (proguard.classfile.ProgramMethod)[$i0];

        $r1.<proguard.classfile.ProgramClass: proguard.classfile.ProgramMethod[] methods> = $r8;

        $i0 = 0;

     label09:
        $i1 = $r1.<proguard.classfile.ProgramClass: int u2methodsCount>;

        if $i0 >= $i1 goto label10;

        $r9 = new proguard.classfile.ProgramMethod;

        specialinvoke $r9.<proguard.classfile.ProgramMethod: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod)>($r1, $r9);

        $r8 = $r1.<proguard.classfile.ProgramClass: proguard.classfile.ProgramMethod[] methods>;

        $r8[$i0] = $r9;

        $i0 = $i0 + 1;

        goto label09;

     label10:
        $r2 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r1.<proguard.classfile.ProgramClass: int u2attributesCount> = $i0;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2attributesCount>;

        $r10 = newarray (proguard.classfile.attribute.Attribute)[$i0];

        $r1.<proguard.classfile.ProgramClass: proguard.classfile.attribute.Attribute[] attributes> = $r10;

        $i0 = 0;

     label11:
        $i1 = $r1.<proguard.classfile.ProgramClass: int u2attributesCount>;

        if $i0 >= $i1 goto label12;

        $r11 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.Attribute createAttribute(proguard.classfile.Clazz)>($r1);

        virtualinvoke $r11.<proguard.classfile.attribute.Attribute: void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, r0);

        $r10 = $r1.<proguard.classfile.ProgramClass: proguard.classfile.attribute.Attribute[] attributes>;

        $r10[$i0] = $r11;

        $i0 = $i0 + 1;

        goto label11;

     label12:
        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.Attribute[] $r3;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.ProgramField $r2;
        int $i0, $i1;
        proguard.classfile.io.RuntimeDataInput $r4;
        proguard.classfile.attribute.Attribute $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.ProgramField: int u2accessFlags> = $i0;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.ProgramField: int u2nameIndex> = $i0;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.ProgramField: int u2descriptorIndex> = $i0;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.ProgramField: int u2attributesCount> = $i0;

        $i0 = $r2.<proguard.classfile.ProgramField: int u2attributesCount>;

        $r3 = newarray (proguard.classfile.attribute.Attribute)[$i0];

        $r2.<proguard.classfile.ProgramField: proguard.classfile.attribute.Attribute[] attributes> = $r3;

        $i0 = 0;

     label1:
        $i1 = $r2.<proguard.classfile.ProgramField: int u2attributesCount>;

        if $i0 >= $i1 goto label2;

        $r5 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.Attribute createAttribute(proguard.classfile.Clazz)>($r1);

        virtualinvoke $r5.<proguard.classfile.attribute.Attribute: void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, $r2, r0);

        $r3 = $r2.<proguard.classfile.ProgramField: proguard.classfile.attribute.Attribute[] attributes>;

        $r3[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.Attribute[] $r3;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.ProgramMethod $r2;
        int $i0, $i1;
        proguard.classfile.io.RuntimeDataInput $r4;
        proguard.classfile.attribute.Attribute $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.ProgramMethod: int u2accessFlags> = $i0;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.ProgramMethod: int u2nameIndex> = $i0;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.ProgramMethod: int u2descriptorIndex> = $i0;

        $r4 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r4.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.ProgramMethod: int u2attributesCount> = $i0;

        $i0 = $r2.<proguard.classfile.ProgramMethod: int u2attributesCount>;

        $r3 = newarray (proguard.classfile.attribute.Attribute)[$i0];

        $r2.<proguard.classfile.ProgramMethod: proguard.classfile.attribute.Attribute[] attributes> = $r3;

        $i0 = 0;

     label1:
        $i1 = $r2.<proguard.classfile.ProgramMethod: int u2attributesCount>;

        if $i0 >= $i1 goto label2;

        $r5 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.Attribute createAttribute(proguard.classfile.Clazz)>($r1);

        virtualinvoke $r5.<proguard.classfile.attribute.Attribute: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, $r2, r0);

        $r3 = $r2.<proguard.classfile.ProgramMethod: proguard.classfile.attribute.Attribute[] attributes>;

        $r3[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitSameOneFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.SameOneFrame)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.preverification.VerificationType $r6;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.attribute.preverification.SameOneFrame $r4;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.SameOneFrame;

        $i1 = virtualinvoke $r4.<proguard.classfile.attribute.preverification.SameOneFrame: int getTag()>();

        if $i1 != 247 goto label1;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.SameOneFrame: int u2offsetDelta> = $i1;

     label1:
        $r6 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.preverification.VerificationType createVerificationType()>();

        virtualinvoke $r6.<proguard.classfile.attribute.preverification.VerificationType: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)>($r1, $r2, $r3, $i0, r0);

        $r4.<proguard.classfile.attribute.preverification.SameOneFrame: proguard.classfile.attribute.preverification.VerificationType stackItem> = $r6;

        return;
    }

    public void visitSameZeroFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.SameZeroFrame)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.attribute.preverification.SameZeroFrame $r4;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.SameZeroFrame;

        $i0 = virtualinvoke $r4.<proguard.classfile.attribute.preverification.SameZeroFrame: int getTag()>();

        if $i0 != 251 goto label1;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.SameZeroFrame: int u2offsetDelta> = $i0;

     label1:
        return;
    }

    public void visitSignatureAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SignatureAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.SignatureAttribute $r2;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SignatureAttribute;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.SignatureAttribute: int u2signatureIndex> = $i0;

        return;
    }

    public void visitSourceDirAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SourceDirAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.SourceDirAttribute $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SourceDirAttribute;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.SourceDirAttribute: int u2sourceDirIndex> = $i0;

        return;
    }

    public void visitSourceFileAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SourceFileAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.SourceFileAttribute $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SourceFileAttribute;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.attribute.SourceFileAttribute: int u2sourceFileIndex> = $i0;

        return;
    }

    public void visitStackMapAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.preverification.StackMapAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.preverification.StackMapAttribute $r4;
        proguard.classfile.attribute.preverification.FullFrame $r5;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r6;
        proguard.classfile.attribute.preverification.FullFrame[] $r7;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.preverification.StackMapAttribute;

        $r6 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r6.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.StackMapAttribute: int u2stackMapFramesCount> = $i0;

        $i0 = $r4.<proguard.classfile.attribute.preverification.StackMapAttribute: int u2stackMapFramesCount>;

        $r7 = newarray (proguard.classfile.attribute.preverification.FullFrame)[$i0];

        $r4.<proguard.classfile.attribute.preverification.StackMapAttribute: proguard.classfile.attribute.preverification.FullFrame[] stackMapFrames> = $r7;

        $i0 = 0;

     label1:
        $i1 = $r4.<proguard.classfile.attribute.preverification.StackMapAttribute: int u2stackMapFramesCount>;

        if $i0 >= $i1 goto label2;

        $r5 = new proguard.classfile.attribute.preverification.FullFrame;

        specialinvoke $r5.<proguard.classfile.attribute.preverification.FullFrame: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.ProgramClassReader: void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame)>($r1, $r2, $r3, $i0, $r5);

        $r7 = $r4.<proguard.classfile.attribute.preverification.StackMapAttribute: proguard.classfile.attribute.preverification.FullFrame[] stackMapFrames>;

        $r7[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitStackMapTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.preverification.StackMapTableAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.preverification.StackMapFrame[] $r6;
        proguard.classfile.attribute.preverification.StackMapTableAttribute $r4;
        proguard.classfile.attribute.preverification.StackMapFrame $r7;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.preverification.StackMapTableAttribute;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.StackMapTableAttribute: int u2stackMapFramesCount> = $i0;

        $i0 = $r4.<proguard.classfile.attribute.preverification.StackMapTableAttribute: int u2stackMapFramesCount>;

        $r6 = newarray (proguard.classfile.attribute.preverification.StackMapFrame)[$i0];

        $r4.<proguard.classfile.attribute.preverification.StackMapTableAttribute: proguard.classfile.attribute.preverification.StackMapFrame[] stackMapFrames> = $r6;

        $i0 = 0;

     label1:
        $i1 = $r4.<proguard.classfile.attribute.preverification.StackMapTableAttribute: int u2stackMapFramesCount>;

        if $i0 >= $i1 goto label2;

        $r7 = specialinvoke r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.attribute.preverification.StackMapFrame createStackMapFrame()>();

        virtualinvoke $r7.<proguard.classfile.attribute.preverification.StackMapFrame: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor)>($r1, $r2, $r3, 0, r0);

        $r6 = $r4.<proguard.classfile.attribute.preverification.StackMapTableAttribute: proguard.classfile.attribute.preverification.StackMapFrame[] stackMapFrames>;

        $r6[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitStringConstant(proguard.classfile.Clazz, proguard.classfile.constant.StringConstant)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.StringConstant $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.StringConstant;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.constant.StringConstant: int u2stringIndex> = $i0;

        return;
    }

    public void visitSyntheticAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SyntheticAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.attribute.SyntheticAttribute $r2;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SyntheticAttribute;

        return;
    }

    public void visitUninitializedType(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.UninitializedType)
    {
        proguard.classfile.io.ProgramClassReader r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.UninitializedType $r4;
        proguard.classfile.io.RuntimeDataInput $r5;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.UninitializedType;

        $r5 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r5.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4.<proguard.classfile.attribute.preverification.UninitializedType: int u2newInstructionOffset> = $i0;

        return;
    }

    public void visitUnknownAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.UnknownAttribute)
    {
        proguard.classfile.io.ProgramClassReader r0;
        byte[] $r4;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.UnknownAttribute $r2;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.UnknownAttribute;

        $i0 = $r2.<proguard.classfile.attribute.UnknownAttribute: int u4attributeLength>;

        $r4 = newarray (byte)[$i0];

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: void readFully(byte[])>($r4);

        $r2.<proguard.classfile.attribute.UnknownAttribute: byte[] info> = $r4;

        return;
    }

    public void visitUtf8Constant(proguard.classfile.Clazz, proguard.classfile.constant.Utf8Constant)
    {
        proguard.classfile.io.ProgramClassReader r0;
        byte[] $r4;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.constant.Utf8Constant $r2;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.ProgramClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.Utf8Constant;

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4 = newarray (byte)[$i0];

        $r3 = r0.<proguard.classfile.io.ProgramClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: void readFully(byte[])>($r4);

        virtualinvoke $r2.<proguard.classfile.constant.Utf8Constant: void setBytes(byte[])>($r4);

        return;
    }
}
