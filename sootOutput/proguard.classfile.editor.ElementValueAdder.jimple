public class proguard.classfile.editor.ElementValueAdder extends java.lang.Object implements proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor
{
    private static final proguard.classfile.attribute.'annotation'.ElementValue[] EMPTY_ELEMENT_VALUES;
    private final proguard.classfile.editor.ConstantAdder constantAdder;
    private final proguard.classfile.editor.ElementValuesEditor elementValuesEditor;
    private final proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute targetAnnotationDefaultAttribute;
    private final proguard.classfile.ProgramClass targetClass;

    static void <clinit>()
    {
        proguard.classfile.attribute.'annotation'.ElementValue[] $r0;

        $r0 = newarray (proguard.classfile.attribute.'annotation'.ElementValue)[0];

        <proguard.classfile.editor.ElementValueAdder: proguard.classfile.attribute.'annotation'.ElementValue[] EMPTY_ELEMENT_VALUES> = $r0;

        return;
    }

    public void <init>(proguard.classfile.ProgramClass, proguard.classfile.attribute.'annotation'.Annotation, boolean)
    {
        proguard.classfile.editor.ConstantAdder $r3;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.editor.ElementValuesEditor $r4;
        proguard.classfile.editor.ElementValueAdder r0;
        boolean $z0;

        r0 := @this: proguard.classfile.editor.ElementValueAdder;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.ProgramClass targetClass> = $r1;

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute targetAnnotationDefaultAttribute> = null;

        $r3 = new proguard.classfile.editor.ConstantAdder;

        specialinvoke $r3.<proguard.classfile.editor.ConstantAdder: void <init>(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder> = $r3;

        $r4 = new proguard.classfile.editor.ElementValuesEditor;

        specialinvoke $r4.<proguard.classfile.editor.ElementValuesEditor: void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.'annotation'.Annotation,boolean)>($r1, $r2, 0);

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ElementValuesEditor elementValuesEditor> = $r4;

        return;
    }

    public void <init>(proguard.classfile.ProgramClass, proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute, boolean)
    {
        proguard.classfile.editor.ConstantAdder $r3;
        proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute $r2;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.editor.ElementValueAdder r0;
        boolean $z0;

        r0 := @this: proguard.classfile.editor.ElementValueAdder;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.ProgramClass targetClass> = $r1;

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute targetAnnotationDefaultAttribute> = $r2;

        $r3 = new proguard.classfile.editor.ConstantAdder;

        specialinvoke $r3.<proguard.classfile.editor.ConstantAdder: void <init>(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder> = $r3;

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ElementValuesEditor elementValuesEditor> = null;

        return;
    }

    public void <init>(proguard.classfile.ProgramClass, proguard.classfile.attribute.'annotation'.ArrayElementValue, boolean)
    {
        proguard.classfile.editor.ConstantAdder $r3;
        proguard.classfile.attribute.'annotation'.ArrayElementValue $r2;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.editor.ElementValuesEditor $r4;
        proguard.classfile.editor.ElementValueAdder r0;
        boolean $z0;

        r0 := @this: proguard.classfile.editor.ElementValueAdder;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.ArrayElementValue;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.ProgramClass targetClass> = $r1;

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute targetAnnotationDefaultAttribute> = null;

        $r3 = new proguard.classfile.editor.ConstantAdder;

        specialinvoke $r3.<proguard.classfile.editor.ConstantAdder: void <init>(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder> = $r3;

        $r4 = new proguard.classfile.editor.ElementValuesEditor;

        specialinvoke $r4.<proguard.classfile.editor.ElementValuesEditor: void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.'annotation'.ArrayElementValue,boolean)>($r1, $r2, 0);

        r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ElementValuesEditor elementValuesEditor> = $r4;

        return;
    }

    private void addElementValue(proguard.classfile.attribute.'annotation'.ElementValue)
    {
        proguard.classfile.attribute.'annotation'.ElementValue $r1;
        proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute $r2;
        proguard.classfile.editor.ElementValuesEditor $r3;
        proguard.classfile.editor.ElementValueAdder r0;

        r0 := @this: proguard.classfile.editor.ElementValueAdder;

        $r1 := @parameter0: proguard.classfile.attribute.'annotation'.ElementValue;

        $r2 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute targetAnnotationDefaultAttribute>;

        if $r2 == null goto label1;

        $r2 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute targetAnnotationDefaultAttribute>;

        $r2.<proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute: proguard.classfile.attribute.'annotation'.ElementValue defaultValue> = $r1;

        return;

     label1:
        $r3 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ElementValuesEditor elementValuesEditor>;

        virtualinvoke $r3.<proguard.classfile.editor.ElementValuesEditor: void addElementValue(proguard.classfile.attribute.'annotation'.ElementValue)>($r1);

        return;
    }

    public void visitAnnotationElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.AnnotationElementValue)
    {
        proguard.classfile.editor.ConstantAdder $r9;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.attribute.'annotation'.AnnotationElementValue $r3, $r4;
        proguard.classfile.ProgramClass $r8;
        proguard.classfile.editor.ElementValueAdder r0;
        proguard.classfile.editor.AnnotationAdder $r7;
        proguard.classfile.Clazz $r1, $r5;
        int $i0;
        proguard.classfile.Method $r6;

        r0 := @this: proguard.classfile.editor.ElementValueAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.AnnotationElementValue;

        $r4 = new proguard.classfile.attribute.'annotation'.AnnotationElementValue;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: int u2elementNameIndex>;

        if $i0 != 0 goto label2;

        $i0 = 0;

     label1:
        $r2 = new proguard.classfile.attribute.'annotation'.Annotation;

        specialinvoke $r2.<proguard.classfile.attribute.'annotation'.Annotation: void <init>()>();

        specialinvoke $r4.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: void <init>(int,proguard.classfile.attribute.'annotation'.Annotation)>($i0, $r2);

        $r5 = $r3.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: proguard.classfile.Clazz referencedClass>;

        $r4.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: proguard.classfile.Clazz referencedClass> = $r5;

        $r6 = $r3.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: proguard.classfile.Method referencedMethod>;

        $r4.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: proguard.classfile.Method referencedMethod> = $r6;

        $r7 = new proguard.classfile.editor.AnnotationAdder;

        $r8 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.ProgramClass targetClass>;

        specialinvoke $r7.<proguard.classfile.editor.AnnotationAdder: void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.'annotation'.AnnotationElementValue)>($r8, $r4);

        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: void annotationAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, $r7);

        specialinvoke r0.<proguard.classfile.editor.ElementValueAdder: void addElementValue(proguard.classfile.attribute.'annotation'.ElementValue)>($r4);

        return;

     label2:
        $r9 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: int u2elementNameIndex>;

        $i0 = virtualinvoke $r9.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i0);

        goto label1;
    }

    public void visitArrayElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.ArrayElementValue)
    {
        proguard.classfile.editor.ConstantAdder $r10;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.attribute.'annotation'.ArrayElementValue $r3, $r4;
        proguard.classfile.attribute.'annotation'.ElementValue[] $r5;
        proguard.classfile.ProgramClass $r9;
        proguard.classfile.editor.ElementValueAdder r0, $r8;
        proguard.classfile.Clazz $r1, $r6;
        int $i0, $i1;
        proguard.classfile.Method $r7;

        r0 := @this: proguard.classfile.editor.ElementValueAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ArrayElementValue;

        $r4 = new proguard.classfile.attribute.'annotation'.ArrayElementValue;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: int u2elementNameIndex>;

        if $i0 != 0 goto label3;

        $i0 = 0;

     label1:
        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: int u2elementValuesCount>;

        if $i1 <= 0 goto label4;

        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: int u2elementValuesCount>;

        $r5 = newarray (proguard.classfile.attribute.'annotation'.ElementValue)[$i1];

     label2:
        specialinvoke $r4.<proguard.classfile.attribute.'annotation'.ArrayElementValue: void <init>(int,int,proguard.classfile.attribute.'annotation'.ElementValue[])>($i0, 0, $r5);

        $r6 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: proguard.classfile.Clazz referencedClass>;

        $r4.<proguard.classfile.attribute.'annotation'.ArrayElementValue: proguard.classfile.Clazz referencedClass> = $r6;

        $r7 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: proguard.classfile.Method referencedMethod>;

        $r4.<proguard.classfile.attribute.'annotation'.ArrayElementValue: proguard.classfile.Method referencedMethod> = $r7;

        $r8 = new proguard.classfile.editor.ElementValueAdder;

        $r9 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.ProgramClass targetClass>;

        specialinvoke $r8.<proguard.classfile.editor.ElementValueAdder: void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.'annotation'.ArrayElementValue,boolean)>($r9, $r4, 0);

        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: void elementValuesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation,proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor)>($r1, $r2, $r8);

        specialinvoke r0.<proguard.classfile.editor.ElementValueAdder: void addElementValue(proguard.classfile.attribute.'annotation'.ElementValue)>($r4);

        return;

     label3:
        $r10 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: int u2elementNameIndex>;

        $i0 = virtualinvoke $r10.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i0);

        goto label1;

     label4:
        $r5 = <proguard.classfile.editor.ElementValueAdder: proguard.classfile.attribute.'annotation'.ElementValue[] EMPTY_ELEMENT_VALUES>;

        goto label2;
    }

    public void visitClassElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.ClassElementValue)
    {
        proguard.classfile.editor.ConstantAdder $r5;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.Clazz[] $r7;
        proguard.classfile.attribute.'annotation'.ClassElementValue $r3, $r4;
        proguard.classfile.editor.ElementValueAdder r0;
        proguard.classfile.Clazz $r1;
        int $i0, $i1;
        proguard.classfile.Method $r6;

        r0 := @this: proguard.classfile.editor.ElementValueAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ClassElementValue;

        $r4 = new proguard.classfile.attribute.'annotation'.ClassElementValue;

        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ClassElementValue: int u2elementNameIndex>;

        if $i1 != 0 goto label2;

        $i1 = 0;

     label1:
        $r5 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ClassElementValue: int u2classInfoIndex>;

        $i0 = virtualinvoke $r5.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i0);

        specialinvoke $r4.<proguard.classfile.attribute.'annotation'.ClassElementValue: void <init>(int,int)>($i1, $i0);

        $r1 = $r3.<proguard.classfile.attribute.'annotation'.ClassElementValue: proguard.classfile.Clazz referencedClass>;

        $r4.<proguard.classfile.attribute.'annotation'.ClassElementValue: proguard.classfile.Clazz referencedClass> = $r1;

        $r6 = $r3.<proguard.classfile.attribute.'annotation'.ClassElementValue: proguard.classfile.Method referencedMethod>;

        $r4.<proguard.classfile.attribute.'annotation'.ClassElementValue: proguard.classfile.Method referencedMethod> = $r6;

        $r7 = $r3.<proguard.classfile.attribute.'annotation'.ClassElementValue: proguard.classfile.Clazz[] referencedClasses>;

        $r4.<proguard.classfile.attribute.'annotation'.ClassElementValue: proguard.classfile.Clazz[] referencedClasses> = $r7;

        specialinvoke r0.<proguard.classfile.editor.ElementValueAdder: void addElementValue(proguard.classfile.attribute.'annotation'.ElementValue)>($r4);

        return;

     label2:
        $r5 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ClassElementValue: int u2elementNameIndex>;

        $i1 = virtualinvoke $r5.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i1);

        goto label1;
    }

    public void visitConstantElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.ConstantElementValue)
    {
        proguard.classfile.attribute.'annotation'.ConstantElementValue $r3, $r4;
        proguard.classfile.editor.ConstantAdder $r5;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.editor.ElementValueAdder r0;
        proguard.classfile.Clazz $r1;
        int $i0, $i1, $i2;
        proguard.classfile.Method $r6;

        r0 := @this: proguard.classfile.editor.ElementValueAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ConstantElementValue;

        $r4 = new proguard.classfile.attribute.'annotation'.ConstantElementValue;

        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: int u1tag>;

        $i2 = $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: int u2elementNameIndex>;

        if $i2 != 0 goto label2;

        $i2 = 0;

     label1:
        $r5 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: int u2constantValueIndex>;

        $i0 = virtualinvoke $r5.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i0);

        specialinvoke $r4.<proguard.classfile.attribute.'annotation'.ConstantElementValue: void <init>(int,int,int)>($i1, $i2, $i0);

        $r1 = $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: proguard.classfile.Clazz referencedClass>;

        $r4.<proguard.classfile.attribute.'annotation'.ConstantElementValue: proguard.classfile.Clazz referencedClass> = $r1;

        $r6 = $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: proguard.classfile.Method referencedMethod>;

        $r4.<proguard.classfile.attribute.'annotation'.ConstantElementValue: proguard.classfile.Method referencedMethod> = $r6;

        specialinvoke r0.<proguard.classfile.editor.ElementValueAdder: void addElementValue(proguard.classfile.attribute.'annotation'.ElementValue)>($r4);

        return;

     label2:
        $r5 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i2 = $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: int u2elementNameIndex>;

        $i2 = virtualinvoke $r5.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i2);

        goto label1;
    }

    public void visitEnumConstantElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.EnumConstantElementValue)
    {
        proguard.classfile.editor.ConstantAdder $r5;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.Clazz[] $r7;
        proguard.classfile.attribute.'annotation'.EnumConstantElementValue $r3, $r4;
        proguard.classfile.editor.ElementValueAdder r0;
        proguard.classfile.Clazz $r1;
        int $i0, $i1, $i2;
        proguard.classfile.Method $r6;

        r0 := @this: proguard.classfile.editor.ElementValueAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.EnumConstantElementValue;

        $r4 = new proguard.classfile.attribute.'annotation'.EnumConstantElementValue;

        $i1 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: int u2elementNameIndex>;

        if $i1 != 0 goto label2;

        $i1 = 0;

     label1:
        $r5 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i2 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: int u2typeNameIndex>;

        $i2 = virtualinvoke $r5.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i2);

        $r5 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: int u2constantNameIndex>;

        $i0 = virtualinvoke $r5.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i0);

        specialinvoke $r4.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: void <init>(int,int,int)>($i1, $i2, $i0);

        $r1 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: proguard.classfile.Clazz referencedClass>;

        $r4.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: proguard.classfile.Clazz referencedClass> = $r1;

        $r6 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: proguard.classfile.Method referencedMethod>;

        $r4.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: proguard.classfile.Method referencedMethod> = $r6;

        $r7 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: proguard.classfile.Clazz[] referencedClasses>;

        $r4.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: proguard.classfile.Clazz[] referencedClasses> = $r7;

        specialinvoke r0.<proguard.classfile.editor.ElementValueAdder: void addElementValue(proguard.classfile.attribute.'annotation'.ElementValue)>($r4);

        return;

     label2:
        $r5 = r0.<proguard.classfile.editor.ElementValueAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i1 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: int u2elementNameIndex>;

        $i1 = virtualinvoke $r5.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i1);

        goto label1;
    }
}
