public class com.yang.longrubblishclear.util.CubeView extends android.view.View
{
    private int bHeight;
    private int bWidth;
    private int centerX;
    private int centerY;
    int count;
    private int deltaX;
    private int deltaY;
    private android.graphics.Bitmap face;
    boolean flag;
    private android.os.Handler handler;
    private android.graphics.Camera mCamera;
    private int mLastMotionX;
    private int mLastMotionY;
    private android.graphics.Matrix mMatrix;
    private android.graphics.Paint mPaint;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.graphics.Camera $r5;
        android.util.AttributeSet $r2;
        android.graphics.Bitmap $r7;
        com.yang.longrubblishclear.util.CubeView r0;
        int $i0;
        android.graphics.Paint $r4;
        android.graphics.Matrix $r3;
        android.content.res.Resources $r6;

        r0 := @this: com.yang.longrubblishclear.util.CubeView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Matrix mMatrix> = $r3;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Paint mPaint> = $r4;

        r0.<com.yang.longrubblishclear.util.CubeView: boolean flag> = 0;

        virtualinvoke r0.<com.yang.longrubblishclear.util.CubeView: void setWillNotDraw(boolean)>(0);

        $r5 = new android.graphics.Camera;

        specialinvoke $r5.<android.graphics.Camera: void <init>()>();

        r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Camera mCamera> = $r5;

        $r4 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r6 = virtualinvoke r0.<com.yang.longrubblishclear.util.CubeView: android.content.res.Resources getResources()>();

        $r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r6, 2130837663);

        r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Bitmap face> = $r7;

        $r7 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Bitmap face>;

        $i0 = virtualinvoke $r7.<android.graphics.Bitmap: int getWidth()>();

        r0.<com.yang.longrubblishclear.util.CubeView: int bWidth> = $i0;

        $r7 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Bitmap face>;

        $i0 = virtualinvoke $r7.<android.graphics.Bitmap: int getHeight()>();

        r0.<com.yang.longrubblishclear.util.CubeView: int bHeight> = $i0;

        $i0 = r0.<com.yang.longrubblishclear.util.CubeView: int bWidth>;

        $i0 = $i0 >> 1;

        r0.<com.yang.longrubblishclear.util.CubeView: int centerX> = $i0;

        $i0 = r0.<com.yang.longrubblishclear.util.CubeView: int bHeight>;

        $i0 = $i0 >> 1;

        r0.<com.yang.longrubblishclear.util.CubeView: int centerY> = $i0;

        return;
    }

    static android.os.Handler access$0(com.yang.longrubblishclear.util.CubeView)
    {
        com.yang.longrubblishclear.util.CubeView $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.yang.longrubblishclear.util.CubeView;

        r1 = $r0.<com.yang.longrubblishclear.util.CubeView: android.os.Handler handler>;

        return r1;
    }

    public void dispatchDraw(android.graphics.Canvas)
    {
        android.graphics.Bitmap $r2;
        com.yang.longrubblishclear.util.CubeView r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r4;
        android.graphics.Matrix $r3;

        r0 := @this: com.yang.longrubblishclear.util.CubeView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void dispatchDraw(android.graphics.Canvas)>($r1);

        $r2 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Bitmap face>;

        $r3 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Matrix mMatrix>;

        $r4 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>($r2, $r3, $r4);

        return;
    }

    public android.os.Handler getHandler()
    {
        com.yang.longrubblishclear.util.CubeView r0;
        android.os.Handler r1;

        r0 := @this: com.yang.longrubblishclear.util.CubeView;

        r1 = r0.<com.yang.longrubblishclear.util.CubeView: android.os.Handler handler>;

        return r1;
    }

    public void init(int)
    {
        android.graphics.Bitmap $r2;
        com.yang.longrubblishclear.util.CubeView r0;
        int $i0;
        android.content.res.Resources $r1;

        r0 := @this: com.yang.longrubblishclear.util.CubeView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.yang.longrubblishclear.util.CubeView: android.content.res.Resources getResources()>();

        $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r1, $i0);

        r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Bitmap face> = $r2;

        virtualinvoke r0.<com.yang.longrubblishclear.util.CubeView: void postInvalidate()>();

        return;
    }

    public boolean isFlag()
    {
        com.yang.longrubblishclear.util.CubeView r0;
        boolean z0;

        r0 := @this: com.yang.longrubblishclear.util.CubeView;

        z0 = r0.<com.yang.longrubblishclear.util.CubeView: boolean flag>;

        return z0;
    }

    void rotate(int, int)
    {
        android.graphics.Camera $r1;
        com.yang.longrubblishclear.util.CubeView r0;
        int $i0, $i1, $i2;
        float $f0, $f1;
        android.graphics.Matrix $r2;

        r0 := @this: com.yang.longrubblishclear.util.CubeView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<com.yang.longrubblishclear.util.CubeView: int deltaX>;

        $i0 = $i2 + 0;

        r0.<com.yang.longrubblishclear.util.CubeView: int deltaX> = $i0;

        $i0 = r0.<com.yang.longrubblishclear.util.CubeView: int deltaY>;

        $i0 = $i0 + 15;

        r0.<com.yang.longrubblishclear.util.CubeView: int deltaY> = $i0;

        $r1 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Camera mCamera>;

        virtualinvoke $r1.<android.graphics.Camera: void save()>();

        $r1 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Camera mCamera>;

        $i0 = r0.<com.yang.longrubblishclear.util.CubeView: int deltaY>;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Camera: void rotateX(float)>($f0);

        $r1 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Camera mCamera>;

        virtualinvoke $r1.<android.graphics.Camera: void translate(float,float,float)>(0.0F, 0.0F, 0.0F);

        $r1 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Camera mCamera>;

        $r2 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r1.<android.graphics.Camera: void getMatrix(android.graphics.Matrix)>($r2);

        $r1 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Camera mCamera>;

        virtualinvoke $r1.<android.graphics.Camera: void restore()>();

        $r2 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Matrix mMatrix>;

        $i0 = r0.<com.yang.longrubblishclear.util.CubeView: int centerX>;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = r0.<com.yang.longrubblishclear.util.CubeView: int centerY>;

        $i0 = neg $i0;

        $f1 = (float) $i0;

        virtualinvoke $r2.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        $r2 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Matrix mMatrix>;

        $i0 = r0.<com.yang.longrubblishclear.util.CubeView: int centerX>;

        $f0 = (float) $i0;

        $i0 = r0.<com.yang.longrubblishclear.util.CubeView: int centerY>;

        $f1 = (float) $i0;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

        $r1 = r0.<com.yang.longrubblishclear.util.CubeView: android.graphics.Camera mCamera>;

        virtualinvoke $r1.<android.graphics.Camera: void save()>();

        virtualinvoke r0.<com.yang.longrubblishclear.util.CubeView: void postInvalidate()>();

        return;
    }

    public void setFlag(boolean)
    {
        com.yang.longrubblishclear.util.CubeView r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.CubeView;

        $z0 := @parameter0: boolean;

        r0.<com.yang.longrubblishclear.util.CubeView: boolean flag> = $z0;

        return;
    }

    public void setHandler(android.os.Handler)
    {
        com.yang.longrubblishclear.util.CubeView r0;
        android.os.Handler $r1;

        r0 := @this: com.yang.longrubblishclear.util.CubeView;

        $r1 := @parameter0: android.os.Handler;

        r0.<com.yang.longrubblishclear.util.CubeView: android.os.Handler handler> = $r1;

        return;
    }

    public void startaa()
    {
        com.yang.longrubblishclear.util.CubeView r0;
        com.yang.longrubblishclear.util.CubeView$1 $r2;
        java.lang.Thread $r1;

        r0 := @this: com.yang.longrubblishclear.util.CubeView;

        $r1 = new java.lang.Thread;

        $r2 = new com.yang.longrubblishclear.util.CubeView$1;

        specialinvoke $r2.<com.yang.longrubblishclear.util.CubeView$1: void <init>(com.yang.longrubblishclear.util.CubeView)>(r0);

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        return;
    }
}
