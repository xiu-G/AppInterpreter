public final class com.astep.pay.plugin.libs.m extends java.lang.Object
{
    private static final java.lang.String a;

    public void <init>()
    {
        com.astep.pay.plugin.libs.m r0;

        r0 := @this: com.astep.pay.plugin.libs.m;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Object a(java.lang.Class, java.lang.String, org.json.JSONArray, int)
    {
        int $i0;
        java.lang.Class $r0;
        java.lang.Object $r3;
        java.lang.String $r1;
        org.json.JSONArray $r2;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.json.JSONArray;

        $i0 := @parameter3: int;

        $r3 = staticinvoke <com.astep.pay.plugin.libs.m: java.lang.Object a(java.lang.Class,java.lang.String,org.json.JSONObject,java.lang.String,org.json.JSONArray,int)>($r0, $r1, null, null, $r2, $i0);

        return $r3;
    }

    private static java.lang.Object a(java.lang.Class, java.lang.String, org.json.JSONObject, java.lang.String)
    {
        org.json.JSONObject $r2;
        java.lang.Class $r0;
        java.lang.Object $r4;
        java.lang.String $r1, $r3;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.json.JSONObject;

        $r3 := @parameter3: java.lang.String;

        $r4 = staticinvoke <com.astep.pay.plugin.libs.m: java.lang.Object a(java.lang.Class,java.lang.String,org.json.JSONObject,java.lang.String,org.json.JSONArray,int)>($r0, $r1, $r2, $r3, null, 0);

        return $r4;
    }

    private static java.lang.Object a(java.lang.Class, java.lang.String, org.json.JSONObject, java.lang.String, org.json.JSONArray, int)
    {
        java.lang.Float $r13;
        java.lang.Integer $r11;
        org.json.JSONException $r19, $r20, $r21;
        org.json.JSONObject $r1;
        byte $b1;
        java.lang.Character $r9;
        java.lang.Long $r12;
        java.lang.Short $r10;
        java.lang.InstantiationException $r26;
        java.lang.Byte $r8;
        boolean $z0;
        float $f0;
        java.lang.Throwable $r16, $r17, $r18, $r22, $r23, $r24;
        java.lang.Double $r14;
        long $l4;
        short $s3;
        int $i0;
        java.lang.Boolean $r7;
        java.lang.String $r2, $r4;
        double $d0;
        char $c2;
        java.lang.NumberFormatException $r25;
        java.lang.Class $r0, $r6;
        java.lang.Object $r5, $r15;
        org.json.JSONArray $r3;

        $r0 := @parameter0: java.lang.Class;

        $r4 := @parameter1: java.lang.String;

        $r1 := @parameter2: org.json.JSONObject;

        $r2 := @parameter3: java.lang.String;

        $r3 := @parameter4: org.json.JSONArray;

        $i0 := @parameter5: int;

        $r5 = null;

        if $r4 == null goto label40;

        if $r0 != class "Ljava/lang/String;" goto label01;

        return $r4;

     label01:
        if $r0 == class "Ljava/lang/Boolean;" goto label02;

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r0 != $r6 goto label08;

     label02:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("1");

     label03:
        if $z0 == 0 goto label06;

        $z0 = 1;

     label04:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

     label05:
        return $r7;

     label06:
        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r4);

     label07:
        goto label04;

     label08:
        if $r0 == class "Ljava/lang/Byte;" goto label09;

        $r6 = <java.lang.Byte: java.lang.Class TYPE>;

        if $r0 != $r6 goto label11;

     label09:
        $b1 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String)>($r4);

        $r8 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

     label10:
        return $r8;

     label11:
        if $r0 == class "Ljava/lang/Character;" goto label12;

        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        if $r0 != $r6 goto label14;

     label12:
        $c2 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        $r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

     label13:
        return $r9;

     label14:
        if $r0 == class "Ljava/lang/Short;" goto label15;

        $r6 = <java.lang.Short: java.lang.Class TYPE>;

        if $r0 != $r6 goto label17;

     label15:
        $s3 = staticinvoke <java.lang.Short: short parseShort(java.lang.String)>($r4);

        $r10 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

     label16:
        return $r10;

     label17:
        if $r0 == class "Ljava/lang/Integer;" goto label18;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r0 != $r6 goto label20;

     label18:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label19:
        return $r11;

     label20:
        if $r0 == class "Ljava/lang/Long;" goto label21;

        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        if $r0 != $r6 goto label23;

     label21:
        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

     label22:
        return $r12;

     label23:
        if $r0 == class "Ljava/lang/Float;" goto label24;

        $r6 = <java.lang.Float: java.lang.Class TYPE>;

        if $r0 != $r6 goto label26;

     label24:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4);

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

     label25:
        return $r13;

     label26:
        if $r0 == class "Ljava/lang/Double;" goto label27;

        $r6 = <java.lang.Double: java.lang.Class TYPE>;

        if $r0 != $r6 goto label29;

     label27:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label28:
        return $r14;

     label29:
        if $r1 == null goto label36;

     label30:
        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

     label31:
        $r15 = $r5;

     label32:
        $r1 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r2);

        staticinvoke <com.astep.pay.plugin.libs.m: void a(org.json.JSONObject,java.lang.Object)>($r1, $r5);

     label33:
        return $r5;

     label34:
        $r16 := @caughtexception;

     label35:
        $r25 = (java.lang.NumberFormatException) $r16;

        virtualinvoke $r25.<java.lang.NumberFormatException: void printStackTrace()>();

        return $r15;

     label36:
        if $r3 == null goto label40;

     label37:
        $r15 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

     label38:
        $r5 = $r15;

     label39:
        $r1 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        staticinvoke <com.astep.pay.plugin.libs.m: void a(org.json.JSONObject,java.lang.Object)>($r1, $r15);

     label40:
        return $r5;

     label41:
        $r17 := @caughtexception;

        $r15 = null;

        $r18 = $r17;

     label42:
        $r26 = (java.lang.InstantiationException) $r18;

        virtualinvoke $r26.<java.lang.InstantiationException: void printStackTrace()>();

        return $r15;

     label43:
        $r19 := @caughtexception;

        $r15 = null;

        $r20 = $r19;

     label44:
        virtualinvoke $r20.<org.json.JSONException: void printStackTrace()>();

        return $r15;

     label45:
        $r20 := @caughtexception;

        goto label44;

     label46:
        $r21 := @caughtexception;

        $r20 = $r21;

        goto label44;

     label47:
        $r18 := @caughtexception;

        goto label42;

     label48:
        $r22 := @caughtexception;

        $r18 = $r22;

        goto label42;

     label49:
        $r23 := @caughtexception;

        $r15 = null;

        $r16 = $r23;

        goto label35;

     label50:
        $r24 := @caughtexception;

        $r16 = $r24;

        goto label35;

        catch java.lang.NumberFormatException from label02 to label03 with label49;
        catch java.lang.NumberFormatException from label04 to label05 with label49;
        catch java.lang.NumberFormatException from label06 to label07 with label49;
        catch java.lang.NumberFormatException from label09 to label10 with label49;
        catch java.lang.NumberFormatException from label12 to label13 with label49;
        catch java.lang.NumberFormatException from label15 to label16 with label49;
        catch java.lang.NumberFormatException from label18 to label19 with label49;
        catch java.lang.NumberFormatException from label21 to label22 with label49;
        catch java.lang.NumberFormatException from label24 to label25 with label49;
        catch java.lang.NumberFormatException from label27 to label28 with label49;
        catch java.lang.NumberFormatException from label30 to label31 with label49;
        catch java.lang.InstantiationException from label02 to label03 with label41;
        catch java.lang.InstantiationException from label04 to label05 with label41;
        catch java.lang.InstantiationException from label06 to label07 with label41;
        catch java.lang.InstantiationException from label09 to label10 with label41;
        catch java.lang.InstantiationException from label12 to label13 with label41;
        catch java.lang.InstantiationException from label15 to label16 with label41;
        catch java.lang.InstantiationException from label18 to label19 with label41;
        catch java.lang.InstantiationException from label21 to label22 with label41;
        catch java.lang.InstantiationException from label24 to label25 with label41;
        catch java.lang.InstantiationException from label27 to label28 with label41;
        catch java.lang.InstantiationException from label30 to label31 with label41;
        catch org.json.JSONException from label02 to label03 with label43;
        catch org.json.JSONException from label04 to label05 with label43;
        catch org.json.JSONException from label06 to label07 with label43;
        catch org.json.JSONException from label09 to label10 with label43;
        catch org.json.JSONException from label12 to label13 with label43;
        catch org.json.JSONException from label15 to label16 with label43;
        catch org.json.JSONException from label18 to label19 with label43;
        catch org.json.JSONException from label21 to label22 with label43;
        catch org.json.JSONException from label24 to label25 with label43;
        catch org.json.JSONException from label27 to label28 with label43;
        catch org.json.JSONException from label30 to label31 with label43;
        catch java.lang.NumberFormatException from label32 to label33 with label34;
        catch java.lang.InstantiationException from label32 to label33 with label47;
        catch org.json.JSONException from label32 to label33 with label45;
        catch java.lang.NumberFormatException from label37 to label38 with label49;
        catch java.lang.InstantiationException from label37 to label38 with label41;
        catch org.json.JSONException from label37 to label38 with label43;
        catch java.lang.NumberFormatException from label39 to label40 with label50;
        catch java.lang.InstantiationException from label39 to label40 with label48;
        catch org.json.JSONException from label39 to label40 with label46;
    }

    private static java.lang.Object a(java.lang.Class, org.json.JSONArray)
    {
        java.lang.ArrayIndexOutOfBoundsException $r5;
        org.json.JSONException $r6;
        int $i0, $i1;
        java.lang.Class $r0;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        org.json.JSONArray $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.json.JSONArray;

        $i0 = virtualinvoke $r1.<org.json.JSONArray: int length()>();

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r0, $i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label8;

     label2:
        $r3 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String getString(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label3:
        if $r3 == null goto label9;

        $r4 = staticinvoke <com.astep.pay.plugin.libs.m: java.lang.Object a(java.lang.Class,java.lang.String,org.json.JSONArray,int)>($r0, $r3, $r1, $i1);

     label4:
        if $r4 == null goto label5;

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r2, $i1, $r4);

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void printStackTrace()>();

        $r3 = null;

        goto label3;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<org.json.JSONException: void printStackTrace()>();

        $r3 = null;

        goto label3;

     label8:
        return $r2;

     label9:
        $r4 = null;

        goto label4;

        catch java.lang.ArrayIndexOutOfBoundsException from label2 to label3 with label6;
        catch org.json.JSONException from label2 to label3 with label7;
    }

    private static java.lang.Object a(java.lang.Class, org.json.JSONArray, int)
    {
        java.lang.ArrayIndexOutOfBoundsException $r5;
        org.json.JSONException $r6;
        int $i0, $i1;
        java.lang.Class $r0;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        org.json.JSONArray $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.json.JSONArray;

        $i0 := @parameter2: int;

        $r0 = virtualinvoke $r0.<java.lang.Class: java.lang.Class getComponentType()>();

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r0, $i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label8;

     label2:
        $r3 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String getString(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label3:
        if $r3 == null goto label9;

        $r4 = staticinvoke <com.astep.pay.plugin.libs.m: java.lang.Object a(java.lang.Class,java.lang.String,org.json.JSONArray,int)>($r0, $r3, $r1, $i1);

     label4:
        if $r4 == null goto label5;

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r2, $i1, $r4);

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void printStackTrace()>();

        $r3 = null;

        goto label3;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<org.json.JSONException: void printStackTrace()>();

        $r3 = null;

        goto label3;

     label8:
        return $r2;

     label9:
        $r4 = null;

        goto label4;

        catch java.lang.ArrayIndexOutOfBoundsException from label2 to label3 with label6;
        catch org.json.JSONException from label2 to label3 with label7;
    }

    public static java.util.HashMap a(java.lang.Object)
    {
        com.astep.pay.plugin.libs.f $r6;
        java.util.HashMap $r1;
        java.lang.reflect.Field $r4;
        java.lang.Exception $r9;
        java.lang.reflect.Field[] $r3;
        int $i0, $i1;
        java.lang.'annotation'.Annotation $r5;
        java.lang.Object $r0, $r8;
        java.lang.Class $r2;
        java.lang.String $r7;

        $r0 := @parameter0: java.lang.Object;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        if $r3 == null goto label5;

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label5;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r4 = $r3[$i1];

        $r5 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/astep/pay/plugin/libs/f;");

        $r6 = (com.astep.pay.plugin.libs.f) $r5;

        if $r6 == null goto label3;

     label2:
        virtualinvoke $r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r7 = interfaceinvoke $r6.<com.astep.pay.plugin.libs.f: java.lang.String a()>();

        $r8 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

        goto label3;

     label5:
        return $r1;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private static java.util.List a(java.lang.reflect.Field, org.json.JSONArray, int)
    {
        java.lang.ArrayIndexOutOfBoundsException $r9;
        java.lang.reflect.Field $r0;
        java.util.ArrayList $r2;
        org.json.JSONException $r10;
        java.lang.reflect.ParameterizedType $r4;
        java.lang.reflect.Type $r3;
        int $i0, $i1;
        java.lang.reflect.Type[] $r5;
        java.lang.Class $r6;
        java.lang.Object $r8;
        java.lang.String $r7;
        org.json.JSONArray $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Field;

        $r1 := @parameter1: org.json.JSONArray;

        $i0 := @parameter2: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke $r0.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        $z0 = $r3 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label06;

        $r4 = (java.lang.reflect.ParameterizedType) $r3;

        $r5 = interfaceinvoke $r4.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r3 = $r5[0];

        $r6 = (java.lang.Class) $r3;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label09;

     label02:
        $r7 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String getString(int)>($i1);

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

     label03:
        if $r7 == null goto label10;

        $r8 = staticinvoke <com.astep.pay.plugin.libs.m: java.lang.Object a(java.lang.Class,java.lang.String,org.json.JSONArray,int)>($r6, $r7, $r1, $i1);

     label04:
        if $r8 == null goto label05;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r8);

     label05:
        $i1 = $i1 + 1;

        goto label01;

     label06:
        return null;

     label07:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.ArrayIndexOutOfBoundsException: void printStackTrace()>();

        $r7 = null;

        goto label03;

     label08:
        $r10 := @caughtexception;

        virtualinvoke $r10.<org.json.JSONException: void printStackTrace()>();

        $r7 = null;

        goto label03;

     label09:
        return $r2;

     label10:
        $r8 = null;

        goto label04;

        catch java.lang.ArrayIndexOutOfBoundsException from label02 to label03 with label07;
        catch org.json.JSONException from label02 to label03 with label08;
    }

    public static void a(org.json.JSONObject, java.lang.Object)
    {
        com.astep.pay.plugin.libs.f $r10;
        java.util.ArrayList $r2;
        org.json.JSONException $r15, $r18;
        org.json.JSONObject $r0;
        int $i0;
        java.lang.String $r13, $r16;
        boolean $z0, $z1;
        java.util.Iterator $r6;
        java.lang.ArrayIndexOutOfBoundsException $r17;
        java.lang.reflect.Field $r8;
        java.lang.reflect.Field[] $r4;
        java.util.List $r5;
        java.lang.'annotation'.Annotation $r9;
        java.lang.Object $r1, $r7;
        java.lang.Class $r3, $r11;
        java.lang.StringBuilder $r12;
        org.json.JSONArray $r14;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.Object;

        if $r0 != null goto label01;

        return;

     label01:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        if $r3 == class "Ljava/lang/Object;" goto label03;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label02;

     label03:
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label15;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.reflect.Field) $r7;

        $r9 = virtualinvoke $r8.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/astep/pay/plugin/libs/f;");

        $r10 = (com.astep.pay.plugin.libs.f) $r9;

        if $r10 == null goto label04;

        virtualinvoke $r8.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r3 = virtualinvoke $r8.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        $r11 = class "Ljava/util/List;";

        $z1 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r3.<java.lang.Class: java.lang.String toString()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = interfaceinvoke $r10.<com.astep.pay.plugin.libs.f: java.lang.String a()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        if $z0 != 0 goto label05;

        if $z1 == 0 goto label09;

     label05:
        $r13 = interfaceinvoke $r10.<com.astep.pay.plugin.libs.f: java.lang.String a()>();

        $r14 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>($r13);

     label06:
        if $r14 == null goto label04;

        $i0 = virtualinvoke $r14.<org.json.JSONArray: int length()>();

        if $i0 <= 0 goto label04;

        if $z0 == 0 goto label08;

        $r7 = staticinvoke <com.astep.pay.plugin.libs.m: java.lang.Object a(java.lang.Class,org.json.JSONArray,int)>($r3, $r14, $i0);

        virtualinvoke $r8.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r1, $r7);

        goto label04;

     label07:
        $r15 := @caughtexception;

        virtualinvoke $r15.<org.json.JSONException: void printStackTrace()>();

        goto label04;

     label08:
        if $z1 == 0 goto label04;

        $r5 = staticinvoke <com.astep.pay.plugin.libs.m: java.util.List a(java.lang.reflect.Field,org.json.JSONArray,int)>($r8, $r14, $i0);

        virtualinvoke $r8.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r1, $r5);

        goto label04;

     label09:
        $r13 = interfaceinvoke $r10.<com.astep.pay.plugin.libs.f: java.lang.String a()>();

        $r13 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r13);

        $r13 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

     label10:
        if $r13 == null goto label14;

        $r16 = "NULL";

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label14;

        $r16 = "null";

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label14;

        $r16 = interfaceinvoke $r10.<com.astep.pay.plugin.libs.f: java.lang.String a()>();

        $r7 = staticinvoke <com.astep.pay.plugin.libs.m: java.lang.Object a(java.lang.Class,java.lang.String,org.json.JSONObject,java.lang.String,org.json.JSONArray,int)>($r3, $r13, $r0, $r16, null, 0);

     label11:
        if $r7 == null goto label04;

        virtualinvoke $r8.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r1, $r7);

        goto label04;

     label12:
        $r17 := @caughtexception;

        virtualinvoke $r17.<java.lang.ArrayIndexOutOfBoundsException: void printStackTrace()>();

        $r13 = null;

        goto label10;

     label13:
        $r18 := @caughtexception;

        virtualinvoke $r18.<org.json.JSONException: void printStackTrace()>();

        $r13 = null;

        goto label10;

     label14:
        $r7 = null;

        goto label11;

     label15:
        return;

        catch org.json.JSONException from label05 to label06 with label07;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label12;
        catch org.json.JSONException from label09 to label10 with label13;
    }

    private static java.lang.String[] a(org.json.JSONArray, java.lang.String)
    {
        java.lang.String[] $r2;
        org.json.JSONException $r6;
        org.json.JSONObject $r4;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1, $r5;
        org.json.JSONArray $r0;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        $r2 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label6;

        $r3 = virtualinvoke $r0.<org.json.JSONArray: java.lang.Object opt(int)>($i0);

        $r4 = (org.json.JSONObject) $r3;

     label2:
        $r5 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r1);

     label3:
        $r2[$i0] = $r5;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        $r6 := @caughtexception;

        virtualinvoke $r6.<org.json.JSONException: void printStackTrace()>();

        goto label4;

     label6:
        return $r2;

        catch org.json.JSONException from label2 to label3 with label5;
    }

    private static java.lang.Object[] b(org.json.JSONArray, java.lang.String)
    {
        java.lang.Object[] $r2;
        org.json.JSONException $r5;
        org.json.JSONObject $r4;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1;
        org.json.JSONArray $r0;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        $r2 = newarray (java.lang.Object)[$i0];

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label6;

        $r3 = virtualinvoke $r0.<org.json.JSONArray: java.lang.Object opt(int)>($i0);

        $r4 = (org.json.JSONObject) $r3;

     label2:
        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r1);

     label3:
        $r2[$i0] = $r3;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r5.<org.json.JSONException: void printStackTrace()>();

        goto label4;

     label6:
        return $r2;

        catch org.json.JSONException from label2 to label3 with label5;
    }

    public static void <clinit>()
    {
        <com.astep.pay.plugin.libs.m: java.lang.String a> = "JsonUtils";

        return;
    }
}
