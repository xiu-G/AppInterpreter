public final class com.facebook.internal.FileLruCache extends java.lang.Object
{
    private static final java.lang.String HEADER_CACHEKEY_KEY;
    private static final java.lang.String HEADER_CACHE_CONTENT_TAG_KEY;
    static final java.lang.String TAG;
    private static final java.util.concurrent.atomic.AtomicLong bufferIndex;
    private final java.io.File directory;
    private boolean isTrimPending;
    private java.util.concurrent.atomic.AtomicLong lastClearCacheTime;
    private final com.facebook.internal.FileLruCache$Limits limits;
    private final java.lang.Object lock;
    private final java.lang.String tag;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        java.lang.Class $r1;
        java.lang.String $r0;

        <com.facebook.internal.FileLruCache: java.lang.String HEADER_CACHE_CONTENT_TAG_KEY> = "tag";

        <com.facebook.internal.FileLruCache: java.lang.String HEADER_CACHEKEY_KEY> = "key";

        $r1 = class "Lcom/facebook/internal/FileLruCache;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.facebook.internal.FileLruCache: java.lang.String TAG> = $r0;

        $r2 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        <com.facebook.internal.FileLruCache: java.util.concurrent.atomic.AtomicLong bufferIndex> = $r2;

        return;
    }

    public void <init>(android.content.Context, java.lang.String, com.facebook.internal.FileLruCache$Limits)
    {
        com.facebook.internal.FileLruCache r0;
        android.content.Context $r1;
        com.facebook.internal.FileLruCache$Limits $r3;
        java.io.File $r4, $r6;
        java.util.concurrent.atomic.AtomicLong $r5;
        java.lang.Object $r7;
        java.lang.String $r2;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.facebook.internal.FileLruCache$Limits;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        r0.<com.facebook.internal.FileLruCache: java.util.concurrent.atomic.AtomicLong lastClearCacheTime> = $r5;

        r0.<com.facebook.internal.FileLruCache: java.lang.String tag> = $r2;

        r0.<com.facebook.internal.FileLruCache: com.facebook.internal.FileLruCache$Limits limits> = $r3;

        $r6 = new java.io.File;

        $r4 = virtualinvoke $r1.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r2);

        r0.<com.facebook.internal.FileLruCache: java.io.File directory> = $r6;

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        r0.<com.facebook.internal.FileLruCache: java.lang.Object lock> = $r7;

        $r4 = r0.<com.facebook.internal.FileLruCache: java.io.File directory>;

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        $r4 = r0.<com.facebook.internal.FileLruCache: java.io.File directory>;

        staticinvoke <com.facebook.internal.FileLruCache$BufferFile: void deleteAll(java.io.File)>($r4);

        return;
    }

    static java.util.concurrent.atomic.AtomicLong access$0()
    {
        java.util.concurrent.atomic.AtomicLong r0;

        r0 = <com.facebook.internal.FileLruCache: java.util.concurrent.atomic.AtomicLong bufferIndex>;

        return r0;
    }

    static java.util.concurrent.atomic.AtomicLong access$1(com.facebook.internal.FileLruCache)
    {
        com.facebook.internal.FileLruCache $r0;
        java.util.concurrent.atomic.AtomicLong r1;

        $r0 := @parameter0: com.facebook.internal.FileLruCache;

        r1 = $r0.<com.facebook.internal.FileLruCache: java.util.concurrent.atomic.AtomicLong lastClearCacheTime>;

        return r1;
    }

    static void access$2(com.facebook.internal.FileLruCache, java.lang.String, java.io.File)
    {
        com.facebook.internal.FileLruCache $r0;
        java.lang.String $r1;
        java.io.File $r2;

        $r0 := @parameter0: com.facebook.internal.FileLruCache;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.io.File;

        specialinvoke $r0.<com.facebook.internal.FileLruCache: void renameToTargetAndTrim(java.lang.String,java.io.File)>($r1, $r2);

        return;
    }

    static void access$3(com.facebook.internal.FileLruCache)
    {
        com.facebook.internal.FileLruCache $r0;

        $r0 := @parameter0: com.facebook.internal.FileLruCache;

        specialinvoke $r0.<com.facebook.internal.FileLruCache: void trim()>();

        return;
    }

    private void postTrim()
    {
        java.lang.Throwable $r4;
        com.facebook.internal.FileLruCache r0;
        java.util.concurrent.Executor $r3;
        com.facebook.internal.FileLruCache$3 $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 = r0.<com.facebook.internal.FileLruCache: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $z0 = r0.<com.facebook.internal.FileLruCache: boolean isTrimPending>;

        if $z0 != 0 goto label2;

        r0.<com.facebook.internal.FileLruCache: boolean isTrimPending> = 1;

        $r3 = staticinvoke <com.facebook.Settings: java.util.concurrent.Executor getExecutor()>();

        $r2 = new com.facebook.internal.FileLruCache$3;

        specialinvoke $r2.<com.facebook.internal.FileLruCache$3: void <init>(com.facebook.internal.FileLruCache)>(r0);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r1;

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private void renameToTargetAndTrim(java.lang.String, java.io.File)
    {
        com.facebook.internal.FileLruCache r0;
        java.lang.String $r1;
        java.io.File $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        $r4 = new java.io.File;

        $r3 = r0.<com.facebook.internal.FileLruCache: java.io.File directory>;

        $r1 = staticinvoke <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>($r1);

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean renameTo(java.io.File)>($r4);

        if $z0 != 0 goto label1;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label1:
        specialinvoke r0.<com.facebook.internal.FileLruCache: void postTrim()>();

        return;
    }

    private void trim()
    {
        java.lang.Throwable $r15, $r16, $r17;
        com.facebook.internal.FileLruCache r0;
        java.io.FilenameFilter $r5;
        java.util.PriorityQueue $r1, $r18;
        long $l1, $l2, $l4;
        com.facebook.LoggingBehavior $r2;
        byte $b5;
        java.lang.Long $r12;
        int $i0, $i3;
        java.lang.String $r3, $r14;
        com.facebook.internal.FileLruCache$Limits $r7;
        java.io.File $r4, $r13;
        com.facebook.internal.FileLruCache$ModifiedFile $r10, $r19;
        java.lang.Object $r8, $r9;
        java.lang.StringBuilder $r11, $r20;
        java.io.File[] $r6;

        r0 := @this: com.facebook.internal.FileLruCache;

     label01:
        $r2 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior CACHE>;

        $r3 = <com.facebook.internal.FileLruCache: java.lang.String TAG>;

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String)>($r2, $r3, "trim started");

        $r18 = new java.util.PriorityQueue;

     label02:
        $r1 = $r18;

     label03:
        specialinvoke $r18.<java.util.PriorityQueue: void <init>()>();

        $r4 = r0.<com.facebook.internal.FileLruCache: java.io.File directory>;

        $r5 = staticinvoke <com.facebook.internal.FileLruCache$BufferFile: java.io.FilenameFilter excludeBufferFiles()>();

        $r6 = virtualinvoke $r4.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r5);

        $i0 = lengthof $r6;

     label04:
        $l1 = 0L;

        $l2 = 0L;

        $i3 = 0;

     label05:
        if $i3 < $i0 goto label12;

     label06:
        $r7 = r0.<com.facebook.internal.FileLruCache: com.facebook.internal.FileLruCache$Limits limits>;

        $i0 = virtualinvoke $r7.<com.facebook.internal.FileLruCache$Limits: int getByteCount()>();

     label07:
        $l4 = (long) $i0;

        $b5 = $l2 cmp $l4;

        $i0 = (int) $b5;

        if $i0 > 0 goto label18;

     label08:
        $r7 = r0.<com.facebook.internal.FileLruCache: com.facebook.internal.FileLruCache$Limits limits>;

        $i0 = virtualinvoke $r7.<com.facebook.internal.FileLruCache$Limits: int getFileCount()>();

     label09:
        $l4 = (long) $i0;

        $b5 = $l1 cmp $l4;

        $i0 = (int) $b5;

        if $i0 > 0 goto label18;

        $r8 = r0.<com.facebook.internal.FileLruCache: java.lang.Object lock>;

        entermonitor $r8;

     label10:
        r0.<com.facebook.internal.FileLruCache: boolean isTrimPending> = 0;

        $r9 = r0.<com.facebook.internal.FileLruCache: java.lang.Object lock>;

        virtualinvoke $r9.<java.lang.Object: void notifyAll()>();

        exitmonitor $r8;

     label11:
        return;

     label12:
        $r4 = $r6[$i3];

        $r19 = new com.facebook.internal.FileLruCache$ModifiedFile;

     label13:
        $r10 = $r19;

     label14:
        specialinvoke $r19.<com.facebook.internal.FileLruCache$ModifiedFile: void <init>(java.io.File)>($r4);

        virtualinvoke $r1.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r10);

        $r2 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior CACHE>;

        $r3 = <com.facebook.internal.FileLruCache: java.lang.String TAG>;

        $r20 = new java.lang.StringBuilder;

     label15:
        $r11 = $r20;

     label16:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("  trim considering time=");

        $l4 = virtualinvoke $r10.<com.facebook.internal.FileLruCache$ModifiedFile: long getModified()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r13 = virtualinvoke $r10.<com.facebook.internal.FileLruCache$ModifiedFile: java.io.File getFile()>();

        $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String)>($r2, $r3, $r14);

        $l4 = virtualinvoke $r4.<java.io.File: long length()>();

     label17:
        $i3 = $i3 + 1;

        $l1 = $l1 + 1L;

        $l2 = $l4 + $l2;

        goto label05;

     label18:
        $r8 = virtualinvoke $r1.<java.util.PriorityQueue: java.lang.Object remove()>();

        $r10 = (com.facebook.internal.FileLruCache$ModifiedFile) $r8;

        $r4 = virtualinvoke $r10.<com.facebook.internal.FileLruCache$ModifiedFile: java.io.File getFile()>();

        $r2 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior CACHE>;

        $r3 = <com.facebook.internal.FileLruCache: java.lang.String TAG>;

        $r20 = new java.lang.StringBuilder;

     label19:
        $r11 = $r20;

     label20:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("  trim removing ");

        $r14 = virtualinvoke $r4.<java.io.File: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String)>($r2, $r3, $r14);

        $l4 = virtualinvoke $r4.<java.io.File: long length()>();

     label21:
        $l2 = $l2 - $l4;

     label22:
        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label23:
        $l1 = $l1 - 1L;

        goto label06;

     label24:
        $r15 := @caughtexception;

        $r8 = r0.<com.facebook.internal.FileLruCache: java.lang.Object lock>;

        entermonitor $r8;

     label25:
        r0.<com.facebook.internal.FileLruCache: boolean isTrimPending> = 0;

        $r9 = r0.<com.facebook.internal.FileLruCache: java.lang.Object lock>;

        virtualinvoke $r9.<java.lang.Object: void notifyAll()>();

        exitmonitor $r8;

     label26:
        throw $r15;

     label27:
        $r16 := @caughtexception;

        exitmonitor $r8;

        throw $r16;

     label28:
        $r17 := @caughtexception;

        exitmonitor $r8;

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label27;
    }

    public final void clearCache()
    {
        com.facebook.internal.FileLruCache$2 $r6;
        com.facebook.internal.FileLruCache r0;
        java.io.FilenameFilter $r2;
        java.util.concurrent.Executor $r5;
        long $l0;
        java.io.File $r1;
        java.util.concurrent.atomic.AtomicLong $r4;
        java.io.File[] $r3;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 = r0.<com.facebook.internal.FileLruCache: java.io.File directory>;

        $r2 = staticinvoke <com.facebook.internal.FileLruCache$BufferFile: java.io.FilenameFilter excludeBufferFiles()>();

        $r3 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r2);

        $r4 = r0.<com.facebook.internal.FileLruCache: java.util.concurrent.atomic.AtomicLong lastClearCacheTime>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l0);

        $r5 = staticinvoke <com.facebook.Settings: java.util.concurrent.Executor getExecutor()>();

        $r6 = new com.facebook.internal.FileLruCache$2;

        specialinvoke $r6.<com.facebook.internal.FileLruCache$2: void <init>(com.facebook.internal.FileLruCache,java.io.File[])>(r0, $r3);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

        return;
    }

    public final java.io.InputStream get(java.lang.String)
    {
        com.facebook.internal.FileLruCache r0;
        java.lang.String $r1;
        java.io.InputStream $r2;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.facebook.internal.FileLruCache: java.io.InputStream get(java.lang.String,java.lang.String)>($r1, null);

        return $r2;
    }

    public final java.io.InputStream get(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r13, $r14;
        com.facebook.internal.FileLruCache r0;
        java.io.BufferedInputStream $r7;
        java.util.Date $r9;
        long $l0;
        com.facebook.LoggingBehavior $r10;
        org.json.JSONObject $r8;
        java.lang.Long $r12;
        java.lang.String $r1, $r2, $r5;
        boolean $z0;
        java.io.FileInputStream $r6;
        java.io.File $r3, $r4;
        java.lang.StringBuilder $r11;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.io.File;

        $r4 = r0.<com.facebook.internal.FileLruCache: java.io.File directory>;

        $r5 = staticinvoke <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>($r1);

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r5);

        $r6 = new java.io.FileInputStream;

     label01:
        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label02:
        $r7 = new java.io.BufferedInputStream;

        specialinvoke $r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r6, 8192);

     label03:
        $r8 = staticinvoke <com.facebook.internal.FileLruCache$StreamHeader: org.json.JSONObject readHeader(java.io.InputStream)>($r7);

     label04:
        if $r8 != null goto label05;

        virtualinvoke $r7.<java.io.BufferedInputStream: void close()>();

        return null;

     label05:
        $r5 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("key");

     label06:
        if $r5 == null goto label09;

     label07:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label08:
        if $z0 != 0 goto label10;

     label09:
        virtualinvoke $r7.<java.io.BufferedInputStream: void close()>();

        return null;

     label10:
        $r1 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("tag", null);

     label11:
        if $r2 != null goto label12;

        if $r1 != null goto label15;

     label12:
        if $r2 == null goto label16;

     label13:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label14:
        if $z0 != 0 goto label16;

     label15:
        virtualinvoke $r7.<java.io.BufferedInputStream: void close()>();

        return null;

     label16:
        $r9 = new java.util.Date;

        specialinvoke $r9.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r9.<java.util.Date: long getTime()>();

        $r10 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior CACHE>;

        $r1 = <com.facebook.internal.FileLruCache: java.lang.String TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Setting lastModified to ");

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r2 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String)>($r10, $r1, $r2);

        virtualinvoke $r3.<java.io.File: boolean setLastModified(long)>($l0);

     label17:
        return $r7;

     label18:
        $r13 := @caughtexception;

        virtualinvoke $r7.<java.io.BufferedInputStream: void close()>();

        throw $r13;

     label19:
        $r14 := @caughtexception;

        return null;

        catch java.io.IOException from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public final java.io.InputStream interceptAndPut(java.lang.String, java.io.InputStream)
    {
        java.io.OutputStream $r4;
        com.facebook.internal.FileLruCache r0;
        com.facebook.internal.FileLruCache$CopyingInputStream $r3;
        java.lang.String $r1;
        java.io.InputStream $r2;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.InputStream;

        $r4 = virtualinvoke r0.<com.facebook.internal.FileLruCache: java.io.OutputStream openPutStream(java.lang.String)>($r1);

        $r3 = new com.facebook.internal.FileLruCache$CopyingInputStream;

        specialinvoke $r3.<com.facebook.internal.FileLruCache$CopyingInputStream: void <init>(java.io.InputStream,java.io.OutputStream)>($r2, $r4);

        return $r3;
    }

    final java.io.OutputStream openPutStream(java.lang.String)
    {
        java.io.OutputStream $r2;
        com.facebook.internal.FileLruCache r0;
        java.lang.String $r1;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.facebook.internal.FileLruCache: java.io.OutputStream openPutStream(java.lang.String,java.lang.String)>($r1, null);

        return $r2;
    }

    public final java.io.OutputStream openPutStream(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r8, $r11;
        com.facebook.internal.FileLruCache r0;
        com.facebook.internal.FileLruCache$1 $r15;
        long $l0;
        java.io.BufferedOutputStream $r6, $r17;
        com.facebook.LoggingBehavior $r9;
        org.json.JSONException $r10;
        org.json.JSONObject $r7, $r18;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.io.FileOutputStream $r14;
        java.io.IOException $r4, $r13;
        java.io.File $r3;
        java.io.FileNotFoundException $r19;
        com.facebook.internal.FileLruCache$CloseCallbackOutputStream $r16;
        java.lang.StringBuilder $r5, $r12;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.facebook.internal.FileLruCache: java.io.File directory>;

        $r3 = staticinvoke <com.facebook.internal.FileLruCache$BufferFile: java.io.File newFile(java.io.File)>($r3);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        $z0 = virtualinvoke $r3.<java.io.File: boolean createNewFile()>();

        if $z0 != 0 goto label01;

        $r13 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not create file at ");

        $r1 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r13;

     label01:
        $r14 = new java.io.FileOutputStream;

     label02:
        specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label03:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r15 = new com.facebook.internal.FileLruCache$1;

        specialinvoke $r15.<com.facebook.internal.FileLruCache$1: void <init>(com.facebook.internal.FileLruCache,long,java.io.File,java.lang.String)>(r0, $l0, $r3, $r1);

        $r16 = new com.facebook.internal.FileLruCache$CloseCallbackOutputStream;

        specialinvoke $r16.<com.facebook.internal.FileLruCache$CloseCallbackOutputStream: void <init>(java.io.OutputStream,com.facebook.internal.FileLruCache$StreamCloseCallback)>($r14, $r15);

        $r17 = new java.io.BufferedOutputStream;

        $r6 = $r17;

        specialinvoke $r17.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r16, 8192);

     label04:
        $r18 = new org.json.JSONObject;

     label05:
        $r7 = $r18;

     label06:
        specialinvoke $r18.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("key", $r1);

        $z0 = staticinvoke <com.facebook.internal.Utility: boolean isNullOrEmpty(java.lang.String)>($r2);

     label07:
        if $z0 != 0 goto label09;

     label08:
        virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("tag", $r2);

     label09:
        staticinvoke <com.facebook.internal.FileLruCache$StreamHeader: void writeHeader(java.io.OutputStream,org.json.JSONObject)>($r6, $r7);

     label10:
        return $r6;

     label11:
        $r8 := @caughtexception;

        $r9 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior CACHE>;

        $r1 = <com.facebook.internal.FileLruCache: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error creating buffer output stream: ");

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,int,java.lang.String,java.lang.String)>($r9, 5, $r1, $r2);

        $r13 = new java.io.IOException;

        $r19 = (java.io.FileNotFoundException) $r8;

        $r1 = virtualinvoke $r19.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r13;

     label12:
        $r10 := @caughtexception;

     label13:
        $r9 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior CACHE>;

        $r1 = <com.facebook.internal.FileLruCache: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

     label14:
        $r5 = $r12;

     label15:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error creating JSON header for cache file: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,int,java.lang.String,java.lang.String)>($r9, 5, $r1, $r2);

        $r13 = new java.io.IOException;

     label16:
        $r4 = $r13;

     label17:
        $r1 = virtualinvoke $r10.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label18:
        $r11 := @caughtexception;

        virtualinvoke $r6.<java.io.BufferedOutputStream: void close()>();

        throw $r11;

        catch java.io.FileNotFoundException from label02 to label03 with label11;
        catch org.json.JSONException from label06 to label07 with label12;
        catch org.json.JSONException from label08 to label10 with label12;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label10 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label17 to label18 with label18;
    }

    final long sizeInBytesForTest()
    {
        java.lang.Throwable $r5, $r6;
        com.facebook.internal.FileLruCache r0;
        long $l1, $l3;
        java.io.File $r2;
        int $i0, $i2;
        java.lang.Object $r1, $r4;
        java.io.File[] $r3;
        boolean $z0;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 = r0.<com.facebook.internal.FileLruCache: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $z0 = r0.<com.facebook.internal.FileLruCache: boolean isTrimPending>;

        if $z0 != 0 goto label4;

        exitmonitor $r1;

     label2:
        $r2 = r0.<com.facebook.internal.FileLruCache: java.io.File directory>;

        $r3 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        $l1 = 0L;

        $i0 = lengthof $r3;

        $i2 = 0;

     label3:
        if $i2 < $i0 goto label9;

        return $l1;

     label4:
        $r4 = r0.<com.facebook.internal.FileLruCache: java.lang.Object lock>;

     label5:
        virtualinvoke $r4.<java.lang.Object: void wait()>();

     label6:
        goto label1;

     label7:
        $r5 := @caughtexception;

        goto label1;

     label8:
        $r6 := @caughtexception;

        exitmonitor $r1;

        throw $r6;

     label9:
        $r2 = $r3[$i2];

        $l3 = virtualinvoke $r2.<java.io.File: long length()>();

        $l1 = $l1 + $l3;

        $i2 = $i2 + 1;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.InterruptedException from label5 to label6 with label7;
        catch java.lang.Throwable from label4 to label6 with label8;
    }

    public final java.lang.String toString()
    {
        com.facebook.internal.FileLruCache r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.io.File $r3;

        r0 := @this: com.facebook.internal.FileLruCache;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{FileLruCache: tag:");

        $r2 = r0.<com.facebook.internal.FileLruCache: java.lang.String tag>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file:");

        $r3 = r0.<com.facebook.internal.FileLruCache: java.io.File directory>;

        $r2 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
