class com.parse.aq extends java.lang.Object
{
    java.lang.Class a;
    org.json.JSONObject b;

    protected void <init>()
    {
        com.parse.aq r0;

        r0 := @this: com.parse.aq;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(java.lang.Class, org.json.JSONObject)
    {
        com.parse.aq r0;
        java.lang.Class $r1;
        org.json.JSONObject $r2;

        r0 := @this: com.parse.aq;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.json.JSONObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.parse.aq: java.lang.Class a> = $r1;

        r0.<com.parse.aq: org.json.JSONObject b> = $r2;

        return;
    }

    void <init>(org.json.JSONObject)
    {
        com.parse.aq r0;
        org.json.JSONObject $r1;
        java.lang.StringBuilder $r2;
        java.lang.Class $r4;
        java.lang.ClassNotFoundException $r5;
        java.lang.String $r3;

        r0 := @this: com.parse.aq;

        $r1 := @parameter0: org.json.JSONObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Creating factory for class ");

        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("name");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r3);

        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("name");

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

        r0.<com.parse.aq: java.lang.Class a> = $r4;

        $r4 = r0.<com.parse.aq: java.lang.Class a>;

        if $r4 != null goto label1;

        $r5 = new java.lang.ClassNotFoundException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Missing class definition in ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label1:
        $r1 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("data");

        r0.<com.parse.aq: org.json.JSONObject b> = $r1;

        return;
    }

    com.parse.PushCallback a()
    {
        com.parse.aq r0;
        org.json.JSONObject $r1;
        java.lang.Object $r2;
        java.lang.Class $r3;
        com.parse.PushCallback $r4;

        r0 := @this: com.parse.aq;

        $r3 = r0.<com.parse.aq: java.lang.Class a>;

        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

        $r4 = (com.parse.PushCallback) $r2;

        $r1 = r0.<com.parse.aq: org.json.JSONObject b>;

        virtualinvoke $r4.<com.parse.PushCallback: void setLocalData(org.json.JSONObject)>($r1);

        return $r4;
    }

    org.json.JSONObject b()
    {
        com.parse.aq r0;
        org.json.JSONException $r5;
        org.json.JSONObject $r1, $r4;
        java.lang.Class $r2;
        java.lang.StringBuilder $r6;
        java.lang.String $r3;

        r0 := @this: com.parse.aq;

        $r1 = new org.json.JSONObject;

     label1:
        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

     label2:
        $r2 = r0.<com.parse.aq: java.lang.Class a>;

     label3:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("name", $r3);

     label4:
        $r4 = r0.<com.parse.aq: org.json.JSONObject b>;

     label5:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("data", $r4);

     label6:
        return $r1;

     label7:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to encode route: ");

        $r3 = virtualinvoke $r5.<org.json.JSONException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r3);

        return null;

        catch org.json.JSONException from label1 to label2 with label7;
        catch org.json.JSONException from label3 to label4 with label7;
        catch org.json.JSONException from label5 to label6 with label7;
    }

    boolean c()
    {
        com.parse.aq r0;

        r0 := @this: com.parse.aq;

        return 1;
    }
}
