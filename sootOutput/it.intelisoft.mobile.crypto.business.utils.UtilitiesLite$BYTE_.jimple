public final class it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ extends java.lang.Object
{
    final it.intelisoft.mobile.crypto.business.utils.UtilitiesLite this$0;

    public void <init>(it.intelisoft.mobile.crypto.business.utils.UtilitiesLite)
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite;

        r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public byte[] IEEE754Double2Bytes(java.lang.String)
    {
        byte[] $r2;
        long $l0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        java.lang.String $r1;
        double $d0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: java.lang.String;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r1);

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $r1 = staticinvoke <java.lang.Long: java.lang.String toBinaryString(long)>($l0);

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        return $r2;
    }

    public byte[] IEEE754Float2Bytes(java.lang.String)
    {
        byte[] $r2;
        int $i0;
        float $f0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        java.lang.String $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: java.lang.String;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        return $r2;
    }

    public double IEEE754bytes2Double(byte[], boolean)
    {
        byte[] $r1;
        long l0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        short $s2, $s3;
        byte $b1;
        int $i4, $i5;
        boolean $z0;
        double $d0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: byte[] bytesInvert(byte[])>($r1);

     label1:
        $b1 = $r1[7];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $b1 = $r1[6];

        $s3 = (short) $b1;

        $s3 = $s3 & 255;

        $i4 = (int) $s3;

        $i4 = $i4 << 8;

        $i5 = (int) $s2;

        $i4 = $i5 | $i4;

        $b1 = $r1[5];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i5 = (int) $s2;

        $i5 = $i5 << 16;

        $i4 = $i4 | $i5;

        $b1 = $r1[4];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i5 = (int) $s2;

        $i5 = $i5 << 24;

        $i4 = $i4 | $i5;

        $b1 = $r1[3];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i5 = (int) $s2;

        $i5 = $i5 << 32;

        $i4 = $i4 | $i5;

        $b1 = $r1[2];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i5 = (int) $s2;

        $i5 = $i5 << 40;

        $i4 = $i4 | $i5;

        $b1 = $r1[1];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i5 = (int) $s2;

        $i5 = $i5 << 48;

        $i4 = $i4 | $i5;

        $b1 = $r1[0];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i5 = (int) $s2;

        $i5 = $i5 << 56;

        $i4 = $i4 | $i5;

        l0 = (long) $i4;

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(l0);

        return $d0;
    }

    public float IEEE754bytes2Float(byte[], boolean)
    {
        byte[] $r1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        short $s2, $s3;
        byte $b1;
        int i0, $i4;
        float $f0;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: byte[] bytesInvert(byte[])>($r1);

     label1:
        $b1 = $r1[3];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $b1 = $r1[2];

        $s3 = (short) $b1;

        $s3 = $s3 & 255;

        i0 = (int) $s3;

        i0 = i0 << 8;

        $i4 = (int) $s2;

        i0 = $i4 | i0;

        $b1 = $r1[1];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i4 = (int) $s2;

        $i4 = $i4 << 16;

        i0 = i0 | $i4;

        $b1 = $r1[0];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i4 = (int) $s2;

        $i4 = $i4 << 24;

        i0 = i0 | $i4;

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i0);

        return $f0;
    }

    public byte[] InputStream2Bytes(java.io.InputStream)
    {
        java.lang.Throwable $r4;
        java.io.PrintStream $r5;
        byte[] r3;
        java.io.ByteArrayOutputStream r2, $r6;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        int $i0, $i1;
        java.io.InputStream $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: java.io.InputStream;

        if $r1 != null goto label1;

        return null;

     label1:
        r3 = newarray (byte)[1024];

        $r6 = new java.io.ByteArrayOutputStream;

        r2 = $r6;

        $i0 = 1024 * 2;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

     label2:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>(r3);

     label3:
        $i1 = -1;

        if $i0 != $i1 goto label5;

     label4:
        r3 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return r3;

     label5:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r3, 0, $i0);

     label6:
        goto label2;

     label7:
        $r4 := @caughtexception;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r5);

        goto label4;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public java.lang.String bytes2Hex(byte[], boolean)
    {
        byte[] $r1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        short $s3;
        byte $b2;
        int i0, $i1;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        r2 = "";

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 < $i1 goto label2;

        return r2;

     label2:
        if $z0 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[0x");

        $b2 = $r1[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $s3 = $s3 | 256;

        $i1 = (int) $s3;

        r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(1, 3);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r4 = new java.lang.StringBuilder;

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r2);

        $b2 = $r1[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $s3 = $s3 | 256;

        $i1 = (int) $s3;

        r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(1, 3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;
    }

    public java.util.Vector bytes2HexVector(byte[]) throws java.lang.Exception
    {
        byte[] $r1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        short $s3;
        java.util.Vector r2, $r4;
        byte $b2;
        int i0, $i1;
        java.lang.String $r3;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $r4 = new java.util.Vector;

        r2 = $r4;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 < $i1 goto label2;

        return r2;

     label2:
        $b2 = $r1[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $s3 = $s3 | 256;

        $i1 = (int) $s3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(1, 3);

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r3);

        i0 = i0 + 1;

        goto label1;
    }

    public double bytes2SignedDouble(byte[], int, boolean)
    {
        byte[] $r1;
        long l3, $l6;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        byte $b5;
        int $i0, i1, $i2, i4, $i7;
        boolean $z0;
        double $d0, d1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: byte[] bytesInvert(byte[])>($r1);

     label1:
        l3 = 0L;

        i1 = lengthof $r1;

        i4 = 0;

     label2:
        if i4 < i1 goto label3;

        d1 = (double) l3;

        if $i0 <= 0 goto label4;

        $d0 = (double) $i0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d0);

        d1 = d1 / $d0;

        return d1;

     label3:
        $b5 = $r1[i4];

        $i2 = i4 * 8;

        $i7 = (int) $b5;

        $i2 = $i7 << $i2;

        $l6 = (long) $i2;

        l3 = l3 | $l6;

        i4 = i4 + 1;

        goto label2;

     label4:
        return d1;
    }

    public int bytes2SignedInt(byte[], boolean)
    {
        byte[] $r1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        byte $b4;
        int i0, $i1, i2, i3, $i5;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: byte[] bytesInvert(byte[])>($r1);

     label1:
        i2 = 0;

        i0 = lengthof $r1;

        i3 = 0;

     label2:
        if i3 < i0 goto label3;

        return i2;

     label3:
        $b4 = $r1[i3];

        $i1 = i3 * 8;

        $i5 = (int) $b4;

        $i1 = $i5 << $i1;

        i2 = i2 | $i1;

        i3 = i3 + 1;

        goto label2;
    }

    public long bytes2SignedLong(byte[], boolean)
    {
        byte[] $r1;
        long l2, $l5;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        byte $b4;
        int i0, $i1, i3, $i6;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: byte[] bytesInvert(byte[])>($r1);

     label1:
        l2 = 0L;

        i0 = lengthof $r1;

        i3 = 0;

     label2:
        if i3 < i0 goto label3;

        return l2;

     label3:
        $b4 = $r1[i3];

        $i1 = i3 * 8;

        $i6 = (int) $b4;

        $i1 = $i6 << $i1;

        $l5 = (long) $i1;

        l2 = l2 | $l5;

        i3 = i3 + 1;

        goto label2;
    }

    public java.lang.String bytes2String(byte[], java.lang.String, boolean) throws java.lang.Exception
    {
        byte[] $r3;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r3 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        goto label1;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "UTF-8");

        return $r2;
    }

    public double bytes2UnsignedDouble(byte[], int, boolean)
    {
        byte[] $r1;
        long l3, $l7;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        short $s6;
        byte $b5;
        int $i0, i1, $i2, i4, $i8;
        boolean $z0;
        double $d0, d1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: byte[] bytesInvert(byte[])>($r1);

     label1:
        l3 = 0L;

        i1 = lengthof $r1;

        i4 = 0;

     label2:
        if i4 < i1 goto label3;

        d1 = (double) l3;

        if $i0 <= 0 goto label4;

        $d0 = (double) $i0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d0);

        d1 = d1 / $d0;

        return d1;

     label3:
        $b5 = $r1[i4];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i2 = i4 * 8;

        $i8 = (int) $s6;

        $i2 = $i8 << $i2;

        $l7 = (long) $i2;

        l3 = l3 | $l7;

        i4 = i4 + 1;

        goto label2;

     label4:
        return d1;
    }

    public int bytes2UnsignedInt(byte[], boolean)
    {
        byte[] $r1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        short $s5;
        byte $b4;
        int i0, $i1, i2, i3, $i6;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: byte[] bytesInvert(byte[])>($r1);

     label1:
        i2 = 0;

        i0 = lengthof $r1;

        i3 = 0;

     label2:
        if i3 < i0 goto label3;

        return i2;

     label3:
        $b4 = $r1[i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i1 = i3 * 8;

        $i6 = (int) $s5;

        $i1 = $i6 << $i1;

        i2 = i2 | $i1;

        i3 = i3 + 1;

        goto label2;
    }

    public long bytes2UnsignedLong(byte[], boolean)
    {
        byte[] $r1;
        long l2, $l6;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        short $s5;
        byte $b4;
        int i0, $i1, i3, $i7;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: byte[] bytesInvert(byte[])>($r1);

     label1:
        l2 = 0L;

        i0 = lengthof $r1;

        i3 = 0;

     label2:
        if i3 < i0 goto label3;

        return l2;

     label3:
        $b4 = $r1[i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i1 = i3 * 8;

        $i7 = (int) $s5;

        $i1 = $i7 << $i1;

        $l6 = (long) $i1;

        l2 = l2 | $l6;

        i3 = i3 + 1;

        goto label2;
    }

    public byte[] bytesInvert(byte[])
    {
        byte[] $r1, r2;
        byte $b3;
        int i0, i1, $i2;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        i0 = lengthof $r1;

        r2 = newarray (byte)[i0];

        i1 = 0;

     label1:
        if i1 < i0 goto label2;

        return r2;

     label2:
        $i2 = i0 - i1;

        $i2 = $i2 - 1;

        $b3 = $r1[$i2];

        r2[i1] = $b3;

        i1 = i1 + 1;

        goto label1;
    }

    public byte[] getBytesFromFile(java.io.File) throws java.io.IOException
    {
        byte[] $r3;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        java.io.FileInputStream r2;
        java.io.File $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: java.io.File;

        r2 = new java.io.FileInputStream;

        specialinvoke r2.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        $r3 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: byte[] InputStream2Bytes(java.io.InputStream)>(r2);

        return $r3;
    }

    public byte[] long2Bytes(long, int)
    {
        byte[] r1;
        long $l0, $l4;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        byte $b5;
        int $i1, i2, $i3;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        r1 = newarray (byte)[$i1];

        i2 = 0;

     label1:
        if i2 < $i1 goto label2;

        return r1;

     label2:
        $i3 = i2 * 8;

        $l4 = $l0 >> $i3;

        $i3 = (int) $l4;

        $b5 = (byte) $i3;

        r1[i2] = $b5;

        i2 = i2 + 1;

        goto label1;
    }

    public byte[] string2Bytes(java.lang.String)
    {
        byte[] $r2;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        java.lang.String $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        return $r2;
    }

    public byte[] string2Bytes(java.lang.String, int, int)
    {
        byte[] $r2;
        int $i0, $i1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        java.lang.String $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = $i0 + $i1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        return $r2;
    }

    public byte[] subBytes(byte[], int, int)
    {
        byte[] $r1, r2;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        byte $b5;
        int $i0, $i1, i2, i3, $i4;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = newarray (byte)[$i1];

        i2 = $i0;

        i3 = 0;

     label1:
        $i4 = $i0 + $i1;

        if i2 < $i4 goto label2;

        return r2;

     label2:
        $b5 = $r1[i2];

        r2[i3] = $b5;

        i2 = i2 + 1;

        i3 = i3 + 1;

        goto label1;
    }

    public java.lang.String subString(java.lang.String, int, int)
    {
        int $i0, $i1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ r0;
        java.lang.String $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = $i0 + $i1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r1;
    }
}
