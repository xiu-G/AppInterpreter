final class com.google.gson.Escaper extends java.lang.Object
{
    private static final char[] HEX_CHARS;
    private static final java.util.Set HTML_ESCAPE_CHARS;
    private static final java.util.Set JS_ESCAPE_CHARS;
    private final boolean escapeHtmlCharacters;

    static void <clinit>()
    {
        java.util.HashSet r0;
        java.lang.Character $r2;
        char[] $r1;
        java.util.Set $r3;

        $r1 = newarray (char)[16];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 97;

        $r1[11] = 98;

        $r1[12] = 99;

        $r1[13] = 100;

        $r1[14] = 101;

        $r1[15] = 102;

        <com.google.gson.Escaper: char[] HEX_CHARS> = $r1;

        r0 = new java.util.HashSet;

        specialinvoke r0.<java.util.HashSet: void <init>()>();

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(34);

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(92);

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r0);

        <com.google.gson.Escaper: java.util.Set JS_ESCAPE_CHARS> = $r3;

        r0 = new java.util.HashSet;

        specialinvoke r0.<java.util.HashSet: void <init>()>();

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(60);

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(62);

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(38);

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(61);

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(39);

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r0);

        <com.google.gson.Escaper: java.util.Set HTML_ESCAPE_CHARS> = $r3;

        return;
    }

    void <init>(boolean)
    {
        com.google.gson.Escaper r0;
        boolean $z0;

        r0 := @this: com.google.gson.Escaper;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.gson.Escaper: boolean escapeHtmlCharacters> = $z0;

        return;
    }

    private static void appendHexJavaScriptRepresentation(int, java.lang.Appendable) throws java.io.IOException
    {
        java.lang.Appendable $r0;
        int $i0, $i2;
        char[] $r1;
        char $c1;
        boolean $z0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.Appendable;

        $z0 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <java.lang.Character: char[] toChars(int)>($i0);

        $c1 = $r1[0];

        $i0 = (int) $c1;

        staticinvoke <com.google.gson.Escaper: void appendHexJavaScriptRepresentation(int,java.lang.Appendable)>($i0, $r0);

        $c1 = $r1[1];

        $i0 = (int) $c1;

        staticinvoke <com.google.gson.Escaper: void appendHexJavaScriptRepresentation(int,java.lang.Appendable)>($i0, $r0);

        return;

     label1:
        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\u");

        $r1 = <com.google.gson.Escaper: char[] HEX_CHARS>;

        $i2 = $i0 >>> 12;

        $i2 = $i2 & 15;

        $c1 = $r1[$i2];

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>($c1);

        $r1 = <com.google.gson.Escaper: char[] HEX_CHARS>;

        $i2 = $i0 >>> 8;

        $i2 = $i2 & 15;

        $c1 = $r1[$i2];

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>($c1);

        $r1 = <com.google.gson.Escaper: char[] HEX_CHARS>;

        $i2 = $i0 >>> 4;

        $i2 = $i2 & 15;

        $c1 = $r1[$i2];

        $r0 = interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>($c1);

        $r1 = <com.google.gson.Escaper: char[] HEX_CHARS>;

        $i0 = $i0 & 15;

        $c1 = $r1[$i0];

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>($c1);

        return;
    }

    private void escapeJsonString(java.lang.CharSequence, java.lang.StringBuilder) throws java.io.IOException
    {
        java.lang.CharSequence $r1;
        com.google.gson.Escaper r0;
        int i0, $i1, i2, $i3, $i4;
        java.lang.StringBuilder $r2;
        boolean $z0;

        r0 := @this: com.google.gson.Escaper;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.StringBuilder;

        i0 = 0;

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        i2 = 0;

     label01:
        if i2 >= $i1 goto label13;

        $i3 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>($r1, i2);

        $i4 = staticinvoke <java.lang.Character: int charCount(int)>($i3);

        $z0 = staticinvoke <com.google.gson.Escaper: boolean isControlCharacter(int)>($i3);

        if $z0 != 0 goto label03;

        $z0 = specialinvoke r0.<com.google.gson.Escaper: boolean mustEscapeCharInJsString(int)>($i3);

        if $z0 != 0 goto label03;

     label02:
        i2 = i2 + $i4;

        goto label01;

     label03:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, i0, i2);

        i0 = i2 + $i4;

        lookupswitch($i3)
        {
            case 8: goto label05;
            case 9: goto label06;
            case 10: goto label07;
            case 12: goto label08;
            case 13: goto label09;
            case 34: goto label12;
            case 47: goto label11;
            case 92: goto label10;
            default: goto label04;
        };

     label04:
        staticinvoke <com.google.gson.Escaper: void appendHexJavaScriptRepresentation(int,java.lang.Appendable)>($i3, $r2);

        goto label02;

     label05:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\b");

        goto label02;

     label06:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\t");

        goto label02;

     label07:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\n");

        goto label02;

     label08:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\f");

        goto label02;

     label09:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\r");

        goto label02;

     label10:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\\");

        goto label02;

     label11:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\/");

        goto label02;

     label12:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\"");

        goto label02;

     label13:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, i0, $i1);

        return;
    }

    private static boolean isControlCharacter(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 < 32 goto label1;

        if $i0 == 8232 goto label1;

        if $i0 == 8233 goto label1;

        if $i0 < 127 goto label2;

        if $i0 > 159 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private boolean mustEscapeCharInJsString(int)
    {
        java.lang.Character $r2;
        int $i0;
        java.util.Set $r1;
        char c1;
        com.google.gson.Escaper r0;
        boolean $z0;

        r0 := @this: com.google.gson.Escaper;

        $i0 := @parameter0: int;

        $z0 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>($i0);

        if $z0 != 0 goto label2;

        c1 = (char) $i0;

        $r1 = <com.google.gson.Escaper: java.util.Set JS_ESCAPE_CHARS>;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $z0 = r0.<com.google.gson.Escaper: boolean escapeHtmlCharacters>;

        if $z0 == 0 goto label2;

        $r1 = <com.google.gson.Escaper: java.util.Set HTML_ESCAPE_CHARS>;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public java.lang.String escapeJsonString(java.lang.CharSequence)
    {
        java.lang.Throwable r2;
        java.lang.CharSequence $r1;
        int $i0;
        java.lang.StringBuilder r3;
        java.lang.String $r4;
        java.lang.RuntimeException $r5;
        com.google.gson.Escaper r0;

        r0 := @this: com.google.gson.Escaper;

        $r1 := @parameter0: java.lang.CharSequence;

        r3 = new java.lang.StringBuilder;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i0 = $i0 + 20;

        specialinvoke r3.<java.lang.StringBuilder: void <init>(int)>($i0);

     label1:
        specialinvoke r0.<com.google.gson.Escaper: void escapeJsonString(java.lang.CharSequence,java.lang.StringBuilder)>($r1, r3);

     label2:
        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        r2 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
