public class com.snowbee.core.Drawable.DrawableManager extends java.lang.Object
{

    public void <init>()
    {
        com.snowbee.core.Drawable.DrawableManager r0;

        r0 := @this: com.snowbee.core.Drawable.DrawableManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private android.graphics.Bitmap fetch(java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient r4;
        org.apache.http.HttpEntity $r6;
        java.lang.Exception $r10;
        com.snowbee.core.Drawable.DrawableManager r0;
        org.apache.http.client.methods.HttpGet r2;
        android.graphics.Bitmap r3, $r8;
        org.apache.http.HttpResponse $r5;
        java.lang.String $r1;
        java.lang.OutOfMemoryError $r9;
        java.io.InputStream $r7;

        r0 := @this: com.snowbee.core.Drawable.DrawableManager;

        $r1 := @parameter0: java.lang.String;

        r3 = null;

     label1:
        r4 = new org.apache.http.impl.client.DefaultHttpClient;

     label2:
        specialinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

     label3:
        r2 = new org.apache.http.client.methods.HttpGet;

     label4:
        specialinvoke r2.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r2);

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r7 = interfaceinvoke $r6.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r7);

     label5:
        r3 = $r8;

     label6:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

        virtualinvoke r2.<org.apache.http.client.methods.HttpGet: void abort()>();

     label7:
        return $r8;

     label8:
        $r9 := @caughtexception;

        return r3;

     label9:
        $r10 := @caughtexception;

        return r3;

        catch java.lang.Exception from label2 to label3 with label9;
        catch java.lang.Exception from label4 to label5 with label9;
        catch java.lang.Exception from label6 to label7 with label9;
        catch java.lang.OutOfMemoryError from label1 to label5 with label8;
        catch java.lang.OutOfMemoryError from label6 to label7 with label8;
    }

    public void fetchDrawableOnThread(boolean, android.widget.ImageView, java.lang.String, java.lang.String, boolean)
    {
        android.widget.ImageView $r1;
        java.lang.String $r2, $r3;
        com.snowbee.core.Drawable.DrawableManager r0;
        boolean $z0, $z1;

        r0 := @this: com.snowbee.core.Drawable.DrawableManager;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.widget.ImageView;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $z1 := @parameter4: boolean;

        virtualinvoke r0.<com.snowbee.core.Drawable.DrawableManager: void fetchDrawableOnThread(boolean,android.widget.ImageView,java.lang.String,java.lang.String,boolean,int)>($z0, $r1, $r2, $r3, 1, 0);

        return;
    }

    public void fetchDrawableOnThread(boolean, android.widget.ImageView, java.lang.String, java.lang.String, boolean, int)
    {
        android.widget.ImageView $r1;
        com.snowbee.core.Drawable.DrawableManager$1 r5;
        com.snowbee.core.Drawable.DrawableManager r0;
        com.snowbee.core.Drawable.DrawableManager$2 r4;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.snowbee.core.Drawable.DrawableManager;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.widget.ImageView;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $z1 := @parameter4: boolean;

        $i0 := @parameter5: int;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label1;

        return;

     label1:
        r5 = new com.snowbee.core.Drawable.DrawableManager$1;

        specialinvoke r5.<com.snowbee.core.Drawable.DrawableManager$1: void <init>(com.snowbee.core.Drawable.DrawableManager,android.widget.ImageView)>(r0, $r1);

        r4 = new com.snowbee.core.Drawable.DrawableManager$2;

        specialinvoke r4.<com.snowbee.core.Drawable.DrawableManager$2: void <init>(com.snowbee.core.Drawable.DrawableManager,int,java.lang.String,boolean,java.lang.String,boolean,android.os.Handler)>(r0, $i0, $r3, $z0, $r2, 1, r5);

        virtualinvoke r4.<java.lang.Thread: void start()>();

        return;
    }

    public android.graphics.Bitmap fetchLocalDrawable(java.lang.String, java.lang.String)
    {
        android.graphics.Bitmap $r3;
        java.lang.String $r1, $r2;
        java.lang.Exception $r4;
        com.snowbee.core.Drawable.DrawableManager r0;

        r0 := @this: com.snowbee.core.Drawable.DrawableManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <com.snowbee.core.Utils: java.lang.String getCacheFilePath(java.lang.String)>($r2);

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public android.graphics.Bitmap fetchWebDrawable(java.lang.String, java.lang.String, boolean)
    {
        android.graphics.Bitmap $r3;
        java.lang.String $r1, $r2;
        com.snowbee.core.Drawable.DrawableManager r0;
        boolean $z0;

        r0 := @this: com.snowbee.core.Drawable.DrawableManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = virtualinvoke r0.<com.snowbee.core.Drawable.DrawableManager: android.graphics.Bitmap fetchWebDrawable(java.lang.String,java.lang.String,boolean,boolean)>($r1, $r2, $z0, 0);

        return $r3;
    }

    public android.graphics.Bitmap fetchWebDrawable(java.lang.String, java.lang.String, boolean, boolean)
    {
        java.lang.Throwable $r7, $r8;
        java.io.FileOutputStream r3;
        com.snowbee.core.Drawable.DrawableManager r0;
        android.graphics.Bitmap $r4, r5;
        android.graphics.Bitmap$CompressFormat $r6;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.snowbee.core.Drawable.DrawableManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label01;

        return null;

     label01:
        $r4 = specialinvoke r0.<com.snowbee.core.Drawable.DrawableManager: android.graphics.Bitmap fetch(java.lang.String)>($r1);

     label02:
        r5 = $r4;

        if $z0 == 0 goto label10;

        if $r4 == null goto label10;

     label03:
        $r1 = staticinvoke <com.snowbee.core.Utils: java.lang.String getCacheFilePath(java.lang.String)>($r2);

     label04:
        r3 = new java.io.FileOutputStream;

     label05:
        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

     label06:
        goto label07;

     label07:
        $r4 = staticinvoke <com.snowbee.core.Drawable.ImageHelper: android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap)>(r5);

     label08:
        r5 = $r4;

        $r6 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

     label09:
        virtualinvoke $r4.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r6, 90, r3);

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label10:
        return r5;

     label11:
        $r7 := @caughtexception;

     label12:
        return null;

     label13:
        $r8 := @caughtexception;

        goto label12;

        catch java.net.MalformedURLException from label01 to label02 with label13;
        catch java.net.MalformedURLException from label03 to label04 with label13;
        catch java.net.MalformedURLException from label05 to label06 with label13;
        catch java.net.MalformedURLException from label07 to label08 with label13;
        catch java.net.MalformedURLException from label09 to label10 with label13;
        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public void fetchWebToCache(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String $r1, $r2;
        com.snowbee.core.Drawable.DrawableManager r0;
        boolean $z0;

        r0 := @this: com.snowbee.core.Drawable.DrawableManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        virtualinvoke r0.<com.snowbee.core.Drawable.DrawableManager: void fetchWebToCache(java.lang.String,java.lang.String,boolean,boolean)>($r1, $r2, 0, 0);

        return;
    }

    public void fetchWebToCache(java.lang.String, java.lang.String, boolean, boolean)
    {
        java.lang.Throwable $r7, $r8;
        java.io.FileOutputStream r3;
        com.snowbee.core.Drawable.DrawableManager r0;
        android.graphics.Bitmap $r4, r5;
        android.graphics.Bitmap$CompressFormat $r6;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.snowbee.core.Drawable.DrawableManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        if $r1 == null goto label18;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label01;

        return;

     label01:
        $z2 = staticinvoke <com.snowbee.core.Utils: boolean isExists(java.lang.String)>($r2);

     label02:
        if $z0 != 0 goto label03;

        if $z2 != 0 goto label18;

     label03:
        $z0 = staticinvoke <com.snowbee.core.Utils: boolean isOldCache(java.lang.String)>($r2);

     label04:
        if $z0 == 0 goto label18;

     label05:
        $r4 = specialinvoke r0.<com.snowbee.core.Drawable.DrawableManager: android.graphics.Bitmap fetch(java.lang.String)>($r1);

     label06:
        r5 = $r4;

        if $r4 == null goto label18;

     label07:
        $r1 = staticinvoke <com.snowbee.core.Utils: java.lang.String getCacheFilePath(java.lang.String)>($r2);

     label08:
        r3 = new java.io.FileOutputStream;

     label09:
        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

     label10:
        if $z1 == 0 goto label13;

     label11:
        $r4 = staticinvoke <com.snowbee.core.Drawable.ImageHelper: android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap)>($r4);

     label12:
        r5 = $r4;

     label13:
        $r6 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

     label14:
        virtualinvoke r5.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r6, 90, r3);

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

        virtualinvoke r5.<android.graphics.Bitmap: void recycle()>();

     label15:
        return;

     label16:
        $r7 := @caughtexception;

        return;

     label17:
        $r8 := @caughtexception;

     label18:
        return;

        catch java.net.MalformedURLException from label01 to label02 with label16;
        catch java.net.MalformedURLException from label03 to label04 with label16;
        catch java.net.MalformedURLException from label05 to label06 with label16;
        catch java.net.MalformedURLException from label07 to label08 with label16;
        catch java.net.MalformedURLException from label09 to label10 with label16;
        catch java.net.MalformedURLException from label11 to label12 with label16;
        catch java.net.MalformedURLException from label14 to label15 with label16;
        catch java.io.IOException from label01 to label02 with label17;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.io.IOException from label05 to label06 with label17;
        catch java.io.IOException from label07 to label08 with label17;
        catch java.io.IOException from label09 to label10 with label17;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.io.IOException from label14 to label15 with label17;
    }

    public void recycleBitmaps()
    {
        com.snowbee.core.Drawable.DrawableManager r0;

        r0 := @this: com.snowbee.core.Drawable.DrawableManager;

        return;
    }
}
