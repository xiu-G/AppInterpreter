public abstract class proguard.classfile.attribute.Attribute extends java.lang.Object implements proguard.classfile.VisitorAccepter
{
    public int u2attributeNameIndex;
    public java.lang.Object visitorInfo;

    protected void <init>()
    {
        proguard.classfile.attribute.Attribute r0;

        r0 := @this: proguard.classfile.attribute.Attribute;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void <init>(int)
    {
        int $i0;
        proguard.classfile.attribute.Attribute r0;

        r0 := @this: proguard.classfile.attribute.Attribute;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.attribute.Attribute: int u2attributeNameIndex> = $i0;

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.Field, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        java.lang.UnsupportedOperationException $r4;
        proguard.classfile.attribute.visitor.AttributeVisitor $r3;
        proguard.classfile.Field $r2;
        proguard.classfile.Clazz $r1;
        java.lang.StringBuffer $r5;
        java.lang.Class $r6;
        java.lang.String $r7;
        proguard.classfile.attribute.Attribute r0;

        r0 := @this: proguard.classfile.attribute.Attribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        $r3 := @parameter2: proguard.classfile.attribute.visitor.AttributeVisitor;

        if $r2 != null goto label1;

        virtualinvoke r0.<proguard.classfile.attribute.Attribute: void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, $r3);

        return;

     label1:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Method must be overridden in [");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] if ever called");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r4;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        java.lang.UnsupportedOperationException $r5;
        proguard.classfile.attribute.visitor.AttributeVisitor $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        java.lang.StringBuffer $r6;
        proguard.classfile.Method $r2;
        java.lang.Class $r7;
        java.lang.String $r8;
        proguard.classfile.attribute.Attribute r0;

        r0 := @this: proguard.classfile.attribute.Attribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.visitor.AttributeVisitor;

        if $r3 != null goto label1;

        virtualinvoke r0.<proguard.classfile.attribute.Attribute: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, $r2, $r4);

        return;

     label1:
        $r5 = new java.lang.UnsupportedOperationException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Method must be overridden in [");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] if ever called");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r5;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        java.lang.UnsupportedOperationException $r4;
        proguard.classfile.attribute.visitor.AttributeVisitor $r3;
        proguard.classfile.Clazz $r1;
        java.lang.StringBuffer $r5;
        proguard.classfile.Method $r2;
        java.lang.Class $r6;
        java.lang.String $r7;
        proguard.classfile.attribute.Attribute r0;

        r0 := @this: proguard.classfile.attribute.Attribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.visitor.AttributeVisitor;

        if $r2 != null goto label1;

        virtualinvoke r0.<proguard.classfile.attribute.Attribute: void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, null, $r3);

        return;

     label1:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Method must be overridden in [");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] if ever called");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r4;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        java.lang.UnsupportedOperationException $r3;
        proguard.classfile.Clazz $r1;
        java.lang.StringBuffer $r4;
        proguard.classfile.attribute.visitor.AttributeVisitor $r2;
        java.lang.Class $r5;
        java.lang.String $r6;
        proguard.classfile.attribute.Attribute r0;

        r0 := @this: proguard.classfile.attribute.Attribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.visitor.AttributeVisitor;

        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Method must be overridden in [");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] if ever called");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6);

        throw $r3;
    }

    public java.lang.String getAttributeName(proguard.classfile.Clazz)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        java.lang.String $r2;
        proguard.classfile.attribute.Attribute r0;

        r0 := @this: proguard.classfile.attribute.Attribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $i0 = r0.<proguard.classfile.attribute.Attribute: int u2attributeNameIndex>;

        $r2 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getString(int)>($i0);

        return $r2;
    }

    public java.lang.Object getVisitorInfo()
    {
        java.lang.Object r1;
        proguard.classfile.attribute.Attribute r0;

        r0 := @this: proguard.classfile.attribute.Attribute;

        r1 = r0.<proguard.classfile.attribute.Attribute: java.lang.Object visitorInfo>;

        return r1;
    }

    public void setVisitorInfo(java.lang.Object)
    {
        java.lang.Object $r1;
        proguard.classfile.attribute.Attribute r0;

        r0 := @this: proguard.classfile.attribute.Attribute;

        $r1 := @parameter0: java.lang.Object;

        r0.<proguard.classfile.attribute.Attribute: java.lang.Object visitorInfo> = $r1;

        return;
    }
}
