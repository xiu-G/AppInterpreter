class com.baidu.android.silentupdate.c extends java.lang.Object
{

    void <init>()
    {
        com.baidu.android.silentupdate.c r0;

        r0 := @this: com.baidu.android.silentupdate.c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void a(android.app.Application, java.lang.String)
    {
        java.lang.Throwable $r6, $r7, $r8;
        java.lang.IllegalAccessException $r11;
        java.lang.reflect.Field $r3;
        java.lang.IllegalArgumentException $r10;
        java.lang.NoSuchFieldException $r9;
        android.app.Application $r0;
        java.lang.Class $r2;
        java.lang.Object $r4;
        java.lang.ClassNotFoundException $r5;
        java.lang.String $r1;

        $r0 := @parameter0: android.app.Application;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.content.ContextWrapper");

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mBase");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r0);

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.app.ContextImpl");

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mMainThread");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mPackageInfo");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r4);

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.app.LoadedApk");

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mResDir");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        virtualinvoke $r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r4, $r1);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mResources");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        virtualinvoke $r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r4, null);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.ClassNotFoundException: void printStackTrace()>();

        return;

     label4:
        $r6 := @caughtexception;

        $r9 = (java.lang.NoSuchFieldException) $r6;

        virtualinvoke $r9.<java.lang.NoSuchFieldException: void printStackTrace()>();

        return;

     label5:
        $r7 := @caughtexception;

        $r10 = (java.lang.IllegalArgumentException) $r7;

        virtualinvoke $r10.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return;

     label6:
        $r8 := @caughtexception;

        $r11 = (java.lang.IllegalAccessException) $r8;

        virtualinvoke $r11.<java.lang.IllegalAccessException: void printStackTrace()>();

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.NoSuchFieldException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
    }
}
