final enum class org.jsoup.parser.HtmlTreeBuilderState$9 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        int $i0;
        org.jsoup.parser.HtmlTreeBuilderState$9 r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$9;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>("InTable", 8, null);

        return;
    }

    boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token $r1;
        java.lang.String[] $r5;
        org.jsoup.parser.HtmlTreeBuilderState $r6;
        org.jsoup.nodes.Element $r3;
        org.jsoup.parser.HtmlTreeBuilderState$9 r0;
        java.lang.String $r4;
        org.jsoup.parser.HtmlTreeBuilder $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$9;

        $r1 := @parameter0: org.jsoup.parser.Token;

        $r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        $r3 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $r5 = newarray (java.lang.String)[5];

        $r5[0] = "table";

        $r5[1] = "tbody";

        $r5[2] = "tfoot";

        $r5[3] = "thead";

        $r5[4] = "tr";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r5);

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void setFosterInserts(boolean)>(1);

        $r6 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>($r1, $r6);

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void setFosterInserts(boolean)>(0);

        return $z0;

     label1:
        $r6 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>($r1, $r6);

        return $z0;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.nodes.Attributes $r9;
        org.jsoup.parser.Token$StartTag $r5;
        org.jsoup.parser.Token $r1;
        java.lang.String[] $r7;
        org.jsoup.parser.Token$EndTag $r8;
        org.jsoup.parser.HtmlTreeBuilderState $r3;
        org.jsoup.nodes.Element $r10;
        org.jsoup.parser.HtmlTreeBuilderState$9 r0;
        org.jsoup.parser.Token$Comment $r4;
        java.lang.String $r6;
        org.jsoup.parser.HtmlTreeBuilder $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$9;

        $r1 := @parameter0: org.jsoup.parser.Token;

        $r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isCharacter()>();

        if $z0 == 0 goto label01;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void newPendingTableCharacters()>();

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void markInsertionMode()>();

        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InTableText>;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r3);

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        return $z0;

     label01:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isComment()>();

        if $z0 == 0 goto label02;

        $r4 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r4);

        return 1;

     label02:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isDoctype()>();

        if $z0 == 0 goto label03;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        return 0;

     label03:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isStartTag()>();

        if $z0 == 0 goto label16;

        $r5 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r6 = virtualinvoke $r5.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("caption");

        if $z0 == 0 goto label05;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableContext()>();

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void insertMarkerToFormattingElements()>();

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r5);

        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InCaption>;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r3);

     label04:
        $z0 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r1, $r2);

        return $z0;

     label05:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("colgroup");

        if $z0 == 0 goto label06;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableContext()>();

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r5);

        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InColumnGroup>;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r3);

        goto label04;

     label06:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("col");

        if $z0 == 0 goto label07;

        $r5 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r5.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("colgroup");

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r5);

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        return $z0;

     label07:
        $r7 = newarray (java.lang.String)[3];

        $r7[0] = "tbody";

        $r7[1] = "tfoot";

        $r7[2] = "thead";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r6, $r7);

        if $z0 == 0 goto label08;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableContext()>();

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r5);

        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InTableBody>;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r3);

        goto label04;

     label08:
        $r7 = newarray (java.lang.String)[3];

        $r7[0] = "td";

        $r7[1] = "th";

        $r7[2] = "tr";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r6, $r7);

        if $z0 == 0 goto label09;

        $r5 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r5.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("tbody");

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r5);

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        return $z0;

     label09:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("table");

        if $z0 == 0 goto label10;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        $r8 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r8.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("table");

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r8);

        if $z0 == 0 goto label04;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        return $z0;

     label10:
        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "style";

        $r7[1] = "script";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r6, $r7);

        if $z0 == 0 goto label11;

        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InHead>;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>($r1, $r3);

        return $z0;

     label11:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("input");

        if $z0 == 0 goto label13;

        $r9 = $r5.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;

        $r6 = virtualinvoke $r9.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("type");

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hidden");

        if $z0 != 0 goto label12;

        $z0 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r1, $r2);

        return $z0;

     label12:
        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>($r5);

        goto label04;

     label13:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("form");

        if $z0 == 0 goto label15;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        $r10 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getFormElement()>();

        if $r10 == null goto label14;

        return 0;

     label14:
        $r10 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>($r5);

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void setFormElement(org.jsoup.nodes.Element)>($r10);

        goto label04;

     label15:
        $z0 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r1, $r2);

        return $z0;

     label16:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isEndTag()>();

        if $z0 == 0 goto label20;

        $r8 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        $r6 = virtualinvoke $r8.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("table");

        if $z0 == 0 goto label18;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>($r6);

        if $z0 != 0 goto label17;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        return 0;

     label17:
        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>("table");

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void resetInsertionMode()>();

        goto label04;

     label18:
        $r7 = newarray (java.lang.String)[11];

        $r7[0] = "body";

        $r7[1] = "caption";

        $r7[2] = "col";

        $r7[3] = "colgroup";

        $r7[4] = "html";

        $r7[5] = "tbody";

        $r7[6] = "td";

        $r7[7] = "tfoot";

        $r7[8] = "th";

        $r7[9] = "thead";

        $r7[10] = "tr";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r6, $r7);

        if $z0 == 0 goto label19;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        return 0;

     label19:
        $z0 = virtualinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r1, $r2);

        return $z0;

     label20:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isEOF()>();

        if $z0 == 0 goto label04;

        $r10 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r6 = virtualinvoke $r10.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z0 == 0 goto label21;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

     label21:
        return 1;
    }
}
