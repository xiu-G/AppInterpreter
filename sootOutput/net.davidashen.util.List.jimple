public class net.davidashen.util.List extends java.lang.Object implements java.lang.Cloneable
{
    public jj a;
    public jj b;
    public int c;

    public void <init>()
    {
        net.davidashen.util.List r0;

        r0 := @this: net.davidashen.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<net.davidashen.util.List: net.davidashen.util.List clear()>();

        return;
    }

    private net.davidashen.util.List a()
    {
        java.lang.Throwable $r3;
        net.davidashen.util.List r1;
        java.lang.Object $r2;
        java.lang.RuntimeException $r0;
        java.lang.String $r4;

        r1 := @this: net.davidashen.util.List;

     label1:
        $r2 = specialinvoke r1.<java.lang.Object: java.lang.Object clone()>();

     label2:
        r1 = (net.davidashen.util.List) $r2;

     label3:
        r1 = virtualinvoke r1.<net.davidashen.util.List: net.davidashen.util.List clear()>();

     label4:
        return r1;

     label5:
        $r3 := @caughtexception;

        $r0 = new java.lang.RuntimeException;

        $r4 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r0;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label5;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label5;
    }

    public final net.davidashen.util.List append(java.lang.Object)
    {
        java.lang.Object $r1;
        net.davidashen.util.List r0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: java.lang.Object;

        r0 = virtualinvoke r0.<net.davidashen.util.List: net.davidashen.util.List snoc(java.lang.Object)>($r1);

        return r0;
    }

    public final net.davidashen.util.List append(net.davidashen.util.List)
    {
        jj $r2, $r3;
        net.davidashen.util.List r0, $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: net.davidashen.util.List;

        $z0 = virtualinvoke $r1.<net.davidashen.util.List: boolean isPair()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<net.davidashen.util.List: jj b>;

        $r2 = $r2.<jj: jj b>;

        $r3 = $r1.<net.davidashen.util.List: jj a>;

        $r3 = $r3.<jj: jj b>;

        $r2.<jj: jj b> = $r3;

        $r2 = r0.<net.davidashen.util.List: jj b>;

        $r3 = $r1.<net.davidashen.util.List: jj b>;

        $r3 = $r3.<jj: jj b>;

        $r2.<jj: jj b> = $r3;

        $i0 = r0.<net.davidashen.util.List: int c>;

        $i1 = $r1.<net.davidashen.util.List: int c>;

        $i0 = $i0 + $i1;

        r0.<net.davidashen.util.List: int c> = $i0;

     label1:
        return r0;
    }

    public final net.davidashen.util.List cDr()
    {
        jj $r3, $r4;
        net.davidashen.util.List r0, $r1;
        int $i0;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 = specialinvoke r0.<net.davidashen.util.List: net.davidashen.util.List a()>();

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("list is not a pair");

        throw $r2;

     label1:
        $r3 = $r1.<net.davidashen.util.List: jj a>;

        $r4 = r0.<net.davidashen.util.List: jj b>;

        $r4 = $r4.<jj: jj b>;

        $r3.<jj: jj b> = $r4;

        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r1.<net.davidashen.util.List: jj b> = $r3;

        $i0 = r0.<net.davidashen.util.List: int c>;

        $i0 = $i0 - 1;

        $r1.<net.davidashen.util.List: int c> = $i0;

        return $r1;
    }

    public final java.lang.Object car()
    {
        jj $r2;
        net.davidashen.util.List r0;
        java.lang.Object r3;
        java.util.NoSuchElementException $r1;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("list is not a pair");

        throw $r1;

     label1:
        $r2 = r0.<net.davidashen.util.List: jj a>;

        $r2 = $r2.<jj: jj b>;

        r3 = $r2.<jj: java.lang.Object a>;

        return r3;
    }

    public final net.davidashen.util.List cdr()
    {
        jj $r3, $r4;
        net.davidashen.util.List r0, $r1;
        int $i0;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 = specialinvoke r0.<net.davidashen.util.List: net.davidashen.util.List a()>();

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("list is not a pair");

        throw $r2;

     label1:
        $r3 = $r1.<net.davidashen.util.List: jj a>;

        $r4 = r0.<net.davidashen.util.List: jj a>;

        $r4 = $r4.<jj: jj b>;

        $r4 = $r4.<jj: jj b>;

        $r3.<jj: jj b> = $r4;

        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r1.<net.davidashen.util.List: jj b> = $r3;

        $i0 = r0.<net.davidashen.util.List: int c>;

        $i0 = $i0 - 1;

        $r1.<net.davidashen.util.List: int c> = $i0;

        return $r1;
    }

    public final net.davidashen.util.List clear()
    {
        jj $r1, $r2;
        net.davidashen.util.List r0;

        r0 := @this: net.davidashen.util.List;

        $r1 = new jj;

        specialinvoke $r1.<jj: void <init>()>();

        r0.<net.davidashen.util.List: jj a> = $r1;

        $r1 = r0.<net.davidashen.util.List: jj a>;

        $r1.<jj: jj b> = null;

        $r1 = new jj;

        specialinvoke $r1.<jj: void <init>()>();

        r0.<net.davidashen.util.List: jj b> = $r1;

        $r1 = r0.<net.davidashen.util.List: jj b>;

        $r2 = r0.<net.davidashen.util.List: jj a>;

        $r1.<jj: jj b> = $r2;

        r0.<net.davidashen.util.List: int c> = 0;

        return r0;
    }

    public java.lang.Object clone()
    {
        jj $r2, $r4;
        net.davidashen.util.List r0, $r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 = specialinvoke r0.<net.davidashen.util.List: net.davidashen.util.List a()>();

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<net.davidashen.util.List: jj a>;

        $r2 = $r2.<jj: jj b>;

     label1:
        $r3 = $r2.<jj: java.lang.Object a>;

        virtualinvoke $r1.<net.davidashen.util.List: net.davidashen.util.List snoc(java.lang.Object)>($r3);

        $r4 = r0.<net.davidashen.util.List: jj b>;

        $r4 = $r4.<jj: jj b>;

        if $r2 == $r4 goto label2;

        $r2 = $r2.<jj: jj b>;

        goto label1;

     label2:
        return $r1;
    }

    public final net.davidashen.util.List cons(java.lang.Object)
    {
        jj $r2, $r3;
        net.davidashen.util.List r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new jj;

        specialinvoke $r2.<jj: void <init>()>();

        $r3 = r0.<net.davidashen.util.List: jj a>;

        $r3.<jj: java.lang.Object a> = $r1;

        $r3 = r0.<net.davidashen.util.List: jj a>;

        $r2.<jj: jj b> = $r3;

        r0.<net.davidashen.util.List: jj a> = $r2;

        $i0 = r0.<net.davidashen.util.List: int c>;

        $i0 = $i0 + 1;

        r0.<net.davidashen.util.List: int c> = $i0;

        return r0;
    }

    public final net.davidashen.util.List cut(jk)
    {
        jj $r2, $r3;
        jk $r1;
        net.davidashen.util.List r0;
        int $i0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: jk;

        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r2 = $r1.<jk: jj a>;

        $r3.<jj: jj b> = $r2;

        $i0 = $r1.<jk: int b>;

        r0.<net.davidashen.util.List: int c> = $i0;

        return r0;
    }

    public final java.util.Enumeration elements()
    {
        net.davidashen.util.List r0;
        ji $r1;

        r0 := @this: net.davidashen.util.List;

        $r1 = new ji;

        specialinvoke $r1.<ji: void <init>(net.davidashen.util.List)>(r0);

        return $r1;
    }

    public final net.davidashen.util.List enolc()
    {
        jj $r2, $r4;
        net.davidashen.util.List r0, $r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 = specialinvoke r0.<net.davidashen.util.List: net.davidashen.util.List a()>();

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<net.davidashen.util.List: jj a>;

        $r2 = $r2.<jj: jj b>;

     label1:
        $r3 = $r2.<jj: java.lang.Object a>;

        virtualinvoke $r1.<net.davidashen.util.List: net.davidashen.util.List cons(java.lang.Object)>($r3);

        $r4 = r0.<net.davidashen.util.List: jj b>;

        $r4 = $r4.<jj: jj b>;

        if $r2 == $r4 goto label2;

        $r2 = $r2.<jj: jj b>;

        goto label1;

     label2:
        return $r1;
    }

    public final void foreach(jg)
    {
        java.util.Enumeration $r2;
        net.davidashen.util.List r0;
        jg $r1;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: jg;

        $r2 = virtualinvoke r0.<net.davidashen.util.List: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        goto label1;
    }

    public final net.davidashen.util.List hcut(jk)
    {
        jj $r2, $r3;
        jk $r1;
        net.davidashen.util.List r0;
        int $i0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: jk;

        $r2 = r0.<net.davidashen.util.List: jj b>;

        $r3 = $r1.<jk: jj a>;

        $r2.<jj: jj b> = $r3;

        r0.<net.davidashen.util.List: int c> = 0;

        $r2 = r0.<net.davidashen.util.List: jj a>;

        $r2 = $r2.<jj: jj b>;

     label1:
        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r3 = $r3.<jj: jj b>;

        $r3 = $r3.<jj: jj b>;

        if $r2 != $r3 goto label2;

        return r0;

     label2:
        $i0 = r0.<net.davidashen.util.List: int c>;

        $i0 = $i0 + 1;

        r0.<net.davidashen.util.List: int c> = $i0;

        $r2 = $r2.<jj: jj b>;

        goto label1;
    }

    public final net.davidashen.util.List insert(jj, net.davidashen.util.List)
    {
        jj $r1, $r3, $r4;
        net.davidashen.util.List r0, $r2;
        int $i0, $i1;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: jj;

        $r2 := @parameter1: net.davidashen.util.List;

        $r3 = $r1.<jj: jj b>;

        $r4 = $r2.<net.davidashen.util.List: jj b>;

        $r4 = $r4.<jj: jj b>;

        $r4.<jj: jj b> = $r3;

        $r3 = $r2.<net.davidashen.util.List: jj a>;

        $r3 = $r3.<jj: jj b>;

        $r1.<jj: jj b> = $r3;

        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r3 = $r3.<jj: jj b>;

        if $r3 != $r1 goto label1;

        $r1 = r0.<net.davidashen.util.List: jj b>;

        $r3 = $r2.<net.davidashen.util.List: jj b>;

        $r3 = $r3.<jj: jj b>;

        $r1.<jj: jj b> = $r3;

     label1:
        $i0 = r0.<net.davidashen.util.List: int c>;

        $i1 = $r2.<net.davidashen.util.List: int c>;

        $i0 = $i0 + $i1;

        r0.<net.davidashen.util.List: int c> = $i0;

        return r0;
    }

    public final net.davidashen.util.List insert(jk, java.lang.Object)
    {
        jj $r3, $r4, $r5;
        jk $r1;
        net.davidashen.util.List r0;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: jk;

        $r2 := @parameter1: java.lang.Object;

        $r4 = new jj;

        specialinvoke $r4.<jj: void <init>()>();

        $r3 = $r1.<jk: jj a>;

        $r3 = $r3.<jj: jj b>;

        $r4.<jj: jj b> = $r3;

        $r4.<jj: java.lang.Object a> = $r2;

        $r3 = $r1.<jk: jj a>;

        $r3.<jj: jj b> = $r4;

        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r5 = $r3.<jj: jj b>;

        $r3 = $r1.<jk: jj a>;

        if $r5 != $r3 goto label1;

        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r3.<jj: jj b> = $r4;

     label1:
        $i0 = r0.<net.davidashen.util.List: int c>;

        $i0 = $i0 + 1;

        r0.<net.davidashen.util.List: int c> = $i0;

        return r0;
    }

    public final boolean isEmpty()
    {
        net.davidashen.util.List r0;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isPair()
    {
        jj $r1, $r2;
        net.davidashen.util.List r0;

        r0 := @this: net.davidashen.util.List;

        $r1 = r0.<net.davidashen.util.List: jj a>;

        $r1 = $r1.<jj: jj b>;

        $r2 = r0.<net.davidashen.util.List: jj b>;

        $r2 = $r2.<jj: jj b>;

        $r2 = $r2.<jj: jj b>;

        if $r1 == $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.lang.Object last()
    {
        jj $r2;
        net.davidashen.util.List r0;
        java.lang.Object r3;
        java.util.NoSuchElementException $r1;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("list is not a pair");

        throw $r1;

     label1:
        $r2 = r0.<net.davidashen.util.List: jj b>;

        $r2 = $r2.<jj: jj b>;

        r3 = $r2.<jj: java.lang.Object a>;

        return r3;
    }

    public final int length()
    {
        int i0;
        net.davidashen.util.List r0;

        r0 := @this: net.davidashen.util.List;

        i0 = r0.<net.davidashen.util.List: int c>;

        return i0;
    }

    public final net.davidashen.util.List map(net.davidashen.util.List, jg)
    {
        java.util.Enumeration $r3;
        net.davidashen.util.List r0, $r1;
        java.lang.Object $r4;
        jg $r2;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: net.davidashen.util.List;

        $r2 := @parameter1: jg;

        $r3 = virtualinvoke r0.<net.davidashen.util.List: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label2;

        return $r1;

     label2:
        interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = interfaceinvoke $r2.<jg: java.lang.Object a()>();

        virtualinvoke $r1.<net.davidashen.util.List: net.davidashen.util.List append(java.lang.Object)>($r4);

        goto label1;
    }

    public final jk mark()
    {
        jk $r1;
        net.davidashen.util.List r0;

        r0 := @this: net.davidashen.util.List;

        $r1 = new jk;

        specialinvoke $r1.<jk: void <init>(net.davidashen.util.List)>(r0);

        return $r1;
    }

    public final net.davidashen.util.List prepend(net.davidashen.util.List)
    {
        jj $r2, $r3;
        net.davidashen.util.List r0, $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: net.davidashen.util.List;

        $z0 = virtualinvoke $r1.<net.davidashen.util.List: boolean isPair()>();

        if $z0 == 0 goto label1;

        $r2 = $r1.<net.davidashen.util.List: jj b>;

        $r2 = $r2.<jj: jj b>;

        $r3 = r0.<net.davidashen.util.List: jj a>;

        $r3 = $r3.<jj: jj b>;

        $r2.<jj: jj b> = $r3;

        $r2 = r0.<net.davidashen.util.List: jj a>;

        $r3 = $r1.<net.davidashen.util.List: jj a>;

        $r3 = $r3.<jj: jj b>;

        $r2.<jj: jj b> = $r3;

        $i0 = r0.<net.davidashen.util.List: int c>;

        $i1 = $r1.<net.davidashen.util.List: int c>;

        $i0 = $i0 + $i1;

        r0.<net.davidashen.util.List: int c> = $i0;

     label1:
        return r0;
    }

    public final net.davidashen.util.List reverse()
    {
        int $i0;
        net.davidashen.util.List r0;

        r0 := @this: net.davidashen.util.List;

        $i0 = r0.<net.davidashen.util.List: int c>;

        if $i0 <= 1 goto label1;

        r0 = virtualinvoke r0.<net.davidashen.util.List: net.davidashen.util.List enolc()>();

     label1:
        return r0;
    }

    public final net.davidashen.util.List setCar(java.lang.Object)
    {
        jj $r3;
        net.davidashen.util.List r0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("list is not a pair");

        throw $r2;

     label1:
        $r3 = r0.<net.davidashen.util.List: jj a>;

        $r3 = $r3.<jj: jj b>;

        $r3.<jj: java.lang.Object a> = $r1;

        return r0;
    }

    public final net.davidashen.util.List setCdr(net.davidashen.util.List)
    {
        jj $r3, $r4;
        net.davidashen.util.List r0, $r1;
        int $i0;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: net.davidashen.util.List;

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("list is not a pair");

        throw $r2;

     label1:
        $r3 = r0.<net.davidashen.util.List: jj a>;

        $r3 = $r3.<jj: jj b>;

        $r4 = $r1.<net.davidashen.util.List: jj a>;

        $r4 = $r4.<jj: jj b>;

        $r3.<jj: jj b> = $r4;

        $i0 = $r1.<net.davidashen.util.List: int c>;

        $i0 = $i0 + 1;

        r0.<net.davidashen.util.List: int c> = $i0;

        return r0;
    }

    public final net.davidashen.util.List setLast(java.lang.Object)
    {
        jj $r3;
        net.davidashen.util.List r0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("list is not a pair");

        throw $r2;

     label1:
        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r3 = $r3.<jj: jj b>;

        $r3.<jj: java.lang.Object a> = $r1;

        return r0;
    }

    public final java.lang.Object shift()
    {
        jj $r2;
        net.davidashen.util.List r0;
        int $i0;
        java.lang.Object r3;
        java.util.NoSuchElementException $r1;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("list is not a pair");

        throw $r1;

     label1:
        $r2 = r0.<net.davidashen.util.List: jj a>;

        $r2 = $r2.<jj: jj b>;

        r0.<net.davidashen.util.List: jj a> = $r2;

        $i0 = r0.<net.davidashen.util.List: int c>;

        $i0 = $i0 - 1;

        r0.<net.davidashen.util.List: int c> = $i0;

        $r2 = r0.<net.davidashen.util.List: jj a>;

        r3 = $r2.<jj: java.lang.Object a>;

        return r3;
    }

    public final net.davidashen.util.List snoc(java.lang.Object)
    {
        jj $r2, $r3;
        net.davidashen.util.List r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new jj;

        specialinvoke $r2.<jj: void <init>()>();

        $r2.<jj: java.lang.Object a> = $r1;

        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r3 = $r3.<jj: jj b>;

        $r3 = $r3.<jj: jj b>;

        $r2.<jj: jj b> = $r3;

        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r3 = $r3.<jj: jj b>;

        $r3.<jj: jj b> = $r2;

        $r3 = r0.<net.davidashen.util.List: jj b>;

        $r3.<jj: jj b> = $r2;

        $i0 = r0.<net.davidashen.util.List: int c>;

        $i0 = $i0 + 1;

        r0.<net.davidashen.util.List: int c> = $i0;

        return r0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r4;
        net.davidashen.util.List r0, $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: net.davidashen.util.List;

        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke r0.<net.davidashen.util.List: net.davidashen.util.List cdr()>();

        $r2 = virtualinvoke r0.<net.davidashen.util.List: java.lang.Object car()>();

        r0 = $r1;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label1:
        $z0 = virtualinvoke r0.<net.davidashen.util.List: boolean isPair()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<net.davidashen.util.List: net.davidashen.util.List cdr()>();

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r2 = virtualinvoke r0.<net.davidashen.util.List: java.lang.Object car()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        r0 = $r1;

        goto label1;

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label3:
        return "()";
    }

    public final net.davidashen.util.List unshift(java.lang.Object)
    {
        java.lang.Object $r1;
        net.davidashen.util.List r0;

        r0 := @this: net.davidashen.util.List;

        $r1 := @parameter0: java.lang.Object;

        r0 = virtualinvoke r0.<net.davidashen.util.List: net.davidashen.util.List cons(java.lang.Object)>($r1);

        return r0;
    }
}
