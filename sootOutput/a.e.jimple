public final class a.e extends java.lang.Object
{
    public static final java.util.concurrent.ExecutorService a;
    public static final java.util.concurrent.Executor b;
    private static final java.util.concurrent.Executor c;
    private final java.lang.Object d;
    private boolean e;
    private boolean f;
    private java.lang.Object g;
    private java.lang.Exception h;
    private java.util.List i;

    static void <clinit>()
    {
        a.n $r2;
        java.util.concurrent.ExecutorService $r0;
        a.l $r1;

        $r0 = staticinvoke <a.d: java.util.concurrent.ExecutorService a()>();

        <a.e: java.util.concurrent.ExecutorService a> = $r0;

        $r1 = new a.l;

        specialinvoke $r1.<a.l: void <init>(byte)>(0);

        <a.e: java.util.concurrent.Executor c> = $r1;

        $r2 = new a.n;

        specialinvoke $r2.<a.n: void <init>(byte)>(0);

        <a.e: java.util.concurrent.Executor b> = $r2;

        return;
    }

    private void <init>()
    {
        a.e r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this: a.e;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<a.e: java.lang.Object d> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<a.e: java.util.List i> = $r2;

        return;
    }

    private a.e a(a.c, java.util.concurrent.Executor)
    {
        java.lang.Throwable $r7;
        a.m $r6;
        java.util.concurrent.Executor $r2;
        java.util.List $r4;
        a.c $r1;
        a.e r0;
        java.lang.Object $r3;
        a.h $r5;
        boolean $z0;

        r0 := @this: a.e;

        $r1 := @parameter0: a.c;

        $r2 := @parameter1: java.util.concurrent.Executor;

        $r6 = staticinvoke <a.e: a.m a()>();

        $r3 = r0.<a.e: java.lang.Object d>;

        entermonitor $r3;

     label1:
        $z0 = specialinvoke r0.<a.e: boolean g()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<a.e: java.util.List i>;

        $r5 = new a.h;

        specialinvoke $r5.<a.h: void <init>(a.e,a.m,a.c,java.util.concurrent.Executor)>(r0, $r6, $r1, $r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        exitmonitor $r3;

     label3:
        if $z0 == 0 goto label4;

        staticinvoke <a.e: void c(a.m,a.c,a.e,java.util.concurrent.Executor)>($r6, $r1, r0, $r2);

     label4:
        r0 = $r6.<a.m: a.e a>;

        return r0;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor $r3;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static a.e a(java.lang.Exception)
    {
        a.m $r1;
        a.e r2;
        java.lang.Exception $r0;

        $r0 := @parameter0: java.lang.Exception;

        $r1 = staticinvoke <a.e: a.m a()>();

        virtualinvoke $r1.<a.m: void a(java.lang.Exception)>($r0);

        r2 = $r1.<a.m: a.e a>;

        return r2;
    }

    public static a.e a(java.lang.Object)
    {
        a.m $r1;
        a.e r2;
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <a.e: a.m a()>();

        virtualinvoke $r1.<a.m: void a(java.lang.Object)>($r0);

        r2 = $r1.<a.m: a.e a>;

        return r2;
    }

    public static a.m a()
    {
        a.e $r0;
        a.m $r1;

        $r0 = new a.e;

        specialinvoke $r0.<a.e: void <init>()>();

        $r1 = new a.m;

        virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r1.<a.m: void <init>(a.e,byte)>($r0, 0);

        return $r1;
    }

    static java.lang.Exception a(a.e, java.lang.Exception)
    {
        a.e $r0;
        java.lang.Exception $r1;

        $r0 := @parameter0: a.e;

        $r1 := @parameter1: java.lang.Exception;

        $r0.<a.e: java.lang.Exception h> = $r1;

        return $r1;
    }

    static java.lang.Object a(a.e)
    {
        a.e $r0;
        java.lang.Object r1;

        $r0 := @parameter0: a.e;

        r1 = $r0.<a.e: java.lang.Object d>;

        return r1;
    }

    static java.lang.Object a(a.e, java.lang.Object)
    {
        a.e $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: a.e;

        $r1 := @parameter1: java.lang.Object;

        $r0.<a.e: java.lang.Object g> = $r1;

        return $r1;
    }

    static void a(a.m, a.c, a.e, java.util.concurrent.Executor)
    {
        a.m $r0;
        java.util.concurrent.Executor $r3;
        a.c $r1;
        a.e $r2;

        $r0 := @parameter0: a.m;

        $r1 := @parameter1: a.c;

        $r2 := @parameter2: a.e;

        $r3 := @parameter3: java.util.concurrent.Executor;

        staticinvoke <a.e: void c(a.m,a.c,a.e,java.util.concurrent.Executor)>($r0, $r1, $r2, $r3);

        return;
    }

    static boolean a(a.e, boolean)
    {
        a.e $r0;
        boolean $z0;

        $r0 := @parameter0: a.e;

        $z0 := @parameter1: boolean;

        $r0.<a.e: boolean e> = 1;

        return 1;
    }

    private a.e b(a.c, java.util.concurrent.Executor)
    {
        java.lang.Throwable $r7;
        a.m $r6;
        java.util.concurrent.Executor $r2;
        java.util.List $r4;
        a.c $r1;
        a.e r0;
        java.lang.Object $r3;
        a.i $r5;
        boolean $z0;

        r0 := @this: a.e;

        $r1 := @parameter0: a.c;

        $r2 := @parameter1: java.util.concurrent.Executor;

        $r6 = staticinvoke <a.e: a.m a()>();

        $r3 = r0.<a.e: java.lang.Object d>;

        entermonitor $r3;

     label1:
        $z0 = specialinvoke r0.<a.e: boolean g()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<a.e: java.util.List i>;

        $r5 = new a.i;

        specialinvoke $r5.<a.i: void <init>(a.e,a.m,a.c,java.util.concurrent.Executor)>(r0, $r6, $r1, $r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        exitmonitor $r3;

     label3:
        if $z0 == 0 goto label4;

        staticinvoke <a.e: void d(a.m,a.c,a.e,java.util.concurrent.Executor)>($r6, $r1, r0, $r2);

     label4:
        r0 = $r6.<a.m: a.e a>;

        return r0;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor $r3;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    static void b(a.m, a.c, a.e, java.util.concurrent.Executor)
    {
        a.m $r0;
        java.util.concurrent.Executor $r3;
        a.c $r1;
        a.e $r2;

        $r0 := @parameter0: a.m;

        $r1 := @parameter1: a.c;

        $r2 := @parameter2: a.e;

        $r3 := @parameter3: java.util.concurrent.Executor;

        staticinvoke <a.e: void d(a.m,a.c,a.e,java.util.concurrent.Executor)>($r0, $r1, $r2, $r3);

        return;
    }

    static boolean b(a.e)
    {
        a.e $r0;
        boolean z0;

        $r0 := @parameter0: a.e;

        z0 = $r0.<a.e: boolean e>;

        return z0;
    }

    static boolean b(a.e, boolean)
    {
        a.e $r0;
        boolean $z0;

        $r0 := @parameter0: a.e;

        $z0 := @parameter1: boolean;

        $r0.<a.e: boolean f> = 1;

        return 1;
    }

    static void c(a.e)
    {
        java.lang.Throwable $r7;
        java.util.Iterator $r3;
        java.lang.RuntimeException $r6;
        java.lang.Exception $r8;
        java.util.List $r2;
        a.c $r5;
        a.e $r0;
        java.lang.Object $r1, $r4;
        boolean $z0;

        $r0 := @parameter0: a.e;

        $r1 = $r0.<a.e: java.lang.Object d>;

        entermonitor $r1;

     label01:
        $r2 = $r0.<a.e: java.util.List i>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (a.c) $r4;

     label03:
        interfaceinvoke $r5.<a.c: java.lang.Object then(a.e)>($r0);

     label04:
        goto label02;

     label05:
        $r6 := @caughtexception;

     label06:
        throw $r6;

     label07:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label08:
        throw $r7;

     label09:
        $r8 := @caughtexception;

     label10:
        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r6;

     label11:
        $r0.<a.e: java.util.List i> = null;

        exitmonitor $r1;

     label12:
        return;

        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.lang.RuntimeException from label03 to label04 with label05;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label06 to label08 with label07;
        catch java.lang.Throwable from label10 to label12 with label07;
    }

    private static void c(a.m, a.c, a.e, java.util.concurrent.Executor)
    {
        a.m $r0;
        java.util.concurrent.Executor $r3;
        a.c $r1;
        a.e $r2;
        a.k $r4;

        $r0 := @parameter0: a.m;

        $r1 := @parameter1: a.c;

        $r2 := @parameter2: a.e;

        $r3 := @parameter3: java.util.concurrent.Executor;

        $r4 = new a.k;

        specialinvoke $r4.<a.k: void <init>(a.c,a.e,a.m)>($r1, $r2, $r0);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    private static void d(a.m, a.c, a.e, java.util.concurrent.Executor)
    {
        a.m $r0;
        java.util.concurrent.Executor $r3;
        a.c $r1;
        a.f $r4;
        a.e $r2;

        $r0 := @parameter0: a.m;

        $r1 := @parameter1: a.c;

        $r2 := @parameter2: a.e;

        $r3 := @parameter3: java.util.concurrent.Executor;

        $r4 = new a.f;

        specialinvoke $r4.<a.f: void <init>(a.c,a.e,a.m)>($r1, $r2, $r0);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    public static a.e f()
    {
        a.m $r0;
        a.e r1;

        $r0 = staticinvoke <a.e: a.m a()>();

        virtualinvoke $r0.<a.m: void b()>();

        r1 = $r0.<a.m: a.e a>;

        return r1;
    }

    private boolean g()
    {
        java.lang.Throwable $r2;
        a.e r0;
        java.lang.Object $r1;
        boolean z0;

        r0 := @this: a.e;

        $r1 = r0.<a.e: java.lang.Object d>;

        entermonitor $r1;

     label1:
        z0 = r0.<a.e: boolean e>;

        exitmonitor $r1;

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final a.e a(a.c)
    {
        a.e r0;
        java.util.concurrent.Executor $r2;
        a.c $r1;

        r0 := @this: a.e;

        $r1 := @parameter0: a.c;

        $r2 = <a.e: java.util.concurrent.Executor c>;

        r0 = specialinvoke r0.<a.e: a.e a(a.c,java.util.concurrent.Executor)>($r1, $r2);

        return r0;
    }

    public final a.e b(a.c)
    {
        java.util.concurrent.Executor $r3;
        a.c $r1;
        a.e r0;
        a.j $r2;

        r0 := @this: a.e;

        $r1 := @parameter0: a.c;

        $r3 = <a.e: java.util.concurrent.Executor c>;

        $r2 = new a.j;

        specialinvoke $r2.<a.j: void <init>(a.e,a.c)>(r0, $r1);

        r0 = specialinvoke r0.<a.e: a.e b(a.c,java.util.concurrent.Executor)>($r2, $r3);

        return r0;
    }

    public final boolean b()
    {
        java.lang.Throwable $r2;
        a.e r0;
        java.lang.Object $r1;
        boolean z0;

        r0 := @this: a.e;

        $r1 = r0.<a.e: java.lang.Object d>;

        entermonitor $r1;

     label1:
        z0 = r0.<a.e: boolean f>;

        exitmonitor $r1;

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final boolean c()
    {
        java.lang.Throwable $r3;
        a.e r0;
        java.lang.Object $r1;
        java.lang.Exception $r2;
        boolean $z0;

        r0 := @this: a.e;

        $r1 = r0.<a.e: java.lang.Object d>;

        entermonitor $r1;

     label1:
        $r2 = r0.<a.e: java.lang.Exception h>;

        if $r2 == null goto label4;

        $z0 = 1;

     label2:
        exitmonitor $r1;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public final java.lang.Object d()
    {
        java.lang.Throwable $r2;
        a.e r0;
        java.lang.Object $r1, r3;

        r0 := @this: a.e;

        $r1 = r0.<a.e: java.lang.Object d>;

        entermonitor $r1;

     label1:
        r3 = r0.<a.e: java.lang.Object g>;

        exitmonitor $r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final java.lang.Exception e()
    {
        java.lang.Throwable $r2;
        a.e r0;
        java.lang.Object $r1;
        java.lang.Exception r3;

        r0 := @this: a.e;

        $r1 = r0.<a.e: java.lang.Object d>;

        entermonitor $r1;

     label1:
        r3 = r0.<a.e: java.lang.Exception h>;

        exitmonitor $r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
