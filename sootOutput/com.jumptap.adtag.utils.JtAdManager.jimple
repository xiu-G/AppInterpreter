public class com.jumptap.adtag.utils.JtAdManager extends java.lang.Object
{
    private static final java.lang.String CONNECTION_TYPE_EDGE;
    private static final java.lang.String CONNECTION_TYPE_WIFI;
    private static final java.lang.String CONNECTION_TYPE__3G;
    public static final java.lang.String JT_AD;
    public static final java.lang.String JT_NAMRSPACE;
    private static final int NETWORK_TYPE_CDMA;
    private static final int NETWORK_TYPE_EVDO_0;
    private static final int NETWORK_TYPE_EVDO_A;
    private static final int NETWORK_TYPE_HSDPA;
    private static final int NETWORK_TYPE_HSPA;
    private static final int NETWORK_TYPE_HSUPA;
    private static final int NETWORK_TYPE_IDEN;
    private static final int NETWORK_TYPE_RRT;
    private static final java.lang.String PREF_NAME;
    private static java.lang.String procVersionStr;
    private boolean testMode;

    static void <clinit>()
    {
        <com.jumptap.adtag.utils.JtAdManager: java.lang.String PREF_NAME> = "jtPref";

        <com.jumptap.adtag.utils.JtAdManager: int NETWORK_TYPE_RRT> = 7;

        <com.jumptap.adtag.utils.JtAdManager: int NETWORK_TYPE_IDEN> = 11;

        <com.jumptap.adtag.utils.JtAdManager: int NETWORK_TYPE_HSUPA> = 9;

        <com.jumptap.adtag.utils.JtAdManager: int NETWORK_TYPE_HSPA> = 10;

        <com.jumptap.adtag.utils.JtAdManager: int NETWORK_TYPE_HSDPA> = 8;

        <com.jumptap.adtag.utils.JtAdManager: int NETWORK_TYPE_EVDO_A> = 6;

        <com.jumptap.adtag.utils.JtAdManager: int NETWORK_TYPE_EVDO_0> = 5;

        <com.jumptap.adtag.utils.JtAdManager: int NETWORK_TYPE_CDMA> = 4;

        <com.jumptap.adtag.utils.JtAdManager: java.lang.String JT_NAMRSPACE> = "http://www.jumptap.com/lib/android";

        <com.jumptap.adtag.utils.JtAdManager: java.lang.String JT_AD> = "JtAd";

        <com.jumptap.adtag.utils.JtAdManager: java.lang.String CONNECTION_TYPE__3G> = "3g";

        <com.jumptap.adtag.utils.JtAdManager: java.lang.String CONNECTION_TYPE_WIFI> = "wifi";

        <com.jumptap.adtag.utils.JtAdManager: java.lang.String CONNECTION_TYPE_EDGE> = "edge";

        <com.jumptap.adtag.utils.JtAdManager: java.lang.String procVersionStr> = null;

        return;
    }

    private void <init>()
    {
        com.jumptap.adtag.utils.JtAdManager r0;

        r0 := @this: com.jumptap.adtag.utils.JtAdManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jumptap.adtag.utils.JtAdManager: boolean testMode> = 0;

        return;
    }

    public static java.lang.String getAndroidModel()
    {
        java.lang.String r0;

        r0 = <android.os.Build: java.lang.String DEVICE>;

        return r0;
    }

    public static java.lang.String getBrand()
    {
        java.lang.String r0;

        r0 = <android.os.Build: java.lang.String BRAND>;

        return r0;
    }

    public static java.lang.String getConnectionType(android.content.Context)
    {
        android.net.ConnectivityManager $r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.String r1, $r5;

        $r0 := @parameter0: android.content.Context;

        r1 = "";

        $r2 = staticinvoke <com.jumptap.adtag.utils.JtAdManager: android.net.ConnectivityManager getConnectivityManager(android.content.Context)>($r0);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getType()>();

        $i1 = virtualinvoke $r3.<android.net.NetworkInfo: int getSubtype()>();

        if $i0 != 1 goto label2;

        r1 = "wifi";

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connectionType=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("JtAd", $r5);

        return r1;

     label2:
        if $i0 != 0 goto label1;

        r1 = staticinvoke <com.jumptap.adtag.utils.JtAdManager: java.lang.String getConnectionTypeByNetSubtype(int)>($i1);

        goto label1;
    }

    private static java.lang.String getConnectionTypeByNetSubtype(int)
    {
        int $i0;
        java.lang.String r0;

        $i0 := @parameter0: int;

        r0 = "";

        if $i0 == 3 goto label1;

        if $i0 == 7 goto label1;

        if $i0 == 8 goto label1;

        if $i0 == 10 goto label1;

        if $i0 == 9 goto label1;

        if $i0 == 5 goto label1;

        if $i0 != 6 goto label2;

     label1:
        r0 = "3g";

     label2:
        if $i0 == 1 goto label3;

        if $i0 == 2 goto label3;

        if $i0 == 4 goto label3;

        if $i0 != 11 goto label4;

     label3:
        return "edge";

     label4:
        return r0;
    }

    private static android.net.ConnectivityManager getConnectivityManager(android.content.Context)
    {
        java.lang.Throwable r1;
        android.net.ConnectivityManager $r3;
        android.content.Context $r0;
        int $i0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r6;
        java.lang.SecurityException $r7;
        java.lang.String $r5;

        $r0 := @parameter0: android.content.Context;

        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.ACCESS_NETWORK_STATE");

        if $i0 != 0 goto label4;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

     label2:
        $r3 = (android.net.ConnectivityManager) $r2;

        return $r3;

     label3:
        r1 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JtAdManager.getConnectivityManager: ");

        $r7 = (java.lang.SecurityException) r1;

        $r5 = virtualinvoke $r7.<java.lang.SecurityException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("JtAd", $r5);

        return null;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("JtAd", "JtAdManager: Requires ACCESS_NETWORK_STATE permission");

        return null;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public static java.lang.String getHID(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r2;
        android.telephony.TelephonyManager $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.jumptap.adtag.utils.JtAdManager: android.telephony.TelephonyManager getTelephonyManager(android.content.Context)>($r0);

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        return $r2;

     label1:
        return "";
    }

    public static java.lang.String getIPAddress()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.jumptap.adtag.utils.JtAdManager: java.lang.String getLocalIpAddress()>();

        return $r0;
    }

    public static java.lang.String getKernelVersion()
    {
        java.lang.Throwable r0, $r7;
        java.util.regex.Matcher $r5;
        int $i0;
        java.lang.StringBuilder $r6;
        java.io.BufferedReader r1;
        java.lang.String $r2;
        java.io.FileReader $r3;
        java.util.regex.Pattern $r4;
        boolean $z0;

        $r2 = <com.jumptap.adtag.utils.JtAdManager: java.lang.String procVersionStr>;

        if $r2 != null goto label17;

        r1 = new java.io.BufferedReader;

        $r3 = new java.io.FileReader;

     label01:
        specialinvoke $r3.<java.io.FileReader: void <init>(java.lang.String)>("/proc/version");

        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r3, 256);

     label02:
        $r2 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\w+\\s+\\w+\\s+([^\\s]+)\\s+\\(([^\\s@]+(?:@[^\\s.]+)?)[^)]*\\)\\s+\\([^)]+\\)\\s+([^\\s]+)\\s+(?:PREEMPT\\s+)?(.+)");

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

     label04:
        if $z0 != 0 goto label10;

        $r6 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Regex did not match on /proc/version: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("JtAd", $r2);

     label06:
        return "Unavailable";

     label07:
        $r7 := @caughtexception;

     label08:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

        throw $r7;

     label09:
        r0 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("JtAd", "IO Exception when getting kernel version for Device Info screen", r0);

        return "Unavailable";

     label10:
        $i0 = virtualinvoke $r5.<java.util.regex.Matcher: int groupCount()>();

     label11:
        if $i0 >= 4 goto label14;

        $r6 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Regex match on /proc/version only returned ");

        $i0 = virtualinvoke $r5.<java.util.regex.Matcher: int groupCount()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" groups");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("JtAd", $r2);

     label13:
        return "Unavailable";

     label14:
        $r6 = new java.lang.StringBuilder;

     label15:
        $r2 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        <com.jumptap.adtag.utils.JtAdManager: java.lang.String procVersionStr> = $r2;

        $r2 = <com.jumptap.adtag.utils.JtAdManager: java.lang.String procVersionStr>;

        return $r2;

     label17:
        $r2 = <com.jumptap.adtag.utils.JtAdManager: java.lang.String procVersionStr>;

        return $r2;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.io.IOException from label08 to label09 with label09;
        catch java.io.IOException from label10 to label11 with label09;
        catch java.io.IOException from label12 to label13 with label09;
        catch java.io.IOException from label15 to label16 with label09;
    }

    private static java.lang.String getLocalIpAddress()
    {
        java.lang.Throwable r0;
        java.util.Enumeration $r1, $r4;
        java.net.NetworkInterface r3;
        java.net.InetAddress r5;
        java.net.SocketException $r9;
        java.lang.Object $r2;
        java.lang.StringBuilder $r7, $r8;
        java.lang.String $r6;
        boolean $z0;

     label01:
        $r1 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();

     label02:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

     label03:
        if $z0 == 0 goto label16;

     label04:
        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

     label05:
        r3 = (java.net.NetworkInterface) $r2;

     label06:
        $r4 = virtualinvoke r3.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>();

     label07:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

     label08:
        if $z0 == 0 goto label02;

     label09:
        $r2 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

     label10:
        r5 = (java.net.InetAddress) $r2;

     label11:
        $z0 = virtualinvoke r5.<java.net.InetAddress: boolean isLoopbackAddress()>();

     label12:
        if $z0 != 0 goto label07;

     label13:
        $r6 = virtualinvoke r5.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toString()>();

     label14:
        return $r6;

     label15:
        r0 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JtAdManager.getLocalIpAddress:");

        $r9 = (java.net.SocketException) r0;

        $r6 = virtualinvoke $r9.<java.net.SocketException: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("JtAd", $r6);

     label16:
        return null;

        catch java.net.SocketException from label01 to label03 with label15;
        catch java.net.SocketException from label04 to label05 with label15;
        catch java.net.SocketException from label06 to label08 with label15;
        catch java.net.SocketException from label09 to label10 with label15;
        catch java.net.SocketException from label11 to label12 with label15;
        catch java.net.SocketException from label13 to label14 with label15;
    }

    public static java.lang.String getLocation(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4;
        android.location.Location $r1;
        double $d0;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <com.jumptap.adtag.utils.JtLocation: void init(android.content.Context)>($r0);

        $r1 = staticinvoke <com.jumptap.adtag.utils.JtLocation: android.location.Location getCurrentLocation()>();

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%2C");

        $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" llatitude/longitude=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("JtAd", $r4);

        return $r3;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("JtAd", "   currentLocation is NULL");

        return null;
    }

    public static java.lang.String getManufacturer()
    {
        return "";
    }

    public static java.lang.String getNetworkType(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        android.telephony.TelephonyManager $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.jumptap.adtag.utils.JtAdManager: android.telephony.TelephonyManager getTelephonyManager(android.content.Context)>($r0);

        if $r1 == null goto label5;

        $i0 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getNetworkType()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        return "";

     label2:
        return "GPRS";

     label3:
        return "EDGE";

     label4:
        return "UMTS";

     label5:
        return "";
    }

    public static java.lang.String getOperatorName(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r2;
        android.telephony.TelephonyManager $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.jumptap.adtag.utils.JtAdManager: android.telephony.TelephonyManager getTelephonyManager(android.content.Context)>($r0);

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>();

        return $r2;

     label1:
        return "";
    }

    public static java.lang.String getPhoneType(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        android.telephony.TelephonyManager $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.jumptap.adtag.utils.JtAdManager: android.telephony.TelephonyManager getTelephonyManager(android.content.Context)>($r0);

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getPhoneType()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        return "";

     label2:
        return "GSM";

     label3:
        return "";
    }

    public static java.lang.String getPreferences(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r3;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("jtPref", 0);

        $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("installDate", null);

        return $r1;
    }

    public static java.lang.String getSDKVersion()
    {
        java.lang.String r0;

        r0 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        return r0;
    }

    public static java.lang.String getSubscriberId(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r2;
        android.telephony.TelephonyManager $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.jumptap.adtag.utils.JtAdManager: android.telephony.TelephonyManager getTelephonyManager(android.content.Context)>($r0);

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>();

        return $r2;

     label1:
        return "";
    }

    private static android.telephony.TelephonyManager getTelephonyManager(android.content.Context)
    {
        java.lang.Throwable r1;
        android.content.Context $r0;
        android.telephony.TelephonyManager $r3;
        int $i0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r6;
        java.lang.SecurityException $r7;
        java.lang.String $r5;

        $r0 := @parameter0: android.content.Context;

        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $i0 != 0 goto label4;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

     label2:
        $r3 = (android.telephony.TelephonyManager) $r2;

        return $r3;

     label3:
        r1 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JtAdManager.getTelephonyManager: ");

        $r7 = (java.lang.SecurityException) r1;

        $r5 = virtualinvoke $r7.<java.lang.SecurityException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("JtAd", $r5);

        return null;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("JtAd", "JtAdManager: Requires READ_PHONE_STATE permission");

        return null;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public static void removePreferences(android.content.Context, java.lang.String)
    {
        android.content.SharedPreferences$Editor $r3;
        android.content.Context $r0;
        android.content.SharedPreferences $r2;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("jtPref", 0);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("installDate");

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static void savePreferences(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.SharedPreferences$Editor $r4;
        android.content.Context $r0;
        android.content.SharedPreferences $r3;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("jtPref", 0);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("isFirstLaunch", $r2);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public boolean isTestMode()
    {
        com.jumptap.adtag.utils.JtAdManager r0;
        boolean z0;

        r0 := @this: com.jumptap.adtag.utils.JtAdManager;

        z0 = r0.<com.jumptap.adtag.utils.JtAdManager: boolean testMode>;

        return z0;
    }

    public void setTestMode(boolean)
    {
        com.jumptap.adtag.utils.JtAdManager r0;
        boolean $z0;

        r0 := @this: com.jumptap.adtag.utils.JtAdManager;

        $z0 := @parameter0: boolean;

        r0.<com.jumptap.adtag.utils.JtAdManager: boolean testMode> = $z0;

        return;
    }
}
