final class com.trustlook.scheduler.h extends java.lang.Object
{
    final com.trustlook.scheduler.f a;
    private android.os.PowerManager$WakeLock b;
    private java.lang.String c;
    private java.util.concurrent.atomic.AtomicInteger d;
    private long e;

    public void <init>(com.trustlook.scheduler.f, java.lang.String)
    {
        java.util.concurrent.atomic.AtomicInteger $r3;
        com.trustlook.scheduler.h r0;
        com.trustlook.scheduler.f $r1;
        java.lang.String $r2;

        r0 := @this: com.trustlook.scheduler.h;

        $r1 := @parameter0: com.trustlook.scheduler.f;

        $r2 := @parameter1: java.lang.String;

        r0.<com.trustlook.scheduler.h: com.trustlook.scheduler.f a> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<com.trustlook.scheduler.h: java.util.concurrent.atomic.AtomicInteger d> = $r3;

        r0.<com.trustlook.scheduler.h: java.lang.String c> = "SchedulerEventService";

        specialinvoke r0.<com.trustlook.scheduler.h: void b()>();

        return;
    }

    private void b()
    {
        android.content.Context $r3;
        android.os.PowerManager $r5;
        com.trustlook.scheduler.h r0;
        com.trustlook.scheduler.f $r2;
        java.lang.Object $r4;
        java.lang.String $r1;
        android.os.PowerManager$WakeLock $r6;

        r0 := @this: com.trustlook.scheduler.h;

        $r2 = r0.<com.trustlook.scheduler.h: com.trustlook.scheduler.f a>;

        $r3 = staticinvoke <com.trustlook.scheduler.f: android.content.Context a(com.trustlook.scheduler.f)>($r2);

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r5 = (android.os.PowerManager) $r4;

        $r1 = r0.<com.trustlook.scheduler.h: java.lang.String c>;

        $r6 = virtualinvoke $r5.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, $r1);

        r0.<com.trustlook.scheduler.h: android.os.PowerManager$WakeLock b> = $r6;

        return;
    }

    public final void a()
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        com.trustlook.scheduler.h r0;
        long $l0, $l1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.os.PowerManager$WakeLock $r4;

        r0 := @this: com.trustlook.scheduler.h;

        $r1 = r0.<com.trustlook.scheduler.h: java.util.concurrent.atomic.AtomicInteger d>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<com.trustlook.scheduler.h: long e>;

        $l0 = $l0 - $l1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Finally releasing wakelock ");

        $r3 = r0.<com.trustlook.scheduler.h: java.lang.String c>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elapsed: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = r0.<com.trustlook.scheduler.h: android.os.PowerManager$WakeLock b>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $r4 = r0.<com.trustlook.scheduler.h: android.os.PowerManager$WakeLock b>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

        specialinvoke r0.<com.trustlook.scheduler.h: void b()>();

        return;
    }

    public final void a(boolean)
    {
        com.trustlook.scheduler.f $r5;
        long $l1, $l2;
        android.os.PowerManager$WakeLock $r4;
        byte $b3;
        java.util.concurrent.atomic.AtomicInteger $r1;
        com.trustlook.scheduler.h r0;
        int $i0;
        java.lang.StringBuilder $r2, $r6;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.trustlook.scheduler.h;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.trustlook.scheduler.h: java.util.concurrent.atomic.AtomicInteger d>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        if $i0 != 1 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Acquire ");

        $r3 = r0.<com.trustlook.scheduler.h: java.lang.String c>;

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for the first time.");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.trustlook.scheduler.h: long e> = $l1;

     label1:
        $r4 = r0.<com.trustlook.scheduler.h: android.os.PowerManager$WakeLock b>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void acquire()>();

        return;

     label2:
        if $i0 <= 1 goto label1;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = r0.<com.trustlook.scheduler.h: long e>;

        $l1 = $l1 - $l2;

        $r5 = r0.<com.trustlook.scheduler.h: com.trustlook.scheduler.f a>;

        $l2 = staticinvoke <com.trustlook.scheduler.f: long b(com.trustlook.scheduler.f)>($r5);

        $b3 = $l1 cmp $l2;

        $i0 = (int) $b3;

        if $i0 <= 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Wakelock ");

        $r3 = r0.<com.trustlook.scheduler.h: java.lang.String c>;

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been held for ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms. maybe leaking?!");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WakeLockManager", $r3);

        goto label1;
    }
}
