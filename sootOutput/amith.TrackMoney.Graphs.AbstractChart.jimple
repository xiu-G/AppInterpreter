public abstract class amith.TrackMoney.Graphs.AbstractChart extends java.lang.Object implements amith.TrackMoney.Graphs.IChart
{

    public void <init>()
    {
        amith.TrackMoney.Graphs.AbstractChart r0;

        r0 := @this: amith.TrackMoney.Graphs.AbstractChart;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected org.achartengine.model.XYMultipleSeriesDataset buildBarDataset(java.lang.String[], java.util.List)
    {
        double[] r7;
        org.achartengine.model.XYSeries $r8;
        java.lang.String[] $r1;
        org.achartengine.model.XYMultipleSeriesDataset r3;
        java.util.List r2;
        int i0, i1, i2, i3;
        org.achartengine.model.CategorySeries r4;
        amith.TrackMoney.Graphs.AbstractChart r0;
        java.lang.Object $r6;
        java.lang.String $r5;
        double $d0;

        r0 := @this: amith.TrackMoney.Graphs.AbstractChart;

        $r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.util.List;

        r3 = new org.achartengine.model.XYMultipleSeriesDataset;

        specialinvoke r3.<org.achartengine.model.XYMultipleSeriesDataset: void <init>()>();

        i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 < i0 goto label2;

        return r3;

     label2:
        r4 = new org.achartengine.model.CategorySeries;

        $r5 = $r1[i2];

        specialinvoke r4.<org.achartengine.model.CategorySeries: void <init>(java.lang.String)>($r5);

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r7 = (double[]) $r6;

        i1 = lengthof r7;

        i3 = 0;

     label3:
        if i3 < i1 goto label4;

        $r8 = virtualinvoke r4.<org.achartengine.model.CategorySeries: org.achartengine.model.XYSeries toXYSeries()>();

        virtualinvoke r3.<org.achartengine.model.XYMultipleSeriesDataset: void addSeries(org.achartengine.model.XYSeries)>($r8);

        i2 = i2 + 1;

        goto label1;

     label4:
        $d0 = r7[i3];

        virtualinvoke r4.<org.achartengine.model.CategorySeries: void add(double)>($d0);

        i3 = i3 + 1;

        goto label3;
    }

    protected org.achartengine.renderer.XYMultipleSeriesRenderer buildBarRenderer(int[])
    {
        int[] $r1;
        int i0, $i1, i2;
        amith.TrackMoney.Graphs.AbstractChart r0;
        org.achartengine.renderer.SimpleSeriesRenderer r2;
        org.achartengine.renderer.XYMultipleSeriesRenderer r3;

        r0 := @this: amith.TrackMoney.Graphs.AbstractChart;

        $r1 := @parameter0: int[];

        r3 = new org.achartengine.renderer.XYMultipleSeriesRenderer;

        specialinvoke r3.<org.achartengine.renderer.XYMultipleSeriesRenderer: void <init>()>();

        i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 < i0 goto label2;

        return r3;

     label2:
        r2 = new org.achartengine.renderer.SimpleSeriesRenderer;

        specialinvoke r2.<org.achartengine.renderer.SimpleSeriesRenderer: void <init>()>();

        $i1 = $r1[i2];

        virtualinvoke r2.<org.achartengine.renderer.SimpleSeriesRenderer: void setColor(int)>($i1);

        virtualinvoke r3.<org.achartengine.renderer.XYMultipleSeriesRenderer: void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer)>(r2);

        i2 = i2 + 1;

        goto label1;
    }

    protected org.achartengine.model.CategorySeries buildCategoryDataset(java.lang.String, double[])
    {
        double[] $r2;
        org.achartengine.model.CategorySeries r3;
        int $i0, i1, $i2;
        amith.TrackMoney.Graphs.AbstractChart r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        double d0;

        r0 := @this: amith.TrackMoney.Graphs.AbstractChart;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: double[];

        r3 = new org.achartengine.model.CategorySeries;

        specialinvoke r3.<org.achartengine.model.CategorySeries: void <init>(java.lang.String)>($r1);

        i1 = 0;

        $i0 = lengthof $r2;

        $i2 = 0;

     label1:
        if $i2 < $i0 goto label2;

        return r3;

     label2:
        d0 = $r2[$i2];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Project ");

        i1 = i1 + 1;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<org.achartengine.model.CategorySeries: void add(java.lang.String,double)>($r1, d0);

        $i2 = $i2 + 1;

        goto label1;
    }

    protected org.achartengine.renderer.DefaultRenderer buildCategoryRenderer(int[])
    {
        int[] $r1;
        int i0, $i1, $i2;
        amith.TrackMoney.Graphs.AbstractChart r0;
        org.achartengine.renderer.DefaultRenderer r3;
        org.achartengine.renderer.SimpleSeriesRenderer r2;

        r0 := @this: amith.TrackMoney.Graphs.AbstractChart;

        $r1 := @parameter0: int[];

        r3 = new org.achartengine.renderer.DefaultRenderer;

        specialinvoke r3.<org.achartengine.renderer.DefaultRenderer: void <init>()>();

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label2;

        return r3;

     label2:
        i0 = $r1[$i2];

        r2 = new org.achartengine.renderer.SimpleSeriesRenderer;

        specialinvoke r2.<org.achartengine.renderer.SimpleSeriesRenderer: void <init>()>();

        virtualinvoke r2.<org.achartengine.renderer.SimpleSeriesRenderer: void setColor(int)>(i0);

        virtualinvoke r3.<org.achartengine.renderer.DefaultRenderer: void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer)>(r2);

        $i2 = $i2 + 1;

        goto label1;
    }

    protected org.achartengine.model.XYMultipleSeriesDataset buildDataset(java.lang.String[], java.util.List, java.util.List)
    {
        org.achartengine.model.XYSeries r5;
        double[] r8, r9;
        java.lang.String[] $r1;
        org.achartengine.model.XYMultipleSeriesDataset r4;
        int i0, i1, i2, i3;
        amith.TrackMoney.Graphs.AbstractChart r0;
        java.lang.String $r6;
        double $d0, $d1;
        java.util.List r2, r3;
        java.lang.Object $r7;

        r0 := @this: amith.TrackMoney.Graphs.AbstractChart;

        $r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 = new org.achartengine.model.XYMultipleSeriesDataset;

        specialinvoke r4.<org.achartengine.model.XYMultipleSeriesDataset: void <init>()>();

        i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 < i0 goto label2;

        return r4;

     label2:
        r5 = new org.achartengine.model.XYSeries;

        $r6 = $r1[i2];

        specialinvoke r5.<org.achartengine.model.XYSeries: void <init>(java.lang.String)>($r6);

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r8 = (double[]) $r7;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        r9 = (double[]) $r7;

        i1 = lengthof r8;

        i3 = 0;

     label3:
        if i3 < i1 goto label4;

        virtualinvoke r4.<org.achartengine.model.XYMultipleSeriesDataset: void addSeries(org.achartengine.model.XYSeries)>(r5);

        i2 = i2 + 1;

        goto label1;

     label4:
        $d1 = r8[i3];

        $d0 = r9[i3];

        virtualinvoke r5.<org.achartengine.model.XYSeries: void add(double,double)>($d1, $d0);

        i3 = i3 + 1;

        goto label3;
    }

    protected org.achartengine.model.XYMultipleSeriesDataset buildDateDataset(java.lang.String[], java.util.List, java.util.List)
    {
        java.util.Date $r10;
        org.achartengine.model.XYSeries r5;
        double[] r9;
        java.lang.String[] $r1;
        long $l4;
        org.achartengine.model.XYMultipleSeriesDataset r4;
        int i0, i1, i2, i3;
        amith.TrackMoney.Graphs.AbstractChart r0;
        java.lang.String $r6;
        double $d0, $d1;
        java.util.List r2, r3;
        java.util.Date[] r8;
        java.lang.Object $r7;

        r0 := @this: amith.TrackMoney.Graphs.AbstractChart;

        $r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 = new org.achartengine.model.XYMultipleSeriesDataset;

        specialinvoke r4.<org.achartengine.model.XYMultipleSeriesDataset: void <init>()>();

        i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 < i0 goto label2;

        return r4;

     label2:
        r5 = new org.achartengine.model.XYSeries;

        $r6 = $r1[i2];

        specialinvoke r5.<org.achartengine.model.XYSeries: void <init>(java.lang.String)>($r6);

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r8 = (java.util.Date[]) $r7;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        r9 = (double[]) $r7;

        i1 = lengthof r8;

        i3 = 0;

     label3:
        if i3 < i1 goto label4;

        virtualinvoke r4.<org.achartengine.model.XYMultipleSeriesDataset: void addSeries(org.achartengine.model.XYSeries)>(r5);

        i2 = i2 + 1;

        goto label1;

     label4:
        $r10 = r8[i3];

        $l4 = virtualinvoke $r10.<java.util.Date: long getTime()>();

        $d1 = (double) $l4;

        $d0 = r9[i3];

        virtualinvoke r5.<org.achartengine.model.XYSeries: void add(double,double)>($d1, $d0);

        i3 = i3 + 1;

        goto label3;
    }

    protected org.achartengine.model.MultipleCategorySeries buildMultipleCategoryDataset(java.lang.String, java.util.List, java.util.List)
    {
        java.util.Iterator $r5;
        double[] r7;
        java.lang.String[] r9;
        org.achartengine.model.MultipleCategorySeries r3;
        java.util.List r1, r2;
        int i0, $i1;
        amith.TrackMoney.Graphs.AbstractChart r4;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8;
        java.lang.String $r0;
        boolean $z0;

        r4 := @this: amith.TrackMoney.Graphs.AbstractChart;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 = new org.achartengine.model.MultipleCategorySeries;

        specialinvoke r3.<org.achartengine.model.MultipleCategorySeries: void <init>(java.lang.String)>($r0);

        i0 = 0;

        $r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return r3;

     label2:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (double[]) $r6;

        $r8 = new java.lang.StringBuilder;

        $i1 = i0 + 2007;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r9 = (java.lang.String[]) $r6;

        virtualinvoke r3.<org.achartengine.model.MultipleCategorySeries: void add(java.lang.String,java.lang.String[],double[])>($r0, r9, r7);

        i0 = i0 + 1;

        goto label1;
    }

    protected org.achartengine.renderer.XYMultipleSeriesRenderer buildRenderer(int[], org.achartengine.chart.PointStyle[])
    {
        org.achartengine.chart.PointStyle $r5;
        org.achartengine.renderer.XYSeriesRenderer r3;
        org.achartengine.chart.PointStyle[] $r2;
        int[] $r1;
        int i0, i1, $i2;
        amith.TrackMoney.Graphs.AbstractChart r0;
        org.achartengine.renderer.XYMultipleSeriesRenderer r4;

        r0 := @this: amith.TrackMoney.Graphs.AbstractChart;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: org.achartengine.chart.PointStyle[];

        r4 = new org.achartengine.renderer.XYMultipleSeriesRenderer;

        specialinvoke r4.<org.achartengine.renderer.XYMultipleSeriesRenderer: void <init>()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 < i0 goto label2;

        return r4;

     label2:
        r3 = new org.achartengine.renderer.XYSeriesRenderer;

        specialinvoke r3.<org.achartengine.renderer.XYSeriesRenderer: void <init>()>();

        $i2 = $r1[i1];

        virtualinvoke r3.<org.achartengine.renderer.XYSeriesRenderer: void setColor(int)>($i2);

        $r5 = $r2[i1];

        virtualinvoke r3.<org.achartengine.renderer.XYSeriesRenderer: void setPointStyle(org.achartengine.chart.PointStyle)>($r5);

        virtualinvoke r4.<org.achartengine.renderer.XYMultipleSeriesRenderer: void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer)>(r3);

        i1 = i1 + 1;

        goto label1;
    }

    protected void setChartSettings(org.achartengine.renderer.XYMultipleSeriesRenderer, java.lang.String, java.lang.String, java.lang.String, double, double, double, double, int, int)
    {
        int $i0, $i1;
        amith.TrackMoney.Graphs.AbstractChart r0;
        java.lang.String $r2, $r3, $r4;
        org.achartengine.renderer.XYMultipleSeriesRenderer $r1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: amith.TrackMoney.Graphs.AbstractChart;

        $r1 := @parameter0: org.achartengine.renderer.XYMultipleSeriesRenderer;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $d0 := @parameter4: double;

        $d1 := @parameter5: double;

        $d2 := @parameter6: double;

        $d3 := @parameter7: double;

        $i0 := @parameter8: int;

        $i1 := @parameter9: int;

        virtualinvoke $r1.<org.achartengine.renderer.XYMultipleSeriesRenderer: void setChartTitle(java.lang.String)>($r2);

        virtualinvoke $r1.<org.achartengine.renderer.XYMultipleSeriesRenderer: void setXTitle(java.lang.String)>($r3);

        virtualinvoke $r1.<org.achartengine.renderer.XYMultipleSeriesRenderer: void setYTitle(java.lang.String)>($r4);

        virtualinvoke $r1.<org.achartengine.renderer.XYMultipleSeriesRenderer: void setXAxisMin(double)>($d0);

        virtualinvoke $r1.<org.achartengine.renderer.XYMultipleSeriesRenderer: void setXAxisMax(double)>($d1);

        virtualinvoke $r1.<org.achartengine.renderer.XYMultipleSeriesRenderer: void setYAxisMin(double)>($d2);

        virtualinvoke $r1.<org.achartengine.renderer.XYMultipleSeriesRenderer: void setYAxisMax(double)>($d3);

        virtualinvoke $r1.<org.achartengine.renderer.XYMultipleSeriesRenderer: void setAxesColor(int)>($i0);

        virtualinvoke $r1.<org.achartengine.renderer.XYMultipleSeriesRenderer: void setLabelsColor(int)>($i1);

        return;
    }
}
