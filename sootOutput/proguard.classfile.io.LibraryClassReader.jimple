public class proguard.classfile.io.LibraryClassReader extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor, proguard.classfile.constant.visitor.ConstantVisitor
{
    private static final proguard.classfile.LibraryField[] EMPTY_LIBRARY_FIELDS;
    private static final proguard.classfile.LibraryMethod[] EMPTY_LIBRARY_METHODS;
    private proguard.classfile.constant.Constant[] constantPool;
    private final proguard.classfile.io.RuntimeDataInput dataInput;
    private final boolean skipNonPublicClassMembers;
    private final boolean skipNonPublicClasses;

    static void <clinit>()
    {
        proguard.classfile.LibraryField[] $r0;
        proguard.classfile.LibraryMethod[] $r1;

        $r0 = newarray (proguard.classfile.LibraryField)[0];

        <proguard.classfile.io.LibraryClassReader: proguard.classfile.LibraryField[] EMPTY_LIBRARY_FIELDS> = $r0;

        $r1 = newarray (proguard.classfile.LibraryMethod)[0];

        <proguard.classfile.io.LibraryClassReader: proguard.classfile.LibraryMethod[] EMPTY_LIBRARY_METHODS> = $r1;

        return;
    }

    public void <init>(java.io.DataInput, boolean, boolean)
    {
        java.io.DataInput $r1;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.io.RuntimeDataInput $r2;
        boolean $z0, $z1;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: java.io.DataInput;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        $r2 = new proguard.classfile.io.RuntimeDataInput;

        specialinvoke $r2.<proguard.classfile.io.RuntimeDataInput: void <init>(java.io.DataInput)>($r1);

        r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput> = $r2;

        r0.<proguard.classfile.io.LibraryClassReader: boolean skipNonPublicClasses> = $z0;

        r0.<proguard.classfile.io.LibraryClassReader: boolean skipNonPublicClassMembers> = $z1;

        return;
    }

    private proguard.classfile.constant.Constant createConstant()
    {
        proguard.classfile.constant.FieldrefConstant $r11;
        proguard.classfile.constant.InterfaceMethodrefConstant $r13;
        proguard.classfile.constant.DoubleConstant $r9;
        java.lang.StringBuffer $r3;
        int $i0;
        proguard.classfile.constant.StringConstant $r10;
        java.lang.String $r4;
        proguard.classfile.constant.Utf8Constant $r5;
        proguard.classfile.io.RuntimeDataInput $r2;
        proguard.classfile.constant.LongConstant $r8;
        proguard.classfile.constant.ClassConstant $r14;
        proguard.classfile.constant.FloatConstant $r7;
        proguard.classfile.constant.IntegerConstant $r6;
        proguard.classfile.constant.MethodrefConstant $r12;
        java.lang.RuntimeException $r1;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.constant.NameAndTypeConstant $r15;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedByte()>();

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label01;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label11;
            case 8: goto label07;
            case 9: goto label08;
            case 10: goto label09;
            case 11: goto label10;
            case 12: goto label12;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown constant type [");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] in constant pool");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label02:
        $r5 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r5.<proguard.classfile.constant.Utf8Constant: void <init>()>();

        return $r5;

     label03:
        $r6 = new proguard.classfile.constant.IntegerConstant;

        specialinvoke $r6.<proguard.classfile.constant.IntegerConstant: void <init>()>();

        return $r6;

     label04:
        $r7 = new proguard.classfile.constant.FloatConstant;

        specialinvoke $r7.<proguard.classfile.constant.FloatConstant: void <init>()>();

        return $r7;

     label05:
        $r8 = new proguard.classfile.constant.LongConstant;

        specialinvoke $r8.<proguard.classfile.constant.LongConstant: void <init>()>();

        return $r8;

     label06:
        $r9 = new proguard.classfile.constant.DoubleConstant;

        specialinvoke $r9.<proguard.classfile.constant.DoubleConstant: void <init>()>();

        return $r9;

     label07:
        $r10 = new proguard.classfile.constant.StringConstant;

        specialinvoke $r10.<proguard.classfile.constant.StringConstant: void <init>()>();

        return $r10;

     label08:
        $r11 = new proguard.classfile.constant.FieldrefConstant;

        specialinvoke $r11.<proguard.classfile.constant.FieldrefConstant: void <init>()>();

        return $r11;

     label09:
        $r12 = new proguard.classfile.constant.MethodrefConstant;

        specialinvoke $r12.<proguard.classfile.constant.MethodrefConstant: void <init>()>();

        return $r12;

     label10:
        $r13 = new proguard.classfile.constant.InterfaceMethodrefConstant;

        specialinvoke $r13.<proguard.classfile.constant.InterfaceMethodrefConstant: void <init>()>();

        return $r13;

     label11:
        $r14 = new proguard.classfile.constant.ClassConstant;

        specialinvoke $r14.<proguard.classfile.constant.ClassConstant: void <init>()>();

        return $r14;

     label12:
        $r15 = new proguard.classfile.constant.NameAndTypeConstant;

        specialinvoke $r15.<proguard.classfile.constant.NameAndTypeConstant: void <init>()>();

        return $r15;
    }

    private java.lang.String getClassName(int)
    {
        proguard.classfile.constant.ClassConstant $r4;
        proguard.classfile.constant.Constant $r3;
        int $i0;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.constant.Constant[] $r2;
        java.lang.String $r1;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $i0 := @parameter0: int;

        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.constant.Constant[] constantPool>;

        $r3 = $r2[$i0];

        $r4 = (proguard.classfile.constant.ClassConstant) $r3;

        $i0 = $r4.<proguard.classfile.constant.ClassConstant: int u2nameIndex>;

        $r1 = specialinvoke r0.<proguard.classfile.io.LibraryClassReader: java.lang.String getString(int)>($i0);

        return $r1;
    }

    private java.lang.String getString(int)
    {
        proguard.classfile.constant.Constant r3;
        int $i0;
        proguard.classfile.io.LibraryClassReader r1;
        proguard.classfile.constant.Constant[] $r2;
        java.lang.String $r0;
        proguard.classfile.constant.Utf8Constant r4;

        r1 := @this: proguard.classfile.io.LibraryClassReader;

        $i0 := @parameter0: int;

        $r2 = r1.<proguard.classfile.io.LibraryClassReader: proguard.classfile.constant.Constant[] constantPool>;

        r3 = $r2[$i0];

        r4 = (proguard.classfile.constant.Utf8Constant) r3;

        $r0 = virtualinvoke r4.<proguard.classfile.constant.Utf8Constant: java.lang.String getString()>();

        return $r0;
    }

    private void skipAttribute()
    {
        int $i0;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.io.RuntimeDataInput $r1;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r1.<proguard.classfile.io.RuntimeDataInput: int skipBytes(int)>(2);

        $r1 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r1.<proguard.classfile.io.RuntimeDataInput: int readInt()>();

        $r1 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r1.<proguard.classfile.io.RuntimeDataInput: int skipBytes(int)>($i0);

        return;
    }

    private void skipAttributes()
    {
        int $i0, $i1;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.io.RuntimeDataInput $r1;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r1.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        specialinvoke r0.<proguard.classfile.io.LibraryClassReader: void skipAttribute()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitAnyRefConstant(proguard.classfile.Clazz, proguard.classfile.constant.RefConstant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.constant.RefConstant $r2;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.RefConstant;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int skipBytes(int)>(4);

        return;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.constant.ClassConstant $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.constant.ClassConstant: int u2nameIndex> = $i0;

        return;
    }

    public void visitDoubleConstant(proguard.classfile.Clazz, proguard.classfile.constant.DoubleConstant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.io.RuntimeDataInput $r3;
        proguard.classfile.constant.DoubleConstant $r2;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.DoubleConstant;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int skipBytes(int)>(8);

        return;
    }

    public void visitFloatConstant(proguard.classfile.Clazz, proguard.classfile.constant.FloatConstant)
    {
        proguard.classfile.constant.FloatConstant $r2;
        proguard.classfile.Clazz $r1;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.FloatConstant;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int skipBytes(int)>(4);

        return;
    }

    public void visitIntegerConstant(proguard.classfile.Clazz, proguard.classfile.constant.IntegerConstant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.IntegerConstant $r2;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.IntegerConstant;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int skipBytes(int)>(4);

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryField $r8;
        java.lang.String[] $r6;
        proguard.classfile.LibraryClass $r1;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r5;
        proguard.classfile.io.RuntimeDataInput $r2;
        boolean $z0;
        proguard.classfile.constant.Constant $r4;
        proguard.classfile.LibraryField[] $r7, $r11;
        proguard.classfile.LibraryMethod[] $r9, $r12;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.constant.Constant[] $r3;
        proguard.classfile.LibraryMethod $r10;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readInt()>();

        staticinvoke <proguard.classfile.util.ClassUtil: void checkMagicNumber(int)>($i0);

        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalClassVersion(int,int)>($i1, $i0);

        staticinvoke <proguard.classfile.util.ClassUtil: void checkVersionNumbers(int)>($i0);

        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r3 = newarray (proguard.classfile.constant.Constant)[$i0];

        r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.constant.Constant[] constantPool> = $r3;

        $i1 = 1;

     label01:
        if $i1 >= $i0 goto label06;

        $r4 = specialinvoke r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.constant.Constant createConstant()>();

        virtualinvoke $r4.<proguard.classfile.constant.Constant: void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor)>($r1, r0);

        $i2 = virtualinvoke $r4.<proguard.classfile.constant.Constant: int getTag()>();

        if $i2 == 7 goto label02;

        if $i2 != 1 goto label03;

     label02:
        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.constant.Constant[] constantPool>;

        $r3[$i1] = $r4;

     label03:
        if $i2 == 5 goto label04;

        if $i2 != 6 goto label05;

     label04:
        $i1 = $i1 + 1;

     label05:
        $i1 = $i1 + 1;

        goto label01;

     label06:
        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r1.<proguard.classfile.LibraryClass: int u2accessFlags> = $i0;

        $z0 = r0.<proguard.classfile.io.LibraryClassReader: boolean skipNonPublicClasses>;

        if $z0 == 0 goto label07;

        $i0 = virtualinvoke $r1.<proguard.classfile.LibraryClass: int getAccessFlags()>();

        $i0 = staticinvoke <proguard.classfile.util.AccessUtil: int accessLevel(int)>($i0);

        if $i0 >= 3 goto label07;

        return;

     label07:
        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i1 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r5 = specialinvoke r0.<proguard.classfile.io.LibraryClassReader: java.lang.String getClassName(int)>($i0);

        $r1.<proguard.classfile.LibraryClass: java.lang.String thisClassName> = $r5;

        if $i1 != 0 goto label10;

        $r5 = null;

     label08:
        $r1.<proguard.classfile.LibraryClass: java.lang.String superClassName> = $r5;

        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r6 = newarray (java.lang.String)[$i0];

        $r1.<proguard.classfile.LibraryClass: java.lang.String[] interfaceNames> = $r6;

        $i1 = 0;

     label09:
        if $i1 >= $i0 goto label11;

        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i2 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r6 = $r1.<proguard.classfile.LibraryClass: java.lang.String[] interfaceNames>;

        $r5 = specialinvoke r0.<proguard.classfile.io.LibraryClassReader: java.lang.String getClassName(int)>($i2);

        $r6[$i1] = $r5;

        $i1 = $i1 + 1;

        goto label09;

     label10:
        $r5 = specialinvoke r0.<proguard.classfile.io.LibraryClassReader: java.lang.String getClassName(int)>($i1);

        goto label08;

     label11:
        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r7 = newarray (proguard.classfile.LibraryField)[$i0];

        $i1 = 0;

        $i2 = 0;

     label12:
        if $i1 >= $i0 goto label16;

        $r8 = new proguard.classfile.LibraryField;

        specialinvoke $r8.<proguard.classfile.LibraryField: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.LibraryClassReader: void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember)>($r1, $r8);

        $i3 = virtualinvoke $r8.<proguard.classfile.LibraryField: int getAccessFlags()>();

        $i3 = staticinvoke <proguard.classfile.util.AccessUtil: int accessLevel(int)>($i3);

        $z0 = r0.<proguard.classfile.io.LibraryClassReader: boolean skipNonPublicClassMembers>;

        if $z0 == 0 goto label15;

        $b4 = 2;

     label13:
        if $i3 < $b4 goto label14;

        $r7[$i2] = $r8;

        $i2 = $i2 + 1;

     label14:
        $i1 = $i1 + 1;

        goto label12;

     label15:
        $b4 = 1;

        goto label13;

     label16:
        if $i2 != 0 goto label21;

        $r7 = <proguard.classfile.io.LibraryClassReader: proguard.classfile.LibraryField[] EMPTY_LIBRARY_FIELDS>;

        $r1.<proguard.classfile.LibraryClass: proguard.classfile.LibraryField[] fields> = $r7;

     label17:
        $r2 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r9 = newarray (proguard.classfile.LibraryMethod)[$i0];

        $i1 = 0;

        $i2 = 0;

     label18:
        if $i1 >= $i0 goto label23;

        $r10 = new proguard.classfile.LibraryMethod;

        specialinvoke $r10.<proguard.classfile.LibraryMethod: void <init>()>();

        virtualinvoke r0.<proguard.classfile.io.LibraryClassReader: void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember)>($r1, $r10);

        $i3 = virtualinvoke $r10.<proguard.classfile.LibraryMethod: int getAccessFlags()>();

        $i3 = staticinvoke <proguard.classfile.util.AccessUtil: int accessLevel(int)>($i3);

        $z0 = r0.<proguard.classfile.io.LibraryClassReader: boolean skipNonPublicClassMembers>;

        if $z0 == 0 goto label22;

        $b4 = 2;

     label19:
        if $i3 < $b4 goto label20;

        $r9[$i2] = $r10;

        $i2 = $i2 + 1;

     label20:
        $i1 = $i1 + 1;

        goto label18;

     label21:
        $r11 = newarray (proguard.classfile.LibraryField)[$i2];

        $r1.<proguard.classfile.LibraryClass: proguard.classfile.LibraryField[] fields> = $r11;

        $r11 = $r1.<proguard.classfile.LibraryClass: proguard.classfile.LibraryField[] fields>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r11, 0, $i2);

        goto label17;

     label22:
        $b4 = 1;

        goto label19;

     label23:
        if $i2 != 0 goto label25;

        $r9 = <proguard.classfile.io.LibraryClassReader: proguard.classfile.LibraryMethod[] EMPTY_LIBRARY_METHODS>;

        $r1.<proguard.classfile.LibraryClass: proguard.classfile.LibraryMethod[] methods> = $r9;

     label24:
        specialinvoke r0.<proguard.classfile.io.LibraryClassReader: void skipAttributes()>();

        return;

     label25:
        $r12 = newarray (proguard.classfile.LibraryMethod)[$i2];

        $r1.<proguard.classfile.LibraryClass: proguard.classfile.LibraryMethod[] methods> = $r12;

        $r12 = $r1.<proguard.classfile.LibraryClass: proguard.classfile.LibraryMethod[] methods>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r12, 0, $i2);

        goto label24;
    }

    public void visitLibraryMember(proguard.classfile.LibraryClass, proguard.classfile.LibraryMember)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.LibraryMember $r2;
        int $i0;
        proguard.classfile.io.LibraryClassReader r0;
        java.lang.String $r4;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryMember;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r2.<proguard.classfile.LibraryMember: int u2accessFlags> = $i0;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4 = specialinvoke r0.<proguard.classfile.io.LibraryClassReader: java.lang.String getString(int)>($i0);

        $r2.<proguard.classfile.LibraryMember: java.lang.String name> = $r4;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4 = specialinvoke r0.<proguard.classfile.io.LibraryClassReader: java.lang.String getString(int)>($i0);

        $r2.<proguard.classfile.LibraryMember: java.lang.String descriptor> = $r4;

        specialinvoke r0.<proguard.classfile.io.LibraryClassReader: void skipAttributes()>();

        return;
    }

    public void visitLongConstant(proguard.classfile.Clazz, proguard.classfile.constant.LongConstant)
    {
        proguard.classfile.constant.LongConstant $r2;
        proguard.classfile.Clazz $r1;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.LongConstant;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int skipBytes(int)>(8);

        return;
    }

    public void visitNameAndTypeConstant(proguard.classfile.Clazz, proguard.classfile.constant.NameAndTypeConstant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.constant.NameAndTypeConstant $r2;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.NameAndTypeConstant;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int skipBytes(int)>(4);

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        return;
    }

    public void visitProgramMember(proguard.classfile.ProgramClass, proguard.classfile.ProgramMember)
    {
        proguard.classfile.ProgramMember $r2;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMember;

        return;
    }

    public void visitStringConstant(proguard.classfile.Clazz, proguard.classfile.constant.StringConstant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.StringConstant $r2;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.StringConstant;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int skipBytes(int)>(2);

        return;
    }

    public void visitUtf8Constant(proguard.classfile.Clazz, proguard.classfile.constant.Utf8Constant)
    {
        byte[] $r4;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.LibraryClassReader r0;
        proguard.classfile.constant.Utf8Constant $r2;
        proguard.classfile.io.RuntimeDataInput $r3;

        r0 := @this: proguard.classfile.io.LibraryClassReader;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.Utf8Constant;

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        $i0 = virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: int readUnsignedShort()>();

        $r4 = newarray (byte)[$i0];

        $r3 = r0.<proguard.classfile.io.LibraryClassReader: proguard.classfile.io.RuntimeDataInput dataInput>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataInput: void readFully(byte[])>($r4);

        virtualinvoke $r2.<proguard.classfile.constant.Utf8Constant: void setBytes(byte[])>($r4);

        return;
    }
}
