public abstract class c.a.a.a.a.d.b extends java.lang.Object implements c.a.a.a.a.d.n
{
    protected final android.content.Context b;
    protected final java.util.concurrent.ScheduledExecutorService c;
    protected final c.a.a.a.a.d.d d;
    protected final java.util.concurrent.atomic.AtomicReference e;
    protected volatile int f;

    public void <init>(android.content.Context, java.util.concurrent.ScheduledExecutorService, c.a.a.a.a.d.d)
    {
        android.content.Context $r1;
        c.a.a.a.a.d.d $r3;
        c.a.a.a.a.d.b r0;
        java.util.concurrent.ScheduledExecutorService $r2;
        int $i0;
        java.util.concurrent.atomic.AtomicReference $r4;

        r0 := @this: c.a.a.a.a.d.b;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.util.concurrent.ScheduledExecutorService;

        $r3 := @parameter2: c.a.a.a.a.d.d;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = -1;

        r0.<c.a.a.a.a.d.b: int f> = $i0;

        r0.<c.a.a.a.a.d.b: android.content.Context b> = $r1;

        r0.<c.a.a.a.a.d.b: java.util.concurrent.ScheduledExecutorService c> = $r2;

        r0.<c.a.a.a.a.d.b: c.a.a.a.a.d.d d> = $r3;

        $r4 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r0.<c.a.a.a.a.d.b: java.util.concurrent.atomic.AtomicReference e> = $r4;

        return;
    }

    private void a(int, int)
    {
        java.lang.Throwable $r9;
        android.content.Context $r4;
        java.util.concurrent.ScheduledFuture $r8;
        c.a.a.a.a.d.b r0;
        long $l2, $l3;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.util.concurrent.TimeUnit $r1;
        c.a.a.a.a.d.s $r3;
        int $i0, $i1;
        java.util.concurrent.ScheduledExecutorService $r7;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: c.a.a.a.a.d.b;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r3 = new c.a.a.a.a.d.s;

        $r4 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

     label1:
        specialinvoke $r3.<c.a.a.a.a.d.s: void <init>(android.content.Context,c.a.a.a.a.d.o)>($r4, r0);

     label2:
        $r4 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

        $r5 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Scheduling time based file roll over every ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <c.a.a.a.a.b.l: void a(android.content.Context,java.lang.String)>($r4, $r6);

     label4:
        $r2 = r0.<c.a.a.a.a.d.b: java.util.concurrent.atomic.AtomicReference e>;

        $r7 = r0.<c.a.a.a.a.d.b: java.util.concurrent.ScheduledExecutorService c>;

        $l3 = (long) $i0;

        $l2 = (long) $i1;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label5:
        $r8 = interfaceinvoke $r7.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r3, $l3, $l2, $r1);

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r8);

     label6:
        return;

     label7:
        $r9 := @caughtexception;

        $r4 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

        staticinvoke <c.a.a.a.a.b.l: void b(android.content.Context,java.lang.String)>($r4, "Failed to schedule time based file roll over");

        return;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label7;
        catch java.util.concurrent.RejectedExecutionException from label3 to label4 with label7;
        catch java.util.concurrent.RejectedExecutionException from label5 to label6 with label7;
    }

    protected final void a(int)
    {
        int $i0;
        c.a.a.a.a.d.b r0;

        r0 := @this: c.a.a.a.a.d.b;

        $i0 := @parameter0: int;

        r0.<c.a.a.a.a.d.b: int f> = $i0;

        $i0 = r0.<c.a.a.a.a.d.b: int f>;

        specialinvoke r0.<c.a.a.a.a.d.b: void a(int,int)>(0, $i0);

        return;
    }

    public final void a(java.lang.Object)
    {
        java.lang.Throwable $r6;
        android.content.Context $r2;
        c.a.a.a.a.d.d $r4;
        c.a.a.a.a.d.b r0;
        java.util.concurrent.atomic.AtomicReference $r5;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: c.a.a.a.a.d.b;

        $r1 := @parameter0: java.lang.Object;

        $z0 = 1;

        $r2 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <c.a.a.a.a.b.l: void a(android.content.Context,java.lang.String)>($r2, $r3);

        $r4 = r0.<c.a.a.a.a.d.b: c.a.a.a.a.d.d d>;

     label1:
        virtualinvoke $r4.<c.a.a.a.a.d.d: void a(java.lang.Object)>($r1);

     label2:
        $i0 = r0.<c.a.a.a.a.d.b: int f>;

        if $i0 == -1 goto label6;

        $z1 = 1;

     label3:
        $r5 = r0.<c.a.a.a.a.d.b: java.util.concurrent.atomic.AtomicReference e>;

        $r1 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r1 != null goto label7;

     label4:
        if $z1 == 0 goto label8;

        if $z0 == 0 goto label8;

        $i0 = r0.<c.a.a.a.a.d.b: int f>;

        $i1 = r0.<c.a.a.a.a.d.b: int f>;

        specialinvoke r0.<c.a.a.a.a.d.b: void a(int,int)>($i0, $i1);

        return;

     label5:
        $r6 := @caughtexception;

        $r2 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

        staticinvoke <c.a.a.a.a.b.l: void b(android.content.Context,java.lang.String)>($r2, "Failed to write event.");

        goto label2;

     label6:
        $z1 = 0;

        goto label3;

     label7:
        $z0 = 0;

        goto label4;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label5;
    }

    public final void b()
    {
        android.content.Context $r2;
        java.lang.Object[] $r6;
        c.a.a.a.a.d.d $r3;
        c.a.a.a.a.d.b r0;
        java.lang.Integer $r7;
        java.lang.Exception $r9, $r11;
        java.util.List $r4;
        java.util.Locale $r5;
        int $i0, $i1;
        c.a.a.a.a.d.p $r1;
        java.lang.StringBuilder $r10;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: c.a.a.a.a.d.b;

        $i0 = 0;

        $r1 = virtualinvoke r0.<c.a.a.a.a.d.b: c.a.a.a.a.d.p a()>();

        if $r1 != null goto label01;

        $r2 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

        staticinvoke <c.a.a.a.a.b.l: void a(android.content.Context,java.lang.String)>($r2, "skipping files send because we don\'t yet know the target endpoint");

        return;

     label01:
        $r2 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

        staticinvoke <c.a.a.a.a.b.l: void a(android.content.Context,java.lang.String)>($r2, "Sending all files");

        $r3 = r0.<c.a.a.a.a.d.b: c.a.a.a.a.d.d d>;

        $r4 = virtualinvoke $r3.<c.a.a.a.a.d.d: java.util.List d()>();

     label02:
        $r2 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

     label03:
        $r5 = <java.util.Locale: java.util.Locale US>;

        $r6 = newarray (java.lang.Object)[1];

     label04:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, "attempt to send batch of %d files", $r6);

        staticinvoke <c.a.a.a.a.b.l: void a(android.content.Context,java.lang.String)>($r2, $r8);

     label05:
        $i0 = 0;

     label06:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label07:
        if $i1 <= 0 goto label18;

     label08:
        $z0 = interfaceinvoke $r1.<c.a.a.a.a.d.p: boolean a(java.util.List)>($r4);

     label09:
        if $z0 == 0 goto label18;

     label10:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label11:
        $i0 = $i1 + $i0;

     label12:
        $r3 = r0.<c.a.a.a.a.d.b: c.a.a.a.a.d.d d>;

        virtualinvoke $r3.<c.a.a.a.a.d.d: void a(java.util.List)>($r4);

     label13:
        if $z0 == 0 goto label18;

     label14:
        $r3 = r0.<c.a.a.a.a.d.b: c.a.a.a.a.d.d d>;

        $r4 = virtualinvoke $r3.<c.a.a.a.a.d.d: java.util.List d()>();

     label15:
        goto label06;

     label16:
        $r9 := @caughtexception;

     label17:
        $r2 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to send batch of analytics files to server: ");

        $r8 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <c.a.a.a.a.b.l: void b(android.content.Context,java.lang.String)>($r2, $r8);

     label18:
        if $i0 != 0 goto label20;

        $r3 = r0.<c.a.a.a.a.d.b: c.a.a.a.a.d.d d>;

        virtualinvoke $r3.<c.a.a.a.a.d.d: void f()>();

        return;

     label19:
        $r11 := @caughtexception;

        $r9 = $r11;

        goto label17;

     label20:
        return;

        catch java.lang.Exception from label02 to label03 with label16;
        catch java.lang.Exception from label04 to label05 with label16;
        catch java.lang.Exception from label06 to label07 with label19;
        catch java.lang.Exception from label08 to label09 with label19;
        catch java.lang.Exception from label10 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label19;
    }

    public final void c()
    {
        c.a.a.a.a.d.d $r1;
        c.a.a.a.a.d.b r0;

        r0 := @this: c.a.a.a.a.d.b;

        $r1 = r0.<c.a.a.a.a.d.b: c.a.a.a.a.d.d d>;

        virtualinvoke $r1.<c.a.a.a.a.d.d: void e()>();

        return;
    }

    public final void d()
    {
        android.content.Context $r3;
        java.util.concurrent.ScheduledFuture $r4;
        c.a.a.a.a.d.b r0;
        java.lang.Object $r2;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @this: c.a.a.a.a.d.b;

        $r1 = r0.<c.a.a.a.a.d.b: java.util.concurrent.atomic.AtomicReference e>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r2 == null goto label1;

        $r3 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

        staticinvoke <c.a.a.a.a.b.l: void a(android.content.Context,java.lang.String)>($r3, "Cancelling time-based rollover because no events are currently being generated.");

        $r1 = r0.<c.a.a.a.a.d.b: java.util.concurrent.atomic.AtomicReference e>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r4 = (java.util.concurrent.ScheduledFuture) $r2;

        interfaceinvoke $r4.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(0);

        $r1 = r0.<c.a.a.a.a.d.b: java.util.concurrent.atomic.AtomicReference e>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

     label1:
        return;
    }

    public final boolean e()
    {
        java.lang.Throwable $r2;
        android.content.Context $r3;
        c.a.a.a.a.d.d $r1;
        c.a.a.a.a.d.b r0;
        boolean $z0;

        r0 := @this: c.a.a.a.a.d.b;

        $r1 = r0.<c.a.a.a.a.d.b: c.a.a.a.a.d.d d>;

     label1:
        $z0 = virtualinvoke $r1.<c.a.a.a.a.d.d: boolean c()>();

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        $r3 = r0.<c.a.a.a.a.d.b: android.content.Context b>;

        staticinvoke <c.a.a.a.a.b.l: void b(android.content.Context,java.lang.String)>($r3, "Failed to roll file over.");

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
