public class jp.Adlantis.Android.ADLAssetUtils extends java.lang.Object
{
    static java.lang.String ANDROID_ASSET_PREFIX;

    static void <clinit>()
    {
        <jp.Adlantis.Android.ADLAssetUtils: java.lang.String ANDROID_ASSET_PREFIX> = "/android_asset/";

        return;
    }

    public void <init>()
    {
        jp.Adlantis.Android.ADLAssetUtils r0;

        r0 := @this: jp.Adlantis.Android.ADLAssetUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.io.InputStream inputStreamFromAssetUri(android.content.Context, android.net.Uri) throws java.io.IOException
    {
        android.content.Context $r0;
        android.content.res.AssetManager $r2;
        android.net.Uri $r1;
        java.lang.String $r3;
        java.io.InputStream $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r3 = staticinvoke <jp.Adlantis.Android.ADLAssetUtils: java.lang.String pathFromAssetUri(android.net.Uri)>($r1);

        $r4 = virtualinvoke $r2.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r3);

        return $r4;
    }

    static boolean isAssetUri(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.net.Uri;

        $r1 = virtualinvoke $r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.net.Uri: java.lang.String getPath()>();

        $r2 = <jp.Adlantis.Android.ADLAssetUtils: java.lang.String ANDROID_ASSET_PREFIX>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    static boolean isAssetUrl(java.lang.String)
    {
        android.net.Uri $r1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r0);

        $z0 = staticinvoke <jp.Adlantis.Android.ADLAssetUtils: boolean isAssetUri(android.net.Uri)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    static java.lang.String pathFromAssetUri(android.net.Uri)
    {
        android.net.Uri $r0;
        int $i0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.net.Uri;

        $z0 = staticinvoke <jp.Adlantis.Android.ADLAssetUtils: boolean isAssetUri(android.net.Uri)>($r0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.net.Uri: java.lang.String getPath()>();

        $r2 = <jp.Adlantis.Android.ADLAssetUtils: java.lang.String ANDROID_ASSET_PREFIX>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r1;

     label1:
        return null;
    }

    public static java.lang.String uriForAsset(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        $r2 = <jp.Adlantis.Android.ADLAssetUtils: java.lang.String ANDROID_ASSET_PREFIX>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
}
