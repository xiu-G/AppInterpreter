public class com.yang.longrubblishclear.util.LocalUtil extends java.lang.Object
{
    public static final java.lang.String BASEDIR;
    public static final java.lang.String DBDIR;
    public static final java.lang.String DBNAME;
    public static final java.lang.String POSTFIX;
    public static final java.lang.String SDCARDDIR;
    public static final java.lang.String TABLENAME;
    private static final java.lang.String[] avoidStrs;

    static void <clinit>()
    {
        java.lang.String[] $r2;
        java.lang.String $r1;
        java.io.File $r0;

        <com.yang.longrubblishclear.util.LocalUtil: java.lang.String TABLENAME> = "softdetail";

        <com.yang.longrubblishclear.util.LocalUtil: java.lang.String POSTFIX> = ".db";

        <com.yang.longrubblishclear.util.LocalUtil: java.lang.String DBNAME> = "clearpath2";

        <com.yang.longrubblishclear.util.LocalUtil: java.lang.String DBDIR> = "/DB";

        <com.yang.longrubblishclear.util.LocalUtil: java.lang.String BASEDIR> = "/Android/SDcardClear";

        $r0 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        <com.yang.longrubblishclear.util.LocalUtil: java.lang.String SDCARDDIR> = $r1;

        $r2 = newarray (java.lang.String)[7];

        $r2[0] = ".mp3";

        $r2[1] = ".rmvb";

        $r2[2] = ".avi";

        $r2[3] = ".mp4";

        $r2[4] = ".txt";

        $r2[5] = ".mkv";

        $r2[6] = ".umd";

        <com.yang.longrubblishclear.util.LocalUtil: java.lang.String[] avoidStrs> = $r2;

        return;
    }

    public void <init>()
    {
        com.yang.longrubblishclear.util.LocalUtil r0;

        r0 := @this: com.yang.longrubblishclear.util.LocalUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void copyFileFromAssets(android.content.Context)
    {
        android.content.Context $r0;
        byte[] r1;
        java.io.FileOutputStream r4, $r11;
        java.lang.Exception r2;
        java.io.File r3, $r10;
        android.content.res.AssetManager $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r5, $r9;
        java.lang.String $r6;
        boolean $z0;
        java.io.InputStream $r8;

        $r0 := @parameter0: android.content.Context;

        r3 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        $r9 = new java.lang.StringBuilder;

        $r6 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearpath2");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".db");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.io.File;

        r3 = $r10;

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r6);

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r7 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r8 = virtualinvoke $r7.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("clearpath2.db");

     label02:
        $r11 = new java.io.FileOutputStream;

        r4 = $r11;

     label03:
        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

     label04:
        r1 = newarray (byte)[1024];

     label05:
        $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>(r1);

     label06:
        $i1 = -1;

        if $i0 != $i1 goto label10;

     label07:
        virtualinvoke r4.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label08:
        return;

     label09:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return;

     label10:
        virtualinvoke r4.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

     label11:
        goto label05;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label09;
    }

    public static final void deleteApkFromDatabase(android.content.Context, com.yang.longrubblishclear.info.DetailInfo)
    {
        android.content.Context $r0;
        com.yang.longrubblishclear.info.DetailInfo $r1;
        java.lang.String $r2;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.yang.longrubblishclear.info.DetailInfo;

        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getPath()>();

        if $r2 == null goto label2;

        $r2 = virtualinvoke $r1.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getPath()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        return;

     label1:
        r3 = new com.yang.longrubblishclear.adapter.DataBaseAdapter;

        specialinvoke r3.<com.yang.longrubblishclear.adapter.DataBaseAdapter: void <init>(android.content.Context)>($r0);

        virtualinvoke r3.<com.yang.longrubblishclear.adapter.DataBaseAdapter: void openDB()>();

        $r2 = virtualinvoke $r1.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getPath()>();

        virtualinvoke r3.<com.yang.longrubblishclear.adapter.DataBaseAdapter: long deleteSingleData(java.lang.String,java.lang.String)>("apk_info", $r2);

        virtualinvoke r3.<com.yang.longrubblishclear.adapter.DataBaseAdapter: void closeDB()>();

     label2:
        return;
    }

    public static void deleteDirWithParent(java.lang.String)
    {
        int i0, $i1;
        java.lang.String $r0;
        java.io.File[] $r2;
        java.io.File r1, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return;

     label1:
        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label8;

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <com.yang.longrubblishclear.util.LocalUtil: boolean isAvoided(java.io.File)>(r1);

        if $z0 != 0 goto label2;

        virtualinvoke r1.<java.io.File: boolean delete()>();

        return;

     label2:
        $r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        i0 = 0;

     label3:
        if $r2 == null goto label4;

        $i1 = lengthof $r2;

        if i0 < $i1 goto label5;

     label4:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        return;

     label5:
        $r3 = $r2[i0];

        $z0 = virtualinvoke $r3.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label7;

        $r3 = $r2[i0];

        $r0 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <com.yang.longrubblishclear.util.LocalUtil: boolean deleteFile(java.lang.String)>($r0);

     label6:
        i0 = i0 + 1;

        goto label3;

     label7:
        $r3 = $r2[i0];

        $r0 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <com.yang.longrubblishclear.util.LocalUtil: void deleteDirWithParent(java.lang.String)>($r0);

        goto label6;

     label8:
        return;
    }

    public static void deleteDirWithoutParent(java.lang.String)
    {
        int i0, $i1;
        java.lang.String $r0;
        java.io.File[] $r2;
        java.io.File r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return;

     label1:
        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label6;

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <com.yang.longrubblishclear.util.LocalUtil: boolean isAvoided(java.io.File)>(r1);

        if $z0 != 0 goto label2;

        virtualinvoke r1.<java.io.File: boolean delete()>();

        return;

     label2:
        $r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        i0 = 0;

     label3:
        if $r2 == null goto label6;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label6;

        r1 = $r2[i0];

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label5;

        r1 = $r2[i0];

        $r0 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <com.yang.longrubblishclear.util.LocalUtil: boolean deleteFile(java.lang.String)>($r0);

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        r1 = $r2[i0];

        $r0 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <com.yang.longrubblishclear.util.LocalUtil: void deleteDirWithParent(java.lang.String)>($r0);

        goto label4;

     label6:
        return;
    }

    public static boolean deleteFile(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return 0;

     label1:
        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <com.yang.longrubblishclear.util.LocalUtil: boolean isAvoided(java.io.File)>(r1);

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r1.<java.io.File: boolean delete()>();

        return $z0;

     label2:
        return 0;
    }

    public static java.util.List getAllClassPathInfos(android.content.Context)
    {
        android.content.Context $r0;
        com.yang.longrubblishclear.info.ClassPathInfo r1;
        java.util.ArrayList r2;
        int $i0, $i1;
        java.lang.String $r5, $r6, $r7, $r8;
        com.yang.longrubblishclear.adapter.ClassPathAdapter r3;
        android.database.Cursor $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        r2 = null;

        r3 = new com.yang.longrubblishclear.adapter.ClassPathAdapter;

        specialinvoke r3.<com.yang.longrubblishclear.adapter.ClassPathAdapter: void <init>(android.content.Context)>($r0);

        virtualinvoke r3.<com.yang.longrubblishclear.adapter.ClassPathAdapter: void openDB()>();

        $r4 = virtualinvoke r3.<com.yang.longrubblishclear.adapter.ClassPathAdapter: android.database.Cursor getAllDatas()>();

        if $r4 == null goto label2;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label3;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label2:
        virtualinvoke r3.<com.yang.longrubblishclear.adapter.ClassPathAdapter: void closeDB()>();

        return r2;

     label3:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i0);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("softChinesename");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("softEnglishname");

        $r6 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("apkname");

        $r7 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("filepath");

        $r8 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("stype");

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i1);

        r1 = new com.yang.longrubblishclear.info.ClassPathInfo;

        specialinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void <init>()>();

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setId(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setSoftChinesename(java.lang.String)>($r5);

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setSoftEnglishname(java.lang.String)>($r6);

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setStype(int)>($i1);

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setApkname(java.lang.String)>($r7);

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setFilepath(java.lang.String)>($r8);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label1;
    }

    public static java.util.List getApkInfo(android.content.Context)
    {
        android.content.Context $r0;
        com.yang.longrubblishclear.info.DetailInfo r1;
        long $l1;
        java.util.ArrayList r2;
        int $i0;
        java.lang.String $r5;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r3;
        android.database.Cursor $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        r2 = null;

        r3 = new com.yang.longrubblishclear.adapter.DataBaseAdapter;

        specialinvoke r3.<com.yang.longrubblishclear.adapter.DataBaseAdapter: void <init>(android.content.Context)>($r0);

        virtualinvoke r3.<com.yang.longrubblishclear.adapter.DataBaseAdapter: void openDB()>();

        $r4 = virtualinvoke r3.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.Cursor getAllDatas(java.lang.String)>("apk_info");

        if $r4 == null goto label2;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label3;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label2:
        virtualinvoke r3.<com.yang.longrubblishclear.adapter.DataBaseAdapter: void closeDB()>();

        return r2;

     label3:
        r1 = new com.yang.longrubblishclear.info.DetailInfo;

        specialinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void <init>()>();

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setName(java.lang.String)>($r5);

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("path");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setPath(java.lang.String)>($r5);

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("sizeLong");

        $l1 = interfaceinvoke $r4.<android.database.Cursor: long getLong(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setSizeLong(long)>($l1);

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("sizeStr");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setSizeStr(java.lang.String)>($r5);

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("date");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setDate(java.lang.String)>($r5);

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("packageName");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setPackageName(java.lang.String)>($r5);

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("versionName");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setVersionName(java.lang.String)>($r5);

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("versionCode");

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setVersionCode(int)>($i0);

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("typeInt");

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setTypeInt(int)>($i0);

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("typeStr");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setTypeStr(java.lang.String)>($r5);

        $r5 = virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getTypeStr()>();

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setContent(java.lang.String)>($r5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label1;
    }

    public static com.yang.longrubblishclear.info.DetailInfo getDetailInfoWithDir(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.io.File r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        r2 = new java.io.File;

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        staticinvoke <com.yang.longrubblishclear.util.LocalUtil: void scanFile(android.content.Context,java.io.File,java.lang.String)>($r0, r2, ".apk");

     label2:
        return null;
    }

    public static long getDirSize(java.lang.String)
    {
        long l0, $l3;
        java.io.File r1;
        int i1, $i2;
        java.lang.String $r0;
        java.io.File[] $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        l0 = 0L;

        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label5;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        i1 = 0;

     label1:
        if $r2 == null goto label6;

        $i2 = lengthof $r2;

        if i1 < $i2 goto label2;

        return l0;

     label2:
        r1 = $r2[i1];

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        $r0 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $l3 = staticinvoke <com.yang.longrubblishclear.util.LocalUtil: long getDirSize(java.lang.String)>($r0);

        l0 = l0 + $l3;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $l3 = virtualinvoke r1.<java.io.File: long length()>();

        l0 = l0 + $l3;

        goto label3;

     label5:
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label7;

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label7;

        l0 = virtualinvoke r1.<java.io.File: long length()>();

        l0 = 0L + l0;

     label6:
        return l0;

     label7:
        return 0L;
    }

    public static java.lang.String getFinalDate(android.content.Context)
    {
        android.content.Context $r0;
        int $i1, $i2;
        long $l0;
        java.lang.String r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $l0 = staticinvoke <com.yang.longrubblishclear.util.MyUtil: long getLastTime(android.content.Context)>($r0);

        r1 = "yyyy-MM-dd";

        $r2 = staticinvoke <com.yang.longrubblishclear.util.MyUtil: java.lang.String formatTime(long)>($l0);

        if $r2 == null goto label1;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 < $i2 goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        r1 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return r1;

     label1:
        $l0 = <com.yang.longrubblishclear.util.MyUtil: long DEFAULTLASTTIME>;

        r1 = staticinvoke <com.yang.longrubblishclear.util.MyUtil: java.lang.String formatTime(long)>($l0);

        return r1;
    }

    public static java.lang.String getFinalSize(android.content.Context)
    {
        android.content.Context $r0;
        long $l0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $l0 = staticinvoke <com.yang.longrubblishclear.util.MyUtil: long getLastSize(android.content.Context)>($r0);

        $r1 = staticinvoke <com.yang.longrubblishclear.util.MyUtil: java.lang.String formatSize(android.content.Context,long)>($r0, $l0);

        return $r1;
    }

    private static android.content.pm.PackageInfo getPackageInfo(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r3;
        java.lang.String $r1;
        android.content.pm.PackageInfo $r4;
        java.lang.Exception r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, 0);

     label2:
        return $r4;

     label3:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static long getSDCardAllSize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r2;
        java.io.File $r1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockCount()>();

        l0 = (long) $i2;

        l0 = l0 * l1;

        return l0;
    }

    public static long getSDCardAvailaleSize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r2;
        java.io.File $r1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getAvailableBlocks()>();

        l0 = (long) $i2;

        l0 = l0 * l1;

        return l0;
    }

    public static java.util.List getSingleApkInfo(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        com.yang.longrubblishclear.info.DetailInfo r2;
        long $l1;
        java.io.File r3;
        java.util.ArrayList r4;
        int $i0;
        java.lang.String $r1;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r5;
        android.database.Cursor $r6;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r4 = null;

        r5 = new com.yang.longrubblishclear.adapter.DataBaseAdapter;

        specialinvoke r5.<com.yang.longrubblishclear.adapter.DataBaseAdapter: void <init>(android.content.Context)>($r0);

        virtualinvoke r5.<com.yang.longrubblishclear.adapter.DataBaseAdapter: void openDB()>();

        $r6 = virtualinvoke r5.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.Cursor getSingleDataWithPackageName(java.lang.String,java.lang.String)>("apk_info", $r1);

        if $r6 == null goto label2;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label3;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label2:
        virtualinvoke r5.<com.yang.longrubblishclear.adapter.DataBaseAdapter: void closeDB()>();

        return r4;

     label3:
        r2 = new com.yang.longrubblishclear.info.DetailInfo;

        specialinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void <init>()>();

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

        $r1 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setName(java.lang.String)>($r1);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("path");

        $r1 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setPath(java.lang.String)>($r1);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("sizeLong");

        $l1 = interfaceinvoke $r6.<android.database.Cursor: long getLong(int)>($i0);

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setSizeLong(long)>($l1);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("sizeStr");

        $r1 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setSizeStr(java.lang.String)>($r1);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("date");

        $r1 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setDate(java.lang.String)>($r1);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("packageName");

        $r1 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setPackageName(java.lang.String)>($r1);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("versionName");

        $r1 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setVersionName(java.lang.String)>($r1);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("versionCode");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>($i0);

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setVersionCode(int)>($i0);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("typeInt");

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>($i0);

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setTypeInt(int)>($i0);

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("typeStr");

        $r1 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setTypeStr(java.lang.String)>($r1);

        $r1 = virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getTypeStr()>();

        virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: void setContent(java.lang.String)>($r1);

        r3 = new java.io.File;

        $r1 = virtualinvoke r2.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getPath()>();

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        goto label1;
    }

    public static com.yang.longrubblishclear.info.ClassPathInfo getSingleClassPathInfo(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        com.yang.longrubblishclear.info.ClassPathInfo r3;
        java.io.File r2;
        int $i0, $i1;
        java.lang.StringBuilder $r9;
        java.lang.String $r1, $r6, $r7, $r8;
        com.yang.longrubblishclear.adapter.ClassPathAdapter r4;
        android.database.Cursor $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r3 = null;

        r4 = new com.yang.longrubblishclear.adapter.ClassPathAdapter;

        specialinvoke r4.<com.yang.longrubblishclear.adapter.ClassPathAdapter: void <init>(android.content.Context)>($r0);

        virtualinvoke r4.<com.yang.longrubblishclear.adapter.ClassPathAdapter: void openDB()>();

        $r5 = virtualinvoke r4.<com.yang.longrubblishclear.adapter.ClassPathAdapter: android.database.Cursor getSingleData(java.lang.String)>($r1);

        if $r5 == null goto label3;

        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label2;

        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getInt(int)>($i0);

        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("softChinesename");

        $r1 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("softEnglishname");

        $r6 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("apkname");

        $r7 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("filepath");

        $r8 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("stype");

        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getInt(int)>($i1);

        r3 = new com.yang.longrubblishclear.info.ClassPathInfo;

        specialinvoke r3.<com.yang.longrubblishclear.info.ClassPathInfo: void <init>()>();

        virtualinvoke r3.<com.yang.longrubblishclear.info.ClassPathInfo: void setId(int)>($i0);

        virtualinvoke r3.<com.yang.longrubblishclear.info.ClassPathInfo: void setSoftChinesename(java.lang.String)>($r1);

        virtualinvoke r3.<com.yang.longrubblishclear.info.ClassPathInfo: void setSoftEnglishname(java.lang.String)>($r6);

        virtualinvoke r3.<com.yang.longrubblishclear.info.ClassPathInfo: void setStype(int)>($i1);

        virtualinvoke r3.<com.yang.longrubblishclear.info.ClassPathInfo: void setApkname(java.lang.String)>($r7);

        virtualinvoke r3.<com.yang.longrubblishclear.info.ClassPathInfo: void setFilepath(java.lang.String)>($r8);

        r2 = new java.io.File;

        $r9 = new java.lang.StringBuilder;

        $r1 = <com.yang.longrubblishclear.util.LocalUtil: java.lang.String SDCARDDIR>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r1 = virtualinvoke r3.<com.yang.longrubblishclear.info.ClassPathInfo: java.lang.String getFilepath()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label2;

     label1:
        r3 = null;

     label2:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label3:
        virtualinvoke r4.<com.yang.longrubblishclear.adapter.ClassPathAdapter: void closeDB()>();

        return r3;
    }

    public static java.util.List getSystemInfo(android.content.Context)
    {
        android.content.Context $r0;
        com.yang.longrubblishclear.info.DetailInfo r1, $r8;
        java.lang.String[] r3;
        long $l2;
        java.io.File r2, $r7;
        java.util.ArrayList r4, $r6;
        byte $b3;
        int i0, $i1;
        java.lang.String $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r6 = new java.util.ArrayList;

        r4 = $r6;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = newarray (java.lang.String)[4];

        r3[0] = "/cache";

        r3[1] = "/data/log";

        r3[2] = "/data/tombstones";

        r3[3] = "/data/system/dropbox";

        i0 = 0;

     label1:
        $i1 = lengthof r3;

        if i0 < $i1 goto label2;

        i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if i0 > 0 goto label4;

        return null;

     label2:
        $r7 = new java.io.File;

        r2 = $r7;

        $r5 = r3[i0];

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $l2 = staticinvoke <com.yang.longrubblishclear.util.LocalUtil: long getDirSize(java.lang.String)>($r5);

        $b3 = $l2 cmp 0L;

        $i1 = (int) $b3;

        if $i1 <= 0 goto label3;

        $r8 = new com.yang.longrubblishclear.info.DetailInfo;

        r1 = $r8;

        specialinvoke $r8.<com.yang.longrubblishclear.info.DetailInfo: void <init>()>();

        $r5 = r3[i0];

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setName(java.lang.String)>($r5);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setSizeLong(long)>($l2);

        $r5 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setPath(java.lang.String)>($r5);

        $r5 = staticinvoke <com.yang.longrubblishclear.util.MyUtil: java.lang.String formatSize(android.content.Context,long)>($r0, $l2);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setSizeStr(java.lang.String)>($r5);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r1);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return r4;
    }

    public static java.util.List getUninstalledInfo(android.content.Context)
    {
        android.content.Context $r0;
        com.yang.longrubblishclear.info.DetailInfo r1;
        java.lang.Object[] $r9;
        long $l2;
        com.yang.longrubblishclear.info.ClassPathInfo r6;
        java.io.File r2;
        java.util.ArrayList r4;
        java.util.List $r3;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r3 = staticinvoke <com.yang.longrubblishclear.util.LocalUtil: java.util.List getAllClassPathInfos(android.content.Context)>($r0);

        if $r3 == null goto label4;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label4;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 < $i1 goto label2;

        return r4;

     label2:
        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        r6 = (com.yang.longrubblishclear.info.ClassPathInfo) $r5;

        r2 = new java.io.File;

        $r7 = new java.lang.StringBuilder;

        $r8 = <com.yang.longrubblishclear.util.LocalUtil: java.lang.String SDCARDDIR>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r8 = virtualinvoke r6.<com.yang.longrubblishclear.info.ClassPathInfo: java.lang.String getFilepath()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r8);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r8 = virtualinvoke r6.<com.yang.longrubblishclear.info.ClassPathInfo: java.lang.String getApkname()>();

        $z0 = staticinvoke <com.yang.longrubblishclear.util.LocalUtil: boolean isPackageExists(android.content.Context,java.lang.String)>($r0, $r8);

        if $z0 != 0 goto label3;

        r1 = new com.yang.longrubblishclear.info.DetailInfo;

        specialinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void <init>()>();

        $r8 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setPath(java.lang.String)>($r8);

        $r8 = virtualinvoke r6.<com.yang.longrubblishclear.info.ClassPathInfo: java.lang.String getSoftChinesename()>();

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setName(java.lang.String)>($r8);

        $r8 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $l2 = staticinvoke <com.yang.longrubblishclear.util.LocalUtil: long getDirSize(java.lang.String)>($r8);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setSizeLong(long)>($l2);

        $l2 = virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: long getSizeLong()>();

        $r8 = staticinvoke <com.yang.longrubblishclear.util.MyUtil: java.lang.String formatSize(android.content.Context,long)>($r0, $l2);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setSizeStr(java.lang.String)>($r8);

        $r9 = newarray (java.lang.Object)[1];

        $r8 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9[0] = $r8;

        $r8 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131230750, $r9);

        virtualinvoke r1.<com.yang.longrubblishclear.info.DetailInfo: void setContent(java.lang.String)>($r8);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r1);

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return null;
    }

    public static java.lang.String getVersionName(android.content.Context)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r3;
        java.lang.StringBuilder $r5;
        java.lang.String r2;
        android.content.pm.PackageInfo $r4;
        java.lang.Exception r1;

        $r0 := @parameter0: android.content.Context;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r2, 0);

        r2 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label2:
        $r5 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("v");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return r2;

     label5:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return "v1.0";

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void installPackage(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.net.Uri $r3;
        android.content.Intent r2;
        java.lang.String $r1;
        java.io.File $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW");

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r1);

        $r3 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r4);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r3, "application/vnd.android.package-archive");

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>(r2);

        return;
    }

    private static boolean isAvoided(java.io.File)
    {
        int i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;
        java.io.File $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        i0 = 0;

     label1:
        $r1 = <com.yang.longrubblishclear.util.LocalUtil: java.lang.String[] avoidStrs>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r1 = <com.yang.longrubblishclear.util.LocalUtil: java.lang.String[] avoidStrs>;

        $r3 = $r1[i0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i0 = i0 + 1;

        goto label1;
    }

    private static boolean isPackageExists(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r3;
        java.lang.String $r1;
        android.content.pm.PackageInfo $r4;
        java.lang.Exception r2;
        boolean z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        z0 = 1;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, 0);

     label2:
        if $r4 != null goto label3;

        z0 = 0;

     label3:
        return z0;

     label4:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return 0;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static void jumpToSizeActivity(android.content.Context)
    {
        android.content.Context $r0;
        android.content.Intent r1;

        $r0 := @parameter0: android.content.Context;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("/");

        virtualinvoke r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.settings.INTERNAL_STORAGE_SETTINGS");

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>(r1);

        return;
    }

    private static void scanFile(android.content.Context, java.io.File, java.lang.String)
    {
        android.content.Context $r0;
        java.io.File $r1;
        com.yang.longrubblishclear.util.LocalUtil$1 $r3;
        int $i0, $i1;
        java.lang.String $r2;
        java.io.File[] $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.io.File;

        $r2 := @parameter2: java.lang.String;

        $r3 = new com.yang.longrubblishclear.util.LocalUtil$1;

        specialinvoke $r3.<com.yang.longrubblishclear.util.LocalUtil$1: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r3);

        if $r4 == null goto label4;

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return;

     label2:
        $r1 = $r4[$i1];

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        staticinvoke <com.yang.longrubblishclear.util.LocalUtil: void scanFile(android.content.Context,java.io.File,java.lang.String)>($r0, $r1, $r2);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }
}
