public class com.apostek.untangle.DBAdapter extends java.lang.Object
{
    private static final java.lang.String DATABASE_CREATE;
    private static final java.lang.String DATABASE_NAME;
    private static final java.lang.String DATABASE_TABLE;
    private static final int DATABASE_VERSION;
    public static final java.lang.String KEY_BESTTIME;
    public static final java.lang.String KEY_CREATED_DATE;
    public static final java.lang.String KEY_LEVEL;
    public static final java.lang.String KEY_MODIFIED_DATE;
    public static final java.lang.String KEY_MOVES;
    public static final java.lang.String KEY_NUMBER_OF_TIMES;
    public static final java.lang.String KEY_ROWID;
    public static final java.lang.String KEY_SCORE;
    public static final java.lang.String KEY_SUBLEVEL;
    private static final java.lang.String TAG;
    private com.apostek.untangle.DBAdapter$DatabaseHelper DBHelper;
    private final android.content.Context context;
    private android.database.sqlite.SQLiteDatabase db;

    public void <init>(android.content.Context)
    {
        com.apostek.untangle.DBAdapter r0;
        android.content.Context $r1;
        com.apostek.untangle.DBAdapter$DatabaseHelper $r2;

        r0 := @this: com.apostek.untangle.DBAdapter;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.apostek.untangle.DBAdapter: android.content.Context context> = $r1;

        $r2 = new com.apostek.untangle.DBAdapter$DatabaseHelper;

        $r1 = r0.<com.apostek.untangle.DBAdapter: android.content.Context context>;

        specialinvoke $r2.<com.apostek.untangle.DBAdapter$DatabaseHelper: void <init>(android.content.Context)>($r1);

        r0.<com.apostek.untangle.DBAdapter: com.apostek.untangle.DBAdapter$DatabaseHelper DBHelper> = $r2;

        return;
    }

    public void close()
    {
        com.apostek.untangle.DBAdapter r0;
        com.apostek.untangle.DBAdapter$DatabaseHelper $r1;

        r0 := @this: com.apostek.untangle.DBAdapter;

        $r1 = r0.<com.apostek.untangle.DBAdapter: com.apostek.untangle.DBAdapter$DatabaseHelper DBHelper>;

        virtualinvoke $r1.<com.apostek.untangle.DBAdapter$DatabaseHelper: void close()>();

        return;
    }

    public boolean deleteScore(int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        com.apostek.untangle.DBAdapter r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: com.apostek.untangle.DBAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.apostek.untangle.DBAdapter: android.database.sqlite.SQLiteDatabase db>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("level=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sublevel");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("challenge_scores", $r3, null);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.database.Cursor getAllScores()
    {
        android.database.sqlite.SQLiteDatabase $r2;
        com.apostek.untangle.DBAdapter r0;
        java.lang.String[] $r3;
        android.database.Cursor $r1;

        r0 := @this: com.apostek.untangle.DBAdapter;

        $r2 = r0.<com.apostek.untangle.DBAdapter: android.database.sqlite.SQLiteDatabase db>;

        $r3 = newarray (java.lang.String)[7];

        $r3[0] = "_id";

        $r3[1] = "level";

        $r3[2] = "sublevel";

        $r3[3] = "score";

        $r3[4] = "besttime";

        $r3[5] = "moves";

        $r3[6] = "numberoftimes";

        $r1 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("challenge_scores", $r3, null, null, null, null, "modified_date DESC");

        return $r1;
    }

    public android.database.Cursor getScore(int, int) throws android.database.SQLException
    {
        com.apostek.untangle.DBAdapter r0;
        java.lang.String[] $r2;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        android.database.Cursor $r5;

        r0 := @this: com.apostek.untangle.DBAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.apostek.untangle.DBAdapter: android.database.sqlite.SQLiteDatabase db>;

        $r2 = newarray (java.lang.String)[7];

        $r2[0] = "_id";

        $r2[1] = "level";

        $r2[2] = "sublevel";

        $r2[3] = "score";

        $r2[4] = "besttime";

        $r2[5] = "moves";

        $r2[6] = "numberoftimes";

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("level = ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sublevel");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(1, "challenge_scores", $r2, $r4, null, null, null, null, null);

        if $r5 == null goto label1;

        interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

     label1:
        return $r5;
    }

    public long insertScore(int, int, long, java.lang.String, int, int)
    {
        com.apostek.untangle.DBAdapter r0;
        long $l2, $l5;
        java.lang.Integer $r4;
        android.database.sqlite.SQLiteDatabase $r6;
        java.lang.Long $r3, $r5;
        int $i0, $i1, $i3, $i4;
        java.lang.String $r1;
        android.content.ContentValues r2;

        r0 := @this: com.apostek.untangle.DBAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 := @parameter2: long;

        $r1 := @parameter3: java.lang.String;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        r2 = new android.content.ContentValues;

        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("level", $r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("sublevel", $r4);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("score", $r5);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("besttime", $r1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("moves", $r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("numberoftimes", $r4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("created_date", $r3);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("modified_date", $r3);

        $r6 = r0.<com.apostek.untangle.DBAdapter: android.database.sqlite.SQLiteDatabase db>;

        $l2 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("challenge_scores", null, r2);

        return $l2;
    }

    public com.apostek.untangle.DBAdapter open() throws android.database.SQLException
    {
        com.apostek.untangle.DBAdapter r0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.apostek.untangle.DBAdapter$DatabaseHelper $r2;

        r0 := @this: com.apostek.untangle.DBAdapter;

        $r2 = r0.<com.apostek.untangle.DBAdapter: com.apostek.untangle.DBAdapter$DatabaseHelper DBHelper>;

        $r1 = virtualinvoke $r2.<com.apostek.untangle.DBAdapter$DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.apostek.untangle.DBAdapter: android.database.sqlite.SQLiteDatabase db> = $r1;

        return r0;
    }

    public boolean updateScores(int, int, int, long, java.lang.String, int)
    {
        com.apostek.untangle.DBAdapter r0;
        long $l3, $l5;
        java.lang.Integer $r5;
        android.database.sqlite.SQLiteDatabase $r6;
        java.lang.Long $r3, $r4;
        int $i0, $i1, $i2, $i4;
        java.lang.StringBuilder $r7;
        java.lang.String $r1;
        android.content.ContentValues r2;

        r0 := @this: com.apostek.untangle.DBAdapter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $l3 := @parameter3: long;

        $r1 := @parameter4: java.lang.String;

        $i4 := @parameter5: int;

        r2 = new android.content.ContentValues;

        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("score", $r4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("besttime", $r1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("moves", $r5);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("numberoftimes", $r5);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("modified_date", $r3);

        $r6 = r0.<com.apostek.untangle.DBAdapter: android.database.sqlite.SQLiteDatabase db>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("level = ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sublevel");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("challenge_scores", r2, $r1, null);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <com.apostek.untangle.DBAdapter: java.lang.String TAG> = "DBAdapter";

        <com.apostek.untangle.DBAdapter: java.lang.String KEY_SUBLEVEL> = "sublevel";

        <com.apostek.untangle.DBAdapter: java.lang.String KEY_SCORE> = "score";

        <com.apostek.untangle.DBAdapter: java.lang.String KEY_ROWID> = "_id";

        <com.apostek.untangle.DBAdapter: java.lang.String KEY_NUMBER_OF_TIMES> = "numberoftimes";

        <com.apostek.untangle.DBAdapter: java.lang.String KEY_MOVES> = "moves";

        <com.apostek.untangle.DBAdapter: java.lang.String KEY_MODIFIED_DATE> = "modified_date";

        <com.apostek.untangle.DBAdapter: java.lang.String KEY_LEVEL> = "level";

        <com.apostek.untangle.DBAdapter: java.lang.String KEY_CREATED_DATE> = "created_date";

        <com.apostek.untangle.DBAdapter: java.lang.String KEY_BESTTIME> = "besttime";

        <com.apostek.untangle.DBAdapter: int DATABASE_VERSION> = 1;

        <com.apostek.untangle.DBAdapter: java.lang.String DATABASE_TABLE> = "challenge_scores";

        <com.apostek.untangle.DBAdapter: java.lang.String DATABASE_NAME> = "spaceout";

        <com.apostek.untangle.DBAdapter: java.lang.String DATABASE_CREATE> = "create table challenge_scores (_id integer primary key autoincrement, level integer not null, sublevel integer not null,  score long not null, besttime text not null,moves integer not null,numberoftimes integer not null, modified_date INTEGER, created_date INTEGER);";

        return;
    }
}
