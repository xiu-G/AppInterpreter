public class org.dom4j.util.AttributeHelper extends java.lang.Object
{

    protected void <init>()
    {
        org.dom4j.util.AttributeHelper r0;

        r0 := @this: org.dom4j.util.AttributeHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static boolean booleanValue(org.dom4j.Attribute)
    {
        java.lang.Boolean r2;
        java.lang.Object $r1;
        java.lang.String $r3, $r4;
        org.dom4j.Attribute $r0;
        boolean $z0;

        $r0 := @parameter0: org.dom4j.Attribute;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = interfaceinvoke $r0.<org.dom4j.Attribute: java.lang.Object getData()>();

        if $r1 == null goto label3;

        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label2;

        r2 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $r3 = "true";

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        return $z0;

     label3:
        return 0;
    }

    public static boolean booleanValue(org.dom4j.Element, java.lang.String)
    {
        org.dom4j.Element $r0;
        java.lang.String $r1;
        org.dom4j.Attribute $r2;
        boolean $z0;

        $r0 := @parameter0: org.dom4j.Element;

        $r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke $r0.<org.dom4j.Element: org.dom4j.Attribute attribute(java.lang.String)>("fixed");

        $z0 = staticinvoke <org.dom4j.util.AttributeHelper: boolean booleanValue(org.dom4j.Attribute)>($r2);

        return $z0;
    }

    public static boolean booleanValue(org.dom4j.Element, org.dom4j.QName)
    {
        org.dom4j.Element $r0;
        org.dom4j.QName $r1;
        org.dom4j.Attribute $r2;
        boolean $z0;

        $r0 := @parameter0: org.dom4j.Element;

        $r1 := @parameter1: org.dom4j.QName;

        $r2 = interfaceinvoke $r0.<org.dom4j.Element: org.dom4j.Attribute attribute(org.dom4j.QName)>($r1);

        $z0 = staticinvoke <org.dom4j.util.AttributeHelper: boolean booleanValue(org.dom4j.Attribute)>($r2);

        return $z0;
    }
}
