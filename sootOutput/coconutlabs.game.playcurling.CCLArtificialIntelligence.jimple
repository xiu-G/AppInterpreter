public class coconutlabs.game.playcurling.CCLArtificialIntelligence extends java.lang.Object
{
    private android.graphics.Point m_CenterPoint;
    private java.util.ArrayList m_CollisionList;
    private java.util.ArrayList m_CollisionPointList;
    private java.util.ArrayList m_LeftBottomCircle;
    private java.util.ArrayList m_LeftDefenceArea;
    private java.util.ArrayList m_LeftTopCircle;
    private java.util.ArrayList m_MidBottomCircle;
    private java.util.ArrayList m_MidDefenceArea;
    private java.util.ArrayList m_MidTopCircle;
    private java.util.ArrayList m_RightBottomCircle;
    private java.util.ArrayList m_RightDefenceArea;
    private java.util.ArrayList m_RightTopCircle;
    private android.graphics.Point m_TargetPoint;
    private boolean m_bCPUPlayer1;
    private boolean m_bLastEnd;
    boolean m_bOverPower;
    private boolean m_bSpin;
    private float m_fAzimuth;
    private float m_fCenterX;
    private float m_fCenterY;
    private float m_fSpin;
    private int m_iCPUTurn;
    private int m_iEnergy;
    private int m_iHogLine;
    private int m_iStartY;
    private int m_iThisEndMatch;
    private int m_iTotalMatch;
    private java.util.ArrayList m_listStones;
    private java.util.Random m_random;
    private coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager;

    public void <init>()
    {
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        java.util.Random $r2;
        android.graphics.Point $r3;
        coconutlabs.game.playcurling.gameplayhelper.ScoreManager $r1;
        java.util.ArrayList $r4;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random> = $r2;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bOverPower> = 0;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fSpin> = 0.0F;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bSpin> = 1;

        $r1 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.ScoreManager: coconutlabs.game.playcurling.gameplayhelper.ScoreManager getInstance()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager> = $r1;

        $r3 = new android.graphics.Point;

        specialinvoke $r3.<android.graphics.Point: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint> = $r3;

        $r3 = new android.graphics.Point;

        specialinvoke $r3.<android.graphics.Point: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_CenterPoint> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftTopCircle> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftBottomCircle> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_MidTopCircle> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_MidBottomCircle> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_RightTopCircle> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_RightBottomCircle> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftDefenceArea> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_MidDefenceArea> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_RightDefenceArea> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionPointList> = $r4;

        return;
    }

    private float CalDistanceBetweenPoint(android.graphics.Point, android.graphics.Point)
    {
        android.graphics.Point $r1, $r2;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        int $i0, $i1, $i2;
        float f0, $f1;
        double $d0;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $i1 = $r1.<android.graphics.Point: int x>;

        $i0 = $r2.<android.graphics.Point: int x>;

        $i1 = $i1 - $i0;

        f0 = (float) $i1;

        $i1 = $r1.<android.graphics.Point: int x>;

        $i0 = $r2.<android.graphics.Point: int x>;

        $i1 = $i1 - $i0;

        $f1 = (float) $i1;

        f0 = f0 * $f1;

        $i1 = $r1.<android.graphics.Point: int y>;

        $i0 = $r2.<android.graphics.Point: int y>;

        $i1 = $i1 - $i0;

        $i2 = $r1.<android.graphics.Point: int y>;

        $i0 = $r2.<android.graphics.Point: int y>;

        $i0 = $i2 - $i0;

        $i1 = $i1 * $i0;

        $f1 = (float) $i1;

        f0 = f0 + $f1;

        $d0 = (double) f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f0 = (float) $d0;

        return f0;
    }

    private boolean CheckStoneInRoute(java.util.ArrayList, android.graphics.Point, boolean, int)
    {
        java.util.ArrayList r1, $r6;
        byte $b2;
        int $i0, $i1, $i3, $i4;
        boolean $z0;
        android.graphics.Point $r2, r4, r5, $r9;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        coconutlabs.game.playcurling.CCLStone r3, r8, $r10;
        float f0, f1, f2, $f3, $f4;
        java.lang.Object $r7;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: android.graphics.Point;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionPointList>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        $i1 = $r2.<android.graphics.Point: int x>;

        f0 = (float) $i1;

        f1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        f0 = f0 - f1;

        $b2 = f0 cmpl 0.0F;

        if $b2 != 0 goto label1;

        f0 = 1.0F;

     label1:
        $i1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i3 = $r2.<android.graphics.Point: int y>;

        $i1 = $i1 - $i3;

        f1 = (float) $i1;

        f0 = f1 / f0;

        $i1 = $r2.<android.graphics.Point: int y>;

        f1 = (float) $i1;

        $i1 = $r2.<android.graphics.Point: int x>;

        f2 = (float) $i1;

        f2 = f2 * f0;

        f1 = f1 - f2;

        $b2 = f0 cmpl 0.0F;

        if $b2 != 0 goto label2;

        return 0;

     label2:
        $i1 = 0;

     label3:
        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i1 < $i3 goto label5;

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label6;

        return 1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r8 = (coconutlabs.game.playcurling.CCLStone) $r7;

        $i3 = $r2.<android.graphics.Point: int y>;

        $i4 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $i4 = $i4 - 27;

        if $i3 >= $i4 goto label4;

        f2 = 1.0F / f0;

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f3 = (float) $i3;

        f2 = f2 * $f3;

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f3 = (float) $i3;

        f2 = f2 + $f3;

        r5 = new android.graphics.Point;

        r4 = r5;

        specialinvoke r5.<android.graphics.Point: void <init>()>();

        $r9 = new android.graphics.Point;

        r5 = $r9;

        specialinvoke $r9.<android.graphics.Point: void <init>()>();

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        r5.<android.graphics.Point: int x> = $i3;

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        r5.<android.graphics.Point: int y> = $i3;

        $r10 = new coconutlabs.game.playcurling.CCLStone;

        r3 = $r10;

        specialinvoke $r10.<coconutlabs.game.playcurling.CCLStone: void <init>()>();

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i4 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        virtualinvoke r3.<coconutlabs.game.playcurling.CCLStone: void SetPos(int,int)>($i3, $i4);

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetTeam()>();

        virtualinvoke r3.<coconutlabs.game.playcurling.CCLStone: void SetTeam(int)>($i3);

        $f3 = f2 - f1;

        $f4 = 1.0F / f0;

        $f4 = $f4 + f0;

        $f3 = $f3 / $f4;

        $i3 = (int) $f3;

        r4.<android.graphics.Point: int x> = $i3;

        f2 = f2 - f1;

        $f3 = 1.0F / f0;

        $f3 = $f3 + f0;

        f2 = f2 / $f3;

        f2 = f0 * f2;

        f2 = f2 + f1;

        $i3 = (int) f2;

        r4.<android.graphics.Point: int y> = $i3;

        f2 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float CalDistanceBetweenPoint(android.graphics.Point,android.graphics.Point)>(r5, r4);

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i3 = $i3 * 2;

        $f3 = (float) $i3;

        $b2 = f2 cmpg $f3;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label4;

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionPointList>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label4;

     label6:
        return 0;
    }

    private boolean CheckStoneInRouteAndTarget(java.util.ArrayList, android.graphics.Point, boolean, int)
    {
        java.util.ArrayList r1, $r6;
        byte $b2;
        int $i0, $i1, $i3, $i4;
        boolean $z0;
        android.graphics.Point $r2, r4, r5, $r9;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        coconutlabs.game.playcurling.CCLStone r3, r8, $r10;
        float f0, f1, f2, $f3, $f4;
        java.lang.Object $r7;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: android.graphics.Point;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionPointList>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        $i1 = $r2.<android.graphics.Point: int x>;

        f0 = (float) $i1;

        f1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        f0 = f0 - f1;

        $b2 = f0 cmpl 0.0F;

        if $b2 != 0 goto label1;

        f0 = 1.0F;

     label1:
        $i1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i3 = $r2.<android.graphics.Point: int y>;

        $i1 = $i1 - $i3;

        f1 = (float) $i1;

        f0 = f1 / f0;

        $i1 = $r2.<android.graphics.Point: int y>;

        f1 = (float) $i1;

        $i1 = $r2.<android.graphics.Point: int x>;

        f2 = (float) $i1;

        f2 = f2 * f0;

        f1 = f1 - f2;

        $b2 = f0 cmpl 0.0F;

        if $b2 != 0 goto label2;

        return 0;

     label2:
        $i1 = 0;

     label3:
        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i1 < $i3 goto label5;

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label6;

        return 1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r8 = (coconutlabs.game.playcurling.CCLStone) $r7;

        $i3 = $r2.<android.graphics.Point: int y>;

        $i4 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $i4 = $i4 + 27;

        if $i3 >= $i4 goto label4;

        f2 = 1.0F / f0;

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f3 = (float) $i3;

        f2 = f2 * $f3;

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f3 = (float) $i3;

        f2 = f2 + $f3;

        r5 = new android.graphics.Point;

        r4 = r5;

        specialinvoke r5.<android.graphics.Point: void <init>()>();

        $r9 = new android.graphics.Point;

        r5 = $r9;

        specialinvoke $r9.<android.graphics.Point: void <init>()>();

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        r5.<android.graphics.Point: int x> = $i3;

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        r5.<android.graphics.Point: int y> = $i3;

        $r10 = new coconutlabs.game.playcurling.CCLStone;

        r3 = $r10;

        specialinvoke $r10.<coconutlabs.game.playcurling.CCLStone: void <init>()>();

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i4 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        virtualinvoke r3.<coconutlabs.game.playcurling.CCLStone: void SetPos(int,int)>($i3, $i4);

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetTeam()>();

        virtualinvoke r3.<coconutlabs.game.playcurling.CCLStone: void SetTeam(int)>($i3);

        $f3 = f2 - f1;

        $f4 = 1.0F / f0;

        $f4 = $f4 + f0;

        $f3 = $f3 / $f4;

        $i3 = (int) $f3;

        r4.<android.graphics.Point: int x> = $i3;

        f2 = f2 - f1;

        $f3 = 1.0F / f0;

        $f3 = $f3 + f0;

        f2 = f2 / $f3;

        f2 = f0 * f2;

        f2 = f2 + f1;

        $i3 = (int) f2;

        r4.<android.graphics.Point: int y> = $i3;

        f2 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float CalDistanceBetweenPoint(android.graphics.Point,android.graphics.Point)>(r5, r4);

        $i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i3 = $i3 * 2;

        $f3 = (float) $i3;

        $b2 = f2 cmpg $f3;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label4;

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionPointList>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label4;

     label6:
        return 0;
    }

    private boolean CheckTargetCircleDefenceCollision(java.util.ArrayList)
    {
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        int $i0;
        float $f0;
        android.graphics.Point r2;
        java.util.ArrayList r1;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        r1 := @parameter0: java.util.ArrayList;

        r2 = new android.graphics.Point;

        specialinvoke r2.<android.graphics.Point: void <init>()>();

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int x> = $i0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i0 = (int) $f0;

        $i0 = $i0 + 110;

        $i0 = $i0 - 22;

        r2.<android.graphics.Point: int y> = $i0;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private int FindBottomStoneIndexFromCollision()
    {
        java.util.ArrayList $r1;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        coconutlabs.game.playcurling.CCLStone r3;
        int i0, i1, i2, $i3;
        java.lang.Object $r2;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        i0 = 0;

        i1 = 0;

        i2 = 0;

     label1:
        $r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        $i3 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i2 < $i3 goto label2;

        return i0;

     label2:
        $r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (coconutlabs.game.playcurling.CCLStone) $r2;

        $i3 = virtualinvoke r3.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        if $i3 <= i1 goto label3;

        i1 = virtualinvoke r3.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        i0 = i2;

     label3:
        i2 = i2 + 1;

        goto label1;
    }

    private coconutlabs.game.playcurling.CCLStone GetNearestStone()
    {
        java.util.ArrayList $r2;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        coconutlabs.game.playcurling.CCLStone r1, r4;
        byte $b3;
        int i0, $i1, $i2;
        float f0, f1, $f2, $f3, $f4;
        java.lang.Object $r3;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        r1 = null;

        f1 = 1000000.0F;

        i0 = 0;

     label1:
        $r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_listStones>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i0 < $i1 goto label2;

        return r1;

     label2:
        $r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_listStones>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (coconutlabs.game.playcurling.CCLStone) $r3;

        if i0 != 0 goto label3;

        $i1 = virtualinvoke r4.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = $i1 / 2;

        $i1 = $i1 + 110;

        $i2 = virtualinvoke r4.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i2 = $i2 / 2;

        $i2 = $i2 + 110;

        $i1 = $i1 * $i2;

        f1 = (float) $i1;

     label3:
        f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i1 = virtualinvoke r4.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f2 = (float) $i1;

        f0 = f0 - $f2;

        $f2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i1 = virtualinvoke r4.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f3 = (float) $i1;

        $f2 = $f2 - $f3;

        f0 = f0 * $f2;

        $f2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i1 = virtualinvoke r4.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f3 = (float) $i1;

        $f2 = $f2 - $f3;

        $f3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i1 = virtualinvoke r4.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f4 = (float) $i1;

        $f3 = $f3 - $f4;

        $f2 = $f2 * $f3;

        f0 = f0 + $f2;

        $b3 = f1 cmpl f0;

        $i1 = (int) $b3;

        if $i1 <= 0 goto label4;

        f1 = f0;

        r1 = r4;

     label4:
        i0 = i0 + 1;

        goto label1;
    }

    private void SetTargetCenter(java.util.ArrayList, boolean, boolean)
    {
        android.graphics.Point r2, $r3;
        java.util.ArrayList r1;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r7;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        coconutlabs.game.playcurling.CCLStone r5, r6;
        int $i0, $i1, $i2;
        float $f0, $f1;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        r1 := @parameter0: java.util.ArrayList;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        if $z1 == 0 goto label06;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int x> = $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int y> = $i0;

     label01:
        if $z0 == 0 goto label16;

        r2 = new android.graphics.Point;

        specialinvoke r2.<android.graphics.Point: void <init>()>();

        $r3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = $r3.<android.graphics.Point: int x>;

        r2.<android.graphics.Point: int x> = $i0;

        $r3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = $r3.<android.graphics.Point: int y>;

        r2.<android.graphics.Point: int y> = $i0;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label16;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r5 = (coconutlabs.game.playcurling.CCLStone) $r4;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 == 0 goto label05;

        $i0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int FindBottomStoneIndexFromCollision()>();

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r6 = (coconutlabs.game.playcurling.CCLStone) $r4;

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionPointList>;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (android.graphics.Point) $r4;

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label14;

        $i0 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i1 = (int) $f0;

        $i1 = $i1 + 110;

        $i1 = $i1 - 22;

        if $i0 <= $i1 goto label11;

        $r7 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r7.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        if $i0 != 1 goto label02;

        $i0 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetTeam()>();

        if $i0 == 0 goto label03;

     label02:
        $r7 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r7.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        if $i0 != 2 goto label08;

        $i0 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetTeam()>();

        if $i0 != 1 goto label08;

     label03:
        $i0 = $r3.<android.graphics.Point: int x>;

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        if $i0 <= $i1 goto label07;

        $i0 = $r3.<android.graphics.Point: int x>;

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i0 = $i0 - $i1;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        r2.<android.graphics.Point: int x> = $i0;

     label04:
        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bSpin> = 0;

     label05:
        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint> = r2;

        return;

     label06:
        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int x> = $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i0 = (int) $f0;

        $i0 = $i0 + 22;

        r2.<android.graphics.Point: int y> = $i0;

        goto label01;

     label07:
        $i0 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i1 = $r3.<android.graphics.Point: int x>;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        r2.<android.graphics.Point: int x> = $i0;

        goto label04;

     label08:
        $i0 = $r3.<android.graphics.Point: int x>;

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        if $i0 <= $i1 goto label10;

        $i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = $r3.<android.graphics.Point: int x>;

        $i2 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        r2.<android.graphics.Point: int x> = $i0;

     label09:
        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bSpin> = 1;

        goto label05;

     label10:
        $i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        r2.<android.graphics.Point: int x> = $i0;

        goto label09;

     label11:
        $i0 = $r3.<android.graphics.Point: int x>;

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        if $i0 <= $i1 goto label13;

        $i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = $r3.<android.graphics.Point: int x>;

        $i2 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        $i0 = $i0 + 2;

        r2.<android.graphics.Point: int x> = $i0;

     label12:
        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bSpin> = 0;

        goto label05;

     label13:
        $i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        $i0 = $i0 - 2;

        r2.<android.graphics.Point: int x> = $i0;

        goto label12;

     label14:
        $i0 = $r3.<android.graphics.Point: int x>;

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        if $i0 <= $i1 goto label15;

        $i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = $r3.<android.graphics.Point: int x>;

        $i2 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        r2.<android.graphics.Point: int x> = $i0;

        goto label05;

     label15:
        $i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        r2.<android.graphics.Point: int x> = $i0;

        goto label05;

     label16:
        return;
    }

    private void SetTargetCircleDefence(java.util.ArrayList)
    {
        android.graphics.Point r2, $r3;
        java.util.ArrayList r1;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        coconutlabs.game.playcurling.CCLStone r5, r6;
        int $i0, $i1, $i2;
        float $f0, $f1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        r1 := @parameter0: java.util.ArrayList;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int x> = $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i0 = (int) $f0;

        $i0 = $i0 + 110;

        $i0 = $i0 - 22;

        r2.<android.graphics.Point: int y> = $i0;

        r2 = new android.graphics.Point;

        specialinvoke r2.<android.graphics.Point: void <init>()>();

        $r3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = $r3.<android.graphics.Point: int x>;

        r2.<android.graphics.Point: int x> = $i0;

        $r3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = $r3.<android.graphics.Point: int y>;

        r2.<android.graphics.Point: int y> = $i0;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r5 = (coconutlabs.game.playcurling.CCLStone) $r4;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRouteAndTarget(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int FindBottomStoneIndexFromCollision()>();

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r6 = (coconutlabs.game.playcurling.CCLStone) $r4;

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionPointList>;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (android.graphics.Point) $r4;

        $i0 = $r3.<android.graphics.Point: int x>;

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        if $i0 <= $i1 goto label2;

        $i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = $r3.<android.graphics.Point: int x>;

        $i2 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        r2.<android.graphics.Point: int x> = $i0;

     label1:
        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint> = r2;

        return;

     label2:
        $i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        r2.<android.graphics.Point: int x> = $i0;

        goto label1;
    }

    private void SetTargetHogLineDefence(java.util.ArrayList)
    {
        android.graphics.Point r2, $r3;
        java.util.ArrayList r1;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        coconutlabs.game.playcurling.CCLStone r5, r6;
        int $i0, $i1, $i2;
        float $f0, $f1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        r1 := @parameter0: java.util.ArrayList;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int x> = $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iHogLine>;

        $i0 = $i0 - 55;

        r2.<android.graphics.Point: int y> = $i0;

        r2 = new android.graphics.Point;

        specialinvoke r2.<android.graphics.Point: void <init>()>();

        $r3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = $r3.<android.graphics.Point: int x>;

        r2.<android.graphics.Point: int x> = $i0;

        $r3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = $r3.<android.graphics.Point: int y>;

        r2.<android.graphics.Point: int y> = $i0;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r5 = (coconutlabs.game.playcurling.CCLStone) $r4;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRouteAndTarget(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int FindBottomStoneIndexFromCollision()>();

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r6 = (coconutlabs.game.playcurling.CCLStone) $r4;

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionPointList>;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (android.graphics.Point) $r4;

        $i0 = $r3.<android.graphics.Point: int x>;

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        if $i0 <= $i1 goto label2;

        $i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = $r3.<android.graphics.Point: int x>;

        $i2 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        r2.<android.graphics.Point: int x> = $i0;

     label1:
        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint> = r2;

        return;

     label2:
        $i0 = virtualinvoke r5.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i1 = virtualinvoke r6.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $i1 = r2.<android.graphics.Point: int x>;

        $i0 = $i1 + $i0;

        r2.<android.graphics.Point: int x> = $i0;

        goto label1;
    }

    private boolean SetTargetNearestStone(java.util.ArrayList)
    {
        android.graphics.Point r2, $r4;
        java.util.ArrayList r1;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        coconutlabs.game.playcurling.CCLStone $r3;
        byte $b1;
        int $i0, $i2;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        r1 := @parameter0: java.util.ArrayList;

        $r4 = new android.graphics.Point;

        r2 = $r4;

        specialinvoke $r4.<android.graphics.Point: void <init>()>();

        $r3 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.CCLStone GetNearestStone()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f0 = (float) $i0;

        $f1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $b1 = $f0 cmpg $f1;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label3;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $b1 = $f0 cmpg 55.0F;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label2;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f0 = (float) $i0;

        $f1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $f1 = $f1 + 22.0F;

        $b1 = $f0 cmpg $f1;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label2;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        r2.<android.graphics.Point: int x> = $i0;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        r2.<android.graphics.Point: int y> = $i0;

     label1:
        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 == 0 goto label5;

        return 0;

     label2:
        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i2 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i2 = $i2 / 2;

        $i0 = $i0 + $i2;

        r2.<android.graphics.Point: int x> = $i0;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        r2.<android.graphics.Point: int y> = $i0;

        goto label1;

     label3:
        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f0 = (float) $i0;

        $f1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $f0 = $f0 - $f1;

        $b1 = $f0 cmpg 55.0F;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label4;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f0 = (float) $i0;

        $f1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $f1 = $f1 + 22.0F;

        $b1 = $f0 cmpg $f1;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label4;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        r2.<android.graphics.Point: int x> = $i0;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        r2.<android.graphics.Point: int y> = $i0;

        goto label1;

     label4:
        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i2 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i2 = $i2 / 2;

        $i0 = $i0 - $i2;

        r2.<android.graphics.Point: int x> = $i0;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        r2.<android.graphics.Point: int y> = $i0;

        goto label1;

     label5:
        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint> = r2;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bOverPower> = 1;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bSpin> = 0;

        return 1;
    }

    public float CalcAzimuthByTargetPos(float, float)
    {
        java.util.Random $r1;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        byte $b1;
        int $i0;
        float $f0, $f1, $f2;
        double d0, d1;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $f0 = $f0 - $f2;

        d0 = (double) $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $f0 = (float) $i0;

        $f0 = $f0 - $f1;

        d1 = (double) $f0;

        $b1 = d1 cmpl 0.0;

        if $b1 != 0 goto label1;

        d1 = 1.0E-6;

     label1:
        d0 = d0 / d1;

        d0 = staticinvoke <java.lang.Math: double atan(double)>(d0);

        $f0 = (float) d0;

        $r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        d0 = virtualinvoke $r1.<java.util.Random: double nextGaussian()>();

        $f1 = (float) d0;

        $f1 = $f1 / 4.0F;

        $f1 = -0.125F + $f1;

        $f1 = 3.1415927F * $f1;

        $f1 = $f1 / 180.0F;

        $f0 = $f0 + $f1;

        return $f0;
    }

    public int CalcEnergyByTargetPos(float, float)
    {
        java.util.Random $r1;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $f2 = $f2 - $f0;

        $f3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $f0 = $f3 - $f0;

        $f0 = $f2 * $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $f2 = (float) $i0;

        $f2 = $f2 - $f1;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY>;

        $f3 = (float) $i0;

        $f1 = $f3 - $f1;

        $f1 = $f2 * $f1;

        $f0 = $f0 + $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        $f0 = $f0 * 1000.0F;

        $f0 = 8.0F * $f0;

        $f0 = 1.0F + $f0;

        $f0 = $f0 / 20.0F;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $d0 = $d0 + 1.0;

        $f0 = (float) $d0;

        $f0 = $f0 / 2.0F;

        $i0 = (int) $f0;

        $i0 = $i0 * 20;

        $z0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bOverPower>;

        if $z0 == 0 goto label1;

        $d0 = (double) $i0;

        $d1 = (double) $i0;

        $d1 = $d1 / 15.0;

        $d0 = $d0 + $d1;

        $i0 = (int) $d0;

     label1:
        $i0 = $i0 - 25;

        $r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $d0 = virtualinvoke $r1.<java.util.Random: double nextGaussian()>();

        $d0 = $d0 * 50.0;

        $i1 = (int) $d0;

        $i0 = $i0 + $i1;

        if $i0 <= 11000 goto label2;

        return 11000;

     label2:
        return $i0;
    }

    public float GetAzimuth()
    {
        float f0;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fAzimuth>;

        return f0;
    }

    public int GetEnergy()
    {
        int i0;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iEnergy>;

        return i0;
    }

    public float GetSpin()
    {
        float f0;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fSpin>;

        return f0;
    }

    public android.graphics.Point GetTargetPoint()
    {
        android.graphics.Point r1;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        return r1;
    }

    public void SetGameState(java.util.ArrayList, float, float, int, int, int, int, int)
    {
        java.util.Random $r6;
        java.util.ArrayList r1, $r5;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r3;
        byte $b7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        double $d0;
        boolean $z0;
        android.graphics.Point r2, $r9;
        coconutlabs.game.playcurling.CCLArtificialIntelligence r0;
        coconutlabs.game.playcurling.CCLStone r8;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.Object $r7;
        coconutlabs.game.playcurling.gameplayhelper.ScoreManager $r4;

        r0 := @this: coconutlabs.game.playcurling.CCLArtificialIntelligence;

        r1 := @parameter0: java.util.ArrayList;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $i3 := @parameter6: int;

        $i4 := @parameter7: int;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bSpin> = 1;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i5 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iCPUTurn> = $i5;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i5 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        if $i5 != 1 goto label10;

        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i5 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScoreSum()>();

        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i6 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScoreSum()>();

        if $i5 <= $i6 goto label06;

        $i5 = <coconutlabs.game.playcurling.CCLDefine: int WIN>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch> = $i5;

     label01:
        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i5 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScore()>();

        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i6 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScore()>();

        if $i5 <= $i6 goto label08;

        $i5 = <coconutlabs.game.playcurling.CCLDefine: int WIN>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iThisEndMatch> = $i5;

     label02:
        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bLastEnd> = 0;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i5 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentEnd()>();

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i6 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getNumberOfEnds()>();

        if $i5 != $i6 goto label03;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bLastEnd> = 1;

     label03:
        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bOverPower> = 0;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_listStones> = r1;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iStartY> = $i4;

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftTopCircle>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftBottomCircle>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_MidTopCircle>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_MidBottomCircle>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_RightTopCircle>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_RightBottomCircle>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftDefenceArea>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_MidDefenceArea>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_RightDefenceArea>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fSpin> = 0.0F;

        $i4 = 0;

     label04:
        $i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i4 < $i5 goto label16;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX> = $f0;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY> = $f1;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iHogLine> = $i2;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_CenterPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i2 = (int) $f0;

        r2.<android.graphics.Point: int x> = $i2;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_CenterPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i2 = (int) $f0;

        r2.<android.graphics.Point: int y> = $i2;

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label30;

        $i1 = $i1 - 2;

        if $i1 > $i0 goto label28;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        if $i0 != 1 goto label27;

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(10);

        if $i0 >= 3 goto label26;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 0);

     label05:
        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = r2.<android.graphics.Point: int x>;

        $f0 = (float) $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = r2.<android.graphics.Point: int y>;

        $f1 = (float) $i0;

        $i0 = virtualinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int CalcEnergyByTargetPos(float,float)>($f0, $f1);

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iEnergy> = $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = r2.<android.graphics.Point: int x>;

        $f0 = (float) $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $i0 = r2.<android.graphics.Point: int y>;

        $f1 = (float) $i0;

        $f0 = virtualinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float CalcAzimuthByTargetPos(float,float)>($f0, $f1);

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fAzimuth> = $f0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fSpin>;

        $f0 = $f0 - 0.2F;

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $d0 = virtualinvoke $r6.<java.util.Random: double nextGaussian()>();

        $d0 = $d0 / 10.0;

        $f1 = (float) $d0;

        $f0 = $f0 + $f1;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fSpin> = $f0;

        $z0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bSpin>;

        if $z0 == 0 goto label78;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 == 0 goto label78;

        $i0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int FindBottomStoneIndexFromCollision()>();

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionList>;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r8 = (coconutlabs.game.playcurling.CCLStone) $r7;

        r1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_CollisionPointList>;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r2 = (android.graphics.Point) $r7;

        $i0 = r2.<android.graphics.Point: int x>;

        $i1 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        if $i0 <= $i1 goto label77;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fAzimuth>;

        $f0 = $f0 + 0.1F;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fAzimuth> = $f0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fSpin>;

        $f0 = $f0 - 12.0F;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fSpin> = $f0;

        return;

     label06:
        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i5 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScoreSum()>();

        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i6 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScoreSum()>();

        if $i5 >= $i6 goto label07;

        $i5 = <coconutlabs.game.playcurling.CCLDefine: int LOSE>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch> = $i5;

        goto label01;

     label07:
        $i5 = <coconutlabs.game.playcurling.CCLDefine: int DRAW>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch> = $i5;

        goto label01;

     label08:
        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i5 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScore()>();

        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i6 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScore()>();

        if $i5 >= $i6 goto label09;

        $i5 = <coconutlabs.game.playcurling.CCLDefine: int LOSE>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iThisEndMatch> = $i5;

        goto label02;

     label09:
        $i5 = <coconutlabs.game.playcurling.CCLDefine: int DRAW>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iThisEndMatch> = $i5;

        goto label02;

     label10:
        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i5 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScoreSum()>();

        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i6 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScoreSum()>();

        if $i5 <= $i6 goto label12;

        $i5 = <coconutlabs.game.playcurling.CCLDefine: int LOSE>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch> = $i5;

     label11:
        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i5 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScore()>();

        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i6 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScore()>();

        if $i5 <= $i6 goto label14;

        $i5 = <coconutlabs.game.playcurling.CCLDefine: int LOSE>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iThisEndMatch> = $i5;

        goto label02;

     label12:
        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i5 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScoreSum()>();

        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i6 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScoreSum()>();

        if $i5 >= $i6 goto label13;

        $i5 = <coconutlabs.game.playcurling.CCLDefine: int WIN>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch> = $i5;

        goto label11;

     label13:
        $i5 = <coconutlabs.game.playcurling.CCLDefine: int DRAW>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch> = $i5;

        goto label11;

     label14:
        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i5 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScore()>();

        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i6 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScore()>();

        if $i5 >= $i6 goto label15;

        $i5 = <coconutlabs.game.playcurling.CCLDefine: int WIN>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iThisEndMatch> = $i5;

        goto label02;

     label15:
        $i5 = <coconutlabs.game.playcurling.CCLDefine: int DRAW>;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iThisEndMatch> = $i5;

        goto label02;

     label16:
        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        r8 = (coconutlabs.game.playcurling.CCLStone) $r7;

        $i5 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f2 = (float) $i5;

        $f3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $f3 = $f3 + 110.0F;

        $b7 = $f2 cmpg $f3;

        $i5 = (int) $b7;

        if $i5 >= 0 goto label23;

        $i5 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f2 = (float) $i5;

        $f3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $b7 = $f2 cmpg $f3;

        $i5 = (int) $b7;

        if $i5 >= 0 goto label20;

        $i5 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f2 = (float) $i5;

        $f3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i5 = r8.<coconutlabs.game.playcurling.CCLStone: int m_nWidth>;

        $i5 = $i5 * 2;

        $f4 = (float) $i5;

        $f3 = $f3 - $f4;

        $b7 = $f2 cmpg $f3;

        $i5 = (int) $b7;

        if $i5 >= 0 goto label18;

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftTopCircle>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label17:
        $i4 = $i4 + 1;

        goto label04;

     label18:
        $i5 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f2 = (float) $i5;

        $f3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i5 = r8.<coconutlabs.game.playcurling.CCLStone: int m_nWidth>;

        $i5 = $i5 * 2;

        $f4 = (float) $i5;

        $f3 = $f3 + $f4;

        $b7 = $f2 cmpg $f3;

        $i5 = (int) $b7;

        if $i5 >= 0 goto label19;

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_MidTopCircle>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label17;

     label19:
        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_RightTopCircle>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label17;

     label20:
        $i5 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f2 = (float) $i5;

        $f3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i5 = r8.<coconutlabs.game.playcurling.CCLStone: int m_nWidth>;

        $i5 = $i5 * 2;

        $f4 = (float) $i5;

        $f3 = $f3 - $f4;

        $b7 = $f2 cmpg $f3;

        $i5 = (int) $b7;

        if $i5 >= 0 goto label21;

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftBottomCircle>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label17;

     label21:
        $i5 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f2 = (float) $i5;

        $f3 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i5 = r8.<coconutlabs.game.playcurling.CCLStone: int m_nWidth>;

        $i5 = $i5 * 2;

        $f4 = (float) $i5;

        $f3 = $f3 + $f4;

        $b7 = $f2 cmpg $f3;

        $i5 = (int) $b7;

        if $i5 >= 0 goto label22;

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_MidBottomCircle>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label17;

     label22:
        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_RightBottomCircle>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label17;

     label23:
        $i5 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i6 = $i3 / 3;

        if $i5 >= $i6 goto label24;

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftDefenceArea>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label17;

     label24:
        $i5 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $i6 = $i3 * 2;

        $i6 = $i6 / 3;

        if $i5 >= $i6 goto label25;

        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_MidDefenceArea>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label17;

     label25:
        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_RightDefenceArea>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label17;

     label26:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label27:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label28:
        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(10);

        if $i0 >= 4 goto label29;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 0);

        goto label05;

     label29:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label30:
        $i1 = $i1 - 2;

        if $i1 > $i0 goto label59;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        if $i0 != 1 goto label42;

        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i0 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScore()>();

        if $i0 <= 0 goto label35;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch>;

        $i1 = <coconutlabs.game.playcurling.CCLDefine: int WIN>;

        if $i0 != $i1 goto label32;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckTargetCircleDefenceCollision(java.util.ArrayList)>(r1);

        if $z0 != 0 goto label31;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label31:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetHogLineDefence(java.util.ArrayList)>(r1);

        goto label05;

     label32:
        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch>;

        $i1 = <coconutlabs.game.playcurling.CCLDefine: int LOSE>;

        if $i0 != $i1 goto label33;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label33:
        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckTargetCircleDefenceCollision(java.util.ArrayList)>(r1);

        if $z0 != 0 goto label34;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label34:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetHogLineDefence(java.util.ArrayList)>(r1);

        goto label05;

     label35:
        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i0 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScore()>();

        if $i0 <= 0 goto label37;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_CenterPoint>;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 != 0 goto label36;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 0, 1);

        goto label05;

     label36:
        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean SetTargetNearestStone(java.util.ArrayList)>(r1);

        if $z0 != 0 goto label05;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label37:
        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_CenterPoint>;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 != 0 goto label38;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 0, 0);

        goto label05;

     label38:
        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_MidDefenceArea>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label39;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 0);

        goto label05;

     label39:
        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftDefenceArea>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label40;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        $i0 = $i0 - 55;

        r2.<android.graphics.Point: int x> = $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int y> = $i0;

        goto label05;

     label40:
        $r5 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.ArrayList m_LeftDefenceArea>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label41;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        $i0 = $i0 + 55;

        r2.<android.graphics.Point: int x> = $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int y> = $i0;

        goto label05;

     label41:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label42:
        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i0 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScore()>();

        if $i0 <= 0 goto label50;

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(10);

        $z0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bLastEnd>;

        if $z0 == 0 goto label44;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch>;

        $i1 = <coconutlabs.game.playcurling.CCLDefine: int WIN>;

        if $i0 != $i1 goto label43;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetHogLineDefence(java.util.ArrayList)>(r1);

        goto label05;

     label43:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label44:
        $i1 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch>;

        $i2 = <coconutlabs.game.playcurling.CCLDefine: int WIN>;

        if $i1 != $i2 goto label47;

        if $i0 >= 5 goto label45;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetHogLineDefence(java.util.ArrayList)>(r1);

        goto label05;

     label45:
        if $i0 >= 8 goto label46;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label46:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label47:
        if $i0 >= 2 goto label48;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetHogLineDefence(java.util.ArrayList)>(r1);

        goto label05;

     label48:
        if $i0 >= 6 goto label49;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label49:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label50:
        $r4 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        $i0 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScore()>();

        if $i0 <= 0 goto label55;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: coconutlabs.game.playcurling.CCLStone GetNearestStone()>();

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_CenterPoint>;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 != 0 goto label52;

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(10);

        if $i0 >= 7 goto label51;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label51:
        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean SetTargetNearestStone(java.util.ArrayList)>(r1);

        if $z0 != 0 goto label05;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label52:
        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(10);

        if $i0 >= 7 goto label53;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean SetTargetNearestStone(java.util.ArrayList)>(r1);

        if $z0 != 0 goto label05;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label53:
        if $i0 >= 8 goto label54;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label54:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 0, 1);

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bOverPower> = 1;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean m_bSpin> = 0;

        goto label05;

     label55:
        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_CenterPoint>;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 != 0 goto label56;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 0, 0);

        goto label05;

     label56:
        $r9 = new android.graphics.Point;

        r2 = $r9;

        specialinvoke $r9.<android.graphics.Point: void <init>()>();

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        $i0 = $i0 - 55;

        r2.<android.graphics.Point: int x> = $i0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int y> = $i0;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 != 0 goto label57;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        $i0 = $i0 - 55;

        r2.<android.graphics.Point: int x> = $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int y> = $i0;

        goto label05;

     label57:
        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        $i0 = $i0 + 55;

        r2.<android.graphics.Point: int x> = $i0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int y> = $i0;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 != 0 goto label58;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterX>;

        $i0 = (int) $f0;

        $i0 = $i0 + 55;

        r2.<android.graphics.Point: int x> = $i0;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_TargetPoint>;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fCenterY>;

        $i0 = (int) $f0;

        r2.<android.graphics.Point: int y> = $i0;

        goto label05;

     label58:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 0);

        goto label05;

     label59:
        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iThisEndMatch>;

        $i1 = <coconutlabs.game.playcurling.CCLDefine: int WIN>;

        if $i0 != $i1 goto label73;

        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iTotalMatch>;

        $i1 = <coconutlabs.game.playcurling.CCLDefine: int WIN>;

        if $i0 != $i1 goto label67;

        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_CenterPoint>;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 == 0 goto label63;

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(10);

        if $i0 >= 2 goto label60;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label60:
        if $i0 >= 8 goto label61;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label61:
        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        if $i0 >= 3 goto label62;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label62:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetHogLineDefence(java.util.ArrayList)>(r1);

        goto label05;

     label63:
        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(10);

        if $i0 >= 3 goto label64;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label64:
        if $i0 >= 7 goto label65;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label65:
        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        if $i0 >= 3 goto label66;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label66:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetHogLineDefence(java.util.ArrayList)>(r1);

        goto label05;

     label67:
        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_CenterPoint>;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 == 0 goto label71;

        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(10);

        if $i0 >= 4 goto label68;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label68:
        if $i0 >= 8 goto label69;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label69:
        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        if $i0 >= 3 goto label70;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label70:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetHogLineDefence(java.util.ArrayList)>(r1);

        goto label05;

     label71:
        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(10);

        if $i0 >= 6 goto label72;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label72:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCircleDefence(java.util.ArrayList)>(r1);

        goto label05;

     label73:
        r2 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: android.graphics.Point m_CenterPoint>;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean CheckStoneInRoute(java.util.ArrayList,android.graphics.Point,boolean,int)>(r1, r2, 0, 0);

        if $z0 != 0 goto label74;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label74:
        $r6 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: java.util.Random m_random>;

        $i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(10);

        if $i0 >= 3 goto label75;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label75:
        $i0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int m_iThisEndMatch>;

        $i1 = <coconutlabs.game.playcurling.CCLDefine: int LOSE>;

        if $i0 != $i1 goto label76;

        $z0 = specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: boolean SetTargetNearestStone(java.util.ArrayList)>(r1);

        if $z0 != 0 goto label05;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label76:
        specialinvoke r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void SetTargetCenter(java.util.ArrayList,boolean,boolean)>(r1, 1, 1);

        goto label05;

     label77:
        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fAzimuth>;

        $f0 = $f0 - 0.1F;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fAzimuth> = $f0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fSpin>;

        $f0 = $f0 + 12.0F;

        r0.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float m_fSpin> = $f0;

     label78:
        return;
    }
}
