public class com.altsoldev.preciousmetaltracker.adapter.ImageLoader extends java.lang.Object
{
    private java.util.HashMap cache;
    private java.io.File cacheDir;
    com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader photoLoaderThread;
    com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue photosQueue;
    final int stub_id;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader $r4;
        java.util.HashMap $r2;
        java.io.File $r6, $r7;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue $r3;
        java.lang.StringBuilder $r8;
        java.lang.String $r5;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader r0;
        boolean $z0;

        r0 := @this: com.altsoldev.preciousmetaltracker.adapter.ImageLoader;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.util.HashMap cache> = $r2;

        r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: int stub_id> = 2130837616;

        $r3 = new com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue;

        specialinvoke $r3.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue: void <init>(com.altsoldev.preciousmetaltracker.adapter.ImageLoader)>(r0);

        r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue photosQueue> = $r3;

        $r4 = new com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader;

        specialinvoke $r4.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader: void <init>(com.altsoldev.preciousmetaltracker.adapter.ImageLoader)>(r0);

        r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader photoLoaderThread> = $r4;

        $r4 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader photoLoaderThread>;

        virtualinvoke $r4.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader: void setPriority(int)>(4);

        $r5 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label2;

        $r6 = new java.io.File;

        $r7 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "NWR");

        r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.io.File cacheDir> = $r6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cache Directory 1: ");

        $r6 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.io.File cacheDir>;

        $r5 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("nwr", $r5);

     label1:
        $r6 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.io.File cacheDir>;

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label3;

        $r6 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.io.File cacheDir>;

        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Make Directory: ");

        $r6 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.io.File cacheDir>;

        $r5 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("nwr", $r5);

        return;

     label2:
        $r6 = virtualinvoke $r1.<android.content.Context: java.io.File getCacheDir()>();

        r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.io.File cacheDir> = $r6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cache Directory 2: ");

        $r6 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.io.File cacheDir>;

        $r5 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("nwr", $r5);

        goto label1;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cache Already Exist: ");

        $r6 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.io.File cacheDir>;

        $r5 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("nwr", $r5);

        return;
    }

    static android.graphics.Bitmap access$0(com.altsoldev.preciousmetaltracker.adapter.ImageLoader, java.lang.String)
    {
        java.lang.String $r1;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader $r0;
        android.graphics.Bitmap $r2;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.adapter.ImageLoader;

        $r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke $r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: android.graphics.Bitmap getBitmap(java.lang.String)>($r1);

        return $r2;
    }

    static java.util.HashMap access$1(com.altsoldev.preciousmetaltracker.adapter.ImageLoader)
    {
        java.util.HashMap r1;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader $r0;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.adapter.ImageLoader;

        r1 = $r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.util.HashMap cache>;

        return r1;
    }

    private android.graphics.Bitmap decodeFile(java.io.File)
    {
        java.lang.Throwable $r5;
        android.graphics.Bitmap $r3;
        java.io.FileInputStream $r4;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader r0;
        java.io.File $r1;
        android.graphics.BitmapFactory$Options r2;

        r0 := @this: com.altsoldev.preciousmetaltracker.adapter.ImageLoader;

        $r1 := @parameter0: java.io.File;

        r2 = new android.graphics.BitmapFactory$Options;

     label1:
        specialinvoke r2.<android.graphics.BitmapFactory$Options: void <init>()>();

     label2:
        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $r4 = new java.io.FileInputStream;

     label3:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r4, null, r2);

     label4:
        r2 = new android.graphics.BitmapFactory$Options;

     label5:
        specialinvoke r2.<android.graphics.BitmapFactory$Options: void <init>()>();

     label6:
        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = 1;

        $r4 = new java.io.FileInputStream;

     label7:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r4, null, r2);

     label8:
        return $r3;

     label9:
        $r5 := @caughtexception;

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label9;
        catch java.io.FileNotFoundException from label3 to label4 with label9;
        catch java.io.FileNotFoundException from label5 to label6 with label9;
        catch java.io.FileNotFoundException from label7 to label8 with label9;
    }

    private android.graphics.Bitmap getBitmap(java.lang.String)
    {
        java.net.URL $r7;
        java.lang.Exception r2;
        java.io.File r3, $r5;
        android.graphics.Bitmap $r6;
        java.net.URLConnection $r8;
        int $i0;
        java.lang.String $r1, $r4;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader r0;
        java.io.InputStream $r9;

        r0 := @this: com.altsoldev.preciousmetaltracker.adapter.ImageLoader;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        r3 = new java.io.File;

        $r5 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.io.File cacheDir>;

        specialinvoke r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r4);

        $r6 = specialinvoke r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: android.graphics.Bitmap decodeFile(java.io.File)>(r3);

        if $r6 == null goto label1;

        return $r6;

     label1:
        $r7 = new java.net.URL;

     label2:
        specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r8.<java.net.URLConnection: void setConnectTimeout(int)>(5000);

        virtualinvoke $r8.<java.net.URLConnection: void setReadTimeout(int)>(5000);

        $r9 = virtualinvoke $r8.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        staticinvoke <com.altsoldev.common.services.billing.Utils: void cacheImage(java.io.InputStream,java.io.File)>($r9, r3);

        $r6 = specialinvoke r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: android.graphics.Bitmap decodeFile(java.io.File)>(r3);

     label3:
        return $r6;

     label4:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private void queuePhoto(java.lang.String, android.app.Activity, android.widget.ImageView)
    {
        java.lang.Throwable $r11;
        java.lang.Thread$State $r9, $r10;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader $r8;
        android.widget.ImageView $r3;
        java.util.Stack $r6, $r7;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue $r5;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotoToLoad r4;
        java.lang.String $r1;
        android.app.Activity $r2;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.adapter.ImageLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.app.Activity;

        $r3 := @parameter2: android.widget.ImageView;

        $r5 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue photosQueue>;

        virtualinvoke $r5.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue: void Clean(android.widget.ImageView)>($r3);

        r4 = new com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotoToLoad;

        specialinvoke r4.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotoToLoad: void <init>(com.altsoldev.preciousmetaltracker.adapter.ImageLoader,java.lang.String,android.widget.ImageView)>(r0, $r1, $r3);

        $r5 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue photosQueue>;

        $r6 = staticinvoke <com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue: java.util.Stack access$0(com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue)>($r5);

        entermonitor $r6;

     label1:
        $r5 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue photosQueue>;

        $r7 = staticinvoke <com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue: java.util.Stack access$0(com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue)>($r5);

        virtualinvoke $r7.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r4);

        $r5 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue photosQueue>;

        $r7 = staticinvoke <com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue: java.util.Stack access$0(com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosQueue)>($r5);

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        exitmonitor $r6;

     label2:
        $r8 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader photoLoaderThread>;

        $r9 = virtualinvoke $r8.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader: java.lang.Thread$State getState()>();

        $r10 = <java.lang.Thread$State: java.lang.Thread$State NEW>;

        if $r9 != $r10 goto label6;

        $r8 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader photoLoaderThread>;

        virtualinvoke $r8.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader: void start()>();

        return;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor $r6;

     label5:
        throw $r11;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void DisplayImage(java.lang.String, android.app.Activity, android.widget.ImageView)
    {
        android.widget.ImageView $r3;
        java.util.HashMap $r4;
        android.graphics.Bitmap r7;
        java.lang.Object $r5;
        java.lang.StringBuilder $r8;
        java.lang.String $r1, $r9;
        java.lang.ref.SoftReference $r6;
        android.app.Activity $r2;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader r0;
        boolean $z0;

        r0 := @this: com.altsoldev.preciousmetaltracker.adapter.ImageLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.app.Activity;

        $r3 := @parameter2: android.widget.ImageView;

        $r4 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.util.HashMap cache>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r4 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.util.HashMap cache>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (java.lang.ref.SoftReference) $r5;

        $r5 = virtualinvoke $r6.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r7 = (android.graphics.Bitmap) $r5;

        if r7 == null goto label1;

        virtualinvoke $r3.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r7);

        return;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("BITMAP is NULL for ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("lazylist #%#$%", $r9);

        specialinvoke r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: void queuePhoto(java.lang.String,android.app.Activity,android.widget.ImageView)>($r1, $r2, $r3);

        virtualinvoke $r3.<android.widget.ImageView: void setImageResource(int)>(2130837616);

        return;

     label2:
        specialinvoke r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: void queuePhoto(java.lang.String,android.app.Activity,android.widget.ImageView)>($r1, $r2, $r3);

        virtualinvoke $r3.<android.widget.ImageView: void setImageResource(int)>(2130837616);

        return;
    }

    public void clearCache()
    {
        int $i0, $i1;
        java.util.HashMap $r3;
        java.io.File[] $r2;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader r0;
        java.io.File r1;

        r0 := @this: com.altsoldev.preciousmetaltracker.adapter.ImageLoader;

        $r3 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.util.HashMap cache>;

        virtualinvoke $r3.<java.util.HashMap: void clear()>();

        r1 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: java.io.File cacheDir>;

        $r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return;

     label2:
        r1 = $r2[$i1];

        virtualinvoke r1.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label1;
    }

    public void stopThread()
    {
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader r0;
        com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader $r1;

        r0 := @this: com.altsoldev.preciousmetaltracker.adapter.ImageLoader;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader: com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader photoLoaderThread>;

        virtualinvoke $r1.<com.altsoldev.preciousmetaltracker.adapter.ImageLoader$PhotosLoader: void interrupt()>();

        return;
    }
}
