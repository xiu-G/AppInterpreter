public class cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView extends cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase
{
    private static final cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener defaultOnRefreshListener;
    private final android.webkit.WebChromeClient defaultWebChromeClient;

    static void <clinit>()
    {
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$1 $r0;

        $r0 = new cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$1;

        specialinvoke $r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$1: void <init>()>();

        <cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener defaultOnRefreshListener> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener $r4;
        android.view.View $r5;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2 $r3;
        android.webkit.WebView $r6;
        android.webkit.WebChromeClient $r2;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void <init>(android.content.Context)>($r1);

        $r3 = new cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2;

        specialinvoke $r3.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2: void <init>(cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView)>(r0);

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.webkit.WebChromeClient defaultWebChromeClient> = $r3;

        $r4 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener defaultOnRefreshListener>;

        virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: void setOnRefreshListener(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener)>($r4);

        $r5 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r6 = (android.webkit.WebView) $r5;

        $r2 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.webkit.WebChromeClient defaultWebChromeClient>;

        virtualinvoke $r6.<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>($r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2 $r4;
        android.util.AttributeSet $r2;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener $r5;
        android.view.View $r6;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        android.webkit.WebView $r7;
        android.webkit.WebChromeClient $r3;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r4 = new cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2;

        specialinvoke $r4.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2: void <init>(cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView)>(r0);

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.webkit.WebChromeClient defaultWebChromeClient> = $r4;

        $r5 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener defaultOnRefreshListener>;

        virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: void setOnRefreshListener(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener)>($r5);

        $r6 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r7 = (android.webkit.WebView) $r6;

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.webkit.WebChromeClient defaultWebChromeClient>;

        virtualinvoke $r7.<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>($r3);

        return;
    }

    public void <init>(android.content.Context, cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode)
    {
        android.content.Context $r1;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode $r2;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2 $r4;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener $r5;
        android.view.View $r6;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        android.webkit.WebView $r7;
        android.webkit.WebChromeClient $r3;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode;

        specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void <init>(android.content.Context,cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode)>($r1, $r2);

        $r4 = new cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2;

        specialinvoke $r4.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2: void <init>(cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView)>(r0);

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.webkit.WebChromeClient defaultWebChromeClient> = $r4;

        $r5 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener defaultOnRefreshListener>;

        virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: void setOnRefreshListener(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener)>($r5);

        $r6 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r7 = (android.webkit.WebView) $r6;

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.webkit.WebChromeClient defaultWebChromeClient>;

        virtualinvoke $r7.<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>($r3);

        return;
    }

    public void <init>(android.content.Context, cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode, cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$AnimationStyle)
    {
        android.content.Context $r1;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode $r2;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2 $r5;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$AnimationStyle $r3;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener $r6;
        android.view.View $r7;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        android.webkit.WebView $r8;
        android.webkit.WebChromeClient $r4;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode;

        $r3 := @parameter2: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$AnimationStyle;

        specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void <init>(android.content.Context,cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode,cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$AnimationStyle)>($r1, $r2, $r3);

        $r5 = new cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2;

        specialinvoke $r5.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$2: void <init>(cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView)>(r0);

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.webkit.WebChromeClient defaultWebChromeClient> = $r5;

        $r6 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener defaultOnRefreshListener>;

        virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: void setOnRefreshListener(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnRefreshListener)>($r6);

        $r7 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r8 = (android.webkit.WebView) $r7;

        $r4 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.webkit.WebChromeClient defaultWebChromeClient>;

        virtualinvoke $r8.<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>($r4);

        return;
    }

    protected volatile android.view.View createRefreshableView(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        android.webkit.WebView $r3;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.webkit.WebView createRefreshableView(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return $r3;
    }

    protected android.webkit.WebView createRefreshableView(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        java.lang.Object r3;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$InternalWebViewSDK9 $r4;
        android.webkit.WebView $r5;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label2;

        $r4 = new cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$InternalWebViewSDK9;

        r3 = $r4;

        specialinvoke $r4.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView$InternalWebViewSDK9: void <init>(cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView,android.content.Context,android.util.AttributeSet)>(r0, $r1, $r2);

     label1:
        $r5 = (android.webkit.WebView) r3;

        virtualinvoke $r5.<android.webkit.WebView: void setId(int)>(2131034154);

        $r5 = (android.webkit.WebView) r3;

        return $r5;

     label2:
        $r5 = new android.webkit.WebView;

        r3 = $r5;

        specialinvoke $r5.<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        goto label1;
    }

    public final cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection()
    {
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation r1;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        r1 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation VERTICAL>;

        return r1;
    }

    protected boolean isReadyForPullEnd()
    {
        byte $b1;
        int $i0;
        android.view.View $r1;
        float $f0, $f1, $f2;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        android.webkit.WebView $r2;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r2 = (android.webkit.WebView) $r1;

        $i0 = virtualinvoke $r2.<android.webkit.WebView: int getContentHeight()>();

        $f0 = (float) $i0;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r2 = (android.webkit.WebView) $r1;

        $f1 = virtualinvoke $r2.<android.webkit.WebView: float getScale()>();

        $f0 = $f1 * $f0;

        $f1 = staticinvoke <android.util.FloatMath: float floor(float)>($f0);

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r2 = (android.webkit.WebView) $r1;

        $i0 = virtualinvoke $r2.<android.webkit.WebView: int getScrollY()>();

        $f0 = (float) $i0;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r2 = (android.webkit.WebView) $r1;

        $i0 = virtualinvoke $r2.<android.webkit.WebView: int getHeight()>();

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $b1 = $f0 cmpl $f1;

        $i0 = (int) $b1;

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isReadyForPullStart()
    {
        int $i0;
        android.view.View $r1;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        android.webkit.WebView $r2;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r2 = (android.webkit.WebView) $r1;

        $i0 = virtualinvoke $r2.<android.webkit.WebView: int getScrollY()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void onPtrRestoreInstanceState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.view.View $r2;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        android.webkit.WebView $r3;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void onPtrRestoreInstanceState(android.os.Bundle)>($r1);

        $r2 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r3 = (android.webkit.WebView) $r2;

        virtualinvoke $r3.<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>($r1);

        return;
    }

    protected void onPtrSaveInstanceState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.view.View $r2;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView r0;
        android.webkit.WebView $r3;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void onPtrSaveInstanceState(android.os.Bundle)>($r1);

        $r2 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.view.View mRefreshableView>;

        $r3 = (android.webkit.WebView) $r2;

        virtualinvoke $r3.<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>($r1);

        return;
    }
}
