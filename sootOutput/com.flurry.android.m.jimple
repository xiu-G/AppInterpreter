final class com.flurry.android.m extends java.lang.Object
{
    private java.lang.String a;
    private java.util.Map b;
    private long c;
    private boolean d;
    private long e;
    private byte[] f;

    public void <init>(java.lang.String, java.util.Map, long, boolean)
    {
        java.util.Map $r2;
        long $l0;
        java.lang.String $r1;
        com.flurry.android.m r0;
        boolean $z0;

        r0 := @this: com.flurry.android.m;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.flurry.android.m: java.lang.String a> = $r1;

        r0.<com.flurry.android.m: java.util.Map b> = $r2;

        r0.<com.flurry.android.m: long c> = $l0;

        r0.<com.flurry.android.m: boolean d> = 0;

        return;
    }

    public final void a()
    {
        long $l0, $l1;
        com.flurry.android.m r0;

        r0 := @this: com.flurry.android.m;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l0 = r0.<com.flurry.android.m: long c>;

        $l0 = $l1 - $l0;

        r0.<com.flurry.android.m: long e> = $l0;

        return;
    }

    public final boolean a(java.lang.String)
    {
        byte $b1;
        long $l0;
        java.lang.String $r1, $r2;
        com.flurry.android.m r0;
        boolean $z0;

        r0 := @this: com.flurry.android.m;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.flurry.android.m: boolean d>;

        if $z0 == 0 goto label1;

        $l0 = r0.<com.flurry.android.m: long e>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r2 = r0.<com.flurry.android.m: java.lang.String a>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final byte[] b()
    {
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15;
        byte[] $r2;
        java.io.ByteArrayOutputStream $r1;
        long $l0;
        java.io.DataOutputStream $r3, $r4;
        java.util.Map $r6;
        int $i1;
        java.lang.String $r5;
        boolean $z0;
        java.util.Map$Entry $r10;
        java.util.Iterator $r8;
        java.util.Set $r7;
        com.flurry.android.m r0;
        java.lang.Object $r9;

        r0 := @this: com.flurry.android.m;

        $r2 = r0.<com.flurry.android.m: byte[] f>;

        if $r2 != null goto label16;

        $r3 = null;

     label01:
        $r1 = new java.io.ByteArrayOutputStream;

     label02:
        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label03:
        $r4 = new java.io.DataOutputStream;

     label04:
        specialinvoke $r4.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r1);

     label05:
        $r5 = r0.<com.flurry.android.m: java.lang.String a>;

     label06:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

     label07:
        $r6 = r0.<com.flurry.android.m: java.util.Map b>;

     label08:
        if $r6 != null goto label17;

     label09:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeShort(int)>(0);

     label10:
        $l0 = r0.<com.flurry.android.m: long c>;

     label11:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeLong(long)>($l0);

     label12:
        $l0 = r0.<com.flurry.android.m: long e>;

     label13:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeLong(long)>($l0);

        virtualinvoke $r4.<java.io.DataOutputStream: void flush()>();

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label14:
        r0.<com.flurry.android.m: byte[] f> = $r2;

     label15:
        staticinvoke <com.flurry.android.h: void a(java.io.Closeable)>($r4);

     label16:
        $r2 = r0.<com.flurry.android.m: byte[] f>;

        return $r2;

     label17:
        $r6 = r0.<com.flurry.android.m: java.util.Map b>;

     label18:
        $i1 = interfaceinvoke $r6.<java.util.Map: int size()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeShort(int)>($i1);

     label19:
        $r6 = r0.<com.flurry.android.m: java.util.Map b>;

     label20:
        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

     label22:
        if $z0 == 0 goto label10;

     label23:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

     label24:
        $r10 = (java.util.Map$Entry) $r9;

     label25:
        $r9 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getKey()>();

     label26:
        $r5 = (java.lang.String) $r9;

     label27:
        $r5 = staticinvoke <com.flurry.android.h: java.lang.String a(java.lang.String)>($r5);

        virtualinvoke $r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        $r9 = interfaceinvoke $r10.<java.util.Map$Entry: java.lang.Object getValue()>();

     label28:
        $r5 = (java.lang.String) $r9;

     label29:
        $r5 = staticinvoke <com.flurry.android.h: java.lang.String a(java.lang.String)>($r5);

        virtualinvoke $r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

     label30:
        goto label21;

     label31:
        $r11 := @caughtexception;

        $r3 = $r4;

     label32:
        $r2 = newarray (byte)[0];

     label33:
        r0.<com.flurry.android.m: byte[] f> = $r2;

     label34:
        staticinvoke <com.flurry.android.h: void a(java.io.Closeable)>($r3);

        goto label16;

     label35:
        $r12 := @caughtexception;

        $r4 = null;

        $r13 = $r12;

     label36:
        staticinvoke <com.flurry.android.h: void a(java.io.Closeable)>($r4);

        throw $r13;

     label37:
        $r13 := @caughtexception;

        goto label36;

     label38:
        $r14 := @caughtexception;

        $r4 = $r3;

        $r13 = $r14;

        goto label36;

     label39:
        $r15 := @caughtexception;

        goto label32;

        catch java.io.IOException from label02 to label03 with label39;
        catch java.io.IOException from label04 to label05 with label39;
        catch java.lang.Throwable from label01 to label05 with label35;
        catch java.io.IOException from label06 to label07 with label31;
        catch java.io.IOException from label09 to label10 with label31;
        catch java.io.IOException from label11 to label12 with label31;
        catch java.io.IOException from label13 to label14 with label31;
        catch java.lang.Throwable from label05 to label08 with label37;
        catch java.lang.Throwable from label09 to label15 with label37;
        catch java.io.IOException from label18 to label19 with label31;
        catch java.io.IOException from label20 to label22 with label31;
        catch java.io.IOException from label23 to label24 with label31;
        catch java.io.IOException from label25 to label26 with label31;
        catch java.io.IOException from label27 to label28 with label31;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.lang.Throwable from label17 to label22 with label37;
        catch java.lang.Throwable from label23 to label30 with label37;
        catch java.lang.Throwable from label33 to label34 with label38;
    }
}
