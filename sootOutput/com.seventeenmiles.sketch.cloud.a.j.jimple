final class com.seventeenmiles.sketch.cloud.a.j extends java.util.concurrent.AbstractExecutorService
{
    private static final com.seventeenmiles.sketch.cloud.a.g n;
    private static final java.lang.RuntimePermission o;
    private final java.util.concurrent.atomic.AtomicInteger a;
    private final java.util.concurrent.BlockingQueue b;
    private final java.util.concurrent.locks.ReentrantLock c;
    private final java.util.HashSet d;
    private final java.util.concurrent.locks.Condition e;
    private int f;
    private long g;
    private volatile java.util.concurrent.ThreadFactory h;
    private volatile com.seventeenmiles.sketch.cloud.a.g i;
    private volatile long j;
    private volatile boolean k;
    private volatile int l;
    private volatile int m;

    static void <clinit>()
    {
        java.lang.RuntimePermission $r1;
        com.seventeenmiles.sketch.cloud.a.k $r0;

        $r0 = new com.seventeenmiles.sketch.cloud.a.k;

        specialinvoke $r0.<com.seventeenmiles.sketch.cloud.a.k: void <init>()>();

        <com.seventeenmiles.sketch.cloud.a.j: com.seventeenmiles.sketch.cloud.a.g n> = $r0;

        $r1 = new java.lang.RuntimePermission;

        specialinvoke $r1.<java.lang.RuntimePermission: void <init>(java.lang.String)>("modifyThread");

        <com.seventeenmiles.sketch.cloud.a.j: java.lang.RuntimePermission o> = $r1;

        return;
    }

    public void <init>(java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue)
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.BlockingQueue $r2;
        com.seventeenmiles.sketch.cloud.a.g $r3;
        java.util.concurrent.ThreadFactory $r4;
        com.seventeenmiles.sketch.cloud.a.j r0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 := @parameter0: java.util.concurrent.TimeUnit;

        $r2 := @parameter1: java.util.concurrent.BlockingQueue;

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>();

        $r3 = <com.seventeenmiles.sketch.cloud.a.j: com.seventeenmiles.sketch.cloud.a.g n>;

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void <init>(java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,com.seventeenmiles.sketch.cloud.a.g)>($r1, $r2, $r4, $r3);

        return;
    }

    private void <init>(java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue, java.util.concurrent.ThreadFactory, com.seventeenmiles.sketch.cloud.a.g)
    {
        java.util.concurrent.locks.ReentrantLock $r5, $r8;
        java.util.concurrent.BlockingQueue $r2;
        long $l1;
        java.lang.IllegalArgumentException $r10;
        java.lang.NullPointerException $r11;
        java.util.concurrent.TimeUnit $r1;
        java.util.HashSet $r9;
        java.util.concurrent.locks.Condition $r6;
        java.util.concurrent.atomic.AtomicInteger $r7;
        int $i2;
        com.seventeenmiles.sketch.cloud.a.g $r4;
        java.util.concurrent.ThreadFactory $r3;
        com.seventeenmiles.sketch.cloud.a.j r0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 := @parameter0: java.util.concurrent.TimeUnit;

        $r2 := @parameter1: java.util.concurrent.BlockingQueue;

        $r3 := @parameter2: java.util.concurrent.ThreadFactory;

        $r4 := @parameter3: com.seventeenmiles.sketch.cloud.a.g;

        specialinvoke r0.<java.util.concurrent.AbstractExecutorService: void <init>()>();

        $r7 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(-536870912);

        r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a> = $r7;

        $r8 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c> = $r8;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.HashSet d> = $r9;

        $r5 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.Condition e> = $r6;

        $i2 = (int) 1;

        if $i2 >= 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r10;

     label1:
        if $r2 == null goto label2;

        if $r3 == null goto label2;

        if $r4 != null goto label3;

     label2:
        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>()>();

        throw $r11;

     label3:
        r0.<com.seventeenmiles.sketch.cloud.a.j: int l> = 2;

        r0.<com.seventeenmiles.sketch.cloud.a.j: int m> = 2;

        r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b> = $r2;

        $l1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(10L);

        r0.<com.seventeenmiles.sketch.cloud.a.j: long j> = $l1;

        r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.ThreadFactory h> = $r3;

        r0.<com.seventeenmiles.sketch.cloud.a.j: com.seventeenmiles.sketch.cloud.a.g i> = $r4;

        return;
    }

    private void a(com.seventeenmiles.sketch.cloud.a.l, boolean)
    {
        java.lang.Throwable $r6;
        java.util.concurrent.locks.ReentrantLock $r2;
        long $l0, $l1;
        java.util.concurrent.BlockingQueue $r5;
        java.util.HashSet $r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        int $i2, $i3;
        com.seventeenmiles.sketch.cloud.a.l $r1;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0, $z1;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 := @parameter0: com.seventeenmiles.sketch.cloud.a.l;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label01;

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void c()>();

     label01:
        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
        $l1 = r0.<com.seventeenmiles.sketch.cloud.a.j: long g>;

        $l0 = $r1.<com.seventeenmiles.sketch.cloud.a.l: long c>;

     label03:
        $l0 = $l1 + $l0;

     label04:
        r0.<com.seventeenmiles.sketch.cloud.a.j: long g> = $l0;

        $r3 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.HashSet d>;

        virtualinvoke $r3.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

     label05:
        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void d()>();

        $r4 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i2 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $z1 = staticinvoke <com.seventeenmiles.sketch.cloud.a.j: boolean a(int,int)>($i2, 536870912);

        if $z1 == 0 goto label11;

        if $z0 != 0 goto label10;

        $z0 = r0.<com.seventeenmiles.sketch.cloud.a.j: boolean k>;

        if $z0 == 0 goto label09;

        $i3 = 0;

     label06:
        if $i3 != 0 goto label07;

        $r5 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b>;

        $z0 = interfaceinvoke $r5.<java.util.concurrent.BlockingQueue: boolean isEmpty()>();

        if $z0 != 0 goto label07;

        $i3 = 1;

     label07:
        $i2 = $i2 & 536870911;

        if $i2 < $i3 goto label10;

        return;

     label08:
        $r6 := @caughtexception;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r6;

     label09:
        $i3 = r0.<com.seventeenmiles.sketch.cloud.a.j: int l>;

        goto label06;

     label10:
        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: boolean a(java.lang.Runnable,boolean)>(null, 0);

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
    }

    private void a(java.lang.Runnable)
    {
        com.seventeenmiles.sketch.cloud.a.g $r2;
        java.lang.Runnable $r1;
        com.seventeenmiles.sketch.cloud.a.j r0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: com.seventeenmiles.sketch.cloud.a.g i>;

        interfaceinvoke $r2.<com.seventeenmiles.sketch.cloud.a.g: void a(java.lang.Runnable,com.seventeenmiles.sketch.cloud.a.j)>($r1, r0);

        return;
    }

    private void a(boolean)
    {
        java.lang.Throwable $r7, $r8, $r9;
        java.util.concurrent.locks.ReentrantLock $r1;
        java.util.Iterator $r3;
        java.util.HashSet $r2;
        java.lang.Thread $r6;
        java.lang.Object $r4;
        com.seventeenmiles.sketch.cloud.a.l $r5;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0, $z1;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.HashSet d>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z1 != 0 goto label05;

     label04:
        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label05:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.seventeenmiles.sketch.cloud.a.l) $r4;

        $r6 = $r5.<com.seventeenmiles.sketch.cloud.a.l: java.lang.Thread a>;

        $z1 = virtualinvoke $r6.<java.lang.Thread: boolean isInterrupted()>();

     label06:
        if $z1 != 0 goto label11;

     label07:
        $z1 = virtualinvoke $r5.<com.seventeenmiles.sketch.cloud.a.l: boolean b()>();

     label08:
        if $z1 == 0 goto label11;

     label09:
        virtualinvoke $r6.<java.lang.Thread: void interrupt()>();

     label10:
        virtualinvoke $r5.<com.seventeenmiles.sketch.cloud.a.l: void c()>();

     label11:
        if $z0 != 0 goto label04;

        goto label02;

     label12:
        $r7 := @caughtexception;

     label13:
        virtualinvoke $r5.<com.seventeenmiles.sketch.cloud.a.l: void c()>();

     label14:
        goto label11;

     label15:
        $r8 := @caughtexception;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r8;

     label16:
        $r9 := @caughtexception;

     label17:
        virtualinvoke $r5.<com.seventeenmiles.sketch.cloud.a.l: void c()>();

        throw $r9;

     label18:
        nop;

        catch java.lang.Throwable from label01 to label03 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.SecurityException from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
    }

    private boolean a(int)
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0, $i1;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $i0 := @parameter0: int;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i1 = $i0 + -1;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>($i0, $i1);

        return $z0;
    }

    private static boolean a(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean a(java.lang.Runnable, boolean)
    {
        java.lang.Throwable $r8;
        java.util.concurrent.locks.ReentrantLock $r6;
        java.util.concurrent.BlockingQueue $r3;
        java.lang.Runnable $r1;
        java.util.HashSet $r7;
        java.util.concurrent.atomic.AtomicInteger $r2;
        java.lang.Thread $r5;
        int $i0, $i1, $i2, $i3;
        com.seventeenmiles.sketch.cloud.a.l $r4;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0, $z1;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 := @parameter0: java.lang.Runnable;

        $z0 := @parameter1: boolean;

     label01:
        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i1 = $i0;

        $i0 = $i0 & -536870912;

        if $i0 < 0 goto label02;

        if $i0 != 0 goto label16;

        if $r1 != null goto label16;

        $r3 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b>;

        $z1 = interfaceinvoke $r3.<java.util.concurrent.BlockingQueue: boolean isEmpty()>();

        if $z1 == 0 goto label02;

        return 0;

     label02:
        $i2 = $i1;

        $i1 = $i1 & 536870911;

        if $i1 >= 536870911 goto label16;

        if $z0 == 0 goto label04;

        $i3 = r0.<com.seventeenmiles.sketch.cloud.a.j: int l>;

     label03:
        if $i1 >= $i3 goto label16;

        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i1 = $i2 + 1;

        $z1 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>($i2, $i1);

        if $z1 != 0 goto label05;

        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i2 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i1 = $i2;

        $i2 = $i2 & -536870912;

        if $i2 == $i0 goto label02;

        goto label01;

     label04:
        $i3 = r0.<com.seventeenmiles.sketch.cloud.a.j: int m>;

        goto label03;

     label05:
        $r4 = new com.seventeenmiles.sketch.cloud.a.l;

        specialinvoke $r4.<com.seventeenmiles.sketch.cloud.a.l: void <init>(com.seventeenmiles.sketch.cloud.a.j,java.lang.Runnable)>(r0, $r1);

        $r5 = $r4.<com.seventeenmiles.sketch.cloud.a.l: java.lang.Thread a>;

        $r6 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label06:
        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

     label07:
        $i0 = $i0 & -536870912;

        if $r5 == null goto label08;

        if $i0 < 0 goto label10;

        if $i0 != 0 goto label08;

        if $r1 == null goto label10;

     label08:
        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void c()>();

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void d()>();

     label09:
        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label10:
        $r7 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.HashSet d>;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>($r4);

        $r7 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.HashSet d>;

        $i0 = virtualinvoke $r7.<java.util.HashSet: int size()>();

        $i1 = r0.<com.seventeenmiles.sketch.cloud.a.j: int f>;

     label11:
        if $i0 <= $i1 goto label13;

     label12:
        r0.<com.seventeenmiles.sketch.cloud.a.j: int f> = $i0;

     label13:
        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        virtualinvoke $r5.<java.lang.Thread: void start()>();

        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i0 = $i0 & -536870912;

        if $i0 != 536870912 goto label14;

        $z0 = virtualinvoke $r5.<java.lang.Thread: boolean isInterrupted()>();

        if $z0 != 0 goto label14;

        virtualinvoke $r5.<java.lang.Thread: void interrupt()>();

     label14:
        return 1;

     label15:
        $r8 := @caughtexception;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r8;

     label16:
        return 0;

        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
    }

    private void b(int)
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0, $i1, $i2;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $i0 := @parameter0: int;

     label1:
        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i1 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $z0 = staticinvoke <com.seventeenmiles.sketch.cloud.a.j: boolean b(int,int)>($i1, 0);

        if $z0 != 0 goto label2;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i2 = 536870911 & $i1;

        $i2 = $i2 | 0;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>($i1, $i2);

        if $z0 == 0 goto label1;

     label2:
        return;
    }

    private static boolean b(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void c()
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

     label1:
        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $z0 = specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: boolean a(int)>($i0);

        if $z0 == 0 goto label1;

        return;
    }

    private void d()
    {
        java.lang.Throwable $r5;
        java.util.concurrent.locks.ReentrantLock $r1;
        java.util.concurrent.BlockingQueue $r3;
        java.util.concurrent.locks.Condition $r4;
        java.util.concurrent.atomic.AtomicInteger $r2;
        int $i0, $i1;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

     label01:
        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i0 >= 0 goto label03;

        $z0 = 1;

     label02:
        if $z0 != 0 goto label12;

        $z0 = staticinvoke <com.seventeenmiles.sketch.cloud.a.j: boolean b(int,int)>($i0, 1073741824);

        if $z0 != 0 goto label12;

        $i1 = -536870912 & $i0;

        if $i1 != 0 goto label04;

        $r3 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b>;

        $z0 = interfaceinvoke $r3.<java.util.concurrent.BlockingQueue: boolean isEmpty()>();

        if $z0 != 0 goto label04;

        return;

     label03:
        $z0 = 0;

        goto label02;

     label04:
        $i1 = 536870911 & $i0;

        if $i1 == 0 goto label05;

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void a(boolean)>(1);

        return;

     label05:
        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label06:
        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>($i0, 1073741824);

     label07:
        if $z0 == 0 goto label11;

     label08:
        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(1610612736);

        $r4 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.Condition e>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Condition: void signalAll()>();

     label09:
        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label10:
        $r5 := @caughtexception;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

     label11:
        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label01;

     label12:
        return;

        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private void e()
    {
        java.lang.Throwable $r9;
        java.util.concurrent.locks.ReentrantLock $r1;
        java.util.Iterator $r5;
        java.lang.SecurityManager $r2;
        java.util.HashSet $r4;
        java.lang.Thread $r8;
        java.lang.RuntimePermission $r3;
        java.lang.Object $r6;
        com.seventeenmiles.sketch.cloud.a.l $r7;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r2 == null goto label7;

        $r3 = <com.seventeenmiles.sketch.cloud.a.j: java.lang.RuntimePermission o>;

        virtualinvoke $r2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r3);

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r4 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.HashSet d>;

        $r5 = virtualinvoke $r4.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 != 0 goto label4;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label4:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.seventeenmiles.sketch.cloud.a.l) $r6;

        $r8 = $r7.<com.seventeenmiles.sketch.cloud.a.l: java.lang.Thread a>;

        virtualinvoke $r2.<java.lang.SecurityManager: void checkAccess(java.lang.Thread)>($r8);

     label5:
        goto label2;

     label6:
        $r9 := @caughtexception;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r9;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void f()
    {
        com.seventeenmiles.sketch.cloud.a.j r0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void a(boolean)>(0);

        return;
    }

    private java.lang.Runnable g()
    {
        java.lang.Throwable $r6;
        java.util.concurrent.BlockingQueue $r2;
        long $l4;
        java.lang.Runnable $r5;
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0, $z1;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $z0 = 0;

     label01:
        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i3 = $i2;

        $i2 = $i2 & -536870912;

        if $i2 < 0 goto label03;

        if $i2 >= 536870912 goto label02;

        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b>;

        $z1 = interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: boolean isEmpty()>();

        if $z1 == 0 goto label03;

     label02:
        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void c()>();

        return null;

     label03:
        $i0 = $i3 & 536870911;

        $z1 = r0.<com.seventeenmiles.sketch.cloud.a.j: boolean k>;

        if $z1 != 0 goto label06;

        $i1 = r0.<com.seventeenmiles.sketch.cloud.a.j: int l>;

        if $i0 > $i1 goto label06;

        $z1 = 0;

     label04:
        $i1 = r0.<com.seventeenmiles.sketch.cloud.a.j: int m>;

        if $i0 > $i1 goto label05;

        if $z0 == 0 goto label08;

        if $z1 == 0 goto label12;

     label05:
        $z1 = specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: boolean a(int)>($i3);

        if $z1 == 0 goto label07;

        return null;

     label06:
        $z1 = 1;

        goto label04;

     label07:
        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i3 = $i0;

        $i0 = $i0 & -536870912;

        if $i0 == $i2 goto label03;

        goto label01;

     label08:
        if $z1 == 0 goto label12;

        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b>;

        $l4 = r0.<com.seventeenmiles.sketch.cloud.a.j: long j>;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

     label09:
        $r4 = interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>($l4, $r3);

     label10:
        $r5 = (java.lang.Runnable) $r4;

     label11:
        if $r5 != null goto label16;

        $z0 = 1;

        goto label01;

     label12:
        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b>;

     label13:
        $r4 = interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

     label14:
        $r5 = (java.lang.Runnable) $r4;

        goto label11;

     label15:
        $r6 := @caughtexception;

        $z0 = 0;

        goto label01;

     label16:
        return $r5;

        catch java.lang.InterruptedException from label09 to label10 with label15;
        catch java.lang.InterruptedException from label13 to label14 with label15;
    }

    public final java.util.concurrent.ThreadFactory a()
    {
        java.util.concurrent.ThreadFactory r1;
        com.seventeenmiles.sketch.cloud.a.j r0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.ThreadFactory h>;

        return r1;
    }

    final void a(com.seventeenmiles.sketch.cloud.a.l)
    {
        java.lang.Throwable $r7, $r8, $r9, $r11;
        java.lang.Error $r10;
        long $l1;
        java.lang.RuntimeException $r6;
        java.lang.Runnable $r2, $r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        java.lang.Thread $r5;
        int $i0;
        com.seventeenmiles.sketch.cloud.a.l $r1;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 := @parameter0: com.seventeenmiles.sketch.cloud.a.l;

        $r2 = $r1.<com.seventeenmiles.sketch.cloud.a.l: java.lang.Runnable b>;

        $r1.<com.seventeenmiles.sketch.cloud.a.l: java.lang.Runnable b> = null;

     label01:
        if $r2 != null goto label04;

     label02:
        $r3 = specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: java.lang.Runnable g()>();

     label03:
        $r2 = $r3;

        if $r3 != null goto label04;

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void a(com.seventeenmiles.sketch.cloud.a.l,boolean)>($r1, 0);

        return;

     label04:
        virtualinvoke $r1.<com.seventeenmiles.sketch.cloud.a.l: void a()>();

        $r4 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $z0 = staticinvoke <com.seventeenmiles.sketch.cloud.a.j: boolean a(int,int)>($i0, 536870912);

     label05:
        if $z0 == 0 goto label11;

     label06:
        $z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

     label07:
        if $z0 == 0 goto label11;

     label08:
        $r4 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $z0 = staticinvoke <com.seventeenmiles.sketch.cloud.a.j: boolean b(int,int)>($i0, 536870912);

     label09:
        if $z0 == 0 goto label11;

     label10:
        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r5.<java.lang.Thread: void interrupt()>();

     label11:
        $r5 = $r1.<com.seventeenmiles.sketch.cloud.a.l: java.lang.Thread a>;

     label12:
        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

     label13:
        $l1 = $r1.<com.seventeenmiles.sketch.cloud.a.l: long c>;

     label14:
        $l1 = $l1 + 1L;

     label15:
        $r1.<com.seventeenmiles.sketch.cloud.a.l: long c> = $l1;

        virtualinvoke $r1.<com.seventeenmiles.sketch.cloud.a.l: void c()>();

     label16:
        $r2 = null;

        goto label01;

     label17:
        $r6 := @caughtexception;

     label18:
        throw $r6;

     label19:
        $r7 := @caughtexception;

     label20:
        throw $r7;

     label21:
        $r8 := @caughtexception;

     label22:
        $l1 = $r1.<com.seventeenmiles.sketch.cloud.a.l: long c>;

     label23:
        $l1 = $l1 + 1L;

     label24:
        $r1.<com.seventeenmiles.sketch.cloud.a.l: long c> = $l1;

        virtualinvoke $r1.<com.seventeenmiles.sketch.cloud.a.l: void c()>();

        throw $r8;

     label25:
        $r9 := @caughtexception;

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void a(com.seventeenmiles.sketch.cloud.a.l,boolean)>($r1, 1);

        throw $r9;

     label26:
        $r10 := @caughtexception;

     label27:
        throw $r10;

     label28:
        $r11 := @caughtexception;

     label29:
        $r10 = new java.lang.Error;

        specialinvoke $r10.<java.lang.Error: void <init>(java.lang.Throwable)>($r11);

        throw $r10;

     label30:
        nop;

        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.RuntimeException from label12 to label13 with label17;
        catch java.lang.Error from label12 to label13 with label26;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Throwable from label20 to label21 with label21;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label24 to label25 with label25;
        catch java.lang.Throwable from label27 to label28 with label19;
        catch java.lang.Throwable from label29 to label30 with label19;
    }

    public final boolean awaitTermination(long, java.util.concurrent.TimeUnit)
    {
        java.lang.Throwable $r5;
        java.util.concurrent.locks.ReentrantLock $r2;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.locks.Condition $r4;
        byte $b2;
        java.util.concurrent.atomic.AtomicInteger $r3;
        int $i1;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toNanos(long)>($l0);

        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $z0 = staticinvoke <com.seventeenmiles.sketch.cloud.a.j: boolean b(int,int)>($i1, 1610612736);

     label2:
        if $z0 == 0 goto label3;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 1;

     label3:
        $b2 = $l0 cmp 0L;

        $i1 = (int) $b2;

        if $i1 > 0 goto label4;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label4:
        $r4 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.Condition e>;

        $l0 = interfaceinvoke $r4.<java.util.concurrent.locks.Condition: long awaitNanos(long)>($l0);

     label5:
        goto label1;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public final void b()
    {
        byte $b1;
        int $i2;
        long $l0;
        java.lang.IllegalArgumentException $r1;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $l0 = r0.<com.seventeenmiles.sketch.cloud.a.j: long j>;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Core threads must have nonzero keep alive times");

        throw $r1;

     label1:
        $z0 = r0.<com.seventeenmiles.sketch.cloud.a.j: boolean k>;

        if 1 == $z0 goto label2;

        r0.<com.seventeenmiles.sketch.cloud.a.j: boolean k> = 1;

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void f()>();

     label2:
        return;
    }

    public final void execute(java.lang.Runnable)
    {
        java.util.concurrent.BlockingQueue $r4;
        java.lang.Runnable $r1;
        java.lang.NullPointerException $r2;
        java.util.concurrent.atomic.AtomicInteger $r3;
        int $i0, $i1, $i2;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0, $z1;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 := @parameter0: java.lang.Runnable;

        $z0 = 1;

        if $r1 != null goto label01;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label01:
        $r3 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i2 = $i0;

        $i0 = $i0 & 536870911;

        $i1 = r0.<com.seventeenmiles.sketch.cloud.a.j: int l>;

        if $i0 >= $i1 goto label03;

        $z1 = specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: boolean a(java.lang.Runnable,boolean)>($r1, 1);

        if $z1 == 0 goto label02;

        return;

     label02:
        $r3 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

     label03:
        if $i2 >= 0 goto label06;

        $z1 = 1;

     label04:
        if $z1 == 0 goto label09;

        $r4 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b>;

        $z1 = interfaceinvoke $r4.<java.util.concurrent.BlockingQueue: boolean offer(java.lang.Object)>($r1);

        if $z1 == 0 goto label09;

        $r3 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i2 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i2 >= 0 goto label07;

     label05:
        if $z0 != 0 goto label08;

        $r4 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b>;

        $z0 = interfaceinvoke $r4.<java.util.concurrent.BlockingQueue: boolean remove(java.lang.Object)>($r1);

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void d()>();

        if $z0 == 0 goto label08;

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void a(java.lang.Runnable)>($r1);

        return;

     label06:
        $z1 = 0;

        goto label04;

     label07:
        $z0 = 0;

        goto label05;

     label08:
        $i2 = $i2 & 536870911;

        if $i2 != 0 goto label10;

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: boolean a(java.lang.Runnable,boolean)>(null, 0);

        return;

     label09:
        $z0 = specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: boolean a(java.lang.Runnable,boolean)>($r1, 0);

        if $z0 != 0 goto label10;

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void a(java.lang.Runnable)>($r1);

     label10:
        return;
    }

    protected final void finalize()
    {
        com.seventeenmiles.sketch.cloud.a.j r0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        virtualinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void shutdown()>();

        return;
    }

    public final boolean isShutdown()
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i0 >= 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        return 0;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return 1;
    }

    public final boolean isTerminated()
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $z0 = staticinvoke <com.seventeenmiles.sketch.cloud.a.j: boolean b(int,int)>($i0, 1610612736);

        return $z0;
    }

    public final void shutdown()
    {
        java.lang.Throwable $r2;
        java.util.concurrent.locks.ReentrantLock $r1;
        com.seventeenmiles.sketch.cloud.a.j r0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void e()>();

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void b(int)>(0);

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void a(boolean)>(0);

     label2:
        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void d()>();

        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.util.List shutdownNow()
    {
        java.lang.Throwable $r13, $r14, $r15;
        java.lang.Object[] $r9;
        java.lang.Runnable $r2;
        java.util.ArrayList $r7;
        java.util.HashSet $r4;
        java.lang.Thread $r12;
        int $i0, $i1;
        java.lang.Runnable[] $r8;
        com.seventeenmiles.sketch.cloud.a.l $r11;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r1, $r3;
        java.util.Iterator $r5;
        java.util.concurrent.BlockingQueue $r6;
        java.lang.Object $r10;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $i1 = 0;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void e()>();

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void b(int)>(536870912);

        $r3 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
        $r4 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.HashSet d>;

        $r5 = virtualinvoke $r4.<java.util.HashSet: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label04:
        if $z0 != 0 goto label10;

     label05:
        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        $r6 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b>;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r6.<java.util.concurrent.BlockingQueue: int drainTo(java.util.Collection)>($r7);

        $z0 = interfaceinvoke $r6.<java.util.concurrent.BlockingQueue: boolean isEmpty()>();

     label06:
        if $z0 != 0 goto label09;

     label07:
        $r8 = newarray (java.lang.Runnable)[0];

        $r9 = interfaceinvoke $r6.<java.util.concurrent.BlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r8 = (java.lang.Runnable[]) $r9;

        $i0 = lengthof $r8;

     label08:
        if $i1 < $i0 goto label18;

     label09:
        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        specialinvoke r0.<com.seventeenmiles.sketch.cloud.a.j: void d()>();

        return $r7;

     label10:
        $r10 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.seventeenmiles.sketch.cloud.a.l) $r10;

     label11:
        $r12 = $r11.<com.seventeenmiles.sketch.cloud.a.l: java.lang.Thread a>;

     label12:
        virtualinvoke $r12.<java.lang.Thread: void interrupt()>();

     label13:
        goto label03;

     label14:
        $r13 := @caughtexception;

        goto label03;

     label15:
        $r14 := @caughtexception;

     label16:
        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r14;

     label17:
        $r15 := @caughtexception;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r15;

     label18:
        $r2 = $r8[$i1];

        $z0 = interfaceinvoke $r6.<java.util.concurrent.BlockingQueue: boolean remove(java.lang.Object)>($r2);

     label19:
        if $z0 == 0 goto label21;

     label20:
        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r2);

     label21:
        $i1 = $i1 + 1;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.SecurityException from label12 to label13 with label14;
        catch java.lang.Throwable from label11 to label13 with label15;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label20 to label21 with label17;
    }

    public final java.lang.String toString()
    {
        java.lang.Throwable $r11;
        long $l0, $l2;
        java.util.HashSet $r2;
        java.util.concurrent.atomic.AtomicInteger $r4;
        int $i1, $i3, $i4;
        java.lang.String $r5, $r7;
        com.seventeenmiles.sketch.cloud.a.l $r10;
        com.seventeenmiles.sketch.cloud.a.j r0;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r1;
        java.util.Iterator $r3;
        java.util.concurrent.BlockingQueue $r8;
        java.lang.StringBuilder $r6;
        java.lang.Object $r9;

        r0 := @this: com.seventeenmiles.sketch.cloud.a.j;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.locks.ReentrantLock c>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $l0 = r0.<com.seventeenmiles.sketch.cloud.a.j: long g>;

        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.HashSet d>;

        $i1 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        $r2 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.HashSet d>;

        $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label02:
        $l2 = $l0;

        $i3 = 0;

     label03:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

     label04:
        if $z0 != 0 goto label06;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        $r4 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.atomic.AtomicInteger a>;

        $i4 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $z0 = staticinvoke <com.seventeenmiles.sketch.cloud.a.j: boolean a(int,int)>($i4, 0);

        if $z0 == 0 goto label11;

        $r5 = "Running";

     label05:
        $r6 = new java.lang.StringBuilder;

        $r7 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pool size = ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", active threads = ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", queued tasks = ");

        $r8 = r0.<com.seventeenmiles.sketch.cloud.a.j: java.util.concurrent.BlockingQueue b>;

        $i1 = interfaceinvoke $r8.<java.util.concurrent.BlockingQueue: int size()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", completed tasks = ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label06:
        $r9 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.seventeenmiles.sketch.cloud.a.l) $r9;

        $l0 = $r10.<com.seventeenmiles.sketch.cloud.a.l: long c>;

     label07:
        $l2 = $l2 + $l0;

     label08:
        $z0 = virtualinvoke $r10.<com.seventeenmiles.sketch.cloud.a.l: boolean d()>();

     label09:
        if $z0 == 0 goto label03;

        $i3 = $i3 + 1;

        goto label03;

     label10:
        $r11 := @caughtexception;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r11;

     label11:
        $z0 = staticinvoke <com.seventeenmiles.sketch.cloud.a.j: boolean b(int,int)>($i4, 1610612736);

        if $z0 == 0 goto label12;

        $r5 = "Terminated";

        goto label05;

     label12:
        $r5 = "Shutting down";

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
}
