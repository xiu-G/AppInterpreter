public class proguard.classfile.util.StringSharer extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.constant.visitor.ConstantVisitor, proguard.classfile.attribute.visitor.AttributeVisitor
{
    private java.lang.String name;
    private java.lang.String type;

    public void <init>()
    {
        proguard.classfile.util.StringSharer r0;

        r0 := @this: proguard.classfile.util.StringSharer;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        return;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.util.StringSharer r0;
        int $i0;
        java.lang.String $r3;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.classfile.util.StringSharer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        $r3 = virtualinvoke $r2.<proguard.classfile.attribute.Attribute: java.lang.String getAttributeName(proguard.classfile.Clazz)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String intern()>();

        r0.<proguard.classfile.util.StringSharer: java.lang.String name> = $r3;

        $i0 = $r2.<proguard.classfile.attribute.Attribute: int u2attributeNameIndex>;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, r0);

        return;
    }

    public void visitAnyConstant(proguard.classfile.Clazz, proguard.classfile.constant.Constant)
    {
        proguard.classfile.util.StringSharer r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.Constant $r2;

        r0 := @this: proguard.classfile.util.StringSharer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.Constant;

        return;
    }

    public void visitAnyRefConstant(proguard.classfile.Clazz, proguard.classfile.constant.RefConstant)
    {
        proguard.classfile.Clazz $r1, $r3;
        proguard.classfile.util.StringSharer r0;
        int $i0;
        java.lang.String $r5;
        proguard.classfile.constant.RefConstant $r2;
        proguard.classfile.Member $r4;

        r0 := @this: proguard.classfile.util.StringSharer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.RefConstant;

        $r4 = $r2.<proguard.classfile.constant.RefConstant: proguard.classfile.Member referencedMember>;

        if $r4 == null goto label1;

        $r3 = $r2.<proguard.classfile.constant.RefConstant: proguard.classfile.Clazz referencedClass>;

        $r5 = interfaceinvoke $r4.<proguard.classfile.Member: java.lang.String getName(proguard.classfile.Clazz)>($r3);

        r0.<proguard.classfile.util.StringSharer: java.lang.String name> = $r5;

        $r5 = interfaceinvoke $r4.<proguard.classfile.Member: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r3);

        r0.<proguard.classfile.util.StringSharer: java.lang.String type> = $r5;

        $i0 = $r2.<proguard.classfile.constant.RefConstant: int u2nameAndTypeIndex>;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, r0);

     label1:
        return;
    }

    public void visitAnyStringConstant(proguard.classfile.Clazz, proguard.classfile.constant.StringConstant)
    {
        proguard.classfile.Clazz $r1, $r3;
        proguard.classfile.util.StringSharer r0;
        proguard.classfile.constant.StringConstant $r2;
        int $i0;
        java.lang.String $r4;
        proguard.classfile.Member $r5;

        r0 := @this: proguard.classfile.util.StringSharer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.StringConstant;

        $r5 = $r2.<proguard.classfile.constant.StringConstant: proguard.classfile.Member referencedMember>;

        if $r5 == null goto label1;

        $r3 = $r2.<proguard.classfile.constant.StringConstant: proguard.classfile.Clazz referencedClass>;

        $r4 = interfaceinvoke $r5.<proguard.classfile.Member: java.lang.String getName(proguard.classfile.Clazz)>($r3);

        r0.<proguard.classfile.util.StringSharer: java.lang.String name> = $r4;

        $i0 = $r2.<proguard.classfile.constant.StringConstant: int u2stringIndex>;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, r0);

     label1:
        return;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.constant.ClassConstant $r2;
        proguard.classfile.Clazz $r1, $r4;
        proguard.classfile.util.StringSharer r0;
        int $i0;
        java.lang.String $r3;

        r0 := @this: proguard.classfile.util.StringSharer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r4 = $r2.<proguard.classfile.constant.ClassConstant: proguard.classfile.Clazz referencedClass>;

        if $r4 == null goto label1;

        $r3 = interfaceinvoke $r4.<proguard.classfile.Clazz: java.lang.String getName()>();

        r0.<proguard.classfile.util.StringSharer: java.lang.String name> = $r3;

        $i0 = $r2.<proguard.classfile.constant.ClassConstant: int u2nameIndex>;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, r0);

     label1:
        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.Clazz[] $r5;
        java.lang.String[] $r4;
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.Clazz $r2;
        proguard.classfile.util.StringSharer r0;
        int $i0, $i1;
        java.lang.String $r3;

        r0 := @this: proguard.classfile.util.StringSharer;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 = $r1.<proguard.classfile.LibraryClass: proguard.classfile.Clazz superClass>;

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<proguard.classfile.Clazz: java.lang.String getName()>();

        $r1.<proguard.classfile.LibraryClass: java.lang.String superClassName> = $r3;

     label1:
        $r4 = $r1.<proguard.classfile.LibraryClass: java.lang.String[] interfaceNames>;

        if $r4 == null goto label4;

        $r4 = $r1.<proguard.classfile.LibraryClass: java.lang.String[] interfaceNames>;

        $i0 = lengthof $r4;

        $r5 = newarray (proguard.classfile.Clazz)[$i0];

        $i0 = 0;

     label2:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label4;

        $r2 = $r5[$i0];

        if $r2 == null goto label3;

        $r3 = interfaceinvoke $r2.<proguard.classfile.Clazz: java.lang.String getName()>();

        $r4[$i0] = $r3;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return;
    }

    public void visitNameAndTypeConstant(proguard.classfile.Clazz, proguard.classfile.constant.NameAndTypeConstant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.util.StringSharer r0;
        int $i0;
        proguard.classfile.constant.NameAndTypeConstant $r2;
        java.lang.String $r3;

        r0 := @this: proguard.classfile.util.StringSharer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.NameAndTypeConstant;

        $r3 = r0.<proguard.classfile.util.StringSharer: java.lang.String name>;

        if $r3 == null goto label1;

        $i0 = $r2.<proguard.classfile.constant.NameAndTypeConstant: int u2nameIndex>;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, r0);

        $r3 = r0.<proguard.classfile.util.StringSharer: java.lang.String type>;

        r0.<proguard.classfile.util.StringSharer: java.lang.String name> = $r3;

        $i0 = $r2.<proguard.classfile.constant.NameAndTypeConstant: int u2descriptorIndex>;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, r0);

     label1:
        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.util.StringSharer r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.util.StringSharer;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void constantPoolEntriesAccept(proguard.classfile.constant.visitor.ConstantVisitor)>(r0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void attributesAccept(proguard.classfile.attribute.visitor.AttributeVisitor)>(r0);

        return;
    }

    public void visitUtf8Constant(proguard.classfile.Clazz, proguard.classfile.constant.Utf8Constant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.util.StringSharer r0;
        java.lang.String $r3, $r4;
        proguard.classfile.constant.Utf8Constant $r2;
        boolean $z0;

        r0 := @this: proguard.classfile.util.StringSharer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.Utf8Constant;

        $r3 = r0.<proguard.classfile.util.StringSharer: java.lang.String name>;

        if $r3 == null goto label2;

        $r3 = r0.<proguard.classfile.util.StringSharer: java.lang.String name>;

        $r4 = virtualinvoke $r2.<proguard.classfile.constant.Utf8Constant: java.lang.String getString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r3 = r0.<proguard.classfile.util.StringSharer: java.lang.String name>;

        virtualinvoke $r2.<proguard.classfile.constant.Utf8Constant: void setString(java.lang.String)>($r3);

     label1:
        r0.<proguard.classfile.util.StringSharer: java.lang.String name> = null;

     label2:
        return;
    }
}
