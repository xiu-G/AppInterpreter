public class proguard.shrink.UsagePrinter extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor
{
    private java.lang.String className;
    private final boolean printUnusedItems;
    private final java.io.PrintStream ps;
    private final proguard.shrink.UsageMarker usageMarker;

    public void <init>(proguard.shrink.UsageMarker, boolean)
    {
        proguard.shrink.UsagePrinter r0;
        java.io.PrintStream $r2;
        proguard.shrink.UsageMarker $r1;
        boolean $z0;

        r0 := @this: proguard.shrink.UsagePrinter;

        $r1 := @parameter0: proguard.shrink.UsageMarker;

        $z0 := @parameter1: boolean;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke r0.<proguard.shrink.UsagePrinter: void <init>(proguard.shrink.UsageMarker,boolean,java.io.PrintStream)>($r1, $z0, $r2);

        return;
    }

    public void <init>(proguard.shrink.UsageMarker, boolean, java.io.PrintStream)
    {
        proguard.shrink.UsagePrinter r0;
        java.io.PrintStream $r2;
        proguard.shrink.UsageMarker $r1;
        boolean $z0;

        r0 := @this: proguard.shrink.UsagePrinter;

        $r1 := @parameter0: proguard.shrink.UsageMarker;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.io.PrintStream;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.shrink.UsagePrinter: proguard.shrink.UsageMarker usageMarker> = $r1;

        r0.<proguard.shrink.UsagePrinter: boolean printUnusedItems> = $z0;

        r0.<proguard.shrink.UsagePrinter: java.io.PrintStream ps> = $r2;

        return;
    }

    private static java.lang.String lineNumberRange(proguard.classfile.ProgramClass, proguard.classfile.ProgramMember)
    {
        proguard.classfile.ProgramMember $r1;
        java.lang.StringBuffer $r3;
        java.lang.String $r2;
        proguard.classfile.ProgramClass $r0;

        $r0 := @parameter0: proguard.classfile.ProgramClass;

        $r1 := @parameter1: proguard.classfile.ProgramMember;

        $r2 = virtualinvoke $r1.<proguard.classfile.ProgramMember: java.lang.String getLineNumberRange(proguard.classfile.Clazz)>($r0);

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label1:
        return "";
    }

    private void printClassNameHeader()
    {
        proguard.shrink.UsagePrinter r0;
        java.io.PrintStream $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r1;

        r0 := @this: proguard.shrink.UsagePrinter;

        $r1 = r0.<proguard.shrink.UsagePrinter: java.lang.String className>;

        if $r1 == null goto label1;

        $r2 = r0.<proguard.shrink.UsagePrinter: java.io.PrintStream ps>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r1 = r0.<proguard.shrink.UsagePrinter: java.lang.String className>;

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        r0.<proguard.shrink.UsagePrinter: java.lang.String className> = null;

     label1:
        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.shrink.UsagePrinter r0;
        java.io.PrintStream $r4;
        proguard.shrink.UsageMarker $r2;
        java.lang.String $r3;
        proguard.classfile.ProgramClass $r1;
        boolean $z0;

        r0 := @this: proguard.shrink.UsagePrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = r0.<proguard.shrink.UsagePrinter: proguard.shrink.UsageMarker usageMarker>;

        $z0 = virtualinvoke $r2.<proguard.shrink.UsageMarker: boolean isUsed(proguard.classfile.VisitorAccepter)>($r1);

        if $z0 == 0 goto label2;

        $z0 = r0.<proguard.shrink.UsagePrinter: boolean printUnusedItems>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        r0.<proguard.shrink.UsagePrinter: java.lang.String className> = $r3;

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void fieldsAccept(proguard.classfile.visitor.MemberVisitor)>(r0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void methodsAccept(proguard.classfile.visitor.MemberVisitor)>(r0);

        r0.<proguard.shrink.UsagePrinter: java.lang.String className> = null;

        return;

     label1:
        $r4 = r0.<proguard.shrink.UsagePrinter: java.io.PrintStream ps>;

        $r3 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r3);

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label2:
        $z0 = r0.<proguard.shrink.UsagePrinter: boolean printUnusedItems>;

        if $z0 == 0 goto label3;

        $r4 = r0.<proguard.shrink.UsagePrinter: java.io.PrintStream ps>;

        $r3 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r3);

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label3:
        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        proguard.shrink.UsagePrinter r0;
        java.io.PrintStream $r4;
        proguard.shrink.UsageMarker $r3;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.ProgramField $r2;
        java.lang.StringBuffer $r5;
        int $i0;
        java.lang.String $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: proguard.shrink.UsagePrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r3 = r0.<proguard.shrink.UsagePrinter: proguard.shrink.UsageMarker usageMarker>;

        $z0 = virtualinvoke $r3.<proguard.shrink.UsageMarker: boolean isUsed(proguard.classfile.VisitorAccepter)>($r2);

        $z1 = r0.<proguard.shrink.UsagePrinter: boolean printUnusedItems>;

        $z0 = $z0 ^ $z1;

        if $z0 == 0 goto label1;

        specialinvoke r0.<proguard.shrink.UsagePrinter: void printClassNameHeader()>();

        $r4 = r0.<proguard.shrink.UsagePrinter: java.io.PrintStream ps>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r6 = staticinvoke <proguard.shrink.UsagePrinter: java.lang.String lineNumberRange(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember)>($r1, $r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i0 = virtualinvoke $r2.<proguard.classfile.ProgramField: int getAccessFlags()>();

        $r6 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r7 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r6 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullFieldDescription(int,java.lang.String,java.lang.String)>($i0, $r6, $r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label1:
        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.shrink.UsagePrinter r0;
        java.io.PrintStream $r4;
        proguard.shrink.UsageMarker $r3;
        proguard.classfile.ProgramClass $r1;
        java.lang.StringBuffer $r5;
        proguard.classfile.ProgramMethod $r2;
        int $i0;
        java.lang.String $r6, $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: proguard.shrink.UsagePrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r3 = r0.<proguard.shrink.UsagePrinter: proguard.shrink.UsageMarker usageMarker>;

        $z0 = virtualinvoke $r3.<proguard.shrink.UsageMarker: boolean isUsed(proguard.classfile.VisitorAccepter)>($r2);

        $z1 = r0.<proguard.shrink.UsagePrinter: boolean printUnusedItems>;

        $z0 = $z0 ^ $z1;

        if $z0 == 0 goto label1;

        specialinvoke r0.<proguard.shrink.UsagePrinter: void printClassNameHeader()>();

        $r4 = r0.<proguard.shrink.UsagePrinter: java.io.PrintStream ps>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r6 = staticinvoke <proguard.shrink.UsagePrinter: java.lang.String lineNumberRange(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember)>($r1, $r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $i0 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: int getAccessFlags()>();

        $r7 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r8 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r6 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullMethodDescription(java.lang.String,int,java.lang.String,java.lang.String)>($r6, $i0, $r7, $r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label1:
        return;
    }
}
