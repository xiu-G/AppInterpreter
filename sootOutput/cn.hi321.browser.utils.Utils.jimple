public class cn.hi321.browser.utils.Utils extends java.lang.Object
{
    public static final java.lang.String BY_PLAY_HISTORY_KEY;
    public static final java.lang.String CACHE_UPDATE;
    public static final java.lang.String CLIENT;
    public static final java.lang.String CODE_ERROR_RIGHT;
    public static final java.lang.String CODE_HTTP_FAIL;
    public static final java.lang.String DEMANDFSPS;
    public static final java.lang.String DOWNLOAD_KEY;
    public static final java.lang.String ENTERTAINMEN_DRDATA;
    public static final java.lang.String FALSE;
    public static final java.lang.String FILTER_KEY;
    public static final java.lang.String FIRST_FILTER_DATA_CONFIG;
    public static final java.lang.String FORCE_UPDATE;
    public static final byte HANDLER_DISMISS_PROGRESSDIALOG;
    public static final byte HANDLER_LOGO_HTTP_FAILED;
    public static final byte HANDLER_SESSION_EXPIRED;
    public static final byte HANDLER_SHOW_ERRORMESSAGE;
    public static final byte HANDLER_SHOW_ERRORMESSAGE_GOTO;
    public static final byte HANDLER_SHOW_ERROR_DATA_TOAST;
    public static final byte HANDLER_SHOW_START_ERROR_MESSAGE;
    public static final java.lang.String IS_ENTERTAINMENT;
    public static final java.lang.String KEY_ERROR_MESSAGE;
    public static final java.lang.String LIVEFLAG;
    public static final java.lang.String LIVEPOSITION;
    public static final java.lang.String LIVE_DATA;
    public static final java.lang.String MEDIA_CHANNEL_KEY;
    public static final java.lang.String MEDIA_ITEM;
    public static final java.lang.String MEDIA_KEY;
    public static final java.lang.String MEDIA_OPERATION;
    public static final java.lang.String MICROVIDEO_KEY;
    public static final java.lang.String NULL;
    public static int NUM;
    public static final java.lang.String PLAY_HISTORY_KEY;
    public static final java.lang.String PLAY_LOADING_KEY;
    public static final java.lang.String PLAY_TYPE;
    public static final java.lang.String PRESET_VAULE_FLAG;
    public static final java.lang.String PUSH_ORIGIN_URL;
    public static final java.lang.String TAG;
    public static final java.lang.String THE_LIVE_SHOW_FSPS_INFO;
    public static final java.lang.String TRUE;
    public static final java.lang.String VIDEONAME;
    public static boolean isErrorNum;
    public static boolean isGetData;
    public static boolean isLogined;
    public static boolean isNormalLogin;
    public static boolean isPlayerCrashSystem;
    public static boolean isPlayerCrashVLC;
    public static boolean isTipFilter;
    public static boolean isUploadBfSuccess;
    public static long mAPPstatTime;
    private static android.app.Dialog waitingDialog;

    static void <clinit>()
    {
        <cn.hi321.browser.utils.Utils: java.lang.String VIDEONAME> = "videoname";

        <cn.hi321.browser.utils.Utils: java.lang.String TRUE> = "true";

        <cn.hi321.browser.utils.Utils: java.lang.String THE_LIVE_SHOW_FSPS_INFO> = "liveshowfspsinfo";

        <cn.hi321.browser.utils.Utils: java.lang.String TAG> = "Utils";

        <cn.hi321.browser.utils.Utils: java.lang.String PUSH_ORIGIN_URL> = "http://update.funshion.com/app/pushconfig/?client=";

        <cn.hi321.browser.utils.Utils: java.lang.String PRESET_VAULE_FLAG> = "preset_value";

        <cn.hi321.browser.utils.Utils: java.lang.String PLAY_TYPE> = "playtype";

        <cn.hi321.browser.utils.Utils: java.lang.String PLAY_LOADING_KEY> = "play_loading_key";

        <cn.hi321.browser.utils.Utils: java.lang.String PLAY_HISTORY_KEY> = "play_history_info_key";

        <cn.hi321.browser.utils.Utils: java.lang.String NULL> = "null";

        <cn.hi321.browser.utils.Utils: java.lang.String MICROVIDEO_KEY> = "MICROVIDEO_KEY";

        <cn.hi321.browser.utils.Utils: java.lang.String MEDIA_OPERATION> = "MEDIA_OPERATION";

        <cn.hi321.browser.utils.Utils: java.lang.String MEDIA_KEY> = "media_key";

        <cn.hi321.browser.utils.Utils: java.lang.String MEDIA_ITEM> = "media_item";

        <cn.hi321.browser.utils.Utils: java.lang.String MEDIA_CHANNEL_KEY> = "media_channel_key";

        <cn.hi321.browser.utils.Utils: java.lang.String LIVE_DATA> = "livedata";

        <cn.hi321.browser.utils.Utils: java.lang.String LIVEPOSITION> = "liveposition";

        <cn.hi321.browser.utils.Utils: java.lang.String LIVEFLAG> = "liveflag";

        <cn.hi321.browser.utils.Utils: java.lang.String KEY_ERROR_MESSAGE> = "errorMessage";

        <cn.hi321.browser.utils.Utils: java.lang.String IS_ENTERTAINMENT> = "entertainment";

        <cn.hi321.browser.utils.Utils: byte HANDLER_SHOW_START_ERROR_MESSAGE> = 6;

        <cn.hi321.browser.utils.Utils: byte HANDLER_SHOW_ERROR_DATA_TOAST> = 7;

        <cn.hi321.browser.utils.Utils: byte HANDLER_SHOW_ERRORMESSAGE_GOTO> = 5;

        <cn.hi321.browser.utils.Utils: byte HANDLER_SHOW_ERRORMESSAGE> = 4;

        <cn.hi321.browser.utils.Utils: byte HANDLER_SESSION_EXPIRED> = 1;

        <cn.hi321.browser.utils.Utils: byte HANDLER_LOGO_HTTP_FAILED> = 3;

        <cn.hi321.browser.utils.Utils: byte HANDLER_DISMISS_PROGRESSDIALOG> = 2;

        <cn.hi321.browser.utils.Utils: java.lang.String FORCE_UPDATE> = "forceupdate";

        <cn.hi321.browser.utils.Utils: java.lang.String FIRST_FILTER_DATA_CONFIG> = "first_filter_data_config";

        <cn.hi321.browser.utils.Utils: java.lang.String FILTER_KEY> = "filter_key";

        <cn.hi321.browser.utils.Utils: java.lang.String FALSE> = "false";

        <cn.hi321.browser.utils.Utils: java.lang.String ENTERTAINMEN_DRDATA> = "entertainment_drdata";

        <cn.hi321.browser.utils.Utils: java.lang.String DOWNLOAD_KEY> = "download_key";

        <cn.hi321.browser.utils.Utils: java.lang.String DEMANDFSPS> = "demandata";

        <cn.hi321.browser.utils.Utils: java.lang.String CODE_HTTP_FAIL> = "-1";

        <cn.hi321.browser.utils.Utils: java.lang.String CODE_ERROR_RIGHT> = "0";

        <cn.hi321.browser.utils.Utils: java.lang.String CLIENT> = "aphone";

        <cn.hi321.browser.utils.Utils: java.lang.String CACHE_UPDATE> = "cacheupdate";

        <cn.hi321.browser.utils.Utils: java.lang.String BY_PLAY_HISTORY_KEY> = "by_play_histoty_key";

        <cn.hi321.browser.utils.Utils: long mAPPstatTime> = 0L;

        <cn.hi321.browser.utils.Utils: int NUM> = 0;

        <cn.hi321.browser.utils.Utils: boolean isLogined> = 0;

        <cn.hi321.browser.utils.Utils: boolean isPlayerCrashSystem> = 0;

        <cn.hi321.browser.utils.Utils: boolean isPlayerCrashVLC> = 0;

        <cn.hi321.browser.utils.Utils: boolean isUploadBfSuccess> = 0;

        <cn.hi321.browser.utils.Utils: boolean isTipFilter> = 0;

        <cn.hi321.browser.utils.Utils: boolean isGetData> = 0;

        <cn.hi321.browser.utils.Utils: boolean isNormalLogin> = 1;

        <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog> = null;

        <cn.hi321.browser.utils.Utils: boolean isErrorNum> = 0;

        return;
    }

    public void <init>()
    {
        cn.hi321.browser.utils.Utils r0;

        r0 := @this: cn.hi321.browser.utils.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean checkUri(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.StringBuilder $r4;
        java.lang.String $r3;
        java.lang.Exception r2;
        boolean z0, $z1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        z0 = 0;

        if $r1 == null goto label10;

     label01:
        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("http");

     label02:
        if $z1 != 0 goto label07;

     label03:
        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("rtsp");

     label04:
        if $z1 != 0 goto label07;

     label05:
        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("mms");

     label06:
        if $z1 == 0 goto label11;

     label07:
        z0 = 1;

     label08:
        $r4 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("---checkUri()--getScheme()==");

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.hi321.browser.utils.LogUtil: void i(java.lang.String,java.lang.String)>("Utils", $r3);

     label10:
        return z0;

     label11:
        z0 = 0;

        goto label08;

     label12:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return z0;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label09 to label10 with label12;
    }

    public static void closeWaitingDialog()
    {
        android.app.Dialog $r0;
        java.lang.Exception $r1;

        $r0 = <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog>;

        if $r0 == null goto label4;

        $r0 = <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog>;

     label1:
        virtualinvoke $r0.<android.app.Dialog: void dismiss()>();

     label2:
        <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog> = null;

        return;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getDeviceModel()
    {
        java.lang.Throwable r0;
        java.lang.String r1;
        java.io.UnsupportedEncodingException $r2;

        r1 = <android.os.Build: java.lang.String MODEL>;

     label1:
        r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r1, "UTF-8");

     label2:
        return r1;

     label3:
        r0 := @caughtexception;

        $r2 = (java.io.UnsupportedEncodingException) r0;

        virtualinvoke $r2.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String getDeviceType(android.content.Context)
    {
        android.content.Context r1;
        android.view.WindowManager $r3;
        android.util.DisplayMetrics r0, $r5;
        byte $b1;
        int $i0;
        float $f0;
        android.view.Display $r4;
        android.app.Activity r2;
        double d0, $d1;

        r1 := @parameter0: android.content.Context;

        if r1 != null goto label1;

        return "";

     label1:
        $r5 = new android.util.DisplayMetrics;

        r0 = $r5;

        specialinvoke $r5.<android.util.DisplayMetrics: void <init>()>();

        if r0 == null goto label3;

        r2 = (android.app.Activity) r1;

        $r3 = virtualinvoke r2.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r0);

        $i0 = r0.<android.util.DisplayMetrics: int widthPixels>;

        d0 = (double) $i0;

        d0 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, 2.0);

        $i0 = r0.<android.util.DisplayMetrics: int heightPixels>;

        $d1 = (double) $i0;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);

        d0 = d0 + $d1;

        d0 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        $f0 = r0.<android.util.DisplayMetrics: float density>;

        $f0 = 160.0F * $f0;

        $d1 = (double) $f0;

        d0 = d0 / $d1;

        $b1 = 2.0 cmpg d0;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label2;

        $b1 = 5.0 cmpl d0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label2;

        return "aphone";

     label2:
        return "apad";

     label3:
        return "";
    }

    public static java.lang.String getFileName(java.lang.String)
    {
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 <= 1 goto label1;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $r0 = $r1[$i0];

     label1:
        return $r0;
    }

    public static boolean getFirstStartForceUpdateVaule(android.content.Context)
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("forceupdate", 0);

        $z0 = interfaceinvoke $r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("cacheupdate", 0);

        return $z0;
    }

    public static int getOSVersionSDKINT(android.content.Context)
    {
        int i0;
        android.content.Context $r0;

        $r0 := @parameter0: android.content.Context;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        return i0;
    }

    public static boolean hasNetwork(android.content.Context)
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isCMWAP(android.content.Context)
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: java.lang.String getTypeName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("WIFI");

        if $z0 != 0 goto label2;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: java.lang.String getTypeName()>();

        if $r4 == null goto label2;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: java.lang.String getTypeName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("MOBILE");

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        if $r4 == null goto label2;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("cmwap");

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static boolean isCheckNetAvailable(android.content.Context)
    {
        android.net.ConnectivityManager r3;
        android.content.Context $r0;
        android.net.NetworkInfo $r4;
        java.lang.Object $r2;
        java.lang.Exception r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r3 = (android.net.ConnectivityManager) $r2;

        $r4 = virtualinvoke r3.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label2:
        if $r4 == null goto label5;

     label3:
        $z0 = virtualinvoke $r4.<android.net.NetworkInfo: boolean isAvailable()>();

     label4:
        if $z0 == 0 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return 0;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public static boolean isCheckUriByM3u8(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r3;
        java.lang.Exception r2;
        boolean z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        z0 = 0;

        if $r1 == null goto label08;

     label01:
        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

     label02:
        if $r3 == null goto label05;

     label03:
        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("m3u8");

     label04:
        if z0 != 0 goto label07;

     label05:
        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("rtsp");

     label06:
        if z0 == 0 goto label09;

     label07:
        z0 = 1;

     label08:
        return z0;

     label09:
        z0 = 0;

        goto label08;

     label10:
        r2 := @caughtexception;

        return 0;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
    }

    public static boolean isEmpty(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label1;

        $r1 = "null";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        if $r0 == null goto label2;

        $r1 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isFirstDownload(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        cn.hi321.browser.db.DownloadDao r2;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r2 = new cn.hi321.browser.db.DownloadDao;

        specialinvoke r2.<cn.hi321.browser.db.DownloadDao: void <init>(android.content.Context)>($r0);

        $z0 = virtualinvoke r2.<cn.hi321.browser.db.DownloadDao: boolean isFirst(java.lang.String)>($r1);

        return $z0;
    }

    public static boolean isMailAddress(java.lang.String)
    {
        java.util.regex.Matcher $r3;
        java.lang.String $r0;
        java.util.regex.Pattern $r2;
        java.lang.Exception r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.([a-zA-Z0-9_-])+)+$");

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

     label2:
        return $z0;

     label3:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isNetworkUri(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r2;
        java.lang.Exception r1;
        boolean z0, $z1;

        $r0 := @parameter0: android.net.Uri;

        z0 = 0;

     label01:
        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String toString()>();

        $z1 = staticinvoke <cn.hi321.browser.utils.StringUtil: boolean isEmpty(java.lang.String)>($r2);

     label02:
        if $z1 != 0 goto label14;

     label03:
        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String getScheme()>();

     label04:
        if $r2 == null goto label15;

     label05:
        z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("http");

     label06:
        if z0 != 0 goto label13;

     label07:
        z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("www");

     label08:
        if z0 != 0 goto label13;

     label09:
        z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("rtsp");

     label10:
        if z0 != 0 goto label13;

     label11:
        z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("mms");

     label12:
        if z0 == 0 goto label15;

     label13:
        z0 = 1;

     label14:
        return z0;

     label15:
        z0 = 0;

        goto label14;

     label16:
        r1 := @caughtexception;

        return 0;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label16;
        catch java.lang.Exception from label11 to label12 with label16;
    }

    public static boolean isNumber(java.lang.String)
    {
        java.util.regex.Matcher $r3;
        java.lang.String $r0;
        java.util.regex.Pattern $r2;
        java.lang.Exception r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[0-9]*");

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

     label2:
        return $z0;

     label3:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isPhoneNumber(java.lang.String)
    {
        java.util.regex.Matcher $r3;
        int $i0;
        java.lang.String $r0;
        java.util.regex.Pattern $r2;
        java.lang.Exception r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^((13[0-9])|(14[0-9])|(15[0-9])|(18[0-9]))\\d{8}$");

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = staticinvoke <cn.hi321.browser.utils.Utils: boolean isNumber(java.lang.String)>($r0);

     label2:
        if $z0 == 0 goto label8;

     label3:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label4:
        if $i0 != 11 goto label8;

     label5:
        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

     label6:
        if $z0 == 0 goto label8;

        return 1;

     label7:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

     label8:
        return 0;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static boolean isQQNumber(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        java.lang.Exception r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("0");

     label2:
        if $z0 != 0 goto label6;

     label3:
        $z0 = staticinvoke <cn.hi321.browser.utils.Utils: boolean isNumber(java.lang.String)>($r0);

     label4:
        if $z0 == 0 goto label6;

        if $i0 < 5 goto label6;

        if $i0 >= 11 goto label6;

        return 1;

     label5:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

     label6:
        return 0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static boolean isSDcardExist()
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void netNoPlayeDialog(android.content.Context)
    {
        android.content.Context $r0;
        android.app.AlertDialog$Builder r1;
        cn.hi321.browser.utils.Utils$1 $r2;

        $r0 := @parameter0: android.content.Context;

        r1 = new android.app.AlertDialog$Builder;

        specialinvoke r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r0);

        virtualinvoke r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("\u63d0\u793a");

        virtualinvoke r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("\u6682\u65f6\u53ea\u652f\u6301android_2.1\u4ee5\u4e0a\u7cfb\u7edf");

        $r2 = new cn.hi321.browser.utils.Utils$1;

        specialinvoke $r2.<cn.hi321.browser.utils.Utils$1: void <init>()>();

        virtualinvoke r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("\u786e\u5b9a", $r2);

        virtualinvoke r1.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();

        return;
    }

    public static int reportNetType(android.content.Context)
    {
        android.net.ConnectivityManager r3;
        android.content.Context $r0;
        android.net.NetworkInfo $r4;
        java.lang.Exception r1;
        byte b0;
        int $i1;
        java.lang.Object $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        b0 = 0;

        if $r0 == null goto label06;

     label01:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r3 = (android.net.ConnectivityManager) $r2;

        $r4 = virtualinvoke r3.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label02:
        if $r4 == null goto label05;

     label03:
        $z0 = virtualinvoke $r4.<android.net.NetworkInfo: boolean isAvailable()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        b0 = -1;

     label06:
        return b0;

     label07:
        $i1 = virtualinvoke $r4.<android.net.NetworkInfo: int getType()>();

     label08:
        if $i1 != 1 goto label09;

        b0 = 1;

        goto label06;

     label09:
        if $i1 != 0 goto label06;

        b0 = 2;

        goto label06;

     label10:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return 3;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label07 to label08 with label10;
    }

    public static void setIsFirstStartForceUpdate(boolean, android.content.Context)
    {
        android.content.SharedPreferences$Editor $r2;
        android.content.Context $r0;
        android.content.SharedPreferences $r1;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: android.content.Context;

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("forceupdate", 0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("cacheupdate", $z0);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static void showToast(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        android.widget.Toast $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, "\u4eb2\u7f51\u7edc\u5f02\u5e38,", 0);

        virtualinvoke $r2.<android.widget.Toast: void show()>();

        return;
    }

    public static void startWaitingDialog(android.content.Context)
    {
        android.content.Context $r0;
        android.app.Dialog $r2;
        java.lang.Exception r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r2 = <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog>;

        if $r2 != null goto label07;

        $r2 = new android.app.Dialog;

     label01:
        specialinvoke $r2.<android.app.Dialog: void <init>(android.content.Context,int)>($r0, 2131165203);

     label02:
        <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog> = $r2;

        $r2 = <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog>;

     label03:
        virtualinvoke $r2.<android.app.Dialog: void setContentView(int)>(2130903099);

     label04:
        $r2 = <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog>;

     label05:
        virtualinvoke $r2.<android.app.Dialog: void show()>();

     label06:
        return;

     label07:
        $r2 = <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog>;

        if $r2 == null goto label17;

        $r2 = <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog>;

     label08:
        $z0 = virtualinvoke $r2.<android.app.Dialog: boolean isShowing()>();

     label09:
        if $z0 != 0 goto label17;

        $r2 = <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog>;

     label10:
        virtualinvoke $r2.<android.app.Dialog: void setContentView(int)>(2130903099);

     label11:
        $r2 = <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog>;

     label12:
        virtualinvoke $r2.<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>(0);

     label13:
        $r2 = <cn.hi321.browser.utils.Utils: android.app.Dialog waitingDialog>;

     label14:
        virtualinvoke $r2.<android.app.Dialog: void show()>();

     label15:
        return;

     label16:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

     label17:
        return;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    public static void unbindDrawables(android.view.View)
    {
        android.graphics.drawable.Drawable $r2;
        java.lang.Exception r0;
        android.view.ViewGroup $r3;
        int i0, $i1;
        android.view.View r1, $r4;
        boolean $z0;

        r1 := @parameter0: android.view.View;

        if r1 != null goto label01;

        return;

     label01:
        $r2 = virtualinvoke r1.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

     label02:
        if $r2 == null goto label04;

     label03:
        $r2 = virtualinvoke r1.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label04:
        $z0 = r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label12;

        i0 = 0;

     label05:
        $r3 = (android.view.ViewGroup) r1;

        $i1 = virtualinvoke $r3.<android.view.ViewGroup: int getChildCount()>();

     label06:
        if i0 < $i1 goto label10;

     label07:
        $r3 = (android.view.ViewGroup) r1;

        virtualinvoke $r3.<android.view.ViewGroup: void removeAllViews()>();

     label08:
        return;

     label09:
        r0 := @caughtexception;

        virtualinvoke r0.<java.lang.Exception: void printStackTrace()>();

        return;

     label10:
        $r3 = (android.view.ViewGroup) r1;

        $r4 = virtualinvoke $r3.<android.view.ViewGroup: android.view.View getChildAt(int)>(i0);

        staticinvoke <cn.hi321.browser.utils.Utils: void unbindDrawables(android.view.View)>($r4);

     label11:
        i0 = i0 + 1;

        goto label05;

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label09;
    }
}
