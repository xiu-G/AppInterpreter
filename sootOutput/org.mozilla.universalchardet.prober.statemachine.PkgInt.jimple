public class org.mozilla.universalchardet.prober.statemachine.PkgInt extends java.lang.Object
{
    public static final int BIT_SHIFT_16BITS;
    public static final int BIT_SHIFT_4BITS;
    public static final int BIT_SHIFT_8BITS;
    public static final int INDEX_SHIFT_16BITS;
    public static final int INDEX_SHIFT_4BITS;
    public static final int INDEX_SHIFT_8BITS;
    public static final int SHIFT_MASK_16BITS;
    public static final int SHIFT_MASK_4BITS;
    public static final int SHIFT_MASK_8BITS;
    public static final int UNIT_MASK_16BITS;
    public static final int UNIT_MASK_4BITS;
    public static final int UNIT_MASK_8BITS;
    private int bitShift;
    private int[] data;
    private int indexShift;
    private int shiftMask;
    private int unitMask;

    public void <init>(int, int, int, int, int[])
    {
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        org.mozilla.universalchardet.prober.statemachine.PkgInt r0;

        r0 := @this: org.mozilla.universalchardet.prober.statemachine.PkgInt;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.universalchardet.prober.statemachine.PkgInt: int indexShift> = 3;

        r0.<org.mozilla.universalchardet.prober.statemachine.PkgInt: int shiftMask> = 7;

        r0.<org.mozilla.universalchardet.prober.statemachine.PkgInt: int bitShift> = 2;

        r0.<org.mozilla.universalchardet.prober.statemachine.PkgInt: int unitMask> = 15;

        r0.<org.mozilla.universalchardet.prober.statemachine.PkgInt: int[] data> = $r1;

        return;
    }

    public static int pack16bits(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1 = $i1 << 16;

        $i0 = $i1 | $i0;

        return $i0;
    }

    public static int pack4bits(int, int, int, int, int, int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $i6 := @parameter6: int;

        $i7 := @parameter7: int;

        $i1 = $i1 << 4;

        $i0 = $i1 | $i0;

        $i1 = $i3 << 4;

        $i1 = $i1 | $i2;

        $i2 = $i5 << 4;

        $i2 = $i2 | $i4;

        $i3 = $i7 << 4;

        $i3 = $i3 | $i6;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack8bits(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $i0;
    }

    public static int pack8bits(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i1 = $i1 << 8;

        $i0 = $i1 | $i0;

        $i1 = $i3 << 8;

        $i1 = $i1 | $i2;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack16bits(int,int)>($i0, $i1);

        return $i0;
    }

    public int unpack(int)
    {
        int[] $r1;
        int $i0, $i1, $i2;
        org.mozilla.universalchardet.prober.statemachine.PkgInt r0;

        r0 := @this: org.mozilla.universalchardet.prober.statemachine.PkgInt;

        $i0 := @parameter0: int;

        $r1 = r0.<org.mozilla.universalchardet.prober.statemachine.PkgInt: int[] data>;

        $i1 = r0.<org.mozilla.universalchardet.prober.statemachine.PkgInt: int indexShift>;

        $i1 = $i0 >> $i1;

        $i1 = $r1[$i1];

        $i2 = r0.<org.mozilla.universalchardet.prober.statemachine.PkgInt: int shiftMask>;

        $i2 = $i2 & $i0;

        $i0 = r0.<org.mozilla.universalchardet.prober.statemachine.PkgInt: int bitShift>;

        $i0 = $i2 << $i0;

        $i0 = $i1 >> $i0;

        $i1 = r0.<org.mozilla.universalchardet.prober.statemachine.PkgInt: int unitMask>;

        $i0 = $i0 & $i1;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int UNIT_MASK_8BITS> = 255;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int UNIT_MASK_4BITS> = 15;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int UNIT_MASK_16BITS> = 65535;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int SHIFT_MASK_8BITS> = 3;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int SHIFT_MASK_4BITS> = 7;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int SHIFT_MASK_16BITS> = 1;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int INDEX_SHIFT_8BITS> = 2;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int INDEX_SHIFT_4BITS> = 3;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int INDEX_SHIFT_16BITS> = 1;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int BIT_SHIFT_8BITS> = 3;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int BIT_SHIFT_4BITS> = 2;

        <org.mozilla.universalchardet.prober.statemachine.PkgInt: int BIT_SHIFT_16BITS> = 4;

        return;
    }
}
