public class org.htmlparser.filters.CssSelectorNodeFilter extends java.lang.Object implements org.htmlparser.NodeFilter
{
    private static java.util.regex.Pattern a;
    private org.htmlparser.NodeFilter b;
    private java.util.regex.Matcher c;
    private int d;
    private java.lang.String e;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("(/\\*.*?\\*/) | (   \".*?[^\"]\" | \'.*?[^\']\' | \"\" | \'\' ) | ( [\\~\\*\\$\\^\\|]? = ) | ( [a-zA-Z_\\*](?:[a-zA-Z0-9_-]|\\\\.)* ) | \\s*( [+>~\\s] )\\s* | ( [\\.\\[\\]\\#\\:)(] ) | ( [\\,] ) | ( . )", 38);

        <org.htmlparser.filters.CssSelectorNodeFilter: java.util.regex.Pattern a> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.htmlparser.filters.CssSelectorNodeFilter r0;
        org.htmlparser.NodeFilter $r4;
        java.util.regex.Matcher $r3;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;
        boolean $z0;

        r0 := @this: org.htmlparser.filters.CssSelectorNodeFilter;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.util.regex.Matcher c> = null;

        r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d> = 0;

        r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e> = null;

        $r2 = <org.htmlparser.filters.CssSelectorNodeFilter: java.util.regex.Pattern a>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.util.regex.Matcher c> = $r3;

        $z0 = specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: org.htmlparser.NodeFilter b()>();

        r0.<org.htmlparser.filters.CssSelectorNodeFilter: org.htmlparser.NodeFilter b> = $r4;

     label1:
        return;
    }

    private boolean a()
    {
        org.htmlparser.filters.CssSelectorNodeFilter r0;
        java.util.regex.Matcher $r1;
        int $i0, $i1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.htmlparser.filters.CssSelectorNodeFilter;

        $r1 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.util.regex.Matcher c>;

        if $r1 == null goto label3;

        $r1 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.util.regex.Matcher c>;

        $z0 = virtualinvoke $r1.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        $i0 = 1;

     label1:
        $r1 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.util.regex.Matcher c>;

        $i1 = virtualinvoke $r1.<java.util.regex.Matcher: int groupCount()>();

        if $i0 >= $i1 goto label3;

        $r1 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.util.regex.Matcher c>;

        $r2 = virtualinvoke $r1.<java.util.regex.Matcher: java.lang.String group(int)>($i0);

        if $r2 == null goto label2;

        r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d> = $i0;

        $r1 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.util.regex.Matcher c>;

        $r2 = virtualinvoke $r1.<java.util.regex.Matcher: java.lang.String group(int)>($i0);

        r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e> = $r2;

        return 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d> = 0;

        r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e> = null;

        return 0;
    }

    private org.htmlparser.NodeFilter b()
    {
        org.htmlparser.filters.CssSelectorNodeFilter r0;
        org.htmlparser.filters.CssSelectorNodeFilter$HasAncestorFilter $r5;
        char $c1;
        org.htmlparser.filters.OrFilter $r8;
        org.htmlparser.NodeFilter $r1, $r3;
        org.htmlparser.filters.AndFilter $r4;
        org.htmlparser.filters.HasParentFilter $r7;
        int $i0;
        org.htmlparser.filters.CssSelectorNodeFilter$AdjacentFilter $r6;
        java.lang.String $r2;

        r0 := @this: org.htmlparser.filters.CssSelectorNodeFilter;

        $r1 = null;

     label01:
        $i0 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d>;

        lookupswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label02;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label05;
            case 6: goto label03;
            case 7: goto label10;
            default: goto label02;
        };

     label02:
        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        if $r2 != null goto label01;

        return $r1;

     label03:
        if $r1 != null goto label04;

        $r1 = specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: org.htmlparser.NodeFilter c()>();

        goto label02;

     label04:
        $r4 = new org.htmlparser.filters.AndFilter;

        $r3 = specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: org.htmlparser.NodeFilter c()>();

        specialinvoke $r4.<org.htmlparser.filters.AndFilter: void <init>(org.htmlparser.NodeFilter,org.htmlparser.NodeFilter)>($r1, $r3);

        $r1 = $r4;

        goto label02;

     label05:
        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $i0 = (int) $c1;

        lookupswitch($i0)
        {
            case 43: goto label08;
            case 62: goto label09;
            default: goto label06;
        };

     label06:
        $r5 = new org.htmlparser.filters.CssSelectorNodeFilter$HasAncestorFilter;

        specialinvoke $r5.<org.htmlparser.filters.CssSelectorNodeFilter$HasAncestorFilter: void <init>(org.htmlparser.NodeFilter)>($r1);

        $r1 = $r5;

     label07:
        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        goto label02;

     label08:
        $r6 = new org.htmlparser.filters.CssSelectorNodeFilter$AdjacentFilter;

        specialinvoke $r6.<org.htmlparser.filters.CssSelectorNodeFilter$AdjacentFilter: void <init>(org.htmlparser.NodeFilter)>($r1);

        $r1 = $r6;

        goto label07;

     label09:
        $r7 = new org.htmlparser.filters.HasParentFilter;

        specialinvoke $r7.<org.htmlparser.filters.HasParentFilter: void <init>(org.htmlparser.NodeFilter)>($r1);

        $r1 = $r7;

        goto label07;

     label10:
        $r8 = new org.htmlparser.filters.OrFilter;

        $r3 = specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: org.htmlparser.NodeFilter b()>();

        specialinvoke $r8.<org.htmlparser.filters.OrFilter: void <init>(org.htmlparser.NodeFilter,org.htmlparser.NodeFilter)>($r1, $r3);

        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        $r1 = $r8;

        goto label02;
    }

    private org.htmlparser.NodeFilter c()
    {
        org.htmlparser.filters.CssSelectorNodeFilter r0;
        org.htmlparser.filters.CssSelectorNodeFilter$YesFilter $r8;
        org.htmlparser.NodeFilter $r1, $r7;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        char $c1;
        java.lang.IllegalArgumentException $r12;
        org.htmlparser.filters.TagNameFilter $r4, $r9;
        org.htmlparser.filters.HasAttributeFilter $r6, $r13;
        org.htmlparser.filters.AndFilter $r10;
        java.lang.StringBuilder $r5, $r11;

        r0 := @this: org.htmlparser.filters.CssSelectorNodeFilter;

        $r1 = null;

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        if $r2 == null goto label21;

        $z0 = 0;

     label01:
        $i0 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d>;

        lookupswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label02;
            case 3: goto label02;
            case 4: goto label05;
            case 5: goto label02;
            case 6: goto label09;
            default: goto label02;
        };

     label02:
        $z0 = 1;

     label03:
        if $z0 != 0 goto label22;

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        if $r2 != null goto label01;

        return $r1;

     label04:
        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        goto label03;

     label05:
        $r2 = "*";

        $r3 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label07;

        $r8 = new org.htmlparser.filters.CssSelectorNodeFilter$YesFilter;

        $r1 = $r8;

        specialinvoke $r8.<org.htmlparser.filters.CssSelectorNodeFilter$YesFilter: void <init>()>();

     label06:
        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        goto label03;

     label07:
        if $r1 != null goto label08;

        $r4 = new org.htmlparser.filters.TagNameFilter;

        $r1 = $r4;

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r2 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r2);

        specialinvoke $r4.<org.htmlparser.filters.TagNameFilter: void <init>(java.lang.String)>($r2);

        goto label06;

     label08:
        $r10 = new org.htmlparser.filters.AndFilter;

        $r9 = new org.htmlparser.filters.TagNameFilter;

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r2 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r2);

        specialinvoke $r9.<org.htmlparser.filters.TagNameFilter: void <init>(java.lang.String)>($r2);

        specialinvoke $r10.<org.htmlparser.filters.AndFilter: void <init>(org.htmlparser.NodeFilter,org.htmlparser.NodeFilter)>($r1, $r9);

        $r1 = $r10;

        goto label06;

     label09:
        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $i0 = (int) $c1;

        lookupswitch($i0)
        {
            case 35: goto label14;
            case 46: goto label11;
            case 58: goto label17;
            case 91: goto label19;
            default: goto label10;
        };

     label10:
        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        goto label03;

     label11:
        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        $i0 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d>;

        if $i0 == 4 goto label12;

        $r12 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Syntax error at ");

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r12;

     label12:
        if $r1 != null goto label13;

        $r6 = new org.htmlparser.filters.HasAttributeFilter;

        $r1 = $r6;

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r2 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r2);

        specialinvoke $r6.<org.htmlparser.filters.HasAttributeFilter: void <init>(java.lang.String,java.lang.String)>("class", $r2);

        goto label10;

     label13:
        $r10 = new org.htmlparser.filters.AndFilter;

        $r13 = new org.htmlparser.filters.HasAttributeFilter;

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r2 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r2);

        specialinvoke $r13.<org.htmlparser.filters.HasAttributeFilter: void <init>(java.lang.String,java.lang.String)>("class", $r2);

        specialinvoke $r10.<org.htmlparser.filters.AndFilter: void <init>(org.htmlparser.NodeFilter,org.htmlparser.NodeFilter)>($r1, $r13);

        $r1 = $r10;

        goto label10;

     label14:
        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        $i0 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d>;

        if $i0 == 4 goto label15;

        $r12 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Syntax error at ");

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r12;

     label15:
        if $r1 != null goto label16;

        $r6 = new org.htmlparser.filters.HasAttributeFilter;

        $r1 = $r6;

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r2 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r2);

        specialinvoke $r6.<org.htmlparser.filters.HasAttributeFilter: void <init>(java.lang.String,java.lang.String)>("id", $r2);

        goto label10;

     label16:
        $r10 = new org.htmlparser.filters.AndFilter;

        $r13 = new org.htmlparser.filters.HasAttributeFilter;

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r2 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r2);

        specialinvoke $r13.<org.htmlparser.filters.HasAttributeFilter: void <init>(java.lang.String,java.lang.String)>("id", $r2);

        specialinvoke $r10.<org.htmlparser.filters.AndFilter: void <init>(org.htmlparser.NodeFilter,org.htmlparser.NodeFilter)>($r1, $r13);

        $r1 = $r10;

        goto label10;

     label17:
        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        if $r1 != null goto label18;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pseudoclasses not implemented yet");

        throw $r12;

     label18:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pseudoclasses not implemented yet");

        throw $r12;

     label19:
        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        if $r1 != null goto label20;

        $r1 = specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: org.htmlparser.NodeFilter d()>();

        goto label10;

     label20:
        $r10 = new org.htmlparser.filters.AndFilter;

        $r7 = specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: org.htmlparser.NodeFilter d()>();

        specialinvoke $r10.<org.htmlparser.filters.AndFilter: void <init>(org.htmlparser.NodeFilter,org.htmlparser.NodeFilter)>($r1, $r7);

        $r1 = $r10;

        goto label10;

     label21:
        return null;

     label22:
        return $r1;
    }

    private org.htmlparser.NodeFilter d()
    {
        org.htmlparser.filters.CssSelectorNodeFilter r0;
        java.lang.IllegalArgumentException $r6;
        org.htmlparser.filters.HasAttributeFilter $r4;
        org.htmlparser.NodeFilter $r5;
        org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter $r9;
        int $i0;
        java.lang.StringBuilder $r7;
        java.lang.String $r1, $r2, $r3, $r8;
        boolean $z0;

        r0 := @this: org.htmlparser.filters.CssSelectorNodeFilter;

        $i0 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d>;

        if $i0 != 4 goto label8;

        $r1 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        $r2 = "]";

        $r3 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = new org.htmlparser.filters.HasAttributeFilter;

        $r1 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r1);

        specialinvoke $r4.<org.htmlparser.filters.HasAttributeFilter: void <init>(java.lang.String)>($r1);

        $r5 = $r4;

     label1:
        if $r5 != null goto label7;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Syntax error at ");

        $r1 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $i0 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label2:
        $i0 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d>;

        if $i0 != 3 goto label8;

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        $i0 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d>;

        if $i0 != 2 goto label4;

        $r3 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r8 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $r3 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r3);

     label3:
        $r8 = "~=";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

        if $r3 == null goto label5;

        $r9 = new org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter;

        $r1 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\b");

        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("([^a-zA-Z0-9])", "\\\\$1");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\b");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        $r5 = $r9;

        goto label1;

     label4:
        $i0 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: int d>;

        if $i0 != 4 goto label9;

        $r3 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String e>;

        $r3 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r3);

        goto label3;

     label5:
        $r8 = "|=";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label6;

        if $r3 == null goto label6;

        $r9 = new org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter;

        $r1 = staticinvoke <org.htmlparser.filters.CssSelectorNodeFilter: java.lang.String unescape(java.lang.String)>($r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("([^a-zA-Z0-9])", "\\\\$1");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\-[^a-zA-Z0-9]*");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        $r5 = $r9;

        goto label1;

     label6:
        $r8 = "=";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label8;

        if $r3 == null goto label8;

        $r4 = new org.htmlparser.filters.HasAttributeFilter;

        specialinvoke $r4.<org.htmlparser.filters.HasAttributeFilter: void <init>(java.lang.String,java.lang.String)>($r1, $r3);

        $r5 = $r4;

        goto label1;

     label7:
        specialinvoke r0.<org.htmlparser.filters.CssSelectorNodeFilter: boolean a()>();

        return $r5;

     label8:
        $r5 = null;

        goto label1;

     label9:
        $r3 = null;

        goto label3;
    }

    public static java.lang.String unescape(java.lang.String)
    {
        java.util.regex.Matcher $r3;
        java.lang.StringBuffer $r1;
        int $i0;
        char $c1;
        java.lang.String $r0;
        java.util.regex.Pattern $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\\\(?:([a-fA-F0-9]{2,6})|(.))");

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

     label1:
        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        $r0 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        if $r0 == null goto label2;

        $r0 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, 16);

        $c1 = (char) $i0;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c1);

        virtualinvoke $r3.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>($r1, $r0);

        goto label1;

     label2:
        $r0 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        if $r0 == null goto label1;

        $r0 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        virtualinvoke $r3.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>($r1, $r0);

        goto label1;

     label3:
        virtualinvoke $r3.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>($r1);

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public boolean accept(org.htmlparser.Node)
    {
        org.htmlparser.filters.CssSelectorNodeFilter r0;
        org.htmlparser.NodeFilter $r2;
        org.htmlparser.Node $r1;
        boolean $z0;

        r0 := @this: org.htmlparser.filters.CssSelectorNodeFilter;

        $r1 := @parameter0: org.htmlparser.Node;

        $r2 = r0.<org.htmlparser.filters.CssSelectorNodeFilter: org.htmlparser.NodeFilter b>;

        $z0 = interfaceinvoke $r2.<org.htmlparser.NodeFilter: boolean accept(org.htmlparser.Node)>($r1);

        return $z0;
    }
}
