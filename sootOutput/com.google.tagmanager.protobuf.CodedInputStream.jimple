public final class com.google.tagmanager.protobuf.CodedInputStream extends java.lang.Object
{
    private static final int BUFFER_SIZE;
    private static final int DEFAULT_RECURSION_LIMIT;
    private static final int DEFAULT_SIZE_LIMIT;
    private final byte[] buffer;
    private final boolean bufferIsImmutable;
    private int bufferPos;
    private int bufferSize;
    private int bufferSizeAfterLimit;
    private int currentLimit;
    private boolean enableAliasing;
    private final java.io.InputStream input;
    private int lastTag;
    private int recursionDepth;
    private int recursionLimit;
    private com.google.tagmanager.protobuf.CodedInputStream$RefillCallback refillCallback;
    private int sizeLimit;
    private int totalBytesRetired;

    private void <init>(com.google.tagmanager.protobuf.LiteralByteString)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        byte[] $r2;
        int $i0, $i1;
        com.google.tagmanager.protobuf.LiteralByteString $r1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $r1 := @parameter0: com.google.tagmanager.protobuf.LiteralByteString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean enableAliasing> = 0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit> = 2147483647;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit> = 64;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int sizeLimit> = 67108864;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream$RefillCallback refillCallback> = null;

        $r2 = $r1.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer> = $r2;

        $i0 = virtualinvoke $r1.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i0;

        $i0 = virtualinvoke $r1.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke $r1.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        $i0 = $i0 + $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize> = $i0;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = neg $i0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired> = $i0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: java.io.InputStream input> = null;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean bufferIsImmutable> = 1;

        return;
    }

    private void <init>(java.io.InputStream)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        byte[] $r2;
        java.io.InputStream $r1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean enableAliasing> = 0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit> = 2147483647;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit> = 64;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int sizeLimit> = 67108864;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream$RefillCallback refillCallback> = null;

        $r2 = newarray (byte)[4096];

        r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer> = $r2;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize> = 0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = 0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired> = 0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: java.io.InputStream input> = $r1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean bufferIsImmutable> = 0;

        return;
    }

    private void <init>(byte[], int, int)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean enableAliasing> = 0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit> = 2147483647;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit> = 64;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int sizeLimit> = 67108864;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream$RefillCallback refillCallback> = null;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer> = $r1;

        $i1 = $i0 + $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize> = $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i0;

        $i0 = neg $i0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired> = $i0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: java.io.InputStream input> = null;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean bufferIsImmutable> = 0;

        return;
    }

    static int access$000(com.google.tagmanager.protobuf.CodedInputStream)
    {
        com.google.tagmanager.protobuf.CodedInputStream $r0;
        int i0;

        $r0 := @parameter0: com.google.tagmanager.protobuf.CodedInputStream;

        i0 = $r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        return i0;
    }

    static byte[] access$100(com.google.tagmanager.protobuf.CodedInputStream)
    {
        com.google.tagmanager.protobuf.CodedInputStream $r0;
        byte[] r1;

        $r0 := @parameter0: com.google.tagmanager.protobuf.CodedInputStream;

        r1 = $r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        return r1;
    }

    public static int decodeZigZag32(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = $i0 >>> 1;

        $i0 = $i0 & 1;

        $i0 = neg $i0;

        $i0 = $i1 ^ $i0;

        return $i0;
    }

    public static long decodeZigZag64(long)
    {
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 = $l0 >>> 1;

        $l0 = 1L & $l0;

        $l0 = neg $l0;

        $l0 = $l1 ^ $l0;

        return $l0;
    }

    static com.google.tagmanager.protobuf.CodedInputStream newInstance(com.google.tagmanager.protobuf.LiteralByteString)
    {
        com.google.tagmanager.protobuf.CodedInputStream $r1;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r2;
        int $i0;
        com.google.tagmanager.protobuf.LiteralByteString $r0;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 = new com.google.tagmanager.protobuf.CodedInputStream;

        specialinvoke $r1.<com.google.tagmanager.protobuf.CodedInputStream: void <init>(com.google.tagmanager.protobuf.LiteralByteString)>($r0);

     label1:
        $i0 = virtualinvoke $r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedInputStream: int pushLimit(int)>($i0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch com.google.tagmanager.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    public static com.google.tagmanager.protobuf.CodedInputStream newInstance(java.io.InputStream)
    {
        com.google.tagmanager.protobuf.CodedInputStream $r1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = new com.google.tagmanager.protobuf.CodedInputStream;

        specialinvoke $r1.<com.google.tagmanager.protobuf.CodedInputStream: void <init>(java.io.InputStream)>($r0);

        return $r1;
    }

    public static com.google.tagmanager.protobuf.CodedInputStream newInstance(java.nio.ByteBuffer)
    {
        com.google.tagmanager.protobuf.CodedInputStream $r2;
        byte[] $r1;
        int $i0, $i1;
        java.nio.ByteBuffer $r0;
        boolean $z0;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $z0 = virtualinvoke $r0.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke $r0.<java.nio.ByteBuffer: int arrayOffset()>();

        $i1 = virtualinvoke $r0.<java.nio.ByteBuffer: int position()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r0.<java.nio.ByteBuffer: int remaining()>();

        $r2 = staticinvoke <com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream newInstance(byte[],int,int)>($r1, $i0, $i1);

        return $r2;

     label1:
        $r0 = virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        $i0 = virtualinvoke $r0.<java.nio.ByteBuffer: int remaining()>();

        $r1 = newarray (byte)[$i0];

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r1);

        $r2 = staticinvoke <com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream newInstance(byte[])>($r1);

        return $r2;
    }

    public static com.google.tagmanager.protobuf.CodedInputStream newInstance(byte[])
    {
        int $i0;
        com.google.tagmanager.protobuf.CodedInputStream $r1;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream newInstance(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static com.google.tagmanager.protobuf.CodedInputStream newInstance(byte[], int, int)
    {
        com.google.tagmanager.protobuf.CodedInputStream $r2;
        byte[] $r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r3;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new com.google.tagmanager.protobuf.CodedInputStream;

        specialinvoke $r2.<com.google.tagmanager.protobuf.CodedInputStream: void <init>(byte[],int,int)>($r0, $i0, $i1);

     label1:
        virtualinvoke $r2.<com.google.tagmanager.protobuf.CodedInputStream: int pushLimit(int)>($i1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch com.google.tagmanager.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    public static int readRawVarint32(int, java.io.InputStream)
    {
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        int $i0, $i1, $i2, $i3;
        java.io.InputStream $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.io.InputStream;

        $i1 = $i0 & 128;

        if $i1 != 0 goto label1;

        return $i0;

     label1:
        $i0 = $i0 & 127;

        $i1 = 7;

     label2:
        if $i1 >= 32 goto label5;

        $i2 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i3 = -1;

        if $i2 != $i3 goto label3;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r1;

     label3:
        $i3 = $i2 & 127;

        $i3 = $i3 << $i1;

        $i0 = $i0 | $i3;

        $i2 = $i2 & 128;

        if $i2 == 0 goto label8;

        $i1 = $i1 + 7;

        goto label2;

     label4:
        $i1 = $i1 + 7;

     label5:
        if $i1 >= 64 goto label7;

        $i2 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i3 = -1;

        if $i2 != $i3 goto label6;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r1;

     label6:
        $i2 = $i2 & 128;

        if $i2 != 0 goto label4;

        return $i0;

     label7:
        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException malformedVarint()>();

        throw $r1;

     label8:
        return $i0;
    }

    static int readRawVarint32(java.io.InputStream)
    {
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        int $i0, $i1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i1 = -1;

        if $i0 != $i1 goto label1;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r1;

     label1:
        $i0 = staticinvoke <com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32(int,java.io.InputStream)>($i0, $r0);

        return $i0;
    }

    private void recomputeBufferSizeAfterLimit()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0, $i1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSizeAfterLimit>;

        $i0 = $i0 + $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize> = $i0;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i0 = $i0 + $i1;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit>;

        if $i0 <= $i1 goto label1;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit>;

        $i0 = $i0 - $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSizeAfterLimit> = $i0;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSizeAfterLimit>;

        $i0 = $i0 - $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize> = $i0;

        return;

     label1:
        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSizeAfterLimit> = 0;

        return;
    }

    private boolean refillBuffer(boolean)
    {
        byte[] $r6;
        java.lang.IllegalStateException $r7;
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        int $i0, $i1;
        com.google.tagmanager.protobuf.CodedInputStream$RefillCallback $r2;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r5;
        boolean $z0;
        java.io.InputStream $r3;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $z0 := @parameter0: boolean;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        if $i0 >= $i1 goto label01;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("refillBuffer() called when buffer wasn\'t empty.");

        throw $r7;

     label01:
        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i0 = $i0 + $i1;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit>;

        if $i0 != $i1 goto label03;

        if $z0 == 0 goto label02;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r1;

     label02:
        return 0;

     label03:
        $r2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream$RefillCallback refillCallback>;

        if $r2 == null goto label04;

        $r2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream$RefillCallback refillCallback>;

        interfaceinvoke $r2.<com.google.tagmanager.protobuf.CodedInputStream$RefillCallback: void onRefill()>();

     label04:
        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i0 = $i0 + $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired> = $i0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = 0;

        $r3 = r0.<com.google.tagmanager.protobuf.CodedInputStream: java.io.InputStream input>;

        if $r3 != null goto label07;

        $i0 = -1;

     label05:
        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize> = $i0;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        if $i0 == 0 goto label06;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        if $i0 >= -1 goto label08;

     label06:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("InputStream#read(byte[]) returned invalid result: ");

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nThe InputStream implementation is buggy.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r7;

     label07:
        $r3 = r0.<com.google.tagmanager.protobuf.CodedInputStream: java.io.InputStream input>;

        $r6 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r6);

        goto label05;

     label08:
        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        if $i0 != -1 goto label10;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize> = 0;

        if $z0 == 0 goto label09;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r1;

     label09:
        return 0;

     label10:
        specialinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void recomputeBufferSizeAfterLimit()>();

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i0 = $i0 + $i1;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSizeAfterLimit>;

        $i0 = $i0 + $i1;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int sizeLimit>;

        if $i0 > $i1 goto label11;

        if $i0 >= 0 goto label12;

     label11:
        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException sizeLimitExceeded()>();

        throw $r1;

     label12:
        return 1;
    }

    private void skipRawVarint()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        byte $b1;
        int $i0, $i2;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = 0;

     label1:
        if $i0 >= 10 goto label3;

        $b1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $i2 = (int) $b1;

        if $i2 < 0 goto label2;

        return;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException malformedVarint()>();

        throw $r1;
    }

    public final void checkLastTagWas(int)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        int $i0, $i1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int lastTag>;

        if $i1 == $i0 goto label1;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException invalidEndTag()>();

        throw $r1;

     label1:
        return;
    }

    public final void enableAliasing(boolean)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $z0 := @parameter0: boolean;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean enableAliasing> = $z0;

        return;
    }

    public final int getBytesUntilLimit()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0, $i1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit>;

        if $i0 != 2147483647 goto label1;

        return -1;

     label1:
        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i0 + $i1;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public final int getLastTag()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int lastTag>;

        return i0;
    }

    public final int getTotalBytesRead()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0, $i1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i1 + $i0;

        return $i0;
    }

    public final boolean isAtEnd()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        if $i1 != $i0 goto label1;

        $z0 = specialinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean refillBuffer(boolean)>(0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final void mergeToMessage(com.google.tagmanager.protobuf.MutableMessageLite)
    {
        com.google.tagmanager.protobuf.CodedInputStream$SkippedDataSink $r2;
        byte[] $r4;
        java.nio.ByteBuffer $r3;
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.MutableMessageLite $r1;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r5;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $r1 := @parameter0: com.google.tagmanager.protobuf.MutableMessageLite;

        $r2 = new com.google.tagmanager.protobuf.CodedInputStream$SkippedDataSink;

        specialinvoke $r2.<com.google.tagmanager.protobuf.CodedInputStream$SkippedDataSink: void <init>(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.CodedInputStream$1)>(r0, null);

        r0.<com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream$RefillCallback refillCallback> = $r2;

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void skipMessage()>();

        r0.<com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream$RefillCallback refillCallback> = null;

        $r3 = virtualinvoke $r2.<com.google.tagmanager.protobuf.CodedInputStream$SkippedDataSink: java.nio.ByteBuffer getSkippedData()>();

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int remaining()>();

        $z0 = interfaceinvoke $r1.<com.google.tagmanager.protobuf.MutableMessageLite: boolean mergeFrom(byte[],int,int)>($r4, $i0, $i1);

        if $z0 != 0 goto label1;

        $r5 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException parseFailure()>();

        throw $r5;

     label1:
        return;
    }

    public final void popLimit(int)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit> = $i0;

        specialinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void recomputeBufferSizeAfterLimit()>();

        return;
    }

    public final int pushLimit(int)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException negativeSize()>();

        throw $r1;

     label1:
        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i1 = $i1 + $i2;

        $i0 = $i1 + $i0;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit>;

        if $i0 <= $i1 goto label2;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r1;

     label2:
        r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit> = $i0;

        specialinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void recomputeBufferSizeAfterLimit()>();

        return $i1;
    }

    public final boolean readBool()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final byte[] readByteArray()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        byte[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        if $i0 != 0 goto label1;

        $r1 = <com.google.tagmanager.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        return $r1;

     label1:
        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i1 = $i1 - $i2;

        if $i0 > $i1 goto label2;

        if $i0 <= 0 goto label2;

        $r1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i2 = $i2 + $i0;

        $r1 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r1, $i1, $i2);

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i0 + $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i0;

        return $r1;

     label2:
        $r1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] readRawBytes(int)>($i0);

        return $r1;
    }

    public final java.nio.ByteBuffer readByteBuffer()
    {
        byte[] $r2;
        java.nio.ByteBuffer $r3;
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0, $i1, $i2;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        if $i0 != 0 goto label1;

        $r3 = <com.google.tagmanager.protobuf.Internal: java.nio.ByteBuffer EMPTY_BYTE_BUFFER>;

        return $r3;

     label1:
        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i1 = $i1 - $i2;

        if $i0 > $i1 goto label4;

        if $i0 <= 0 goto label4;

        $r1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: java.io.InputStream input>;

        if $r1 != null goto label3;

        $z0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean bufferIsImmutable>;

        if $z0 != 0 goto label3;

        $z0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean enableAliasing>;

        if $z0 == 0 goto label3;

        $r2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r2, $i1, $i0);

        $r3 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

     label2:
        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i0 + $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i0;

        return $r3;

     label3:
        $r2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i2 = $i2 + $i0;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r2, $i1, $i2);

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        goto label2;

     label4:
        $r2 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] readRawBytes(int)>($i0);

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        return $r3;
    }

    public final com.google.tagmanager.protobuf.ByteString readBytes()
    {
        com.google.tagmanager.protobuf.ByteString $r1;
        byte[] $r2;
        com.google.tagmanager.protobuf.BoundedByteString $r3;
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.LiteralByteString $r4;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        if $i1 != 0 goto label1;

        $r1 = <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString EMPTY>;

        return $r1;

     label1:
        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i0 - $i2;

        if $i1 > $i0 goto label4;

        if $i1 <= 0 goto label4;

        $z0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean bufferIsImmutable>;

        if $z0 == 0 goto label3;

        $z0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean enableAliasing>;

        if $z0 == 0 goto label3;

        $r3 = new com.google.tagmanager.protobuf.BoundedByteString;

        $r1 = $r3;

        $r2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        specialinvoke $r3.<com.google.tagmanager.protobuf.BoundedByteString: void <init>(byte[],int,int)>($r2, $i0, $i1);

     label2:
        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i1 = $i1 + $i0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i1;

        return $r1;

     label3:
        $r2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString copyFrom(byte[],int,int)>($r2, $i0, $i1);

        goto label2;

     label4:
        $r4 = new com.google.tagmanager.protobuf.LiteralByteString;

        $r2 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] readRawBytes(int)>($i1);

        specialinvoke $r4.<com.google.tagmanager.protobuf.LiteralByteString: void <init>(byte[])>($r2);

        return $r4;
    }

    public final double readDouble()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        long $l0;
        double $d0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $l0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: long readRawLittleEndian64()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public final int readEnum()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        return $i0;
    }

    public final int readFixed32()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawLittleEndian32()>();

        return $i0;
    }

    public final long readFixed64()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        long $l0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $l0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: long readRawLittleEndian64()>();

        return $l0;
    }

    public final float readFloat()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;
        float $f0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawLittleEndian32()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public final com.google.tagmanager.protobuf.MessageLite readGroup(int, com.google.tagmanager.protobuf.Parser, com.google.tagmanager.protobuf.ExtensionRegistryLite)
    {
        com.google.tagmanager.protobuf.Parser $r1;
        com.google.tagmanager.protobuf.ExtensionRegistryLite $r2;
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r3;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.MessageLite $r5;
        java.lang.Object $r4;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.tagmanager.protobuf.Parser;

        $r2 := @parameter2: com.google.tagmanager.protobuf.ExtensionRegistryLite;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit>;

        if $i1 < $i2 goto label1;

        $r3 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>();

        throw $r3;

     label1:
        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = $i1 + 1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i1;

        $r4 = interfaceinvoke $r1.<com.google.tagmanager.protobuf.Parser: java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite)>(r0, $r2);

        $r5 = (com.google.tagmanager.protobuf.MessageLite) $r4;

        $i0 = staticinvoke <com.google.tagmanager.protobuf.WireFormat: int makeTag(int,int)>($i0, 4);

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void checkLastTagWas(int)>($i0);

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i0;

        return $r5;
    }

    public final void readGroup(int, com.google.tagmanager.protobuf.MessageLite$Builder, com.google.tagmanager.protobuf.ExtensionRegistryLite)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.MessageLite$Builder $r1;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r3;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.ExtensionRegistryLite $r2;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.tagmanager.protobuf.MessageLite$Builder;

        $r2 := @parameter2: com.google.tagmanager.protobuf.ExtensionRegistryLite;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit>;

        if $i2 < $i1 goto label1;

        $r3 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>();

        throw $r3;

     label1:
        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = $i1 + 1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i1;

        interfaceinvoke $r1.<com.google.tagmanager.protobuf.MessageLite$Builder: com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite)>(r0, $r2);

        $i0 = staticinvoke <com.google.tagmanager.protobuf.WireFormat: int makeTag(int,int)>($i0, 4);

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void checkLastTagWas(int)>($i0);

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i0 = $i0 + -1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i0;

        return;
    }

    public final void readGroup(int, com.google.tagmanager.protobuf.MutableMessageLite, com.google.tagmanager.protobuf.ExtensionRegistryLite)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.MutableMessageLite $r1;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r3;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.ExtensionRegistryLite $r2;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.tagmanager.protobuf.MutableMessageLite;

        $r2 := @parameter2: com.google.tagmanager.protobuf.ExtensionRegistryLite;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit>;

        if $i2 < $i1 goto label1;

        $r3 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>();

        throw $r3;

     label1:
        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = $i1 + 1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i1;

        interfaceinvoke $r1.<com.google.tagmanager.protobuf.MutableMessageLite: boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite)>(r0, $r2);

        $i0 = staticinvoke <com.google.tagmanager.protobuf.WireFormat: int makeTag(int,int)>($i0, 4);

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void checkLastTagWas(int)>($i0);

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i0 = $i0 + -1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i0;

        return;
    }

    public final int readInt32()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        return $i0;
    }

    public final long readInt64()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        long $l0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $l0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: long readRawVarint64()>();

        return $l0;
    }

    public final com.google.tagmanager.protobuf.MessageLite readMessage(com.google.tagmanager.protobuf.Parser, com.google.tagmanager.protobuf.ExtensionRegistryLite)
    {
        com.google.tagmanager.protobuf.Parser $r1;
        com.google.tagmanager.protobuf.ExtensionRegistryLite $r2;
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r3;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.MessageLite $r5;
        java.lang.Object $r4;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $r1 := @parameter0: com.google.tagmanager.protobuf.Parser;

        $r2 := @parameter1: com.google.tagmanager.protobuf.ExtensionRegistryLite;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit>;

        if $i1 < $i2 goto label1;

        $r3 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>();

        throw $r3;

     label1:
        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int pushLimit(int)>($i0);

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = $i1 + 1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i1;

        $r4 = interfaceinvoke $r1.<com.google.tagmanager.protobuf.Parser: java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite)>(r0, $r2);

        $r5 = (com.google.tagmanager.protobuf.MessageLite) $r4;

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void checkLastTagWas(int)>(0);

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = $i1 + -1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i1;

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void popLimit(int)>($i0);

        return $r5;
    }

    public final void readMessage(com.google.tagmanager.protobuf.MessageLite$Builder, com.google.tagmanager.protobuf.ExtensionRegistryLite)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.MessageLite$Builder $r1;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r3;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.ExtensionRegistryLite $r2;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $r1 := @parameter0: com.google.tagmanager.protobuf.MessageLite$Builder;

        $r2 := @parameter1: com.google.tagmanager.protobuf.ExtensionRegistryLite;

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit>;

        if $i2 < $i0 goto label1;

        $r3 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>();

        throw $r3;

     label1:
        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int pushLimit(int)>($i1);

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = $i1 + 1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i1;

        interfaceinvoke $r1.<com.google.tagmanager.protobuf.MessageLite$Builder: com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite)>(r0, $r2);

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void checkLastTagWas(int)>(0);

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = $i1 + -1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i1;

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void popLimit(int)>($i0);

        return;
    }

    public final void readMessage(com.google.tagmanager.protobuf.MutableMessageLite, com.google.tagmanager.protobuf.ExtensionRegistryLite)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.MutableMessageLite $r1;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r3;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.ExtensionRegistryLite $r2;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $r1 := @parameter0: com.google.tagmanager.protobuf.MutableMessageLite;

        $r2 := @parameter1: com.google.tagmanager.protobuf.ExtensionRegistryLite;

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit>;

        if $i2 < $i0 goto label1;

        $r3 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>();

        throw $r3;

     label1:
        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int pushLimit(int)>($i1);

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = $i1 + 1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i1;

        interfaceinvoke $r1.<com.google.tagmanager.protobuf.MutableMessageLite: boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite)>(r0, $r2);

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void checkLastTagWas(int)>(0);

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth>;

        $i1 = $i1 + -1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionDepth> = $i1;

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void popLimit(int)>($i0);

        return;
    }

    public final byte readRawByte()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        byte[] $r1;
        byte $b2;
        int $i0, $i1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        if $i0 != $i1 goto label1;

        specialinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean refillBuffer(boolean)>(1);

     label1:
        $r1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i1 + 1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i0;

        $b2 = $r1[$i1];

        return $b2;
    }

    public final byte[] readRawBytes(int)
    {
        byte[] $r2, $r4;
        java.util.ArrayList $r1, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        java.util.Iterator $r6;
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r3;
        java.lang.Object $r7;
        java.io.InputStream $r5;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label01;

        $r3 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException negativeSize()>();

        throw $r3;

     label01:
        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i2 = $i2 + $i1;

        $i2 = $i2 + $i0;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit>;

        if $i2 <= $i1 goto label02;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i0 = $i0 - $i2;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i0 - $i2;

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void skipRawBytes(int)>($i0);

        $r3 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r3;

     label02:
        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i2 = $i2 - $i1;

        if $i0 > $i2 goto label03;

        $r2 = newarray (byte)[$i0];

        $r4 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i2, $r2, 0, $i0);

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i2 + $i0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i0;

        return $r2;

     label03:
        if $i0 >= 4096 goto label06;

        $r2 = newarray (byte)[$i0];

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i2 = $i2 - $i1;

        $r4 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i1, $r2, 0, $i2);

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i1;

        specialinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean refillBuffer(boolean)>(1);

     label04:
        $i1 = $i0 - $i2;

        $i3 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        if $i1 <= $i3 goto label05;

        $r4 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, $i2, $i1);

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i2 = $i2 + $i1;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i1;

        specialinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean refillBuffer(boolean)>(1);

        goto label04;

     label05:
        $r4 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i1 = $i0 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, $i2, $i1);

        $i0 = $i0 - $i2;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i0;

        return $r2;

     label06:
        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i3 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i4 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i3 = $i3 + $i4;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired> = $i3;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = 0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize> = 0;

        $i3 = $i1 - $i2;

        $r8 = new java.util.ArrayList;

        $r1 = $r8;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $i3 = $i0 - $i3;

     label07:
        if $i3 <= 0 goto label13;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 4096);

        $r2 = newarray (byte)[$i4];

        $i4 = 0;

     label08:
        $i5 = lengthof $r2;

        if $i4 >= $i5 goto label12;

        $r5 = r0.<com.google.tagmanager.protobuf.CodedInputStream: java.io.InputStream input>;

        if $r5 != null goto label10;

        $i5 = -1;

     label09:
        if $i5 != -1 goto label11;

        $r3 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r3;

     label10:
        $r5 = r0.<com.google.tagmanager.protobuf.CodedInputStream: java.io.InputStream input>;

        $i5 = lengthof $r2;

        $i5 = $i5 - $i4;

        $i5 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>($r2, $i4, $i5);

        goto label09;

     label11:
        $i6 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i6 = $i6 + $i5;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired> = $i6;

        $i4 = $i4 + $i5;

        goto label08;

     label12:
        $i4 = lengthof $r2;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i3 = $i3 - $i4;

        goto label07;

     label13:
        $r2 = newarray (byte)[$i0];

        $i0 = $i1 - $i2;

        $r4 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i2, $r2, 0, $i0);

        $r6 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (byte[]) $r7;

        $i2 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, $i0, $i2);

        $i2 = lengthof $r4;

        $i0 = $i2 + $i0;

        goto label14;

     label15:
        return $r2;
    }

    public final int readRawLittleEndian32()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        short $s4, $s5;
        byte $b0, $b1, $b2, $b3;
        int $i6, $i7;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $b0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b2 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b3 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $s4 = (short) $b0;

        $s4 = $s4 & 255;

        $s5 = (short) $b1;

        $s5 = $s5 & 255;

        $i6 = (int) $s5;

        $i6 = $i6 << 8;

        $i7 = (int) $s4;

        $i6 = $i7 | $i6;

        $s4 = (short) $b2;

        $s4 = $s4 & 255;

        $i7 = (int) $s4;

        $i7 = $i7 << 16;

        $i6 = $i6 | $i7;

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i7 = (int) $s4;

        $i7 = $i7 << 24;

        $i6 = $i6 | $i7;

        return $i6;
    }

    public final long readRawLittleEndian64()
    {
        long $l8, $l9;
        com.google.tagmanager.protobuf.CodedInputStream r0;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $b0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b2 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b3 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b4 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b5 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b6 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b7 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $l8 = (long) $b0;

        $l8 = $l8 & 255L;

        $l9 = (long) $b1;

        $l9 = $l9 & 255L;

        $l9 = $l9 << 8;

        $l8 = $l9 | $l8;

        $l9 = (long) $b2;

        $l9 = $l9 & 255L;

        $l9 = $l9 << 16;

        $l8 = $l8 | $l9;

        $l9 = (long) $b3;

        $l9 = $l9 & 255L;

        $l9 = $l9 << 24;

        $l8 = $l8 | $l9;

        $l9 = (long) $b4;

        $l9 = $l9 & 255L;

        $l9 = $l9 << 32;

        $l8 = $l8 | $l9;

        $l9 = (long) $b5;

        $l9 = $l9 & 255L;

        $l9 = $l9 << 40;

        $l8 = $l8 | $l9;

        $l9 = (long) $b6;

        $l9 = $l9 & 255L;

        $l9 = $l9 << 48;

        $l8 = $l8 | $l9;

        $l9 = (long) $b7;

        $l9 = $l9 & 255L;

        $l9 = $l9 << 56;

        $l8 = $l8 | $l9;

        return $l8;
    }

    public final int readRawVarint32()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        byte $b0, $b1;
        int $i2, $i3, $i4;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $b0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

        $i2 = (int) $b0;

        return $i2;

     label1:
        $b0 = $b0 & 127;

        $b1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $i2 = (int) $b1;

        if $i2 < 0 goto label2;

        $i2 = (int) $b1;

        $i2 = $i2 << 7;

        $i3 = (int) $b0;

        $i2 = $i3 | $i2;

        return $i2;

     label2:
        $b1 = $b1 & 127;

        $i2 = (int) $b1;

        $i2 = $i2 << 7;

        $i3 = (int) $b0;

        $i2 = $i3 | $i2;

        $b0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $i3 = (int) $b0;

        if $i3 < 0 goto label3;

        $i3 = (int) $b0;

        $i3 = $i3 << 14;

        $i2 = $i2 | $i3;

        return $i2;

     label3:
        $b0 = $b0 & 127;

        $i3 = (int) $b0;

        $i3 = $i3 << 14;

        $i2 = $i2 | $i3;

        $b0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $i3 = (int) $b0;

        if $i3 < 0 goto label4;

        $i3 = (int) $b0;

        $i3 = $i3 << 21;

        $i2 = $i2 | $i3;

        return $i2;

     label4:
        $b0 = $b0 & 127;

        $i3 = (int) $b0;

        $i3 = $i3 << 21;

        $i2 = $i2 | $i3;

        $b0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $i3 = (int) $b0;

        $i3 = $i3 << 28;

        $i2 = $i2 | $i3;

        $i3 = (int) $b0;

        if $i3 >= 0 goto label7;

        $i3 = 0;

     label5:
        if $i3 >= 5 goto label6;

        $b0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $i4 = (int) $b0;

        if $i4 >= 0 goto label7;

        $i3 = $i3 + 1;

        goto label5;

     label6:
        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException malformedVarint()>();

        throw $r1;

     label7:
        return $i2;
    }

    public final long readRawVarint64()
    {
        long $l1, $l4;
        com.google.tagmanager.protobuf.CodedInputStream r0;
        short $s5;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        byte $b2, $b3;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = 0;

        $l1 = 0L;

     label1:
        if $i0 >= 64 goto label3;

        $b2 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte readRawByte()>();

        $b3 = $b2 & 127;

        $l4 = (long) $b3;

        $l4 = $l4 << $i0;

        $l1 = $l1 | $l4;

        $s5 = (short) $b2;

        $s5 = $s5 & 128;

        if $s5 != 0 goto label2;

        return $l1;

     label2:
        $i0 = $i0 + 7;

        goto label1;

     label3:
        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException malformedVarint()>();

        throw $r1;
    }

    public final int readSFixed32()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawLittleEndian32()>();

        return $i0;
    }

    public final long readSFixed64()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        long $l0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $l0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: long readRawLittleEndian64()>();

        return $l0;
    }

    public final int readSInt32()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        $i0 = staticinvoke <com.google.tagmanager.protobuf.CodedInputStream: int decodeZigZag32(int)>($i0);

        return $i0;
    }

    public final long readSInt64()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        long $l0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $l0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: long readRawVarint64()>();

        $l0 = staticinvoke <com.google.tagmanager.protobuf.CodedInputStream: long decodeZigZag64(long)>($l0);

        return $l0;
    }

    public final java.lang.String readString()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        byte[] $r2;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i0 - $i2;

        if $i1 > $i0 goto label1;

        if $i1 <= 0 goto label1;

        $r1 = new java.lang.String;

        $r2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r2, $i0, $i1, "UTF-8");

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i1 = $i1 + $i0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i1;

        return $r1;

     label1:
        $r1 = new java.lang.String;

        $r2 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] readRawBytes(int)>($i1);

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "UTF-8");

        return $r1;
    }

    public final java.lang.String readStringRequireUtf8()
    {
        com.google.tagmanager.protobuf.ByteString $r2;
        byte[] $r1;
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r3;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.LiteralByteString $r5;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i1 = $i1 - $i2;

        if $i0 > $i1 goto label2;

        if $i0 <= 0 goto label2;

        $r1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] buffer>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $r2 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString copyFrom(byte[],int,int)>($r1, $i1, $i0);

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i0 + $i1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i0;

     label1:
        $z0 = virtualinvoke $r2.<com.google.tagmanager.protobuf.ByteString: boolean isValidUtf8()>();

        if $z0 != 0 goto label3;

        $r3 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        throw $r3;

     label2:
        $r5 = new com.google.tagmanager.protobuf.LiteralByteString;

        $r2 = $r5;

        $r1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: byte[] readRawBytes(int)>($i0);

        specialinvoke $r5.<com.google.tagmanager.protobuf.LiteralByteString: void <init>(byte[])>($r1);

        goto label1;

     label3:
        $r4 = virtualinvoke $r2.<com.google.tagmanager.protobuf.ByteString: java.lang.String toStringUtf8()>();

        return $r4;
    }

    public final int readTag()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $z0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean isAtEnd()>();

        if $z0 == 0 goto label1;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int lastTag> = 0;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int lastTag> = $i0;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int lastTag>;

        $i0 = staticinvoke <com.google.tagmanager.protobuf.WireFormat: int getTagFieldNumber(int)>($i0);

        if $i0 != 0 goto label2;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException invalidTag()>();

        throw $r1;

     label2:
        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int lastTag>;

        return $i0;
    }

    public final int readUInt32()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        return $i0;
    }

    public final long readUInt64()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        long $l0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $l0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: long readRawVarint64()>();

        return $l0;
    }

    public final void readUnknownGroup(int, com.google.tagmanager.protobuf.MessageLite$Builder)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;
        com.google.tagmanager.protobuf.MessageLite$Builder $r1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.tagmanager.protobuf.MessageLite$Builder;

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void readGroup(int,com.google.tagmanager.protobuf.MessageLite$Builder,com.google.tagmanager.protobuf.ExtensionRegistryLite)>($i0, $r1, null);

        return;
    }

    public final void resetSizeCounter()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = neg $i0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired> = $i0;

        return;
    }

    public final int setRecursionLimit(int)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Recursion limit cannot be negative: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit>;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int recursionLimit> = $i0;

        return i1;
    }

    public final int setSizeLimit(int)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Size limit cannot be negative: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int sizeLimit>;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int sizeLimit> = $i0;

        return i1;
    }

    public final boolean skipField(int)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        int $i0, $i1;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <com.google.tagmanager.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException invalidWireType()>();

        throw $r1;

     label2:
        specialinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void skipRawVarint()>();

        return 1;

     label3:
        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void skipRawBytes(int)>(8);

        return 1;

     label4:
        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawVarint32()>();

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void skipRawBytes(int)>($i0);

        return 1;

     label5:
        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void skipMessage()>();

        $i0 = staticinvoke <com.google.tagmanager.protobuf.WireFormat: int getTagFieldNumber(int)>($i0);

        $i0 = staticinvoke <com.google.tagmanager.protobuf.WireFormat: int makeTag(int,int)>($i0, 4);

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void checkLastTagWas(int)>($i0);

        return 1;

     label6:
        return 0;

     label7:
        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void skipRawBytes(int)>(4);

        return 1;
    }

    public final boolean skipField(int, com.google.tagmanager.protobuf.CodedOutputStream)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.ByteString $r3;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r2;
        com.google.tagmanager.protobuf.CodedOutputStream $r1;
        int $i0, $i1;
        long $l2;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.tagmanager.protobuf.CodedOutputStream;

        $i1 = staticinvoke <com.google.tagmanager.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label1;
        };

     label1:
        $r2 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException invalidWireType()>();

        throw $r2;

     label2:
        $l2 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: long readInt64()>();

        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedOutputStream: void writeRawVarint32(int)>($i0);

        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>($l2);

        return 1;

     label3:
        $l2 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: long readRawLittleEndian64()>();

        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedOutputStream: void writeRawVarint32(int)>($i0);

        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>($l2);

        return 1;

     label4:
        $r3 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.ByteString readBytes()>();

        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedOutputStream: void writeRawVarint32(int)>($i0);

        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedOutputStream: void writeBytesNoTag(com.google.tagmanager.protobuf.ByteString)>($r3);

        return 1;

     label5:
        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedOutputStream: void writeRawVarint32(int)>($i0);

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void skipMessage(com.google.tagmanager.protobuf.CodedOutputStream)>($r1);

        $i0 = staticinvoke <com.google.tagmanager.protobuf.WireFormat: int getTagFieldNumber(int)>($i0);

        $i0 = staticinvoke <com.google.tagmanager.protobuf.WireFormat: int makeTag(int,int)>($i0, 4);

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void checkLastTagWas(int)>($i0);

        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedOutputStream: void writeRawVarint32(int)>($i0);

        return 1;

     label6:
        return 0;

     label7:
        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readRawLittleEndian32()>();

        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedOutputStream: void writeRawVarint32(int)>($i0);

        virtualinvoke $r1.<com.google.tagmanager.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>($i1);

        return 1;
    }

    public final void skipMessage()
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

     label1:
        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readTag()>();

        if $i0 == 0 goto label2;

        $z0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean skipField(int)>($i0);

        if $z0 != 0 goto label1;

     label2:
        return;
    }

    public final void skipMessage(com.google.tagmanager.protobuf.CodedOutputStream)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.CodedOutputStream $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $r1 := @parameter0: com.google.tagmanager.protobuf.CodedOutputStream;

     label1:
        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: int readTag()>();

        if $i0 == 0 goto label2;

        $z0 = virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean skipField(int,com.google.tagmanager.protobuf.CodedOutputStream)>($i0, $r1);

        if $z0 != 0 goto label1;

     label2:
        return;
    }

    public final void skipRawBytes(int)
    {
        com.google.tagmanager.protobuf.CodedInputStream r0;
        com.google.tagmanager.protobuf.InvalidProtocolBufferException $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.tagmanager.protobuf.CodedInputStream;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException negativeSize()>();

        throw $r1;

     label1:
        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i2 = $i2 + $i1;

        $i2 = $i2 + $i0;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit>;

        if $i2 <= $i1 goto label2;

        $i0 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int currentLimit>;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int totalBytesRetired>;

        $i0 = $i0 - $i2;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i0 - $i2;

        virtualinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: void skipRawBytes(int)>($i0);

        $r1 = staticinvoke <com.google.tagmanager.protobuf.InvalidProtocolBufferException: com.google.tagmanager.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        throw $r1;

     label2:
        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i2 = $i2 - $i1;

        if $i0 > $i2 goto label3;

        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i0 = $i2 + $i0;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i0;

        return;

     label3:
        $i2 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos>;

        $i2 = $i2 - $i1;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i1;

        specialinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean refillBuffer(boolean)>(1);

     label4:
        $i3 = $i0 - $i2;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        if $i3 <= $i1 goto label5;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        $i2 = $i2 + $i1;

        $i1 = r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferSize>;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i1;

        specialinvoke r0.<com.google.tagmanager.protobuf.CodedInputStream: boolean refillBuffer(boolean)>(1);

        goto label4;

     label5:
        $i0 = $i0 - $i2;

        r0.<com.google.tagmanager.protobuf.CodedInputStream: int bufferPos> = $i0;

        return;
    }

    public static void <clinit>()
    {
        <com.google.tagmanager.protobuf.CodedInputStream: int DEFAULT_SIZE_LIMIT> = 67108864;

        <com.google.tagmanager.protobuf.CodedInputStream: int DEFAULT_RECURSION_LIMIT> = 64;

        <com.google.tagmanager.protobuf.CodedInputStream: int BUFFER_SIZE> = 4096;

        return;
    }
}
