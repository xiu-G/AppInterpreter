public class com.peercom.MemoryStatus extends java.lang.Object
{
    static final int ERROR;

    public void <init>()
    {
        com.peercom.MemoryStatus r0;

        r0 := @this: com.peercom.MemoryStatus;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean externalMemoryAvailable()
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        return $z0;
    }

    public static java.lang.String formatSize(long)
    {
        byte $b1;
        int $i2;
        java.lang.StringBuilder r0, $r3;
        long $l0;
        java.lang.String r1, $r2;

        $l0 := @parameter0: long;

        r1 = null;

        $b1 = $l0 cmp 1024L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label1;

        r1 = "KB";

        $l0 = $l0 / 1024L;

        $b1 = $l0 cmp 1024L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label1;

        r1 = "MB";

        $l0 = $l0 / 1024L;

     label1:
        $r3 = new java.lang.StringBuilder;

        r0 = $r3;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        $i2 = $i2 - 3;

     label2:
        if $i2 > 0 goto label4;

        if r1 == null goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label3:
        r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return r1;

     label4:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>($i2, 44);

        $i2 = $i2 + -3;

        goto label2;
    }

    public static long getAvailableExternalMemorySize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r2;
        java.io.File $r1;
        boolean $z0;

        $z0 = staticinvoke <com.peercom.MemoryStatus: boolean externalMemoryAvailable()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getAvailableBlocks()>();

        l0 = (long) $i2;

        l0 = l0 * l1;

        return l0;

     label1:
        return -1L;
    }

    public static long getAvailableInternalMemorySize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r2;
        java.io.File $r1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getAvailableBlocks()>();

        l0 = (long) $i2;

        l0 = l0 * l1;

        return l0;
    }

    public static long getTotalExternalMemorySize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r2;
        java.io.File $r1;
        boolean $z0;

        $z0 = staticinvoke <com.peercom.MemoryStatus: boolean externalMemoryAvailable()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l0 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockCount()>();

        l1 = (long) $i2;

        l0 = l1 * l0;

        return l0;

     label1:
        return -1L;
    }

    public static long getTotalInternalMemorySize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r2;
        java.io.File $r1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l0 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockCount()>();

        l1 = (long) $i2;

        l0 = l1 * l0;

        return l0;
    }

    public static void <clinit>()
    {
        <com.peercom.MemoryStatus: int ERROR> = -1;

        return;
    }
}
