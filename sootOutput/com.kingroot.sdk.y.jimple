public class com.kingroot.sdk.y extends java.lang.Object
{
    private static java.security.interfaces.RSAPublicKey aq;
    private java.util.Properties ar;

    static void <clinit>()
    {
        java.lang.Throwable $r5, $r6;
        byte[] $r0;
        java.security.spec.InvalidKeySpecException $r8;
        java.security.PublicKey $r3;
        java.security.spec.X509EncodedKeySpec $r1, $r7;
        java.security.KeyFactory $r2;
        java.security.interfaces.RSAPublicKey $r4;
        java.security.NoSuchAlgorithmException $r9;

        $r0 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>("MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDCTrqGfyNYDKZEFfvXuYOu9mSCNu6ri10PMG2xJ5sBuUN2OFBT1W5n/dyUkR+Xgnd6w9arSFnU/8fpiP4DRZPL7pkmgzJvjoPqrreXO4nGRQtVbp6sD/gWCKsTlJ9bk01W32gfSOrCNch8BQJO8nE01ffnWmyRiqVTbuh9KEGgcwIDAQAB", 0);

        $r7 = new java.security.spec.X509EncodedKeySpec;

        $r1 = $r7;

        specialinvoke $r7.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r0);

     label1:
        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("RSA");

        $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1);

     label2:
        $r4 = (java.security.interfaces.RSAPublicKey) $r3;

        <com.kingroot.sdk.y: java.security.interfaces.RSAPublicKey aq> = $r4;

        return;

     label3:
        $r5 := @caughtexception;

        $r8 = (java.security.spec.InvalidKeySpecException) $r5;

        virtualinvoke $r8.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        <com.kingroot.sdk.y: java.security.interfaces.RSAPublicKey aq> = null;

        return;

     label4:
        $r6 := @caughtexception;

        $r9 = (java.security.NoSuchAlgorithmException) $r6;

        virtualinvoke $r9.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        <com.kingroot.sdk.y: java.security.interfaces.RSAPublicKey aq> = null;

        return;

        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
    }

    private void <init>(java.util.Properties)
    {
        com.kingroot.sdk.y r0;
        java.util.Properties $r1;

        r0 := @this: com.kingroot.sdk.y;

        $r1 := @parameter0: java.util.Properties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.kingroot.sdk.y: java.util.Properties ar> = $r1;

        return;
    }

    private static int a(java.io.InputStream)
    {
        int $i0, $i1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i1 = $i1 << 8;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i1 = $i1 << 16;

        $i0 = $i0 | $i1;

        $i1 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i1 = $i1 << 24;

        $i0 = $i0 | $i1;

        return $i0;
    }

    public static com.kingroot.sdk.y a(android.content.res.AssetManager, java.lang.String)
    {
        java.lang.Throwable $r6;
        byte[] $r2, $r7;
        java.util.zip.Inflater $r8;
        android.content.res.AssetManager $r0;
        java.io.ByteArrayInputStream $r4, $r10;
        java.security.interfaces.RSAPublicKey $r12;
        int $i0, $i1;
        java.util.zip.DataFormatException $r5;
        java.lang.String $r1;
        boolean $z0;
        com.kingroot.sdk.y $r14;
        java.util.Properties $r9;
        java.security.SignatureException $r13;
        java.security.Signature $r11;
        java.io.InputStream $r3;

        $r0 := @parameter0: android.content.res.AssetManager;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.kingroot.sdk.at: void h(java.lang.String)>("KRSDKCertificate loadFromAsset >>>>>>>>>>");

        $r3 = virtualinvoke $r0.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>("krsdk.cert", 1);

        $r4 = null;

     label01:
        $i0 = staticinvoke <com.kingroot.sdk.y: int a(java.io.InputStream)>($r3);

     label02:
        if $i0 == 1413698123 goto label06;

     label03:
        $r5 = new java.util.zip.DataFormatException;

        specialinvoke $r5.<java.util.zip.DataFormatException: void <init>(java.lang.String)>("Not a kingroot sdk certification file");

        throw $r5;

     label04:
        $r6 := @caughtexception;

     label05:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r4);

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r3);

        throw $r6;

     label06:
        $i0 = staticinvoke <com.kingroot.sdk.y: int a(java.io.InputStream)>($r3);

        $i1 = staticinvoke <com.kingroot.sdk.y: int a(java.io.InputStream)>($r3);

        $r2 = newarray (byte)[$i1];

        $r7 = newarray (byte)[$i0];

        virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r2);

        $r8 = new java.util.zip.Inflater;

        specialinvoke $r8.<java.util.zip.Inflater: void <init>()>();

        virtualinvoke $r8.<java.util.zip.Inflater: void setInput(byte[])>($r2);

        $i1 = virtualinvoke $r8.<java.util.zip.Inflater: int inflate(byte[])>($r7);

     label07:
        if $i0 == $i1 goto label09;

     label08:
        $r5 = new java.util.zip.DataFormatException;

        specialinvoke $r5.<java.util.zip.DataFormatException: void <init>(java.lang.String)>("Unexpected data length");

        throw $r5;

     label09:
        virtualinvoke $r8.<java.util.zip.Inflater: void end()>();

        $r9 = new java.util.Properties;

        specialinvoke $r9.<java.util.Properties: void <init>()>();

        $r10 = new java.io.ByteArrayInputStream;

        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7);

     label10:
        virtualinvoke $r9.<java.util.Properties: void loadFromXML(java.io.InputStream)>($r10);

        $i0 = staticinvoke <com.kingroot.sdk.y: int a(java.io.InputStream)>($r3);

        $r7 = newarray (byte)[$i0];

        virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r7);

        $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>("SHA1WithRSA");

        $r12 = <com.kingroot.sdk.y: java.security.interfaces.RSAPublicKey aq>;

        virtualinvoke $r11.<java.security.Signature: void initVerify(java.security.PublicKey)>($r12);

        virtualinvoke $r11.<java.security.Signature: void update(byte[])>($r2);

        $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r7);

     label11:
        if $z0 != 0 goto label14;

     label12:
        $r13 = new java.security.SignatureException;

        specialinvoke $r13.<java.security.SignatureException: void <init>(java.lang.String)>("Bad signature");

        throw $r13;

     label13:
        $r6 := @caughtexception;

        $r4 = $r10;

        goto label05;

     label14:
        $r14 = new com.kingroot.sdk.y;

        specialinvoke $r14.<com.kingroot.sdk.y: void <init>(java.util.Properties)>($r9);

     label15:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r10);

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r3);

        return $r14;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label08 to label10 with label04;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private static java.lang.String b(android.content.Context)
    {
        java.security.cert.X509Certificate $r9;
        java.lang.Throwable $r10, $r11;
        android.content.Context $r0;
        byte[] $r6;
        java.security.cert.CertificateFactory $r7;
        java.security.cert.CertificateException $r13;
        android.content.pm.PackageInfo $r2;
        android.content.pm.Signature[] $r3;
        java.security.cert.Certificate $r8;
        java.io.ByteArrayInputStream $r5, $r12;
        java.lang.String $r1;
        android.content.pm.Signature $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r2 = staticinvoke <com.kingroot.sdk.z: android.content.pm.PackageInfo a(android.content.Context,java.lang.String,int)>($r0, $r1, 64);

        if $r2 == null goto label9;

        $r3 = $r2.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $r4 = $r3[0];

        $r12 = new java.io.ByteArrayInputStream;

        $r5 = $r12;

        $r6 = virtualinvoke $r4.<android.content.pm.Signature: byte[] toByteArray()>();

        specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

     label1:
        $r7 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r8 = virtualinvoke $r7.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r5);

     label2:
        $r9 = (java.security.cert.X509Certificate) $r8;

     label3:
        $r6 = virtualinvoke $r9.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r1 = staticinvoke <com.kingroot.sdk.util.j: java.lang.String f(byte[])>($r6);

     label4:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r5);

        return $r1;

     label5:
        $r10 := @caughtexception;

     label6:
        $r13 = (java.security.cert.CertificateException) $r10;

        virtualinvoke $r13.<java.security.cert.CertificateException: void printStackTrace()>();

     label7:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r5);

        return null;

     label8:
        $r11 := @caughtexception;

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r5);

        throw $r11;

     label9:
        return null;

        catch java.security.cert.CertificateException from label1 to label2 with label5;
        catch java.security.cert.CertificateException from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean a(android.content.Context)
    {
        com.kingroot.sdk.y r0;
        android.content.Context $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.y;

        $r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.kingroot.sdk.y: java.lang.String b(android.content.Context)>($r1);

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r0.<com.kingroot.sdk.y: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Certifacate Fail, PackageName wrong: ");

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void i(java.lang.String)>($r2);

        return 0;

     label1:
        $r3 = virtualinvoke r0.<com.kingroot.sdk.y: java.lang.String c()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Certifacate Fail, PackageMD5 wrong: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void i(java.lang.String)>($r2);

        return 0;

     label2:
        staticinvoke <com.kingroot.sdk.at: void h(java.lang.String)>("Certifacate Succeed.");

        return 1;
    }

    public java.lang.String b()
    {
        com.kingroot.sdk.y r0;
        java.lang.String $r1;
        java.util.Properties $r2;

        r0 := @this: com.kingroot.sdk.y;

        $r2 = r0.<com.kingroot.sdk.y: java.util.Properties ar>;

        $r1 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("channel_id");

        return $r1;
    }

    public java.lang.String c()
    {
        com.kingroot.sdk.y r0;
        java.lang.String $r1;
        java.util.Properties $r2;

        r0 := @this: com.kingroot.sdk.y;

        $r2 = r0.<com.kingroot.sdk.y: java.util.Properties ar>;

        $r1 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("cert_md5");

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        com.kingroot.sdk.y r0;
        java.lang.String $r1;
        java.util.Properties $r2;

        r0 := @this: com.kingroot.sdk.y;

        $r2 = r0.<com.kingroot.sdk.y: java.util.Properties ar>;

        $r1 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("package_name");

        return $r1;
    }
}
