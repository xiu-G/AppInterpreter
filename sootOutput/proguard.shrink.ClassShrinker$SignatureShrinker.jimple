class proguard.shrink.ClassShrinker$SignatureShrinker extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.attribute.visitor.AttributeVisitor
{
    private final proguard.shrink.ClassShrinker this$0;

    private void <init>(proguard.shrink.ClassShrinker)
    {
        proguard.shrink.ClassShrinker$SignatureShrinker r0;
        proguard.shrink.ClassShrinker $r1;

        r0 := @this: proguard.shrink.ClassShrinker$SignatureShrinker;

        $r1 := @parameter0: proguard.shrink.ClassShrinker;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.shrink.ClassShrinker$SignatureShrinker: proguard.shrink.ClassShrinker this$0> = $r1;

        return;
    }

    void <init>(proguard.shrink.ClassShrinker, proguard.shrink.ClassShrinker$1)
    {
        proguard.shrink.ClassShrinker$1 $r2;
        proguard.shrink.ClassShrinker$SignatureShrinker r0;
        proguard.shrink.ClassShrinker $r1;

        r0 := @this: proguard.shrink.ClassShrinker$SignatureShrinker;

        $r1 := @parameter0: proguard.shrink.ClassShrinker;

        $r2 := @parameter1: proguard.shrink.ClassShrinker$1;

        specialinvoke r0.<proguard.shrink.ClassShrinker$SignatureShrinker: void <init>(proguard.shrink.ClassShrinker)>($r1);

        return;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.shrink.ClassShrinker$SignatureShrinker r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.shrink.ClassShrinker$SignatureShrinker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        return;
    }

    public void visitSignatureAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SignatureAttribute)
    {
        proguard.classfile.Clazz[] $r1;
        proguard.shrink.UsageMarker $r10;
        proguard.shrink.ClassShrinker $r9;
        proguard.classfile.ProgramClass $r11;
        proguard.classfile.Clazz $r3, $r8;
        java.lang.StringBuffer $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4;
        proguard.classfile.constant.Utf8Constant r14;
        boolean $z0;
        proguard.shrink.ClassShrinker$SignatureShrinker r2;
        proguard.classfile.constant.Constant r13;
        proguard.classfile.util.InternalTypeEnumeration $r5;
        proguard.classfile.constant.Constant[] $r12;
        proguard.classfile.attribute.SignatureAttribute $r0;
        proguard.classfile.util.DescriptorClassEnumeration $r7;

        r2 := @this: proguard.shrink.ClassShrinker$SignatureShrinker;

        $r3 := @parameter0: proguard.classfile.Clazz;

        $r0 := @parameter1: proguard.classfile.attribute.SignatureAttribute;

        $r1 = $r0.<proguard.classfile.attribute.SignatureAttribute: proguard.classfile.Clazz[] referencedClasses>;

        if $r1 == null goto label7;

        $i0 = $r0.<proguard.classfile.attribute.SignatureAttribute: int u2signatureIndex>;

        $r4 = interfaceinvoke $r3.<proguard.classfile.Clazz: java.lang.String getString(int)>($i0);

        $r5 = new proguard.classfile.util.InternalTypeEnumeration;

        specialinvoke $r5.<proguard.classfile.util.InternalTypeEnumeration: void <init>(java.lang.String)>($r4);

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $i1 = 0;

        $i2 = 0;

     label1:
        $z0 = virtualinvoke $r5.<proguard.classfile.util.InternalTypeEnumeration: boolean hasMoreTypes()>();

        if $z0 == 0 goto label5;

        $r4 = virtualinvoke $r5.<proguard.classfile.util.InternalTypeEnumeration: java.lang.String nextType()>();

        $r7 = new proguard.classfile.util.DescriptorClassEnumeration;

        specialinvoke $r7.<proguard.classfile.util.DescriptorClassEnumeration: void <init>(java.lang.String)>($r4);

        $i0 = virtualinvoke $r7.<proguard.classfile.util.DescriptorClassEnumeration: int classCount()>();

        $r8 = $r1[$i2];

        if $r8 == null goto label2;

        $r9 = r2.<proguard.shrink.ClassShrinker$SignatureShrinker: proguard.shrink.ClassShrinker this$0>;

        $r10 = staticinvoke <proguard.shrink.ClassShrinker: proguard.shrink.UsageMarker access$100(proguard.shrink.ClassShrinker)>($r9);

        $z0 = virtualinvoke $r10.<proguard.shrink.UsageMarker: boolean isUsed(proguard.classfile.VisitorAccepter)>($r8);

        if $z0 == 0 goto label4;

     label2:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i3 = 0;

     label3:
        if $i3 >= $i0 goto label1;

        $r8 = $r1[$i2];

        $r1[$i1] = $r8;

        $i3 = $i3 + 1;

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $i2 = $i2 + $i0;

        goto label1;

     label5:
        if $i1 >= $i2 goto label8;

        $r11 = (proguard.classfile.ProgramClass) $r3;

        $r12 = $r11.<proguard.classfile.ProgramClass: proguard.classfile.constant.Constant[] constantPool>;

        $i0 = $r0.<proguard.classfile.attribute.SignatureAttribute: int u2signatureIndex>;

        r13 = $r12[$i0];

        r14 = (proguard.classfile.constant.Utf8Constant) r13;

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r14.<proguard.classfile.constant.Utf8Constant: void setString(java.lang.String)>($r4);

        $i0 = $i1;

     label6:
        if $i0 >= $i2 goto label8;

        $r1[$i0] = null;

        $i0 = $i0 + 1;

        goto label6;

     label7:
        return;

     label8:
        return;
    }
}
