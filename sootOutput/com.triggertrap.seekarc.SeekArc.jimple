public class com.triggertrap.seekarc.SeekArc extends android.view.View
{
    private static int INVALID_PROGRESS_VALUE;
    private static final java.lang.String TAG;
    private final int mAngleOffset;
    private android.graphics.Paint mArcPaint;
    private int mArcRadius;
    private android.graphics.RectF mArcRect;
    private int mArcWidth;
    private boolean mClockwise;
    private int mMax;
    private com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener mOnSeekArcChangeListener;
    private int mProgress;
    private android.graphics.Paint mProgressPaint;
    private float mProgressSweep;
    private int mProgressWidth;
    private int mRotation;
    private boolean mRoundedEdges;
    private int mStartAngle;
    private int mSweepAngle;
    private android.graphics.drawable.Drawable mThumb;
    private int mThumbXPos;
    private int mThumbYPos;
    private double mTouchAngle;
    private float mTouchIgnoreRadius;
    private boolean mTouchInside;
    private int mTranslateX;
    private int mTranslateY;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Lcom/triggertrap/seekarc/SeekArc;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.triggertrap.seekarc.SeekArc: java.lang.String TAG> = $r0;

        <com.triggertrap.seekarc.SeekArc: int INVALID_PROGRESS_VALUE> = -1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.graphics.RectF $r2;
        android.content.Context $r1;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>($r1);

        r0.<com.triggertrap.seekarc.SeekArc: int mAngleOffset> = -90;

        r0.<com.triggertrap.seekarc.SeekArc: int mMax> = 100;

        r0.<com.triggertrap.seekarc.SeekArc: int mProgress> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: int mProgressWidth> = 4;

        r0.<com.triggertrap.seekarc.SeekArc: int mArcWidth> = 2;

        r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle> = 360;

        r0.<com.triggertrap.seekarc.SeekArc: int mRotation> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mRoundedEdges> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mTouchInside> = 1;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mClockwise> = 1;

        r0.<com.triggertrap.seekarc.SeekArc: int mArcRadius> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: float mProgressSweep> = 0.0F;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<com.triggertrap.seekarc.SeekArc: android.graphics.RectF mArcRect> = $r2;

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void init(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.graphics.RectF $r3;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $i0 = -90;

        r0.<com.triggertrap.seekarc.SeekArc: int mAngleOffset> = $i0;

        r0.<com.triggertrap.seekarc.SeekArc: int mMax> = 100;

        r0.<com.triggertrap.seekarc.SeekArc: int mProgress> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: int mProgressWidth> = 4;

        r0.<com.triggertrap.seekarc.SeekArc: int mArcWidth> = 2;

        r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle> = 360;

        r0.<com.triggertrap.seekarc.SeekArc: int mRotation> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mRoundedEdges> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mTouchInside> = 1;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mClockwise> = 1;

        r0.<com.triggertrap.seekarc.SeekArc: int mArcRadius> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: float mProgressSweep> = 0.0F;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.triggertrap.seekarc.SeekArc: android.graphics.RectF mArcRect> = $r3;

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void init(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 2130771982);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.graphics.RectF $r3;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $i1 = -90;

        r0.<com.triggertrap.seekarc.SeekArc: int mAngleOffset> = $i1;

        r0.<com.triggertrap.seekarc.SeekArc: int mMax> = 100;

        r0.<com.triggertrap.seekarc.SeekArc: int mProgress> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: int mProgressWidth> = 4;

        r0.<com.triggertrap.seekarc.SeekArc: int mArcWidth> = 2;

        r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle> = 360;

        r0.<com.triggertrap.seekarc.SeekArc: int mRotation> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mRoundedEdges> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mTouchInside> = 1;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mClockwise> = 1;

        r0.<com.triggertrap.seekarc.SeekArc: int mArcRadius> = 0;

        r0.<com.triggertrap.seekarc.SeekArc: float mProgressSweep> = 0.0F;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<com.triggertrap.seekarc.SeekArc: android.graphics.RectF mArcRect> = $r3;

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void init(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    private int getProgressForAngle(double)
    {
        int i1, $i2;
        float $f0;
        long $l0;
        com.triggertrap.seekarc.SeekArc r0;
        double $d0, $d1;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $d0 := @parameter0: double;

        $f0 = specialinvoke r0.<com.triggertrap.seekarc.SeekArc: float valuePerDegree()>();

        $d1 = (double) $f0;

        $d0 = $d1 * $d0;

        $l0 = staticinvoke <java.lang.Math: long round(double)>($d0);

        i1 = (int) $l0;

        if i1 >= 0 goto label1;

        i1 = <com.triggertrap.seekarc.SeekArc: int INVALID_PROGRESS_VALUE>;

     label1:
        $i2 = r0.<com.triggertrap.seekarc.SeekArc: int mMax>;

        if i1 <= $i2 goto label2;

        i1 = <com.triggertrap.seekarc.SeekArc: int INVALID_PROGRESS_VALUE>;

     label2:
        return i1;
    }

    private double getTouchDegrees(float, float)
    {
        byte $b1;
        int $i0;
        float $f0, $f1, $f2;
        com.triggertrap.seekarc.SeekArc r0;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mTranslateX>;

        $f2 = (float) $i0;

        $f0 = $f0 - $f2;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mTranslateY>;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $z0 = r0.<com.triggertrap.seekarc.SeekArc: boolean mClockwise>;

        if $z0 == 0 goto label3;

     label1:
        $d0 = (double) $f1;

        $d1 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1);

        $d0 = $d0 + 1.5707963267948966;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mRotation>;

        $d1 = (double) $i0;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d0 = $d0 - $d1;

        $d1 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $d0 = $d1;

        $b1 = $d1 cmpg 0.0;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label2;

        $d0 = $d1 + 360.0;

     label2:
        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle>;

        $d1 = (double) $i0;

        $d0 = $d0 - $d1;

        return $d0;

     label3:
        $f0 = neg $f0;

        goto label1;
    }

    private boolean ignoreTouch(float, float)
    {
        byte $b1;
        int $i0;
        float $f0, $f1, $f2;
        com.triggertrap.seekarc.SeekArc r0;
        double $d0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mTranslateX>;

        $f2 = (float) $i0;

        $f0 = $f0 - $f2;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mTranslateY>;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $f0 = $f0 * $f0;

        $f1 = $f1 * $f1;

        $f0 = $f0 + $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        $f1 = r0.<com.triggertrap.seekarc.SeekArc: float mTouchIgnoreRadius>;

        $b1 = $f0 cmpg $f1;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void init(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r7;
        android.graphics.Paint$Style $r11;
        android.util.AttributeSet $r2;
        int $i0, $i1, $i2, $i3, i4, $i5;
        java.lang.String $r3;
        com.triggertrap.seekarc.SeekArc r0;
        boolean $z0;
        android.util.DisplayMetrics $r6;
        android.graphics.Paint$Cap $r12;
        float f0, $f1;
        android.graphics.Paint $r10;
        android.content.res.Resources $r4, $r5;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $r3 = <com.triggertrap.seekarc.SeekArc: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "Initialising SeekArc");

        $r4 = virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r6.<android.util.DisplayMetrics: float density>;

        $i2 = virtualinvoke $r4.<android.content.res.Resources: int getColor(int)>(2131099695);

        $i1 = $i2;

        $i3 = virtualinvoke $r4.<android.content.res.Resources: int getColor(int)>(17170450);

        i4 = $i3;

        $r7 = virtualinvoke $r4.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837641);

        r0.<com.triggertrap.seekarc.SeekArc: android.graphics.drawable.Drawable mThumb> = $r7;

        $i5 = r0.<com.triggertrap.seekarc.SeekArc: int mProgressWidth>;

        $f1 = (float) $i5;

        f0 = $f1 * f0;

        $i5 = (int) f0;

        r0.<com.triggertrap.seekarc.SeekArc: int mProgressWidth> = $i5;

        goto label01;

     label01:
        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mProgress>;

        $i3 = r0.<com.triggertrap.seekarc.SeekArc: int mMax>;

        if $i0 <= $i3 goto label08;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mMax>;

     label02:
        r0.<com.triggertrap.seekarc.SeekArc: int mProgress> = $i0;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mProgress>;

        if $i0 >= 0 goto label09;

        $i0 = 0;

     label03:
        r0.<com.triggertrap.seekarc.SeekArc: int mProgress> = $i0;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle>;

        if $i0 <= 360 goto label10;

        $i0 = 360;

     label04:
        r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle> = $i0;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle>;

        if $i0 >= 0 goto label11;

        $i0 = 0;

     label05:
        r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle> = $i0;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle>;

        if $i0 <= 360 goto label12;

        $i0 = 0;

     label06:
        r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle> = $i0;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle>;

        if $i0 >= 0 goto label13;

        $i0 = 0;

     label07:
        r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle> = $i0;

        $r10 = new android.graphics.Paint;

        specialinvoke $r10.<android.graphics.Paint: void <init>()>();

        r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mArcPaint> = $r10;

        $r10 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mArcPaint>;

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>($i1);

        $r10 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mArcPaint>;

        virtualinvoke $r10.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r10 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mArcPaint>;

        $r11 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r10.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r11);

        $r10 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mArcPaint>;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mArcWidth>;

        f0 = (float) $i0;

        virtualinvoke $r10.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        $r10 = new android.graphics.Paint;

        specialinvoke $r10.<android.graphics.Paint: void <init>()>();

        r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mProgressPaint> = $r10;

        $r10 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mProgressPaint>;

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>(i4);

        $r10 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mProgressPaint>;

        virtualinvoke $r10.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r10 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mProgressPaint>;

        $r11 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r10.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r11);

        $r10 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mProgressPaint>;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mProgressWidth>;

        f0 = (float) $i0;

        virtualinvoke $r10.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        $z0 = r0.<com.triggertrap.seekarc.SeekArc: boolean mRoundedEdges>;

        if $z0 == 0 goto label14;

        $r10 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mArcPaint>;

        $r12 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke $r10.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r12);

        $r10 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mProgressPaint>;

        $r12 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke $r10.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r12);

        return;

     label08:
        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mProgress>;

        goto label02;

     label09:
        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mProgress>;

        goto label03;

     label10:
        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle>;

        goto label04;

     label11:
        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle>;

        goto label05;

     label12:
        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle>;

        goto label06;

     label13:
        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle>;

        goto label07;

     label14:
        return;
    }

    private void onProgressRefresh(int, boolean)
    {
        int $i0;
        com.triggertrap.seekarc.SeekArc r0;
        boolean $z0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void updateProgress(int,boolean)>($i0, 1);

        return;
    }

    private void onStartTrackingTouch()
    {
        com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener $r1;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener mOnSeekArcChangeListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener mOnSeekArcChangeListener>;

        interfaceinvoke $r1.<com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener: void onStartTrackingTouch(com.triggertrap.seekarc.SeekArc)>(r0);

     label1:
        return;
    }

    private void onStopTrackingTouch()
    {
        com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener $r1;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener mOnSeekArcChangeListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener mOnSeekArcChangeListener>;

        interfaceinvoke $r1.<com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener: void onStopTrackingTouch(com.triggertrap.seekarc.SeekArc)>(r0);

     label1:
        return;
    }

    private void updateOnTouch(android.view.MotionEvent)
    {
        android.view.MotionEvent $r1;
        int $i0;
        float $f0, $f1;
        com.triggertrap.seekarc.SeekArc r0;
        boolean $z0;
        double $d0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $r1 := @parameter0: android.view.MotionEvent;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $z0 = specialinvoke r0.<com.triggertrap.seekarc.SeekArc: boolean ignoreTouch(float,float)>($f0, $f1);

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: void setPressed(boolean)>(1);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $d0 = specialinvoke r0.<com.triggertrap.seekarc.SeekArc: double getTouchDegrees(float,float)>($f0, $f1);

        r0.<com.triggertrap.seekarc.SeekArc: double mTouchAngle> = $d0;

        $d0 = r0.<com.triggertrap.seekarc.SeekArc: double mTouchAngle>;

        $i0 = specialinvoke r0.<com.triggertrap.seekarc.SeekArc: int getProgressForAngle(double)>($d0);

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void onProgressRefresh(int,boolean)>($i0, 1);

        return;
    }

    private void updateProgress(int, boolean)
    {
        int $i0, $i1;
        com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener $r1;
        float $f0, $f1;
        com.triggertrap.seekarc.SeekArc r0;
        boolean $z0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i1 = <com.triggertrap.seekarc.SeekArc: int INVALID_PROGRESS_VALUE>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = r0.<com.triggertrap.seekarc.SeekArc: com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener mOnSeekArcChangeListener>;

        if $r1 == null goto label2;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener mOnSeekArcChangeListener>;

        interfaceinvoke $r1.<com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener: void onProgressChanged(com.triggertrap.seekarc.SeekArc,int,boolean)>(r0, $i0, $z0);

     label2:
        $i1 = r0.<com.triggertrap.seekarc.SeekArc: int mMax>;

        if $i0 <= $i1 goto label3;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mMax>;

     label3:
        $i1 = r0.<com.triggertrap.seekarc.SeekArc: int mProgress>;

        if $i1 >= 0 goto label4;

        $i0 = 0;

     label4:
        r0.<com.triggertrap.seekarc.SeekArc: int mProgress> = $i0;

        $f0 = (float) $i0;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mMax>;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle>;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        r0.<com.triggertrap.seekarc.SeekArc: float mProgressSweep> = $f0;

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void updateThumbPosition()>();

        virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: void invalidate()>();

        return;
    }

    private void updateThumbPosition()
    {
        int i0, $i1;
        float $f0, $f1;
        com.triggertrap.seekarc.SeekArc r0;
        double $d0, $d1;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle>;

        $f0 = (float) i0;

        $f1 = r0.<com.triggertrap.seekarc.SeekArc: float mProgressSweep>;

        $f0 = $f0 + $f1;

        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mRotation>;

        $f1 = (float) i0;

        $f0 = $f0 + $f1;

        $f0 = $f0 + 90.0F;

        i0 = (int) $f0;

        $i1 = r0.<com.triggertrap.seekarc.SeekArc: int mArcRadius>;

        $d0 = (double) $i1;

        $d1 = (double) i0;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d0 = $d0 * $d1;

        $i1 = (int) $d0;

        r0.<com.triggertrap.seekarc.SeekArc: int mThumbXPos> = $i1;

        $i1 = r0.<com.triggertrap.seekarc.SeekArc: int mArcRadius>;

        $d0 = (double) $i1;

        $d1 = (double) i0;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d0 = $d0 * $d1;

        i0 = (int) $d0;

        r0.<com.triggertrap.seekarc.SeekArc: int mThumbYPos> = i0;

        return;
    }

    private float valuePerDegree()
    {
        int $i0;
        float $f0, $f1;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mMax>;

        $f0 = (float) $i0;

        $i0 = r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle>;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;
    }

    protected void drawableStateChanged()
    {
        int[] $r2;
        com.triggertrap.seekarc.SeekArc r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        specialinvoke r0.<android.view.View: void drawableStateChanged()>();

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.drawable.Drawable mThumb>;

        if $r1 == null goto label1;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.drawable.Drawable mThumb>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: int[] getDrawableState()>();

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.drawable.Drawable mThumb>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

     label1:
        virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: void invalidate()>();

        return;
    }

    public int getArcRotation()
    {
        int i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mRotation>;

        return i0;
    }

    public int getArcWidth()
    {
        int i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mArcWidth>;

        return i0;
    }

    public int getProgress()
    {
        int i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mProgress>;

        return i0;
    }

    public int getProgressWidth()
    {
        int i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mProgressWidth>;

        return i0;
    }

    public int getStartAngle()
    {
        int i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle>;

        return i0;
    }

    public int getSweepAngle()
    {
        int i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle>;

        return i0;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.graphics.RectF $r2;
        android.graphics.drawable.Drawable $r4;
        int i0, i1;
        float $f0, $f1;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r3;
        com.triggertrap.seekarc.SeekArc r0;
        boolean $z0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<com.triggertrap.seekarc.SeekArc: boolean mClockwise>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.RectF mArcRect>;

        $f0 = virtualinvoke $r2.<android.graphics.RectF: float centerX()>();

        $r2 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.RectF mArcRect>;

        $f1 = virtualinvoke $r2.<android.graphics.RectF: float centerY()>();

        virtualinvoke $r1.<android.graphics.Canvas: void scale(float,float,float,float)>(-1.0F, 1.0F, $f0, $f1);

     label1:
        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle>;

        i0 = i0 + -90;

        i1 = r0.<com.triggertrap.seekarc.SeekArc: int mRotation>;

        i0 = i0 + i1;

        i1 = r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle>;

        $r2 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.RectF mArcRect>;

        $f0 = (float) i0;

        $f1 = (float) i1;

        $r3 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mArcPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r2, $f0, $f1, 0, $r3);

        $r2 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.RectF mArcRect>;

        $f0 = (float) i0;

        $f1 = r0.<com.triggertrap.seekarc.SeekArc: float mProgressSweep>;

        $r3 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mProgressPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r2, $f0, $f1, 0, $r3);

        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mTranslateX>;

        i1 = r0.<com.triggertrap.seekarc.SeekArc: int mThumbXPos>;

        i0 = i0 - i1;

        $f0 = (float) i0;

        i0 = r0.<com.triggertrap.seekarc.SeekArc: int mTranslateY>;

        i1 = r0.<com.triggertrap.seekarc.SeekArc: int mThumbYPos>;

        i0 = i0 - i1;

        $f1 = (float) i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r4 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.drawable.Drawable mThumb>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    protected void onMeasure(int, int)
    {
        android.graphics.RectF $r1;
        int $i0, $i1, i2, $i3, $i4, $i5;
        float $f0, f1, $f2, $f3;
        com.triggertrap.seekarc.SeekArc r0;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        i2 = virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: int getSuggestedMinimumHeight()>();

        $i3 = staticinvoke <com.triggertrap.seekarc.SeekArc: int getDefaultSize(int,int)>(i2, $i1);

        i2 = virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: int getSuggestedMinimumWidth()>();

        i2 = staticinvoke <com.triggertrap.seekarc.SeekArc: int getDefaultSize(int,int)>(i2, $i0);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i3);

        $f0 = (float) i2;

        $f0 = $f0 * 0.5F;

        $i5 = (int) $f0;

        r0.<com.triggertrap.seekarc.SeekArc: int mTranslateX> = $i5;

        $f0 = (float) $i3;

        $f0 = $f0 * 0.5F;

        $i5 = (int) $f0;

        r0.<com.triggertrap.seekarc.SeekArc: int mTranslateY> = $i5;

        $i5 = virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: int getPaddingLeft()>();

        $i4 = $i4 - $i5;

        $i5 = $i4 / 2;

        r0.<com.triggertrap.seekarc.SeekArc: int mArcRadius> = $i5;

        $i3 = $i3 / 2;

        $i5 = $i4 / 2;

        $i3 = $i3 - $i5;

        $f0 = (float) $i3;

        i2 = i2 / 2;

        $i3 = $i4 / 2;

        i2 = i2 - $i3;

        f1 = (float) i2;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.RectF mArcRect>;

        $f2 = (float) $i4;

        $f2 = $f2 + f1;

        $f3 = (float) $i4;

        $f3 = $f3 + $f0;

        virtualinvoke $r1.<android.graphics.RectF: void set(float,float,float,float)>(f1, $f0, $f2, $f3);

        $f0 = r0.<com.triggertrap.seekarc.SeekArc: float mProgressSweep>;

        i2 = (int) $f0;

        $i4 = r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle>;

        i2 = i2 + $i4;

        $i4 = r0.<com.triggertrap.seekarc.SeekArc: int mRotation>;

        i2 = i2 + $i4;

        i2 = i2 + 90;

        $i4 = r0.<com.triggertrap.seekarc.SeekArc: int mArcRadius>;

        $d0 = (double) $i4;

        $d1 = (double) i2;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d0 = $d0 * $d1;

        $i4 = (int) $d0;

        r0.<com.triggertrap.seekarc.SeekArc: int mThumbXPos> = $i4;

        $i4 = r0.<com.triggertrap.seekarc.SeekArc: int mArcRadius>;

        $d0 = (double) $i4;

        $d1 = (double) i2;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d0 = $d0 * $d1;

        i2 = (int) $d0;

        r0.<com.triggertrap.seekarc.SeekArc: int mThumbYPos> = i2;

        $z0 = r0.<com.triggertrap.seekarc.SeekArc: boolean mTouchInside>;

        virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: void setTouchInSide(boolean)>($z0);

        specialinvoke r0.<android.view.View: void onMeasure(int,int)>($i0, $i1);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.MotionEvent $r1;
        int $i0;
        com.triggertrap.seekarc.SeekArc r0;
        boolean $z0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: boolean isClickable()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label6;
            default: goto label2;
        };

     label2:
        return 1;

     label3:
        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void onStartTrackingTouch()>();

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void updateOnTouch(android.view.MotionEvent)>($r1);

        return 1;

     label4:
        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void updateOnTouch(android.view.MotionEvent)>($r1);

        return 1;

     label5:
        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void onStopTrackingTouch()>();

        virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: void setPressed(boolean)>(0);

        return 1;

     label6:
        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void onStopTrackingTouch()>();

        virtualinvoke r0.<com.triggertrap.seekarc.SeekArc: void setPressed(boolean)>(0);

        return 1;
    }

    public void setArcRotation(int)
    {
        int $i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $i0 := @parameter0: int;

        r0.<com.triggertrap.seekarc.SeekArc: int mRotation> = $i0;

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void updateThumbPosition()>();

        return;
    }

    public void setArcWidth(int)
    {
        int $i0;
        float $f0;
        android.graphics.Paint $r1;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $i0 := @parameter0: int;

        r0.<com.triggertrap.seekarc.SeekArc: int mArcWidth> = $i0;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mArcPaint>;

        $f0 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        return;
    }

    public void setClockwise(boolean)
    {
        com.triggertrap.seekarc.SeekArc r0;
        boolean $z0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $z0 := @parameter0: boolean;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mClockwise> = $z0;

        return;
    }

    public void setOnSeekArcChangeListener(com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener)
    {
        com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener $r1;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $r1 := @parameter0: com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener;

        r0.<com.triggertrap.seekarc.SeekArc: com.triggertrap.seekarc.SeekArc$OnSeekArcChangeListener mOnSeekArcChangeListener> = $r1;

        return;
    }

    public void setProgress(int)
    {
        int $i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void updateProgress(int,boolean)>($i0, 0);

        return;
    }

    public void setProgressWidth(int)
    {
        int $i0;
        float $f0;
        android.graphics.Paint $r1;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $i0 := @parameter0: int;

        r0.<com.triggertrap.seekarc.SeekArc: int mProgressWidth> = $i0;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mProgressPaint>;

        $f0 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        return;
    }

    public void setRoundedEdges(boolean)
    {
        android.graphics.Paint$Cap $r2;
        android.graphics.Paint $r1;
        com.triggertrap.seekarc.SeekArc r0;
        boolean $z0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $z0 := @parameter0: boolean;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mRoundedEdges> = $z0;

        $z0 = r0.<com.triggertrap.seekarc.SeekArc: boolean mRoundedEdges>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mArcPaint>;

        $r2 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r2);

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mProgressPaint>;

        $r2 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r2);

        return;

     label1:
        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mArcPaint>;

        $r2 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r2);

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.Paint mProgressPaint>;

        $r2 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r2);

        return;
    }

    public void setStartAngle(int)
    {
        int $i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $i0 := @parameter0: int;

        r0.<com.triggertrap.seekarc.SeekArc: int mStartAngle> = $i0;

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void updateThumbPosition()>();

        return;
    }

    public void setSweepAngle(int)
    {
        int $i0;
        com.triggertrap.seekarc.SeekArc r0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $i0 := @parameter0: int;

        r0.<com.triggertrap.seekarc.SeekArc: int mSweepAngle> = $i0;

        specialinvoke r0.<com.triggertrap.seekarc.SeekArc: void updateThumbPosition()>();

        return;
    }

    public void setTouchInSide(boolean)
    {
        int i0, i1, $i2;
        float $f0;
        com.triggertrap.seekarc.SeekArc r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: com.triggertrap.seekarc.SeekArc;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.drawable.Drawable mThumb>;

        i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i1 = i1 / 2;

        $r1 = r0.<com.triggertrap.seekarc.SeekArc: android.graphics.drawable.Drawable mThumb>;

        $i2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i0 = $i2 / 2;

        r0.<com.triggertrap.seekarc.SeekArc: boolean mTouchInside> = $z0;

        $z0 = r0.<com.triggertrap.seekarc.SeekArc: boolean mTouchInside>;

        if $z0 == 0 goto label1;

        i1 = r0.<com.triggertrap.seekarc.SeekArc: int mArcRadius>;

        $f0 = (float) i1;

        $f0 = $f0 / 4.0F;

        r0.<com.triggertrap.seekarc.SeekArc: float mTouchIgnoreRadius> = $f0;

        return;

     label1:
        $i2 = r0.<com.triggertrap.seekarc.SeekArc: int mArcRadius>;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        i1 = $i2 - i1;

        $f0 = (float) i1;

        r0.<com.triggertrap.seekarc.SeekArc: float mTouchIgnoreRadius> = $f0;

        return;
    }
}
