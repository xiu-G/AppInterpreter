public final class com.google.gson.internal.bind.DateTypeAdapter extends com.google.gson.TypeAdapter
{
    public static final com.google.gson.TypeAdapterFactory FACTORY;
    private final java.text.DateFormat enUsFormat;
    private final java.text.DateFormat iso8601Format;
    private final java.text.DateFormat localFormat;

    static void <clinit>()
    {
        com.google.gson.internal.bind.DateTypeAdapter$1 $r0;

        $r0 = new com.google.gson.internal.bind.DateTypeAdapter$1;

        specialinvoke $r0.<com.google.gson.internal.bind.DateTypeAdapter$1: void <init>()>();

        <com.google.gson.internal.bind.DateTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.gson.internal.bind.DateTypeAdapter r0;
        java.util.Locale $r1;
        java.text.DateFormat $r2;

        r0 := @this: com.google.gson.internal.bind.DateTypeAdapter;

        specialinvoke r0.<com.google.gson.TypeAdapter: void <init>()>();

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>(2, 2, $r1);

        r0.<com.google.gson.internal.bind.DateTypeAdapter: java.text.DateFormat enUsFormat> = $r2;

        $r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(2, 2);

        r0.<com.google.gson.internal.bind.DateTypeAdapter: java.text.DateFormat localFormat> = $r2;

        $r2 = staticinvoke <com.google.gson.internal.bind.DateTypeAdapter: java.text.DateFormat buildIso8601Format()>();

        r0.<com.google.gson.internal.bind.DateTypeAdapter: java.text.DateFormat iso8601Format> = $r2;

        return;
    }

    private static java.text.DateFormat buildIso8601Format()
    {
        java.text.SimpleDateFormat r0;
        java.util.Locale $r1;
        java.util.TimeZone $r2;

        r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'", $r1);

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke r0.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        return r0;
    }

    private java.util.Date deserializeToDate(java.lang.String)
    {
        java.lang.Throwable r2, $r5, $r6, $r8;
        com.google.gson.JsonSyntaxException $r7;
        java.util.Date $r4;
        com.google.gson.internal.bind.DateTypeAdapter r0;
        java.lang.String $r1;
        java.text.DateFormat $r3;

        r0 := @this: com.google.gson.internal.bind.DateTypeAdapter;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        $r3 = r0.<com.google.gson.internal.bind.DateTypeAdapter: java.text.DateFormat localFormat>;

     label02:
        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r1);

     label03:
        exitmonitor r0;

        return $r4;

     label04:
        $r5 := @caughtexception;

     label05:
        $r3 = r0.<com.google.gson.internal.bind.DateTypeAdapter: java.text.DateFormat enUsFormat>;

     label06:
        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r1);

     label07:
        goto label03;

     label08:
        $r6 := @caughtexception;

     label09:
        $r3 = r0.<com.google.gson.internal.bind.DateTypeAdapter: java.text.DateFormat iso8601Format>;

     label10:
        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r1);

     label11:
        goto label03;

     label12:
        r2 := @caughtexception;

     label13:
        $r7 = new com.google.gson.JsonSyntaxException;

        specialinvoke $r7.<com.google.gson.JsonSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>($r1, r2);

        throw $r7;

     label14:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

        catch java.text.ParseException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label03 with label14;
        catch java.text.ParseException from label06 to label07 with label08;
        catch java.lang.Throwable from label05 to label07 with label14;
        catch java.text.ParseException from label10 to label11 with label12;
        catch java.lang.Throwable from label09 to label11 with label14;
        catch java.lang.Throwable from label13 to label14 with label14;
    }

    public volatile java.lang.Object read(com.google.gson.stream.JsonReader) throws java.io.IOException
    {
        com.google.gson.internal.bind.DateTypeAdapter r0;
        com.google.gson.stream.JsonReader $r1;
        java.util.Date $r2;

        r0 := @this: com.google.gson.internal.bind.DateTypeAdapter;

        $r1 := @parameter0: com.google.gson.stream.JsonReader;

        $r2 = virtualinvoke r0.<com.google.gson.internal.bind.DateTypeAdapter: java.util.Date read(com.google.gson.stream.JsonReader)>($r1);

        return $r2;
    }

    public java.util.Date read(com.google.gson.stream.JsonReader) throws java.io.IOException
    {
        com.google.gson.stream.JsonToken $r2, $r3;
        java.util.Date $r5;
        java.lang.String $r4;
        com.google.gson.internal.bind.DateTypeAdapter r0;
        com.google.gson.stream.JsonReader $r1;

        r0 := @this: com.google.gson.internal.bind.DateTypeAdapter;

        $r1 := @parameter0: com.google.gson.stream.JsonReader;

        $r3 = virtualinvoke $r1.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>;

        if $r3 != $r2 goto label1;

        virtualinvoke $r1.<com.google.gson.stream.JsonReader: void nextNull()>();

        return null;

     label1:
        $r4 = virtualinvoke $r1.<com.google.gson.stream.JsonReader: java.lang.String nextString()>();

        $r5 = specialinvoke r0.<com.google.gson.internal.bind.DateTypeAdapter: java.util.Date deserializeToDate(java.lang.String)>($r4);

        return $r5;
    }

    public volatile void write(com.google.gson.stream.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        java.util.Date $r3;
        java.lang.Object $r2;
        com.google.gson.internal.bind.DateTypeAdapter r0;
        com.google.gson.stream.JsonWriter $r1;

        r0 := @this: com.google.gson.internal.bind.DateTypeAdapter;

        $r1 := @parameter0: com.google.gson.stream.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Date) $r2;

        virtualinvoke r0.<com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)>($r1, $r3);

        return;
    }

    public void write(com.google.gson.stream.JsonWriter, java.util.Date) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        java.util.Date $r2;
        java.lang.String $r3;
        com.google.gson.internal.bind.DateTypeAdapter r0;
        com.google.gson.stream.JsonWriter $r1;
        java.text.DateFormat $r4;

        r0 := @this: com.google.gson.internal.bind.DateTypeAdapter;

        $r1 := @parameter0: com.google.gson.stream.JsonWriter;

        $r2 := @parameter1: java.util.Date;

        entermonitor r0;

        if $r2 != null goto label3;

     label1:
        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 = r0.<com.google.gson.internal.bind.DateTypeAdapter: java.text.DateFormat enUsFormat>;

        $r3 = virtualinvoke $r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r2);

        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>($r3);

     label4:
        goto label2;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
