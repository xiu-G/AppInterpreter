public class cs.network.configs.Config extends java.lang.Object
{
    private static java.lang.String SERVER_API;
    private static java.lang.String apkRootDir;
    private static java.lang.String apkcachesDir;
    private static java.lang.String appID;
    private static java.lang.String appID_spkey;
    private static java.lang.String appPackageName;
    private static java.lang.String appPassword;
    private static java.lang.String appPassword_spkey;
    private static java.lang.String clientUUID;
    private static java.lang.String extendStr;
    private static java.lang.String sdkShellInfo;
    private static java.lang.String sdkShellInfo_spkey;
    private static java.lang.String sdkVersion;
    private static java.lang.String serverImage;
    private static java.lang.String signType;
    private static java.lang.String spname;

    static void <clinit>()
    {
        <cs.network.configs.Config: java.lang.String serverImage> = "";

        <cs.network.configs.Config: java.lang.String SERVER_API> = null;

        <cs.network.configs.Config: java.lang.String appID> = null;

        <cs.network.configs.Config: java.lang.String appPassword> = null;

        <cs.network.configs.Config: java.lang.String clientUUID> = null;

        <cs.network.configs.Config: java.lang.String signType> = null;

        <cs.network.configs.Config: java.lang.String appPackageName> = null;

        <cs.network.configs.Config: java.lang.String apkRootDir> = null;

        <cs.network.configs.Config: java.lang.String sdkVersion> = "3.0";

        <cs.network.configs.Config: java.lang.String sdkShellInfo> = null;

        <cs.network.configs.Config: java.lang.String apkcachesDir> = "ddcaches";

        <cs.network.configs.Config: java.lang.String extendStr> = ".apk";

        <cs.network.configs.Config: java.lang.String spname> = "ddspname";

        <cs.network.configs.Config: java.lang.String appID_spkey> = "appID_spkey";

        <cs.network.configs.Config: java.lang.String appPassword_spkey> = "appPassword_spkey";

        <cs.network.configs.Config: java.lang.String sdkShellInfo_spkey> = "sdkShellInfo_spkey";

        return;
    }

    public void <init>()
    {
        cs.network.configs.Config r0;

        r0 := @this: cs.network.configs.Config;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getApiver()
    {
        java.lang.String r0;

        r0 = <cs.network.configs.Config: java.lang.String sdkVersion>;

        return r0;
    }

    public static java.lang.String getApkRootDir(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        java.io.File r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = <cs.network.configs.Config: java.lang.String apkRootDir>;

        if $r1 != null goto label4;

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label5;

        r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r1 = <cs.network.configs.Config: java.lang.String apkcachesDir>;

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);

     label1:
        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        virtualinvoke r2.<java.io.File: boolean mkdir()>();

     label2:
        $r1 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label6;

        $r1 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

     label3:
        <cs.network.configs.Config: java.lang.String apkRootDir> = $r1;

     label4:
        $r1 = <cs.network.configs.Config: java.lang.String apkRootDir>;

        return $r1;

     label5:
        r2 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        goto label1;

     label6:
        $r4 = new java.lang.StringBuilder;

        $r1 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;
    }

    public static java.lang.String getAppID(android.content.Context)
    {
        java.io.PrintStream $r3;
        android.content.Context $r0;
        android.content.SharedPreferences $r2;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = <cs.network.configs.Config: java.lang.String appID>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("appinfo", 32768);

        $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("appID", null);

        <cs.network.configs.Config: java.lang.String appID> = $r1;

     label1:
        $r1 = <cs.network.configs.Config: java.lang.String appID>;

        if $r1 != null goto label2;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("appid\u672a\u914d\u7f6e,\u5c1d\u8bd5\u81ea\u52a8\u8bfb\u53d6\u6570\u636e");

        $r1 = <cs.network.configs.Config: java.lang.String appID>;

        if $r1 != null goto label2;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("appID\u672a\u914d\u7f6e");

        throw $r4;

     label2:
        $r1 = <cs.network.configs.Config: java.lang.String appID>;

        return $r1;
    }

    public static java.lang.String getAppPackageName(android.content.Context)
    {
        cs.utils.system.PackageUtil r1;
        android.content.Context $r0;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r2 = <cs.network.configs.Config: java.lang.String appPackageName>;

        if $r2 != null goto label1;

        r1 = new cs.utils.system.PackageUtil;

        specialinvoke r1.<cs.utils.system.PackageUtil: void <init>(android.content.Context)>($r0);

        $r2 = virtualinvoke r1.<cs.utils.system.PackageUtil: java.lang.String getSelfPackageName()>();

        <cs.network.configs.Config: java.lang.String appPackageName> = $r2;

     label1:
        $r2 = <cs.network.configs.Config: java.lang.String appPackageName>;

        return $r2;
    }

    public static java.lang.String getAppPassword(android.content.Context)
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r2;
        java.lang.String $r1;
        java.lang.RuntimeException $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = <cs.network.configs.Config: java.lang.String appPassword>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("appinfo", 32768);

        $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("appPassword", null);

        <cs.network.configs.Config: java.lang.String appPassword> = $r1;

     label1:
        $r1 = <cs.network.configs.Config: java.lang.String appPassword>;

        if $r1 != null goto label2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("secret\u672a\u914d\u7f6e");

        throw $r3;

     label2:
        $r1 = <cs.network.configs.Config: java.lang.String appPassword>;

        return $r1;
    }

    public static java.lang.String getClientUUID(android.content.Context)
    {
        cs.utils.system.DeviceUtil $r2;
        android.content.Context $r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = <cs.network.configs.Config: java.lang.String clientUUID>;

        if $r1 != null goto label1;

        $r2 = new cs.utils.system.DeviceUtil;

        specialinvoke $r2.<cs.utils.system.DeviceUtil: void <init>(android.content.Context)>($r0);

        $r1 = virtualinvoke $r2.<cs.utils.system.DeviceUtil: java.lang.String getDeviceUUID()>();

        <cs.network.configs.Config: java.lang.String clientUUID> = $r1;

     label1:
        $r1 = <cs.network.configs.Config: java.lang.String clientUUID>;

        if $r1 != null goto label2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("\u83b7\u53d6\u8bbe\u5907\u6807\u8bc6\u5931\u8d25");

        throw $r3;

     label2:
        $r1 = <cs.network.configs.Config: java.lang.String clientUUID>;

        return $r1;
    }

    public static java.lang.String getExtendStr()
    {
        java.lang.String r0;

        r0 = <cs.network.configs.Config: java.lang.String extendStr>;

        return r0;
    }

    public static java.lang.String getSERVER_API()
    {
        java.lang.String $r0;

        $r0 = <cs.network.configs.Config: java.lang.String SERVER_API>;

        if $r0 != null goto label1;

        <cs.network.configs.Config: java.lang.String SERVER_API> = "http://115.28.142.241:8080/adCenter/";

     label1:
        $r0 = <cs.network.configs.Config: java.lang.String SERVER_API>;

        return $r0;
    }

    public static java.lang.String getSdkShellInfo(android.content.Context)
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r2;
        java.lang.String $r1;
        java.lang.RuntimeException $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = <cs.network.configs.Config: java.lang.String sdkShellInfo>;

        if $r1 != null goto label1;

        $r1 = <cs.network.configs.Config: java.lang.String spname>;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r1, 32768);

        $r1 = <cs.network.configs.Config: java.lang.String sdkShellInfo_spkey>;

        $r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r1, null);

        <cs.network.configs.Config: java.lang.String sdkShellInfo> = $r1;

     label1:
        $r1 = <cs.network.configs.Config: java.lang.String sdkShellInfo>;

        if $r1 != null goto label2;

        $r1 = <cs.network.configs.Config: java.lang.String sdkShellInfo>;

        if $r1 != null goto label2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("sdkShellInfo\u672a\u914d\u7f6e");

        throw $r3;

     label2:
        $r1 = <cs.network.configs.Config: java.lang.String sdkShellInfo>;

        return $r1;
    }

    public static java.lang.String getServerImage()
    {
        java.lang.String r0;

        r0 = <cs.network.configs.Config: java.lang.String serverImage>;

        return r0;
    }

    public static java.lang.String getSignType()
    {
        java.lang.String $r0;

        $r0 = <cs.network.configs.Config: java.lang.String signType>;

        if $r0 != null goto label1;

        <cs.network.configs.Config: java.lang.String signType> = "md5";

     label1:
        $r0 = <cs.network.configs.Config: java.lang.String signType>;

        return $r0;
    }

    public static void init(java.lang.String, java.lang.String, java.lang.String, android.content.Context)
    {
        android.content.SharedPreferences$Editor $r8;
        android.content.Context $r0;
        android.content.Intent r1, $r15;
        java.lang.String[] $r9;
        cs.network.configs.Config$1 $r11;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r6;
        boolean $z0;
        java.io.PrintStream $r5, $r12;
        java.lang.RuntimeException $r13;
        android.content.SharedPreferences $r7;
        java.lang.StringBuilder $r10, $r14;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r4 := @parameter2: java.lang.String;

        $r0 := @parameter3: android.content.Context;

        $z0 = <cs.utils.system.SystemUtil: boolean debug>;

        if $z0 != 0 goto label2;

        $r12 = new java.io.PrintStream;

        $r11 = new cs.network.configs.Config$1;

        specialinvoke $r11.<cs.network.configs.Config$1: void <init>()>();

        specialinvoke $r12.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r11);

        staticinvoke <java.lang.System: void setOut(java.io.PrintStream)>($r12);

     label1:
        $r6 = <cs.network.configs.Config: java.lang.String spname>;

        $i0 = 32768;

        $r7 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r6, $i0);

        if $r4 != null goto label7;

        $r4 = <cs.network.configs.Config: java.lang.String sdkShellInfo_spkey>;

        $r4 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r4, null);

        if $r4 != null goto label3;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("\u8bfb\u53d6sdk\u5916\u58f3\u4fe1\u606f\u5931\u8d25");

        throw $r13;

     label2:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("\u5f53\u524d\u5904\u4e8e\u8c03\u8bd5\u6a21\u5f0f,\u5173\u95ed\u8c03\u8bd5\u6a21\u5f0f\u8bf7\u8bbe\u7f6eSystemUtil.debug=false");

        goto label1;

     label3:
        <cs.network.configs.Config: java.lang.String sdkShellInfo> = $r4;

     label4:
        if $r2 == null goto label5;

        if $r3 != null goto label9;

     label5:
        $r2 = <cs.network.configs.Config: java.lang.String appID_spkey>;

        $r4 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r2, null);

        $r2 = $r4;

        $r3 = <cs.network.configs.Config: java.lang.String appPassword_spkey>;

        $r6 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, null);

        $r3 = $r6;

        if $r4 == null goto label6;

        if $r6 != null goto label9;

     label6:
        $r2 = staticinvoke <cs.utils.config.ConfigReader: java.lang.String getMetaDataName(android.content.Context)>($r0);

        $r2 = staticinvoke <cs.utils.config.ConfigReader: java.lang.String getMetaDataValue(java.lang.String,android.content.Context)>($r2, $r0);

        if $r2 != null goto label8;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("\u8bf7\u5728AndroidManifest.xml\u6216\u8005\u4ee3\u7801\u4e2d\u914d\u7f6eappid\u4ee5\u53caapppassword");

        throw $r13;

     label7:
        <cs.network.configs.Config: java.lang.String sdkShellInfo> = $r4;

        $r8 = interfaceinvoke $r7.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r6 = <cs.network.configs.Config: java.lang.String sdkShellInfo_spkey>;

        interfaceinvoke $r8.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r6, $r4);

        interfaceinvoke $r8.<android.content.SharedPreferences$Editor: boolean commit()>();

        goto label4;

     label8:
        $r9 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");

        $r2 = $r9[0];

        $r3 = $r9[1];

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5230appid:");

        $r10 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",appPassword:");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label9:
        <cs.network.configs.Config: java.lang.String appID> = $r2;

        <cs.network.configs.Config: java.lang.String appPassword> = $r3;

        $r8 = interfaceinvoke $r7.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = <cs.network.configs.Config: java.lang.String appID_spkey>;

        interfaceinvoke $r8.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r4, $r2);

        $r2 = <cs.network.configs.Config: java.lang.String appPassword_spkey>;

        interfaceinvoke $r8.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r2, $r3);

        interfaceinvoke $r8.<android.content.SharedPreferences$Editor: boolean commit()>();

        $r15 = new android.content.Intent;

        r1 = $r15;

        specialinvoke $r15.<android.content.Intent: void <init>()>();

        $r2 = staticinvoke <cs.utils.config.ConfigReader: java.lang.String getServiceClassName(android.content.Context)>($r0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>($r0, $r2);

        virtualinvoke $r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r1);

        return;
    }
}
