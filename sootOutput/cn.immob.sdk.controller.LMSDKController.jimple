public class cn.immob.sdk.controller.LMSDKController extends java.lang.Object
{
    public static final java.lang.String ADWALL_APPSTATUS_DOWNLOADED;
    public static final java.lang.String ADWALL_APPSTATUS_DOWNLOADING;
    public static final java.lang.String ADWALL_APPSTATUS_INQUEUE;
    public static final java.lang.String ADWALL_APPSTATUS_INSTALLED;
    public static final java.lang.String ADWALL_APPSTATUS_NOT_INSTALLED;
    private static javax.crypto.Cipher a;
    private android.content.Context b;
    private cn.immob.sdk.LMAdListener c;
    private cn.immob.sdk.ImmobView d;
    private java.lang.String e;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        cn.immob.sdk.controller.LMSDKController r0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b> = null;

        r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e> = "LMSDKController";

        r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b> = $r1;

        return;
    }

    private boolean a(java.lang.String)
    {
        android.content.Context $r4;
        int $i0;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        $r2 = "";

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r4 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        if $r4 != null goto label1;

        return 0;

     label1:
        $r4 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $i0 = virtualinvoke $r4.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $i0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static java.util.List getAllInstallSoft(android.content.Context)
    {
        android.content.Context $r0;
        java.util.List $r2;
        android.content.pm.PackageManager $r1;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return null;

     label1:
        staticinvoke <S: void a(java.lang.String,java.lang.String)>("tag", "getAllInstallSoft");

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r1.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(0);

        return $r2;
    }

    public static java.io.File getFile(java.lang.String, boolean)
    {
        java.lang.String $r0, $r1;
        java.io.File $r2;
        boolean $z0, $z1;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $r0 != null goto label1;

        $r1 = "";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r0);

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

     label2:
        return $r2;
    }

    public static java.lang.String getUUID()
    {
        java.lang.StringBuilder $r0;
        java.util.UUID $r1;
        java.lang.String $r2;

        $r1 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r2 = virtualinvoke $r1.<java.util.UUID: java.lang.String toString()>();

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Lmmob");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("-", "");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public void fireAdReceiveEvent(java.lang.String)
    {
        cn.immob.sdk.ImmobView $r3;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r2;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, "fireAdReceiveEvent");

        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        if $r3 == null goto label1;

        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        virtualinvoke $r3.<cn.immob.sdk.ImmobView: void adReceive(java.lang.String)>($r1);

     label1:
        return;
    }

    public void fireCPAAction(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        cn.immob.sdk.ImmobView $r8;
        java.lang.StringBuilder $r6;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r7;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("fireCPAAction() -- the packagename:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r5, $r7);

        $z0 = specialinvoke r0.<cn.immob.sdk.controller.LMSDKController: boolean a(java.lang.String)>("android.permission.WRITE_EXTERNAL_STORAGE");

        if $z0 != 0 goto label1;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "don\'t have the android.Manifest.permission.WRITE_EXTERNAL_STORAGE permission so can\'t request server to get the apk!");

        return;

     label1:
        $r8 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        virtualinvoke $r8.<cn.immob.sdk.ImmobView: void downloadSoft(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4);

        return;
    }

    public void fireInstallAction(java.lang.String, java.lang.String)
    {
        cn.immob.sdk.ImmobView $r4;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r3, "fireInstallAction");

        $r4 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        virtualinvoke $r4.<cn.immob.sdk.ImmobView: void installDownloadSoft(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void fireTurnOffADUnit()
    {
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1;
        cn.immob.sdk.ImmobView $r2;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "fireTurnOffADUnit");

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        if $r2 == null goto label1;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r1, "fireTurnOffADUnit has appear");

     label1:
        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        virtualinvoke $r2.<cn.immob.sdk.ImmobView: void turnOffADUnit()>();

        return;
    }

    public void fireUpdateFramework(java.lang.String)
    {
        cn.immob.sdk.ImmobView $r3;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r2;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, "fireUpdateFramework");

        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        if $r3 != null goto label1;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r1, "view is null");

        return;

     label1:
        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        virtualinvoke $r3.<cn.immob.sdk.ImmobView: void setLoadWebView(boolean)>(0);

        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        virtualinvoke $r3.<cn.immob.sdk.ImmobView: void requestFramework(java.lang.String)>($r1);

        return;
    }

    public void fireUploadDeviceInfo(java.lang.String)
    {
        cn.immob.sdk.ImmobView $r3;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r2;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, "fireUploadDeviceInfo");

        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        if $r3 != null goto label1;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r1, "view is null");

        return;

     label1:
        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        virtualinvoke $r3.<cn.immob.sdk.ImmobView: void uploadDevices(java.lang.String)>($r1);

        return;
    }

    public void fireUploadSWList(java.lang.String)
    {
        cn.immob.sdk.ImmobView $r3;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r2;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, "fireUploadSWList");

        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        if $r3 != null goto label1;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r1, "view is null");

        return;

     label1:
        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        virtualinvoke $r3.<cn.immob.sdk.ImmobView: void uploadSWList(java.lang.String)>($r1);

        return;
    }

    public java.lang.String getADUnitID()
    {
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1;
        cn.immob.sdk.ImmobView $r2;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getADUnitID");

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        $r1 = virtualinvoke $r2.<cn.immob.sdk.ImmobView: java.lang.String getAdUnitId()>();

        return $r1;
    }

    public java.lang.String getAppState(java.lang.String)
    {
        java.lang.Throwable $r10;
        android.content.Context $r5;
        android.content.pm.PackageManager $r9;
        java.lang.String[] $r6;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r3, $r4;
        boolean $z0;
        java.lang.StringBuilder $r2, $r7, $r11;
        cn.immob.sdk.controller.LMSDKController r0;
        android.app.Activity $r8;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("getAppState() -- packagename is:");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r3, $r4);

        $z0 = specialinvoke r0.<cn.immob.sdk.controller.LMSDKController: boolean a(java.lang.String)>("android.permission.GET_TASKS");

        if $z0 != 0 goto label01;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "don\'t have the android.Manifest.permission.GET_TASKS permission,so can\'t query the app state...");

        return null;

     label01:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        if $r3 == null goto label02;

        $r3 = "";

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label03;

     label02:
        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "the packagename is null,so can\'t query the app state...");

        return null;

     label03:
        $r5 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        if $r5 != null goto label04;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "the context object is null,so can\'t query the app state...");

        return null;

     label04:
        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        if $r6 == null goto label05;

        $i0 = lengthof $r6;

        if $i0 > 0 goto label22;

     label05:
        $r6 = newarray (java.lang.String)[1];

        $r6[0] = $r1;

     label06:
        $r7 = new java.lang.StringBuilder;

        $r2 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $i0 = 0;

     label07:
        $i1 = lengthof $r6;

        if $i0 < $i1 goto label08;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        staticinvoke <cn.immob.sdk.net.DownloadService: void clearRubish()>();

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("getAppState() -- the sb is:");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, $r3);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label08:
        $r5 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r8 = (android.app.Activity) $r5;

     label09:
        $r9 = virtualinvoke $r8.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

     label10:
        $r1 = $r6[$i0];

     label11:
        virtualinvoke $r9.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 8192);

     label12:
        $r1 = "installed";

     label13:
        if $r1 != "notInstalled" goto label21;

        $r5 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r3 = $r6[$i0];

        $i1 = staticinvoke <cn.immob.sdk.net.DownloadService: int queryIsDownloadBy(android.content.Context,java.lang.String)>($r5, $r3);

        $i2 = $i1;

        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("getAppState() -- installValue:");

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r3, $r4);

     label14:
        lookupswitch($i2)
        {
            case 1: goto label18;
            case 2: goto label19;
            case 3: goto label20;
            default: goto label15;
        };

     label15:
        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("getAppState() -- the packageName is:");

        $r4 = $r6[$i0];

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; the state is:");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r3, $r4);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r3 = $r6[$i0];

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\":\"");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",");

        $i1 = lengthof $r6;

        $i2 = -1;

        $i1 = $i1 + $i2;

        if $i0 != $i1 goto label16;

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int lastIndexOf(java.lang.String)>(",");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i1);

     label16:
        $i0 = $i0 + 1;

        goto label07;

     label17:
        $r10 := @caughtexception;

        $r1 = "notInstalled";

        goto label13;

     label18:
        $r1 = "downloading";

        goto label15;

     label19:
        $r1 = "inqueue";

        goto label15;

     label20:
        $r1 = "downloaded";

        goto label15;

     label21:
        $i2 = 0;

        goto label14;

     label22:
        goto label06;

        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label17;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label17;
    }

    public java.lang.String getAppVersion()
    {
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String r1;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        r1 = <c: java.lang.String N>;

        return r1;
    }

    public java.lang.String getBase64Payload(java.lang.String)
    {
        byte[] $r4;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $r2 = "";

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r1 = staticinvoke <K: java.lang.String a(byte[])>($r4);

        return $r1;

     label1:
        return null;
    }

    public java.lang.String getBrand()
    {
        java.lang.Class $r1;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $z0 = specialinvoke r0.<cn.immob.sdk.controller.LMSDKController: boolean a(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $z0 != 0 goto label1;

        $r1 = class "LL;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "don\'t have the android.Manifest.permission.READ_PHONE_STATE permission so can\'t read get the Build.BRAND info!");

        return null;

     label1:
        $r2 = <android.os.Build: java.lang.String BRAND>;

        return $r2;
    }

    public java.lang.String getBundleID()
    {
        android.content.Context $r2;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String r3;
        android.content.pm.ApplicationInfo $r1;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r1 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        r3 = $r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        return r3;
    }

    public java.lang.String getChannelID()
    {
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String r1;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        r1 = <cn.immob.sdk.ImmobView: java.lang.String channelID>;

        return r1;
    }

    public java.lang.String getIMEI()
    {
        android.content.SharedPreferences$Editor $r11;
        java.lang.Throwable $r12;
        android.content.Context $r2;
        long $l1;
        byte $b2;
        java.lang.Long $r10;
        android.telephony.TelephonyManager $r9;
        int $i0;
        java.lang.String $r1, $r5, $r7;
        boolean $z0;
        java.lang.Exception $r14;
        android.content.SharedPreferences $r4;
        java.lang.Class $r3;
        java.lang.StringBuilder $r6, $r13;
        java.lang.Object $r8;
        cn.immob.sdk.controller.LMSDKController r0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getIMEI");

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        if $r2 != null goto label01;

        $r1 = staticinvoke <cn.immob.sdk.controller.LMSDKController: java.lang.String getUUID()>();

        return $r1;

     label01:
        $z0 = specialinvoke r0.<cn.immob.sdk.controller.LMSDKController: boolean a(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $z0 != 0 goto label02;

        $r3 = class "LL;";

        $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "don\'t have the android.Manifest.permission.READ_PHONE_STATE permission so can\'t read get the imei info!");

        $r1 = staticinvoke <cn.immob.sdk.controller.LMSDKController: java.lang.String getUUID()>();

        return $r1;

     label02:
        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("SDKIMEI", 2);

        $r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("imei", null);

        $r5 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("getIMEI111111=");

        $r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r5, $r7);

        if $r1 == null goto label03;

        $r5 = "";

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label17;

     label03:
        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r8 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r9 = (android.telephony.TelephonyManager) $r8;

        $r1 = virtualinvoke $r9.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        if $r1 == null goto label17;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label17;

     label04:
        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

     label05:
        $r1 = $r5;

     label06:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $l1 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

     label07:
        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label13;

     label08:
        $r5 = staticinvoke <cn.immob.sdk.controller.LMSDKController: java.lang.String getUUID()>();

     label09:
        $r1 = $r5;

        if $r5 == null goto label12;

     label10:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

     label11:
        if $z0 == 0 goto label13;

     label12:
        $r1 = staticinvoke <cn.immob.sdk.controller.LMSDKController: java.lang.String getUUID()>();

     label13:
        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

     label14:
        $r4 = virtualinvoke $r2.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("SDKIMEI", 2);

        $r11 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r11.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("imei", $r1);

        interfaceinvoke $r11.<android.content.SharedPreferences$Editor: boolean commit()>();

     label15:
        return $r1;

     label16:
        $r12 := @caughtexception;

        $r14 = (java.lang.Exception) $r12;

        staticinvoke <S: void a(java.lang.Exception)>($r14);

        return "";

     label17:
        return $r1;

        catch java.lang.NumberFormatException from label04 to label05 with label16;
        catch java.lang.NumberFormatException from label06 to label07 with label16;
        catch java.lang.NumberFormatException from label08 to label09 with label16;
        catch java.lang.NumberFormatException from label10 to label11 with label16;
        catch java.lang.NumberFormatException from label12 to label13 with label16;
        catch java.lang.NumberFormatException from label14 to label15 with label16;
    }

    public java.lang.String getIMSI()
    {
        android.content.Context $r2;
        android.telephony.TelephonyManager $r5;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r6, $r8;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getIMSI");

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        if $r2 != null goto label1;

        return "null";

     label1:
        $z0 = specialinvoke r0.<cn.immob.sdk.controller.LMSDKController: boolean a(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $z0 != 0 goto label2;

        $r3 = class "LL;";

        $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "don\'t have the android.Manifest.permission.READ_PHONE_STATE permission so can\'t read get the imsi info!");

        return "null";

     label2:
        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r5 = (android.telephony.TelephonyManager) $r4;

        $r6 = virtualinvoke $r5.<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>();

        $r1 = $r6;

        if $r6 != null goto label3;

        $r1 = "null";

     label3:
        $r6 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("getIMSI=");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r6, $r8);

        return $r1;
    }

    public java.lang.String getInterstitialAdsURL()
    {
        android.content.Context $r1;
        android.content.SharedPreferences $r2;
        java.lang.StringBuilder $r3;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r4, $r5, $r6;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("AdProperties", 2);

        $r3 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("ImmobHeader_");

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r4 = <cn.immob.sdk.ImmobView: java.lang.String adUnitID>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("getClickUrl() -- key is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r5, $r6);

        $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r4, null);

        return $r4;
    }

    public java.lang.String getLanguage()
    {
        java.util.Locale $r2;
        java.lang.StringBuilder $r1;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r3, $r4;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r3 = virtualinvoke $r2.<java.util.Locale: java.lang.String getLanguage()>();

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r2.<java.util.Locale: java.lang.String getCountry()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r1 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getMAC()
    {
        android.content.SharedPreferences$Editor $r11;
        android.content.Context $r2;
        android.net.wifi.WifiInfo $r10;
        java.lang.Exception $r12;
        android.net.wifi.WifiManager $r9;
        android.content.SharedPreferences $r4;
        int $i0;
        java.lang.Class $r3;
        java.lang.StringBuilder $r6;
        java.lang.Object $r8;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r5, $r7;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getMAC");

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        if $r2 != null goto label1;

        $r1 = staticinvoke <cn.immob.sdk.controller.LMSDKController: java.lang.String getUUID()>();

        return $r1;

     label1:
        $z0 = specialinvoke r0.<cn.immob.sdk.controller.LMSDKController: boolean a(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $z0 != 0 goto label2;

        $r3 = class "LL;";

        $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "don\'t have the android.Manifest.permission.READ_PHONE_STATE permission so can\'t read get the mac info!");

        $r1 = staticinvoke <cn.immob.sdk.controller.LMSDKController: java.lang.String getUUID()>();

        return $r1;

     label2:
        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("SDKMAC", 2);

        $r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("mac", null);

        $r5 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("getMAC1111=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r5, $r7);

        if $r1 == null goto label3;

        $r5 = "";

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label7;

     label3:
        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r8 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r9 = (android.net.wifi.WifiManager) $r8;

        $r10 = virtualinvoke $r9.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r5 = virtualinvoke $r10.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

     label4:
        $r1 = $r5;

     label5:
        if $r1 == null goto label7;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label7;

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("SDKMAC", 2);

        $r11 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r11.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("mac", $r1);

        interfaceinvoke $r11.<android.content.SharedPreferences$Editor: boolean commit()>();

        return $r1;

     label6:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

        goto label5;

     label7:
        return $r1;

        catch java.lang.Exception from label3 to label4 with label6;
    }

    public java.lang.String getModel()
    {
        java.lang.Class $r1;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $z0 = specialinvoke r0.<cn.immob.sdk.controller.LMSDKController: boolean a(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $z0 != 0 goto label1;

        $r1 = class "LL;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "don\'t have the android.Manifest.permission.READ_PHONE_STATE permission so can\'t read get the Build.MODEL info!");

        return null;

     label1:
        $r2 = <android.os.Build: java.lang.String MODEL>;

        return $r2;
    }

    public java.lang.String getOSVersion()
    {
        java.lang.Class $r1;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $z0 = specialinvoke r0.<cn.immob.sdk.controller.LMSDKController: boolean a(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $z0 != 0 goto label1;

        $r1 = class "LL;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "don\'t have the android.Manifest.permission.READ_PHONE_STATE permission so can\'t read get the Build.VERSION.RELEASE info!");

        return null;

     label1:
        $r2 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        return $r2;
    }

    public java.lang.String getRSAEncryptedPaylod(java.lang.String)
    {
        java.lang.Throwable $r13;
        byte[] $r10;
        java.security.spec.InvalidKeySpecException $r17;
        javax.crypto.Cipher $r9;
        java.security.spec.RSAPublicKeySpec $r5, $r15;
        java.math.BigInteger $r4, $r14;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        java.security.KeyPairGenerator $r6;
        java.security.PublicKey $r8;
        java.lang.Exception $r11;
        java.security.KeyFactory $r7;
        java.lang.StringBuilder $r12, $r16;
        cn.immob.sdk.controller.LMSDKController r0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label15;

        $r2 = "";

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, "getRSAEncryptedPaylod");

        $r4 = new java.math.BigInteger;

        specialinvoke $r4.<java.math.BigInteger: void <init>(java.lang.String)>("");

        $r14 = new java.math.BigInteger;

        specialinvoke $r14.<java.math.BigInteger: void <init>(java.lang.String)>("");

        $r15 = new java.security.spec.RSAPublicKeySpec;

        $r5 = $r15;

        specialinvoke $r15.<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r14);

     label02:
        $r6 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>("RSA");

        virtualinvoke $r6.<java.security.KeyPairGenerator: void initialize(int)>(2048);

        $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("RSA");

        $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5);

     label03:
        $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA");

     label04:
        <cn.immob.sdk.controller.LMSDKController: javax.crypto.Cipher a> = $r9;

     label05:
        virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r8);

     label06:
        $r9 = <cn.immob.sdk.controller.LMSDKController: javax.crypto.Cipher a>;

     label07:
        $r10 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r10 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10);

        $r1 = staticinvoke <K: java.lang.String a(byte[])>($r10);

     label08:
        return $r1;

     label09:
        $r11 := @caughtexception;

     label10:
        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

     label11:
        $r16 = new java.lang.StringBuilder;

        $r12 = $r16;

     label12:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("LMSDKController=");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void c(java.lang.String,java.lang.String)>("LMSDKController", $r1);

     label13:
        return null;

     label14:
        $r13 := @caughtexception;

        $r17 = (java.security.spec.InvalidKeySpecException) $r13;

        virtualinvoke $r17.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("LMSDKController=");

        $r12 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void c(java.lang.String,java.lang.String)>("LMSDKController", $r1);

     label15:
        return null;

        catch java.security.spec.InvalidKeySpecException from label02 to label03 with label14;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.security.spec.InvalidKeySpecException from label10 to label11 with label14;
        catch java.security.spec.InvalidKeySpecException from label12 to label13 with label14;
    }

    public java.lang.String getSDKVersion()
    {
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getSDKVersion");

        $r1 = <c: java.lang.String o>;

        return $r1;
    }

    public float getScreenDensity()
    {
        android.content.Context $r3;
        android.view.WindowManager $r6;
        java.lang.RuntimeException $r4;
        android.util.DisplayMetrics $r2;
        android.view.Display $r7;
        float f0;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1;
        android.app.Activity $r5;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getScreenDensity");

        $r2 = new android.util.DisplayMetrics;

        specialinvoke $r2.<android.util.DisplayMetrics: void <init>()>();

        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        if $r3 != null goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("the arguments is null");

        throw $r4;

     label1:
        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r5 = (android.app.Activity) $r3;

        $r6 = virtualinvoke $r5.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r7 = interfaceinvoke $r6.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r7.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r2);

        f0 = $r2.<android.util.DisplayMetrics: float density>;

        return f0;
    }

    public int getScreenHeight()
    {
        android.content.Context $r2;
        android.view.WindowManager $r5;
        java.lang.RuntimeException $r3;
        android.content.res.Configuration $r8;
        int $i0, $i1;
        android.view.Display $r6;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1;
        android.app.Activity $r4;
        android.content.res.Resources $r7;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getScreenHeight");

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        if $r2 != null goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("the arguments is null");

        throw $r3;

     label1:
        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r4 = (android.app.Activity) $r2;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r6 = interfaceinvoke $r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r6.<android.view.Display: int getHeight()>();

        $r7 = virtualinvoke $r4.<android.app.Activity: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i1 = $r8.<android.content.res.Configuration: int orientation>;

        if $i1 != 2 goto label2;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r6 = interfaceinvoke $r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r6.<android.view.Display: int getWidth()>();

     label2:
        return $i0;
    }

    public int getScreenWidth()
    {
        android.content.Context $r2;
        android.view.WindowManager $r5;
        java.lang.RuntimeException $r3;
        android.content.res.Configuration $r8;
        int $i0, $i1;
        android.view.Display $r6;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1;
        android.app.Activity $r4;
        android.content.res.Resources $r7;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getScreenWidth");

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        if $r2 != null goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("the arguments is null");

        throw $r3;

     label1:
        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r4 = (android.app.Activity) $r2;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r6 = interfaceinvoke $r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r6.<android.view.Display: int getWidth()>();

        $r7 = virtualinvoke $r4.<android.app.Activity: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i1 = $r8.<android.content.res.Configuration: int orientation>;

        if $i1 != 2 goto label2;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r6 = interfaceinvoke $r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r6.<android.view.Display: int getHeight()>();

     label2:
        return $i0;
    }

    public int getStreenWidth()
    {
        android.content.Context $r2;
        android.view.WindowManager $r4;
        android.util.DisplayMetrics $r1;
        java.lang.Exception $r6;
        int i0;
        android.view.Display $r5;
        java.lang.Object $r3;
        cn.immob.sdk.controller.LMSDKController r0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = new android.util.DisplayMetrics;

     label1:
        specialinvoke $r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r4 = (android.view.WindowManager) $r3;

        $r5 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r5.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r1);

        i0 = $r1.<android.util.DisplayMetrics: int widthPixels>;

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String getTimeZone()
    {
        java.util.TimeZone $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getTimeZone");

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $i0 = virtualinvoke $r2.<java.util.TimeZone: int getRawOffset()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("LMSDKController_offset=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMSDKController_offset", $r1);

        if $i0 >= 0 goto label2;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

     label1:
        $i1 = $i1 / 1000;

        $i1 = $i1 / 60;

        $i1 = $i1 / 60;

        if $i0 >= 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("-");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $i1 = $i0;

        goto label1;

     label3:
        if $i1 != 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("+");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String getUA()
    {
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getUA");

        $r1 = <c: java.lang.String I>;

        return $r1;
    }

    public java.lang.String getUDID()
    {
        java.lang.StringBuilder $r2;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "getUDID");

        $r2 = new java.lang.StringBuilder;

        $r1 = virtualinvoke r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String getMAC()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r1 = virtualinvoke r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String getIMEI()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String getUserProperties()
    {
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1;
        cn.immob.sdk.ImmobView $r2;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        if $r2 == null goto label1;

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        $r1 = virtualinvoke $r2.<cn.immob.sdk.ImmobView: java.lang.String getUserProperties()>();

        return $r1;

     label1:
        return null;
    }

    public boolean isAppOnTop()
    {
        cn.immob.sdk.controller.LMSDKController r0;
        cn.immob.sdk.ImmobView $r1;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        $z0 = virtualinvoke $r1.<cn.immob.sdk.ImmobView: boolean isTopActivy()>();

        return $z0;
    }

    public void log(java.lang.String, java.lang.String)
    {
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r2;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        return;
    }

    public boolean nativeExecute(java.lang.String)
    {
        java.lang.Throwable $r10;
        android.content.Context $r3;
        cn.immob.sdk.ImmobView $r8;
        android.content.pm.PackageManager $r5;
        android.content.pm.PackageManager$NameNotFoundException $r12;
        android.content.Intent $r6;
        java.lang.StringBuilder $r9, $r11;
        cn.immob.sdk.controller.LMSDKController r0;
        java.lang.String $r1, $r2;
        cn.immob.sdk.LMAdListener $r7;
        android.app.Activity $r4;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.controller.LMSDKController: java.lang.String e>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, "nativeExecute");

        if $r1 == null goto label01;

        $r2 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label02;

     label01:
        return 0;

     label02:
        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        if $r3 != null goto label03;

        return 0;

     label03:
        $r3 = r0.<cn.immob.sdk.controller.LMSDKController: android.content.Context b>;

        $r4 = (android.app.Activity) $r3;

     label04:
        $r5 = virtualinvoke $r4.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 8192);

     label05:
        $r6 = new android.content.Intent;

     label06:
        specialinvoke $r6.<android.content.Intent: void <init>()>();

        $r5 = virtualinvoke $r4.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>($r1);

        virtualinvoke $r4.<android.app.Activity: void startActivity(android.content.Intent)>($r6);

     label07:
        $r7 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.LMAdListener c>;

        if $r7 == null goto label09;

        $r8 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

        if $r8 == null goto label09;

        $r7 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.LMAdListener c>;

        $r8 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

     label08:
        interfaceinvoke $r7.<cn.immob.sdk.LMAdListener: void onLeaveApplication(cn.immob.sdk.ImmobView)>($r8);

     label09:
        $r11 = new java.lang.StringBuilder;

        $r9 = $r11;

     label10:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("LMSDKController_listener=");

     label11:
        $r7 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.LMAdListener c>;

     label12:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label13:
        $r8 = r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d>;

     label14:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void c(java.lang.String,java.lang.String)>("LMSDKController_listener", $r1);

     label15:
        return 1;

     label16:
        $r10 := @caughtexception;

        $r12 = (android.content.pm.PackageManager$NameNotFoundException) $r10;

        virtualinvoke $r12.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label16;
        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label16;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label16;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label16;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label16;
        catch android.content.pm.PackageManager$NameNotFoundException from label14 to label15 with label16;
    }

    public void setLMAdListener(cn.immob.sdk.LMAdListener)
    {
        cn.immob.sdk.controller.LMSDKController r0;
        cn.immob.sdk.LMAdListener $r1;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: cn.immob.sdk.LMAdListener;

        r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.LMAdListener c> = $r1;

        return;
    }

    public void setLmmobView(cn.immob.sdk.ImmobView)
    {
        cn.immob.sdk.controller.LMSDKController r0;
        cn.immob.sdk.ImmobView $r1;

        r0 := @this: cn.immob.sdk.controller.LMSDKController;

        $r1 := @parameter0: cn.immob.sdk.ImmobView;

        r0.<cn.immob.sdk.controller.LMSDKController: cn.immob.sdk.ImmobView d> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <cn.immob.sdk.controller.LMSDKController: java.lang.String ADWALL_APPSTATUS_NOT_INSTALLED> = "notInstalled";

        <cn.immob.sdk.controller.LMSDKController: java.lang.String ADWALL_APPSTATUS_INSTALLED> = "installed";

        <cn.immob.sdk.controller.LMSDKController: java.lang.String ADWALL_APPSTATUS_INQUEUE> = "inqueue";

        <cn.immob.sdk.controller.LMSDKController: java.lang.String ADWALL_APPSTATUS_DOWNLOADING> = "downloading";

        <cn.immob.sdk.controller.LMSDKController: java.lang.String ADWALL_APPSTATUS_DOWNLOADED> = "downloaded";

        return;
    }
}
