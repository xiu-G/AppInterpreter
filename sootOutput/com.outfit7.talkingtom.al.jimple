final class com.outfit7.talkingtom.al extends java.lang.Thread
{
    private java.util.concurrent.BlockingQueue a;
    private com.outfit7.talkingtom.ae b;

    public void <init>(com.outfit7.talkingtom.ae)
    {
        com.outfit7.talkingtom.al r0;
        com.outfit7.talkingtom.ae $r1;
        java.util.concurrent.LinkedBlockingQueue $r2;

        r0 := @this: com.outfit7.talkingtom.al;

        $r1 := @parameter0: com.outfit7.talkingtom.ae;

        r0.<com.outfit7.talkingtom.al: com.outfit7.talkingtom.ae b> = $r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r2 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<com.outfit7.talkingtom.al: java.util.concurrent.BlockingQueue a> = $r2;

        return;
    }

    final void a()
    {
        java.lang.Throwable $r2;
        java.util.concurrent.BlockingQueue $r1;
        com.outfit7.talkingtom.al r0;

        r0 := @this: com.outfit7.talkingtom.al;

        entermonitor r0;

     label1:
        $r1 = r0.<com.outfit7.talkingtom.al: java.util.concurrent.BlockingQueue a>;

        interfaceinvoke $r1.<java.util.concurrent.BlockingQueue: void clear()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    final void a(com.outfit7.talkingtom.ay)
    {
        java.lang.Throwable $r5, $r6;
        com.outfit7.talkingtom.ay $r1;
        java.util.concurrent.locks.Lock $r2;
        java.util.concurrent.locks.Condition $r4;
        com.outfit7.talkingtom.al r0;
        java.util.concurrent.BlockingQueue $r3;

        r0 := @this: com.outfit7.talkingtom.al;

        $r1 := @parameter0: com.outfit7.talkingtom.ay;

        $r2 = $r1.<com.outfit7.talkingtom.ay: java.util.concurrent.locks.Lock a>;

     label1:
        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        $r3 = r0.<com.outfit7.talkingtom.al: java.util.concurrent.BlockingQueue a>;

        interfaceinvoke $r3.<java.util.concurrent.BlockingQueue: void put(java.lang.Object)>($r1);

        $r4 = $r1.<com.outfit7.talkingtom.ay: java.util.concurrent.locks.Condition b>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Condition: void await()>();

     label3:
        $r2 = $r1.<com.outfit7.talkingtom.ay: java.util.concurrent.locks.Lock a>;

     label4:
        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

     label5:
        return;

     label6:
        $r5 := @caughtexception;

        $r2 = $r1.<com.outfit7.talkingtom.ay: java.util.concurrent.locks.Lock a>;

     label7:
        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r5;

     label8:
        $r6 := @caughtexception;

        return;

        catch java.lang.InterruptedException from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.InterruptedException from label4 to label5 with label8;
        catch java.lang.InterruptedException from label7 to label8 with label8;
    }

    public final void run()
    {
        java.lang.Throwable $r7, $r8;
        com.outfit7.talkingtom.al r0;
        java.util.concurrent.BlockingQueue $r2;
        com.outfit7.talkingtom.ay $r3;
        java.util.concurrent.locks.Lock $r4;
        java.util.concurrent.locks.Condition $r6;
        java.lang.Object $r1;
        com.outfit7.talkingtom.ae $r5;

        r0 := @this: com.outfit7.talkingtom.al;

     label01:
        $r2 = r0.<com.outfit7.talkingtom.al: java.util.concurrent.BlockingQueue a>;

     label02:
        $r1 = interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

     label03:
        $r3 = (com.outfit7.talkingtom.ay) $r1;

        $r4 = $r3.<com.outfit7.talkingtom.ay: java.util.concurrent.locks.Lock a>;

     label04:
        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label05:
        $r5 = r0.<com.outfit7.talkingtom.al: com.outfit7.talkingtom.ae b>;

        virtualinvoke $r5.<com.outfit7.talkingtom.ae: void a(com.outfit7.talkingtom.ay)>($r3);

        $r6 = $r3.<com.outfit7.talkingtom.ay: java.util.concurrent.locks.Condition b>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Condition: void signal()>();

     label06:
        $r4 = $r3.<com.outfit7.talkingtom.ay: java.util.concurrent.locks.Lock a>;

     label07:
        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

     label08:
        goto label01;

     label09:
        $r7 := @caughtexception;

        goto label01;

     label10:
        $r8 := @caughtexception;

        $r4 = $r3.<com.outfit7.talkingtom.ay: java.util.concurrent.locks.Lock a>;

     label11:
        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r8;

     label12:
        nop;

        catch java.lang.InterruptedException from label02 to label03 with label09;
        catch java.lang.InterruptedException from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.InterruptedException from label11 to label12 with label09;
    }
}
