public class com.seventeenmiles.imagefilter.FilterLib extends java.lang.Object
{
    public static final boolean a;
    public static com.seventeenmiles.imagefilter.f b;

    static void <clinit>()
    {
        java.lang.Throwable $r0;
        boolean $z0;

     label1:
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("filterlib");

     label2:
        $z0 = 1;

     label3:
        <com.seventeenmiles.imagefilter.FilterLib: boolean a> = $z0;

        return;

     label4:
        $r0 := @caughtexception;

        $z0 = 0;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FilterLib", "load filterlib failed.");

        virtualinvoke $r0.<java.lang.Throwable: void printStackTrace()>();

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void <init>()
    {
        com.seventeenmiles.imagefilter.FilterLib r0;

        r0 := @this: com.seventeenmiles.imagefilter.FilterLib;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void a(int[], int, int)
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label2;

        return;

     label2:
        $i3 = 0;

     label3:
        if $i3 < $i0 goto label4;

        $i2 = $i2 + 1;

        goto label1;

     label4:
        $i4 = $i2 * $i0;

        $i4 = $i4 + $i3;

        $i5 = $r0[$i4];

        $i5 = staticinvoke <android.graphics.Color: int red(int)>($i5);

        $i5 = $i5 * 28;

        $i6 = $r0[$i4];

        $i6 = staticinvoke <android.graphics.Color: int green(int)>($i6);

        $i6 = $i6 * 151;

        $i5 = $i5 + $i6;

        $i6 = $r0[$i4];

        $i6 = staticinvoke <android.graphics.Color: int blue(int)>($i6);

        $i6 = $i6 * 77;

        $i5 = $i5 + $i6;

        $i5 = $i5 >> 8;

        $i5 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i5, $i5, $i5);

        $r0[$i4] = $i5;

        $i3 = $i3 + 1;

        goto label3;
    }

    public static void callbackSmartBlurProgress(int)
    {
        int $i0;
        com.seventeenmiles.imagefilter.f $r0;

        $i0 := @parameter0: int;

        $r0 = <com.seventeenmiles.imagefilter.FilterLib: com.seventeenmiles.imagefilter.f b>;

        if $r0 == null goto label1;

        $r0 = <com.seventeenmiles.imagefilter.FilterLib: com.seventeenmiles.imagefilter.f b>;

        interfaceinvoke $r0.<com.seventeenmiles.imagefilter.f: void a(int)>($i0);

     label1:
        return;
    }

    public static native void colorDodge(int[], int[], int, int);

    public static native int[] crayonSketchImage(int[], int, int, int);

    public static native void fastblur(int[], int, int, int);

    public static native void grayImage(int[], int, int);

    public static native void grayInvertImage(int[], int[], int, int);

    public static native void halftone(int[], int[], int, int, float[], float);

    public static native void invertImage(int[], int, int);

    public static native void minimumblur(int[], int[], int, int, int);

    public static native int[] pencilSketchImage(int[], int, int, int);

    public static native void smartblur(int[], int[], int, int, boolean, int, float[], int);

    public static native void thresholdImage(int[], int, int, int);
}
