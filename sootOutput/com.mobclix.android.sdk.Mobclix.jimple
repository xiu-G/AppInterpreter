public final class com.mobclix.android.sdk.Mobclix extends java.lang.Object
{
    static final boolean DEBUG;
    public static final int LOG_LEVEL_DEBUG;
    public static final int LOG_LEVEL_ERROR;
    public static final int LOG_LEVEL_FATAL;
    public static final int LOG_LEVEL_INFO;
    public static final int LOG_LEVEL_WARN;
    static final java.lang.String[] MC_AD_SIZES;
    static final java.lang.String MC_CUSTOM_AD_FILENAME;
    static final java.lang.String MC_CUSTOM_AD_PREF;
    static final java.lang.String MC_KEY_CONNECTION_TYPE;
    private static final java.lang.String MC_KEY_EVENT_DESCRIPTION;
    private static final java.lang.String MC_KEY_EVENT_LOG_LEVEL;
    private static final java.lang.String MC_KEY_EVENT_NAME;
    private static final java.lang.String MC_KEY_EVENT_PROCESS_NAME;
    private static final java.lang.String MC_KEY_EVENT_STOP;
    private static final java.lang.String MC_KEY_EVENT_THREAD_ID;
    static final java.lang.String MC_KEY_LATITUDE_LONGITUDE;
    static final java.lang.String MC_KEY_SESSION_ID;
    private static final java.lang.String MC_KEY_TIMESTAMP;
    public static final java.lang.String MC_LIBRARY_VERSION;
    static final java.lang.String[] MC_OPEN_ALLOCATIONS;
    static final java.lang.String PREFS_CONFIG;
    private static final java.lang.String TAG;
    static java.util.HashMap adUnitSettings;
    private static final com.mobclix.android.sdk.Mobclix controller;
    static java.util.HashMap debugConfig;
    private static boolean isInitialized;
    private java.lang.String adMobApplicationId;
    java.lang.String adServer;
    java.lang.String analyticsServer;
    private java.lang.String androidId;
    private java.lang.String androidVersion;
    private java.lang.String applicationId;
    private java.lang.String applicationVersion;
    private int batteryLevel;
    java.lang.ref.SoftReference cameraWebview;
    java.lang.String configServer;
    private java.lang.String connectionType;
    private android.content.Context context;
    java.lang.String debugServer;
    private java.lang.String deviceHardwareModel;
    java.lang.String deviceId;
    private java.lang.String deviceModel;
    java.lang.String feedbackServer;
    private boolean haveLocationPermission;
    private com.mobclix.android.sdk.MobclixInstrumentation instrumentation;
    boolean isNewUser;
    boolean isOfflineSession;
    private java.lang.String language;
    private java.lang.String latitude;
    private java.lang.String locale;
    com.mobclix.android.sdk.MobclixLocation location;
    private android.location.Criteria locationCriteria;
    private android.os.Handler locationHandler;
    private int logLevel;
    private java.lang.String longitude;
    private java.lang.String mcc;
    private java.lang.String mnc;
    java.util.List nativeUrls;
    int passiveSessionTimeout;
    java.util.HashMap permissions;
    private java.lang.String platform;
    java.lang.String previousDeviceId;
    int remoteConfigSet;
    private int rooted;
    private java.lang.String runtimePlatform;
    private java.lang.String runtimePlatformVersion;
    java.lang.ref.SoftReference secondaryView;
    org.json.JSONObject session;
    private android.content.SharedPreferences sharedPrefs;
    private java.lang.String userAgent;
    java.lang.String vcServer;
    java.lang.ref.SoftReference webview;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.HashMap $r1;
        com.mobclix.android.sdk.Mobclix $r2;

        <com.mobclix.android.sdk.Mobclix: java.lang.String TAG> = "mobclix-controller";

        <com.mobclix.android.sdk.Mobclix: java.lang.String PREFS_CONFIG> = ".MCConfig";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_LIBRARY_VERSION> = "3.1.1";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_KEY_TIMESTAMP> = "ts";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_KEY_SESSION_ID> = "id";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_KEY_LATITUDE_LONGITUDE> = "ll";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_KEY_EVENT_THREAD_ID> = "et";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_KEY_EVENT_STOP> = "es";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_KEY_EVENT_PROCESS_NAME> = "ep";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_KEY_EVENT_NAME> = "en";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_KEY_EVENT_LOG_LEVEL> = "el";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_KEY_EVENT_DESCRIPTION> = "ed";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_KEY_CONNECTION_TYPE> = "g";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_CUSTOM_AD_PREF> = "CustomAdUrl";

        <com.mobclix.android.sdk.Mobclix: java.lang.String MC_CUSTOM_AD_FILENAME> = "_mc_cached_custom_ad.png";

        <com.mobclix.android.sdk.Mobclix: int LOG_LEVEL_WARN> = 4;

        <com.mobclix.android.sdk.Mobclix: int LOG_LEVEL_INFO> = 2;

        <com.mobclix.android.sdk.Mobclix: int LOG_LEVEL_FATAL> = 16;

        <com.mobclix.android.sdk.Mobclix: int LOG_LEVEL_ERROR> = 8;

        <com.mobclix.android.sdk.Mobclix: int LOG_LEVEL_DEBUG> = 1;

        <com.mobclix.android.sdk.Mobclix: boolean DEBUG> = 0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "320x50";

        $r0[1] = "300x250";

        <com.mobclix.android.sdk.Mobclix: java.lang.String[] MC_AD_SIZES> = $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "openmillennial";

        <com.mobclix.android.sdk.Mobclix: java.lang.String[] MC_OPEN_ALLOCATIONS> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.mobclix.android.sdk.Mobclix: java.util.HashMap debugConfig> = $r1;

        $r2 = new com.mobclix.android.sdk.Mobclix;

        specialinvoke $r2.<com.mobclix.android.sdk.Mobclix: void <init>()>();

        <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller> = $r2;

        <com.mobclix.android.sdk.Mobclix: boolean isInitialized> = 0;

        return;
    }

    private void <init>()
    {
        org.json.JSONObject $r2;
        com.mobclix.android.sdk.MobclixInstrumentation $r1;
        java.util.HashMap $r5;
        com.mobclix.android.sdk.Mobclix r0;
        com.mobclix.android.sdk.MobclixLocation $r4;
        java.util.ArrayList $r3;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mobclix.android.sdk.Mobclix: android.content.SharedPreferences sharedPrefs> = null;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        r0.<com.mobclix.android.sdk.Mobclix: org.json.JSONObject session> = $r2;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String adServer> = "http://ads.mobclix.com/";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String configServer> = "http://data.mobclix.com/post/config";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String analyticsServer> = "http://data.mobclix.com/post/sendData";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String vcServer> = "http://vc.mobclix.com";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String feedbackServer> = "http://data.mobclix.com/post/feedback";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String debugServer> = "http://data.mobclix.com/post/debug";

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.mobclix.android.sdk.Mobclix: java.util.List nativeUrls> = $r3;

        r0.<com.mobclix.android.sdk.Mobclix: int passiveSessionTimeout> = 120000;

        r0.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet> = 0;

        $r1 = staticinvoke <com.mobclix.android.sdk.MobclixInstrumentation: com.mobclix.android.sdk.MobclixInstrumentation getInstance()>();

        r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation> = $r1;

        r0.<com.mobclix.android.sdk.Mobclix: boolean isOfflineSession> = 0;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String platform> = "android";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String runtimePlatform> = "mcnative";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String runtimePlatformVersion> = "0";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidVersion> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationVersion> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidId> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceModel> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceHardwareModel> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String connectionType> = "null";

        $r4 = new com.mobclix.android.sdk.MobclixLocation;

        specialinvoke $r4.<com.mobclix.android.sdk.MobclixLocation: void <init>()>();

        r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixLocation location> = $r4;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String latitude> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String longitude> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String locale> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String language> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mcc> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mnc> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String userAgent> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: int rooted> = -1;

        r0.<com.mobclix.android.sdk.Mobclix: int batteryLevel> = -1;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationId> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String adMobApplicationId> = "null";

        r0.<com.mobclix.android.sdk.Mobclix: int logLevel> = 16;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions> = $r5;

        r0.<com.mobclix.android.sdk.Mobclix: boolean haveLocationPermission> = 0;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String previousDeviceId> = null;

        r0.<com.mobclix.android.sdk.Mobclix: boolean isNewUser> = 0;

        return;
    }

    static com.mobclix.android.sdk.Mobclix access$0()
    {
        com.mobclix.android.sdk.Mobclix r0;

        r0 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

        return r0;
    }

    static void access$1(com.mobclix.android.sdk.Mobclix, java.lang.String)
    {
        com.mobclix.android.sdk.Mobclix $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter1: java.lang.String;

        $r0.<com.mobclix.android.sdk.Mobclix: java.lang.String latitude> = $r1;

        return;
    }

    static void access$2(com.mobclix.android.sdk.Mobclix, java.lang.String)
    {
        com.mobclix.android.sdk.Mobclix $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter1: java.lang.String;

        $r0.<com.mobclix.android.sdk.Mobclix: java.lang.String longitude> = $r1;

        return;
    }

    static void access$3(com.mobclix.android.sdk.Mobclix, int)
    {
        int $i0;
        com.mobclix.android.sdk.Mobclix $r0;

        $r0 := @parameter0: com.mobclix.android.sdk.Mobclix;

        $i0 := @parameter1: int;

        $r0.<com.mobclix.android.sdk.Mobclix: int batteryLevel> = $i0;

        return;
    }

    static void addPref(java.lang.String, java.lang.String)
    {
        android.content.SharedPreferences$Editor $r2;
        android.content.SharedPreferences $r4;
        java.lang.String $r0, $r1;
        com.mobclix.android.sdk.Mobclix $r3;
        java.lang.Exception $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label1:
        $r4 = $r3.<com.mobclix.android.sdk.Mobclix: android.content.SharedPreferences sharedPrefs>;

        $r2 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: boolean commit()>();

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void addPref(java.util.Map)
    {
        android.content.SharedPreferences$Editor $r3;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Exception $r10;
        android.content.SharedPreferences $r2;
        java.util.Map r0;
        java.lang.Object $r6;
        com.mobclix.android.sdk.Mobclix $r1;
        java.lang.String $r8, $r9;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        $r1 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label1:
        $r2 = $r1.<com.mobclix.android.sdk.Mobclix: android.content.SharedPreferences sharedPrefs>;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 != 0 goto label6;

     label4:
        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: boolean commit()>();

     label5:
        return;

     label6:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r6;

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r8, $r9);

     label7:
        goto label2;

     label8:
        $r10 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    static void clearPref()
    {
        android.content.SharedPreferences$Editor $r0;
        android.content.SharedPreferences $r2;
        com.mobclix.android.sdk.Mobclix $r1;
        java.lang.Exception $r3;

        $r1 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label1:
        $r2 = $r1.<com.mobclix.android.sdk.Mobclix: android.content.SharedPreferences sharedPrefs>;

        $r0 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r0.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor clear()>();

        interfaceinvoke $r0.<android.content.SharedPreferences$Editor: boolean commit()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static java.util.HashMap getAllPref()
    {
        android.content.SharedPreferences $r3;
        java.util.Map $r1;
        java.util.HashMap $r4;
        com.mobclix.android.sdk.Mobclix $r2;
        java.lang.Exception r0;

        $r2 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label1:
        $r3 = $r2.<com.mobclix.android.sdk.Mobclix: android.content.SharedPreferences sharedPrefs>;

        $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.util.Map getAll()>();

        $r4 = (java.util.HashMap) $r1;

     label2:
        return $r4;

     label3:
        r0 := @caughtexception;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        return $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static java.lang.String getCookieStringFromCookieManager(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Exception r1;
        android.webkit.CookieManager $r2;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $r0 = virtualinvoke $r2.<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>($r0);

     label2:
        return $r0;

     label3:
        r1 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static com.mobclix.android.sdk.Mobclix getInstance()
    {
        com.mobclix.android.sdk.Mobclix r0;

        r0 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

        return r0;
    }

    static java.lang.String getPref(java.lang.String)
    {
        android.content.SharedPreferences $r3;
        java.lang.String $r0;
        com.mobclix.android.sdk.Mobclix $r2;
        java.lang.Exception r1;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label1:
        $r3 = $r2.<com.mobclix.android.sdk.Mobclix: android.content.SharedPreferences sharedPrefs>;

        $r0 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r0, "");

     label2:
        return $r0;

     label3:
        r1 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static boolean hasPref(java.lang.String)
    {
        android.content.SharedPreferences $r3;
        java.lang.String $r0;
        com.mobclix.android.sdk.Mobclix $r2;
        java.lang.Exception r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label1:
        $r3 = $r2.<com.mobclix.android.sdk.Mobclix: android.content.SharedPreferences sharedPrefs>;

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean contains(java.lang.String)>($r0);

     label2:
        return $z0;

     label3:
        r1 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void initialize(java.lang.String)
    {
        android.os.Bundle $r14;
        android.content.pm.PackageManager $r12;
        java.lang.NullPointerException r18, r20;
        byte b2;
        android.content.ContentResolver $r29;
        java.util.Locale $r30;
        com.mobclix.android.sdk.Mobclix$3 $r31;
        com.mobclix.android.sdk.Mobclix$2 $r22;
        boolean $z0;
        com.mobclix.android.sdk.MobclixInstrumentation $r8;
        android.content.res.Resources$NotFoundException $r15;
        android.content.IntentFilter $r23;
        com.mobclix.android.sdk.Mobclix$MobclixPermissionException $r19;
        java.lang.Exception $r32, r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;
        java.lang.StringBuilder $r4;
        android.content.pm.ApplicationInfo r10, $r13;
        java.lang.Throwable r17;
        android.content.Context $r3, $r5;
        android.location.Criteria $r24;
        java.lang.String[] $r7;
        java.util.HashMap $r16;
        android.content.pm.PackageInfo $r28;
        android.telephony.TelephonyManager r25, $r27;
        int $i0, $i1;
        java.lang.Boolean $r21;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String r1, $r2, r9, $r11;
        android.content.SharedPreferences $r6;
        java.lang.Object $r26;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r2 := @parameter0: java.lang.String;

        $r3 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        r1 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".MCConfig");

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(r1, 0);

        r0.<com.mobclix.android.sdk.Mobclix: android.content.SharedPreferences sharedPrefs> = $r6;

        $r7 = <com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String[] MC_DEBUG_CATS>;

        $i0 = lengthof $r7;

        $i1 = 0;

     label001:
        if $i1 < $i0 goto label010;

        $r8 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        if $r8 != null goto label002;

        $r8 = staticinvoke <com.mobclix.android.sdk.MobclixInstrumentation: com.mobclix.android.sdk.MobclixInstrumentation getInstance()>();

        r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation> = $r8;

     label002:
        $r8 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        r1 = <com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String STARTUP>;

        r1 = virtualinvoke $r8.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String startGroup(java.lang.String)>(r1);

        $r8 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        r1 = virtualinvoke $r8.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>(r1, "init");

        $r8 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        r1 = virtualinvoke $r8.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>(r1, "environment");

        r9 = "";

        r10 = null;

     label003:
        $r3 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        $r11 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

     label004:
        r9 = $r11;

     label005:
        $r3 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

     label006:
        $r12 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r13 = virtualinvoke $r12.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r9, 128);

     label007:
        r10 = $r13;

     label008:
        $r14 = r10.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        r9 = virtualinvoke $r14.<android.os.Bundle: java.lang.String getString(java.lang.String)>("com.mobclix.APPLICATION_ID");

     label009:
        $r2 = r9;

        if r9 != null goto label014;

        $r15 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r15.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>("com.mobclix.APPLICATION_ID not found in the Android Manifest xml.");

        throw $r15;

     label010:
        r1 = $r7[$i1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("debug_");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>(r9);

        if $z0 == 0 goto label011;

        $r16 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap debugConfig>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("debug_");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r9 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>(r9);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r9);

     label011:
        $i1 = $i1 + 1;

        goto label001;

     label012:
        r17 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("mobclix-controller", "Application Key Started");

        goto label008;

     label013:
        r18 := @caughtexception;

        $r15 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r15.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>("com.mobclix.APPLICATION_ID not found in the Android Manifest xml.");

        throw $r15;

     label014:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationId> = $r2;

     label015:
        $r14 = r10.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $r2 = virtualinvoke $r14.<android.os.Bundle: java.lang.String getString(java.lang.String)>("ADMOB_PUBLISHER_ID");

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String adMobApplicationId> = $r2;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String adMobApplicationId>;

     label016:
        if $r2 != null goto label018;

     label017:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String adMobApplicationId> = "null";

     label018:
        $r2 = null;

     label019:
        $r14 = r10.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        r9 = virtualinvoke $r14.<android.os.Bundle: java.lang.String getString(java.lang.String)>("com.mobclix.LOG_LEVEL");

     label020:
        $r2 = r9;

     label021:
        b2 = 16;

        if $r2 == null goto label022;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("debug");

        if $z0 == 0 goto label031;

        b2 = 1;

     label022:
        r0.<com.mobclix.android.sdk.Mobclix: int logLevel> = b2;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationId>;

        if $r2 == null goto label023;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationId>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label024;

     label023:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationId> = "null";

     label024:
        $r2 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidVersion> = $r2;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidVersion>;

        if $r2 == null goto label025;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidVersion>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label026;

     label025:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidVersion> = "null";

     label026:
        $r2 = "";

        $r3 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        $r12 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label027:
        $r3 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        r9 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

     label028:
        $r2 = r9;

     label029:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.INTERNET", $r2);

        if $i0 == 0 goto label035;

        $r19 = new com.mobclix.android.sdk.Mobclix$MobclixPermissionException;

        specialinvoke $r19.<com.mobclix.android.sdk.Mobclix$MobclixPermissionException: void <init>(com.mobclix.android.sdk.Mobclix,java.lang.String)>(r0, "Missing required permission INTERNET.");

        throw $r19;

     label030:
        r20 := @caughtexception;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String adMobApplicationId> = "null";

        goto label018;

     label031:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("info");

        if $z0 == 0 goto label032;

        b2 = 2;

        goto label022;

     label032:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("warn");

        if $z0 == 0 goto label033;

        b2 = 4;

        goto label022;

     label033:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("error");

        if $z0 == 0 goto label034;

        b2 = 8;

        goto label022;

     label034:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("fatal");

        if $z0 == 0 goto label022;

        b2 = 16;

        goto label022;

     label035:
        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.INTERNET", $r21);

        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.READ_PHONE_STATE", $r2);

        if $i0 == 0 goto label036;

        $r19 = new com.mobclix.android.sdk.Mobclix$MobclixPermissionException;

        specialinvoke $r19.<com.mobclix.android.sdk.Mobclix$MobclixPermissionException: void <init>(com.mobclix.android.sdk.Mobclix,java.lang.String)>(r0, "Missing required permission READ_PHONE_STATE.");

        throw $r19;

     label036:
        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.READ_PHONE_STATE", $r21);

     label037:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", $r2);

     label038:
        if $i0 != 0 goto label044;

     label039:
        $r3 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        $r3 = virtualinvoke $r3.<android.content.Context: android.content.Context getApplicationContext()>();

     label040:
        $r22 = new com.mobclix.android.sdk.Mobclix$2;

     label041:
        specialinvoke $r22.<com.mobclix.android.sdk.Mobclix$2: void <init>(com.mobclix.android.sdk.Mobclix)>(r0);

     label042:
        $r23 = new android.content.IntentFilter;

     label043:
        specialinvoke $r23.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.BATTERY_CHANGED");

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r22, $r23);

     label044:
        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.BATTERY_STATS", $r21);

     label045:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.CAMERA", $r2);

        if $i0 != 0 goto label046;

        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.CAMERA", $r21);

     label046:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.READ_CALENDAR", $r2);

        if $i0 != 0 goto label047;

        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.READ_CALENDAR", $r21);

     label047:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_CALENDAR", $r2);

        if $i0 != 0 goto label048;

        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.WRITE_CALENDAR", $r21);

     label048:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.READ_CONTACTS", $r2);

        if $i0 != 0 goto label049;

        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.READ_CONTACTS", $r21);

     label049:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_CONTACTS", $r2);

        if $i0 != 0 goto label050;

        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.WRITE_CONTACTS", $r21);

     label050:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.GET_ACCOUNTS", $r2);

        if $i0 != 0 goto label051;

        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.GET_ACCOUNTS", $r21);

     label051:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.VIBRATE", $r2);

        if $i0 != 0 goto label052;

        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.VIBRATE", $r21);

     label052:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_FINE_LOCATION", $r2);

     label053:
        if $i0 != 0 goto label091;

        $r24 = new android.location.Criteria;

     label054:
        specialinvoke $r24.<android.location.Criteria: void <init>()>();

        r0.<com.mobclix.android.sdk.Mobclix: android.location.Criteria locationCriteria> = $r24;

        $r24 = r0.<com.mobclix.android.sdk.Mobclix: android.location.Criteria locationCriteria>;

        virtualinvoke $r24.<android.location.Criteria: void setAccuracy(int)>(1);

        r0.<com.mobclix.android.sdk.Mobclix: boolean haveLocationPermission> = 1;

        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.ACCESS_FINE_LOCATION", $r21);

     label055:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_NETWORK_STATE", $r2);

     label056:
        if $i0 != 0 goto label058;

     label057:
        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.ACCESS_NETWORK_STATE", $r21);

     label058:
        r25 = null;

     label059:
        $r3 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        $r26 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r27 = (android.telephony.TelephonyManager) $r26;

     label060:
        r25 = $r27;

     label061:
        $r28 = virtualinvoke $r12.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r2, 0);

        $r2 = $r28.<android.content.pm.PackageInfo: java.lang.String versionName>;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationVersion> = $r2;

     label062:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationVersion>;

        if $r2 == null goto label063;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationVersion>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label064;

     label063:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationVersion> = "null";

     label064:
        $r3 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        $r29 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r29, "android_id");

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidId> = $r2;

     label065:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidId>;

        if $r2 == null goto label066;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidId>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label067;

     label066:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidId> = "null";

     label067:
        $r2 = virtualinvoke r25.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId> = $r2;

     label068:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId>;

        if $r2 == null goto label069;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label070;

     label069:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidId>;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId> = $r2;

     label070:
        $r2 = <android.os.Build: java.lang.String MODEL>;

     label071:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceModel> = $r2;

     label072:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceModel>;

        if $r2 == null goto label073;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceModel>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label074;

     label073:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceModel> = "null";

     label074:
        $r2 = <android.os.Build: java.lang.String DEVICE>;

     label075:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceHardwareModel> = $r2;

     label076:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceHardwareModel>;

        if $r2 == null goto label077;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceHardwareModel>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label078;

     label077:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceHardwareModel> = "null";

     label078:
        $r2 = virtualinvoke r25.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

     label079:
        if $r2 == null goto label081;

     label080:
        r9 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mcc> = r9;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(3);

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mnc> = $r2;

     label081:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mcc>;

        if $r2 == null goto label082;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mcc>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label083;

     label082:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mcc> = "null";

     label083:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mnc>;

        if $r2 == null goto label084;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mnc>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label085;

     label084:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mnc> = "null";

     label085:
        $r30 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke $r30.<java.util.Locale: java.lang.String toString()>();

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String locale> = $r2;

        $r2 = virtualinvoke $r30.<java.util.Locale: java.lang.String getLanguage()>();

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String language> = $r2;

     label086:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String locale>;

        if $r2 == null goto label087;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String locale>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label088;

     label087:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String locale> = "null";

     label088:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String language>;

        if $r2 == null goto label089;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String language>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label090;

     label089:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String language> = "null";

     label090:
        $r31 = new com.mobclix.android.sdk.Mobclix$3;

        specialinvoke $r31.<com.mobclix.android.sdk.Mobclix$3: void <init>(com.mobclix.android.sdk.Mobclix)>(r0);

        r0.<com.mobclix.android.sdk.Mobclix: android.os.Handler locationHandler> = $r31;

        $r8 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r2 = virtualinvoke $r8.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>(r1);

        $r8 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r2 = virtualinvoke $r8.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r2, "session");

        <com.mobclix.android.sdk.Mobclix: boolean isInitialized> = 1;

        $r8 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r2 = virtualinvoke $r8.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r2);

        $r8 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        virtualinvoke $r8.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r2);

        return;

     label091:
        $i0 = virtualinvoke $r12.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_COARSE_LOCATION", $r2);

     label092:
        if $i0 != 0 goto label096;

        $r24 = new android.location.Criteria;

     label093:
        specialinvoke $r24.<android.location.Criteria: void <init>()>();

        r0.<com.mobclix.android.sdk.Mobclix: android.location.Criteria locationCriteria> = $r24;

        $r24 = r0.<com.mobclix.android.sdk.Mobclix: android.location.Criteria locationCriteria>;

        virtualinvoke $r24.<android.location.Criteria: void setAccuracy(int)>(2);

        r0.<com.mobclix.android.sdk.Mobclix: boolean haveLocationPermission> = 1;

        $r16 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.permission.ACCESS_COARSE_LOCATION", $r21);

     label094:
        goto label055;

     label095:
        $r32 := @caughtexception;

        goto label058;

     label096:
        r0.<com.mobclix.android.sdk.Mobclix: boolean haveLocationPermission> = 0;

     label097:
        goto label055;

     label098:
        r33 := @caughtexception;

     label099:
        $r3 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        $r29 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r29, "android_id");

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidId> = $r2;

     label100:
        goto label065;

     label101:
        $r34 := @caughtexception;

        goto label065;

     label102:
        $r35 := @caughtexception;

        goto label086;

     label103:
        $r36 := @caughtexception;

        goto label081;

     label104:
        $r37 := @caughtexception;

        goto label076;

     label105:
        $r38 := @caughtexception;

        goto label072;

     label106:
        $r39 := @caughtexception;

        goto label068;

     label107:
        $r40 := @caughtexception;

        goto label062;

     label108:
        $r41 := @caughtexception;

        goto label061;

     label109:
        $r42 := @caughtexception;

        goto label045;

     label110:
        $r43 := @caughtexception;

        goto label029;

     label111:
        $r44 := @caughtexception;

        goto label021;

     label112:
        $r45 := @caughtexception;

        goto label005;

        catch java.lang.Exception from label003 to label004 with label112;
        catch android.content.pm.PackageManager$NameNotFoundException from label006 to label007 with label012;
        catch java.lang.NullPointerException from label008 to label009 with label013;
        catch java.lang.NullPointerException from label015 to label016 with label030;
        catch java.lang.NullPointerException from label017 to label018 with label030;
        catch java.lang.Exception from label019 to label020 with label111;
        catch java.lang.Exception from label027 to label028 with label110;
        catch java.lang.Exception from label037 to label038 with label109;
        catch java.lang.Exception from label039 to label040 with label109;
        catch java.lang.Exception from label041 to label042 with label109;
        catch java.lang.Exception from label043 to label045 with label109;
        catch java.lang.Exception from label052 to label053 with label095;
        catch java.lang.Exception from label054 to label056 with label095;
        catch java.lang.Exception from label057 to label058 with label095;
        catch java.lang.Exception from label059 to label060 with label108;
        catch java.lang.Exception from label061 to label062 with label107;
        catch java.lang.Exception from label064 to label065 with label098;
        catch java.lang.Exception from label067 to label068 with label106;
        catch java.lang.Exception from label071 to label072 with label105;
        catch java.lang.Exception from label075 to label076 with label104;
        catch java.lang.Exception from label078 to label079 with label103;
        catch java.lang.Exception from label080 to label081 with label103;
        catch java.lang.Exception from label085 to label086 with label102;
        catch java.lang.Exception from label091 to label092 with label095;
        catch java.lang.Exception from label093 to label094 with label095;
        catch java.lang.Exception from label096 to label097 with label095;
        catch java.lang.Exception from label099 to label100 with label101;
    }

    public static final void logEvent(int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String[] $r9;
        long $l2;
        org.json.JSONObject r3, $r8;
        java.lang.Thread r4;
        int $i0, $i1;
        com.mobclix.android.sdk.MobclixAnalytics$LogEvent $r10;
        java.lang.String $r0, $r1, $r2, $r7;
        com.mobclix.android.sdk.Mobclix $r5;
        boolean $z0, $z1;
        java.lang.Exception $r11;
        java.lang.StringBuilder $r6;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        $z1 = <com.mobclix.android.sdk.Mobclix: boolean isInitialized>;

        if $z1 != 0 goto label01;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("mobclix-controller", "logEvent failed - You must initialize Mobclix by calling Mobclix.onCreate(this).");

        return;

     label01:
        $r5 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

        $i1 = $r5.<com.mobclix.android.sdk.Mobclix: int logLevel>;

        if $i0 < $i1 goto label18;

        $r6 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        lookupswitch($i0)
        {
            case 1: goto label12;
            case 2: goto label13;
            case 4: goto label14;
            case 8: goto label15;
            case 16: goto label16;
            default: goto label02;
        };

     label02:
        r3 = new org.json.JSONObject;

        $r5 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label03:
        $r8 = $r5.<com.mobclix.android.sdk.Mobclix: org.json.JSONObject session>;

     label04:
        $r9 = newarray (java.lang.String)[4];

     label05:
        $r9[0] = "ts";

        $r9[1] = "ll";

        $r9[2] = "g";

        $r9[3] = "id";

        specialinvoke r3.<org.json.JSONObject: void <init>(org.json.JSONObject,java.lang.String[])>($r8, $r9);

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("el", $r7);

        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8");

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("ep", $r0);

        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("en", $r0);

        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("ed", $r0);

        r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l2 = virtualinvoke r4.<java.lang.Thread: long getId()>();

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("et", $r0);

     label06:
        if $z0 == 0 goto label17;

        $r0 = "1";

     label07:
        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("es", $r0);

     label08:
        r4 = new java.lang.Thread;

        $r10 = new com.mobclix.android.sdk.MobclixAnalytics$LogEvent;

     label09:
        specialinvoke $r10.<com.mobclix.android.sdk.MobclixAnalytics$LogEvent: void <init>(org.json.JSONObject)>(r3);

        specialinvoke r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r10);

        virtualinvoke r4.<java.lang.Thread: void start()>();

     label10:
        return;

     label11:
        $r11 := @caughtexception;

        return;

     label12:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Mobclix", $r7);

        goto label02;

     label13:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Mobclix", $r7);

        goto label02;

     label14:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Mobclix", $r7);

        goto label02;

     label15:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Mobclix", $r7);

        goto label02;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Mobclix", $r7);

        goto label02;

     label17:
        $r0 = "0";

        goto label07;

     label18:
        return;

        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static final void onCreate(android.app.Activity)
    {
        java.lang.Throwable $r1;
        android.app.Activity $r0;

        $r0 := @parameter0: android.app.Activity;

        entermonitor class "Lcom/mobclix/android/sdk/Mobclix;";

     label1:
        staticinvoke <com.mobclix.android.sdk.Mobclix: void onCreateWithApplicationId(android.app.Activity,java.lang.String)>($r0, null);

     label2:
        exitmonitor class "Lcom/mobclix/android/sdk/Mobclix;";

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/mobclix/android/sdk/Mobclix;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static final void onCreateWithApplicationId(android.app.Activity, java.lang.String)
    {
        java.lang.Throwable $r2;
        java.lang.String $r1;
        android.app.Activity $r0;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "Lcom/mobclix/android/sdk/Mobclix;";

     label1:
        staticinvoke <com.mobclix.android.sdk.Mobclix: void onCreateWithApplicationId(android.app.Activity,java.lang.String,boolean)>($r0, null, 1);

     label2:
        exitmonitor class "Lcom/mobclix/android/sdk/Mobclix;";

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/mobclix/android/sdk/Mobclix;";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static final void onCreateWithApplicationId(android.app.Activity, java.lang.String, boolean)
    {
        java.lang.Throwable $r4;
        android.content.Context $r7;
        android.content.res.Resources$NotFoundException $r3;
        com.mobclix.android.sdk.Mobclix$MobclixPermissionException r2;
        java.lang.Exception $r8, $r9;
        java.lang.String $r1;
        com.mobclix.android.sdk.Mobclix $r5;
        android.app.Activity $r0;
        boolean $z0;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        entermonitor class "Lcom/mobclix/android/sdk/Mobclix;";

        if $r0 != null goto label03;

     label01:
        $r3 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>("Activity not provided.");

        throw $r3;

     label02:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/mobclix/android/sdk/Mobclix;";

        throw $r4;

     label03:
        $r5 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label04:
        $r7 = virtualinvoke $r0.<android.app.Activity: android.content.Context getApplicationContext()>();

        $r5.<com.mobclix.android.sdk.Mobclix: android.content.Context context> = $r7;

     label05:
        $z0 = <com.mobclix.android.sdk.Mobclix: boolean isInitialized>;

     label06:
        if $z0 != 0 goto label14;

     label07:
        $r5 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label08:
        specialinvoke $r5.<com.mobclix.android.sdk.Mobclix: void initialize(java.lang.String)>(null);

     label09:
        $r5 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label10:
        specialinvoke $r5.<com.mobclix.android.sdk.Mobclix: void startNewSession()>();

     label11:
        exitmonitor class "Lcom/mobclix/android/sdk/Mobclix;";

        return;

     label12:
        r2 := @caughtexception;

     label13:
        throw r2;

     label14:
        $r5 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

        virtualinvoke $r5.<com.mobclix.android.sdk.Mobclix: void sessionEvent()>();

     label15:
        goto label11;

     label16:
        $r8 := @caughtexception;

        goto label11;

     label17:
        $r9 := @caughtexception;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Throwable from label03 to label05 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch com.mobclix.android.sdk.Mobclix$MobclixPermissionException from label08 to label09 with label12;
        catch com.mobclix.android.sdk.Mobclix$MobclixPermissionException from label10 to label11 with label12;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Throwable from label07 to label11 with label02;
        catch java.lang.Throwable from label13 to label15 with label02;
    }

    public static final void onStop(android.app.Activity)
    {
        java.lang.Throwable $r2;
        com.mobclix.android.sdk.Mobclix $r1;
        android.app.Activity $r0;

        $r0 := @parameter0: android.app.Activity;

        entermonitor class "Lcom/mobclix/android/sdk/Mobclix;";

     label1:
        $r1 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

        virtualinvoke $r1.<com.mobclix.android.sdk.Mobclix: void sessionEvent()>();

     label2:
        exitmonitor class "Lcom/mobclix/android/sdk/Mobclix;";

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/mobclix/android/sdk/Mobclix;";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static void removePref(java.lang.String)
    {
        android.content.SharedPreferences$Editor $r1;
        android.content.SharedPreferences $r3;
        java.lang.String $r0;
        com.mobclix.android.sdk.Mobclix $r2;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label1:
        $r3 = $r2.<com.mobclix.android.sdk.Mobclix: android.content.SharedPreferences sharedPrefs>;

        $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r0);

        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: boolean commit()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void removePref(java.util.List)
    {
        android.content.SharedPreferences$Editor $r3;
        java.lang.Exception $r6;
        java.util.List r0;
        android.content.SharedPreferences $r2;
        int i0, $i1;
        java.lang.Object $r4;
        com.mobclix.android.sdk.Mobclix $r1;
        java.lang.String $r5;

        r0 := @parameter0: java.util.List;

        $r1 = <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix controller>;

     label1:
        $r2 = $r1.<com.mobclix.android.sdk.Mobclix: android.content.SharedPreferences sharedPrefs>;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

     label2:
        i0 = 0;

     label3:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

     label4:
        if i0 < $i1 goto label7;

     label5:
        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: boolean commit()>();

     label6:
        return;

     label7:
        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (java.lang.String) $r4;

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r5);

     label8:
        i0 = i0 + 1;

        goto label3;

     label9:
        $r6 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    private static java.lang.String sha1(java.lang.String)
    {
        java.lang.Throwable r1;
        byte[] r3;
        java.security.MessageDigest $r4;
        java.lang.RuntimeException $r6;
        short $s3;
        byte $b2;
        java.lang.StringBuffer r2, $r5;
        int $i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        r3 = newarray (byte)[40];

     label1:
        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

     label2:
        r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>(r3, 0, $i0);

        r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        $r5 = new java.lang.StringBuffer;

        r2 = $r5;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = lengthof r3;

        if $i0 < $i1 goto label5;

        $r0 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label4:
        r1 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r6;

     label5:
        $b2 = r3[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $i0 = $i0 + 1;

        goto label3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
    }

    private void startNewSession()
    {
        java.lang.Throwable $r9;
        java.util.HashMap r1;
        long l0, l1, $l2;
        java.lang.String[] $r8;
        com.mobclix.android.sdk.FetchRemoteConfig $r7;
        org.json.JSONObject $r6;
        byte $b3;
        int i4, $i5;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r2, $r5;
        boolean $z0;
        com.mobclix.android.sdk.MobclixInstrumentation $r3;
        java.lang.Exception $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.StringBuilder $r4;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        entermonitor r0;

        l0 = 0L;

        l1 = 0L;

     label01:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("firstSessionEvent");

     label02:
        if $z0 == 0 goto label05;

     label03:
        $r2 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("firstSessionEvent");

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label04:
        l0 = $l2;

     label05:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("lastSessionEvent");

     label06:
        if $z0 == 0 goto label09;

     label07:
        $r2 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("lastSessionEvent");

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label08:
        l1 = $l2;

     label09:
        $l2 = l1 - l0;

        $b3 = l1 cmp 0L;

        if $b3 == 0 goto label10;

        $b3 = l0 cmp 0L;

        if $b3 != 0 goto label11;

     label10:
        $l2 = 1000L;

     label11:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("totalSessionTime");

     label12:
        if $z0 == 0 goto label15;

     label13:
        $r2 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("totalSessionTime");

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label14:
        $l2 = $l2 + l0;

     label15:
        r1 = new java.util.HashMap;

     label16:
        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("totalSessionTime", $r2);

        $z0 = r0.<com.mobclix.android.sdk.Mobclix: boolean isOfflineSession>;

     label17:
        if $z0 == 0 goto label24;

        i4 = 1;

     label18:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("offlineSessions");

     label19:
        if $z0 == 0 goto label22;

     label20:
        $r2 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("offlineSessions");

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label21:
        i4 = 1 + $i5;

     label22:
        l0 = (long) i4;

     label23:
        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("offlineSessions", $r2);

     label24:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label25:
        l0 = l0 - 1000L;

     label26:
        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("firstSessionEvent", $r2);

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("lastSessionEvent", $r2);

        staticinvoke <com.mobclix.android.sdk.Mobclix: void addPref(java.util.Map)>(r1);

        $r3 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

     label27:
        $r2 = <com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String STARTUP>;

     label28:
        $r2 = virtualinvoke $r3.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String startGroup(java.lang.String)>($r2);

        $r3 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r2 = virtualinvoke $r3.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r2, "session");

        $r3 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r2 = virtualinvoke $r3.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r2, "init");

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label29:
        $r4 = new java.lang.StringBuilder;

     label30:
        $r5 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String sha1(java.lang.String)>($r5);

     label31:
        $r6 = r0.<com.mobclix.android.sdk.Mobclix: org.json.JSONObject session>;

        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8");

        virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("id", $r5);

     label32:
        $r3 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r2 = virtualinvoke $r3.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r2);

        $r3 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r2 = virtualinvoke $r3.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkStart(java.lang.String,java.lang.String)>($r2, "config");

        r0.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet> = 0;

     label33:
        $r7 = new com.mobclix.android.sdk.FetchRemoteConfig;

     label34:
        specialinvoke $r7.<com.mobclix.android.sdk.FetchRemoteConfig: void <init>()>();

     label35:
        $r8 = newarray (java.lang.String)[0];

     label36:
        virtualinvoke $r7.<com.mobclix.android.sdk.FetchRemoteConfig: android.os.AsyncTask execute(java.lang.Object[])>($r8);

        $r3 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        $r2 = virtualinvoke $r3.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r2);

        $r3 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixInstrumentation instrumentation>;

        virtualinvoke $r3.<com.mobclix.android.sdk.MobclixInstrumentation: java.lang.String benchmarkFinishPath(java.lang.String)>($r2);

     label37:
        exitmonitor r0;

        return;

     label38:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

     label39:
        $r10 := @caughtexception;

        goto label37;

     label40:
        $r11 := @caughtexception;

        goto label32;

     label41:
        $r12 := @caughtexception;

        goto label22;

     label42:
        $r13 := @caughtexception;

        goto label15;

     label43:
        $r14 := @caughtexception;

        goto label09;

     label44:
        $r15 := @caughtexception;

        goto label05;

        catch java.lang.Exception from label01 to label02 with label39;
        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Exception from label03 to label04 with label44;
        catch java.lang.Throwable from label03 to label04 with label38;
        catch java.lang.Exception from label05 to label06 with label39;
        catch java.lang.Throwable from label05 to label06 with label38;
        catch java.lang.Exception from label07 to label08 with label43;
        catch java.lang.Throwable from label07 to label08 with label38;
        catch java.lang.Exception from label11 to label12 with label39;
        catch java.lang.Throwable from label11 to label12 with label38;
        catch java.lang.Exception from label13 to label14 with label42;
        catch java.lang.Throwable from label13 to label14 with label38;
        catch java.lang.Exception from label16 to label17 with label39;
        catch java.lang.Exception from label18 to label19 with label39;
        catch java.lang.Throwable from label15 to label19 with label38;
        catch java.lang.Exception from label20 to label21 with label41;
        catch java.lang.Throwable from label20 to label21 with label38;
        catch java.lang.Exception from label23 to label25 with label39;
        catch java.lang.Exception from label26 to label27 with label39;
        catch java.lang.Exception from label28 to label29 with label39;
        catch java.lang.Exception from label30 to label31 with label39;
        catch java.lang.Throwable from label22 to label31 with label38;
        catch java.lang.Exception from label31 to label32 with label40;
        catch java.lang.Throwable from label31 to label32 with label38;
        catch java.lang.Exception from label32 to label33 with label39;
        catch java.lang.Exception from label34 to label35 with label39;
        catch java.lang.Exception from label36 to label37 with label39;
        catch java.lang.Throwable from label32 to label37 with label38;
    }

    public static final void sync()
    {
        java.lang.Thread r0;
        int $i0, $i1;
        com.mobclix.android.sdk.MobclixAnalytics$Sync $r1;
        boolean $z0;

        $z0 = <com.mobclix.android.sdk.Mobclix: boolean isInitialized>;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("mobclix-controller", "sync failed - You must initialize Mobclix by calling Mobclix.onCreate(this).");

        return;

     label1:
        $i0 = staticinvoke <com.mobclix.android.sdk.MobclixAnalytics: int getSyncStatus()>();

        $i1 = <com.mobclix.android.sdk.MobclixAnalytics: int SYNC_READY>;

        if $i0 != $i1 goto label2;

        r0 = new java.lang.Thread;

        $r1 = new com.mobclix.android.sdk.MobclixAnalytics$Sync;

        specialinvoke $r1.<com.mobclix.android.sdk.MobclixAnalytics$Sync: void <init>()>();

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);

        virtualinvoke r0.<java.lang.Thread: void start()>();

     label2:
        return;
    }

    static void syncCookiesToCookieManager(org.apache.http.client.CookieStore, java.lang.String)
    {
        java.util.Date $r11;
        java.text.SimpleDateFormat r3;
        org.apache.http.client.CookieStore $r0;
        java.lang.StringBuffer r2, $r10;
        android.webkit.CookieManager $r4;
        int i0, $i1;
        android.webkit.CookieSyncManager $r6;
        org.apache.http.cookie.Cookie r8;
        java.lang.String $r1, $r9;
        boolean $z0;
        java.lang.Exception $r12;
        java.util.List $r5;
        java.lang.Object $r7;

        $r0 := @parameter0: org.apache.http.client.CookieStore;

        $r1 := @parameter1: java.lang.String;

     label01:
        $r4 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $r5 = interfaceinvoke $r0.<org.apache.http.client.CookieStore: java.util.List getCookies()>();

     label02:
        r2 = new java.lang.StringBuffer;

     label03:
        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

     label04:
        if $z0 != 0 goto label21;

        i0 = 0;

     label05:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

     label06:
        if i0 < $i1 goto label09;

     label07:
        $r6 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

        virtualinvoke $r6.<android.webkit.CookieSyncManager: void sync()>();

        $r6 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

        virtualinvoke $r6.<android.webkit.CookieSyncManager: void stopSync()>();

     label08:
        return;

     label09:
        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (org.apache.http.cookie.Cookie) $r7;

        $r9 = interfaceinvoke r8.<org.apache.http.cookie.Cookie: java.lang.String getName()>();

        $r10 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r9 = interfaceinvoke r8.<org.apache.http.cookie.Cookie: java.lang.String getValue()>();

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = interfaceinvoke r8.<org.apache.http.cookie.Cookie: java.util.Date getExpiryDate()>();

     label10:
        if $r11 == null goto label12;

        r3 = new java.text.SimpleDateFormat;

     label11:
        specialinvoke r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("E, dd-MMM-yyyy HH:mm:ss");

        $r10 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; expires=");

        $r11 = interfaceinvoke r8.<org.apache.http.cookie.Cookie: java.util.Date getExpiryDate()>();

        $r9 = virtualinvoke r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" GMT");

     label12:
        $r9 = interfaceinvoke r8.<org.apache.http.cookie.Cookie: java.lang.String getPath()>();

     label13:
        if $r9 == null goto label15;

     label14:
        $r10 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; path=");

        $r9 = interfaceinvoke r8.<org.apache.http.cookie.Cookie: java.lang.String getPath()>();

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label15:
        $r9 = interfaceinvoke r8.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

     label16:
        if $r9 == null goto label18;

     label17:
        $r10 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; domain=");

        $r9 = interfaceinvoke r8.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label18:
        $r9 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, $r9);

     label19:
        i0 = i0 + 1;

        goto label05;

     label20:
        $r12 := @caughtexception;

     label21:
        return;

        catch java.lang.Exception from label01 to label02 with label20;
        catch java.lang.Exception from label03 to label04 with label20;
        catch java.lang.Exception from label05 to label06 with label20;
        catch java.lang.Exception from label07 to label08 with label20;
        catch java.lang.Exception from label09 to label10 with label20;
        catch java.lang.Exception from label11 to label13 with label20;
        catch java.lang.Exception from label14 to label16 with label20;
        catch java.lang.Exception from label17 to label19 with label20;
    }

    private void updateConnectivity()
    {
        android.net.ConnectivityManager r4;
        android.content.Context $r2;
        android.net.NetworkInfo $r8;
        java.util.HashMap $r6;
        java.lang.Exception r1;
        android.telephony.TelephonyManager r9;
        int $i0;
        java.lang.Boolean $r7;
        java.lang.Object $r3;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String r5;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

     label01:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r4 = (android.net.ConnectivityManager) $r3;

     label02:
        r5 = "u";

     label03:
        $r6 = r0.<com.mobclix.android.sdk.Mobclix: java.util.HashMap permissions>;

        $r3 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("android.permission.ACCESS_NETWORK_STATE");

        $r7 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

     label04:
        if $z0 == 0 goto label08;

     label05:
        $r8 = virtualinvoke r4.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label06:
        if $r8 == null goto label08;

     label07:
        r5 = virtualinvoke $r8.<android.net.NetworkInfo: java.lang.String getTypeName()>();

     label08:
        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("WI_FI");

     label09:
        if $z0 != 0 goto label12;

     label10:
        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("WIFI");

     label11:
        if $z0 == 0 goto label17;

     label12:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String connectionType> = "wifi";

     label13:
        r5 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String connectionType>;

     label14:
        if r5 != null goto label24;

     label15:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String connectionType> = "null";

     label16:
        return;

     label17:
        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("MOBILE");

     label18:
        if $z0 == 0 goto label22;

     label19:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r9 = (android.telephony.TelephonyManager) $r3;

        $i0 = virtualinvoke r9.<android.telephony.TelephonyManager: int getNetworkType()>();

        r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String connectionType> = r5;

     label20:
        goto label13;

     label21:
        r1 := @caughtexception;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String connectionType> = "null";

        return;

     label22:
        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String connectionType> = "null";

     label23:
        goto label13;

     label24:
        return;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label08 to label09 with label21;
        catch java.lang.Exception from label10 to label11 with label21;
        catch java.lang.Exception from label12 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Exception from label22 to label23 with label21;
    }

    java.lang.String getAdMobApplicationId()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String adMobApplicationId>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String adMobApplicationId>;

        return $r1;
    }

    java.lang.String getAdServer()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String adServer>;

        return r1;
    }

    java.lang.String getAnalyticsServer()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String analyticsServer>;

        return r1;
    }

    java.lang.String getAndroidId()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidId>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidId>;

        return $r1;
    }

    java.lang.String getAndroidVersion()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidVersion>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String androidVersion>;

        return $r1;
    }

    public java.lang.String getApplicationId()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationId>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationId>;

        return $r1;
    }

    java.lang.String getApplicationVersion()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationVersion>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String applicationVersion>;

        return $r1;
    }

    java.lang.Long getAutoplayInterval(java.lang.String)
    {
        java.util.HashMap $r3;
        long $l0;
        java.lang.Exception r2;
        com.mobclix.android.sdk.MobclixAdUnitSettings $r5;
        java.lang.Long $r6;
        java.lang.Object $r4;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter0: java.lang.String;

        $r3 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings>;

     label1:
        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.mobclix.android.sdk.MobclixAdUnitSettings) $r4;

        $l0 = virtualinvoke $r5.<com.mobclix.android.sdk.MobclixAdUnitSettings: long getAutoplayInterval()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label2:
        return $r6;

     label3:
        r2 := @caughtexception;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        return $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    int getBatteryLevel()
    {
        int i0;
        com.mobclix.android.sdk.Mobclix r0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        i0 = r0.<com.mobclix.android.sdk.Mobclix: int batteryLevel>;

        return i0;
    }

    java.lang.String getConfigServer()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String configServer>;

        return r1;
    }

    java.lang.String getConnectionType()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String connectionType>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String connectionType>;

        return $r1;
    }

    android.content.Context getContext()
    {
        android.content.Context r1;
        com.mobclix.android.sdk.Mobclix r0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        r1 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        return r1;
    }

    java.lang.String getCustomAdUrl(java.lang.String)
    {
        com.mobclix.android.sdk.MobclixAdUnitSettings $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;
        java.lang.Exception r2;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter0: java.lang.String;

        $r3 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings>;

     label1:
        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.mobclix.android.sdk.MobclixAdUnitSettings) $r4;

        $r1 = virtualinvoke $r5.<com.mobclix.android.sdk.MobclixAdUnitSettings: java.lang.String getCustomAdUrl()>();

     label2:
        return $r1;

     label3:
        r2 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    java.lang.String getDebugConfig(java.lang.String)
    {
        java.lang.Object $r3;
        java.util.HashMap $r4;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;
        java.lang.Exception r2;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter0: java.lang.String;

        $r4 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap debugConfig>;

     label1:
        $r3 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

     label2:
        return $r1;

     label3:
        r2 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    java.lang.String getDebugServer()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String debugServer>;

        return r1;
    }

    java.lang.String getDeviceHardwareModel()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceHardwareModel>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceHardwareModel>;

        return $r1;
    }

    java.lang.String getDeviceId()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceId>;

        return $r1;
    }

    java.lang.String getDeviceModel()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceModel>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String deviceModel>;

        return $r1;
    }

    java.lang.String getFeedbackServer()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String feedbackServer>;

        return r1;
    }

    java.lang.String getGPS()
    {
        java.lang.StringBuilder $r2;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = virtualinvoke r0.<com.mobclix.android.sdk.Mobclix: java.lang.String getLatitude()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("null");

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<com.mobclix.android.sdk.Mobclix: java.lang.String getLongitude()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("null");

        if $z0 == 0 goto label2;

     label1:
        return "null";

     label2:
        $r2 = new java.lang.StringBuilder;

        $r1 = virtualinvoke r0.<com.mobclix.android.sdk.Mobclix: java.lang.String getLatitude()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r1 = virtualinvoke r0.<com.mobclix.android.sdk.Mobclix: java.lang.String getLongitude()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    java.lang.String getLanguage()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String language>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String language>;

        return $r1;
    }

    java.lang.String getLatitude()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String latitude>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String latitude>;

        return $r1;
    }

    java.lang.String getLocale()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String locale>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String locale>;

        return $r1;
    }

    int getLogLevel()
    {
        int i0;
        com.mobclix.android.sdk.Mobclix r0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        i0 = r0.<com.mobclix.android.sdk.Mobclix: int logLevel>;

        return i0;
    }

    java.lang.String getLongitude()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String longitude>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String longitude>;

        return $r1;
    }

    java.lang.String getMcc()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mcc>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mcc>;

        return $r1;
    }

    java.lang.String getMnc()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mnc>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String mnc>;

        return $r1;
    }

    java.lang.String getMobclixVersion()
    {
        com.mobclix.android.sdk.Mobclix r0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        return "3.1.1";
    }

    java.util.List getNativeUrls()
    {
        java.util.List r1;
        com.mobclix.android.sdk.Mobclix r0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        r1 = r0.<com.mobclix.android.sdk.Mobclix: java.util.List nativeUrls>;

        return r1;
    }

    java.lang.String getPlatform()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String platform>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String platform>;

        return $r1;
    }

    long getRefreshTime(java.lang.String)
    {
        com.mobclix.android.sdk.MobclixAdUnitSettings $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        long $l0;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;
        java.lang.Exception r2;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter0: java.lang.String;

        $r3 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings>;

     label1:
        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.mobclix.android.sdk.MobclixAdUnitSettings) $r4;

        $l0 = virtualinvoke $r5.<com.mobclix.android.sdk.MobclixAdUnitSettings: long getRefreshTime()>();

     label2:
        return $l0;

     label3:
        r2 := @caughtexception;

        return -1L;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    java.lang.String getRuntimePlatform()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String runtimePlatform>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String runtimePlatform>;

        return $r1;
    }

    java.lang.String getRuntimePlatformVersion()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String runtimePlatformVersion>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String runtimePlatformVersion>;

        return $r1;
    }

    java.lang.String getUserAgent()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String userAgent>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("null");

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("UserAgent");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("UserAgent");

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String userAgent> = $r1;

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String userAgent>;

        return $r1;
    }

    java.lang.String getVcServer()
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        r1 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String vcServer>;

        return r1;
    }

    boolean hasBeenIntervalSinceLastAutoplay(java.lang.String)
    {
        java.util.HashMap $r2;
        long $l0, $l1;
        byte $b2;
        java.lang.Long $r4;
        int $i3;
        java.lang.Object $r3;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.mobclix.android.sdk.MobclixAdView: java.util.HashMap lastAutoplayTime>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.Long) $r3;

        $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        r0 = staticinvoke <com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.Mobclix getInstance()>();

        $r4 = virtualinvoke r0.<com.mobclix.android.sdk.Mobclix: java.lang.Long getAutoplayInterval(java.lang.String)>($r1);

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $l0 = $l0 + $l1;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean hasLocationPermission()
    {
        com.mobclix.android.sdk.Mobclix r0;
        boolean z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        z0 = r0.<com.mobclix.android.sdk.Mobclix: boolean haveLocationPermission>;

        return z0;
    }

    public boolean isDeviceRooted()
    {
        java.lang.Runtime $r2;
        int $i0;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.Exception r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $i0 = r0.<com.mobclix.android.sdk.Mobclix: int rooted>;

        if $i0 == -1 goto label2;

        $i0 = r0.<com.mobclix.android.sdk.Mobclix: int rooted>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r2.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>("su");

        r0.<com.mobclix.android.sdk.Mobclix: int rooted> = 1;

     label3:
        $i0 = r0.<com.mobclix.android.sdk.Mobclix: int rooted>;

        if $i0 == 1 goto label5;

        return 0;

     label4:
        r1 := @caughtexception;

        r0.<com.mobclix.android.sdk.Mobclix: int rooted> = 0;

        goto label3;

     label5:
        return 1;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    boolean isEnabled(java.lang.String)
    {
        com.mobclix.android.sdk.MobclixAdUnitSettings $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;
        java.lang.Exception r2;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter0: java.lang.String;

        $r3 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings>;

     label1:
        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.mobclix.android.sdk.MobclixAdUnitSettings) $r4;

        $z0 = virtualinvoke $r5.<com.mobclix.android.sdk.MobclixAdUnitSettings: boolean isEnabled()>();

     label2:
        return $z0;

     label3:
        r2 := @caughtexception;

        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    int isRemoteConfigSet()
    {
        int i0;
        com.mobclix.android.sdk.Mobclix r0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        i0 = r0.<com.mobclix.android.sdk.Mobclix: int remoteConfigSet>;

        return i0;
    }

    boolean isRootedSet()
    {
        int $i0;
        com.mobclix.android.sdk.Mobclix r0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $i0 = r0.<com.mobclix.android.sdk.Mobclix: int rooted>;

        if $i0 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean rmRequireUserInteraction(java.lang.String)
    {
        com.mobclix.android.sdk.MobclixAdUnitSettings $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;
        java.lang.Exception r2;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter0: java.lang.String;

        $r3 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings>;

     label1:
        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.mobclix.android.sdk.MobclixAdUnitSettings) $r4;

        $z0 = virtualinvoke $r5.<com.mobclix.android.sdk.MobclixAdUnitSettings: boolean isRichMediaRequireUser()>();

     label2:
        return $z0;

     label3:
        r2 := @caughtexception;

        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void sessionEvent()
    {
        java.lang.Throwable $r3;
        long l0, $l1, $l3;
        java.lang.Exception $r2, $r4;
        byte $b4;
        int $i2;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        entermonitor r0;

        l0 = 0L;

     label01:
        $z0 = staticinvoke <com.mobclix.android.sdk.Mobclix: boolean hasPref(java.lang.String)>("lastSessionEvent");

     label02:
        if $z0 == 0 goto label05;

     label03:
        $r1 = staticinvoke <com.mobclix.android.sdk.Mobclix: java.lang.String getPref(java.lang.String)>("lastSessionEvent");

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label04:
        l0 = $l1;

     label05:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i2 = r0.<com.mobclix.android.sdk.Mobclix: int passiveSessionTimeout>;

     label06:
        $l3 = (long) $i2;

        l0 = $l3 + l0;

        $b4 = $l1 cmp l0;

        $i2 = (int) $b4;

        if $i2 <= 0 goto label09;

     label07:
        specialinvoke r0.<com.mobclix.android.sdk.Mobclix: void startNewSession()>();

     label08:
        exitmonitor r0;

        return;

     label09:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        staticinvoke <com.mobclix.android.sdk.Mobclix: void addPref(java.lang.String,java.lang.String)>("lastSessionEvent", $r1);

     label10:
        goto label08;

     label11:
        $r2 := @caughtexception;

        goto label08;

     label12:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label13:
        $r4 := @caughtexception;

        goto label05;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Throwable from label05 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label12;
    }

    void setContext(android.app.Activity)
    {
        android.content.Context $r2;
        com.mobclix.android.sdk.Mobclix r0;
        android.app.Activity $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter0: android.app.Activity;

        $r2 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>();

        r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context> = $r2;

        return;
    }

    void setUserAgent(java.lang.String)
    {
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter0: java.lang.String;

        r0.<com.mobclix.android.sdk.Mobclix: java.lang.String userAgent> = $r1;

        staticinvoke <com.mobclix.android.sdk.Mobclix: void addPref(java.lang.String,java.lang.String)>("UserAgent", $r1);

        return;
    }

    boolean shouldAutoplay(java.lang.String)
    {
        com.mobclix.android.sdk.MobclixAdUnitSettings $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r1;
        java.lang.Exception r2;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 := @parameter0: java.lang.String;

        $r3 = <com.mobclix.android.sdk.Mobclix: java.util.HashMap adUnitSettings>;

     label1:
        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.mobclix.android.sdk.MobclixAdUnitSettings) $r4;

        $z0 = virtualinvoke $r5.<com.mobclix.android.sdk.MobclixAdUnitSettings: boolean isAutoplay()>();

     label2:
        return $z0;

     label3:
        r2 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void updateLocation()
    {
        android.content.Context $r2;
        com.mobclix.android.sdk.Mobclix$1 $r3;
        com.mobclix.android.sdk.Mobclix r0;
        com.mobclix.android.sdk.MobclixLocation $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        $r1 = r0.<com.mobclix.android.sdk.Mobclix: com.mobclix.android.sdk.MobclixLocation location>;

        $r2 = r0.<com.mobclix.android.sdk.Mobclix: android.content.Context context>;

        $r3 = new com.mobclix.android.sdk.Mobclix$1;

        specialinvoke $r3.<com.mobclix.android.sdk.Mobclix$1: void <init>(com.mobclix.android.sdk.Mobclix)>(r0);

        virtualinvoke $r1.<com.mobclix.android.sdk.MobclixLocation: boolean getLocation(android.content.Context,com.mobclix.android.sdk.MobclixLocation$LocationResult)>($r2, $r3);

        return;
    }

    void updateSession()
    {
        long $l0;
        java.lang.Exception $r4, $r5;
        org.json.JSONObject $r2;
        android.os.Handler $r1;
        com.mobclix.android.sdk.Mobclix r0;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix;

        specialinvoke r0.<com.mobclix.android.sdk.Mobclix: void updateConnectivity()>();

     label01:
        $z0 = r0.<com.mobclix.android.sdk.Mobclix: boolean haveLocationPermission>;

     label02:
        if $z0 == 0 goto label04;

     label03:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix: android.os.Handler locationHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(0);

     label04:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: org.json.JSONObject session>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("ts", $l0);

        $r3 = virtualinvoke r0.<com.mobclix.android.sdk.Mobclix: java.lang.String getGPS()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label05:
        if $z0 != 0 goto label09;

     label06:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: org.json.JSONObject session>;

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("ll", $r3);

     label07:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: org.json.JSONObject session>;

        $r3 = r0.<com.mobclix.android.sdk.Mobclix: java.lang.String connectionType>;

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("g", $r3);

     label08:
        return;

     label09:
        $r2 = r0.<com.mobclix.android.sdk.Mobclix: org.json.JSONObject session>;

        virtualinvoke $r2.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>("ll");

     label10:
        goto label07;

     label11:
        $r4 := @caughtexception;

        return;

     label12:
        $r5 := @caughtexception;

        goto label04;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
}
