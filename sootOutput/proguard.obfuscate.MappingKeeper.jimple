public class proguard.obfuscate.MappingKeeper extends java.lang.Object implements proguard.obfuscate.MappingProcessor
{
    private final proguard.classfile.ClassPool classPool;
    private proguard.classfile.Clazz clazz;
    private final proguard.classfile.util.WarningPrinter warningPrinter;

    public void <init>(proguard.classfile.ClassPool, proguard.classfile.util.WarningPrinter)
    {
        proguard.classfile.ClassPool $r1;
        proguard.obfuscate.MappingKeeper r0;
        proguard.classfile.util.WarningPrinter $r2;

        r0 := @this: proguard.obfuscate.MappingKeeper;

        $r1 := @parameter0: proguard.classfile.ClassPool;

        $r2 := @parameter1: proguard.classfile.util.WarningPrinter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.ClassPool classPool> = $r1;

        r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.util.WarningPrinter warningPrinter> = $r2;

        return;
    }

    public boolean processClassMapping(java.lang.String, java.lang.String)
    {
        proguard.obfuscate.MappingKeeper r0;
        proguard.classfile.util.WarningPrinter $r7;
        proguard.classfile.ClassPool $r4;
        proguard.classfile.Clazz $r5;
        java.lang.StringBuffer $r9;
        java.lang.String $r1, $r2, $r3, $r6, $r8;
        boolean $z0;

        r0 := @this: proguard.obfuscate.MappingKeeper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r1);

        $r4 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.ClassPool classPool>;

        $r5 = virtualinvoke $r4.<proguard.classfile.ClassPool: proguard.classfile.Clazz getClass(java.lang.String)>($r3);

        r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.Clazz clazz> = $r5;

        $r5 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.Clazz clazz>;

        if $r5 == null goto label2;

        $r6 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r2);

        $r7 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.util.WarningPrinter warningPrinter>;

        if $r7 == null goto label1;

        $r5 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.Clazz clazz>;

        $r8 = staticinvoke <proguard.obfuscate.ClassObfuscator: java.lang.String newClassName(proguard.classfile.Clazz)>($r5);

        if $r8 == null goto label1;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r7 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.util.WarningPrinter warningPrinter>;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Warning: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not being kept as \'");

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', but remapped to \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<proguard.classfile.util.WarningPrinter: void print(java.lang.String,java.lang.String,java.lang.String)>($r3, $r8, $r1);

     label1:
        $r5 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.Clazz clazz>;

        staticinvoke <proguard.obfuscate.ClassObfuscator: void setNewClassName(proguard.classfile.Clazz,java.lang.String)>($r5, $r6);

        return 1;

     label2:
        return 0;
    }

    public void processFieldMapping(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        proguard.obfuscate.MappingKeeper r0;
        proguard.classfile.util.WarningPrinter $r8;
        proguard.classfile.Field $r7;
        proguard.classfile.Clazz $r5;
        java.lang.StringBuffer $r10;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r9;
        boolean $z0;

        r0 := @this: proguard.obfuscate.MappingKeeper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.Clazz clazz>;

        if $r5 == null goto label2;

        $r6 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r2);

        $r5 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.Clazz clazz>;

        $r7 = interfaceinvoke $r5.<proguard.classfile.Clazz: proguard.classfile.Field findField(java.lang.String,java.lang.String)>($r3, $r6);

        if $r7 == null goto label2;

        $r8 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.util.WarningPrinter warningPrinter>;

        if $r8 == null goto label1;

        $r9 = staticinvoke <proguard.obfuscate.MemberObfuscator: java.lang.String newMemberName(proguard.classfile.Member)>($r7);

        if $r9 == null goto label1;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r8 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.util.WarningPrinter warningPrinter>;

        $r6 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r1);

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Warning: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": field \'");

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is not being kept as \'");

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', but remapped to \'");

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r8.<proguard.classfile.util.WarningPrinter: void print(java.lang.String,java.lang.String)>($r6, $r1);

     label1:
        staticinvoke <proguard.obfuscate.MemberObfuscator: void setFixedNewMemberName(proguard.classfile.Member,java.lang.String)>($r7, $r4);

     label2:
        return;
    }

    public void processMethodMapping(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        proguard.classfile.Clazz $r6;
        java.lang.StringBuffer $r12;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r8, $r11;
        boolean $z0;
        proguard.obfuscate.MappingKeeper r0;
        proguard.classfile.util.WarningPrinter $r10;
        java.util.List $r7;
        proguard.classfile.Method $r9;

        r0 := @this: proguard.obfuscate.MappingKeeper;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.lang.String;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: java.lang.String;

        $r5 := @parameter6: java.lang.String;

        $r6 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.Clazz clazz>;

        if $r6 == null goto label2;

        $r7 = staticinvoke <proguard.util.ListUtil: java.util.List commaSeparatedList(java.lang.String)>($r4);

        $r8 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalMethodDescriptor(java.lang.String,java.util.List)>($r2, $r7);

        $r6 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.Clazz clazz>;

        $r9 = interfaceinvoke $r6.<proguard.classfile.Clazz: proguard.classfile.Method findMethod(java.lang.String,java.lang.String)>($r3, $r8);

        if $r9 == null goto label2;

        $r10 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.util.WarningPrinter warningPrinter>;

        if $r10 == null goto label1;

        $r11 = staticinvoke <proguard.obfuscate.MemberObfuscator: java.lang.String newMemberName(proguard.classfile.Member)>($r9);

        if $r11 == null goto label1;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r10 = r0.<proguard.obfuscate.MappingKeeper: proguard.classfile.util.WarningPrinter warningPrinter>;

        $r8 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r1);

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Warning: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": method \'");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is not being kept as \'");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', but remapped to \'");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<proguard.classfile.util.WarningPrinter: void print(java.lang.String,java.lang.String)>($r8, $r1);

     label1:
        staticinvoke <proguard.obfuscate.MemberObfuscator: void setFixedNewMemberName(proguard.classfile.Member,java.lang.String)>($r9, $r5);

     label2:
        return;
    }
}
