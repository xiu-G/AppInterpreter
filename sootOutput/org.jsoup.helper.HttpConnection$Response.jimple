public class org.jsoup.helper.HttpConnection$Response extends org.jsoup.helper.HttpConnection$Base implements org.jsoup.Connection$Response
{
    private static final int MAX_REDIRECTS;
    private java.nio.ByteBuffer byteData;
    private java.lang.String charset;
    private java.lang.String contentType;
    private boolean executed;
    private int numRedirects;
    private org.jsoup.Connection$Request req;
    private int statusCode;
    private java.lang.String statusMessage;

    void <init>()
    {
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>(null);

        r0.<org.jsoup.helper.HttpConnection$Response: boolean executed> = 0;

        r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = 0;

        return;
    }

    private void <init>(org.jsoup.helper.HttpConnection$Response) throws java.io.IOException
    {
        java.lang.Object[] $r3;
        java.net.URL $r4;
        int $i0;
        java.io.IOException $r2;
        java.lang.String $r5;
        org.jsoup.helper.HttpConnection$Response r0, $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: org.jsoup.helper.HttpConnection$Response;

        specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>(null);

        r0.<org.jsoup.helper.HttpConnection$Response: boolean executed> = 0;

        r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = 0;

        if $r1 == null goto label1;

        $i0 = $r1.<org.jsoup.helper.HttpConnection$Response: int numRedirects>;

        $i0 = $i0 + 1;

        r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = $i0;

        $i0 = r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects>;

        if $i0 < 20 goto label1;

        $r2 = new java.io.IOException;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke $r1.<org.jsoup.helper.HttpConnection$Response: java.net.URL url()>();

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Too many redirects occurred trying to load URL %s", $r3);

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label1:
        return;
    }

    private static java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request) throws java.io.IOException
    {
        java.net.HttpURLConnection r3;
        org.jsoup.Connection$Method $r4, $r6;
        java.util.Map$Entry r11;
        java.util.Iterator $r9;
        java.net.URL $r1;
        java.util.Set $r8;
        org.jsoup.Connection$Request $r0;
        java.net.URLConnection $r2;
        java.util.Map $r7;
        int $i0;
        java.lang.Object $r10;
        java.lang.String $r5, $r12;
        boolean $z0;

        $r0 := @parameter0: org.jsoup.Connection$Request;

        $r1 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        r3 = (java.net.HttpURLConnection) $r2;

        $r4 = interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r5 = virtualinvoke $r4.<org.jsoup.Connection$Method: java.lang.String name()>();

        virtualinvoke r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r5);

        virtualinvoke r3.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0);

        $i0 = interfaceinvoke $r0.<org.jsoup.Connection$Request: int timeout()>();

        virtualinvoke r3.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        $i0 = interfaceinvoke $r0.<org.jsoup.Connection$Request: int timeout()>();

        virtualinvoke r3.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        $r4 = interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r6 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;

        if $r4 != $r6 goto label1;

        virtualinvoke r3.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label1:
        $r7 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Map cookies()>();

        $i0 = interfaceinvoke $r7.<java.util.Map: int size()>();

        if $i0 <= 0 goto label2;

        $r5 = staticinvoke <org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>($r0);

        virtualinvoke r3.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Cookie", $r5);

     label2:
        $r7 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Map headers()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        $r10 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r10;

        $r10 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.String) $r10;

        virtualinvoke r3.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r5, $r12);

        goto label3;

     label4:
        return r3;
    }

    static org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request) throws java.io.IOException
    {
        org.jsoup.Connection$Request $r0;
        org.jsoup.helper.HttpConnection$Response $r1;

        $r0 := @parameter0: org.jsoup.Connection$Request;

        $r1 = staticinvoke <org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>($r0, null);

        return $r1;
    }

    static org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request, org.jsoup.helper.HttpConnection$Response) throws java.io.IOException
    {
        java.net.HttpURLConnection $r8;
        java.lang.Throwable $r18, $r27;
        org.jsoup.UnsupportedMimeTypeException $r20;
        java.util.zip.GZIPInputStream $r25;
        java.io.BufferedInputStream r21, $r24;
        java.net.URL $r2, $r11;
        org.jsoup.Connection$Request $r0;
        org.jsoup.HttpStatusException $r19;
        java.nio.ByteBuffer $r26;
        java.util.Map $r12;
        int $i0;
        java.lang.String $r3, $r17;
        boolean $z0, $z1;
        java.io.OutputStream $r9;
        org.jsoup.Connection$Method $r5, $r6;
        java.util.Map$Entry r16;
        java.util.Iterator $r14;
        java.net.MalformedURLException $r4;
        java.util.Collection $r7;
        java.util.Set $r13;
        java.lang.Object $r15;
        org.jsoup.helper.HttpConnection$Response $r1, r10;
        java.io.InputStream r22, $r23;

        $r0 := @parameter0: org.jsoup.Connection$Request;

        $r1 := @parameter1: org.jsoup.helper.HttpConnection$Response;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>($r0, "Request must not be null");

        $r2 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z0 != 0 goto label01;

        $r4 = new java.net.MalformedURLException;

        specialinvoke $r4.<java.net.MalformedURLException: void <init>(java.lang.String)>("Only http & https protocols supported");

        throw $r4;

     label01:
        $r5 = interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r6 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;

        if $r5 != $r6 goto label02;

        $r7 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        $i0 = interfaceinvoke $r7.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label02;

        staticinvoke <org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>($r0);

     label02:
        $r8 = staticinvoke <org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>($r0);

     label03:
        virtualinvoke $r8.<java.net.HttpURLConnection: void connect()>();

        $r5 = interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r6 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;

     label04:
        if $r5 != $r6 goto label06;

     label05:
        $r7 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        $r9 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        staticinvoke <org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>($r7, $r9);

     label06:
        $i0 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>();

     label07:
        $z0 = 0;

        if $i0 == 200 goto label09;

        if $i0 == 302 goto label08;

        if $i0 == 301 goto label08;

        if $i0 != 303 goto label19;

     label08:
        $z0 = 1;

     label09:
        r10 = new org.jsoup.helper.HttpConnection$Response;

        specialinvoke r10.<org.jsoup.helper.HttpConnection$Response: void <init>(org.jsoup.helper.HttpConnection$Response)>($r1);

        specialinvoke r10.<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>($r8, $r1);

     label10:
        if $z0 == 0 goto label24;

     label11:
        $z0 = interfaceinvoke $r0.<org.jsoup.Connection$Request: boolean followRedirects()>();

     label12:
        if $z0 == 0 goto label24;

     label13:
        $r5 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;

        interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>($r5);

        $r7 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        interfaceinvoke $r7.<java.util.Collection: void clear()>();

        $r2 = new java.net.URL;

        $r11 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r3 = virtualinvoke r10.<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>("Location");

        specialinvoke $r2.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r11, $r3);

        interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>($r2);

        $r12 = r10.<org.jsoup.helper.HttpConnection$Response: java.util.Map cookies>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

     label15:
        if $z0 == 0 goto label22;

     label16:
        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.util.Map$Entry) $r15;

        $r15 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r15;

        $r15 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.lang.String) $r15;

        interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r3, $r17);

     label17:
        goto label14;

     label18:
        $r18 := @caughtexception;

        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

        throw $r18;

     label19:
        $z1 = interfaceinvoke $r0.<org.jsoup.Connection$Request: boolean ignoreHttpErrors()>();

     label20:
        if $z1 != 0 goto label09;

     label21:
        $r19 = new org.jsoup.HttpStatusException;

        $r2 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r19.<org.jsoup.HttpStatusException: void <init>(java.lang.String,int,java.lang.String)>("HTTP error fetching URL", $i0, $r3);

        throw $r19;

     label22:
        $r1 = staticinvoke <org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>($r0, r10);

     label23:
        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

        return $r1;

     label24:
        r10.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Request req> = $r0;

        $r3 = virtualinvoke r10.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType()>();

     label25:
        if $r3 == null goto label35;

     label26:
        $z0 = interfaceinvoke $r0.<org.jsoup.Connection$Request: boolean ignoreContentType()>();

     label27:
        if $z0 != 0 goto label35;

     label28:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("text/");

     label29:
        if $z0 != 0 goto label35;

     label30:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("application/xml");

     label31:
        if $z0 != 0 goto label35;

     label32:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("application/xhtml+xml");

     label33:
        if $z0 != 0 goto label35;

     label34:
        $r20 = new org.jsoup.UnsupportedMimeTypeException;

        $r2 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r17 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r20.<org.jsoup.UnsupportedMimeTypeException: void <init>(java.lang.String,java.lang.String,java.lang.String)>("Unhandled content type. Must be text/*, application/xml, or application/xhtml+xml", $r3, $r17);

        throw $r20;

     label35:
        r21 = null;

        r22 = null;

     label36:
        $r23 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

     label37:
        if $r23 == null goto label52;

     label38:
        $r23 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

     label39:
        r22 = $r23;

     label40:
        $z0 = virtualinvoke r10.<org.jsoup.helper.HttpConnection$Response: boolean hasHeader(java.lang.String)>("Content-Encoding");

     label41:
        if $z0 == 0 goto label54;

     label42:
        $r3 = virtualinvoke r10.<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>("Content-Encoding");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("gzip");

     label43:
        if $z0 == 0 goto label54;

     label44:
        $r24 = new java.io.BufferedInputStream;

        $r25 = new java.util.zip.GZIPInputStream;

        specialinvoke $r25.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r22);

        specialinvoke $r24.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r25);

     label45:
        r21 = $r24;

     label46:
        $i0 = interfaceinvoke $r0.<org.jsoup.Connection$Request: int maxBodySize()>();

        $r26 = staticinvoke <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int)>(r21, $i0);

        r10.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData> = $r26;

        $r3 = r10.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        $r3 = staticinvoke <org.jsoup.helper.DataUtil: java.lang.String getCharsetFromContentType(java.lang.String)>($r3);

        r10.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset> = $r3;

     label47:
        if r21 == null goto label49;

     label48:
        virtualinvoke r21.<java.io.InputStream: void close()>();

     label49:
        if r22 == null goto label51;

     label50:
        virtualinvoke r22.<java.io.InputStream: void close()>();

     label51:
        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

        r10.<org.jsoup.helper.HttpConnection$Response: boolean executed> = 1;

        return r10;

     label52:
        $r23 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label53:
        r22 = $r23;

        goto label40;

     label54:
        $r24 = new java.io.BufferedInputStream;

        specialinvoke $r24.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r22);

     label55:
        r21 = $r24;

        goto label46;

     label56:
        $r27 := @caughtexception;

        if r21 == null goto label58;

     label57:
        virtualinvoke r21.<java.io.InputStream: void close()>();

     label58:
        if r22 == null goto label60;

     label59:
        virtualinvoke r22.<java.io.InputStream: void close()>();

     label60:
        throw $r27;

     label61:
        nop;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label07 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label13 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label21 to label23 with label18;
        catch java.lang.Throwable from label24 to label25 with label18;
        catch java.lang.Throwable from label26 to label27 with label18;
        catch java.lang.Throwable from label28 to label29 with label18;
        catch java.lang.Throwable from label30 to label31 with label18;
        catch java.lang.Throwable from label32 to label33 with label18;
        catch java.lang.Throwable from label34 to label35 with label18;
        catch java.lang.Throwable from label36 to label37 with label56;
        catch java.lang.Throwable from label38 to label39 with label56;
        catch java.lang.Throwable from label40 to label41 with label56;
        catch java.lang.Throwable from label42 to label43 with label56;
        catch java.lang.Throwable from label44 to label45 with label56;
        catch java.lang.Throwable from label46 to label47 with label56;
        catch java.lang.Throwable from label48 to label49 with label18;
        catch java.lang.Throwable from label50 to label51 with label18;
        catch java.lang.Throwable from label52 to label53 with label56;
        catch java.lang.Throwable from label54 to label55 with label56;
        catch java.lang.Throwable from label57 to label58 with label18;
        catch java.lang.Throwable from label59 to label61 with label18;
    }

    private static java.lang.String getRequestCookieString(org.jsoup.Connection$Request)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.jsoup.Connection$Request $r0;
        java.util.Map $r2;
        java.lang.StringBuilder r1, $r8;
        java.lang.Object $r5;
        java.lang.String $r7;
        boolean z0, $z1;

        $r0 := @parameter0: org.jsoup.Connection$Request;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        z0 = 1;

        $r2 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Map cookies()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        if z0 != 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

     label2:
        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r5;

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r5;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label1;

     label3:
        z0 = 0;

        goto label2;

     label4:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static void serialiseRequestUrl(org.jsoup.Connection$Request) throws java.io.IOException
    {
        java.util.Iterator $r6;
        java.net.URL $r2;
        java.util.Collection $r5;
        org.jsoup.Connection$Request $r0;
        org.jsoup.Connection$KeyVal r8;
        java.lang.StringBuilder r1, $r4;
        java.lang.Object $r7;
        java.lang.String $r3;
        boolean z0, $z1;

        $r0 := @parameter0: org.jsoup.Connection$Request;

        $r2 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        z0 = 1;

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>();

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getAuthority()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>();

        if $r3 == null goto label1;

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        z0 = 0;

     label1:
        $r5 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.jsoup.Connection$KeyVal) $r7;

        if z0 != 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

     label3:
        $r3 = interfaceinvoke r8.<org.jsoup.Connection$KeyVal: java.lang.String key()>();

        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r3, "UTF-8");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r3 = interfaceinvoke r8.<org.jsoup.Connection$KeyVal: java.lang.String value()>();

        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r3, "UTF-8");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label2;

     label4:
        z0 = 0;

        goto label3;

     label5:
        $r2 = new java.net.URL;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r3);

        interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>($r2);

        $r5 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        interfaceinvoke $r5.<java.util.Collection: void clear()>();

        return;
    }

    private void setupFromConnection(java.net.HttpURLConnection, org.jsoup.Connection$Response) throws java.io.IOException
    {
        java.net.HttpURLConnection $r1;
        org.jsoup.Connection$Method $r4;
        java.util.Map$Entry r10;
        org.jsoup.Connection$Response $r2;
        java.util.Iterator $r8;
        java.net.URL $r5;
        java.util.Set $r7;
        java.util.Map $r6;
        int $i0;
        java.lang.Object $r9;
        java.lang.String $r3, $r11;
        org.jsoup.helper.HttpConnection$Response r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: java.net.HttpURLConnection;

        $r2 := @parameter1: org.jsoup.Connection$Response;

        $r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        $r4 = staticinvoke <org.jsoup.Connection$Method: org.jsoup.Connection$Method valueOf(java.lang.String)>($r3);

        r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Method method> = $r4;

        $r5 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        r0.<org.jsoup.helper.HttpConnection$Response: java.net.URL url> = $r5;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>();

        r0.<org.jsoup.helper.HttpConnection$Response: int statusCode> = $i0;

        $r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String statusMessage> = $r3;

        $r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType> = $r3;

        $r6 = virtualinvoke $r1.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: void processResponseHeaders(java.util.Map)>($r6);

        if $r2 == null goto label2;

        $r6 = interfaceinvoke $r2.<org.jsoup.Connection$Response: java.util.Map cookies()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r9;

        $z0 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: boolean hasCookie(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r9;

        $r9 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.lang.String) $r9;

        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r3, $r11);

        goto label1;

     label2:
        return;
    }

    private static void writePost(java.util.Collection, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        java.util.Iterator $r3;
        java.util.Collection r0;
        org.jsoup.Connection$KeyVal r5;
        java.io.OutputStreamWriter r2;
        java.lang.Object $r4;
        java.lang.String $r6;
        boolean z0, $z1;

        r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.io.OutputStream;

        r2 = new java.io.OutputStreamWriter;

        specialinvoke r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, "UTF-8");

        z0 = 1;

        $r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jsoup.Connection$KeyVal) $r4;

        if z0 != 0 goto label3;

        virtualinvoke r2.<java.io.OutputStreamWriter: java.io.Writer append(char)>(38);

     label2:
        $r6 = interfaceinvoke r5.<org.jsoup.Connection$KeyVal: java.lang.String key()>();

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8");

        virtualinvoke r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r6);

        virtualinvoke r2.<java.io.OutputStreamWriter: void write(int)>(61);

        $r6 = interfaceinvoke r5.<org.jsoup.Connection$KeyVal: java.lang.String value()>();

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8");

        virtualinvoke r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r6);

        goto label1;

     label3:
        z0 = 0;

        goto label2;

     label4:
        virtualinvoke r2.<java.io.OutputStreamWriter: void close()>();

        return;
    }

    public java.lang.String body()
    {
        java.nio.charset.Charset $r2;
        java.nio.CharBuffer $r4;
        java.lang.String $r1;
        org.jsoup.helper.HttpConnection$Response r0;
        java.nio.ByteBuffer $r3;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $z0 = r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;

        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before getting response body");

        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        if $r1 != null goto label2;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        $r3 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r4 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r3);

        $r1 = virtualinvoke $r4.<java.nio.CharBuffer: java.lang.String toString()>();

     label1:
        $r3 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        return $r1;

     label2:
        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r1);

        $r3 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r4 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r3);

        $r1 = virtualinvoke $r4.<java.nio.CharBuffer: java.lang.String toString()>();

        goto label1;
    }

    public byte[] bodyAsBytes()
    {
        byte[] $r1;
        org.jsoup.helper.HttpConnection$Response r0;
        java.nio.ByteBuffer $r2;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $z0 = r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;

        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before getting response body");

        $r2 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r1 = virtualinvoke $r2.<java.nio.ByteBuffer: byte[] array()>();

        return $r1;
    }

    public java.lang.String charset()
    {
        java.lang.String r1;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        return r1;
    }

    public java.lang.String contentType()
    {
        java.lang.String r1;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        return r1;
    }

    public volatile java.lang.String cookie(java.lang.String)
    {
        java.lang.String $r1;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String cookie(java.lang.String)>($r1);

        return $r1;
    }

    public volatile java.util.Map cookies()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies()>();

        return $r1;
    }

    public volatile boolean hasCookie(java.lang.String)
    {
        java.lang.String $r1;
        org.jsoup.helper.HttpConnection$Response r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: boolean hasCookie(java.lang.String)>($r1);

        return $z0;
    }

    public volatile boolean hasHeader(java.lang.String)
    {
        java.lang.String $r1;
        org.jsoup.helper.HttpConnection$Response r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: boolean hasHeader(java.lang.String)>($r1);

        return $z0;
    }

    public volatile java.lang.String header(java.lang.String)
    {
        java.lang.String $r1;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String header(java.lang.String)>($r1);

        return $r1;
    }

    public volatile java.util.Map headers()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers()>();

        return $r1;
    }

    public volatile org.jsoup.Connection$Method method()
    {
        org.jsoup.Connection$Method $r1;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Method method()>();

        return $r1;
    }

    public org.jsoup.nodes.Document parse() throws java.io.IOException
    {
        java.net.URL $r3;
        org.jsoup.Connection$Request $r5;
        java.nio.ByteBuffer $r1;
        org.jsoup.parser.Parser $r6;
        java.nio.charset.Charset $r9;
        org.jsoup.nodes.Document$OutputSettings $r8;
        org.jsoup.nodes.Document $r7;
        java.lang.String $r2, $r4;
        org.jsoup.helper.HttpConnection$Response r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $z0 = r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;

        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before parsing response");

        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r2 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        $r3 = r0.<org.jsoup.helper.HttpConnection$Response: java.net.URL url>;

        $r4 = virtualinvoke $r3.<java.net.URL: java.lang.String toExternalForm()>();

        $r5 = r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Request req>;

        $r6 = interfaceinvoke $r5.<org.jsoup.Connection$Request: org.jsoup.parser.Parser parser()>();

        $r7 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser)>($r1, $r2, $r4, $r6);

        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r8 = virtualinvoke $r7.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();

        $r9 = virtualinvoke $r8.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.Charset charset()>();

        $r2 = virtualinvoke $r9.<java.nio.charset.Charset: java.lang.String name()>();

        r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset> = $r2;

        return $r7;
    }

    void processResponseHeaders(java.util.Map)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4, $r9;
        org.jsoup.parser.TokenQueue r2;
        java.util.Set $r3;
        java.util.List r8;
        java.util.Map r1;
        int $i0;
        java.lang.Object $r5;
        java.lang.String r7, $r10, r11;
        org.jsoup.helper.HttpConnection$Response r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 := @parameter0: java.util.Map;

        $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r5;

        if r7 == null goto label1;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.util.List) $r5;

        $z0 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Set-Cookie");

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r5;

        if r7 == null goto label2;

        r2 = new org.jsoup.parser.TokenQueue;

        specialinvoke r2.<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>(r7);

        r7 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>("=");

        r7 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        $r10 = virtualinvoke r2.<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>(";");

        $r10 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        r11 = $r10;

        if $r10 != null goto label3;

        r11 = "";

     label3:
        if r7 == null goto label2;

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>(r7, r11);

        goto label2;

     label4:
        $z0 = interfaceinvoke r8.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (java.lang.String) $r5;

        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>(r7, $r10);

        goto label1;

     label5:
        return;
    }

    public int statusCode()
    {
        int i0;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        i0 = r0.<org.jsoup.helper.HttpConnection$Response: int statusCode>;

        return i0;
    }

    public java.lang.String statusMessage()
    {
        java.lang.String r1;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String statusMessage>;

        return r1;
    }

    public volatile java.net.URL url()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.net.URL $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.net.URL url()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.jsoup.helper.HttpConnection$Response: int MAX_REDIRECTS> = 20;

        return;
    }
}
