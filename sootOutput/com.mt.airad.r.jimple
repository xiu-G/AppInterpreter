class com.mt.airad.r extends java.lang.Object
{
    private static com.mt.airad.r c;
    private com.mt.airad.l a;
    private org.apache.http.client.HttpClient b;

    static void <clinit>()
    {
        <com.mt.airad.r: com.mt.airad.r c> = null;

        return;
    }

    private void <init>()
    {
        com.mt.airad.l $r1;
        com.mt.airad.r r0;

        r0 := @this: com.mt.airad.r;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.mt.airad.l: com.mt.airad.l e()>();

        r0.<com.mt.airad.r: com.mt.airad.l a> = $r1;

        return;
    }

    protected static com.mt.airad.r a()
    {
        com.mt.airad.r $r0;

        $r0 = <com.mt.airad.r: com.mt.airad.r c>;

        if $r0 != null goto label1;

        $r0 = new com.mt.airad.r;

        specialinvoke $r0.<com.mt.airad.r: void <init>()>();

        <com.mt.airad.r: com.mt.airad.r c> = $r0;

     label1:
        $r0 = <com.mt.airad.r: com.mt.airad.r c>;

        return $r0;
    }

    private java.lang.String a(java.lang.String)
    {
        java.lang.String $r1;
        com.mt.airad.r r0;

        r0 := @this: com.mt.airad.r;

        $r1 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.mt.airad.y: java.lang.String a(java.lang.String)>($r1);

        return $r1;
    }

    private java.lang.String b(java.lang.String)
    {
        java.lang.String $r1;
        com.mt.airad.r r0;

        r0 := @this: com.mt.airad.r;

        $r1 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.mt.airad.y: java.lang.String b(java.lang.String)>($r1);

        return $r1;
    }

    private org.apache.http.client.HttpClient b()
    {
        org.apache.http.HttpVersion $r2;
        org.apache.http.conn.scheme.PlainSocketFactory $r5;
        org.apache.http.impl.client.DefaultHttpClient $r8;
        org.apache.http.conn.scheme.SchemeRegistry $r3;
        org.apache.http.params.BasicHttpParams $r1;
        org.apache.http.conn.scheme.Scheme $r4;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r7;
        org.apache.http.conn.ssl.SSLSocketFactory $r6;
        com.mt.airad.r r0;

        r0 := @this: com.mt.airad.r;

        $r1 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r1.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $r2 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>($r1, $r2);

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>($r1, "ISO-8859-1");

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUserAgent(org.apache.http.params.HttpParams,java.lang.String)>($r1, "airad-1.2.7/java/android");

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>($r1, 1);

        $r3 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        $r4 = new org.apache.http.conn.scheme.Scheme;

        $r5 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r4.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r5, 80);

        virtualinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r4);

        $r4 = new org.apache.http.conn.scheme.Scheme;

        $r6 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>();

        specialinvoke $r4.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("https", $r6, 443);

        virtualinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r4);

        $r7 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        specialinvoke $r7.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>($r1, $r3);

        $r8 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r8.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r7, $r1);

        return $r8;
    }

    private void c()
    {
        com.mt.airad.r r0;
        org.apache.http.client.HttpClient $r1;
        org.apache.http.conn.ClientConnectionManager $r2;

        r0 := @this: com.mt.airad.r;

        $r1 = r0.<com.mt.airad.r: org.apache.http.client.HttpClient b>;

        if $r1 == null goto label1;

        $r1 = r0.<com.mt.airad.r: org.apache.http.client.HttpClient b>;

        $r2 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        if $r2 == null goto label1;

        $r1 = r0.<com.mt.airad.r: org.apache.http.client.HttpClient b>;

        $r2 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r2.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

     label1:
        return;
    }

    protected java.util.HashMap a(java.util.HashMap)
    {
        java.net.HttpURLConnection $r9;
        java.lang.Throwable $r12, $r13;
        java.net.URL $r6;
        java.util.HashMap $r1, $r2;
        java.lang.String[] $r3;
        java.lang.NullPointerException $r14;
        java.net.URLConnection $r8;
        int $i0, $i1;
        com.mt.airad.l $r4;
        java.lang.String $r5;
        com.mt.airad.r r0;
        boolean $z0;
        android.graphics.Bitmap $r11;
        java.lang.Object $r7;
        java.io.InputStream $r10;

        r0 := @this: com.mt.airad.r;

        $r1 := @parameter0: java.util.HashMap;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

     label01:
        $r4 = r0.<com.mt.airad.r: com.mt.airad.l a>;

        $r3 = $r4.<com.mt.airad.l: java.lang.String[] n>;

     label02:
        $i0 = 0;

     label03:
        $i1 = lengthof $r3;

     label04:
        if $i0 >= $i1 goto label24;

     label05:
        $r5 = $r3[$i0];

     label06:
        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r5);

     label07:
        if $z0 != 0 goto label09;

     label08:
        $i0 = $i0 + 1;

        goto label03;

     label09:
        $r6 = new java.net.URL;

     label10:
        $r5 = $r3[$i0];

     label11:
        $r7 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

     label12:
        $r5 = (java.lang.String) $r7;

     label13:
        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r5);

        $r8 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>();

     label14:
        $r9 = (java.net.HttpURLConnection) $r8;

     label15:
        virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke $r9.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r9.<java.net.HttpURLConnection: void connect()>();

        $i1 = virtualinvoke $r9.<java.net.HttpURLConnection: int getResponseCode()>();

     label16:
        if $i1 != 200 goto label08;

     label17:
        $r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label18:
        $r5 = $r3[$i0];

     label19:
        $r11 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r10);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r11);

        virtualinvoke $r10.<java.io.InputStream: void close()>();

     label20:
        goto label08;

     label21:
        $r12 := @caughtexception;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        return $r2;

     label22:
        $r13 := @caughtexception;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        return $r2;

     label23:
        $r14 := @caughtexception;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

     label24:
        return $r2;

        catch java.net.MalformedURLException from label06 to label07 with label21;
        catch java.net.MalformedURLException from label11 to label12 with label21;
        catch java.net.MalformedURLException from label13 to label14 with label21;
        catch java.net.MalformedURLException from label15 to label16 with label21;
        catch java.net.MalformedURLException from label17 to label18 with label21;
        catch java.net.MalformedURLException from label19 to label20 with label21;
        catch java.io.IOException from label06 to label07 with label22;
        catch java.io.IOException from label11 to label12 with label22;
        catch java.io.IOException from label13 to label14 with label22;
        catch java.io.IOException from label15 to label16 with label22;
        catch java.io.IOException from label17 to label18 with label22;
        catch java.io.IOException from label19 to label20 with label22;
        catch java.lang.NullPointerException from label01 to label02 with label23;
        catch java.lang.NullPointerException from label03 to label04 with label23;
        catch java.lang.NullPointerException from label05 to label07 with label23;
        catch java.lang.NullPointerException from label10 to label12 with label23;
        catch java.lang.NullPointerException from label13 to label14 with label23;
        catch java.lang.NullPointerException from label15 to label16 with label23;
        catch java.lang.NullPointerException from label17 to label20 with label23;
    }

    protected org.json.JSONObject a(boolean, java.lang.String, int, java.lang.String, java.lang.String)
    {
        org.apache.http.message.BasicNameValuePair $r8;
        java.lang.Throwable $r14, $r15, $r18, $r19;
        org.apache.http.client.methods.HttpPost $r6;
        org.apache.http.params.BasicHttpParams $r5;
        org.apache.http.client.entity.UrlEncodedFormEntity $r9;
        org.apache.http.StatusLine $r11;
        java.lang.NullPointerException $r17;
        java.util.ArrayList $r7;
        org.json.JSONException $r16;
        org.json.JSONObject $r13;
        org.apache.http.client.HttpClient $r4;
        int $i0;
        java.lang.String $r1, $r2, $r3;
        com.mt.airad.r r0;
        boolean $z0;
        org.apache.http.HttpEntity $r12;
        org.apache.http.HttpResponse $r10;

        r0 := @this: com.mt.airad.r;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 := @parameter3: java.lang.String;

        $r3 := @parameter4: java.lang.String;

        if $z0 == 0 goto label05;

     label01:
        specialinvoke r0.<com.mt.airad.r: void c()>();

     label02:
        r0.<com.mt.airad.r: org.apache.http.client.HttpClient b> = null;

     label03:
        $r4 = specialinvoke r0.<com.mt.airad.r: org.apache.http.client.HttpClient b()>();

     label04:
        r0.<com.mt.airad.r: org.apache.http.client.HttpClient b> = $r4;

     label05:
        $r4 = r0.<com.mt.airad.r: org.apache.http.client.HttpClient b>;

     label06:
        if $r4 != null goto label09;

     label07:
        $r4 = specialinvoke r0.<com.mt.airad.r: org.apache.http.client.HttpClient b()>();

     label08:
        r0.<com.mt.airad.r: org.apache.http.client.HttpClient b> = $r4;

     label09:
        $r5 = new org.apache.http.params.BasicHttpParams;

     label10:
        specialinvoke $r5.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r5, $i0);

        $r1 = specialinvoke r0.<com.mt.airad.r: java.lang.String b(java.lang.String)>($r3);

     label11:
        if $r3 == null goto label34;

        if $r1 != null goto label12;

        return null;

     label12:
        $r6 = new org.apache.http.client.methods.HttpPost;

     label13:
        $r2 = specialinvoke r0.<com.mt.airad.r: java.lang.String a(java.lang.String)>($r2);

        specialinvoke $r6.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r2);

     label14:
        $r7 = new java.util.ArrayList;

     label15:
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label16:
        $r8 = new org.apache.http.message.BasicNameValuePair;

     label17:
        specialinvoke $r8.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("data", $r1);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label18:
        $r9 = new org.apache.http.client.entity.UrlEncodedFormEntity;

     label19:
        specialinvoke $r9.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>($r7, "UTF-8");

        virtualinvoke $r6.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r9);

        virtualinvoke $r6.<org.apache.http.client.methods.HttpPost: void setParams(org.apache.http.params.HttpParams)>($r5);

     label20:
        $r4 = r0.<com.mt.airad.r: org.apache.http.client.HttpClient b>;

     label21:
        $r10 = interfaceinvoke $r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r6);

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r11.<org.apache.http.StatusLine: int getStatusCode()>();

     label22:
        if $i0 != 200 goto label33;

     label23:
        $r12 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r1 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r12);

     label24:
        if $r1 == null goto label33;

        $r13 = new org.json.JSONObject;

     label25:
        $r1 = specialinvoke r0.<com.mt.airad.r: java.lang.String a(java.lang.String)>($r1);

        specialinvoke $r13.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

     label26:
        return $r13;

     label27:
        $r14 := @caughtexception;

        staticinvoke <com.mt.airad.an: void d(java.lang.String)>(".");

        return null;

     label28:
        $r15 := @caughtexception;

        staticinvoke <com.mt.airad.an: void d(java.lang.String)>("..");

        return null;

     label29:
        $r16 := @caughtexception;

        staticinvoke <com.mt.airad.an: void d(java.lang.String)>("...");

        return null;

     label30:
        $r17 := @caughtexception;

        staticinvoke <com.mt.airad.an: void d(java.lang.String)>("....");

        return null;

     label31:
        $r18 := @caughtexception;

        staticinvoke <com.mt.airad.an: void d(java.lang.String)>(".....");

        return null;

     label32:
        $r19 := @caughtexception;

        staticinvoke <com.mt.airad.an: void d(java.lang.String)>("......");

        return null;

     label33:
        $r13 = null;

        goto label26;

     label34:
        return null;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label27;
        catch org.apache.http.client.ClientProtocolException from label03 to label04 with label27;
        catch org.apache.http.client.ClientProtocolException from label07 to label08 with label27;
        catch org.apache.http.client.ClientProtocolException from label10 to label11 with label27;
        catch org.apache.http.client.ClientProtocolException from label13 to label14 with label27;
        catch org.apache.http.client.ClientProtocolException from label15 to label16 with label27;
        catch org.apache.http.client.ClientProtocolException from label17 to label18 with label27;
        catch org.apache.http.client.ClientProtocolException from label19 to label20 with label27;
        catch org.apache.http.client.ClientProtocolException from label21 to label22 with label27;
        catch org.apache.http.client.ClientProtocolException from label23 to label24 with label27;
        catch org.apache.http.client.ClientProtocolException from label25 to label26 with label27;
        catch java.io.IOException from label01 to label02 with label28;
        catch java.io.IOException from label03 to label04 with label28;
        catch java.io.IOException from label07 to label08 with label28;
        catch java.io.IOException from label10 to label11 with label28;
        catch java.io.IOException from label13 to label14 with label28;
        catch java.io.IOException from label15 to label16 with label28;
        catch java.io.IOException from label17 to label18 with label28;
        catch java.io.IOException from label19 to label20 with label28;
        catch java.io.IOException from label21 to label22 with label28;
        catch java.io.IOException from label23 to label24 with label28;
        catch java.io.IOException from label25 to label26 with label28;
        catch org.json.JSONException from label01 to label02 with label29;
        catch org.json.JSONException from label03 to label04 with label29;
        catch org.json.JSONException from label07 to label08 with label29;
        catch org.json.JSONException from label10 to label11 with label29;
        catch org.json.JSONException from label13 to label14 with label29;
        catch org.json.JSONException from label15 to label16 with label29;
        catch org.json.JSONException from label17 to label18 with label29;
        catch org.json.JSONException from label19 to label20 with label29;
        catch org.json.JSONException from label21 to label22 with label29;
        catch org.json.JSONException from label23 to label24 with label29;
        catch org.json.JSONException from label25 to label26 with label29;
        catch java.lang.NullPointerException from label01 to label06 with label30;
        catch java.lang.NullPointerException from label07 to label09 with label30;
        catch java.lang.NullPointerException from label10 to label11 with label30;
        catch java.lang.NullPointerException from label13 to label14 with label30;
        catch java.lang.NullPointerException from label15 to label16 with label30;
        catch java.lang.NullPointerException from label17 to label18 with label30;
        catch java.lang.NullPointerException from label19 to label22 with label30;
        catch java.lang.NullPointerException from label23 to label24 with label30;
        catch java.lang.NullPointerException from label25 to label26 with label30;
        catch android.net.ParseException from label01 to label02 with label31;
        catch android.net.ParseException from label03 to label04 with label31;
        catch android.net.ParseException from label07 to label08 with label31;
        catch android.net.ParseException from label10 to label11 with label31;
        catch android.net.ParseException from label13 to label14 with label31;
        catch android.net.ParseException from label15 to label16 with label31;
        catch android.net.ParseException from label17 to label18 with label31;
        catch android.net.ParseException from label19 to label20 with label31;
        catch android.net.ParseException from label21 to label22 with label31;
        catch android.net.ParseException from label23 to label24 with label31;
        catch android.net.ParseException from label25 to label26 with label31;
        catch java.lang.IllegalStateException from label01 to label02 with label32;
        catch java.lang.IllegalStateException from label03 to label04 with label32;
        catch java.lang.IllegalStateException from label07 to label08 with label32;
        catch java.lang.IllegalStateException from label10 to label11 with label32;
        catch java.lang.IllegalStateException from label13 to label14 with label32;
        catch java.lang.IllegalStateException from label15 to label16 with label32;
        catch java.lang.IllegalStateException from label17 to label18 with label32;
        catch java.lang.IllegalStateException from label19 to label20 with label32;
        catch java.lang.IllegalStateException from label21 to label22 with label32;
        catch java.lang.IllegalStateException from label23 to label24 with label32;
        catch java.lang.IllegalStateException from label25 to label26 with label32;
    }
}
