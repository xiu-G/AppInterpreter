public class proguard.classfile.visitor.VariableClassVisitor extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor
{
    private proguard.classfile.visitor.ClassVisitor classVisitor;

    public void <init>()
    {
        proguard.classfile.visitor.VariableClassVisitor r0;

        r0 := @this: proguard.classfile.visitor.VariableClassVisitor;

        specialinvoke r0.<proguard.classfile.visitor.VariableClassVisitor: void <init>(proguard.classfile.visitor.ClassVisitor)>(null);

        return;
    }

    public void <init>(proguard.classfile.visitor.ClassVisitor)
    {
        proguard.classfile.visitor.VariableClassVisitor r0;
        proguard.classfile.visitor.ClassVisitor $r1;

        r0 := @this: proguard.classfile.visitor.VariableClassVisitor;

        $r1 := @parameter0: proguard.classfile.visitor.ClassVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.visitor.VariableClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor> = $r1;

        return;
    }

    public proguard.classfile.visitor.ClassVisitor getClassVisitor()
    {
        proguard.classfile.visitor.VariableClassVisitor r0;
        proguard.classfile.visitor.ClassVisitor r1;

        r0 := @this: proguard.classfile.visitor.VariableClassVisitor;

        r1 = r0.<proguard.classfile.visitor.VariableClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor>;

        return r1;
    }

    public void setClassVisitor(proguard.classfile.visitor.ClassVisitor)
    {
        proguard.classfile.visitor.VariableClassVisitor r0;
        proguard.classfile.visitor.ClassVisitor $r1;

        r0 := @this: proguard.classfile.visitor.VariableClassVisitor;

        $r1 := @parameter0: proguard.classfile.visitor.ClassVisitor;

        r0.<proguard.classfile.visitor.VariableClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor> = $r1;

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.visitor.VariableClassVisitor r0;
        proguard.classfile.visitor.ClassVisitor $r2;

        r0 := @this: proguard.classfile.visitor.VariableClassVisitor;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 = r0.<proguard.classfile.visitor.VariableClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor>;

        if $r2 == null goto label1;

        $r2 = r0.<proguard.classfile.visitor.VariableClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor>;

        interfaceinvoke $r2.<proguard.classfile.visitor.ClassVisitor: void visitLibraryClass(proguard.classfile.LibraryClass)>($r1);

     label1:
        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.visitor.VariableClassVisitor r0;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.visitor.ClassVisitor $r2;

        r0 := @this: proguard.classfile.visitor.VariableClassVisitor;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = r0.<proguard.classfile.visitor.VariableClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor>;

        if $r2 == null goto label1;

        $r2 = r0.<proguard.classfile.visitor.VariableClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor>;

        interfaceinvoke $r2.<proguard.classfile.visitor.ClassVisitor: void visitProgramClass(proguard.classfile.ProgramClass)>($r1);

     label1:
        return;
    }
}
