public final class v$b extends v$a
{
    static final boolean g;
    private static final byte[] h;
    private static final byte[] i;
    public int c;
    public final boolean d;
    public final boolean e;
    public final boolean f;
    private final byte[] j;
    private int k;
    private final byte[] l;

    static void <clinit>()
    {
        byte[] $r1;
        java.lang.Class $r0;
        boolean $z0;

        $r0 = class "Lv;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <v$b: boolean g> = $z0;

        $r1 = newarray (byte)[64];

        $r1[0] = 65;

        $r1[1] = 66;

        $r1[2] = 67;

        $r1[3] = 68;

        $r1[4] = 69;

        $r1[5] = 70;

        $r1[6] = 71;

        $r1[7] = 72;

        $r1[8] = 73;

        $r1[9] = 74;

        $r1[10] = 75;

        $r1[11] = 76;

        $r1[12] = 77;

        $r1[13] = 78;

        $r1[14] = 79;

        $r1[15] = 80;

        $r1[16] = 81;

        $r1[17] = 82;

        $r1[18] = 83;

        $r1[19] = 84;

        $r1[20] = 85;

        $r1[21] = 86;

        $r1[22] = 87;

        $r1[23] = 88;

        $r1[24] = 89;

        $r1[25] = 90;

        $r1[26] = 97;

        $r1[27] = 98;

        $r1[28] = 99;

        $r1[29] = 100;

        $r1[30] = 101;

        $r1[31] = 102;

        $r1[32] = 103;

        $r1[33] = 104;

        $r1[34] = 105;

        $r1[35] = 106;

        $r1[36] = 107;

        $r1[37] = 108;

        $r1[38] = 109;

        $r1[39] = 110;

        $r1[40] = 111;

        $r1[41] = 112;

        $r1[42] = 113;

        $r1[43] = 114;

        $r1[44] = 115;

        $r1[45] = 116;

        $r1[46] = 117;

        $r1[47] = 118;

        $r1[48] = 119;

        $r1[49] = 120;

        $r1[50] = 121;

        $r1[51] = 122;

        $r1[52] = 48;

        $r1[53] = 49;

        $r1[54] = 50;

        $r1[55] = 51;

        $r1[56] = 52;

        $r1[57] = 53;

        $r1[58] = 54;

        $r1[59] = 55;

        $r1[60] = 56;

        $r1[61] = 57;

        $r1[62] = 43;

        $r1[63] = 47;

        <v$b: byte[] h> = $r1;

        $r1 = newarray (byte)[64];

        $r1[0] = 65;

        $r1[1] = 66;

        $r1[2] = 67;

        $r1[3] = 68;

        $r1[4] = 69;

        $r1[5] = 70;

        $r1[6] = 71;

        $r1[7] = 72;

        $r1[8] = 73;

        $r1[9] = 74;

        $r1[10] = 75;

        $r1[11] = 76;

        $r1[12] = 77;

        $r1[13] = 78;

        $r1[14] = 79;

        $r1[15] = 80;

        $r1[16] = 81;

        $r1[17] = 82;

        $r1[18] = 83;

        $r1[19] = 84;

        $r1[20] = 85;

        $r1[21] = 86;

        $r1[22] = 87;

        $r1[23] = 88;

        $r1[24] = 89;

        $r1[25] = 90;

        $r1[26] = 97;

        $r1[27] = 98;

        $r1[28] = 99;

        $r1[29] = 100;

        $r1[30] = 101;

        $r1[31] = 102;

        $r1[32] = 103;

        $r1[33] = 104;

        $r1[34] = 105;

        $r1[35] = 106;

        $r1[36] = 107;

        $r1[37] = 108;

        $r1[38] = 109;

        $r1[39] = 110;

        $r1[40] = 111;

        $r1[41] = 112;

        $r1[42] = 113;

        $r1[43] = 114;

        $r1[44] = 115;

        $r1[45] = 116;

        $r1[46] = 117;

        $r1[47] = 118;

        $r1[48] = 119;

        $r1[49] = 120;

        $r1[50] = 121;

        $r1[51] = 122;

        $r1[52] = 48;

        $r1[53] = 49;

        $r1[54] = 50;

        $r1[55] = 51;

        $r1[56] = 52;

        $r1[57] = 53;

        $r1[58] = 54;

        $r1[59] = 55;

        $r1[60] = 56;

        $r1[61] = 57;

        $r1[62] = 45;

        $r1[63] = 95;

        <v$b: byte[] i> = $r1;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void <init>()
    {
        byte[] $r1;
        byte $b0;
        v$b r0;
        boolean $z0;

        r0 := @this: v$b;

        specialinvoke r0.<v$a: void <init>()>();

        r0.<v$b: byte[] a> = null;

        r0.<v$b: boolean d> = 0;

        r0.<v$b: boolean e> = 0;

        r0.<v$b: boolean f> = 0;

        $r1 = <v$b: byte[] i>;

        r0.<v$b: byte[] l> = $r1;

        $r1 = newarray (byte)[2];

        r0.<v$b: byte[] j> = $r1;

        r0.<v$b: int c> = 0;

        $z0 = r0.<v$b: boolean e>;

        if $z0 == 0 goto label2;

        $b0 = 19;

     label1:
        r0.<v$b: int k> = $b0;

        return;

     label2:
        $b0 = -1;

        goto label1;
    }

    public final boolean a(byte[], int)
    {
        byte[] $r1, $r2, $r3, $r4;
        java.lang.AssertionError $r5;
        short $s8;
        byte $b7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        v$b r0;

        r0 := @this: v$b;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 = r0.<v$b: byte[] l>;

        $r3 = r0.<v$b: byte[] a>;

        $i2 = 0;

        $i3 = r0.<v$b: int k>;

        $i4 = 0;

        $i5 = -1;

        $i6 = r0.<v$b: int c>;

        lookupswitch($i6)
        {
            case 0: goto label05;
            case 1: goto label06;
            case 2: goto label07;
            default: goto label01;
        };

     label01:
        if $i5 == -1 goto label03;

        $i6 = $i5 >> 18;

        $i6 = $i6 & 63;

        $b7 = $r2[$i6];

        $r3[0] = $b7;

        $i6 = $i5 >> 12;

        $i6 = $i6 & 63;

        $b7 = $r2[$i6];

        $r3[1] = $b7;

        $i6 = $i5 >> 6;

        $i6 = $i6 & 63;

        $b7 = $r2[$i6];

        $r3[2] = $b7;

        $i2 = 4;

        $i5 = $i5 & 63;

        $b7 = $r2[$i5];

        $r3[3] = $b7;

        $i3 = $i3 + -1;

        if $i3 != 0 goto label03;

        $z0 = r0.<v$b: boolean f>;

        if $z0 == 0 goto label02;

        $i2 = 5;

        $r3[4] = 13;

     label02:
        $r3[$i2] = 10;

        $i2 = $i2 + 1;

        $i3 = 19;

     label03:
        $i5 = $i4 + 3;

        if $i5 > $i0 goto label08;

        $b7 = $r1[$i4];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i5 = (int) $s8;

        $i5 = $i5 << 16;

        $i6 = $i4 + 1;

        $b7 = $r1[$i6];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i6 = (int) $s8;

        $i6 = $i6 << 8;

        $i5 = $i5 | $i6;

        $i6 = $i4 + 2;

        $b7 = $r1[$i6];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i6 = (int) $s8;

        $i5 = $i5 | $i6;

        $i6 = $i5 >> 18;

        $i6 = $i6 & 63;

        $b7 = $r2[$i6];

        $r3[$i2] = $b7;

        $i6 = $i2 + 1;

        $i1 = $i5 >> 12;

        $i1 = $i1 & 63;

        $b7 = $r2[$i1];

        $r3[$i6] = $b7;

        $i6 = $i2 + 2;

        $i1 = $i5 >> 6;

        $i1 = $i1 & 63;

        $b7 = $r2[$i1];

        $r3[$i6] = $b7;

        $i6 = $i2 + 3;

        $i5 = $i5 & 63;

        $b7 = $r2[$i5];

        $r3[$i6] = $b7;

        $i4 = $i4 + 3;

        $i2 = $i2 + 4;

        $i3 = $i3 + -1;

        if $i3 != 0 goto label03;

        $z0 = r0.<v$b: boolean f>;

        if $z0 == 0 goto label27;

        $i3 = $i2 + 1;

        $r3[$i2] = 13;

     label04:
        $i2 = $i3 + 1;

        $r3[$i3] = 10;

        $i3 = 19;

        goto label03;

     label05:
        $i4 = 0;

        $i5 = -1;

        goto label01;

     label06:
        if 2 > $i0 goto label01;

        $r4 = r0.<v$b: byte[] j>;

        $b7 = $r4[0];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i4 = (int) $s8;

        $i5 = $i4 << 16;

        $b7 = $r1[0];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i6 = (int) $s8;

        $i6 = $i6 << 8;

        $i5 = $i5 | $i6;

        $b7 = $r1[1];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i6 = (int) $s8;

        r0.<v$b: int c> = 0;

        $i4 = 2;

        $i5 = $i5 | $i6;

        goto label01;

     label07:
        if $i0 <= 0 goto label01;

        $r4 = r0.<v$b: byte[] j>;

        $b7 = $r4[0];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i4 = (int) $s8;

        $i4 = $i4 << 16;

        $r4 = r0.<v$b: byte[] j>;

        $b7 = $r4[1];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i5 = (int) $s8;

        $i5 = $i5 << 8;

        $i5 = $i4 | $i5;

        $i4 = 1;

        $b7 = $r1[0];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i6 = (int) $s8;

        $i5 = $i5 | $i6;

        r0.<v$b: int c> = 0;

        goto label01;

     label08:
        $i5 = r0.<v$b: int c>;

        $i5 = $i4 - $i5;

        $i6 = $i0 - 1;

        if $i5 != $i6 goto label14;

        $i5 = r0.<v$b: int c>;

        if $i5 <= 0 goto label13;

        $r1 = r0.<v$b: byte[] j>;

        $i6 = 1;

        $b7 = $r1[0];

     label09:
        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i5 = (int) $s8;

        $i5 = $i5 << 4;

        $i1 = r0.<v$b: int c>;

        $i6 = $i1 - $i6;

        r0.<v$b: int c> = $i6;

        $i6 = $i2 + 1;

        $i1 = $i5 >> 6;

        $i1 = $i1 & 63;

        $b7 = $r2[$i1];

        $r3[$i2] = $b7;

        $i2 = $i6 + 1;

        $i5 = $i5 & 63;

        $b7 = $r2[$i5];

        $r3[$i6] = $b7;

        $z0 = r0.<v$b: boolean d>;

        if $z0 == 0 goto label10;

        $i5 = $i2 + 1;

        $r3[$i2] = 61;

        $r3[$i5] = 61;

        $i2 = $i5 + 1;

     label10:
        $z0 = r0.<v$b: boolean e>;

        if $z0 == 0 goto label12;

        $z0 = r0.<v$b: boolean f>;

        if $z0 == 0 goto label11;

        $r3[$i2] = 13;

        $i2 = $i2 + 1;

     label11:
        $r3[$i2] = 10;

        $i2 = $i2 + 1;

     label12:
        $z0 = <v$b: boolean g>;

        if $z0 != 0 goto label23;

        $i5 = r0.<v$b: int c>;

        if $i5 == 0 goto label23;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label13:
        $b7 = $r1[$i4];

        $i6 = 0;

        $i4 = $i4 + 1;

        goto label09;

     label14:
        $i5 = r0.<v$b: int c>;

        $i5 = $i4 - $i5;

        $i6 = $i0 - 2;

        if $i5 != $i6 goto label21;

        $i5 = r0.<v$b: int c>;

        if $i5 <= 1 goto label19;

        $r4 = r0.<v$b: byte[] j>;

        $i6 = 1;

        $b7 = $r4[0];

     label15:
        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i5 = (int) $s8;

        $i5 = $i5 << 10;

        $i1 = r0.<v$b: int c>;

        if $i1 <= 0 goto label20;

        $r1 = r0.<v$b: byte[] j>;

        $b7 = $r1[$i6];

        $i6 = $i6 + 1;

     label16:
        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i1 = (int) $s8;

        $i1 = $i1 << 2;

        $i5 = $i5 | $i1;

        $i1 = r0.<v$b: int c>;

        $i6 = $i1 - $i6;

        r0.<v$b: int c> = $i6;

        $i6 = $i2 + 1;

        $i1 = $i5 >> 12;

        $i1 = $i1 & 63;

        $b7 = $r2[$i1];

        $r3[$i2] = $b7;

        $i2 = $i6 + 1;

        $i1 = $i5 >> 6;

        $i1 = $i1 & 63;

        $b7 = $r2[$i1];

        $r3[$i6] = $b7;

        $i6 = $i2 + 1;

        $i5 = $i5 & 63;

        $b7 = $r2[$i5];

        $r3[$i2] = $b7;

        $z0 = r0.<v$b: boolean d>;

        if $z0 == 0 goto label26;

        $i2 = $i6 + 1;

        $r3[$i6] = 61;

     label17:
        $z0 = r0.<v$b: boolean e>;

        if $z0 == 0 goto label12;

        $z0 = r0.<v$b: boolean f>;

        if $z0 == 0 goto label18;

        $r3[$i2] = 13;

        $i2 = $i2 + 1;

     label18:
        $r3[$i2] = 10;

        $i2 = $i2 + 1;

        goto label12;

     label19:
        $b7 = $r1[$i4];

        $i6 = 0;

        $i4 = $i4 + 1;

        goto label15;

     label20:
        $b7 = $r1[$i4];

        $i4 = $i4 + 1;

        goto label16;

     label21:
        $z0 = r0.<v$b: boolean e>;

        if $z0 == 0 goto label12;

        if $i2 <= 0 goto label12;

        if $i3 == 19 goto label12;

        $z0 = r0.<v$b: boolean f>;

        if $z0 == 0 goto label25;

        $i5 = $i2 + 1;

        $r3[$i2] = 13;

     label22:
        $i2 = $i5 + 1;

        $r3[$i5] = 10;

        goto label12;

     label23:
        $z0 = <v$b: boolean g>;

        if $z0 != 0 goto label24;

        if $i4 == $i0 goto label24;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label24:
        r0.<v$b: int b> = $i2;

        r0.<v$b: int k> = $i3;

        return 1;

     label25:
        $i5 = $i2;

        goto label22;

     label26:
        $i2 = $i6;

        goto label17;

     label27:
        $i3 = $i2;

        goto label04;
    }
}
