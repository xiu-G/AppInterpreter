public class cn.ffcs.lib.bitmapfun.ImageFetcher extends cn.ffcs.lib.bitmapfun.ImageResizer
{
    public static final java.lang.String HTTP_CACHE_DIR;
    private static final int HTTP_CACHE_SIZE;
    private static final java.lang.String TAG;

    public void <init>(android.content.Context, int)
    {
        int $i0;
        cn.ffcs.lib.bitmapfun.ImageFetcher r0;
        android.content.Context $r1;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageFetcher;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageResizer: void <init>(android.content.Context,int)>($r1, $i0);

        specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageFetcher: void init(android.content.Context)>($r1);

        return;
    }

    public void <init>(android.content.Context, int, int)
    {
        cn.ffcs.lib.bitmapfun.ImageFetcher r0;
        android.content.Context $r1;
        int $i0, $i1;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageFetcher;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageResizer: void <init>(android.content.Context,int,int)>($r1, $i0, $i1);

        specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageFetcher: void init(android.content.Context)>($r1);

        return;
    }

    private void checkConnection(android.content.Context)
    {
        android.net.ConnectivityManager r3;
        cn.ffcs.lib.bitmapfun.ImageFetcher r0;
        android.content.Context $r1;
        android.net.NetworkInfo $r4;
        java.lang.Object $r2;
        java.lang.String $r6;
        boolean $z0;
        android.content.res.Resources $r5;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageFetcher;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r3 = (android.net.ConnectivityManager) $r2;

        $r4 = virtualinvoke r3.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r4 == null goto label1;

        $z0 = virtualinvoke $r4.<android.net.NetworkInfo: boolean isConnectedOrConnecting()>();

        if $z0 != 0 goto label2;

     label1:
        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131230830);

        staticinvoke <cn.ffcs.lib.utils.ToastUtils: void showLong(android.content.Context,java.lang.CharSequence)>($r1, $r6);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImageFetcher", "checkConnection - no connection found");

     label2:
        return;
    }

    public static java.io.File downloadBitmap(android.content.Context, java.lang.String)
    {
        java.net.HttpURLConnection r8, $r11;
        java.lang.Throwable r14, $r16, r17, r18, r19;
        android.content.Context $r0;
        java.io.BufferedInputStream r2, $r22;
        java.net.URL r4, $r21;
        java.io.BufferedOutputStream r3, r9, $r24;
        java.net.URLConnection $r10;
        int $i0, $i1;
        java.lang.String $r1, $r7;
        cn.ffcs.lib.bitmapfun.DiskLruCache $r6;
        boolean $z0;
        java.io.FileOutputStream $r13, $r23;
        java.io.File $r5, $r20;
        java.lang.StringBuilder $r15, $r25;
        java.io.InputStream $r12;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r5 = staticinvoke <cn.ffcs.lib.bitmapfun.DiskLruCache: java.io.File getDiskCacheDir(android.content.Context,java.lang.String)>($r0, "http");

        $r6 = staticinvoke <cn.ffcs.lib.bitmapfun.DiskLruCache: cn.ffcs.lib.bitmapfun.DiskLruCache openCache(android.content.Context,java.io.File,long)>($r0, $r5, 10485760L);

        $r20 = new java.io.File;

        $r5 = $r20;

        $r7 = virtualinvoke $r6.<cn.ffcs.lib.bitmapfun.DiskLruCache: java.lang.String createFilePath(java.lang.String)>($r1);

        specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>($r7);

        $z0 = virtualinvoke $r6.<cn.ffcs.lib.bitmapfun.DiskLruCache: boolean containsKey(java.lang.String)>($r1);

        if $z0 == 0 goto label01;

        return $r5;

     label01:
        staticinvoke <cn.ffcs.lib.bitmapfun.Utils: void disableConnectionReuseIfNecessary()>();

        r8 = null;

        r9 = null;

     label02:
        $r21 = new java.net.URL;

     label03:
        r4 = $r21;

     label04:
        specialinvoke $r21.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r10 = virtualinvoke r4.<java.net.URL: java.net.URLConnection openConnection()>();

     label05:
        $r11 = (java.net.HttpURLConnection) $r10;

     label06:
        r8 = $r11;

     label07:
        $r22 = new java.io.BufferedInputStream;

     label08:
        r2 = $r22;

     label09:
        $r12 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r22.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r12, 8192);

     label10:
        $r24 = new java.io.BufferedOutputStream;

     label11:
        r3 = $r24;

     label12:
        $r23 = new java.io.FileOutputStream;

     label13:
        $r13 = $r23;

     label14:
        specialinvoke $r23.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

        specialinvoke $r24.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r13, 8192);

     label15:
        $i0 = virtualinvoke r2.<java.io.InputStream: int read()>();

     label16:
        $i1 = -1;

        if $i0 == $i1 goto label34;

     label17:
        virtualinvoke r3.<java.io.BufferedOutputStream: void write(int)>($i0);

     label18:
        goto label15;

     label19:
        r14 := @caughtexception;

        r9 = r3;

     label20:
        $r25 = new java.lang.StringBuilder;

     label21:
        $r15 = $r25;

     label22:
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in downloadBitmap - ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImageFetcher", $r1);

     label23:
        if r8 == null goto label24;

        virtualinvoke r8.<java.net.HttpURLConnection: void disconnect()>();

     label24:
        if r9 == null goto label26;

     label25:
        virtualinvoke r9.<java.io.BufferedOutputStream: void close()>();

     label26:
        return null;

     label27:
        $r16 := @caughtexception;

     label28:
        if r8 == null goto label29;

        virtualinvoke r8.<java.net.HttpURLConnection: void disconnect()>();

     label29:
        if r9 == null goto label31;

     label30:
        virtualinvoke r9.<java.io.BufferedOutputStream: void close()>();

     label31:
        throw $r16;

     label32:
        r17 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in downloadBitmap - ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImageFetcher", $r1);

        goto label31;

     label33:
        r18 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in downloadBitmap - ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImageFetcher", $r1);

        goto label26;

     label34:
        if $r11 == null goto label35;

        virtualinvoke $r11.<java.net.HttpURLConnection: void disconnect()>();

     label35:
        if r3 == null goto label41;

     label36:
        virtualinvoke r3.<java.io.BufferedOutputStream: void close()>();

     label37:
        return $r5;

     label38:
        r19 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in downloadBitmap - ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImageFetcher", $r1);

        return $r5;

     label39:
        $r16 := @caughtexception;

        r9 = r3;

        goto label28;

     label40:
        r14 := @caughtexception;

        goto label20;

     label41:
        return $r5;

        catch java.io.IOException from label04 to label05 with label40;
        catch java.io.IOException from label09 to label10 with label40;
        catch java.io.IOException from label14 to label15 with label40;
        catch java.lang.Throwable from label02 to label03 with label27;
        catch java.lang.Throwable from label04 to label06 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label09 to label11 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.io.IOException from label15 to label16 with label19;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label15 to label16 with label39;
        catch java.lang.Throwable from label17 to label18 with label39;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.io.IOException from label25 to label26 with label33;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label36 to label37 with label38;
    }

    private void init(android.content.Context)
    {
        cn.ffcs.lib.bitmapfun.ImageFetcher r0;
        android.content.Context $r1;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageFetcher;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageFetcher: void checkConnection(android.content.Context)>($r1);

        return;
    }

    private android.graphics.Bitmap processBitmap(java.lang.String)
    {
        cn.ffcs.lib.bitmapfun.ImageFetcher r0;
        android.content.Context $r2;
        android.graphics.Bitmap $r4;
        int $i0, $i1;
        java.lang.String $r1;
        java.io.File $r3;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageFetcher;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.ffcs.lib.bitmapfun.ImageFetcher: android.content.Context mContext>;

        $r3 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageFetcher: java.io.File downloadBitmap(android.content.Context,java.lang.String)>($r2, $r1);

        if $r3 == null goto label1;

        $r1 = virtualinvoke $r3.<java.io.File: java.lang.String toString()>();

        $i0 = r0.<cn.ffcs.lib.bitmapfun.ImageFetcher: int mImageWidth>;

        $i1 = r0.<cn.ffcs.lib.bitmapfun.ImageFetcher: int mImageHeight>;

        $r4 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageFetcher: android.graphics.Bitmap decodeSampledBitmapFromFile(java.lang.String,int,int)>($r1, $i0, $i1);

        return $r4;

     label1:
        return null;
    }

    protected android.graphics.Bitmap processBitmap(java.lang.Object)
    {
        cn.ffcs.lib.bitmapfun.ImageFetcher r0;
        android.graphics.Bitmap $r3;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageFetcher;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r3 = specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageFetcher: android.graphics.Bitmap processBitmap(java.lang.String)>($r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <cn.ffcs.lib.bitmapfun.ImageFetcher: java.lang.String TAG> = "ImageFetcher";

        <cn.ffcs.lib.bitmapfun.ImageFetcher: int HTTP_CACHE_SIZE> = 10485760;

        <cn.ffcs.lib.bitmapfun.ImageFetcher: java.lang.String HTTP_CACHE_DIR> = "http";

        return;
    }
}
