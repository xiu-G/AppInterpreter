public class hw.ats.common.ds.RespParser extends java.lang.Object
{
    private static final java.lang.String TAG;
    public int errorCode;
    public java.lang.String errorMsg;

    public void <init>()
    {
        hw.ats.common.ds.RespParser r0;

        r0 := @this: hw.ats.common.ds.RespParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<hw.ats.common.ds.RespParser: int errorCode> = -1;

        r0.<hw.ats.common.ds.RespParser: java.lang.String errorMsg> = null;

        return;
    }

    private int textNodeIntValue(org.w3c.dom.Node)
    {
        org.w3c.dom.Node $r1;
        int $i0;
        java.lang.String $r2;
        hw.ats.common.ds.RespParser r0;

        r0 := @this: hw.ats.common.ds.RespParser;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 = specialinvoke r0.<hw.ats.common.ds.RespParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r1);

        $i0 = staticinvoke <com.humanwares.util.StringUtil: int intValue(java.lang.String)>($r2);

        return $i0;
    }

    private java.lang.String textNodeValue(org.w3c.dom.Node)
    {
        java.lang.String $r2;
        hw.ats.common.ds.RespParser r0;
        org.w3c.dom.Node $r1;

        r0 := @this: hw.ats.common.ds.RespParser;

        $r1 := @parameter0: org.w3c.dom.Node;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r1 == null goto label2;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r2;

     label2:
        return null;
    }

    public void parse(java.lang.String)
    {
        byte[] $r5;
        java.io.ByteArrayInputStream r2, $r13;
        org.w3c.dom.Document $r6;
        org.w3c.dom.Node $r9, $r10;
        int $i0, $i1;
        java.lang.String $r1, $r11;
        boolean $z0;
        org.w3c.dom.NodeList $r8;
        java.lang.RuntimeException $r14;
        hw.ats.common.ds.RespParser r0;
        java.lang.Exception $r12;
        org.w3c.dom.Element $r7;
        javax.xml.parsers.DocumentBuilder $r4;
        javax.xml.parsers.DocumentBuilderFactory $r3;

        r0 := @this: hw.ats.common.ds.RespParser;

        $r1 := @parameter0: java.lang.String;

        r0.<hw.ats.common.ds.RespParser: int errorCode> = -1;

        r0.<hw.ats.common.ds.RespParser: java.lang.String errorMsg> = null;

        $r3 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label01:
        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label02:
        $r13 = new java.io.ByteArrayInputStream;

        r2 = $r13;

     label03:
        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        specialinvoke $r13.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r6 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r2);

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $i0 = interfaceinvoke $r8.<org.w3c.dom.NodeList: int getLength()>();

     label04:
        if $i0 != 0 goto label05;

        return;

     label05:
        $i0 = 0;

     label06:
        $i1 = interfaceinvoke $r8.<org.w3c.dom.NodeList: int getLength()>();

     label07:
        if $i0 >= $i1 goto label23;

     label08:
        $r9 = interfaceinvoke $r8.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

     label09:
        if $r9 != null goto label11;

     label10:
        $i0 = $i0 + 1;

        goto label06;

     label11:
        $r10 = interfaceinvoke $r8.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

        $r1 = interfaceinvoke $r10.<org.w3c.dom.Node: java.lang.String getNodeName()>();

     label12:
        $r11 = "error";

     label13:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label14:
        if $z0 == 0 goto label18;

     label15:
        $i1 = specialinvoke r0.<hw.ats.common.ds.RespParser: int textNodeIntValue(org.w3c.dom.Node)>($r9);

        r0.<hw.ats.common.ds.RespParser: int errorCode> = $i1;

     label16:
        goto label10;

     label17:
        $r12 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r14;

     label18:
        $r11 = "description";

     label19:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label20:
        if $z0 == 0 goto label10;

     label21:
        interfaceinvoke $r9.<org.w3c.dom.Node: void normalize()>();

        $r1 = specialinvoke r0.<hw.ats.common.ds.RespParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r9);

        r0.<hw.ats.common.ds.RespParser: java.lang.String errorMsg> = $r1;

     label22:
        goto label10;

     label23:
        return;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label06 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label19 to label20 with label17;
        catch java.lang.Exception from label21 to label22 with label17;
    }

    public static void <clinit>()
    {
        <hw.ats.common.ds.RespParser: java.lang.String TAG> = "RespParser";

        return;
    }
}
