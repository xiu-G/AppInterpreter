public class com.yang.longrubblishclear.util.ProcessMemoryUtil extends java.lang.Object
{
    private static final int INDEX_CPU;
    private static final int INDEX_FIRST;
    private static final int INDEX_NAME;
    private static final int INDEX_PCY;
    private static final int INDEX_PID;
    private static final int INDEX_RSS;
    private static final int INDEX_STAT;
    private static final int INDEX_THR;
    private static final int INDEX_UID;
    private static final int INDEX_VSS;
    private static final int Length_ProcStat;
    private java.util.List PMUList;

    public void <init>()
    {
        com.yang.longrubblishclear.util.ProcessMemoryUtil r0;

        r0 := @this: com.yang.longrubblishclear.util.ProcessMemoryUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList> = null;

        return;
    }

    private java.lang.String getProcessRunningInfo()
    {
        java.lang.Throwable r3;
        java.lang.String[] r1;
        java.io.IOException $r8;
        com.yang.longrubblishclear.util.ProcessMemoryUtil r0;
        com.yang.longrubblishclear.util.CMDExecute r2, $r6;
        java.lang.StringBuilder $r5, $r7;
        java.lang.String $r4;

        r0 := @this: com.yang.longrubblishclear.util.ProcessMemoryUtil;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("fetch_process_info", "start. . . . ");

        $r6 = new com.yang.longrubblishclear.util.CMDExecute;

        r2 = $r6;

        specialinvoke $r6.<com.yang.longrubblishclear.util.CMDExecute: void <init>()>();

        r1 = newarray (java.lang.String)[3];

        r1[0] = "/system/bin/top";

        r1[1] = "-n";

        r1[2] = "1";

     label1:
        $r4 = virtualinvoke r2.<com.yang.longrubblishclear.util.CMDExecute: java.lang.String run(java.lang.String[],java.lang.String)>(r1, "/system/bin/");

     label2:
        return $r4;

     label3:
        r3 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("ex=");

        $r8 = (java.io.IOException) r3;

        $r4 = virtualinvoke $r8.<java.io.IOException: java.lang.String toString()>();

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("fetch_process_info", $r4);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.String getProcessRunningInfoPS()
    {
        java.lang.Throwable r3;
        java.lang.String[] r1;
        java.io.IOException $r8;
        com.yang.longrubblishclear.util.ProcessMemoryUtil r0;
        com.yang.longrubblishclear.util.CMDExecute r2, $r6;
        java.lang.StringBuilder $r5, $r7;
        java.lang.String $r4;

        r0 := @this: com.yang.longrubblishclear.util.ProcessMemoryUtil;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("fetch_process_info", "start. . . . ");

        $r6 = new com.yang.longrubblishclear.util.CMDExecute;

        r2 = $r6;

        specialinvoke $r6.<com.yang.longrubblishclear.util.CMDExecute: void <init>()>();

        r1 = newarray (java.lang.String)[1];

        r1[0] = "/system/bin/ps";

     label1:
        $r4 = virtualinvoke r2.<com.yang.longrubblishclear.util.CMDExecute: java.lang.String run(java.lang.String[],java.lang.String)>(r1, "/system/bin/");

     label2:
        return $r4;

     label3:
        r3 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("ex=");

        $r8 = (java.io.IOException) r3;

        $r4 = virtualinvoke $r8.<java.io.IOException: java.lang.String toString()>();

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("fetch_process_info", $r4);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private int parseProcessRunningInfo(java.lang.String)
    {
        java.lang.String[] $r2, $r4;
        com.yang.longrubblishclear.util.ProcessMemoryUtil r0;
        java.util.List $r3;
        int i0, $i1, $i2;
        java.lang.String $r1;
        boolean z0;

        r0 := @this: com.yang.longrubblishclear.util.ProcessMemoryUtil;

        $r1 := @parameter0: java.lang.String;

        z0 = 0;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("[\n]+");

        i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if i0 < $i1 goto label2;

        $r3 = r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        return i0;

     label2:
        $r1 = $r2[i0];

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PID", $r1);

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("PID");

        $i2 = -1;

        if $i1 != $i2 goto label4;

        if z0 == 0 goto label3;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("[ ]+");

        $i1 = lengthof $r4;

        if $i1 != 9 goto label3;

        $r3 = r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        z0 = 1;

        goto label3;
    }

    private int parseProcessRunningInfoPS(java.lang.String)
    {
        java.lang.String[] $r2, $r4;
        com.yang.longrubblishclear.util.ProcessMemoryUtil r0;
        java.util.List $r3;
        int i0, $i1;
        java.lang.String $r1;
        boolean z0;

        r0 := @this: com.yang.longrubblishclear.util.ProcessMemoryUtil;

        $r1 := @parameter0: java.lang.String;

        z0 = 0;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("[\n]+");

        i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if i0 < $i1 goto label2;

        $r3 = r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        return i0;

     label2:
        $r1 = $r2[i0];

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PID", $r1);

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("USER");

        if $i1 != -1 goto label4;

        if z0 == 0 goto label3;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("[ ]+");

        $i1 = lengthof $r4;

        if $i1 != 9 goto label3;

        $r3 = r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        z0 = 1;

        goto label3;
    }

    public java.util.List getMemInfoByName(java.lang.String)
    {
        java.util.Iterator $r3;
        java.lang.String[] r5;
        java.util.ArrayList r7;
        com.yang.longrubblishclear.util.ProcessMemoryUtil r0;
        java.util.List $r2;
        java.lang.Object $r4;
        java.lang.String $r1, r6;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ProcessMemoryUtil;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String[]) $r4;

        r6 = r5[8];

        if r6 == null goto label1;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>(2);

        $r1 = r5[1];

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r1 = r5[5];

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return r7;
    }

    public long getMemInfoByNamePS(java.lang.String)
    {
        java.util.Iterator $r3;
        java.lang.String[] r5;
        long $l0;
        com.yang.longrubblishclear.util.ProcessMemoryUtil r0;
        java.util.List $r2;
        java.lang.Object $r4;
        java.lang.String $r1, r6;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ProcessMemoryUtil;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return 0L;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String[]) $r4;

        r6 = r5[8];

        if r6 == null goto label1;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r1 = r5[4];

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        $l0 = $l0 * 1024L;

        $l0 = $l0 / 10L;

        return $l0;
    }

    public java.util.List getMemInfoByPid(int)
    {
        java.lang.String[] r4;
        java.util.ArrayList r1;
        com.yang.longrubblishclear.util.ProcessMemoryUtil r0;
        java.util.List $r2;
        int $i0, $i1, i2, $i3;
        java.lang.Object $r3;
        java.lang.String r5;

        r0 := @this: com.yang.longrubblishclear.util.ProcessMemoryUtil;

        $i0 := @parameter0: int;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>(2);

        $r2 = r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 < $i1 goto label2;

        return r1;

     label2:
        $r2 = r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (java.lang.String[]) $r3;

        r5 = r4[0];

        if r5 != null goto label4;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

        if $i3 != $i0 goto label3;

        r5 = r4[1];

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        r5 = r4[5];

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        return r1;
    }

    public void initPMUtil()
    {
        com.yang.longrubblishclear.util.ProcessMemoryUtil r0;
        java.lang.String $r2;
        java.util.ArrayList $r1;

        r0 := @this: com.yang.longrubblishclear.util.ProcessMemoryUtil;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList> = $r1;

        $r2 = specialinvoke r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.lang.String getProcessRunningInfo()>();

        specialinvoke r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: int parseProcessRunningInfo(java.lang.String)>($r2);

        return;
    }

    public void initPMUtilPS()
    {
        com.yang.longrubblishclear.util.ProcessMemoryUtil r0;
        java.lang.String $r2;
        java.util.ArrayList $r1;

        r0 := @this: com.yang.longrubblishclear.util.ProcessMemoryUtil;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.util.List PMUList> = $r1;

        $r2 = specialinvoke r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: java.lang.String getProcessRunningInfoPS()>();

        specialinvoke r0.<com.yang.longrubblishclear.util.ProcessMemoryUtil: int parseProcessRunningInfoPS(java.lang.String)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int Length_ProcStat> = 9;

        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int INDEX_VSS> = 4;

        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int INDEX_UID> = 7;

        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int INDEX_THR> = 3;

        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int INDEX_STAT> = 2;

        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int INDEX_RSS> = 5;

        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int INDEX_PID> = 0;

        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int INDEX_PCY> = 6;

        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int INDEX_NAME> = 8;

        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int INDEX_FIRST> = -1;

        <com.yang.longrubblishclear.util.ProcessMemoryUtil: int INDEX_CPU> = 1;

        return;
    }
}
