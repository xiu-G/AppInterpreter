public class org.htmlparser.filters.NotFilter extends java.lang.Object implements org.htmlparser.NodeFilter
{
    protected org.htmlparser.NodeFilter a;

    public void <init>()
    {
        org.htmlparser.filters.NotFilter r0;

        r0 := @this: org.htmlparser.filters.NotFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.htmlparser.filters.NotFilter: void setPredicate(org.htmlparser.NodeFilter)>(null);

        return;
    }

    public void <init>(org.htmlparser.NodeFilter)
    {
        org.htmlparser.NodeFilter $r1;
        org.htmlparser.filters.NotFilter r0;

        r0 := @this: org.htmlparser.filters.NotFilter;

        $r1 := @parameter0: org.htmlparser.NodeFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.htmlparser.filters.NotFilter: void setPredicate(org.htmlparser.NodeFilter)>($r1);

        return;
    }

    public boolean accept(org.htmlparser.Node)
    {
        org.htmlparser.NodeFilter $r2;
        org.htmlparser.Node $r1;
        org.htmlparser.filters.NotFilter r0;
        boolean $z0;

        r0 := @this: org.htmlparser.filters.NotFilter;

        $r1 := @parameter0: org.htmlparser.Node;

        $r2 = r0.<org.htmlparser.filters.NotFilter: org.htmlparser.NodeFilter a>;

        if $r2 == null goto label1;

        $r2 = r0.<org.htmlparser.filters.NotFilter: org.htmlparser.NodeFilter a>;

        $z0 = interfaceinvoke $r2.<org.htmlparser.NodeFilter: boolean accept(org.htmlparser.Node)>($r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.htmlparser.NodeFilter getPredicate()
    {
        org.htmlparser.NodeFilter r1;
        org.htmlparser.filters.NotFilter r0;

        r0 := @this: org.htmlparser.filters.NotFilter;

        r1 = r0.<org.htmlparser.filters.NotFilter: org.htmlparser.NodeFilter a>;

        return r1;
    }

    public void setPredicate(org.htmlparser.NodeFilter)
    {
        org.htmlparser.NodeFilter $r1;
        org.htmlparser.filters.NotFilter r0;

        r0 := @this: org.htmlparser.filters.NotFilter;

        $r1 := @parameter0: org.htmlparser.NodeFilter;

        r0.<org.htmlparser.filters.NotFilter: org.htmlparser.NodeFilter a> = $r1;

        return;
    }
}
