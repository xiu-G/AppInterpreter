public class com.donson.momark.b.w extends java.lang.Object
{

    public static final org.apache.http.params.HttpParams a()
    {
        org.apache.http.params.BasicHttpParams $r0, $r1;

        $r1 = new org.apache.http.params.BasicHttpParams;

        $r0 = $r1;

        specialinvoke $r1.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>($r0, 0);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r0, 30000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r0, 30000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>($r0, 40960);

        return $r0;
    }

    public static void a(android.content.Context, java.lang.String, java.lang.String, com.donson.momark.a.r, com.donson.momark.a.u)
    {
        org.apache.http.impl.client.DefaultHttpClient $r13, $r28;
        org.apache.http.client.methods.HttpPost $r9, $r24;
        org.apache.http.client.entity.UrlEncodedFormEntity $r12, $r27;
        com.donson.momark.a.a.y $r18, $r29;
        org.apache.http.StatusLine $r15;
        boolean $z0;
        org.apache.http.HttpEntity $r16;
        java.lang.StringBuilder $r5, $r22;
        com.donson.momark.a.r $r3;
        com.donson.momark.a.u $r4;
        java.lang.Throwable $r17, $r19, $r20, $r21;
        org.apache.http.message.BasicNameValuePair $r26;
        android.content.Context $r0;
        java.util.ArrayList $r11, $r25;
        java.lang.StringBuffer $r7, $r23;
        int $i0;
        java.lang.String $r1, $r2, $r6, $r8;
        org.apache.http.params.HttpParams $r10;
        org.apache.http.HttpResponse $r14;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: com.donson.momark.a.r;

        $r4 := @parameter4: com.donson.momark.a.u;

        $z0 = staticinvoke <com.donson.momark.b.a: boolean a(android.content.Context)>($r0);

        if $z0 != 0 goto label01;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String)>(" sendcommand.sendHttpCommand 40012:not wifi or net,send command to host.");

        return;

     label01:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("----------------sendCommand.sendHttpCommand---------");

        $r5 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String)>($r6);

        $r6 = <com.donson.momark.util.e: java.lang.String o>;

        $r23 = new java.lang.StringBuffer;

        $r7 = $r23;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r8 = <com.donson.momark.util.e: java.lang.String a>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label10;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label02:
        $r6 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r24 = new org.apache.http.client.methods.HttpPost;

        $r9 = $r24;

        specialinvoke $r24.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r6);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("----------------sendCommand.sendHttpCommand---------");

        $r5 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String)>($r6);

        $r10 = staticinvoke <com.donson.momark.b.w: org.apache.http.params.HttpParams a()>();

        virtualinvoke $r9.<org.apache.http.client.methods.HttpPost: void setParams(org.apache.http.params.HttpParams)>($r10);

        $r25 = new java.util.ArrayList;

        $r11 = $r25;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        $r26 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r26.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("d", $r2);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r27 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        $r12 = $r27;

     label03:
        specialinvoke $r27.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>($r11, "UTF-8");

        virtualinvoke $r9.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r12);

     label04:
        $r28 = new org.apache.http.impl.client.DefaultHttpClient;

        $r13 = $r28;

     label05:
        specialinvoke $r28.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        $r14 = virtualinvoke $r13.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r9);

        $r15 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r15.<org.apache.http.StatusLine: int getStatusCode()>();

     label06:
        if $i0 != 200 goto label14;

     label07:
        $r16 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r2 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>($r16, "UTF-8");

        staticinvoke <com.donson.momark.b.q: void a(android.content.Context,java.lang.String,java.lang.String,com.donson.momark.a.r,com.donson.momark.a.u)>($r0, $r2, $r1, $r3, $r4);

     label08:
        return;

     label09:
        $r17 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" sendcommand.sendHttpCommand 40002:Characters converter is not available.", $r17);

        $r2 = <com.donson.momark.util.e: java.lang.String h>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label23;

        $r29 = new com.donson.momark.a.a.y;

        specialinvoke $r29.<com.donson.momark.a.a.y: void <init>(int)>(40002);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r29);

        return;

     label10:
        $r6 = <com.donson.momark.util.e: java.lang.String h>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label11;

        $r6 = <com.donson.momark.util.e: java.lang.String p>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label02;

     label11:
        $r6 = <com.donson.momark.util.e: java.lang.String j>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label12;

        $r6 = <com.donson.momark.util.e: java.lang.String q>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label02;

     label12:
        $r6 = <com.donson.momark.util.e: java.lang.String b>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label13;

        $r6 = <com.donson.momark.util.e: java.lang.String r>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label02;

     label13:
        $r6 = <com.donson.momark.util.e: java.lang.String c>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label02;

        $r6 = <com.donson.momark.util.e: java.lang.String s>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label02;

     label14:
        staticinvoke <com.donson.momark.util.t: void a(java.lang.String)>(" sendcommand.sendHttpCommand 40010:request fail\uff0cstate not 200.");

     label15:
        $r2 = <com.donson.momark.util.e: java.lang.String h>;

     label16:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label17:
        if $z0 == 0 goto label23;

        $r29 = new com.donson.momark.a.a.y;

        $r18 = $r29;

     label18:
        specialinvoke $r29.<com.donson.momark.a.a.y: void <init>(int)>(40010);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r18);

     label19:
        return;

     label20:
        $r19 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" sendcommand.sendHttpCommand 40001:host not find.", $r19);

        $r2 = <com.donson.momark.util.e: java.lang.String h>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label23;

        $r29 = new com.donson.momark.a.a.y;

        specialinvoke $r29.<com.donson.momark.a.a.y: void <init>(int)>(40001);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r29);

        return;

     label21:
        $r20 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" sendcommand.sendHttpCommand 40003:Characters parse error.", $r20);

        $r2 = <com.donson.momark.util.e: java.lang.String h>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label23;

        $r29 = new com.donson.momark.a.a.y;

        specialinvoke $r29.<com.donson.momark.a.a.y: void <init>(int)>(40003);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r29);

        return;

     label22:
        $r21 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" sendcommand.sendHttpCommand 40004:IOException.", $r21);

        $r2 = <com.donson.momark.util.e: java.lang.String h>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label23;

        $r29 = new com.donson.momark.a.a.y;

        specialinvoke $r29.<com.donson.momark.a.a.y: void <init>(int)>(40004);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r29);

     label23:
        return;

        catch java.io.UnsupportedEncodingException from label03 to label04 with label09;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label09;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label09;
        catch java.net.UnknownHostException from label03 to label04 with label20;
        catch java.net.UnknownHostException from label05 to label06 with label20;
        catch java.net.UnknownHostException from label07 to label08 with label20;
        catch org.apache.http.ParseException from label03 to label04 with label21;
        catch org.apache.http.ParseException from label05 to label06 with label21;
        catch org.apache.http.ParseException from label07 to label08 with label21;
        catch java.io.IOException from label03 to label04 with label22;
        catch java.io.IOException from label05 to label06 with label22;
        catch java.io.IOException from label07 to label08 with label22;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label09;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label09;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label09;
        catch java.net.UnknownHostException from label14 to label15 with label20;
        catch java.net.UnknownHostException from label16 to label17 with label20;
        catch java.net.UnknownHostException from label18 to label19 with label20;
        catch org.apache.http.ParseException from label14 to label15 with label21;
        catch org.apache.http.ParseException from label16 to label17 with label21;
        catch org.apache.http.ParseException from label18 to label19 with label21;
        catch java.io.IOException from label14 to label15 with label22;
        catch java.io.IOException from label16 to label17 with label22;
        catch java.io.IOException from label18 to label19 with label22;
    }
}
