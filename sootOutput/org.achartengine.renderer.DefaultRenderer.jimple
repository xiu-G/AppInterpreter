public class org.achartengine.renderer.DefaultRenderer extends java.lang.Object implements java.io.Serializable
{
    public static final int BACKGROUND_COLOR;
    private static final android.graphics.Typeface REGULAR_TEXT_FONT;
    public static final int TEXT_COLOR;
    private boolean antialiasing;
    private boolean mApplyBackgroundColor;
    private int mAxesColor;
    private int mBackgroundColor;
    private int mLabelsColor;
    private float mLabelsTextSize;
    private float mLegendTextSize;
    private java.util.List mRenderers;
    private boolean mShowAxes;
    private boolean mShowGrid;
    private boolean mShowLabels;
    private boolean mShowLegend;
    private java.lang.String textTypefaceName;
    private int textTypefaceStyle;

    static void <clinit>()
    {
        android.graphics.Typeface $r0;

        <org.achartengine.renderer.DefaultRenderer: int TEXT_COLOR> = -3355444;

        <org.achartengine.renderer.DefaultRenderer: int BACKGROUND_COLOR> = -16777216;

        $r0 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;

        $r0 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r0, 0);

        <org.achartengine.renderer.DefaultRenderer: android.graphics.Typeface REGULAR_TEXT_FONT> = $r0;

        return;
    }

    public void <init>()
    {
        android.graphics.Typeface $r2;
        org.achartengine.renderer.DefaultRenderer r0;
        java.lang.String $r1;
        java.util.ArrayList $r3;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <org.achartengine.renderer.DefaultRenderer: android.graphics.Typeface REGULAR_TEXT_FONT>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        r0.<org.achartengine.renderer.DefaultRenderer: java.lang.String textTypefaceName> = $r1;

        r0.<org.achartengine.renderer.DefaultRenderer: int textTypefaceStyle> = 0;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowAxes> = 1;

        r0.<org.achartengine.renderer.DefaultRenderer: int mAxesColor> = -3355444;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowLabels> = 1;

        r0.<org.achartengine.renderer.DefaultRenderer: int mLabelsColor> = -3355444;

        r0.<org.achartengine.renderer.DefaultRenderer: float mLabelsTextSize> = 9.0F;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowLegend> = 1;

        r0.<org.achartengine.renderer.DefaultRenderer: float mLegendTextSize> = 12.0F;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowGrid> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.achartengine.renderer.DefaultRenderer: java.util.List mRenderers> = $r3;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean antialiasing> = 1;

        return;
    }

    public void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer)
    {
        java.util.List $r2;
        org.achartengine.renderer.DefaultRenderer r0;
        org.achartengine.renderer.SimpleSeriesRenderer $r1;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $r1 := @parameter0: org.achartengine.renderer.SimpleSeriesRenderer;

        $r2 = r0.<org.achartengine.renderer.DefaultRenderer: java.util.List mRenderers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public int getAxesColor()
    {
        int i0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        i0 = r0.<org.achartengine.renderer.DefaultRenderer: int mAxesColor>;

        return i0;
    }

    public int getBackgroundColor()
    {
        int i0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        i0 = r0.<org.achartengine.renderer.DefaultRenderer: int mBackgroundColor>;

        return i0;
    }

    public int getLabelsColor()
    {
        int i0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        i0 = r0.<org.achartengine.renderer.DefaultRenderer: int mLabelsColor>;

        return i0;
    }

    public float getLabelsTextSize()
    {
        float f0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        f0 = r0.<org.achartengine.renderer.DefaultRenderer: float mLabelsTextSize>;

        return f0;
    }

    public float getLegendTextSize()
    {
        float f0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        f0 = r0.<org.achartengine.renderer.DefaultRenderer: float mLegendTextSize>;

        return f0;
    }

    public org.achartengine.renderer.SimpleSeriesRenderer getSeriesRendererAt(int)
    {
        java.util.List $r0;
        int $i0;
        java.lang.Object $r1;
        org.achartengine.renderer.DefaultRenderer r2;
        org.achartengine.renderer.SimpleSeriesRenderer r3;

        r2 := @this: org.achartengine.renderer.DefaultRenderer;

        $i0 := @parameter0: int;

        $r0 = r2.<org.achartengine.renderer.DefaultRenderer: java.util.List mRenderers>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        r3 = (org.achartengine.renderer.SimpleSeriesRenderer) $r1;

        return r3;
    }

    public int getSeriesRendererCount()
    {
        int $i0;
        java.util.List $r1;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $r1 = r0.<org.achartengine.renderer.DefaultRenderer: java.util.List mRenderers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public org.achartengine.renderer.SimpleSeriesRenderer[] getSeriesRenderers()
    {
        java.util.List $r0;
        java.lang.Object[] $r1;
        org.achartengine.renderer.DefaultRenderer r2;
        org.achartengine.renderer.SimpleSeriesRenderer[] $r3;

        r2 := @this: org.achartengine.renderer.DefaultRenderer;

        $r0 = r2.<org.achartengine.renderer.DefaultRenderer: java.util.List mRenderers>;

        $r3 = newarray (org.achartengine.renderer.SimpleSeriesRenderer)[0];

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (org.achartengine.renderer.SimpleSeriesRenderer[]) $r1;

        return $r3;
    }

    public java.lang.String getTextTypefaceName()
    {
        org.achartengine.renderer.DefaultRenderer r0;
        java.lang.String r1;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        r1 = r0.<org.achartengine.renderer.DefaultRenderer: java.lang.String textTypefaceName>;

        return r1;
    }

    public int getTextTypefaceStyle()
    {
        int i0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        i0 = r0.<org.achartengine.renderer.DefaultRenderer: int textTypefaceStyle>;

        return i0;
    }

    public boolean isAntialiasing()
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        z0 = r0.<org.achartengine.renderer.DefaultRenderer: boolean antialiasing>;

        return z0;
    }

    public boolean isApplyBackgroundColor()
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        z0 = r0.<org.achartengine.renderer.DefaultRenderer: boolean mApplyBackgroundColor>;

        return z0;
    }

    public boolean isShowAxes()
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        z0 = r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowAxes>;

        return z0;
    }

    public boolean isShowGrid()
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        z0 = r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowGrid>;

        return z0;
    }

    public boolean isShowLabels()
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        z0 = r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowLabels>;

        return z0;
    }

    public boolean isShowLegend()
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        z0 = r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowLegend>;

        return z0;
    }

    public void removeSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer)
    {
        java.util.List $r2;
        org.achartengine.renderer.DefaultRenderer r0;
        org.achartengine.renderer.SimpleSeriesRenderer $r1;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $r1 := @parameter0: org.achartengine.renderer.SimpleSeriesRenderer;

        $r2 = r0.<org.achartengine.renderer.DefaultRenderer: java.util.List mRenderers>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void setAntialiasing(boolean)
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean $z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $z0 := @parameter0: boolean;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean antialiasing> = $z0;

        return;
    }

    public void setApplyBackgroundColor(boolean)
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean $z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $z0 := @parameter0: boolean;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean mApplyBackgroundColor> = $z0;

        return;
    }

    public void setAxesColor(int)
    {
        int $i0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $i0 := @parameter0: int;

        r0.<org.achartengine.renderer.DefaultRenderer: int mAxesColor> = $i0;

        return;
    }

    public void setBackgroundColor(int)
    {
        int $i0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $i0 := @parameter0: int;

        r0.<org.achartengine.renderer.DefaultRenderer: int mBackgroundColor> = $i0;

        return;
    }

    public void setLabelsColor(int)
    {
        int $i0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $i0 := @parameter0: int;

        r0.<org.achartengine.renderer.DefaultRenderer: int mLabelsColor> = $i0;

        return;
    }

    public void setLabelsTextSize(float)
    {
        float $f0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $f0 := @parameter0: float;

        r0.<org.achartengine.renderer.DefaultRenderer: float mLabelsTextSize> = $f0;

        return;
    }

    public void setLegendTextSize(float)
    {
        float $f0;
        org.achartengine.renderer.DefaultRenderer r0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $f0 := @parameter0: float;

        r0.<org.achartengine.renderer.DefaultRenderer: float mLegendTextSize> = $f0;

        return;
    }

    public void setShowAxes(boolean)
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean $z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $z0 := @parameter0: boolean;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowAxes> = $z0;

        return;
    }

    public void setShowGrid(boolean)
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean $z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $z0 := @parameter0: boolean;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowGrid> = $z0;

        return;
    }

    public void setShowLabels(boolean)
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean $z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $z0 := @parameter0: boolean;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowLabels> = $z0;

        return;
    }

    public void setShowLegend(boolean)
    {
        org.achartengine.renderer.DefaultRenderer r0;
        boolean $z0;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $z0 := @parameter0: boolean;

        r0.<org.achartengine.renderer.DefaultRenderer: boolean mShowLegend> = $z0;

        return;
    }

    public void setTextTypeface(java.lang.String, int)
    {
        int $i0;
        org.achartengine.renderer.DefaultRenderer r0;
        java.lang.String $r1;

        r0 := @this: org.achartengine.renderer.DefaultRenderer;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        r0.<org.achartengine.renderer.DefaultRenderer: java.lang.String textTypefaceName> = $r1;

        r0.<org.achartengine.renderer.DefaultRenderer: int textTypefaceStyle> = $i0;

        return;
    }
}
