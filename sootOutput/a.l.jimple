final class a.l extends java.lang.Object implements java.util.concurrent.Executor
{
    private java.lang.ThreadLocal a;

    private void <init>()
    {
        java.lang.ThreadLocal $r1;
        a.l r0;

        r0 := @this: a.l;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<a.l: java.lang.ThreadLocal a> = $r1;

        return;
    }

    void <init>(byte)
    {
        byte $b0;
        a.l r0;

        r0 := @this: a.l;

        $b0 := @parameter0: byte;

        specialinvoke r0.<a.l: void <init>()>();

        return;
    }

    private int a()
    {
        java.lang.ThreadLocal $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        a.l r0;

        r0 := @this: a.l;

        $r1 = r0.<a.l: java.lang.ThreadLocal a>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.lang.Integer) $r2;

        if $r3 != null goto label1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label1:
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i0 = $i0 + -1;

        if $i0 != 0 goto label2;

        $r1 = r0.<a.l: java.lang.ThreadLocal a>;

        virtualinvoke $r1.<java.lang.ThreadLocal: void remove()>();

        return $i0;

     label2:
        $r1 = r0.<a.l: java.lang.ThreadLocal a>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>($r3);

        return $i0;
    }

    public final void execute(java.lang.Runnable)
    {
        java.lang.Throwable $r6;
        java.lang.ThreadLocal $r2;
        java.lang.Runnable $r1;
        java.lang.Integer $r4;
        int $i0;
        java.lang.Object $r3;
        a.l r0;
        java.util.concurrent.ExecutorService $r5;

        r0 := @this: a.l;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<a.l: java.lang.ThreadLocal a>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (java.lang.Integer) $r3;

        if $r4 != null goto label1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label1:
        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i0 = $i0 + 1;

        $r2 = r0.<a.l: java.lang.ThreadLocal a>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>($r4);

        if $i0 > 15 goto label4;

     label2:
        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

     label3:
        specialinvoke r0.<a.l: int a()>();

        return;

     label4:
        $r5 = <a.e: java.util.concurrent.ExecutorService a>;

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r1);

     label5:
        goto label3;

     label6:
        $r6 := @caughtexception;

        specialinvoke r0.<a.l: int a()>();

        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
