public class com.nd.diandong.other.C extends java.lang.Object
{
    private static com.nd.diandong.other.C a;
    private static final java.lang.String a;

    static void <clinit>()
    {
        com.nd.diandong.other.C $r0;

        <com.nd.diandong.other.C: java.lang.String a> = "EmbededAdvModuleInstance";

        $r0 = new com.nd.diandong.other.C;

        specialinvoke $r0.<com.nd.diandong.other.C: void <init>()>();

        <com.nd.diandong.other.C: com.nd.diandong.other.C a> = $r0;

        return;
    }

    public void <init>()
    {
        com.nd.diandong.other.C r0;

        r0 := @this: com.nd.diandong.other.C;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.nd.diandong.other.C a()
    {
        com.nd.diandong.other.C r0;

        r0 = <com.nd.diandong.other.C: com.nd.diandong.other.C a>;

        return r0;
    }

    public java.util.HashMap a(int)
    {
        java.lang.Throwable $r14;
        com.nd.diandong.other.C r0;
        java.util.HashMap $r1;
        java.util.Random $r4;
        long $l1;
        com.nd.diandong.other.H $r13;
        java.lang.Integer $r10;
        com.nd.diandong.other.m $r8;
        java.lang.Long $r9;
        int $i0;
        com.nd.diandong.other.s $r11;
        java.lang.String $r7;
        com.nd.diandong.other.y $r2;
        boolean $z0;
        com.nd.diandong.other.j $r6;
        java.util.List $r3;
        com.nd.diandong.other.P $r12;
        java.lang.Object $r5;

        r0 := @this: com.nd.diandong.other.C;

        $i0 := @parameter0: int;

        $r1 = null;

        entermonitor r0;

     label1:
        $r2 = staticinvoke <com.nd.diandong.other.y: com.nd.diandong.other.y a()>();

        $r3 = virtualinvoke $r2.<com.nd.diandong.other.y: java.util.List a(int)>(8);

        if $r3 == null goto label5;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label5;

        $r4 = new java.util.Random;

        specialinvoke $r4.<java.util.Random: void <init>()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i0 = virtualinvoke $r4.<java.util.Random: int nextInt(int)>($i0);

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (com.nd.diandong.other.j) $r5;

        $r7 = virtualinvoke $r6.<com.nd.diandong.other.j: java.lang.String b()>();

        $r8 = virtualinvoke $r2.<com.nd.diandong.other.y: com.nd.diandong.other.m a(java.lang.String)>($r7);

     label2:
        if $r8 != null goto label4;

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r7 = virtualinvoke $r8.<com.nd.diandong.other.m: java.lang.String c()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("resPath", $r7);

        $l1 = virtualinvoke $r6.<com.nd.diandong.other.j: long a()>();

        $l1 = $l1 * 1000L;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("time", $r9);

        $i0 = virtualinvoke $r8.<com.nd.diandong.other.m: int e()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("width", $r10);

        $i0 = virtualinvoke $r8.<com.nd.diandong.other.m: int f()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("height", $r10);

        $r7 = virtualinvoke $r6.<com.nd.diandong.other.j: java.lang.String b()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("tid", $r7);

        $i0 = virtualinvoke $r6.<com.nd.diandong.other.j: int f()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("showtype", $r10);

        goto label3;

     label5:
        $r11 = staticinvoke <com.nd.diandong.other.s: com.nd.diandong.other.s a()>();

        $z0 = virtualinvoke $r11.<com.nd.diandong.other.s: boolean c()>();

        if $z0 == 0 goto label6;

        $r12 = staticinvoke <com.nd.diandong.other.P: com.nd.diandong.other.P a()>();

        virtualinvoke $r12.<com.nd.diandong.other.P: void a()>();

        $r1 = null;

        goto label3;

     label6:
        $r13 = staticinvoke <com.nd.diandong.other.H: com.nd.diandong.other.H a()>();

        virtualinvoke $r13.<com.nd.diandong.other.H: void a()>();

     label7:
        $r1 = null;

        goto label3;

     label8:
        $r14 := @caughtexception;

        exitmonitor r0;

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label7 with label8;
    }

    public void a(java.lang.String[])
    {
        com.nd.diandong.other.C r0;
        java.lang.String[] $r1;
        java.lang.Exception $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r2;
        com.nd.diandong.other.y $r3;

        r0 := @this: com.nd.diandong.other.C;

        $r1 := @parameter0: java.lang.String[];

        $i0 = 0;

        $r2 = "";

     label01:
        $i1 = lengthof $r1;

     label02:
        if $i0 < $i1 goto label07;

     label03:
        $r3 = staticinvoke <com.nd.diandong.other.y: com.nd.diandong.other.y a()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

     label04:
        $i0 = $i0 + -1;

     label05:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke $r3.<com.nd.diandong.other.y: void b(java.lang.String)>($r2);

     label06:
        return;

     label07:
        $r6 = new java.lang.StringBuilder;

        $r4 = $r6;

     label08:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r2 = $r1[$i0];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\',");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $i0 = $i0 + 1;

        goto label01;

     label10:
        $r5 := @caughtexception;

        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("EmbededAdvModuleInstance", "", $r5);

        return;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }
}
