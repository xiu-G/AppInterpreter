class com.loopj.android.http.SimpleMultipartEntity extends java.lang.Object implements org.apache.http.HttpEntity
{
    private static final char[] MULTIPART_CHARS;
    private java.lang.String boundary;
    boolean isSetFirst;
    boolean isSetLast;
    java.io.ByteArrayOutputStream out;

    static void <clinit>()
    {
        char[] $r0;
        java.lang.String $r1;

        $r1 = "-_1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <com.loopj.android.http.SimpleMultipartEntity: char[] MULTIPART_CHARS> = $r0;

        return;
    }

    public void <init>()
    {
        java.io.ByteArrayOutputStream $r3;
        java.util.Random r2;
        char $c2;
        java.lang.StringBuffer r1;
        int i0, $i1;
        com.loopj.android.http.SimpleMultipartEntity r0;
        char[] $r5, $r6;
        java.lang.String $r4;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.loopj.android.http.SimpleMultipartEntity: java.lang.String boundary> = null;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out> = $r3;

        r0.<com.loopj.android.http.SimpleMultipartEntity: boolean isSetLast> = 0;

        r0.<com.loopj.android.http.SimpleMultipartEntity: boolean isSetFirst> = 0;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        r2 = new java.util.Random;

        specialinvoke r2.<java.util.Random: void <init>()>();

        i0 = 0;

     label1:
        if i0 < 30 goto label2;

        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<com.loopj.android.http.SimpleMultipartEntity: java.lang.String boundary> = $r4;

        return;

     label2:
        $r5 = <com.loopj.android.http.SimpleMultipartEntity: char[] MULTIPART_CHARS>;

        $r6 = <com.loopj.android.http.SimpleMultipartEntity: char[] MULTIPART_CHARS>;

        $i1 = lengthof $r6;

        $i1 = virtualinvoke r2.<java.util.Random: int nextInt(int)>($i1);

        $c2 = $r5[$i1];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        i0 = i0 + 1;

        goto label1;
    }

    public void addPart(java.lang.String, java.io.File, boolean)
    {
        java.lang.Throwable r3;
        java.io.FileInputStream $r4, $r6;
        java.io.File $r2;
        java.io.FileNotFoundException $r7;
        com.loopj.android.http.SimpleMultipartEntity r0;
        java.lang.String $r1, $r5;
        boolean $z0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        $z0 := @parameter2: boolean;

     label1:
        $r5 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

     label2:
        $r6 = new java.io.FileInputStream;

        $r4 = $r6;

     label3:
        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        virtualinvoke r0.<com.loopj.android.http.SimpleMultipartEntity: void addPart(java.lang.String,java.lang.String,java.io.InputStream,boolean)>($r1, $r5, $r4, $z0);

     label4:
        return;

     label5:
        r3 := @caughtexception;

        $r7 = (java.io.FileNotFoundException) r3;

        virtualinvoke $r7.<java.io.FileNotFoundException: void printStackTrace()>();

        return;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label3 to label4 with label5;
    }

    public void addPart(java.lang.String, java.lang.String)
    {
        com.loopj.android.http.SimpleMultipartEntity r0;
        java.lang.String $r1, $r2;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.loopj.android.http.SimpleMultipartEntity: void addPart(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, "text/plain; charset=UTF-8");

        return;
    }

    public void addPart(java.lang.String, java.lang.String, java.io.InputStream, java.lang.String, boolean)
    {
        java.lang.Throwable r8, r9, $r10, r11, r12;
        byte[] r4;
        java.io.ByteArrayOutputStream $r7;
        int $i0;
        com.loopj.android.http.SimpleMultipartEntity r0;
        java.lang.String $r1, $r2, $r5;
        boolean $z0;
        java.io.IOException $r14;
        java.lang.StringBuilder $r6, $r13;
        java.io.InputStream $r3;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.io.InputStream;

        $r5 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        virtualinvoke r0.<com.loopj.android.http.SimpleMultipartEntity: void writeBoundary()>();

     label01:
        $r13 = new java.lang.StringBuilder;

     label02:
        $r6 = $r13;

     label03:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Content-Type: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r7 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

        $r13 = new java.lang.StringBuilder;

     label05:
        $r6 = $r13;

     label06:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Content-Disposition: form-data; name=\"");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"; filename=\"");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[])>(r4);

     label07:
        $r7 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

     label08:
        r4 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[])>(r4);

     label09:
        $r7 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

     label10:
        $r1 = "Content-Transfer-Encoding: binary\r\n\r\n";

     label11:
        r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[])>(r4);

     label12:
        r4 = newarray (byte)[4096];

     label13:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>(r4);

     label14:
        if $i0 != -1 goto label20;

     label15:
        $r7 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

     label16:
        $r1 = "\r\n";

     label17:
        r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[])>(r4);

     label18:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label19:
        return;

     label20:
        $r7 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

     label21:
        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r4, 0, $i0);

     label22:
        goto label13;

     label23:
        r8 := @caughtexception;

     label24:
        $r14 = (java.io.IOException) r8;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

     label25:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label26:
        return;

     label27:
        r9 := @caughtexception;

        $r14 = (java.io.IOException) r9;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        return;

     label28:
        $r10 := @caughtexception;

     label29:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label30:
        throw $r10;

     label31:
        r11 := @caughtexception;

        $r14 = (java.io.IOException) r11;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        goto label30;

     label32:
        r12 := @caughtexception;

        $r14 = (java.io.IOException) r12;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label03 to label04 with label23;
        catch java.io.IOException from label06 to label07 with label23;
        catch java.io.IOException from label08 to label09 with label23;
        catch java.io.IOException from label11 to label12 with label23;
        catch java.io.IOException from label13 to label14 with label23;
        catch java.io.IOException from label17 to label18 with label23;
        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label05 with label28;
        catch java.lang.Throwable from label06 to label10 with label28;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.lang.Throwable from label13 to label14 with label28;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch java.lang.Throwable from label17 to label18 with label28;
        catch java.io.IOException from label18 to label19 with label32;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Throwable from label20 to label22 with label28;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.io.IOException from label29 to label30 with label31;
    }

    public void addPart(java.lang.String, java.lang.String, java.io.InputStream, boolean)
    {
        com.loopj.android.http.SimpleMultipartEntity r0;
        java.lang.String $r1, $r2;
        java.io.InputStream $r3;
        boolean $z0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.io.InputStream;

        $z0 := @parameter3: boolean;

        virtualinvoke r0.<com.loopj.android.http.SimpleMultipartEntity: void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String,boolean)>($r1, $r2, $r3, "application/octet-stream", $z0);

        return;
    }

    public void addPart(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Throwable r4;
        byte[] $r7;
        java.io.ByteArrayOutputStream $r5;
        java.io.IOException $r9;
        com.loopj.android.http.SimpleMultipartEntity r0;
        java.lang.StringBuilder $r6, $r8;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.loopj.android.http.SimpleMultipartEntity: void writeBoundary()>();

        $r5 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

        $r8 = new java.lang.StringBuilder;

        $r6 = $r8;

     label1:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Content-Disposition: form-data; name=\"");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\r\n");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[])>($r7);

     label2:
        $r5 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

        $r8 = new java.lang.StringBuilder;

        $r6 = $r8;

     label3:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Content-Type: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text/plain; charset=UTF-8");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n\r\n");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[])>($r7);

     label4:
        $r5 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

     label5:
        $r7 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[])>($r7);

     label6:
        $r5 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

        $r1 = "\r\n";

     label7:
        $r7 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[])>($r7);

     label8:
        return;

     label9:
        r4 := @caughtexception;

        $r9 = (java.io.IOException) r4;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label6 with label9;
        catch java.io.IOException from label7 to label8 with label9;
    }

    public void consumeContent() throws java.io.IOException, java.lang.UnsupportedOperationException
    {
        com.loopj.android.http.SimpleMultipartEntity r0;
        java.lang.UnsupportedOperationException $r1;
        boolean $z0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $z0 = virtualinvoke r0.<com.loopj.android.http.SimpleMultipartEntity: boolean isStreaming()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Streaming entity does not implement #consumeContent()");

        throw $r1;

     label1:
        return;
    }

    public java.io.InputStream getContent() throws java.io.IOException, java.lang.UnsupportedOperationException
    {
        byte[] $r2;
        java.io.ByteArrayInputStream $r1;
        java.io.ByteArrayOutputStream $r3;
        com.loopj.android.http.SimpleMultipartEntity r0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        virtualinvoke r0.<com.loopj.android.http.SimpleMultipartEntity: void writeLastBoundaryIfNeeds()>();

        $r1 = new java.io.ByteArrayInputStream;

        $r3 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

        $r2 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        return $r1;
    }

    public org.apache.http.Header getContentEncoding()
    {
        com.loopj.android.http.SimpleMultipartEntity r0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        return null;
    }

    public long getContentLength()
    {
        byte[] $r1;
        java.io.ByteArrayOutputStream $r2;
        int $i0;
        com.loopj.android.http.SimpleMultipartEntity r0;
        long $l1;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        virtualinvoke r0.<com.loopj.android.http.SimpleMultipartEntity: void writeLastBoundaryIfNeeds()>();

        $r2 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

        $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        return $l1;
    }

    public org.apache.http.Header getContentType()
    {
        org.apache.http.message.BasicHeader $r1;
        com.loopj.android.http.SimpleMultipartEntity r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $r1 = new org.apache.http.message.BasicHeader;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("multipart/form-data; boundary=");

        $r3 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.lang.String boundary>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.http.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>("Content-Type", $r3);

        return $r1;
    }

    public boolean isChunked()
    {
        com.loopj.android.http.SimpleMultipartEntity r0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        return 0;
    }

    public boolean isRepeatable()
    {
        com.loopj.android.http.SimpleMultipartEntity r0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        return 0;
    }

    public boolean isStreaming()
    {
        com.loopj.android.http.SimpleMultipartEntity r0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        return 0;
    }

    public void writeBoundary()
    {
        java.lang.Throwable r1;
        byte[] $r5;
        java.io.ByteArrayOutputStream $r2;
        java.io.IOException $r7;
        com.loopj.android.http.SimpleMultipartEntity r0;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r4;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $r2 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

        $r6 = new java.lang.StringBuilder;

        $r3 = $r6;

     label1:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("--");

     label2:
        $r4 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.lang.String boundary>;

     label3:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r5);

     label4:
        return;

     label5:
        r1 := @caughtexception;

        $r7 = (java.io.IOException) r1;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public void writeFirstBoundaryIfNeeds()
    {
        com.loopj.android.http.SimpleMultipartEntity r0;
        boolean $z0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $z0 = r0.<com.loopj.android.http.SimpleMultipartEntity: boolean isSetFirst>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.loopj.android.http.SimpleMultipartEntity: void writeBoundary()>();

     label1:
        r0.<com.loopj.android.http.SimpleMultipartEntity: boolean isSetFirst> = 1;

        return;
    }

    public void writeLastBoundaryIfNeeds()
    {
        java.lang.Throwable r1;
        byte[] $r5;
        java.io.ByteArrayOutputStream $r2;
        java.io.IOException $r7;
        com.loopj.android.http.SimpleMultipartEntity r0;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $z0 = r0.<com.loopj.android.http.SimpleMultipartEntity: boolean isSetLast>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

        $r6 = new java.lang.StringBuilder;

        $r3 = $r6;

     label2:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("--");

     label3:
        $r4 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.lang.String boundary>;

     label4:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--\r\n");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r5);

     label5:
        $r2 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

     label6:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void flush()>();

     label7:
        r0.<com.loopj.android.http.SimpleMultipartEntity: boolean isSetLast> = 1;

        return;

     label8:
        r1 := @caughtexception;

        $r7 = (java.io.IOException) r1;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace()>();

        goto label7;

        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        byte[] $r2;
        java.io.ByteArrayOutputStream $r3;
        com.loopj.android.http.SimpleMultipartEntity r0;

        r0 := @this: com.loopj.android.http.SimpleMultipartEntity;

        $r1 := @parameter0: java.io.OutputStream;

        virtualinvoke r0.<com.loopj.android.http.SimpleMultipartEntity: void writeLastBoundaryIfNeeds()>();

        $r3 = r0.<com.loopj.android.http.SimpleMultipartEntity: java.io.ByteArrayOutputStream out>;

        $r2 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }
}
