public class hw.ats.common.ds.EntriesParser extends java.lang.Object
{
    private final java.lang.String TAG;

    public void <init>()
    {
        hw.ats.common.ds.EntriesParser r0;

        r0 := @this: hw.ats.common.ds.EntriesParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<hw.ats.common.ds.EntriesParser: java.lang.String TAG> = "EntriesParser";

        return;
    }

    private float getNodeFloatValue(org.w3c.dom.Node)
    {
        hw.ats.common.ds.EntriesParser r0;
        org.w3c.dom.Node $r1;
        float $f0;
        java.lang.String $r2;

        r0 := @this: hw.ats.common.ds.EntriesParser;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r1);

        $f0 = staticinvoke <com.humanwares.util.StringUtil: float floatValue(java.lang.String)>($r2);

        return $f0;
    }

    private int getNodeIntValue(org.w3c.dom.Node)
    {
        hw.ats.common.ds.EntriesParser r0;
        org.w3c.dom.Node $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: hw.ats.common.ds.EntriesParser;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r1);

        $i0 = staticinvoke <com.humanwares.util.StringUtil: int intValue(java.lang.String,int)>($r2, 0);

        return $i0;
    }

    private long getNodeLongValue(org.w3c.dom.Node)
    {
        hw.ats.common.ds.EntriesParser r0;
        org.w3c.dom.Node $r1;
        long $l0;
        java.lang.String $r2;

        r0 := @this: hw.ats.common.ds.EntriesParser;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r2 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r1);

        $l0 = staticinvoke <com.humanwares.util.StringUtil: long longValue(java.lang.String)>($r2);

        return $l0;
    }

    private java.lang.String getNodeValue(org.w3c.dom.Node)
    {
        hw.ats.common.ds.EntriesParser r0;
        org.w3c.dom.Node $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: hw.ats.common.ds.EntriesParser;

        $r1 := @parameter0: org.w3c.dom.Node;

        if $r1 == null goto label2;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if $r2 == null goto label1;

        $r3 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

     label1:
        $r1 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r1 == null goto label3;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if $r2 != null goto label3;

     label2:
        return "";

     label3:
        return $r2;
    }

    private java.util.List parse(java.lang.String, hw.ats.common.util.DBHelper)
    {
        java.net.URL $r12;
        java.util.Date $r25;
        android.database.sqlite.SQLiteDatabase $r26;
        org.w3c.dom.Document $r15;
        hw.ats.common.ds.EntriesParser r0;
        boolean $z0;
        java.lang.Exception $r24;
        float $f0;
        java.lang.StringBuilder $r9;
        javax.xml.parsers.DocumentBuilderFactory $r8;
        hw.ats.common.model.EntryTerm r4;
        hw.ats.common.util.DBHelper $r2;
        long $l6;
        java.util.ArrayList r6;
        short $s3;
        java.lang.StringBuffer r7;
        java.net.URLConnection $r13;
        org.w3c.dom.Node $r18, $r23;
        hw.ats.common.model.EntryImage r3;
        int $i0, $i1, $i2, $i4, $i5;
        org.w3c.dom.NamedNodeMap $r22;
        java.lang.String $r1, $r10;
        hw.ats.common.model.Entry r5;
        org.w3c.dom.NodeList $r17, $r19, $r20, $r21;
        org.w3c.dom.Element $r16;
        javax.xml.parsers.DocumentBuilder $r11;
        java.io.InputStream $r14;

        r0 := @this: hw.ats.common.ds.EntriesParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: hw.ats.common.util.DBHelper;

        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $r8 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r9 = new java.lang.StringBuilder;

     label001:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("urlstring:");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("EntriesParser", $r10);

        $r11 = virtualinvoke $r8.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label002:
        $r12 = new java.net.URL;

     label003:
        specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r13 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>();

        $r14 = virtualinvoke $r13.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        $r15 = virtualinvoke $r11.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r14);

        $r16 = interfaceinvoke $r15.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

     label004:
        $r9 = new java.lang.StringBuilder;

     label005:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nodeName=");

        $r1 = interfaceinvoke $r16.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("EntriesParser", $r1);

        $r17 = interfaceinvoke $r16.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $i0 = interfaceinvoke $r17.<org.w3c.dom.NodeList: int getLength()>();

     label006:
        if $i0 != 0 goto label007;

        return r6;

     label007:
        $i0 = 0;

     label008:
        $i1 = interfaceinvoke $r17.<org.w3c.dom.NodeList: int getLength()>();

     label009:
        if $i0 >= $i1 goto label164;

     label010:
        $r18 = interfaceinvoke $r17.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

        $r19 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

     label011:
        $i1 = 0;

     label012:
        $i2 = interfaceinvoke $r19.<org.w3c.dom.NodeList: int getLength()>();

     label013:
        if $i1 >= $i2 goto label163;

     label014:
        $r18 = interfaceinvoke $r19.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i1);

     label015:
        if $r18 != null goto label017;

     label016:
        $i1 = $i1 + 1;

        goto label012;

     label017:
        $s3 = interfaceinvoke $r18.<org.w3c.dom.Node: short getNodeType()>();

     label018:
        if 1 != $s3 goto label016;

        r5 = new hw.ats.common.model.Entry;

     label019:
        specialinvoke r5.<hw.ats.common.model.Entry: void <init>()>();

        $r20 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

     label020:
        $i2 = 0;

     label021:
        $i4 = interfaceinvoke $r20.<org.w3c.dom.NodeList: int getLength()>();

     label022:
        if $i2 >= $i4 goto label158;

     label023:
        $r18 = interfaceinvoke $r20.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i2);

        $s3 = interfaceinvoke $r18.<org.w3c.dom.Node: short getNodeType()>();

     label024:
        if 1 != $s3 goto label066;

        $r9 = new java.lang.StringBuilder;

     label025:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  getNodeName=");

        $r1 = interfaceinvoke $r18.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("EntriesParser", $r1);

        $r1 = interfaceinvoke $r18.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r21 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

     label026:
        if $r21 == null goto label067;

     label027:
        $r21 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i4 = interfaceinvoke $r21.<org.w3c.dom.NodeList: int getLength()>();

     label028:
        if $i4 <= 1 goto label067;

        $r10 = "image";

     label029:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label030:
        if $z0 == 0 goto label041;

     label031:
        $r21 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

     label032:
        $i4 = 0;

     label033:
        $i5 = interfaceinvoke $r21.<org.w3c.dom.NodeList: int getLength()>();

     label034:
        if $i4 >= $i5 goto label066;

     label035:
        $r18 = interfaceinvoke $r21.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i4);

        $s3 = interfaceinvoke $r18.<org.w3c.dom.Node: short getNodeType()>();

     label036:
        if 1 != $s3 goto label040;

     label037:
        $r1 = interfaceinvoke $r18.<org.w3c.dom.Node: java.lang.String getNodeName()>();

     label038:
        r3 = new hw.ats.common.model.EntryImage;

     label039:
        specialinvoke r3.<hw.ats.common.model.EntryImage: void <init>()>();

        $i5 = r5.<hw.ats.common.model.Entry: int id>;

        r3.<hw.ats.common.model.EntryImage: int entry_id> = $i5;

        $r22 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r23 = interfaceinvoke $r22.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("width");

        $i5 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: int getNodeIntValue(org.w3c.dom.Node)>($r23);

        r3.<hw.ats.common.model.EntryImage: int width> = $i5;

        $r22 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r23 = interfaceinvoke $r22.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("height");

        $i5 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: int getNodeIntValue(org.w3c.dom.Node)>($r23);

        r3.<hw.ats.common.model.EntryImage: int height> = $i5;

        r3.<hw.ats.common.model.EntryImage: java.lang.String type> = $r1;

        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        r3.<hw.ats.common.model.EntryImage: java.lang.String image_url> = $r1;

        virtualinvoke r5.<hw.ats.common.model.Entry: void addImage(hw.ats.common.model.EntryImage)>(r3);

     label040:
        $i4 = $i4 + 1;

        goto label033;

     label041:
        $r10 = "terms";

     label042:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label043:
        if $z0 == 0 goto label054;

     label044:
        $r21 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

     label045:
        $i4 = 0;

     label046:
        $i5 = interfaceinvoke $r21.<org.w3c.dom.NodeList: int getLength()>();

     label047:
        if $i4 >= $i5 goto label066;

     label048:
        $r18 = interfaceinvoke $r21.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i4);

        $s3 = interfaceinvoke $r18.<org.w3c.dom.Node: short getNodeType()>();

     label049:
        if 1 != $s3 goto label053;

     label050:
        $r1 = interfaceinvoke $r18.<org.w3c.dom.Node: java.lang.String getNodeName()>();

     label051:
        r4 = new hw.ats.common.model.EntryTerm;

     label052:
        specialinvoke r4.<hw.ats.common.model.EntryTerm: void <init>()>();

        $i5 = r5.<hw.ats.common.model.Entry: int id>;

        r4.<hw.ats.common.model.EntryTerm: int entry_id> = $i5;

        r4.<hw.ats.common.model.EntryTerm: java.lang.String type> = $r1;

        $r22 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r23 = interfaceinvoke $r22.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("id");

        $i5 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: int getNodeIntValue(org.w3c.dom.Node)>($r23);

        r4.<hw.ats.common.model.EntryTerm: int id> = $i5;

        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        r4.<hw.ats.common.model.EntryTerm: java.lang.String value> = $r1;

        virtualinvoke r5.<hw.ats.common.model.Entry: void addTerm(hw.ats.common.model.EntryTerm)>(r4);

     label053:
        $i4 = $i4 + 1;

        goto label046;

     label054:
        $r10 = "content";

     label055:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label056:
        if $z0 == 0 goto label066;

     label057:
        $r21 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

     label058:
        r7 = new java.lang.StringBuffer;

     label059:
        specialinvoke r7.<java.lang.StringBuffer: void <init>()>();

     label060:
        $i4 = 0;

     label061:
        $i5 = interfaceinvoke $r21.<org.w3c.dom.NodeList: int getLength()>();

     label062:
        if $i4 >= $i5 goto label065;

     label063:
        $r18 = interfaceinvoke $r21.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i4);

        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label064:
        $i4 = $i4 + 1;

        goto label061;

     label065:
        $r1 = virtualinvoke r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r5.<hw.ats.common.model.Entry: java.lang.String content> = $r1;

     label066:
        $i2 = $i2 + 1;

        goto label021;

     label067:
        $r10 = "id";

     label068:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label069:
        if $z0 == 0 goto label073;

     label070:
        $i4 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: int getNodeIntValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: int id> = $i4;

     label071:
        goto label066;

     label072:
        $r24 := @caughtexception;

        virtualinvoke $r24.<java.lang.Exception: void printStackTrace()>();

        return r6;

     label073:
        $r10 = "title";

     label074:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label075:
        if $z0 == 0 goto label078;

     label076:
        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&nbsp;", " ");

        r5.<hw.ats.common.model.Entry: java.lang.String title> = $r1;

     label077:
        goto label066;

     label078:
        $r10 = "category";

     label079:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label080:
        if $z0 == 0 goto label085;

     label081:
        $z0 = interfaceinvoke $r18.<org.w3c.dom.Node: boolean hasAttributes()>();

     label082:
        if $z0 == 0 goto label066;

     label083:
        $r22 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r18 = interfaceinvoke $r22.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("id");

        $i4 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: int getNodeIntValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: int category_id> = $i4;

     label084:
        goto label066;

     label085:
        $r10 = "summary";

     label086:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label087:
        if $z0 == 0 goto label090;

     label088:
        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&nbsp;", " ");

        r5.<hw.ats.common.model.Entry: java.lang.String summary> = $r1;

     label089:
        goto label066;

     label090:
        $r10 = "written";

     label091:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label092:
        if $z0 == 0 goto label097;

        $r25 = new java.util.Date;

     label093:
        $l6 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: long getNodeLongValue(org.w3c.dom.Node)>($r18);

     label094:
        $l6 = $l6 * 1000L;

     label095:
        specialinvoke $r25.<java.util.Date: void <init>(long)>($l6);

        r5.<hw.ats.common.model.Entry: java.util.Date written> = $r25;

     label096:
        goto label066;

     label097:
        $r10 = "author";

     label098:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label099:
        if $z0 == 0 goto label102;

     label100:
        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: java.lang.String author> = $r1;

     label101:
        goto label066;

     label102:
        $r10 = "email";

     label103:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label104:
        if $z0 == 0 goto label107;

     label105:
        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: java.lang.String email> = $r1;

     label106:
        goto label066;

     label107:
        $r10 = "comments";

     label108:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label109:
        if $z0 == 0 goto label112;

     label110:
        $i4 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: int getNodeIntValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: int comments> = $i4;

     label111:
        goto label066;

     label112:
        $r10 = "point_avg";

     label113:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label114:
        if $z0 == 0 goto label117;

     label115:
        $f0 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: float getNodeFloatValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: float point_avg> = $f0;

     label116:
        goto label066;

     label117:
        $r10 = "starred";

     label118:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label119:
        if $z0 == 0 goto label122;

     label120:
        $f0 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: float getNodeFloatValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: float starred> = $f0;

     label121:
        goto label066;

     label122:
        $r10 = "main_image";

     label123:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label124:
        if $z0 == 0 goto label127;

     label125:
        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: java.lang.String main_image> = $r1;

     label126:
        goto label066;

     label127:
        $r10 = "thumbnail";

     label128:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label129:
        if $z0 == 0 goto label143;

     label130:
        $z0 = interfaceinvoke $r18.<org.w3c.dom.Node: boolean hasAttributes()>();

     label131:
        if $z0 == 0 goto label066;

     label132:
        $r22 = interfaceinvoke $r18.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r23 = interfaceinvoke $r22.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("name");

        $r1 = interfaceinvoke $r23.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label133:
        $r10 = "default";

     label134:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label135:
        if $z0 == 0 goto label138;

     label136:
        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: java.lang.String thumb_default> = $r1;

     label137:
        goto label066;

     label138:
        $r10 = "list";

     label139:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label140:
        if $z0 == 0 goto label066;

     label141:
        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: java.lang.String thumb_list> = $r1;

     label142:
        goto label066;

     label143:
        $r10 = "permalink";

     label144:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label145:
        if $z0 == 0 goto label148;

     label146:
        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: java.lang.String permalink> = $r1;

     label147:
        goto label066;

     label148:
        $r10 = "tags";

     label149:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label150:
        if $z0 == 0 goto label153;

     label151:
        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: java.lang.String tags> = $r1;

     label152:
        goto label066;

     label153:
        $r10 = "youtube";

     label154:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label155:
        if $z0 == 0 goto label066;

     label156:
        $r1 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.lang.String getNodeValue(org.w3c.dom.Node)>($r18);

        r5.<hw.ats.common.model.Entry: java.lang.String youtube> = $r1;

     label157:
        goto label066;

     label158:
        $r1 = virtualinvoke r5.<hw.ats.common.model.Entry: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("EntriesParser", $r1);

     label159:
        if $r2 == null goto label161;

     label160:
        $r26 = virtualinvoke $r2.<hw.ats.common.util.DBHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        virtualinvoke r5.<hw.ats.common.model.Entry: void merge(android.database.sqlite.SQLiteDatabase)>($r26);

     label161:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r5);

     label162:
        goto label016;

     label163:
        $i0 = $i0 + 1;

        goto label008;

     label164:
        return r6;

        catch java.lang.Exception from label001 to label002 with label072;
        catch java.lang.Exception from label003 to label004 with label072;
        catch java.lang.Exception from label005 to label006 with label072;
        catch java.lang.Exception from label008 to label009 with label072;
        catch java.lang.Exception from label010 to label011 with label072;
        catch java.lang.Exception from label012 to label013 with label072;
        catch java.lang.Exception from label014 to label015 with label072;
        catch java.lang.Exception from label017 to label018 with label072;
        catch java.lang.Exception from label019 to label020 with label072;
        catch java.lang.Exception from label021 to label022 with label072;
        catch java.lang.Exception from label023 to label024 with label072;
        catch java.lang.Exception from label025 to label026 with label072;
        catch java.lang.Exception from label027 to label028 with label072;
        catch java.lang.Exception from label029 to label030 with label072;
        catch java.lang.Exception from label031 to label032 with label072;
        catch java.lang.Exception from label033 to label034 with label072;
        catch java.lang.Exception from label035 to label036 with label072;
        catch java.lang.Exception from label037 to label038 with label072;
        catch java.lang.Exception from label039 to label040 with label072;
        catch java.lang.Exception from label042 to label043 with label072;
        catch java.lang.Exception from label044 to label045 with label072;
        catch java.lang.Exception from label046 to label047 with label072;
        catch java.lang.Exception from label048 to label049 with label072;
        catch java.lang.Exception from label050 to label051 with label072;
        catch java.lang.Exception from label052 to label053 with label072;
        catch java.lang.Exception from label055 to label056 with label072;
        catch java.lang.Exception from label057 to label058 with label072;
        catch java.lang.Exception from label059 to label060 with label072;
        catch java.lang.Exception from label061 to label062 with label072;
        catch java.lang.Exception from label063 to label064 with label072;
        catch java.lang.Exception from label065 to label066 with label072;
        catch java.lang.Exception from label068 to label069 with label072;
        catch java.lang.Exception from label070 to label071 with label072;
        catch java.lang.Exception from label074 to label075 with label072;
        catch java.lang.Exception from label076 to label077 with label072;
        catch java.lang.Exception from label079 to label080 with label072;
        catch java.lang.Exception from label081 to label082 with label072;
        catch java.lang.Exception from label083 to label084 with label072;
        catch java.lang.Exception from label086 to label087 with label072;
        catch java.lang.Exception from label088 to label089 with label072;
        catch java.lang.Exception from label091 to label092 with label072;
        catch java.lang.Exception from label093 to label094 with label072;
        catch java.lang.Exception from label095 to label096 with label072;
        catch java.lang.Exception from label098 to label099 with label072;
        catch java.lang.Exception from label100 to label101 with label072;
        catch java.lang.Exception from label103 to label104 with label072;
        catch java.lang.Exception from label105 to label106 with label072;
        catch java.lang.Exception from label108 to label109 with label072;
        catch java.lang.Exception from label110 to label111 with label072;
        catch java.lang.Exception from label113 to label114 with label072;
        catch java.lang.Exception from label115 to label116 with label072;
        catch java.lang.Exception from label118 to label119 with label072;
        catch java.lang.Exception from label120 to label121 with label072;
        catch java.lang.Exception from label123 to label124 with label072;
        catch java.lang.Exception from label125 to label126 with label072;
        catch java.lang.Exception from label128 to label129 with label072;
        catch java.lang.Exception from label130 to label131 with label072;
        catch java.lang.Exception from label132 to label133 with label072;
        catch java.lang.Exception from label134 to label135 with label072;
        catch java.lang.Exception from label136 to label137 with label072;
        catch java.lang.Exception from label139 to label140 with label072;
        catch java.lang.Exception from label141 to label142 with label072;
        catch java.lang.Exception from label144 to label145 with label072;
        catch java.lang.Exception from label146 to label147 with label072;
        catch java.lang.Exception from label149 to label150 with label072;
        catch java.lang.Exception from label151 to label152 with label072;
        catch java.lang.Exception from label154 to label155 with label072;
        catch java.lang.Exception from label156 to label157 with label072;
        catch java.lang.Exception from label158 to label159 with label072;
        catch java.lang.Exception from label160 to label162 with label072;
    }

    public void load(java.lang.String, hw.ats.common.util.DBHelper)
    {
        hw.ats.common.util.DBHelper $r2;
        java.lang.String $r1;
        hw.ats.common.ds.EntriesParser r0;

        r0 := @this: hw.ats.common.ds.EntriesParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: hw.ats.common.util.DBHelper;

        specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.util.List parse(java.lang.String,hw.ats.common.util.DBHelper)>($r1, $r2);

        return;
    }

    public java.util.List parse(java.lang.String)
    {
        java.util.List $r2;
        java.lang.String $r1;
        hw.ats.common.ds.EntriesParser r0;

        r0 := @this: hw.ats.common.ds.EntriesParser;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<hw.ats.common.ds.EntriesParser: java.util.List parse(java.lang.String,hw.ats.common.util.DBHelper)>($r1, null);

        return $r2;
    }
}
