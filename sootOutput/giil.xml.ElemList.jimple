public class giil.xml.ElemList extends java.lang.Object
{
    private java.util.Vector a;

    public void <init>(java.util.Vector)
    {
        giil.xml.ElemList r0;
        java.util.Vector $r1;

        r0 := @this: giil.xml.ElemList;

        $r1 := @parameter0: java.util.Vector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<giil.xml.ElemList: java.util.Vector a> = null;

        r0.<giil.xml.ElemList: java.util.Vector a> = $r1;

        return;
    }

    public void clear()
    {
        giil.xml.ElemList r0;
        java.util.Vector $r1;

        r0 := @this: giil.xml.ElemList;

        $r1 = r0.<giil.xml.ElemList: java.util.Vector a>;

        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        return;
    }

    public giil.xml.Element get(int)
    {
        java.util.Vector $r0;
        int $i0;
        giil.xml.ElemList r2;
        java.lang.Object $r1;
        giil.xml.Element r3;

        r2 := @this: giil.xml.ElemList;

        $i0 := @parameter0: int;

        $r0 = r2.<giil.xml.ElemList: java.util.Vector a>;

        $r1 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        r3 = (giil.xml.Element) $r1;

        return r3;
    }

    public void remove(int)
    {
        int $i0;
        giil.xml.ElemList r0;
        java.util.Vector $r1;

        r0 := @this: giil.xml.ElemList;

        $i0 := @parameter0: int;

        $r1 = r0.<giil.xml.ElemList: java.util.Vector a>;

        virtualinvoke $r1.<java.util.Vector: void removeElementAt(int)>($i0);

        return;
    }

    public void removeAll()
    {
        giil.xml.ElemList r0;
        java.util.Vector $r1;

        r0 := @this: giil.xml.ElemList;

        $r1 = r0.<giil.xml.ElemList: java.util.Vector a>;

        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        return;
    }

    public int size()
    {
        int $i0;
        giil.xml.ElemList r0;
        java.util.Vector $r1;

        r0 := @this: giil.xml.ElemList;

        $r1 = r0.<giil.xml.ElemList: java.util.Vector a>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }
}
