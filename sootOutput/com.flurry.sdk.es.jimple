public class com.flurry.sdk.es extends java.lang.Object
{
    private final com.flurry.sdk.ek a;
    private final java.util.HashMap b;
    private final java.util.HashMap c;
    private final java.util.concurrent.ThreadPoolExecutor d;

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        com.flurry.sdk.es r0;

        r0 := @this: com.flurry.sdk.es;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.flurry.sdk.es: void <init>(java.lang.String,int,int)>($r1, 1, 1000);

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        java.util.concurrent.TimeUnit $r2;
        com.flurry.sdk.es r0;
        int $i0, $i1;
        long $l2;
        java.lang.String $r1;
        java.util.concurrent.LinkedBlockingQueue $r3;

        r0 := @this: com.flurry.sdk.es;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $l2 = (long) $i1;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r3 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        specialinvoke r0.<com.flurry.sdk.es: void <init>(java.lang.String,int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>($r1, $i0, $i0, $l2, $r2, $r3);

        return;
    }

    public void <init>(java.lang.String, int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue)
    {
        com.flurry.sdk.es$2 $r8;
        com.flurry.sdk.es$1 $r6;
        java.util.concurrent.ThreadPoolExecutor $r7;
        com.flurry.sdk.ff $r9;
        long $l2;
        java.util.concurrent.BlockingQueue $r3;
        java.util.HashMap $r5;
        java.util.concurrent.TimeUnit $r2;
        com.flurry.sdk.es r0;
        int $i0, $i1;
        java.lang.String $r1;
        com.flurry.sdk.ek $r4;

        r0 := @this: com.flurry.sdk.es;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $l2 := @parameter3: long;

        $r2 := @parameter4: java.util.concurrent.TimeUnit;

        $r3 := @parameter5: java.util.concurrent.BlockingQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new com.flurry.sdk.ek;

        specialinvoke $r4.<com.flurry.sdk.ek: void <init>()>();

        r0.<com.flurry.sdk.es: com.flurry.sdk.ek a> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.flurry.sdk.es: java.util.HashMap b> = $r5;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.flurry.sdk.es: java.util.HashMap c> = $r5;

        $r6 = new com.flurry.sdk.es$1;

        specialinvoke $r6.<com.flurry.sdk.es$1: void <init>(com.flurry.sdk.es,int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>(r0, $i0, $i1, $l2, $r2, $r3);

        r0.<com.flurry.sdk.es: java.util.concurrent.ThreadPoolExecutor d> = $r6;

        $r7 = r0.<com.flurry.sdk.es: java.util.concurrent.ThreadPoolExecutor d>;

        $r8 = new com.flurry.sdk.es$2;

        specialinvoke $r8.<com.flurry.sdk.es$2: void <init>(com.flurry.sdk.es)>(r0);

        virtualinvoke $r7.<java.util.concurrent.ThreadPoolExecutor: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)>($r8);

        $r9 = new com.flurry.sdk.ff;

        specialinvoke $r9.<com.flurry.sdk.ff: void <init>(java.lang.String,int)>($r1, 1);

        $r7 = r0.<com.flurry.sdk.es: java.util.concurrent.ThreadPoolExecutor d>;

        virtualinvoke $r7.<java.util.concurrent.ThreadPoolExecutor: void setThreadFactory(java.util.concurrent.ThreadFactory)>($r9);

        return;
    }

    static java.util.HashMap a(com.flurry.sdk.es)
    {
        java.util.HashMap r1;
        com.flurry.sdk.es $r0;

        $r0 := @parameter0: com.flurry.sdk.es;

        r1 = $r0.<com.flurry.sdk.es: java.util.HashMap c>;

        return r1;
    }

    static void a(com.flurry.sdk.es, com.flurry.sdk.fj)
    {
        com.flurry.sdk.fj $r1;
        com.flurry.sdk.es $r0;

        $r0 := @parameter0: com.flurry.sdk.es;

        $r1 := @parameter1: com.flurry.sdk.fj;

        specialinvoke $r0.<com.flurry.sdk.es: void a(com.flurry.sdk.fj)>($r1);

        return;
    }

    private void a(com.flurry.sdk.fj)
    {
        java.lang.Throwable $r4;
        com.flurry.sdk.fj $r1;
        com.flurry.sdk.es r0;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        r0 := @this: com.flurry.sdk.es;

        $r1 := @parameter0: com.flurry.sdk.fj;

        entermonitor r0;

     label1:
        $r3 = r0.<com.flurry.sdk.es: java.util.HashMap b>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        specialinvoke r0.<com.flurry.sdk.es: void c(java.lang.Object,com.flurry.sdk.fj)>($r2, $r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void b(java.lang.Object, com.flurry.sdk.fj)
    {
        java.lang.Throwable $r5;
        com.flurry.sdk.fj $r2;
        com.flurry.sdk.es r0;
        java.lang.Object $r1;
        java.util.HashMap $r4;
        com.flurry.sdk.ek $r3;

        r0 := @this: com.flurry.sdk.es;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.flurry.sdk.fj;

        entermonitor r0;

     label1:
        $r3 = r0.<com.flurry.sdk.es: com.flurry.sdk.ek a>;

        virtualinvoke $r3.<com.flurry.sdk.ek: void a(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r4 = r0.<com.flurry.sdk.es: java.util.HashMap b>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void c(java.lang.Object, com.flurry.sdk.fj)
    {
        java.lang.Throwable $r5;
        com.flurry.sdk.fj $r2;
        com.flurry.sdk.es r0;
        java.lang.Object $r1;
        java.util.HashMap $r4;
        com.flurry.sdk.ek $r3;

        r0 := @this: com.flurry.sdk.es;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.flurry.sdk.fj;

        entermonitor r0;

     label1:
        $r3 = r0.<com.flurry.sdk.es: com.flurry.sdk.ek a>;

        virtualinvoke $r3.<com.flurry.sdk.ek: boolean b(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r4 = r0.<com.flurry.sdk.es: java.util.HashMap b>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long a(java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.util.List $r3;
        com.flurry.sdk.es r0;
        int $i1;
        java.lang.Object $r1;
        long $l0;
        com.flurry.sdk.ek $r2;

        r0 := @this: com.flurry.sdk.es;

        $r1 := @parameter0: java.lang.Object;

        $l0 = 0L;

        entermonitor r0;

        if $r1 != null goto label2;

     label1:
        exitmonitor r0;

        return $l0;

     label2:
        $r2 = r0.<com.flurry.sdk.es: com.flurry.sdk.ek a>;

        $r3 = virtualinvoke $r2.<com.flurry.sdk.ek: java.util.List a(java.lang.Object)>($r1);

        if $r3 == null goto label1;

        $i1 = interfaceinvoke $r3.<java.util.Collection: int size()>();

     label3:
        $l0 = (long) $i1;

        goto label1;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void a(java.lang.Object, com.flurry.sdk.fj)
    {
        java.lang.Throwable $r4;
        com.flurry.sdk.fj $r2;
        com.flurry.sdk.es r0;
        java.util.concurrent.ThreadPoolExecutor $r3;
        java.lang.Object $r1;

        r0 := @this: com.flurry.sdk.es;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: com.flurry.sdk.fj;

        entermonitor r0;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        exitmonitor r0;

        return;

     label2:
        specialinvoke r0.<com.flurry.sdk.es: void b(java.lang.Object,com.flurry.sdk.fj)>($r1, $r2);

        $r3 = r0.<com.flurry.sdk.es: java.util.concurrent.ThreadPoolExecutor d>;

        virtualinvoke $r3.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>($r2);

     label3:
        goto label1;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
    }
}
