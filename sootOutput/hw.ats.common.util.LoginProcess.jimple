public class hw.ats.common.util.LoginProcess extends java.lang.Object
{
    private static final java.lang.String AuthFileName;
    private static final java.lang.String AuthTimeFileName;
    private static java.lang.String Auth_APIKEY;
    private static boolean Auth_AUTOLOGIN;
    private static java.lang.String Auth_EMAIL;
    private static java.lang.String Auth_FACEBOOK;
    private static java.lang.String Auth_ID;
    private static java.lang.String Auth_NICKNAME;
    private static java.lang.String Auth_PASSWORD;
    private static java.lang.String Auth_PHONE_ID;
    private static java.lang.String Auth_PHONE_NUMBER;
    private static java.lang.String Auth_TWITTER;
    private static boolean Auth_isLOGIN;
    private static long Last_Answer_Time;
    private static long Last_Comment_Time;
    private static long Last_Question_Time;
    private static final java.lang.String SDCardAuthPath;
    public static java.lang.String TAG;
    public static final int TYPE_ANSWER;
    public static final int TYPE_COMMENT;
    public static final int TYPE_QUESTION;
    private static final java.lang.String initialVectorParam;
    private static boolean isFirstAutoLogin;
    private static final java.lang.String keyString;

    static void <clinit>()
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        java.io.File $r1;

        <hw.ats.common.util.LoginProcess: java.lang.String keyString> = "e0bc07309117e29c";

        <hw.ats.common.util.LoginProcess: java.lang.String initialVectorParam> = "26c7d1d265142de0";

        <hw.ats.common.util.LoginProcess: int TYPE_QUESTION> = 3;

        <hw.ats.common.util.LoginProcess: int TYPE_COMMENT> = 1;

        <hw.ats.common.util.LoginProcess: int TYPE_ANSWER> = 2;

        <hw.ats.common.util.LoginProcess: java.lang.String AuthTimeFileName> = "allthatAuthTime.db";

        <hw.ats.common.util.LoginProcess: java.lang.String AuthFileName> = "allthatAuth.db";

        <hw.ats.common.util.LoginProcess: java.lang.String TAG> = "LoginProcess";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.allthat");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        <hw.ats.common.util.LoginProcess: java.lang.String SDCardAuthPath> = $r2;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID> = null;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_EMAIL> = null;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_NICKNAME> = null;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_ID> = null;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_TWITTER> = null;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_FACEBOOK> = null;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_NUMBER> = null;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PASSWORD> = null;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_APIKEY> = null;

        <hw.ats.common.util.LoginProcess: boolean Auth_AUTOLOGIN> = 0;

        <hw.ats.common.util.LoginProcess: long Last_Comment_Time> = 0L;

        <hw.ats.common.util.LoginProcess: long Last_Answer_Time> = 0L;

        <hw.ats.common.util.LoginProcess: long Last_Question_Time> = 0L;

        <hw.ats.common.util.LoginProcess: boolean isFirstAutoLogin> = 0;

        <hw.ats.common.util.LoginProcess: boolean Auth_isLOGIN> = 0;

        return;
    }

    public void <init>()
    {
        hw.ats.common.util.LoginProcess r0;

        r0 := @this: hw.ats.common.util.LoginProcess;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void LogOut()
    {
        java.lang.String $r1;
        java.io.File r0;
        boolean $z0;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID> = "";

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_EMAIL> = "";

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_NICKNAME> = "";

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_ID> = "";

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_TWITTER> = "";

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_FACEBOOK> = "";

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_NUMBER> = "";

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PASSWORD> = "";

        <hw.ats.common.util.LoginProcess: boolean Auth_AUTOLOGIN> = 0;

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_APIKEY> = "";

        <hw.ats.common.util.LoginProcess: boolean Auth_isLOGIN> = 0;

        r0 = new java.io.File;

        $r1 = <hw.ats.common.util.LoginProcess: java.lang.String SDCardAuthPath>;

        specialinvoke r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r1, "allthatAuth.db");

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    public static java.lang.String byte2Hex(byte)
    {
        short s2;
        byte $b0;
        int i1;
        java.lang.String[] r0;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        $b0 := @parameter0: byte;

        r0 = newarray (java.lang.String)[16];

        r0[0] = "0";

        r0[1] = "1";

        r0[2] = "2";

        r0[3] = "3";

        r0[4] = "4";

        r0[5] = "5";

        r0[6] = "6";

        r0[7] = "7";

        r0[8] = "8";

        r0[9] = "9";

        r0[10] = "a";

        r0[11] = "b";

        r0[12] = "c";

        r0[13] = "d";

        r0[14] = "e";

        r0[15] = "f";

        s2 = (short) $b0;

        s2 = s2 & 255;

        i1 = (int) s2;

        i1 = i1 >> 4;

        i1 = i1 & 15;

        s2 = s2 & 15;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0[i1];

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        i1 = (int) s2;

        $r2 = r0[i1];

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String bytes2Hex(byte[])
    {
        byte[] $r0;
        byte $b2;
        java.lang.StringBuffer r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        r1 = new java.lang.StringBuffer;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label2;

        $b2 = $r0[$i0];

        $r2 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String byte2Hex(byte)>($b2);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static long getAnswerTime()
    {
        long l0;

        l0 = <hw.ats.common.util.LoginProcess: long Last_Answer_Time>;

        return l0;
    }

    public static long getCommentTime()
    {
        long l0;

        l0 = <hw.ats.common.util.LoginProcess: long Last_Comment_Time>;

        return l0;
    }

    public static java.lang.String getDecrypt(java.lang.String)
    {
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, $r12;
        byte[] $r4, $r6;
        javax.crypto.spec.SecretKeySpec r2, $r13;
        javax.crypto.Cipher $r5;
        java.security.InvalidAlgorithmParameterException $r20;
        javax.crypto.spec.IvParameterSpec r1, $r14;
        javax.crypto.NoSuchPaddingException $r18;
        java.lang.String $r0, $r3;
        javax.crypto.IllegalBlockSizeException $r15;
        javax.crypto.BadPaddingException $r16;
        java.security.NoSuchAlgorithmException $r17;
        java.security.InvalidKeyException $r19;

        $r0 := @parameter0: java.lang.String;

        $r13 = new javax.crypto.spec.SecretKeySpec;

        r2 = $r13;

        $r3 = "e0bc07309117e29c";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, "AES");

        $r14 = new javax.crypto.spec.IvParameterSpec;

        r1 = $r14;

        $r3 = "26c7d1d265142de0";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

        $r4 = null;

     label1:
        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CFB8/NoPadding");

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, r2, r1);

        $r6 = staticinvoke <hw.ats.common.util.LoginProcess: byte[] hex2byte(java.lang.String)>($r0);

        $r6 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

     label2:
        $r4 = $r6;

     label3:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r4);

        return $r3;

     label4:
        $r7 := @caughtexception;

        $r15 = (javax.crypto.IllegalBlockSizeException) $r7;

        virtualinvoke $r15.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        goto label3;

     label5:
        $r8 := @caughtexception;

        $r16 = (javax.crypto.BadPaddingException) $r8;

        virtualinvoke $r16.<javax.crypto.BadPaddingException: void printStackTrace()>();

        goto label3;

     label6:
        $r9 := @caughtexception;

        $r17 = (java.security.NoSuchAlgorithmException) $r9;

        virtualinvoke $r17.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label3;

     label7:
        $r10 := @caughtexception;

        $r18 = (javax.crypto.NoSuchPaddingException) $r10;

        virtualinvoke $r18.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label3;

     label8:
        $r11 := @caughtexception;

        $r19 = (java.security.InvalidKeyException) $r11;

        virtualinvoke $r19.<java.security.InvalidKeyException: void printStackTrace()>();

        goto label3;

     label9:
        $r12 := @caughtexception;

        $r20 = (java.security.InvalidAlgorithmParameterException) $r12;

        virtualinvoke $r20.<java.security.InvalidAlgorithmParameterException: void printStackTrace()>();

        goto label3;

        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label4;
        catch javax.crypto.BadPaddingException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label1 to label2 with label8;
        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label9;
    }

    public static java.lang.String getEncrypt(java.lang.String)
    {
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, $r11;
        byte[] $r4;
        javax.crypto.spec.SecretKeySpec r2, $r12;
        javax.crypto.Cipher $r5;
        java.security.InvalidAlgorithmParameterException $r19;
        javax.crypto.spec.IvParameterSpec r1, $r13;
        javax.crypto.NoSuchPaddingException $r17;
        java.lang.String $r0, $r3;
        javax.crypto.IllegalBlockSizeException $r14;
        javax.crypto.BadPaddingException $r15;
        java.security.NoSuchAlgorithmException $r16;
        java.security.InvalidKeyException $r18;

        $r0 := @parameter0: java.lang.String;

        $r12 = new javax.crypto.spec.SecretKeySpec;

        r2 = $r12;

        $r3 = "e0bc07309117e29c";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, "AES");

        $r13 = new javax.crypto.spec.IvParameterSpec;

        r1 = $r13;

        $r3 = "26c7d1d265142de0";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

     label1:
        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CFB8/NoPadding");

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, r2, r1);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        $r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String bytes2Hex(byte[])>($r4);

     label2:
        return $r0;

     label3:
        $r6 := @caughtexception;

        $r14 = (javax.crypto.IllegalBlockSizeException) $r6;

        virtualinvoke $r14.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        return null;

     label4:
        $r7 := @caughtexception;

        $r15 = (javax.crypto.BadPaddingException) $r7;

        virtualinvoke $r15.<javax.crypto.BadPaddingException: void printStackTrace()>();

        return null;

     label5:
        $r8 := @caughtexception;

        $r16 = (java.security.NoSuchAlgorithmException) $r8;

        virtualinvoke $r16.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return null;

     label6:
        $r9 := @caughtexception;

        $r17 = (javax.crypto.NoSuchPaddingException) $r9;

        virtualinvoke $r17.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        return null;

     label7:
        $r10 := @caughtexception;

        $r18 = (java.security.InvalidKeyException) $r10;

        virtualinvoke $r18.<java.security.InvalidKeyException: void printStackTrace()>();

        return null;

     label8:
        $r11 := @caughtexception;

        $r19 = (java.security.InvalidAlgorithmParameterException) $r11;

        virtualinvoke $r19.<java.security.InvalidAlgorithmParameterException: void printStackTrace()>();

        return null;

        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label3;
        catch javax.crypto.BadPaddingException from label1 to label2 with label4;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label8;
    }

    public static boolean getFirstLogin()
    {
        boolean $z0;

        $z0 = <hw.ats.common.util.LoginProcess: boolean isFirstAutoLogin>;

        if $z0 != 1 goto label1;

        <hw.ats.common.util.LoginProcess: boolean isFirstAutoLogin> = 0;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String getID()
    {
        java.lang.String $r0;

        $r0 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID>;

        if $r0 != null goto label1;

        staticinvoke <hw.ats.common.util.LoginProcess: void loadAuthInfo()>();

     label1:
        $r0 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID>;

        return $r0;
    }

    public static java.lang.String getNAME()
    {
        java.lang.String $r0;

        $r0 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_NICKNAME>;

        if $r0 != null goto label1;

        staticinvoke <hw.ats.common.util.LoginProcess: void loadAuthInfo()>();

     label1:
        $r0 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_NICKNAME>;

        return $r0;
    }

    public static java.lang.String getPW()
    {
        java.lang.String $r0;

        $r0 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_PASSWORD>;

        if $r0 != null goto label1;

        staticinvoke <hw.ats.common.util.LoginProcess: void loadAuthInfo()>();

     label1:
        $r0 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_PASSWORD>;

        return $r0;
    }

    public static long getQuestionTime()
    {
        long l0;

        l0 = <hw.ats.common.util.LoginProcess: long Last_Question_Time>;

        return l0;
    }

    public static java.lang.String getSessionInfo()
    {
        java.lang.StringBuilder r0, $r1;
        java.lang.String $r2;

        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id=");

        $r2 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("email=");

        $r2 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_EMAIL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nickname=");

        $r2 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_NICKNAME>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phone_id=");

        $r2 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_ID>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("twitter=");

        $r2 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_TWITTER>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("facebook=");

        $r2 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_FACEBOOK>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phone_number=");

        $r2 = <hw.ats.common.util.DataLoader: java.lang.String PHONE_NUMBER>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String getTwitter()
    {
        java.lang.String r0;

        r0 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_TWITTER>;

        return r0;
    }

    public static void gotoLogin(android.app.Activity)
    {
        android.content.Intent r1;
        android.app.Activity $r0;

        $r0 := @parameter0: android.app.Activity;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "Lhw/ats/module/activity/dict/MyAct;");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("URL", 100);

        virtualinvoke $r0.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>(r1, 1001);

        return;
    }

    private static byte[] hex2byte(java.lang.String)
    {
        byte[] r1;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i0 % 2;

        if $i1 != 1 goto label2;

        return null;

     label2:
        $i1 = $i0 / 2;

        r1 = newarray (byte)[$i1];

        $i1 = 0;

     label3:
        $i2 = $i0 / 2;

        if $i1 >= $i2 goto label4;

        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        $b4 = (byte) $i2;

        r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return r1;
    }

    public static boolean isLogin()
    {
        java.lang.String $r1;
        java.io.File r0;
        boolean $z0;

        $z0 = <hw.ats.common.util.LoginProcess: boolean Auth_isLOGIN>;

        if $z0 != 1 goto label1;

        return 1;

     label1:
        r0 = new java.io.File;

        $r1 = <hw.ats.common.util.LoginProcess: java.lang.String SDCardAuthPath>;

        specialinvoke r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r1, "allthatAuth.db");

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        staticinvoke <hw.ats.common.util.LoginProcess: void loadAuthInfo()>();

        $z0 = <hw.ats.common.util.LoginProcess: boolean Auth_AUTOLOGIN>;

        if $z0 != 1 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static void loadAuthInfo()
    {
        java.lang.Throwable $r6;
        byte[] r1;
        long $l0;
        java.lang.String[] $r5;
        java.io.IOException $r9;
        java.io.FileInputStream r3, $r7;
        java.io.File r2, $r4;
        int $i1;
        java.lang.String r0, $r8;
        boolean $z0;

        $r4 = new java.io.File;

        r2 = $r4;

        r0 = <hw.ats.common.util.LoginProcess: java.lang.String SDCardAuthPath>;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r0, "allthatAuth.db");

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label29;

        $r7 = new java.io.FileInputStream;

        r3 = $r7;

     label01:
        $r4 = virtualinvoke r2.<java.io.File: java.io.File getAbsoluteFile()>();

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r4);

        $l0 = virtualinvoke r2.<java.io.File: long length()>();

     label02:
        $i1 = (int) $l0;

        r1 = newarray (byte)[$i1];

     label03:
        virtualinvoke r3.<java.io.FileInputStream: int read(byte[])>(r1);

        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label04:
        $r8 = new java.lang.String;

        r0 = $r8;

     label05:
        specialinvoke $r8.<java.lang.String: void <init>(byte[])>(r1);

        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

     label06:
        r0 = $r5[0];

     label07:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

     label08:
        <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID> = r0;

        r0 = $r5[1];

     label09:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

     label10:
        <hw.ats.common.util.LoginProcess: java.lang.String Auth_EMAIL> = r0;

        r0 = $r5[2];

     label11:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

     label12:
        <hw.ats.common.util.LoginProcess: java.lang.String Auth_NICKNAME> = r0;

        r0 = $r5[3];

     label13:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

     label14:
        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_ID> = r0;

        r0 = $r5[4];

     label15:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

     label16:
        <hw.ats.common.util.LoginProcess: java.lang.String Auth_TWITTER> = r0;

        r0 = $r5[5];

     label17:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

     label18:
        <hw.ats.common.util.LoginProcess: java.lang.String Auth_FACEBOOK> = r0;

        r0 = $r5[6];

     label19:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

     label20:
        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_NUMBER> = r0;

        r0 = $r5[7];

     label21:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

     label22:
        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PASSWORD> = r0;

        r0 = $r5[8];

     label23:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

        $z0 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>(r0);

     label24:
        <hw.ats.common.util.LoginProcess: boolean Auth_AUTOLOGIN> = $z0;

        r0 = $r5[9];

     label25:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

     label26:
        <hw.ats.common.util.LoginProcess: java.lang.String Auth_APIKEY> = r0;

        <hw.ats.common.util.LoginProcess: boolean Auth_isLOGIN> = 1;

        <hw.ats.common.util.LoginProcess: boolean isFirstAutoLogin> = 1;

     label27:
        staticinvoke <hw.ats.common.util.LoginProcess: void loadAuthTimeInfo()>();

        return;

     label28:
        $r6 := @caughtexception;

        $r9 = (java.io.IOException) $r6;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

        goto label27;

     label29:
        return;

        catch java.io.IOException from label01 to label02 with label28;
        catch java.io.IOException from label03 to label04 with label28;
        catch java.io.IOException from label05 to label06 with label28;
        catch java.io.IOException from label07 to label08 with label28;
        catch java.io.IOException from label09 to label10 with label28;
        catch java.io.IOException from label11 to label12 with label28;
        catch java.io.IOException from label13 to label14 with label28;
        catch java.io.IOException from label15 to label16 with label28;
        catch java.io.IOException from label17 to label18 with label28;
        catch java.io.IOException from label19 to label20 with label28;
        catch java.io.IOException from label21 to label22 with label28;
        catch java.io.IOException from label23 to label24 with label28;
        catch java.io.IOException from label25 to label26 with label28;
    }

    private static void loadAuthTimeInfo()
    {
        java.lang.Throwable $r8;
        byte[] r1;
        long $l0;
        java.lang.String[] $r5;
        java.io.IOException $r10;
        java.io.FileInputStream r3, $r9;
        java.io.File r2, $r4;
        java.lang.Long $r7;
        int $i1;
        java.lang.String r0, $r6;
        boolean $z0;

        $r4 = new java.io.File;

        r2 = $r4;

        r0 = <hw.ats.common.util.LoginProcess: java.lang.String SDCardAuthPath>;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r0, "allthatAuthTime.db");

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label18;

        $r9 = new java.io.FileInputStream;

        r3 = $r9;

     label01:
        $r4 = virtualinvoke r2.<java.io.File: java.io.File getAbsoluteFile()>();

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>($r4);

        $l0 = virtualinvoke r2.<java.io.File: long length()>();

     label02:
        $i1 = (int) $l0;

        r1 = newarray (byte)[$i1];

     label03:
        virtualinvoke r3.<java.io.FileInputStream: int read(byte[])>(r1);

        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label04:
        $r6 = new java.lang.String;

        r0 = $r6;

     label05:
        specialinvoke $r6.<java.lang.String: void <init>(byte[])>(r1);

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

     label06:
        r0 = $r5[0];

     label07:
        r0 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r0);

     label08:
        $r6 = $r5[1];

     label09:
        $r6 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>($r6);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r6);

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

     label10:
        <hw.ats.common.util.LoginProcess: long Last_Comment_Time> = $l0;

        $r6 = $r5[2];

     label11:
        $r6 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>($r6);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r6);

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

     label12:
        <hw.ats.common.util.LoginProcess: long Last_Answer_Time> = $l0;

        $r6 = $r5[3];

     label13:
        $r6 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>($r6);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r6);

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

     label14:
        <hw.ats.common.util.LoginProcess: long Last_Question_Time> = $l0;

        $r6 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID>;

     label15:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label16:
        if $z0 == 0 goto label18;

        return;

     label17:
        $r8 := @caughtexception;

        $r10 = (java.io.IOException) $r8;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

     label18:
        <hw.ats.common.util.LoginProcess: long Last_Comment_Time> = 0L;

        <hw.ats.common.util.LoginProcess: long Last_Answer_Time> = 0L;

        <hw.ats.common.util.LoginProcess: long Last_Question_Time> = 0L;

        return;

        catch java.io.IOException from label01 to label02 with label17;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.io.IOException from label05 to label06 with label17;
        catch java.io.IOException from label07 to label08 with label17;
        catch java.io.IOException from label09 to label10 with label17;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.io.IOException from label13 to label14 with label17;
        catch java.io.IOException from label15 to label16 with label17;
    }

    public static void saveAuth(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        java.lang.Throwable r15;
        byte[] $r14;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r7, r8, r9, $r10;
        boolean $z0;
        java.io.FileOutputStream r13, $r18;
        java.io.IOException $r19;
        java.io.File r6, r12, $r17;
        java.lang.StringBuilder r11, $r16;

        r8 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        $r10 := @parameter2: java.lang.String;

        $r0 := @parameter3: java.lang.String;

        $r1 := @parameter4: java.lang.String;

        $r2 := @parameter5: java.lang.String;

        $r3 := @parameter6: java.lang.String;

        $r4 := @parameter7: java.lang.String;

        $z0 := @parameter8: boolean;

        $r5 := @parameter9: java.lang.String;

        r12 = new java.io.File;

        r6 = r12;

        $r7 = <hw.ats.common.util.LoginProcess: java.lang.String SDCardAuthPath>;

        specialinvoke r12.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r7, "allthatAuth.db");

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r8);

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID> = r8;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>(r9);

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_EMAIL> = r8;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>($r10);

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_NICKNAME> = r8;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>($r0);

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_ID> = r8;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>($r1);

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_TWITTER> = r8;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>($r2);

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_FACEBOOK> = r8;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>($r3);

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_NUMBER> = r8;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>($r4);

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_PASSWORD> = r8;

        <hw.ats.common.util.LoginProcess: boolean Auth_AUTOLOGIN> = $z0;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getDecrypt(java.lang.String)>($r5);

        <hw.ats.common.util.LoginProcess: java.lang.String Auth_APIKEY> = r8;

        <hw.ats.common.util.LoginProcess: boolean Auth_isLOGIN> = 1;

        r8 = <hw.ats.common.util.LoginProcess: java.lang.String TAG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        r11 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("autoLogin = ");

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        r9 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r8, r9);

        if $z0 != 1 goto label13;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        r8 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID>;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        r11 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r8 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_EMAIL>;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r8 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_NICKNAME>;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r8 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_ID>;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r8 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_TWITTER>;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r8 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_FACEBOOK>;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r8 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_PHONE_NUMBER>;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r8 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_PASSWORD>;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $z0 = <hw.ats.common.util.LoginProcess: boolean Auth_AUTOLOGIN>;

        r8 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r8 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_APIKEY>;

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        r11 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r8 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r8);

        $r17 = new java.io.File;

        r12 = $r17;

        r9 = <hw.ats.common.util.LoginProcess: java.lang.String SDCardAuthPath>;

     label01:
        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>(r9);

        $z0 = virtualinvoke r6.<java.io.File: boolean exists()>();

     label02:
        if $z0 == 0 goto label08;

     label03:
        virtualinvoke r6.<java.io.File: boolean delete()>();

     label04:
        virtualinvoke r6.<java.io.File: boolean createNewFile()>();

     label05:
        $r18 = new java.io.FileOutputStream;

        r13 = $r18;

     label06:
        r9 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.lang.String)>(r9);

        $r14 = virtualinvoke r8.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r13.<java.io.FileOutputStream: void write(byte[])>($r14);

        virtualinvoke r13.<java.io.FileOutputStream: void close()>();

     label07:
        return;

     label08:
        $z0 = virtualinvoke r12.<java.io.File: boolean exists()>();

     label09:
        if $z0 != 0 goto label04;

     label10:
        virtualinvoke r12.<java.io.File: boolean mkdir()>();

     label11:
        goto label04;

     label12:
        r15 := @caughtexception;

        $r19 = (java.io.IOException) r15;

        virtualinvoke $r19.<java.io.IOException: void printStackTrace()>();

        return;

     label13:
        $z0 = virtualinvoke r6.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label14;

        virtualinvoke r6.<java.io.File: boolean delete()>();

     label14:
        return;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.io.IOException from label10 to label11 with label12;
    }

    public static void saveAuthTimeInfo(long, int)
    {
        java.lang.Throwable $r10;
        byte[] $r9;
        long $l0;
        int $i1;
        java.lang.String r3, $r4, $r5, $r6, $r7, $r12;
        boolean $z0;
        java.io.FileOutputStream r2, $r14;
        java.io.IOException $r15;
        java.io.File r0, r1, $r13;
        java.lang.StringBuilder $r8, $r11;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        r0 = new java.io.File;

        r1 = r0;

        r3 = <hw.ats.common.util.LoginProcess: java.lang.String SDCardAuthPath>;

        specialinvoke r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r3, "allthatAuthTime.db");

        lookupswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            default: goto label01;
        };

     label01:
        r3 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID>;

        if r3 != "" goto label05;

        return;

     label02:
        <hw.ats.common.util.LoginProcess: long Last_Comment_Time> = $l0;

        goto label01;

     label03:
        <hw.ats.common.util.LoginProcess: long Last_Answer_Time> = $l0;

        goto label01;

     label04:
        <hw.ats.common.util.LoginProcess: long Last_Question_Time> = $l0;

        goto label01;

     label05:
        r3 = <hw.ats.common.util.LoginProcess: java.lang.String Auth_ID>;

        $r4 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r3);

        $l0 = <hw.ats.common.util.LoginProcess: long Last_Comment_Time>;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r5 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r3);

        $l0 = <hw.ats.common.util.LoginProcess: long Last_Answer_Time>;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r6 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r3);

        $l0 = <hw.ats.common.util.LoginProcess: long Last_Question_Time>;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r7 = staticinvoke <hw.ats.common.util.LoginProcess: java.lang.String getEncrypt(java.lang.String)>(r3);

        $r12 = new java.lang.String;

        r3 = $r12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.String: void <init>(java.lang.String)>($r4);

        $r13 = new java.io.File;

        r0 = $r13;

        $r4 = <hw.ats.common.util.LoginProcess: java.lang.String SDCardAuthPath>;

     label06:
        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

     label07:
        if $z0 == 0 goto label14;

     label08:
        virtualinvoke r1.<java.io.File: boolean delete()>();

     label09:
        virtualinvoke r1.<java.io.File: boolean createNewFile()>();

     label10:
        $r14 = new java.io.FileOutputStream;

        r2 = $r14;

     label11:
        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.lang.String)>($r4);

        $r9 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r2.<java.io.FileOutputStream: void write(byte[])>($r9);

        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label12:
        return;

     label13:
        $r10 := @caughtexception;

        $r15 = (java.io.IOException) $r10;

        virtualinvoke $r15.<java.io.IOException: void printStackTrace()>();

        return;

     label14:
        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

     label15:
        if $z0 != 0 goto label09;

     label16:
        virtualinvoke r0.<java.io.File: boolean mkdir()>();

     label17:
        goto label09;

        catch java.io.IOException from label06 to label07 with label13;
        catch java.io.IOException from label08 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label14 to label15 with label13;
        catch java.io.IOException from label16 to label17 with label13;
    }
}
