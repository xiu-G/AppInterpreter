public final class com.google.mygson.internal.bind.JsonTreeReader extends com.google.mygson.stream.JsonReader
{
    private static final java.lang.Object SENTINEL_CLOSED;
    private static final java.io.Reader UNREADABLE_READER;
    private final java.util.List stack;

    static void <clinit>()
    {
        java.lang.Object $r1;
        com.google.mygson.internal.bind.JsonTreeReader$1 $r0;

        $r0 = new com.google.mygson.internal.bind.JsonTreeReader$1;

        specialinvoke $r0.<com.google.mygson.internal.bind.JsonTreeReader$1: void <init>()>();

        <com.google.mygson.internal.bind.JsonTreeReader: java.io.Reader UNREADABLE_READER> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object SENTINEL_CLOSED> = $r1;

        return;
    }

    public void <init>(com.google.mygson.JsonElement)
    {
        java.util.List $r4;
        com.google.mygson.JsonElement $r1;
        java.io.Reader $r2;
        com.google.mygson.internal.bind.JsonTreeReader r0;
        java.util.ArrayList $r3;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 := @parameter0: com.google.mygson.JsonElement;

        $r2 = <com.google.mygson.internal.bind.JsonTreeReader: java.io.Reader UNREADABLE_READER>;

        specialinvoke r0.<com.google.mygson.stream.JsonReader: void <init>(java.io.Reader)>($r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack> = $r3;

        $r4 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    private void expect(com.google.mygson.stream.JsonToken) throws java.io.IOException
    {
        java.lang.IllegalStateException $r3;
        com.google.mygson.stream.JsonToken $r1, $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 := @parameter0: com.google.mygson.stream.JsonToken;

        $r2 = virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: com.google.mygson.stream.JsonToken peek()>();

        if $r2 == $r1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r1 = virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: com.google.mygson.stream.JsonToken peek()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        return;
    }

    private java.lang.Object peekStack()
    {
        java.util.List $r1, $r2;
        int $i0;
        java.lang.Object $r3;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $r2 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        return $r3;
    }

    private java.lang.Object popStack()
    {
        java.util.List $r1, $r2;
        int $i0;
        java.lang.Object $r3;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $r2 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        return $r3;
    }

    public void beginArray() throws java.io.IOException
    {
        java.util.List $r4;
        com.google.mygson.stream.JsonToken $r1;
        java.util.Iterator $r5;
        com.google.mygson.JsonArray r3;
        java.lang.Object $r2;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken BEGIN_ARRAY>;

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: void expect(com.google.mygson.stream.JsonToken)>($r1);

        $r2 = specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>();

        r3 = (com.google.mygson.JsonArray) $r2;

        $r4 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $r5 = virtualinvoke r3.<com.google.mygson.JsonArray: java.util.Iterator iterator()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;
    }

    public void beginObject() throws java.io.IOException
    {
        java.util.List $r4;
        com.google.mygson.stream.JsonToken $r1;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.lang.Object $r2;
        com.google.mygson.JsonObject r3;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken BEGIN_OBJECT>;

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: void expect(com.google.mygson.stream.JsonToken)>($r1);

        $r2 = specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>();

        r3 = (com.google.mygson.JsonObject) $r2;

        $r4 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $r5 = virtualinvoke r3.<com.google.mygson.JsonObject: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Object $r1;
        java.util.List $r2;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r2 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r2 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $r1 = <com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object SENTINEL_CLOSED>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void endArray() throws java.io.IOException
    {
        com.google.mygson.stream.JsonToken $r1;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken END_ARRAY>;

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: void expect(com.google.mygson.stream.JsonToken)>($r1);

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        return;
    }

    public void endObject() throws java.io.IOException
    {
        com.google.mygson.stream.JsonToken $r1;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken END_OBJECT>;

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: void expect(com.google.mygson.stream.JsonToken)>($r1);

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        return;
    }

    public boolean hasNext() throws java.io.IOException
    {
        com.google.mygson.stream.JsonToken $r1, $r2;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: com.google.mygson.stream.JsonToken peek()>();

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken END_OBJECT>;

        if $r1 == $r2 goto label1;

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken END_ARRAY>;

        if $r1 == $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean nextBoolean() throws java.io.IOException
    {
        com.google.mygson.stream.JsonToken $r1;
        java.lang.Object $r2;
        com.google.mygson.JsonPrimitive $r3;
        com.google.mygson.internal.bind.JsonTreeReader r0;
        boolean $z0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken BOOLEAN>;

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: void expect(com.google.mygson.stream.JsonToken)>($r1);

        $r2 = specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        $r3 = (com.google.mygson.JsonPrimitive) $r2;

        $z0 = virtualinvoke $r3.<com.google.mygson.JsonPrimitive: boolean getAsBoolean()>();

        return $z0;
    }

    public double nextDouble() throws java.io.IOException
    {
        java.lang.IllegalStateException $r3;
        com.google.mygson.stream.JsonToken $r1, $r2;
        com.google.mygson.JsonPrimitive $r7;
        java.lang.NumberFormatException $r8;
        com.google.mygson.internal.bind.JsonTreeReader r0;
        java.lang.StringBuilder $r4;
        java.lang.Object $r6;
        java.lang.String $r5;
        double $d0;
        boolean $z0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: com.google.mygson.stream.JsonToken peek()>();

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NUMBER>;

        if $r1 == $r2 goto label1;

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken STRING>;

        if $r1 == $r2 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NUMBER>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r6 = specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>();

        $r7 = (com.google.mygson.JsonPrimitive) $r6;

        $d0 = virtualinvoke $r7.<com.google.mygson.JsonPrimitive: double getAsDouble()>();

        $z0 = virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: boolean isLenient()>();

        if $z0 != 0 goto label3;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 == 0 goto label3;

     label2:
        $r8 = new java.lang.NumberFormatException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSON forbids NaN and infinities: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label3:
        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        return $d0;
    }

    public int nextInt() throws java.io.IOException
    {
        java.lang.IllegalStateException $r3;
        com.google.mygson.stream.JsonToken $r1, $r2;
        com.google.mygson.JsonPrimitive $r7;
        com.google.mygson.internal.bind.JsonTreeReader r0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.Object $r6;
        java.lang.String $r5;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: com.google.mygson.stream.JsonToken peek()>();

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NUMBER>;

        if $r1 == $r2 goto label1;

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken STRING>;

        if $r1 == $r2 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NUMBER>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r6 = specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>();

        $r7 = (com.google.mygson.JsonPrimitive) $r6;

        $i0 = virtualinvoke $r7.<com.google.mygson.JsonPrimitive: int getAsInt()>();

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        return $i0;
    }

    public long nextLong() throws java.io.IOException
    {
        java.lang.IllegalStateException $r3;
        com.google.mygson.stream.JsonToken $r1, $r2;
        com.google.mygson.JsonPrimitive $r7;
        long $l0;
        com.google.mygson.internal.bind.JsonTreeReader r0;
        java.lang.StringBuilder $r4;
        java.lang.Object $r6;
        java.lang.String $r5;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: com.google.mygson.stream.JsonToken peek()>();

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NUMBER>;

        if $r1 == $r2 goto label1;

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken STRING>;

        if $r1 == $r2 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NUMBER>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r6 = specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>();

        $r7 = (com.google.mygson.JsonPrimitive) $r6;

        $l0 = virtualinvoke $r7.<com.google.mygson.JsonPrimitive: long getAsLong()>();

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        return $l0;
    }

    public java.lang.String nextName() throws java.io.IOException
    {
        java.util.Map$Entry r4;
        java.util.List $r5;
        com.google.mygson.stream.JsonToken $r1;
        java.util.Iterator r3;
        java.lang.Object $r2;
        java.lang.String $r6;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NAME>;

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: void expect(com.google.mygson.stream.JsonToken)>($r1);

        $r2 = specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>();

        r3 = (java.util.Iterator) $r2;

        $r2 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r2;

        $r5 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $r2 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r2 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r2;

        return $r6;
    }

    public void nextNull() throws java.io.IOException
    {
        com.google.mygson.stream.JsonToken $r1;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NULL>;

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: void expect(com.google.mygson.stream.JsonToken)>($r1);

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        return;
    }

    public java.lang.String nextString() throws java.io.IOException
    {
        java.lang.IllegalStateException $r3;
        com.google.mygson.stream.JsonToken $r1, $r2;
        com.google.mygson.JsonPrimitive $r7;
        com.google.mygson.internal.bind.JsonTreeReader r0;
        java.lang.StringBuilder $r4;
        java.lang.Object $r6;
        java.lang.String $r5;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: com.google.mygson.stream.JsonToken peek()>();

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken STRING>;

        if $r1 == $r2 goto label1;

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NUMBER>;

        if $r1 == $r2 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken STRING>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r6 = specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        $r7 = (com.google.mygson.JsonPrimitive) $r6;

        $r5 = virtualinvoke $r7.<com.google.mygson.JsonPrimitive: java.lang.String getAsString()>();

        return $r5;
    }

    public com.google.mygson.stream.JsonToken peek() throws java.io.IOException
    {
        java.lang.IllegalStateException $r9;
        com.google.mygson.stream.JsonToken $r6;
        java.util.Iterator r5;
        com.google.mygson.JsonPrimitive r7;
        java.lang.AssertionError $r8;
        com.google.mygson.internal.bind.JsonTreeReader r0;
        java.util.List $r1, $r3;
        int $i0;
        java.lang.Object $r2, $r4;
        boolean z0, $z1;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if z0 == 0 goto label01;

        $r6 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken END_DOCUMENT>;

        return $r6;

     label01:
        $r2 = specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>();

        z0 = $r2 instanceof java.util.Iterator;

        if z0 == 0 goto label05;

        $r1 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $r3 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i0 = $i0 + -2;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        z0 = $r4 instanceof com.google.mygson.JsonObject;

        r5 = (java.util.Iterator) $r2;

        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        if z0 == 0 goto label02;

        $r6 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NAME>;

        return $r6;

     label02:
        $r1 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r6 = virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: com.google.mygson.stream.JsonToken peek()>();

        return $r6;

     label03:
        if z0 == 0 goto label04;

        $r6 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken END_OBJECT>;

        return $r6;

     label04:
        $r6 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken END_ARRAY>;

        return $r6;

     label05:
        z0 = $r2 instanceof com.google.mygson.JsonObject;

        if z0 == 0 goto label06;

        $r6 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken BEGIN_OBJECT>;

        return $r6;

     label06:
        z0 = $r2 instanceof com.google.mygson.JsonArray;

        if z0 == 0 goto label07;

        $r6 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken BEGIN_ARRAY>;

        return $r6;

     label07:
        z0 = $r2 instanceof com.google.mygson.JsonPrimitive;

        if z0 == 0 goto label11;

        r7 = (com.google.mygson.JsonPrimitive) $r2;

        z0 = virtualinvoke r7.<com.google.mygson.JsonPrimitive: boolean isString()>();

        if z0 == 0 goto label08;

        $r6 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken STRING>;

        return $r6;

     label08:
        z0 = virtualinvoke r7.<com.google.mygson.JsonPrimitive: boolean isBoolean()>();

        if z0 == 0 goto label09;

        $r6 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken BOOLEAN>;

        return $r6;

     label09:
        z0 = virtualinvoke r7.<com.google.mygson.JsonPrimitive: boolean isNumber()>();

        if z0 == 0 goto label10;

        $r6 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NUMBER>;

        return $r6;

     label10:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label11:
        z0 = $r2 instanceof com.google.mygson.JsonNull;

        if z0 == 0 goto label12;

        $r6 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NULL>;

        return $r6;

     label12:
        $r4 = <com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object SENTINEL_CLOSED>;

        if $r2 != $r4 goto label13;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JsonReader is closed");

        throw $r9;

     label13:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;
    }

    public void promoteNameToValue() throws java.io.IOException
    {
        java.util.Map$Entry r5;
        com.google.mygson.stream.JsonToken $r2;
        java.util.Iterator r4;
        com.google.mygson.JsonPrimitive $r1;
        com.google.mygson.internal.bind.JsonTreeReader r0;
        java.util.List $r6;
        java.lang.Object $r3;
        java.lang.String $r7;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r2 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NAME>;

        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: void expect(com.google.mygson.stream.JsonToken)>($r2);

        $r3 = specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>();

        r4 = (java.util.Iterator) $r3;

        $r3 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r3;

        $r6 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $r3 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r6 = r0.<com.google.mygson.internal.bind.JsonTreeReader: java.util.List stack>;

        $r1 = new com.google.mygson.JsonPrimitive;

        $r3 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r3;

        specialinvoke $r1.<com.google.mygson.JsonPrimitive: void <init>(java.lang.String)>($r7);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void skipValue() throws java.io.IOException
    {
        com.google.mygson.stream.JsonToken $r1, $r2;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r2 = virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: com.google.mygson.stream.JsonToken peek()>();

        $r1 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken NAME>;

        if $r2 != $r1 goto label1;

        virtualinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.String nextName()>();

        return;

     label1:
        specialinvoke r0.<com.google.mygson.internal.bind.JsonTreeReader: java.lang.Object popStack()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Class $r1;
        java.lang.String $r2;
        com.google.mygson.internal.bind.JsonTreeReader r0;

        r0 := @this: com.google.mygson.internal.bind.JsonTreeReader;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }
}
