class com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI extends java.lang.Object
{
    protected static final android.widget.FrameLayout$LayoutParams COVER_SCREEN_GRAVITY_CENTER;
    protected static final android.widget.FrameLayout$LayoutParams COVER_SCREEN_PARAMS;
    static final java.lang.String TAG;
    android.app.Activity activity;
    android.widget.FrameLayout frame;
    boolean isHTML5VideoFullscreen;
    android.view.View mCustomView;
    android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback;
    int mOriginalOrientation;

    static void <clinit>()
    {
        android.widget.FrameLayout$LayoutParams $r0;

        <com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: java.lang.String TAG> = "MobclixUI";

        $r0 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r0.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        <com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.widget.FrameLayout$LayoutParams COVER_SCREEN_PARAMS> = $r0;

        $r0 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r0.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-1, -1, 17);

        <com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.widget.FrameLayout$LayoutParams COVER_SCREEN_GRAVITY_CENTER> = $r0;

        return;
    }

    void <init>(android.app.Activity)
    {
        com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI r0;
        android.app.Activity $r1;

        r0 := @this: com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: boolean isHTML5VideoFullscreen> = 0;

        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: int mOriginalOrientation> = -1;

        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.app.Activity activity> = $r1;

        return;
    }

    boolean isFullscreen()
    {
        com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI r0;
        boolean z0;

        r0 := @this: com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI;

        z0 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: boolean isHTML5VideoFullscreen>;

        return z0;
    }

    public void onHideCustomView()
    {
        java.lang.Throwable $r13;
        java.lang.Object[] $r12;
        android.webkit.WebChromeClient$CustomViewCallback $r6;
        android.widget.FrameLayout r4, $r5;
        java.lang.Class[] $r10;
        java.lang.reflect.Field $r8;
        com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI r0;
        int $i0;
        android.view.View $r1;
        java.lang.Class $r7;
        java.lang.Object $r9;
        android.app.Activity $r2;
        android.view.Window $r3;
        java.lang.reflect.Method $r11;

        r0 := @this: com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI;

     label1:
        $r1 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.view.View mCustomView>;

     label2:
        if $r1 != null goto label3;

        return;

     label3:
        virtualinvoke r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: void setFullscreen(boolean)>(0);

        $r2 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.app.Activity activity>;

        $r3 = virtualinvoke $r2.<android.app.Activity: android.view.Window getWindow()>();

        $r1 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        r4 = (android.widget.FrameLayout) $r1;

        $r5 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.widget.FrameLayout frame>;

        virtualinvoke r4.<android.widget.FrameLayout: void removeView(android.view.View)>($r5);

        r4 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.widget.FrameLayout frame>;

        $r1 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.view.View mCustomView>;

        virtualinvoke r4.<android.widget.FrameLayout: void removeView(android.view.View)>($r1);

        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.widget.FrameLayout frame> = null;

        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.view.View mCustomView> = null;

        $r6 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("this$0");

        virtualinvoke $r8.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r6 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback>;

        $r9 = virtualinvoke $r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.webkit.HTML5VideoView");

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mProxy");

        virtualinvoke $r8.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r9 = virtualinvoke $r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r9);

        $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.webkit.HTML5VideoViewProxy");

        $r10 = newarray (java.lang.Class)[1];

        $r10[0] = class "Landroid/media/MediaPlayer;";

        $r11 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("onCompletion", $r10);

        virtualinvoke $r11.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r12 = newarray (java.lang.Object)[1];

        virtualinvoke $r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r9, $r12);

        $r6 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback>;

     label4:
        if $r6 == null goto label6;

     label5:
        $r6 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback>;

        interfaceinvoke $r6.<android.webkit.WebChromeClient$CustomViewCallback: void onCustomViewHidden()>();

     label6:
        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback> = null;

        $r2 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.app.Activity activity>;

        $i0 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: int mOriginalOrientation>;

        virtualinvoke $r2.<android.app.Activity: void setRequestedOrientation(int)>($i0);

     label7:
        return;

     label8:
        $r13 := @caughtexception;

        return;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
    }

    public void onShowCustomView(android.view.View, int, android.webkit.WebChromeClient$CustomViewCallback)
    {
        android.webkit.WebChromeClient$CustomViewCallback $r2;
        android.widget.FrameLayout r6, $r8;
        java.lang.Exception $r10;
        com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI r0;
        int $i0, $i1;
        android.view.View $r1, $r3;
        com.mobclix.android.sdk.MobclixBrowserActivity$FullscreenHolder $r7, $r11;
        android.app.Activity $r4;
        android.view.Window $r5;
        android.widget.FrameLayout$LayoutParams $r9;

        r0 := @this: com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.webkit.WebChromeClient$CustomViewCallback;

     label01:
        $r3 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.view.View mCustomView>;

     label02:
        if $r3 == null goto label05;

     label03:
        interfaceinvoke $r2.<android.webkit.WebChromeClient$CustomViewCallback: void onCustomViewHidden()>();

     label04:
        return;

     label05:
        $r4 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.app.Activity activity>;

        $i1 = virtualinvoke $r4.<android.app.Activity: int getRequestedOrientation()>();

        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: int mOriginalOrientation> = $i1;

        $r4 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.app.Activity activity>;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.view.Window getWindow()>();

        $r3 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        r6 = (android.widget.FrameLayout) $r3;

     label06:
        $r11 = new com.mobclix.android.sdk.MobclixBrowserActivity$FullscreenHolder;

        $r7 = $r11;

     label07:
        $r4 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.app.Activity activity>;

        specialinvoke $r11.<com.mobclix.android.sdk.MobclixBrowserActivity$FullscreenHolder: void <init>(android.content.Context,com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI)>($r4, r0);

        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.widget.FrameLayout frame> = $r7;

        $r8 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.widget.FrameLayout frame>;

     label08:
        $r9 = <com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.widget.FrameLayout$LayoutParams COVER_SCREEN_PARAMS>;

     label09:
        virtualinvoke $r8.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r9);

        $r8 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.widget.FrameLayout frame>;

     label10:
        $r9 = <com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.widget.FrameLayout$LayoutParams COVER_SCREEN_PARAMS>;

     label11:
        virtualinvoke r6.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r8, $r9);

        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.view.View mCustomView> = $r1;

        virtualinvoke r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: void setFullscreen(boolean)>(1);

        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback> = $r2;

     label12:
        $i1 = -1;

        if $i0 == $i1 goto label16;

     label13:
        $r4 = r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: android.app.Activity activity>;

        virtualinvoke $r4.<android.app.Activity: void setRequestedOrientation(int)>($i0);

     label14:
        return;

     label15:
        $r10 := @caughtexception;

     label16:
        return;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    void setFullscreen(boolean)
    {
        com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI r0;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI;

        $z0 := @parameter0: boolean;

        r0.<com.mobclix.android.sdk.MobclixBrowserActivity$MobclixUI: boolean isHTML5VideoFullscreen> = 0;

        return;
    }
}
