public final class com.google.mygson.Gson extends java.lang.Object
{
    static final boolean DEFAULT_JSON_NON_EXECUTABLE;
    private static final java.lang.String JSON_NON_EXECUTABLE_PREFIX;
    private final java.lang.ThreadLocal calls;
    private final com.google.mygson.internal.ConstructorConstructor constructorConstructor;
    final com.google.mygson.JsonDeserializationContext deserializationContext;
    private final java.util.List factories;
    private final boolean generateNonExecutableJson;
    private final boolean htmlSafe;
    private final boolean prettyPrinting;
    final com.google.mygson.JsonSerializationContext serializationContext;
    private final boolean serializeNulls;
    private final java.util.Map typeTokenCache;

    static void <clinit>()
    {
        com.google.mygson.Gson$7 $r0;

        <com.google.mygson.Gson: java.lang.String JSON_NON_EXECUTABLE_PREFIX> = ")]}\'\n";

        <com.google.mygson.Gson: boolean DEFAULT_JSON_NON_EXECUTABLE> = 0;

        $r0 = new com.google.mygson.Gson$7;

        specialinvoke $r0.<com.google.mygson.Gson$7: void <init>()>();

        <com.google.mygson.internal.GsonInternalAccess: com.google.mygson.internal.GsonInternalAccess INSTANCE> = $r0;

        return;
    }

    public void <init>()
    {
        java.util.List $r5;
        com.google.mygson.FieldNamingPolicy $r2;
        java.util.Map $r4;
        com.google.mygson.LongSerializationPolicy $r3;
        com.google.mygson.internal.Excluder $r1;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 = <com.google.mygson.internal.Excluder: com.google.mygson.internal.Excluder DEFAULT>;

        $r2 = <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy IDENTITY>;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r3 = <com.google.mygson.LongSerializationPolicy: com.google.mygson.LongSerializationPolicy DEFAULT>;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke r0.<com.google.mygson.Gson: void <init>(com.google.mygson.internal.Excluder,com.google.mygson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.mygson.LongSerializationPolicy,java.util.List)>($r1, $r2, $r4, 0, 0, 0, 1, 0, 0, $r3, $r5);

        return;
    }

    void <init>(com.google.mygson.internal.Excluder, com.google.mygson.FieldNamingStrategy, java.util.Map, boolean, boolean, boolean, boolean, boolean, boolean, com.google.mygson.LongSerializationPolicy, java.util.List)
    {
        com.google.mygson.internal.bind.BigIntegerTypeAdapter $r18;
        java.util.HashMap $r10;
        com.google.mygson.Gson r0;
        com.google.mygson.internal.bind.MapTypeAdapterFactory $r20;
        java.util.ArrayList r7;
        com.google.mygson.FieldNamingStrategy $r2;
        com.google.mygson.internal.bind.CollectionTypeAdapterFactory $r19;
        com.google.mygson.TypeAdapterFactory $r14;
        java.util.Map r3, $r11;
        com.google.mygson.internal.ConstructorConstructor r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.google.mygson.internal.bind.ReflectiveTypeAdapterFactory r8;
        com.google.mygson.internal.bind.BigDecimalTypeAdapter $r17;
        com.google.mygson.LongSerializationPolicy $r4;
        com.google.mygson.internal.Excluder $r1;
        java.util.List r5;
        com.google.mygson.Gson$1 $r9;
        com.google.mygson.Gson$3 $r13;
        java.lang.Class $r15;
        com.google.mygson.Gson$2 $r12;
        com.google.mygson.TypeAdapter $r16;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: com.google.mygson.internal.Excluder;

        $r2 := @parameter1: com.google.mygson.FieldNamingStrategy;

        r3 := @parameter2: java.util.Map;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $z2 := @parameter5: boolean;

        $z3 := @parameter6: boolean;

        $z4 := @parameter7: boolean;

        $z5 := @parameter8: boolean;

        $r4 := @parameter9: com.google.mygson.LongSerializationPolicy;

        r5 := @parameter10: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r9 = new com.google.mygson.Gson$1;

        specialinvoke $r9.<com.google.mygson.Gson$1: void <init>(com.google.mygson.Gson)>(r0);

        r0.<com.google.mygson.Gson: java.lang.ThreadLocal calls> = $r9;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        $r11 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r10);

        r0.<com.google.mygson.Gson: java.util.Map typeTokenCache> = $r11;

        $r12 = new com.google.mygson.Gson$2;

        specialinvoke $r12.<com.google.mygson.Gson$2: void <init>(com.google.mygson.Gson)>(r0);

        r0.<com.google.mygson.Gson: com.google.mygson.JsonDeserializationContext deserializationContext> = $r12;

        $r13 = new com.google.mygson.Gson$3;

        specialinvoke $r13.<com.google.mygson.Gson$3: void <init>(com.google.mygson.Gson)>(r0);

        r0.<com.google.mygson.Gson: com.google.mygson.JsonSerializationContext serializationContext> = $r13;

        r6 = new com.google.mygson.internal.ConstructorConstructor;

        specialinvoke r6.<com.google.mygson.internal.ConstructorConstructor: void <init>(java.util.Map)>(r3);

        r0.<com.google.mygson.Gson: com.google.mygson.internal.ConstructorConstructor constructorConstructor> = r6;

        r0.<com.google.mygson.Gson: boolean serializeNulls> = $z0;

        r0.<com.google.mygson.Gson: boolean generateNonExecutableJson> = $z2;

        r0.<com.google.mygson.Gson: boolean htmlSafe> = $z3;

        r0.<com.google.mygson.Gson: boolean prettyPrinting> = $z4;

        r8 = new com.google.mygson.internal.bind.ReflectiveTypeAdapterFactory;

        r6 = r0.<com.google.mygson.Gson: com.google.mygson.internal.ConstructorConstructor constructorConstructor>;

        specialinvoke r8.<com.google.mygson.internal.bind.ReflectiveTypeAdapterFactory: void <init>(com.google.mygson.internal.ConstructorConstructor,com.google.mygson.FieldNamingStrategy,com.google.mygson.internal.Excluder)>(r6, $r2, $r1);

        r6 = new com.google.mygson.internal.ConstructorConstructor;

        specialinvoke r6.<com.google.mygson.internal.ConstructorConstructor: void <init>()>();

        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory STRING_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory INTEGER_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory BOOLEAN_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory BYTE_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory SHORT_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = <java.lang.Long: java.lang.Class TYPE>;

        $r16 = specialinvoke r0.<com.google.mygson.Gson: com.google.mygson.TypeAdapter longAdapter(com.google.mygson.LongSerializationPolicy)>($r4);

        $r14 = staticinvoke <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.mygson.TypeAdapter)>($r15, class "Ljava/lang/Long;", $r16);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = <java.lang.Double: java.lang.Class TYPE>;

        $r16 = specialinvoke r0.<com.google.mygson.Gson: com.google.mygson.TypeAdapter doubleAdapter(boolean)>($z5);

        $r14 = staticinvoke <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.mygson.TypeAdapter)>($r15, class "Ljava/lang/Double;", $r16);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = <java.lang.Float: java.lang.Class TYPE>;

        $r16 = specialinvoke r0.<com.google.mygson.Gson: com.google.mygson.TypeAdapter floatAdapter(boolean)>($z5);

        $r14 = staticinvoke <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.mygson.TypeAdapter)>($r15, class "Ljava/lang/Float;", $r16);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory NUMBER_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory CHARACTER_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory STRING_BUILDER_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory STRING_BUFFER_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r17 = new com.google.mygson.internal.bind.BigDecimalTypeAdapter;

        specialinvoke $r17.<com.google.mygson.internal.bind.BigDecimalTypeAdapter: void <init>()>();

        $r14 = staticinvoke <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory newFactory(java.lang.Class,com.google.mygson.TypeAdapter)>(class "Ljava/math/BigDecimal;", $r17);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r18 = new com.google.mygson.internal.bind.BigIntegerTypeAdapter;

        specialinvoke $r18.<com.google.mygson.internal.bind.BigIntegerTypeAdapter: void <init>()>();

        $r14 = staticinvoke <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory newFactory(java.lang.Class,com.google.mygson.TypeAdapter)>(class "Ljava/math/BigInteger;", $r18);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory JSON_ELEMENT_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.ObjectTypeAdapter: com.google.mygson.TypeAdapterFactory FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        interfaceinvoke r7.<java.util.List: boolean addAll(java.util.Collection)>(r5);

        $r19 = new com.google.mygson.internal.bind.CollectionTypeAdapterFactory;

        specialinvoke $r19.<com.google.mygson.internal.bind.CollectionTypeAdapterFactory: void <init>(com.google.mygson.internal.ConstructorConstructor)>(r6);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory URL_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory URI_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory UUID_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory LOCALE_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory INET_ADDRESS_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory BIT_SET_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.DateTypeAdapter: com.google.mygson.TypeAdapterFactory FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory CALENDAR_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TimeTypeAdapter: com.google.mygson.TypeAdapterFactory FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.SqlDateTypeAdapter: com.google.mygson.TypeAdapterFactory FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory TIMESTAMP_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r20 = new com.google.mygson.internal.bind.MapTypeAdapterFactory;

        specialinvoke $r20.<com.google.mygson.internal.bind.MapTypeAdapterFactory: void <init>(com.google.mygson.internal.ConstructorConstructor,boolean)>(r6, $z1);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r14 = <com.google.mygson.internal.bind.ArrayTypeAdapter: com.google.mygson.TypeAdapterFactory FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory ENUM_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory CLASS_FACTORY>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r8);

        r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r7);

        r0.<com.google.mygson.Gson: java.util.List factories> = r5;

        return;
    }

    static void access$000(com.google.mygson.Gson, double)
    {
        com.google.mygson.Gson $r0;
        double $d0;

        $r0 := @parameter0: com.google.mygson.Gson;

        $d0 := @parameter1: double;

        specialinvoke $r0.<com.google.mygson.Gson: void checkValidFloatingPoint(double)>($d0);

        return;
    }

    static java.util.List access$100(com.google.mygson.Gson)
    {
        java.util.List r1;
        com.google.mygson.Gson $r0;

        $r0 := @parameter0: com.google.mygson.Gson;

        r1 = $r0.<com.google.mygson.Gson: java.util.List factories>;

        return r1;
    }

    private static void assertFullConsumption(java.lang.Object, com.google.mygson.stream.JsonReader)
    {
        com.google.mygson.stream.MalformedJsonException r5;
        java.lang.Throwable r7;
        com.google.mygson.stream.JsonReader $r1;
        com.google.mygson.JsonIOException $r4;
        com.google.mygson.stream.JsonToken $r2, $r3;
        com.google.mygson.JsonSyntaxException $r6;
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.google.mygson.stream.JsonReader;

        if $r0 == null goto label7;

     label1:
        $r2 = virtualinvoke $r1.<com.google.mygson.stream.JsonReader: com.google.mygson.stream.JsonToken peek()>();

     label2:
        $r3 = <com.google.mygson.stream.JsonToken: com.google.mygson.stream.JsonToken END_DOCUMENT>;

        if $r2 == $r3 goto label7;

        $r4 = new com.google.mygson.JsonIOException;

     label3:
        specialinvoke $r4.<com.google.mygson.JsonIOException: void <init>(java.lang.String)>("JSON document was not fully consumed.");

     label4:
        throw $r4;

     label5:
        r5 := @caughtexception;

        $r6 = new com.google.mygson.JsonSyntaxException;

        specialinvoke $r6.<com.google.mygson.JsonSyntaxException: void <init>(java.lang.Throwable)>(r5);

        throw $r6;

     label6:
        r7 := @caughtexception;

        $r4 = new com.google.mygson.JsonIOException;

        specialinvoke $r4.<com.google.mygson.JsonIOException: void <init>(java.lang.Throwable)>(r7);

        throw $r4;

     label7:
        return;

        catch com.google.mygson.stream.MalformedJsonException from label1 to label2 with label5;
        catch com.google.mygson.stream.MalformedJsonException from label3 to label4 with label5;
        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }

    private void checkValidFloatingPoint(double)
    {
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r1;
        com.google.mygson.Gson r0;
        double $d0;
        boolean $z0;

        r0 := @this: com.google.mygson.Gson;

        $d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid double value as per JSON specification. To override this");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" behavior, use GsonBuilder.serializeSpecialDoubleValues() method.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        return;
    }

    private com.google.mygson.TypeAdapter doubleAdapter(boolean)
    {
        com.google.mygson.Gson$4 $r1;
        com.google.mygson.Gson r0;
        com.google.mygson.TypeAdapter r2;
        boolean $z0;

        r0 := @this: com.google.mygson.Gson;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        r2 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapter DOUBLE>;

        return r2;

     label1:
        $r1 = new com.google.mygson.Gson$4;

        specialinvoke $r1.<com.google.mygson.Gson$4: void <init>(com.google.mygson.Gson)>(r0);

        return $r1;
    }

    private com.google.mygson.TypeAdapter floatAdapter(boolean)
    {
        com.google.mygson.Gson$5 $r1;
        com.google.mygson.Gson r0;
        com.google.mygson.TypeAdapter r2;
        boolean $z0;

        r0 := @this: com.google.mygson.Gson;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        r2 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapter FLOAT>;

        return r2;

     label1:
        $r1 = new com.google.mygson.Gson$5;

        specialinvoke $r1.<com.google.mygson.Gson$5: void <init>(com.google.mygson.Gson)>(r0);

        return $r1;
    }

    private com.google.mygson.TypeAdapter longAdapter(com.google.mygson.LongSerializationPolicy)
    {
        com.google.mygson.LongSerializationPolicy $r1, $r2;
        com.google.mygson.Gson r0;
        com.google.mygson.TypeAdapter r4;
        com.google.mygson.Gson$6 $r3;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: com.google.mygson.LongSerializationPolicy;

        $r2 = <com.google.mygson.LongSerializationPolicy: com.google.mygson.LongSerializationPolicy DEFAULT>;

        if $r1 != $r2 goto label1;

        r4 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapter LONG>;

        return r4;

     label1:
        $r3 = new com.google.mygson.Gson$6;

        specialinvoke $r3.<com.google.mygson.Gson$6: void <init>(com.google.mygson.Gson)>(r0);

        return $r3;
    }

    private com.google.mygson.stream.JsonWriter newJsonWriter(java.io.Writer) throws java.io.IOException
    {
        com.google.mygson.stream.JsonWriter r2;
        java.io.Writer $r1;
        com.google.mygson.Gson r0;
        boolean $z0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.io.Writer;

        $z0 = r0.<com.google.mygson.Gson: boolean generateNonExecutableJson>;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>(")]}\'\n");

     label1:
        r2 = new com.google.mygson.stream.JsonWriter;

        specialinvoke r2.<com.google.mygson.stream.JsonWriter: void <init>(java.io.Writer)>($r1);

        $z0 = r0.<com.google.mygson.Gson: boolean prettyPrinting>;

        if $z0 == 0 goto label2;

        virtualinvoke r2.<com.google.mygson.stream.JsonWriter: void setIndent(java.lang.String)>("  ");

     label2:
        $z0 = r0.<com.google.mygson.Gson: boolean serializeNulls>;

        virtualinvoke r2.<com.google.mygson.stream.JsonWriter: void setSerializeNulls(boolean)>($z0);

        return r2;
    }

    public java.lang.Object fromJson(com.google.mygson.JsonElement, java.lang.Class) throws com.google.mygson.JsonSyntaxException
    {
        com.google.mygson.JsonElement $r1;
        java.lang.Class r2;
        java.lang.Object $r3;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: com.google.mygson.JsonElement;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<com.google.mygson.Gson: java.lang.Object fromJson(com.google.mygson.JsonElement,java.lang.reflect.Type)>($r1, r2);

        r2 = staticinvoke <com.google.mygson.internal.Primitives: java.lang.Class wrap(java.lang.Class)>(r2);

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r3);

        return $r3;
    }

    public java.lang.Object fromJson(com.google.mygson.JsonElement, java.lang.reflect.Type) throws com.google.mygson.JsonSyntaxException
    {
        com.google.mygson.JsonElement $r1;
        java.lang.reflect.Type $r2;
        java.lang.Object $r3;
        com.google.mygson.Gson r0;
        com.google.mygson.internal.bind.JsonTreeReader $r4;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: com.google.mygson.JsonElement;

        $r2 := @parameter1: java.lang.reflect.Type;

        if $r1 != null goto label1;

        return null;

     label1:
        $r4 = new com.google.mygson.internal.bind.JsonTreeReader;

        specialinvoke $r4.<com.google.mygson.internal.bind.JsonTreeReader: void <init>(com.google.mygson.JsonElement)>($r1);

        $r3 = virtualinvoke r0.<com.google.mygson.Gson: java.lang.Object fromJson(com.google.mygson.stream.JsonReader,java.lang.reflect.Type)>($r4, $r2);

        return $r3;
    }

    public java.lang.Object fromJson(com.google.mygson.stream.JsonReader, java.lang.reflect.Type) throws com.google.mygson.JsonIOException, com.google.mygson.JsonSyntaxException
    {
        java.lang.Throwable r6, $r8, r9, r10;
        com.google.mygson.stream.JsonReader $r1;
        com.google.mygson.JsonSyntaxException $r7;
        com.google.mygson.Gson r0;
        com.google.mygson.reflect.TypeToken $r3;
        java.lang.reflect.Type $r2;
        java.lang.Object $r5;
        com.google.mygson.TypeAdapter $r4;
        boolean z0, $z1;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: com.google.mygson.stream.JsonReader;

        $r2 := @parameter1: java.lang.reflect.Type;

        z0 = 1;

        $z1 = virtualinvoke $r1.<com.google.mygson.stream.JsonReader: boolean isLenient()>();

        virtualinvoke $r1.<com.google.mygson.stream.JsonReader: void setLenient(boolean)>(1);

     label01:
        virtualinvoke $r1.<com.google.mygson.stream.JsonReader: com.google.mygson.stream.JsonToken peek()>();

     label02:
        z0 = 0;

     label03:
        $r3 = staticinvoke <com.google.mygson.reflect.TypeToken: com.google.mygson.reflect.TypeToken get(java.lang.reflect.Type)>($r2);

        $r4 = virtualinvoke r0.<com.google.mygson.Gson: com.google.mygson.TypeAdapter getAdapter(com.google.mygson.reflect.TypeToken)>($r3);

        $r5 = virtualinvoke $r4.<com.google.mygson.TypeAdapter: java.lang.Object read(com.google.mygson.stream.JsonReader)>($r1);

     label04:
        virtualinvoke $r1.<com.google.mygson.stream.JsonReader: void setLenient(boolean)>($z1);

        return $r5;

     label05:
        r6 := @caughtexception;

        if z0 == 0 goto label06;

        virtualinvoke $r1.<com.google.mygson.stream.JsonReader: void setLenient(boolean)>($z1);

        return null;

     label06:
        $r7 = new com.google.mygson.JsonSyntaxException;

        specialinvoke $r7.<com.google.mygson.JsonSyntaxException: void <init>(java.lang.Throwable)>(r6);

        throw $r7;

     label07:
        $r8 := @caughtexception;

        virtualinvoke $r1.<com.google.mygson.stream.JsonReader: void setLenient(boolean)>($z1);

        throw $r8;

     label08:
        r9 := @caughtexception;

     label09:
        $r7 = new com.google.mygson.JsonSyntaxException;

        specialinvoke $r7.<com.google.mygson.JsonSyntaxException: void <init>(java.lang.Throwable)>(r9);

        throw $r7;

     label10:
        r10 := @caughtexception;

     label11:
        $r7 = new com.google.mygson.JsonSyntaxException;

        specialinvoke $r7.<com.google.mygson.JsonSyntaxException: void <init>(java.lang.Throwable)>(r10);

        throw $r7;

     label12:
        nop;

        catch java.io.EOFException from label01 to label02 with label05;
        catch java.io.EOFException from label03 to label04 with label05;
        catch java.lang.IllegalStateException from label01 to label02 with label08;
        catch java.lang.IllegalStateException from label03 to label04 with label08;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
    }

    public java.lang.Object fromJson(java.io.Reader, java.lang.Class) throws com.google.mygson.JsonSyntaxException, com.google.mygson.JsonIOException
    {
        com.google.mygson.stream.JsonReader r3;
        java.lang.Class r2;
        java.lang.Object $r4;
        java.io.Reader $r1;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.Class;

        r3 = new com.google.mygson.stream.JsonReader;

        specialinvoke r3.<com.google.mygson.stream.JsonReader: void <init>(java.io.Reader)>($r1);

        $r4 = virtualinvoke r0.<com.google.mygson.Gson: java.lang.Object fromJson(com.google.mygson.stream.JsonReader,java.lang.reflect.Type)>(r3, r2);

        staticinvoke <com.google.mygson.Gson: void assertFullConsumption(java.lang.Object,com.google.mygson.stream.JsonReader)>($r4, r3);

        r2 = staticinvoke <com.google.mygson.internal.Primitives: java.lang.Class wrap(java.lang.Class)>(r2);

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r4);

        return $r4;
    }

    public java.lang.Object fromJson(java.io.Reader, java.lang.reflect.Type) throws com.google.mygson.JsonIOException, com.google.mygson.JsonSyntaxException
    {
        com.google.mygson.stream.JsonReader r3;
        java.lang.reflect.Type $r2;
        java.lang.Object $r4;
        java.io.Reader $r1;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.io.Reader;

        $r2 := @parameter1: java.lang.reflect.Type;

        r3 = new com.google.mygson.stream.JsonReader;

        specialinvoke r3.<com.google.mygson.stream.JsonReader: void <init>(java.io.Reader)>($r1);

        $r4 = virtualinvoke r0.<com.google.mygson.Gson: java.lang.Object fromJson(com.google.mygson.stream.JsonReader,java.lang.reflect.Type)>(r3, $r2);

        staticinvoke <com.google.mygson.Gson: void assertFullConsumption(java.lang.Object,com.google.mygson.stream.JsonReader)>($r4, r3);

        return $r4;
    }

    public java.lang.Object fromJson(java.lang.String, java.lang.Class) throws com.google.mygson.JsonSyntaxException
    {
        java.lang.Class r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<com.google.mygson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r1, r2);

        r2 = staticinvoke <com.google.mygson.internal.Primitives: java.lang.Class wrap(java.lang.Class)>(r2);

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r3);

        return $r3;
    }

    public java.lang.Object fromJson(java.lang.String, java.lang.reflect.Type) throws com.google.mygson.JsonSyntaxException
    {
        java.io.StringReader r3;
        java.lang.reflect.Type $r2;
        java.lang.Object $r4;
        java.lang.String $r1;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.reflect.Type;

        if $r1 != null goto label1;

        return null;

     label1:
        r3 = new java.io.StringReader;

        specialinvoke r3.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke r0.<com.google.mygson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type)>(r3, $r2);

        return $r4;
    }

    public com.google.mygson.TypeAdapter getAdapter(com.google.mygson.reflect.TypeToken)
    {
        java.lang.Throwable $r14;
        com.google.mygson.Gson r0;
        com.google.mygson.reflect.TypeToken r1;
        com.google.mygson.TypeAdapterFactory r9;
        java.util.Map $r3, $r10;
        java.lang.String $r13;
        com.google.mygson.Gson$FutureTypeAdapter r2;
        boolean $z0;
        java.lang.ThreadLocal $r6;
        java.util.Iterator $r8;
        java.lang.IllegalArgumentException $r11;
        java.util.List $r7;
        java.lang.Object $r4;
        java.lang.StringBuilder $r12;
        com.google.mygson.TypeAdapter r5;

        r0 := @this: com.google.mygson.Gson;

        r1 := @parameter0: com.google.mygson.reflect.TypeToken;

        $r3 = r0.<com.google.mygson.Gson: java.util.Map typeTokenCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.google.mygson.TypeAdapter) $r4;

        if r5 == null goto label01;

        return r5;

     label01:
        $r6 = r0.<com.google.mygson.Gson: java.lang.ThreadLocal calls>;

        $r4 = virtualinvoke $r6.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.util.Map) $r4;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.google.mygson.Gson$FutureTypeAdapter) $r4;

        if r2 == null goto label02;

        return r2;

     label02:
        r2 = new com.google.mygson.Gson$FutureTypeAdapter;

        specialinvoke r2.<com.google.mygson.Gson$FutureTypeAdapter: void <init>()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label03:
        $r7 = r0.<com.google.mygson.Gson: java.util.List factories>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $z0 == 0 goto label10;

     label06:
        $r4 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.google.mygson.TypeAdapterFactory) $r4;

        r5 = interfaceinvoke r9.<com.google.mygson.TypeAdapterFactory: com.google.mygson.TypeAdapter create(com.google.mygson.Gson,com.google.mygson.reflect.TypeToken)>(r0, r1);

     label07:
        if r5 == null goto label04;

     label08:
        virtualinvoke r2.<com.google.mygson.Gson$FutureTypeAdapter: void setDelegate(com.google.mygson.TypeAdapter)>(r5);

        $r10 = r0.<com.google.mygson.Gson: java.util.Map typeTokenCache>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

     label09:
        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return r5;

     label10:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GSON cannot handle ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label11:
        $r14 := @caughtexception;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        throw $r14;

        catch java.lang.Throwable from label03 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public com.google.mygson.TypeAdapter getAdapter(java.lang.Class)
    {
        com.google.mygson.reflect.TypeToken $r2;
        java.lang.Class r1;
        com.google.mygson.Gson r0;
        com.google.mygson.TypeAdapter $r3;

        r0 := @this: com.google.mygson.Gson;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.mygson.reflect.TypeToken: com.google.mygson.reflect.TypeToken get(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<com.google.mygson.Gson: com.google.mygson.TypeAdapter getAdapter(com.google.mygson.reflect.TypeToken)>($r2);

        return $r3;
    }

    public java.lang.String toJson(com.google.mygson.JsonElement)
    {
        com.google.mygson.JsonElement $r1;
        java.io.StringWriter r2;
        java.lang.String $r3;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: com.google.mygson.JsonElement;

        r2 = new java.io.StringWriter;

        specialinvoke r2.<java.io.StringWriter: void <init>()>();

        virtualinvoke r0.<com.google.mygson.Gson: void toJson(com.google.mygson.JsonElement,java.lang.Appendable)>($r1, r2);

        $r3 = virtualinvoke r2.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String toJson(java.lang.Object)
    {
        com.google.mygson.JsonNull $r2;
        java.lang.Object $r1;
        java.lang.Class $r4;
        java.lang.String $r3;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = <com.google.mygson.JsonNull: com.google.mygson.JsonNull INSTANCE>;

        $r3 = virtualinvoke r0.<com.google.mygson.Gson: java.lang.String toJson(com.google.mygson.JsonElement)>($r2);

        return $r3;

     label1:
        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<com.google.mygson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>($r1, $r4);

        return $r3;
    }

    public java.lang.String toJson(java.lang.Object, java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r2;
        java.io.StringWriter r3;
        java.lang.Object $r1;
        java.lang.String $r4;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.reflect.Type;

        r3 = new java.io.StringWriter;

        specialinvoke r3.<java.io.StringWriter: void <init>()>();

        virtualinvoke r0.<com.google.mygson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)>($r1, $r2, r3);

        $r4 = virtualinvoke r3.<java.io.StringWriter: java.lang.String toString()>();

        return $r4;
    }

    public void toJson(com.google.mygson.JsonElement, com.google.mygson.stream.JsonWriter) throws com.google.mygson.JsonIOException
    {
        java.lang.Throwable r3, $r5;
        com.google.mygson.JsonIOException $r4;
        com.google.mygson.Gson r0;
        com.google.mygson.stream.JsonWriter $r2;
        com.google.mygson.JsonElement $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: com.google.mygson.JsonElement;

        $r2 := @parameter1: com.google.mygson.stream.JsonWriter;

        $z0 = virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: boolean isLenient()>();

        virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: void setLenient(boolean)>(1);

        $z1 = virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: boolean isHtmlSafe()>();

        $z2 = r0.<com.google.mygson.Gson: boolean htmlSafe>;

        virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: void setHtmlSafe(boolean)>($z2);

        $z2 = virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: boolean getSerializeNulls()>();

        $z3 = r0.<com.google.mygson.Gson: boolean serializeNulls>;

        virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: void setSerializeNulls(boolean)>($z3);

     label1:
        staticinvoke <com.google.mygson.internal.Streams: void write(com.google.mygson.JsonElement,com.google.mygson.stream.JsonWriter)>($r1, $r2);

     label2:
        virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: void setLenient(boolean)>($z0);

        virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: void setHtmlSafe(boolean)>($z1);

        virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: void setSerializeNulls(boolean)>($z2);

        return;

     label3:
        r3 := @caughtexception;

     label4:
        $r4 = new com.google.mygson.JsonIOException;

        specialinvoke $r4.<com.google.mygson.JsonIOException: void <init>(java.lang.Throwable)>(r3);

        throw $r4;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: void setLenient(boolean)>($z0);

        virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: void setHtmlSafe(boolean)>($z1);

        virtualinvoke $r2.<com.google.mygson.stream.JsonWriter: void setSerializeNulls(boolean)>($z2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public void toJson(com.google.mygson.JsonElement, java.lang.Appendable) throws com.google.mygson.JsonIOException
    {
        java.lang.Throwable r3;
        com.google.mygson.stream.JsonWriter $r5;
        com.google.mygson.JsonElement $r1;
        java.lang.Appendable $r2;
        java.io.Writer $r4;
        java.lang.RuntimeException $r6;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: com.google.mygson.JsonElement;

        $r2 := @parameter1: java.lang.Appendable;

     label1:
        $r4 = staticinvoke <com.google.mygson.internal.Streams: java.io.Writer writerForAppendable(java.lang.Appendable)>($r2);

        $r5 = specialinvoke r0.<com.google.mygson.Gson: com.google.mygson.stream.JsonWriter newJsonWriter(java.io.Writer)>($r4);

        virtualinvoke r0.<com.google.mygson.Gson: void toJson(com.google.mygson.JsonElement,com.google.mygson.stream.JsonWriter)>($r1, $r5);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void toJson(java.lang.Object, java.lang.Appendable) throws com.google.mygson.JsonIOException
    {
        java.lang.Appendable $r2;
        com.google.mygson.JsonNull $r4;
        java.lang.Object $r1;
        java.lang.Class $r3;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Appendable;

        if $r1 == null goto label1;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke r0.<com.google.mygson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)>($r1, $r3, $r2);

        return;

     label1:
        $r4 = <com.google.mygson.JsonNull: com.google.mygson.JsonNull INSTANCE>;

        virtualinvoke r0.<com.google.mygson.Gson: void toJson(com.google.mygson.JsonElement,java.lang.Appendable)>($r4, $r2);

        return;
    }

    public void toJson(java.lang.Object, java.lang.reflect.Type, com.google.mygson.stream.JsonWriter) throws com.google.mygson.JsonIOException
    {
        java.lang.Throwable r4, $r8;
        com.google.mygson.JsonIOException $r7;
        com.google.mygson.Gson r0;
        com.google.mygson.stream.JsonWriter $r3;
        com.google.mygson.reflect.TypeToken $r5;
        java.lang.reflect.Type $r2;
        java.lang.Object $r1;
        com.google.mygson.TypeAdapter $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r3 := @parameter2: com.google.mygson.stream.JsonWriter;

        $r5 = staticinvoke <com.google.mygson.reflect.TypeToken: com.google.mygson.reflect.TypeToken get(java.lang.reflect.Type)>($r2);

        $r6 = virtualinvoke r0.<com.google.mygson.Gson: com.google.mygson.TypeAdapter getAdapter(com.google.mygson.reflect.TypeToken)>($r5);

        $z0 = virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: boolean isLenient()>();

        virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: void setLenient(boolean)>(1);

        $z1 = virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: boolean isHtmlSafe()>();

        $z2 = r0.<com.google.mygson.Gson: boolean htmlSafe>;

        virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: void setHtmlSafe(boolean)>($z2);

        $z2 = virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: boolean getSerializeNulls()>();

        $z3 = r0.<com.google.mygson.Gson: boolean serializeNulls>;

        virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: void setSerializeNulls(boolean)>($z3);

     label1:
        virtualinvoke $r6.<com.google.mygson.TypeAdapter: void write(com.google.mygson.stream.JsonWriter,java.lang.Object)>($r3, $r1);

     label2:
        virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: void setLenient(boolean)>($z0);

        virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: void setHtmlSafe(boolean)>($z1);

        virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: void setSerializeNulls(boolean)>($z2);

        return;

     label3:
        r4 := @caughtexception;

     label4:
        $r7 = new com.google.mygson.JsonIOException;

        specialinvoke $r7.<com.google.mygson.JsonIOException: void <init>(java.lang.Throwable)>(r4);

        throw $r7;

     label5:
        $r8 := @caughtexception;

        virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: void setLenient(boolean)>($z0);

        virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: void setHtmlSafe(boolean)>($z1);

        virtualinvoke $r3.<com.google.mygson.stream.JsonWriter: void setSerializeNulls(boolean)>($z2);

        throw $r8;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public void toJson(java.lang.Object, java.lang.reflect.Type, java.lang.Appendable) throws com.google.mygson.JsonIOException
    {
        java.lang.Throwable r4;
        com.google.mygson.JsonIOException $r7;
        java.lang.Appendable $r3;
        com.google.mygson.Gson r0;
        com.google.mygson.stream.JsonWriter $r6;
        java.lang.reflect.Type $r2;
        java.io.Writer $r5;
        java.lang.Object $r1;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r3 := @parameter2: java.lang.Appendable;

     label1:
        $r5 = staticinvoke <com.google.mygson.internal.Streams: java.io.Writer writerForAppendable(java.lang.Appendable)>($r3);

        $r6 = specialinvoke r0.<com.google.mygson.Gson: com.google.mygson.stream.JsonWriter newJsonWriter(java.io.Writer)>($r5);

        virtualinvoke r0.<com.google.mygson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.mygson.stream.JsonWriter)>($r1, $r2, $r6);

     label2:
        return;

     label3:
        r4 := @caughtexception;

        $r7 = new com.google.mygson.JsonIOException;

        specialinvoke $r7.<com.google.mygson.JsonIOException: void <init>(java.lang.Throwable)>(r4);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public com.google.mygson.JsonElement toJsonTree(java.lang.Object)
    {
        com.google.mygson.JsonElement $r3;
        com.google.mygson.JsonNull r4;
        java.lang.Object $r1;
        java.lang.Class $r2;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        r4 = <com.google.mygson.JsonNull: com.google.mygson.JsonNull INSTANCE>;

        return r4;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<com.google.mygson.Gson: com.google.mygson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type)>($r1, $r2);

        return $r3;
    }

    public com.google.mygson.JsonElement toJsonTree(java.lang.Object, java.lang.reflect.Type)
    {
        com.google.mygson.internal.bind.JsonTreeWriter r3;
        java.lang.reflect.Type $r2;
        com.google.mygson.JsonElement $r4;
        java.lang.Object $r1;
        com.google.mygson.Gson r0;

        r0 := @this: com.google.mygson.Gson;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.reflect.Type;

        r3 = new com.google.mygson.internal.bind.JsonTreeWriter;

        specialinvoke r3.<com.google.mygson.internal.bind.JsonTreeWriter: void <init>()>();

        virtualinvoke r0.<com.google.mygson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.mygson.stream.JsonWriter)>($r1, $r2, r3);

        $r4 = virtualinvoke r3.<com.google.mygson.internal.bind.JsonTreeWriter: com.google.mygson.JsonElement get()>();

        return $r4;
    }

    public java.lang.String toString()
    {
        java.util.List $r2;
        com.google.mygson.internal.ConstructorConstructor $r3;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        com.google.mygson.Gson r0;
        boolean $z0;

        r0 := @this: com.google.mygson.Gson;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("serializeNulls:");

        $z0 = r0.<com.google.mygson.Gson: boolean serializeNulls>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("factories:");

        $r2 = r0.<com.google.mygson.Gson: java.util.List factories>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",instanceCreators:");

        $r3 = r0.<com.google.mygson.Gson: com.google.mygson.internal.ConstructorConstructor constructorConstructor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
