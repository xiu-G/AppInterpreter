public class proguard.optimize.info.MemberOptimizationInfoSetter extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.MemberVisitor
{

    public void <init>()
    {
        proguard.optimize.info.MemberOptimizationInfoSetter r0;

        r0 := @this: proguard.optimize.info.MemberOptimizationInfoSetter;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        proguard.classfile.ProgramField $r2;
        proguard.optimize.info.MemberOptimizationInfoSetter r0;
        proguard.classfile.ProgramClass $r1;
        boolean $z0;

        r0 := @this: proguard.optimize.info.MemberOptimizationInfoSetter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $z0 = staticinvoke <proguard.optimize.KeepMarker: boolean isKept(proguard.classfile.VisitorAccepter)>($r2);

        if $z0 != 0 goto label1;

        staticinvoke <proguard.optimize.info.FieldOptimizationInfo: void setFieldOptimizationInfo(proguard.classfile.Clazz,proguard.classfile.Field)>($r1, $r2);

     label1:
        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.classfile.ProgramMethod $r2;
        proguard.optimize.info.MemberOptimizationInfoSetter r0;
        proguard.classfile.ProgramClass $r1;
        boolean $z0;

        r0 := @this: proguard.optimize.info.MemberOptimizationInfoSetter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $z0 = staticinvoke <proguard.optimize.KeepMarker: boolean isKept(proguard.classfile.VisitorAccepter)>($r2);

        if $z0 != 0 goto label1;

        staticinvoke <proguard.optimize.info.MethodOptimizationInfo: void setMethodOptimizationInfo(proguard.classfile.Clazz,proguard.classfile.Method)>($r1, $r2);

     label1:
        return;
    }
}
