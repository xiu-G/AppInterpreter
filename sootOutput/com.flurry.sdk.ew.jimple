public final class com.flurry.sdk.ew extends java.lang.Object
{
    private static org.apache.http.conn.scheme.SchemeRegistry a;

    public static org.apache.http.client.HttpClient a(org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.client.DefaultHttpClient $r1;
        org.apache.http.params.HttpParams $r0;

        $r0 := @parameter0: org.apache.http.params.HttpParams;

        $r1 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r0);

        return $r1;
    }

    private static org.apache.http.conn.scheme.SchemeRegistry a()
    {
        org.apache.http.conn.scheme.PlainSocketFactory $r0;
        java.lang.Throwable $r4;
        org.apache.http.conn.scheme.SchemeRegistry $r1;
        org.apache.http.conn.scheme.Scheme $r2;
        com.flurry.sdk.eu $r3;

        entermonitor class "Lcom/flurry/sdk/ew;";

     label1:
        $r1 = <com.flurry.sdk.ew: org.apache.http.conn.scheme.SchemeRegistry a>;

        if $r1 == null goto label3;

        $r1 = <com.flurry.sdk.ew: org.apache.http.conn.scheme.SchemeRegistry a>;

     label2:
        exitmonitor class "Lcom/flurry/sdk/ew;";

        return $r1;

     label3:
        $r1 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r1.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        <com.flurry.sdk.ew: org.apache.http.conn.scheme.SchemeRegistry a> = $r1;

        $r2 = new org.apache.http.conn.scheme.Scheme;

        $r0 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r2.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r0, 80);

        virtualinvoke $r1.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r2);

        $r1 = <com.flurry.sdk.ew: org.apache.http.conn.scheme.SchemeRegistry a>;

        $r2 = new org.apache.http.conn.scheme.Scheme;

        $r3 = new com.flurry.sdk.eu;

        specialinvoke $r3.<com.flurry.sdk.eu: void <init>()>();

        specialinvoke $r2.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("https", $r3, 443);

        virtualinvoke $r1.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r2);

        $r1 = <com.flurry.sdk.ew: org.apache.http.conn.scheme.SchemeRegistry a>;

     label4:
        goto label2;

     label5:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/flurry/sdk/ew;";

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static org.apache.http.client.HttpClient b(org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.client.DefaultHttpClient $r3;
        org.apache.http.conn.scheme.SchemeRegistry $r2;
        org.apache.http.impl.conn.SingleClientConnManager $r1;
        org.apache.http.params.HttpParams $r0;

        $r0 := @parameter0: org.apache.http.params.HttpParams;

        $r1 = new org.apache.http.impl.conn.SingleClientConnManager;

        $r2 = staticinvoke <com.flurry.sdk.ew: org.apache.http.conn.scheme.SchemeRegistry a()>();

        specialinvoke $r1.<org.apache.http.impl.conn.SingleClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>($r0, $r2);

        $r3 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r3.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r1, $r0);

        return $r3;
    }
}
