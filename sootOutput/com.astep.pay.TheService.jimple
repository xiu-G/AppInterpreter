public class com.astep.pay.TheService extends android.app.Service
{
    static final java.lang.String a;
    private com.astep.pay.plugin.f b;
    private java.util.HashMap c;
    public android.content.Intent ipcIntent;
    public android.os.IBinder ipcBinder_0;

    public void <init>()
    {
        java.util.HashMap $r2;
        com.astep.pay.plugin.f $r1;
        com.astep.pay.TheService r0;

        r0 := @this: com.astep.pay.TheService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.astep.pay.TheService: java.util.HashMap c> = $r2;

        $r1 = staticinvoke <com.astep.pay.plugin.f: com.astep.pay.plugin.f a()>();

        r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b> = $r1;

        return;
    }

    static com.astep.pay.plugin.f a(com.astep.pay.TheService)
    {
        com.astep.pay.plugin.f r1;
        com.astep.pay.TheService $r0;

        $r0 := @parameter0: com.astep.pay.TheService;

        r1 = $r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b>;

        return r1;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.content.Intent parameter0;
        com.astep.pay.TheService this;

        this := @this: com.astep.pay.TheService;

        parameter0 := @parameter0: android.content.Intent;

        parameter0 = virtualinvoke this.<com.astep.pay.TheService: android.content.Intent getIntent()>();

        this.<com.astep.pay.TheService: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.astep.pay.TheService: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.astep.pay.TheService: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.astep.pay.TheService: android.os.IBinder ipcBinder_0> = parameter0;

        return parameter0;
    }

    public void onCreate()
    {
        com.astep.pay.TheService r0;

        r0 := @this: com.astep.pay.TheService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        return;
    }

    public void onDestroy()
    {
        java.lang.Throwable $r10, $r11, $r12, $r13;
        java.lang.Object[] $r9;
        java.lang.NoSuchMethodException $r17;
        java.util.HashMap $r1;
        java.lang.reflect.Method $r8;
        boolean $z0;
        java.util.Map$Entry $r5;
        java.lang.IllegalAccessException $r15;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.lang.Class[] $r7;
        java.lang.IllegalArgumentException $r14;
        com.astep.pay.TheService r0;
        java.lang.reflect.InvocationTargetException $r16;
        java.lang.Object $r4;
        java.lang.Class $r6;

        r0 := @this: com.astep.pay.TheService;

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        $r1 = r0.<com.astep.pay.TheService: java.util.HashMap c>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

     label02:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

     label03:
        $r6 = (java.lang.Class) $r4;

        $r7 = newarray (java.lang.Class)[0];

     label04:
        $r8 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("onDestroy", $r7);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

     label05:
        $r9 = newarray (java.lang.Object)[0];

     label06:
        virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r9);

     label07:
        goto label01;

     label08:
        $r10 := @caughtexception;

        $r14 = (java.lang.IllegalArgumentException) $r10;

        virtualinvoke $r14.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label01;

     label09:
        $r11 := @caughtexception;

        $r15 = (java.lang.IllegalAccessException) $r11;

        virtualinvoke $r15.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label01;

     label10:
        $r12 := @caughtexception;

        $r16 = (java.lang.reflect.InvocationTargetException) $r12;

        virtualinvoke $r16.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        goto label01;

     label11:
        $r13 := @caughtexception;

        $r17 = (java.lang.NoSuchMethodException) $r13;

        virtualinvoke $r17.<java.lang.NoSuchMethodException: void printStackTrace()>();

        goto label01;

     label12:
        return;

        catch java.lang.IllegalArgumentException from label02 to label03 with label08;
        catch java.lang.IllegalArgumentException from label04 to label05 with label08;
        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
        catch java.lang.IllegalAccessException from label02 to label03 with label09;
        catch java.lang.IllegalAccessException from label04 to label05 with label09;
        catch java.lang.IllegalAccessException from label06 to label07 with label09;
        catch java.lang.reflect.InvocationTargetException from label02 to label03 with label10;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label10;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label10;
        catch java.lang.NoSuchMethodException from label02 to label03 with label11;
        catch java.lang.NoSuchMethodException from label04 to label05 with label11;
        catch java.lang.NoSuchMethodException from label06 to label07 with label11;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        android.os.Bundle $r4;
        java.lang.NoSuchMethodException $r37;
        java.lang.Integer $r25;
        java.lang.InstantiationException $r33;
        java.lang.reflect.Method $r24;
        boolean $z0;
        java.lang.IllegalAccessException $r34;
        java.util.Set $r8;
        java.lang.reflect.InvocationTargetException $r36;
        java.lang.StringBuilder $r3, $r30;
        java.lang.Throwable $r19, $r20, $r21, $r22, $r23, $r26, $r27, $r28, $r29;
        java.lang.Object[] $r17;
        android.content.Intent $r1;
        java.util.HashMap $r7;
        java.lang.reflect.Constructor $r16;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r13;
        java.util.Map$Entry $r11;
        java.util.Iterator $r9;
        com.astep.pay.c $r31;
        java.lang.Class[] $r15;
        java.lang.RuntimeException $r32;
        java.lang.IllegalArgumentException $r35;
        com.astep.pay.TheService r0;
        com.astep.pay.plugin.f $r5;
        java.lang.Object $r2, $r10;
        java.lang.Class $r12, $r14;
        java.lang.ClassNotFoundException $r18;

        r0 := @this: com.astep.pay.TheService;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.astep.pay.TheService: android.content.Intent getIntent()>();

        $r2 = null;

        $z0 = 0;

        $r30 = new java.lang.StringBuilder;

        $r3 = $r30;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("onStartCommand");

        if $r1 != null goto label01;

        $z0 = 1;

     label01:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r1 != null goto label02;

        return 1;

     label02:
        $r4 = virtualinvoke $r1.<android.content.Intent: android.os.Bundle getExtras()>();

        if $r4 == null goto label62;

        $i2 = virtualinvoke $r4.<android.os.Bundle: int getInt(java.lang.String)>("s_action");

        if $i2 != 100 goto label04;

        $r5 = staticinvoke <com.astep.pay.plugin.f: com.astep.pay.plugin.f a()>();

        if $r5 == null goto label03;

        $r5 = r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b>;

        if $r5 != null goto label62;

        $r5 = staticinvoke <com.astep.pay.plugin.f: com.astep.pay.plugin.f a()>();

        r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b> = $r5;

        return 1;

     label03:
        $r5 = staticinvoke <com.astep.pay.plugin.f: com.astep.pay.plugin.f a(java.lang.String)>("astep.bin");

        r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b> = $r5;

        $r5 = r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b>;

        $r31 = new com.astep.pay.c;

        specialinvoke $r31.<com.astep.pay.c: void <init>(com.astep.pay.TheService)>(r0);

        virtualinvoke $r5.<com.astep.pay.plugin.f: void a(android.content.Context,com.astep.pay.plugin.d)>(r0, $r31);

        return 1;

     label04:
        $r5 = r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b>;

        if $r5 != null goto label05;

        $r5 = staticinvoke <com.astep.pay.plugin.f: com.astep.pay.plugin.f a()>();

        r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b> = $r5;

     label05:
        $r5 = r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b>;

        if $r5 == null goto label06;

        $r5 = r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b>;

        $z0 = virtualinvoke $r5.<com.astep.pay.plugin.f: boolean e()>();

        if $z0 != 0 goto label07;

     label06:
        $r32 = new java.lang.RuntimeException;

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String)>("TheService PluginManager is not init");

        throw $r32;

     label07:
        $r6 = virtualinvoke $r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("s_class");

        if $r6 != null goto label08;

        $r32 = new java.lang.RuntimeException;

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String)>("TheService input className is null");

        throw $r32;

     label08:
        $r7 = r0.<com.astep.pay.TheService: java.util.HashMap c>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label61;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.util.Map$Entry) $r10;

        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.Class) $r10;

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label09;

        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.Class) $r10;

     label10:
        if $r12 != null goto label35;

        $r30 = new java.lang.StringBuilder;

        $r3 = $r30;

     label11:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("clsName:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r5 = r0.<com.astep.pay.TheService: com.astep.pay.plugin.f b>;

     label13:
        $r14 = virtualinvoke $r5.<com.astep.pay.plugin.f: java.lang.Class b(java.lang.String)>($r6);

     label14:
        $r12 = $r14;

        $r15 = newarray (java.lang.Class)[1];

        $r15[0] = class "Landroid/app/Service;";

     label15:
        $r16 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r15);

     label16:
        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = r0;

     label17:
        $r10 = virtualinvoke $r16.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r17);

     label18:
        $r2 = $r10;

        $r7 = r0.<com.astep.pay.TheService: java.util.HashMap c>;

     label19:
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r10);

     label20:
        $r2 = $r10;

     label21:
        if $r12 == null goto label22;

        if $r2 != null goto label36;

     label22:
        $r32 = new java.lang.RuntimeException;

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String)>("TheService load service class error");

        throw $r32;

     label23:
        $r18 := @caughtexception;

        $r2 = null;

     label24:
        virtualinvoke $r18.<java.lang.ClassNotFoundException: void printStackTrace()>();

        goto label21;

     label25:
        $r19 := @caughtexception;

     label26:
        $r33 = (java.lang.InstantiationException) $r19;

        virtualinvoke $r33.<java.lang.InstantiationException: void printStackTrace()>();

        goto label21;

     label27:
        $r20 := @caughtexception;

     label28:
        $r34 = (java.lang.IllegalAccessException) $r20;

        virtualinvoke $r34.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label21;

     label29:
        $r21 := @caughtexception;

     label30:
        $r35 = (java.lang.IllegalArgumentException) $r21;

        virtualinvoke $r35.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label21;

     label31:
        $r22 := @caughtexception;

     label32:
        $r36 = (java.lang.reflect.InvocationTargetException) $r22;

        virtualinvoke $r36.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        goto label21;

     label33:
        $r23 := @caughtexception;

     label34:
        $r37 = (java.lang.NoSuchMethodException) $r23;

        virtualinvoke $r37.<java.lang.NoSuchMethodException: void printStackTrace()>();

        goto label21;

     label35:
        $r7 = r0.<com.astep.pay.TheService: java.util.HashMap c>;

        $r2 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r12);

        goto label21;

     label36:
        $r15 = newarray (java.lang.Class)[3];

        $r15[0] = class "Landroid/content/Intent;";

        $r14 = <java.lang.Integer: java.lang.Class TYPE>;

        $r15[1] = $r14;

        $r14 = <java.lang.Integer: java.lang.Class TYPE>;

        $r15[2] = $r14;

     label37:
        $r24 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("onStartCommand", $r15);

     label38:
        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = $r1;

     label39:
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label40:
        $r17[1] = $r25;

     label41:
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label42:
        $r17[2] = $r25;

     label43:
        virtualinvoke $r24.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r17);

     label44:
        return 1;

     label45:
        $r26 := @caughtexception;

        $r35 = (java.lang.IllegalArgumentException) $r26;

        virtualinvoke $r35.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return 1;

     label46:
        $r27 := @caughtexception;

        $r34 = (java.lang.IllegalAccessException) $r27;

        virtualinvoke $r34.<java.lang.IllegalAccessException: void printStackTrace()>();

        return 1;

     label47:
        $r28 := @caughtexception;

        $r36 = (java.lang.reflect.InvocationTargetException) $r28;

        virtualinvoke $r36.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        return 1;

     label48:
        $r29 := @caughtexception;

        $r37 = (java.lang.NoSuchMethodException) $r29;

        virtualinvoke $r37.<java.lang.NoSuchMethodException: void printStackTrace()>();

        return 1;

     label49:
        $r23 := @caughtexception;

        goto label34;

     label50:
        $r23 := @caughtexception;

        $r2 = $r10;

        goto label34;

     label51:
        $r22 := @caughtexception;

        goto label32;

     label52:
        $r22 := @caughtexception;

        $r2 = $r10;

        goto label32;

     label53:
        $r21 := @caughtexception;

        goto label30;

     label54:
        $r21 := @caughtexception;

        $r2 = $r10;

        goto label30;

     label55:
        $r20 := @caughtexception;

        goto label28;

     label56:
        $r20 := @caughtexception;

        $r2 = $r10;

        goto label28;

     label57:
        $r19 := @caughtexception;

        goto label26;

     label58:
        $r19 := @caughtexception;

        $r2 = $r10;

        goto label26;

     label59:
        $r18 := @caughtexception;

        $r2 = null;

        $r12 = $r14;

        goto label24;

     label60:
        $r18 := @caughtexception;

        $r12 = $r14;

        goto label24;

     label61:
        $r12 = null;

        goto label10;

     label62:
        return 1;

        catch java.lang.ClassNotFoundException from label11 to label12 with label23;
        catch java.lang.ClassNotFoundException from label13 to label14 with label23;
        catch java.lang.InstantiationException from label11 to label12 with label25;
        catch java.lang.InstantiationException from label13 to label14 with label25;
        catch java.lang.IllegalAccessException from label11 to label12 with label27;
        catch java.lang.IllegalAccessException from label13 to label14 with label27;
        catch java.lang.IllegalArgumentException from label11 to label12 with label29;
        catch java.lang.IllegalArgumentException from label13 to label14 with label29;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label31;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label31;
        catch java.lang.NoSuchMethodException from label11 to label12 with label33;
        catch java.lang.NoSuchMethodException from label13 to label14 with label33;
        catch java.lang.ClassNotFoundException from label15 to label16 with label59;
        catch java.lang.ClassNotFoundException from label17 to label18 with label59;
        catch java.lang.InstantiationException from label15 to label16 with label57;
        catch java.lang.InstantiationException from label17 to label18 with label57;
        catch java.lang.IllegalAccessException from label15 to label16 with label55;
        catch java.lang.IllegalAccessException from label17 to label18 with label55;
        catch java.lang.IllegalArgumentException from label15 to label16 with label53;
        catch java.lang.IllegalArgumentException from label17 to label18 with label53;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label51;
        catch java.lang.reflect.InvocationTargetException from label17 to label18 with label51;
        catch java.lang.NoSuchMethodException from label15 to label16 with label49;
        catch java.lang.NoSuchMethodException from label17 to label18 with label49;
        catch java.lang.ClassNotFoundException from label19 to label20 with label60;
        catch java.lang.InstantiationException from label19 to label20 with label58;
        catch java.lang.IllegalAccessException from label19 to label20 with label56;
        catch java.lang.IllegalArgumentException from label19 to label20 with label54;
        catch java.lang.reflect.InvocationTargetException from label19 to label20 with label52;
        catch java.lang.NoSuchMethodException from label19 to label20 with label50;
        catch java.lang.IllegalArgumentException from label37 to label38 with label45;
        catch java.lang.IllegalArgumentException from label39 to label40 with label45;
        catch java.lang.IllegalArgumentException from label41 to label42 with label45;
        catch java.lang.IllegalArgumentException from label43 to label44 with label45;
        catch java.lang.IllegalAccessException from label37 to label38 with label46;
        catch java.lang.IllegalAccessException from label39 to label40 with label46;
        catch java.lang.IllegalAccessException from label41 to label42 with label46;
        catch java.lang.IllegalAccessException from label43 to label44 with label46;
        catch java.lang.reflect.InvocationTargetException from label37 to label38 with label47;
        catch java.lang.reflect.InvocationTargetException from label39 to label40 with label47;
        catch java.lang.reflect.InvocationTargetException from label41 to label42 with label47;
        catch java.lang.reflect.InvocationTargetException from label43 to label44 with label47;
        catch java.lang.NoSuchMethodException from label37 to label38 with label48;
        catch java.lang.NoSuchMethodException from label39 to label40 with label48;
        catch java.lang.NoSuchMethodException from label41 to label42 with label48;
        catch java.lang.NoSuchMethodException from label43 to label44 with label48;
    }

    public android.content.Intent getIntent()
    {
        android.content.Intent $r0;
        com.astep.pay.TheService this;

        this := @this: com.astep.pay.TheService;

        $r0 = this.<com.astep.pay.TheService: android.content.Intent ipcIntent>;

        return $r0;
    }

    public static void <clinit>()
    {
        <com.astep.pay.TheService: java.lang.String a> = "TheService";

        return;
    }
}
