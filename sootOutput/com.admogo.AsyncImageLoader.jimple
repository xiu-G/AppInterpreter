public class com.admogo.AsyncImageLoader extends java.lang.Object
{
    private java.util.concurrent.ExecutorService executorService;
    private final android.os.Handler handler;
    public java.util.Map imageCache;

    public void <init>()
    {
        com.admogo.AsyncImageLoader r0;
        android.os.Handler $r3;
        java.util.HashMap $r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.admogo.AsyncImageLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.admogo.AsyncImageLoader: java.util.Map imageCache> = $r2;

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(5);

        r0.<com.admogo.AsyncImageLoader: java.util.concurrent.ExecutorService executorService> = $r1;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<com.admogo.AsyncImageLoader: android.os.Handler handler> = $r3;

        return;
    }

    static android.os.Handler access$0(com.admogo.AsyncImageLoader)
    {
        com.admogo.AsyncImageLoader $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.admogo.AsyncImageLoader;

        r1 = $r0.<com.admogo.AsyncImageLoader: android.os.Handler handler>;

        return r1;
    }

    public android.graphics.drawable.Drawable loadDrawable(java.lang.String, com.admogo.AsyncImageLoader$ImageCallback)
    {
        com.admogo.AsyncImageLoader$ImageCallback $r2;
        com.admogo.AsyncImageLoader$1 $r8;
        android.graphics.drawable.Drawable $r6;
        com.admogo.AsyncImageLoader r0;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String $r1;
        java.lang.ref.SoftReference $r5;
        java.util.concurrent.ExecutorService $r7;
        boolean $z0;

        r0 := @this: com.admogo.AsyncImageLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.admogo.AsyncImageLoader$ImageCallback;

        $r3 = r0.<com.admogo.AsyncImageLoader: java.util.Map imageCache>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.admogo.AsyncImageLoader: java.util.Map imageCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.lang.ref.SoftReference) $r4;

        $r4 = virtualinvoke $r5.<java.lang.ref.SoftReference: java.lang.Object get()>();

        if $r4 == null goto label1;

        $r4 = virtualinvoke $r5.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r6 = (android.graphics.drawable.Drawable) $r4;

        return $r6;

     label1:
        $r7 = r0.<com.admogo.AsyncImageLoader: java.util.concurrent.ExecutorService executorService>;

        $r8 = new com.admogo.AsyncImageLoader$1;

        specialinvoke $r8.<com.admogo.AsyncImageLoader$1: void <init>(com.admogo.AsyncImageLoader,java.lang.String,com.admogo.AsyncImageLoader$ImageCallback)>(r0, $r1, $r2);

        interfaceinvoke $r7.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r8);

        return null;
    }

    protected android.graphics.drawable.Drawable loadImageFromUrl(java.lang.String)
    {
        com.admogo.AsyncImageLoader r0;
        java.net.URL $r2;
        java.lang.String $r1;
        java.lang.RuntimeException $r6;
        android.graphics.drawable.Drawable $r4;
        java.lang.Exception $r5;
        java.io.InputStream $r3;

        r0 := @this: com.admogo.AsyncImageLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.net.URL;

     label1:
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.net.URL: java.io.InputStream openStream()>();

        $r4 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>($r3, "image.png");

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
