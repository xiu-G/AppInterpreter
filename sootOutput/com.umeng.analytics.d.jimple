public class com.umeng.analytics.d extends java.lang.Object
{
    private static java.util.concurrent.ExecutorService a;
    private static long b;
    private static java.util.concurrent.ExecutorService c;

    static void <clinit>()
    {
        java.util.concurrent.ExecutorService $r0;

        $r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        <com.umeng.analytics.d: java.util.concurrent.ExecutorService a> = $r0;

        <com.umeng.analytics.d: long b> = 5L;

        $r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        <com.umeng.analytics.d: java.util.concurrent.ExecutorService c> = $r0;

        return;
    }

    public void <init>()
    {
        com.umeng.analytics.d r0;

        r0 := @this: com.umeng.analytics.d;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void a()
    {
        java.util.concurrent.TimeUnit $r1;
        long $l0;
        java.util.concurrent.ExecutorService $r0;
        java.lang.Exception $r2;
        boolean $z0;

        $r0 = <com.umeng.analytics.d: java.util.concurrent.ExecutorService a>;

     label01:
        $z0 = interfaceinvoke $r0.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

     label02:
        if $z0 != 0 goto label04;

        $r0 = <com.umeng.analytics.d: java.util.concurrent.ExecutorService a>;

     label03:
        interfaceinvoke $r0.<java.util.concurrent.ExecutorService: void shutdown()>();

     label04:
        $r0 = <com.umeng.analytics.d: java.util.concurrent.ExecutorService c>;

     label05:
        $z0 = interfaceinvoke $r0.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

     label06:
        if $z0 != 0 goto label08;

        $r0 = <com.umeng.analytics.d: java.util.concurrent.ExecutorService c>;

     label07:
        interfaceinvoke $r0.<java.util.concurrent.ExecutorService: void shutdown()>();

     label08:
        $r0 = <com.umeng.analytics.d: java.util.concurrent.ExecutorService a>;

        $l0 = <com.umeng.analytics.d: long b>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label09:
        interfaceinvoke $r0.<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>($l0, $r1);

     label10:
        $r0 = <com.umeng.analytics.d: java.util.concurrent.ExecutorService c>;

        $l0 = <com.umeng.analytics.d: long b>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label11:
        interfaceinvoke $r0.<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>($l0, $r1);

     label12:
        return;

     label13:
        $r2 := @caughtexception;

        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public static void a(java.lang.Runnable)
    {
        java.lang.Runnable $r0;
        java.util.concurrent.ExecutorService $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Runnable;

        $r1 = <com.umeng.analytics.d: java.util.concurrent.ExecutorService a>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        <com.umeng.analytics.d: java.util.concurrent.ExecutorService a> = $r1;

     label1:
        $r1 = <com.umeng.analytics.d: java.util.concurrent.ExecutorService a>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r0);

        return;
    }

    public static void b(java.lang.Runnable)
    {
        java.lang.Runnable $r0;
        java.util.concurrent.ExecutorService $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Runnable;

        $r1 = <com.umeng.analytics.d: java.util.concurrent.ExecutorService c>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        <com.umeng.analytics.d: java.util.concurrent.ExecutorService c> = $r1;

     label1:
        $r1 = <com.umeng.analytics.d: java.util.concurrent.ExecutorService c>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r0);

        return;
    }
}
