public class proguard.shrink.ShortestUsageMarker extends proguard.shrink.UsageMarker
{
    private static final proguard.shrink.ShortestUsageMark INITIAL_MARK;
    private proguard.shrink.ShortestUsageMark currentUsageMark;
    private final proguard.shrink.ShortestUsageMarker$MyRecursiveCauseChecker recursiveCauseChecker;

    static void <clinit>()
    {
        proguard.shrink.ShortestUsageMark $r0;

        $r0 = new proguard.shrink.ShortestUsageMark;

        specialinvoke $r0.<proguard.shrink.ShortestUsageMark: void <init>(java.lang.String)>("is kept by a directive in the configuration.\n\n");

        <proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark INITIAL_MARK> = $r0;

        return;
    }

    public void <init>()
    {
        proguard.shrink.ShortestUsageMark $r1;
        proguard.shrink.ShortestUsageMarker$MyRecursiveCauseChecker $r2;
        proguard.shrink.ShortestUsageMarker r0;

        r0 := @this: proguard.shrink.ShortestUsageMarker;

        specialinvoke r0.<proguard.shrink.UsageMarker: void <init>()>();

        $r1 = <proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark INITIAL_MARK>;

        r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark> = $r1;

        $r2 = new proguard.shrink.ShortestUsageMarker$MyRecursiveCauseChecker;

        specialinvoke $r2.<proguard.shrink.ShortestUsageMarker$MyRecursiveCauseChecker: void <init>(proguard.shrink.ShortestUsageMarker,proguard.shrink.ShortestUsageMarker$1)>(r0, null);

        r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMarker$MyRecursiveCauseChecker recursiveCauseChecker> = $r2;

        return;
    }

    private boolean isCausedBy(proguard.shrink.ShortestUsageMark, proguard.classfile.Clazz)
    {
        proguard.classfile.Clazz $r2;
        proguard.shrink.ShortestUsageMark $r1;
        proguard.shrink.ShortestUsageMarker$MyRecursiveCauseChecker $r3;
        proguard.shrink.ShortestUsageMarker r0;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsageMarker;

        $r1 := @parameter0: proguard.shrink.ShortestUsageMark;

        $r2 := @parameter1: proguard.classfile.Clazz;

        $r3 = r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMarker$MyRecursiveCauseChecker recursiveCauseChecker>;

        $z0 = virtualinvoke $r3.<proguard.shrink.ShortestUsageMarker$MyRecursiveCauseChecker: boolean check(proguard.shrink.ShortestUsageMark,proguard.classfile.Clazz)>($r1, $r2);

        return $z0;
    }

    protected proguard.shrink.ShortestUsageMark getShortestUsageMark(proguard.classfile.VisitorAccepter)
    {
        proguard.classfile.VisitorAccepter $r0;
        proguard.shrink.ShortestUsageMark r3;
        java.lang.Object $r1;
        proguard.shrink.ShortestUsageMarker r2;

        r2 := @this: proguard.shrink.ShortestUsageMarker;

        $r0 := @parameter0: proguard.classfile.VisitorAccepter;

        $r1 = interfaceinvoke $r0.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        r3 = (proguard.shrink.ShortestUsageMark) $r1;

        return r3;
    }

    protected boolean isPossiblyUsed(proguard.classfile.VisitorAccepter)
    {
        proguard.classfile.VisitorAccepter $r0;
        proguard.shrink.ShortestUsageMark r3;
        java.lang.Object $r2;
        proguard.shrink.ShortestUsageMarker r1;
        boolean $z0;

        r1 := @this: proguard.shrink.ShortestUsageMarker;

        $r0 := @parameter0: proguard.classfile.VisitorAccepter;

        $r2 = interfaceinvoke $r0.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        if $r2 == null goto label1;

        $z0 = $r2 instanceof proguard.shrink.ShortestUsageMark;

        if $z0 == 0 goto label1;

        r3 = (proguard.shrink.ShortestUsageMark) $r2;

        $z0 = virtualinvoke r3.<proguard.shrink.ShortestUsageMark: boolean isCertain()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isUsed(proguard.classfile.VisitorAccepter)
    {
        proguard.classfile.VisitorAccepter $r0;
        proguard.shrink.ShortestUsageMark r3;
        java.lang.Object $r2;
        proguard.shrink.ShortestUsageMarker r1;
        boolean $z0;

        r1 := @this: proguard.shrink.ShortestUsageMarker;

        $r0 := @parameter0: proguard.classfile.VisitorAccepter;

        $r2 = interfaceinvoke $r0.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        if $r2 == null goto label1;

        $z0 = $r2 instanceof proguard.shrink.ShortestUsageMark;

        if $z0 == 0 goto label1;

        r3 = (proguard.shrink.ShortestUsageMark) $r2;

        $z0 = virtualinvoke r3.<proguard.shrink.ShortestUsageMark: boolean isCertain()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void markAsPossiblyUsed(proguard.classfile.VisitorAccepter)
    {
        proguard.classfile.VisitorAccepter $r1;
        proguard.shrink.ShortestUsageMark $r2, $r3;
        proguard.shrink.ShortestUsageMarker r0;

        r0 := @this: proguard.shrink.ShortestUsageMarker;

        $r1 := @parameter0: proguard.classfile.VisitorAccepter;

        $r2 = new proguard.shrink.ShortestUsageMark;

        $r3 = r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark>;

        specialinvoke $r2.<proguard.shrink.ShortestUsageMark: void <init>(proguard.shrink.ShortestUsageMark,boolean)>($r3, 0);

        interfaceinvoke $r1.<proguard.classfile.VisitorAccepter: void setVisitorInfo(java.lang.Object)>($r2);

        return;
    }

    protected void markAsUsed(proguard.classfile.VisitorAccepter)
    {
        proguard.classfile.VisitorAccepter $r1;
        proguard.shrink.ShortestUsageMark $r3, $r4;
        java.lang.Object $r2;
        proguard.shrink.ShortestUsageMarker r0;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsageMarker;

        $r1 := @parameter0: proguard.classfile.VisitorAccepter;

        $r2 = interfaceinvoke $r1.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        if $r2 == null goto label2;

        $z0 = $r2 instanceof proguard.shrink.ShortestUsageMark;

        if $z0 == 0 goto label2;

        $r3 = (proguard.shrink.ShortestUsageMark) $r2;

        $z0 = virtualinvoke $r3.<proguard.shrink.ShortestUsageMark: boolean isCertain()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark>;

        $r4 = (proguard.shrink.ShortestUsageMark) $r2;

        $z0 = virtualinvoke $r3.<proguard.shrink.ShortestUsageMark: boolean isShorter(proguard.shrink.ShortestUsageMark)>($r4);

        if $z0 != 0 goto label2;

        $r3 = new proguard.shrink.ShortestUsageMark;

        $r4 = (proguard.shrink.ShortestUsageMark) $r2;

        specialinvoke $r3.<proguard.shrink.ShortestUsageMark: void <init>(proguard.shrink.ShortestUsageMark,boolean)>($r4, 1);

     label1:
        interfaceinvoke $r1.<proguard.classfile.VisitorAccepter: void setVisitorInfo(java.lang.Object)>($r3);

        return;

     label2:
        $r3 = r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark>;

        goto label1;
    }

    protected void markMethodHierarchy(proguard.classfile.Clazz, proguard.classfile.Method)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.Method $r2;
        proguard.shrink.ShortestUsageMark $r3, $r4, $r5;
        proguard.shrink.ShortestUsageMarker r0;

        r0 := @this: proguard.shrink.ShortestUsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r4 = r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark>;

        $r3 = new proguard.shrink.ShortestUsageMark;

        $r5 = virtualinvoke r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark getShortestUsageMark(proguard.classfile.VisitorAccepter)>($r2);

        specialinvoke $r3.<proguard.shrink.ShortestUsageMark: void <init>(proguard.shrink.ShortestUsageMark,java.lang.String,int,proguard.classfile.Clazz,proguard.classfile.Member)>($r5, "implements       ", 100, $r1, $r2);

        r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark> = $r3;

        specialinvoke r0.<proguard.shrink.UsageMarker: void markMethodHierarchy(proguard.classfile.Clazz,proguard.classfile.Method)>($r1, $r2);

        r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark> = $r4;

        return;
    }

    protected void markProgramClassBody(proguard.classfile.ProgramClass)
    {
        proguard.shrink.ShortestUsageMark $r2, $r3, $r4;
        proguard.shrink.ShortestUsageMarker r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.shrink.ShortestUsageMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark>;

        $r3 = new proguard.shrink.ShortestUsageMark;

        $r4 = virtualinvoke r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark getShortestUsageMark(proguard.classfile.VisitorAccepter)>($r1);

        specialinvoke $r3.<proguard.shrink.ShortestUsageMark: void <init>(proguard.shrink.ShortestUsageMark,java.lang.String,int,proguard.classfile.Clazz)>($r4, "is extended by   ", 10000, $r1);

        r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark> = $r3;

        specialinvoke r0.<proguard.shrink.UsageMarker: void markProgramClassBody(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark> = $r2;

        return;
    }

    protected void markProgramFieldBody(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        proguard.classfile.ProgramField $r2;
        proguard.shrink.ShortestUsageMark $r3, $r4, $r5;
        proguard.shrink.ShortestUsageMarker r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.shrink.ShortestUsageMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r4 = r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark>;

        $r3 = new proguard.shrink.ShortestUsageMark;

        $r5 = virtualinvoke r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark getShortestUsageMark(proguard.classfile.VisitorAccepter)>($r2);

        specialinvoke $r3.<proguard.shrink.ShortestUsageMark: void <init>(proguard.shrink.ShortestUsageMark,java.lang.String,int,proguard.classfile.Clazz,proguard.classfile.Member)>($r5, "is referenced by ", 1, $r1, $r2);

        r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark> = $r3;

        specialinvoke r0.<proguard.shrink.UsageMarker: void markProgramFieldBody(proguard.classfile.ProgramClass,proguard.classfile.ProgramField)>($r1, $r2);

        r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark> = $r4;

        return;
    }

    protected void markProgramMethodBody(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.classfile.ProgramMethod $r2;
        proguard.shrink.ShortestUsageMark $r3, $r4, $r5;
        proguard.shrink.ShortestUsageMarker r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.shrink.ShortestUsageMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r4 = r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark>;

        $r3 = new proguard.shrink.ShortestUsageMark;

        $r5 = virtualinvoke r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark getShortestUsageMark(proguard.classfile.VisitorAccepter)>($r2);

        specialinvoke $r3.<proguard.shrink.ShortestUsageMark: void <init>(proguard.shrink.ShortestUsageMark,java.lang.String,int,proguard.classfile.Clazz,proguard.classfile.Member)>($r5, "is invoked by    ", 1, $r1, $r2);

        r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark> = $r3;

        specialinvoke r0.<proguard.shrink.UsageMarker: void markProgramMethodBody(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod)>($r1, $r2);

        r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark> = $r4;

        return;
    }

    protected boolean shouldBeMarkedAsPossiblyUsed(proguard.classfile.VisitorAccepter)
    {
        proguard.classfile.VisitorAccepter $r1;
        proguard.shrink.ShortestUsageMark $r3, $r4;
        java.lang.Object $r2;
        proguard.shrink.ShortestUsageMarker r0;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsageMarker;

        $r1 := @parameter0: proguard.classfile.VisitorAccepter;

        $r2 = interfaceinvoke $r1.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        if $r2 == null goto label1;

        $z0 = $r2 instanceof proguard.shrink.ShortestUsageMark;

        if $z0 == 0 goto label1;

        $r3 = (proguard.shrink.ShortestUsageMark) $r2;

        $z0 = virtualinvoke $r3.<proguard.shrink.ShortestUsageMark: boolean isCertain()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark>;

        $r4 = (proguard.shrink.ShortestUsageMark) $r2;

        $z0 = virtualinvoke $r3.<proguard.shrink.ShortestUsageMark: boolean isShorter(proguard.shrink.ShortestUsageMark)>($r4);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    protected boolean shouldBeMarkedAsUsed(proguard.classfile.VisitorAccepter)
    {
        proguard.classfile.VisitorAccepter $r1;
        proguard.shrink.ShortestUsageMark $r3, $r4;
        java.lang.Object $r2;
        proguard.shrink.ShortestUsageMarker r0;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsageMarker;

        $r1 := @parameter0: proguard.classfile.VisitorAccepter;

        $r2 = interfaceinvoke $r1.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        if $r2 == null goto label1;

        $z0 = $r2 instanceof proguard.shrink.ShortestUsageMark;

        if $z0 == 0 goto label1;

        $r3 = (proguard.shrink.ShortestUsageMark) $r2;

        $z0 = virtualinvoke $r3.<proguard.shrink.ShortestUsageMark: boolean isCertain()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark currentUsageMark>;

        $r4 = (proguard.shrink.ShortestUsageMark) $r2;

        $z0 = virtualinvoke $r3.<proguard.shrink.ShortestUsageMark: boolean isShorter(proguard.shrink.ShortestUsageMark)>($r4);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
}
