class proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.constant.visitor.ConstantVisitor
{
    private final proguard.classfile.io.ProgramClassWriter this$0;

    private void <init>(proguard.classfile.io.ProgramClassWriter)
    {
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0> = $r1;

        return;
    }

    void <init>(proguard.classfile.io.ProgramClassWriter, proguard.classfile.io.ProgramClassWriter$1)
    {
        proguard.classfile.io.ProgramClassWriter$1 $r2;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        $r2 := @parameter1: proguard.classfile.io.ProgramClassWriter$1;

        specialinvoke r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: void <init>(proguard.classfile.io.ProgramClassWriter)>($r1);

        return;
    }

    public void visitAnyRefConstant(proguard.classfile.Clazz, proguard.classfile.constant.RefConstant)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r4;
        proguard.classfile.constant.RefConstant $r2;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r3;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.RefConstant;

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.constant.RefConstant: int u2classIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.constant.RefConstant: int u2nameAndTypeIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.constant.ClassConstant $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r2.<proguard.classfile.constant.ClassConstant: int u2nameIndex>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitDoubleConstant(proguard.classfile.Clazz, proguard.classfile.constant.DoubleConstant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r4;
        proguard.classfile.constant.DoubleConstant $r2;
        double $d0;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.DoubleConstant;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $d0 = $r2.<proguard.classfile.constant.DoubleConstant: double f8value>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeDouble(double)>($d0);

        return;
    }

    public void visitFloatConstant(proguard.classfile.Clazz, proguard.classfile.constant.FloatConstant)
    {
        proguard.classfile.constant.FloatConstant $r2;
        proguard.classfile.Clazz $r1;
        float $f0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.FloatConstant;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $f0 = $r2.<proguard.classfile.constant.FloatConstant: float f4value>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeFloat(float)>($f0);

        return;
    }

    public void visitIntegerConstant(proguard.classfile.Clazz, proguard.classfile.constant.IntegerConstant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.IntegerConstant $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.IntegerConstant;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r2.<proguard.classfile.constant.IntegerConstant: int u4value>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeInt(int)>($i0);

        return;
    }

    public void visitLongConstant(proguard.classfile.Clazz, proguard.classfile.constant.LongConstant)
    {
        proguard.classfile.constant.LongConstant $r2;
        proguard.classfile.Clazz $r1;
        long $l0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.LongConstant;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $l0 = $r2.<proguard.classfile.constant.LongConstant: long u8value>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeLong(long)>($l0);

        return;
    }

    public void visitNameAndTypeConstant(proguard.classfile.Clazz, proguard.classfile.constant.NameAndTypeConstant)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.constant.NameAndTypeConstant $r2;
        proguard.classfile.io.RuntimeDataOutput $r4;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r3;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.NameAndTypeConstant;

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.constant.NameAndTypeConstant: int u2nameIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.constant.NameAndTypeConstant: int u2descriptorIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitStringConstant(proguard.classfile.Clazz, proguard.classfile.constant.StringConstant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.StringConstant $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.StringConstant;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r2.<proguard.classfile.constant.StringConstant: int u2stringIndex>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitUtf8Constant(proguard.classfile.Clazz, proguard.classfile.constant.Utf8Constant)
    {
        byte[] $r3;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r5;
        proguard.classfile.constant.Utf8Constant $r2;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.Utf8Constant;

        $r3 = virtualinvoke $r2.<proguard.classfile.constant.Utf8Constant: byte[] getBytes()>();

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = lengthof $r3;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void write(byte[])>($r3);

        return;
    }
}
