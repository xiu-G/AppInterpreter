public final class com.android.volley.toolbox.j extends java.lang.Object implements com.android.volley.toolbox.i
{
    private final com.android.volley.toolbox.k a;
    private final javax.net.ssl.SSLSocketFactory b;

    public void <init>()
    {
        com.android.volley.toolbox.j r0;

        r0 := @this: com.android.volley.toolbox.j;

        specialinvoke r0.<com.android.volley.toolbox.j: void <init>(com.android.volley.toolbox.k)>(null);

        return;
    }

    private void <init>(com.android.volley.toolbox.k)
    {
        com.android.volley.toolbox.k $r1;
        com.android.volley.toolbox.j r0;

        r0 := @this: com.android.volley.toolbox.j;

        $r1 := @parameter0: com.android.volley.toolbox.k;

        specialinvoke r0.<com.android.volley.toolbox.j: void <init>(com.android.volley.toolbox.k,javax.net.ssl.SSLSocketFactory)>(null, null);

        return;
    }

    private void <init>(com.android.volley.toolbox.k, javax.net.ssl.SSLSocketFactory)
    {
        com.android.volley.toolbox.k $r1;
        com.android.volley.toolbox.j r0;
        javax.net.ssl.SSLSocketFactory $r2;

        r0 := @this: com.android.volley.toolbox.j;

        $r1 := @parameter0: com.android.volley.toolbox.k;

        $r2 := @parameter1: javax.net.ssl.SSLSocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.volley.toolbox.j: com.android.volley.toolbox.k a> = $r1;

        r0.<com.android.volley.toolbox.j: javax.net.ssl.SSLSocketFactory b> = null;

        return;
    }

    private static org.apache.http.HttpEntity a(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r0;
        java.lang.Throwable $r4;
        org.apache.http.entity.BasicHttpEntity $r1;
        int $i1;
        long $l0;
        java.lang.String $r3;
        java.io.InputStream $r2;

        $r0 := @parameter0: java.net.HttpURLConnection;

        $r1 = new org.apache.http.entity.BasicHttpEntity;

        specialinvoke $r1.<org.apache.http.entity.BasicHttpEntity: void <init>()>();

     label1:
        $r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label2:
        virtualinvoke $r1.<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)>($r2);

        $i1 = virtualinvoke $r0.<java.net.HttpURLConnection: int getContentLength()>();

        $l0 = (long) $i1;

        virtualinvoke $r1.<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)>($l0);

        $r3 = virtualinvoke $r0.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>();

        virtualinvoke $r1.<org.apache.http.entity.BasicHttpEntity: void setContentEncoding(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        virtualinvoke $r1.<org.apache.http.entity.BasicHttpEntity: void setContentType(java.lang.String)>($r3);

        return $r1;

     label3:
        $r4 := @caughtexception;

        $r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        goto label2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void a(java.net.HttpURLConnection, com.android.volley.p)
    {
        java.net.HttpURLConnection $r0;
        com.android.volley.p $r1;

        $r0 := @parameter0: java.net.HttpURLConnection;

        $r1 := @parameter1: com.android.volley.p;

        return;
    }

    public final org.apache.http.HttpResponse a(com.android.volley.p, java.util.Map)
    {
        java.net.HttpURLConnection $r12;
        byte[] $r18;
        java.lang.IllegalStateException $r29;
        java.net.URL $r10, $r28;
        java.io.DataOutputStream $r19, $r30;
        java.util.Map $r2, $r5;
        boolean $z0;
        org.apache.http.HttpEntity $r22;
        java.util.Set $r15;
        javax.net.ssl.SSLSocketFactory $r13;
        java.util.List $r24;
        java.lang.StringBuilder $r9, $r26;
        org.apache.http.message.BasicStatusLine $r32;
        java.util.HashMap $r4, $r25;
        org.apache.http.message.BasicHttpResponse $r21, $r33;
        java.net.URLConnection $r11;
        int $i0;
        java.lang.String $r3, $r7, $r8;
        java.io.OutputStream $r20;
        com.android.volley.toolbox.k $r6;
        javax.net.ssl.HttpsURLConnection $r14;
        java.util.Map$Entry $r23;
        com.android.volley.toolbox.j r0;
        java.util.Iterator $r16;
        com.android.volley.p $r1;
        java.io.IOException $r27;
        org.apache.http.ProtocolVersion $r31;
        org.apache.http.message.BasicHeader $r34;
        java.lang.Object $r17;

        r0 := @this: com.android.volley.toolbox.j;

        $r1 := @parameter0: com.android.volley.p;

        $r2 := @parameter1: java.util.Map;

        $r3 = virtualinvoke $r1.<com.android.volley.p: java.lang.String e()>();

        $r25 = new java.util.HashMap;

        $r4 = $r25;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        $r5 = staticinvoke <com.android.volley.p: java.util.Map j()>();

        virtualinvoke $r4.<java.util.HashMap: void putAll(java.util.Map)>($r5);

        virtualinvoke $r4.<java.util.HashMap: void putAll(java.util.Map)>($r2);

        $r6 = r0.<com.android.volley.toolbox.j: com.android.volley.toolbox.k a>;

        if $r6 == null goto label01;

        $r6 = r0.<com.android.volley.toolbox.j: com.android.volley.toolbox.k a>;

        $r7 = interfaceinvoke $r6.<com.android.volley.toolbox.k: java.lang.String a()>();

        $r8 = $r7;

        if $r7 != null goto label02;

        $r27 = new java.io.IOException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("URL blocked by rewriter: ");

        $r9 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r3);

        throw $r27;

     label01:
        $r8 = $r3;

     label02:
        $r28 = new java.net.URL;

        $r10 = $r28;

        specialinvoke $r28.<java.net.URL: void <init>(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.net.URL: java.net.URLConnection openConnection()>();

        $r12 = (java.net.HttpURLConnection) $r11;

        $i0 = virtualinvoke $r1.<com.android.volley.p: int p()>();

        virtualinvoke $r12.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        virtualinvoke $r12.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        virtualinvoke $r12.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        virtualinvoke $r12.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        $r3 = "https";

        $r7 = virtualinvoke $r10.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label03;

        $r13 = r0.<com.android.volley.toolbox.j: javax.net.ssl.SSLSocketFactory b>;

        if $r13 == null goto label03;

        $r14 = (javax.net.ssl.HttpsURLConnection) $r12;

        $r13 = r0.<com.android.volley.toolbox.j: javax.net.ssl.SSLSocketFactory b>;

        virtualinvoke $r14.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r13);

     label03:
        $r15 = virtualinvoke $r4.<java.util.HashMap: java.util.Set keySet()>();

        $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label06;

        $i0 = virtualinvoke $r1.<com.android.volley.p: int a()>();

        lookupswitch($i0)
        {
            case -1: goto label07;
            case 0: goto label09;
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label10;
            default: goto label05;
        };

     label05:
        $r29 = new java.lang.IllegalStateException;

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown method type.");

        throw $r29;

     label06:
        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r17;

        $r17 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r7 = (java.lang.String) $r17;

        virtualinvoke $r12.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r3, $r7);

        goto label04;

     label07:
        $r18 = virtualinvoke $r1.<com.android.volley.p: byte[] l()>();

        if $r18 == null goto label08;

        virtualinvoke $r12.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r12.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r3 = virtualinvoke $r1.<com.android.volley.p: java.lang.String k()>();

        virtualinvoke $r12.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r3);

        $r30 = new java.io.DataOutputStream;

        $r19 = $r30;

        $r20 = virtualinvoke $r12.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r30.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r20);

        virtualinvoke $r19.<java.io.DataOutputStream: void write(byte[])>($r18);

        virtualinvoke $r19.<java.io.DataOutputStream: void close()>();

     label08:
        $r31 = new org.apache.http.ProtocolVersion;

        specialinvoke $r31.<org.apache.http.ProtocolVersion: void <init>(java.lang.String,int,int)>("HTTP", 1, 1);

        $i0 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 != -1 goto label13;

        $r27 = new java.io.IOException;

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>("Could not retrieve response code from HttpUrlConnection.");

        throw $r27;

     label09:
        virtualinvoke $r12.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        goto label08;

     label10:
        virtualinvoke $r12.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("DELETE");

        goto label08;

     label11:
        virtualinvoke $r12.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        staticinvoke <com.android.volley.toolbox.j: void a(java.net.HttpURLConnection,com.android.volley.p)>($r12, $r1);

        goto label08;

     label12:
        virtualinvoke $r12.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("PUT");

        staticinvoke <com.android.volley.toolbox.j: void a(java.net.HttpURLConnection,com.android.volley.p)>($r12, $r1);

        goto label08;

     label13:
        $r32 = new org.apache.http.message.BasicStatusLine;

        $i0 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>();

        $r3 = virtualinvoke $r12.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        specialinvoke $r32.<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>($r31, $i0, $r3);

        $r33 = new org.apache.http.message.BasicHttpResponse;

        $r21 = $r33;

        specialinvoke $r33.<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.StatusLine)>($r32);

        $r22 = staticinvoke <com.android.volley.toolbox.j: org.apache.http.HttpEntity a(java.net.HttpURLConnection)>($r12);

        virtualinvoke $r21.<org.apache.http.message.BasicHttpResponse: void setEntity(org.apache.http.HttpEntity)>($r22);

        $r2 = virtualinvoke $r12.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r15 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label15;

        return $r21;

     label15:
        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (java.util.Map$Entry) $r17;

        $r17 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r17 == null goto label14;

        $r34 = new org.apache.http.message.BasicHeader;

        $r17 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r17;

        $r17 = interfaceinvoke $r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (java.util.List) $r17;

        $r17 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.lang.String) $r17;

        specialinvoke $r34.<org.apache.http.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>($r3, $r7);

        virtualinvoke $r21.<org.apache.http.message.BasicHttpResponse: void addHeader(org.apache.http.Header)>($r34);

        goto label14;
    }
}
