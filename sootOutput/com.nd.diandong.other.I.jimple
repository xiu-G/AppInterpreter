public class com.nd.diandong.other.I extends java.lang.Object
{
    private static final int a;
    private static final java.lang.String a;
    android.os.HandlerThread a;
    android.os.Looper a;
    android.os.Message a;
    com.nd.diandong.other.aa a;

    public void <init>()
    {
        com.nd.diandong.other.I r0;

        r0 := @this: com.nd.diandong.other.I;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void a()
    {
        com.nd.diandong.other.aa $r3;
        android.os.Message $r4;
        android.os.HandlerThread $r1;
        android.os.Looper $r2;
        com.nd.diandong.other.I r0;

        r0 := @this: com.nd.diandong.other.I;

        $r1 = new android.os.HandlerThread;

        specialinvoke $r1.<android.os.HandlerThread: void <init>(java.lang.String)>("handler_thread");

        r0.<com.nd.diandong.other.I: android.os.HandlerThread a> = $r1;

        $r1 = r0.<com.nd.diandong.other.I: android.os.HandlerThread a>;

        virtualinvoke $r1.<android.os.HandlerThread: void start()>();

        $r1 = r0.<com.nd.diandong.other.I: android.os.HandlerThread a>;

        $r2 = virtualinvoke $r1.<android.os.HandlerThread: android.os.Looper getLooper()>();

        r0.<com.nd.diandong.other.I: android.os.Looper a> = $r2;

        $r3 = new com.nd.diandong.other.aa;

        $r2 = r0.<com.nd.diandong.other.I: android.os.Looper a>;

        specialinvoke $r3.<com.nd.diandong.other.aa: void <init>(com.nd.diandong.other.I,android.os.Looper)>(r0, $r2);

        r0.<com.nd.diandong.other.I: com.nd.diandong.other.aa a> = $r3;

        $r3 = r0.<com.nd.diandong.other.I: com.nd.diandong.other.aa a>;

        $r4 = virtualinvoke $r3.<com.nd.diandong.other.aa: android.os.Message obtainMessage()>();

        r0.<com.nd.diandong.other.I: android.os.Message a> = $r4;

        $r4 = r0.<com.nd.diandong.other.I: android.os.Message a>;

        $r4.<android.os.Message: int arg1> = 1;

        $r4 = r0.<com.nd.diandong.other.I: android.os.Message a>;

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    public boolean a(java.util.concurrent.ConcurrentHashMap)
    {
        java.util.Date $r5;
        java.util.concurrent.ConcurrentHashMap $r1;
        long $l0;
        com.nd.diandong.other.I r0;
        com.nd.diandong.other.l $r2;
        com.nd.diandong.other.s $r7;
        java.lang.Object $r3;
        java.lang.String $r4;
        boolean $z0;
        com.nd.diandong.other.y $r6;

        r0 := @this: com.nd.diandong.other.I;

        $r1 := @parameter0: java.util.concurrent.ConcurrentHashMap;

        $r2 = new com.nd.diandong.other.l;

        specialinvoke $r2.<com.nd.diandong.other.l: void <init>()>();

        $r3 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("code");

        if $r3 == null goto label5;

        $r3 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("code");

        $r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z0 == 0 goto label5;

        $r4 = staticinvoke <com.nd.diandong.other.G: java.lang.String a()>();

        virtualinvoke $r2.<com.nd.diandong.other.l: void a(java.lang.String)>($r4);

        $r3 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("did");

        if $r3 == null goto label3;

        $r3 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("did");

        $r4 = (java.lang.String) $r3;

        virtualinvoke $r2.<com.nd.diandong.other.l: void b(java.lang.String)>($r4);

     label1:
        virtualinvoke $r2.<com.nd.diandong.other.l: void c(java.lang.String)>("");

        $r3 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("sec");

        if $r3 == null goto label4;

        $r3 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("sec");

        $r4 = (java.lang.String) $r3;

        virtualinvoke $r2.<com.nd.diandong.other.l: void d(java.lang.String)>($r4);

     label2:
        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r5.<java.util.Date: long getTime()>();

        virtualinvoke $r2.<com.nd.diandong.other.l: void a(long)>($l0);

        $r6 = staticinvoke <com.nd.diandong.other.y: com.nd.diandong.other.y a()>();

        $z0 = virtualinvoke $r6.<com.nd.diandong.other.y: boolean a(com.nd.diandong.other.l)>($r2);

        if $z0 == 0 goto label6;

        $r7 = staticinvoke <com.nd.diandong.other.s: com.nd.diandong.other.s a()>();

        virtualinvoke $r7.<com.nd.diandong.other.s: void a(com.nd.diandong.other.l)>($r2);

        return $z0;

     label3:
        virtualinvoke $r2.<com.nd.diandong.other.l: void b(java.lang.String)>("");

        goto label1;

     label4:
        virtualinvoke $r2.<com.nd.diandong.other.l: void d(java.lang.String)>("");

        goto label2;

     label5:
        return 0;

     label6:
        return $z0;
    }

    public void b()
    {
        com.nd.diandong.other.I r0;
        android.os.Looper $r1;

        r0 := @this: com.nd.diandong.other.I;

        $r1 = r0.<com.nd.diandong.other.I: android.os.Looper a>;

        if $r1 == null goto label1;

        $r1 = r0.<com.nd.diandong.other.I: android.os.Looper a>;

        virtualinvoke $r1.<android.os.Looper: void quit()>();

        r0.<com.nd.diandong.other.I: android.os.Looper a> = null;

     label1:
        return;
    }

    public void c()
    {
        byte[] $r12;
        java.io.BufferedInputStream $r20, $r35;
        javax.crypto.spec.SecretKeySpec $r11, $r30;
        com.nd.diandong.other.H $r4;
        com.nd.diandong.other.I r0;
        byte $b2;
        java.io.ByteArrayInputStream $r22, $r36;
        boolean $z0;
        java.io.PrintWriter $r15, $r34;
        org.apache.http.HttpEntity $r18;
        java.util.concurrent.ConcurrentHashMap $r23;
        android.util.DisplayMetrics $r6;
        java.lang.Exception $r28;
        com.nd.diandong.other.aa $r26;
        android.os.Message $r25;
        float $f0;
        java.lang.StringBuilder $r7, $r9;
        java.lang.Throwable $r29;
        android.content.Context $r3;
        java.io.ByteArrayOutputStream $r13, $r31;
        java.util.zip.InflaterInputStream $r21, $r37;
        long $l3, $l4;
        java.util.zip.DeflaterOutputStream $r14, $r32;
        com.nd.diandong.other.r $r24;
        int $i0, $i1;
        com.nd.diandong.other.s $r1;
        java.io.OutputStreamWriter $r16, $r33;
        com.nd.diandong.other.v $r10;
        java.lang.String $r8, $r17;
        double $d0;
        java.lang.RuntimeException $r27;
        com.nd.diandong.other.g $r2;
        android.content.res.Resources $r5;
        java.io.InputStream $r19;

        r0 := @this: com.nd.diandong.other.I;

        $r1 = staticinvoke <com.nd.diandong.other.s: com.nd.diandong.other.s a()>();

        $r2 = staticinvoke <com.nd.diandong.other.g: com.nd.diandong.other.g a()>();

        $r3 = virtualinvoke $r1.<com.nd.diandong.other.s: android.content.Context a()>();

        $z0 = virtualinvoke $r2.<com.nd.diandong.other.g: boolean a(android.content.Context)>($r3);

        if $z0 == 0 goto label74;

     label01:
        $r4 = staticinvoke <com.nd.diandong.other.H: com.nd.diandong.other.H a()>();

     label02:
        $r6 = new android.util.DisplayMetrics;

     label03:
        specialinvoke $r6.<android.util.DisplayMetrics: void <init>()>();

        $r3 = virtualinvoke $r1.<com.nd.diandong.other.s: android.content.Context a()>();

        $r5 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

     label04:
        $i0 = $r6.<android.util.DisplayMetrics: int widthPixels>;

        $i1 = $r6.<android.util.DisplayMetrics: int heightPixels>;

     label05:
        if $i0 <= $i1 goto label63;

     label06:
        $i0 = $r6.<android.util.DisplayMetrics: int heightPixels>;

        $i1 = $r6.<android.util.DisplayMetrics: int widthPixels>;

     label07:
        $r3 = virtualinvoke $r1.<com.nd.diandong.other.s: android.content.Context a()>();

        $r5 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

     label08:
        $f0 = $r6.<android.util.DisplayMetrics: float density>;

     label09:
        $d0 = (double) $f0;

        $b2 = $d0 cmpl 1.0;

        if $b2 != 0 goto label13;

        if $i0 <= 320 goto label13;

        if $i0 > 320 goto label13;

     label10:
        $r9 = new java.lang.StringBuilder;

     label11:
        $r7 = $r9;

     label12:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("\u5176\u5b83\uff1a,width:");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",height:");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nd.diandong.other.h: void a(java.lang.String,java.lang.String)>("RegisterThread", $r8);

     label13:
        $r9 = new java.lang.StringBuilder;

     label14:
        $r7 = $r9;

     label15:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\"1.0\" encoding=\"utf-8\"?><request><register><device_type><![CDATA[");

     label16:
        $r8 = <android.os.Build: java.lang.String MODEL>;

     label17:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]]></device_type><phone_num>");

        $r8 = staticinvoke <com.nd.diandong.other.G: java.lang.String c()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</phone_num><androidid>");

        $r8 = staticinvoke <com.nd.diandong.other.G: java.lang.String a()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</androidid><imei>");

        $r8 = staticinvoke <com.nd.diandong.other.G: java.lang.String b()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</imei><sim>");

        $r8 = staticinvoke <com.nd.diandong.other.G: java.lang.String d()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</sim><language>");

        $r8 = staticinvoke <com.nd.diandong.other.G: java.lang.String f()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</language><sim_type><![CDATA[");

        $r8 = staticinvoke <com.nd.diandong.other.G: java.lang.String i()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]]></sim_type><sim_company><![CDATA[");

        $r8 = staticinvoke <com.nd.diandong.other.G: java.lang.String g()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]]></sim_company><imeisv>");

        $r8 = staticinvoke <com.nd.diandong.other.G: java.lang.String j()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</imeisv><mac>");

        $r8 = staticinvoke <com.nd.diandong.other.G: java.lang.String h()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</mac><ram>");

        $l3 = staticinvoke <com.nd.diandong.other.G: long a()>();

        $l4 = staticinvoke <com.nd.diandong.other.G: long b()>();

     label18:
        $l3 = $l3 - $l4;

     label19:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</ram><total_ram>");

        $l3 = staticinvoke <com.nd.diandong.other.G: long a()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</total_ram><sd>");

        $l3 = staticinvoke <com.nd.diandong.other.G: long c()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</sd><imsi>");

        $r8 = staticinvoke <com.nd.diandong.other.G: java.lang.String e()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</imsi><os_type>");

     label20:
        $r8 = <com.nd.diandong.other.i: java.lang.String a>;

     label21:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</os_type><os_ver><![CDATA[");

     label22:
        $r8 = <android.os.Build$VERSION: java.lang.String RELEASE>;

     label23:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]]></os_ver><screen><height>800</height><width>480</width></screen><rooted>");

        $i0 = staticinvoke <com.nd.diandong.other.U: int a()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</rooted></register></request>");

        $r10 = staticinvoke <com.nd.diandong.other.v: com.nd.diandong.other.v a()>();

     label24:
        $r30 = new javax.crypto.spec.SecretKeySpec;

     label25:
        $r11 = $r30;

        $r8 = "0123456789abcdef";

     label26:
        $r12 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r30.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, "AES");

     label27:
        $r31 = new java.io.ByteArrayOutputStream;

     label28:
        $r13 = $r31;

     label29:
        specialinvoke $r31.<java.io.ByteArrayOutputStream: void <init>()>();

     label30:
        $r32 = new java.util.zip.DeflaterOutputStream;

     label31:
        $r14 = $r32;

     label32:
        specialinvoke $r32.<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream)>($r13);

     label33:
        $r34 = new java.io.PrintWriter;

     label34:
        $r15 = $r34;

     label35:
        $r33 = new java.io.OutputStreamWriter;

     label36:
        $r16 = $r33;

     label37:
        specialinvoke $r33.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r14);

        specialinvoke $r34.<java.io.PrintWriter: void <init>(java.io.Writer)>($r16);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke $r15.<java.io.PrintWriter: void close()>();

        virtualinvoke $r14.<java.util.zip.DeflaterOutputStream: void close()>();

        $r12 = virtualinvoke $r13.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r12 = staticinvoke <com.nd.diandong.other.Q: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)>($r12, $r11);

        $r8 = staticinvoke <com.nd.diandong.other.Q: java.lang.String a(byte[])>($r12);

     label38:
        $r9 = new java.lang.StringBuilder;

     label39:
        $r7 = $r9;

     label40:
        $r17 = <com.nd.diandong.other.i: java.lang.String c>;

     label41:
        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r17);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?md5=");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&len=");

     label42:
        $i0 = lengthof $r12;

     label43:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&t=1&appsec=");

        $r8 = virtualinvoke $r1.<com.nd.diandong.other.s: java.lang.String a()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&sv=104");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r10.<com.nd.diandong.other.v: org.apache.http.HttpEntity a(java.lang.String,byte[])>($r8, $r12);

     label44:
        if $r18 == null goto label65;

     label45:
        $r19 = interfaceinvoke $r18.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label46:
        $r35 = new java.io.BufferedInputStream;

     label47:
        $r20 = $r35;

     label48:
        specialinvoke $r35.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r19);

     label49:
        $r9 = new java.lang.StringBuilder;

     label50:
        $r7 = $r9;

     label51:
        $l3 = interfaceinvoke $r18.<org.apache.http.HttpEntity: long getContentLength()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l3);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label52:
        $r12 = newarray (byte)[$i0];

     label53:
        virtualinvoke $r20.<java.io.BufferedInputStream: int read(byte[])>($r12);

     label54:
        $r37 = new java.util.zip.InflaterInputStream;

     label55:
        $r21 = $r37;

     label56:
        $r36 = new java.io.ByteArrayInputStream;

     label57:
        $r22 = $r36;

     label58:
        $r12 = staticinvoke <com.nd.diandong.other.Q: byte[] b(byte[],javax.crypto.spec.SecretKeySpec)>($r12, $r11);

        specialinvoke $r36.<java.io.ByteArrayInputStream: void <init>(byte[])>($r12);

        specialinvoke $r37.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r22);

        $r23 = staticinvoke <com.nd.diandong.other.K: java.util.concurrent.ConcurrentHashMap a(java.io.InputStream)>($r21);

        virtualinvoke $r20.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r19.<java.io.InputStream: void close()>();

        virtualinvoke $r21.<java.io.InputStream: void close()>();

        $z0 = virtualinvoke r0.<com.nd.diandong.other.I: boolean a(java.util.concurrent.ConcurrentHashMap)>($r23);

     label59:
        if $z0 == 0 goto label61;

     label60:
        virtualinvoke $r1.<com.nd.diandong.other.s: void c(boolean)>($z0);

        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String)>("RegisterThread", "\u6ce8\u518c\u8bbe\u5907\u6210\u529f\uff01\uff01\uff01");

        $r24 = staticinvoke <com.nd.diandong.other.r: com.nd.diandong.other.r a()>();

        virtualinvoke $r24.<com.nd.diandong.other.r: void a()>();

     label61:
        virtualinvoke $r4.<com.nd.diandong.other.H: void a(boolean)>(0);

     label62:
        return;

     label63:
        $i0 = $r6.<android.util.DisplayMetrics: int widthPixels>;

        $i1 = $r6.<android.util.DisplayMetrics: int heightPixels>;

     label64:
        goto label07;

     label65:
        $i0 = virtualinvoke $r1.<com.nd.diandong.other.s: int a()>();

     label66:
        if $i0 <= 0 goto label75;

        $i0 = $i0 + -1;

     label67:
        virtualinvoke $r1.<com.nd.diandong.other.s: void a(int)>($i0);

        $r25 = staticinvoke <android.os.Message: android.os.Message obtain()>();

     label68:
        $r25.<android.os.Message: int arg1> = 1;

        $r26 = r0.<com.nd.diandong.other.I: com.nd.diandong.other.aa a>;

     label69:
        virtualinvoke $r26.<com.nd.diandong.other.aa: boolean sendMessageDelayed(android.os.Message,long)>($r25, 1000L);

     label70:
        return;

     label71:
        $r27 := @caughtexception;

        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("RegisterThread", "RegisterThread RuntimeException", $r27);

        return;

     label72:
        $r28 := @caughtexception;

        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("RegisterThread", "RegisterThread Exception", $r28);

        return;

     label73:
        $r29 := @caughtexception;

        $i0 = virtualinvoke $r1.<com.nd.diandong.other.s: int a()>();

        if $i0 <= 0 goto label75;

        $i0 = $i0 + -1;

        virtualinvoke $r1.<com.nd.diandong.other.s: void a(int)>($i0);

        $r25 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r25.<android.os.Message: int arg1> = 1;

        $r26 = r0.<com.nd.diandong.other.I: com.nd.diandong.other.aa a>;

        virtualinvoke $r26.<com.nd.diandong.other.aa: boolean sendMessageDelayed(android.os.Message,long)>($r25, 1000L);

        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("RegisterThread", "RegisterThread Throwable", $r29);

        return;

     label74:
        staticinvoke <com.nd.diandong.other.h: void a(java.lang.String,java.lang.String)>("RegisterThread", "repeat register ################");

     label75:
        return;

        catch java.lang.RuntimeException from label01 to label02 with label71;
        catch java.lang.RuntimeException from label03 to label05 with label71;
        catch java.lang.RuntimeException from label06 to label09 with label71;
        catch java.lang.RuntimeException from label12 to label13 with label71;
        catch java.lang.RuntimeException from label15 to label16 with label71;
        catch java.lang.RuntimeException from label17 to label18 with label71;
        catch java.lang.RuntimeException from label19 to label20 with label71;
        catch java.lang.RuntimeException from label21 to label22 with label71;
        catch java.lang.RuntimeException from label23 to label24 with label71;
        catch java.lang.RuntimeException from label26 to label27 with label71;
        catch java.lang.RuntimeException from label29 to label30 with label71;
        catch java.lang.RuntimeException from label32 to label33 with label71;
        catch java.lang.RuntimeException from label37 to label38 with label71;
        catch java.lang.RuntimeException from label41 to label44 with label71;
        catch java.lang.RuntimeException from label45 to label46 with label71;
        catch java.lang.RuntimeException from label48 to label49 with label71;
        catch java.lang.RuntimeException from label51 to label54 with label71;
        catch java.lang.RuntimeException from label58 to label59 with label71;
        catch java.lang.RuntimeException from label60 to label62 with label71;
        catch java.lang.RuntimeException from label63 to label64 with label71;
        catch java.lang.RuntimeException from label65 to label66 with label71;
        catch java.lang.RuntimeException from label67 to label70 with label71;
        catch java.lang.Exception from label01 to label02 with label72;
        catch java.lang.Exception from label03 to label04 with label72;
        catch java.lang.Exception from label07 to label08 with label72;
        catch java.lang.Exception from label12 to label13 with label72;
        catch java.lang.Exception from label15 to label16 with label72;
        catch java.lang.Exception from label17 to label18 with label72;
        catch java.lang.Exception from label19 to label20 with label72;
        catch java.lang.Exception from label21 to label22 with label72;
        catch java.lang.Exception from label23 to label24 with label72;
        catch java.lang.Exception from label26 to label27 with label72;
        catch java.lang.Exception from label29 to label30 with label72;
        catch java.lang.Exception from label32 to label33 with label72;
        catch java.lang.Exception from label37 to label38 with label72;
        catch java.lang.Exception from label41 to label42 with label72;
        catch java.lang.Exception from label43 to label44 with label72;
        catch java.lang.Exception from label45 to label46 with label72;
        catch java.lang.Exception from label48 to label49 with label72;
        catch java.lang.Exception from label51 to label52 with label72;
        catch java.lang.Exception from label53 to label54 with label72;
        catch java.lang.Exception from label58 to label59 with label72;
        catch java.lang.Exception from label60 to label62 with label72;
        catch java.lang.Exception from label65 to label66 with label72;
        catch java.lang.Exception from label67 to label68 with label72;
        catch java.lang.Exception from label69 to label70 with label72;
        catch java.lang.Throwable from label01 to label03 with label73;
        catch java.lang.Throwable from label03 to label05 with label73;
        catch java.lang.Throwable from label06 to label09 with label73;
        catch java.lang.Throwable from label10 to label11 with label73;
        catch java.lang.Throwable from label12 to label14 with label73;
        catch java.lang.Throwable from label15 to label18 with label73;
        catch java.lang.Throwable from label19 to label25 with label73;
        catch java.lang.Throwable from label26 to label28 with label73;
        catch java.lang.Throwable from label29 to label31 with label73;
        catch java.lang.Throwable from label32 to label34 with label73;
        catch java.lang.Throwable from label35 to label36 with label73;
        catch java.lang.Throwable from label37 to label39 with label73;
        catch java.lang.Throwable from label40 to label42 with label73;
        catch java.lang.Throwable from label43 to label44 with label73;
        catch java.lang.Throwable from label45 to label47 with label73;
        catch java.lang.Throwable from label48 to label50 with label73;
        catch java.lang.Throwable from label51 to label52 with label73;
        catch java.lang.Throwable from label53 to label55 with label73;
        catch java.lang.Throwable from label56 to label57 with label73;
        catch java.lang.Throwable from label58 to label59 with label73;
        catch java.lang.Throwable from label60 to label62 with label73;
        catch java.lang.Throwable from label63 to label64 with label73;
        catch java.lang.Throwable from label65 to label66 with label73;
        catch java.lang.Throwable from label67 to label70 with label73;
    }

    public static void <clinit>()
    {
        <com.nd.diandong.other.I: java.lang.String a> = "RegisterThread";

        <com.nd.diandong.other.I: int a> = 1;

        return;
    }
}
