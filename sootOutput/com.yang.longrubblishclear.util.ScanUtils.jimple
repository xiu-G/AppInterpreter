public class com.yang.longrubblishclear.util.ScanUtils extends java.lang.Object
{
    public static final int CLEAN_MEM_FINISH;
    public static final int CLEAN_STATUS_CACHE_FINISH;
    public static final int CLEAN_STATUS_CACHE_UPDATE;
    public static final int CLEAR_STATE_DONE;
    public static final int CLEAR_STATE_STAR;
    public static final int CLEAR_STATE_UNSTAR;
    public static final int SCAN_STATE_SCANED;
    public static final int SCAN_STATE_SCANING;
    public static final int SCAN_STATE_UNSCANING;
    public static final int SCAN_STATUS_CACHE_FINISH;
    public static final int SCAN_STATUS_CACHE_UPDATE;
    private static final java.lang.String[] avoidStrs;
    static int[] count;
    static int[] countr;
    public android.content.Context context;
    private int scanState;
    public long sizeCache;
    private boolean stop;

    static void <clinit>()
    {
        java.lang.String[] $r1;
        int[] $r0;

        <com.yang.longrubblishclear.util.ScanUtils: int SCAN_STATUS_CACHE_UPDATE> = 1001;

        <com.yang.longrubblishclear.util.ScanUtils: int SCAN_STATUS_CACHE_FINISH> = 1002;

        <com.yang.longrubblishclear.util.ScanUtils: int SCAN_STATE_UNSCANING> = 1;

        <com.yang.longrubblishclear.util.ScanUtils: int SCAN_STATE_SCANING> = 3;

        <com.yang.longrubblishclear.util.ScanUtils: int SCAN_STATE_SCANED> = 2;

        <com.yang.longrubblishclear.util.ScanUtils: int CLEAR_STATE_UNSTAR> = 4;

        <com.yang.longrubblishclear.util.ScanUtils: int CLEAR_STATE_STAR> = 5;

        <com.yang.longrubblishclear.util.ScanUtils: int CLEAR_STATE_DONE> = 6;

        <com.yang.longrubblishclear.util.ScanUtils: int CLEAN_STATUS_CACHE_UPDATE> = 1003;

        <com.yang.longrubblishclear.util.ScanUtils: int CLEAN_STATUS_CACHE_FINISH> = 1004;

        <com.yang.longrubblishclear.util.ScanUtils: int CLEAN_MEM_FINISH> = 1005;

        $r0 = newarray (int)[80];

        <com.yang.longrubblishclear.util.ScanUtils: int[] count> = $r0;

        $r0 = newarray (int)[80];

        <com.yang.longrubblishclear.util.ScanUtils: int[] countr> = $r0;

        $r1 = newarray (java.lang.String)[13];

        $r1[0] = ".mp3";

        $r1[1] = ".rmvb";

        $r1[2] = ".avi";

        $r1[3] = ".mp4";

        $r1[4] = ".txt";

        $r1[5] = ".mkv";

        $r1[6] = ".umd";

        $r1[7] = ".xlsx";

        $r1[8] = ".xls";

        $r1[9] = ".doc";

        $r1[10] = ".docx";

        $r1[11] = ".ppt";

        $r1[12] = ".pptx";

        <com.yang.longrubblishclear.util.ScanUtils: java.lang.String[] avoidStrs> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.yang.longrubblishclear.util.ScanUtils r0;

        r0 := @this: com.yang.longrubblishclear.util.ScanUtils;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.yang.longrubblishclear.util.ScanUtils: int scanState> = 1;

        r0.<com.yang.longrubblishclear.util.ScanUtils: boolean stop> = 0;

        r0.<com.yang.longrubblishclear.util.ScanUtils: android.content.Context context> = $r1;

        staticinvoke <com.yang.longrubblishclear.util.ScanUtils: void initCount()>();

        return;
    }

    public static void deleteDirWithParent(java.lang.String)
    {
        int i0, $i1;
        java.lang.String $r0;
        java.io.File[] $r2;
        java.io.File r1, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return;

     label1:
        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label8;

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.io.File: boolean delete()>();

        return;

     label2:
        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label8;

        $r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        i0 = 0;

     label3:
        if $r2 == null goto label4;

        $i1 = lengthof $r2;

        if i0 < $i1 goto label5;

     label4:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        return;

     label5:
        $r3 = $r2[i0];

        $z0 = virtualinvoke $r3.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label7;

        $r3 = $r2[i0];

        $r0 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <com.yang.longrubblishclear.util.ScanUtils: boolean deleteFile(java.lang.String)>($r0);

     label6:
        i0 = i0 + 1;

        goto label3;

     label7:
        $r3 = $r2[i0];

        $z0 = virtualinvoke $r3.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label6;

        $r3 = $r2[i0];

        $r0 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <com.yang.longrubblishclear.util.ScanUtils: void deleteDirWithParent(java.lang.String)>($r0);

        goto label6;

     label8:
        return;
    }

    public static boolean deleteFile(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return 0;

     label1:
        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r1.<java.io.File: boolean delete()>();

        return $z0;

     label2:
        return 0;
    }

    public static java.util.List getAllClassPathInfos(android.content.Context)
    {
        android.content.Context $r0;
        com.yang.longrubblishclear.info.ClassPathInfo r1;
        java.util.ArrayList r2;
        int $i0, $i1;
        java.lang.String $r5, $r6, $r7, $r8;
        com.yang.longrubblishclear.adapter.ClassPathAdapter r3;
        android.database.Cursor $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        r2 = null;

        r3 = new com.yang.longrubblishclear.adapter.ClassPathAdapter;

        specialinvoke r3.<com.yang.longrubblishclear.adapter.ClassPathAdapter: void <init>(android.content.Context)>($r0);

        virtualinvoke r3.<com.yang.longrubblishclear.adapter.ClassPathAdapter: void openDB()>();

        $r4 = virtualinvoke r3.<com.yang.longrubblishclear.adapter.ClassPathAdapter: android.database.Cursor getAllDatas()>();

        if $r4 == null goto label2;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label3;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label2:
        virtualinvoke r3.<com.yang.longrubblishclear.adapter.ClassPathAdapter: void closeDB()>();

        return r2;

     label3:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i0);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("softChinesename");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("softEnglishname");

        $r6 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("apkname");

        $r7 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("filepath");

        $r8 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("stype");

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i1);

        r1 = new com.yang.longrubblishclear.info.ClassPathInfo;

        specialinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void <init>()>();

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setId(int)>($i0);

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setSoftChinesename(java.lang.String)>($r5);

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setSoftEnglishname(java.lang.String)>($r6);

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setStype(int)>($i1);

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setApkname(java.lang.String)>($r7);

        virtualinvoke r1.<com.yang.longrubblishclear.info.ClassPathInfo: void setFilepath(java.lang.String)>($r8);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label1;
    }

    public static int getCount(double)
    {
        int[] $r0;
        int i0, $i1, $i2;
        double $d0;

        $d0 := @parameter0: double;

        i0 = (int) $d0;

        if i0 <= 395 goto label1;

        return 20;

     label1:
        $i1 = 0;

     label2:
        $r0 = <com.yang.longrubblishclear.util.ScanUtils: int[] countr>;

        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label4;

        $r0 = <com.yang.longrubblishclear.util.ScanUtils: int[] countr>;

        $i2 = $r0[$i1];

        if i0 >= $i2 goto label3;

        $r0 = <com.yang.longrubblishclear.util.ScanUtils: int[] count>;

        $i1 = $i1 + -1;

        $i1 = $r0[$i1];

        return $i1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return 100;
    }

    public static long getDirSize(java.lang.String)
    {
        long l0, $l3;
        java.io.File r1;
        int i1, $i2;
        java.lang.String $r0;
        java.io.File[] $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        l0 = 0L;

        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label5;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        i1 = 0;

     label1:
        if $r2 == null goto label6;

        $i2 = lengthof $r2;

        if i1 < $i2 goto label2;

        return l0;

     label2:
        r1 = $r2[i1];

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        $r0 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $l3 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getDirSize(java.lang.String)>($r0);

        l0 = l0 + $l3;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $l3 = virtualinvoke r1.<java.io.File: long length()>();

        l0 = l0 + $l3;

        goto label3;

     label5:
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label7;

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label7;

        l0 = virtualinvoke r1.<java.io.File: long length()>();

        l0 = 0L + l0;

     label6:
        return l0;

     label7:
        return 0L;
    }

    public static long getEnvironmentSize()
    {
        android.os.StatFs r0;
        int $i1;
        long l0, $l2;
        java.lang.String $r2;
        java.io.File $r1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        r0 = new android.os.StatFs;

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i1 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l0 = (long) $i1;

        $i1 = virtualinvoke r0.<android.os.StatFs: int getBlockCount()>();

        $l2 = (long) $i1;

        l0 = $l2 * l0;

        return l0;
    }

    public static long getFileSize(java.io.File)
    {
        int i1, $i2;
        long l0, $l3;
        java.io.File[] $r1;
        java.io.File $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        l0 = 0L;

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        i1 = 0;

     label1:
        $i2 = lengthof $r1;

        if i1 < $i2 goto label2;

        return l0;

     label2:
        $r0 = $r1[i1];

        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        $r0 = $r1[i1];

        $l3 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getFileSize(java.io.File)>($r0);

        l0 = l0 + $l3;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r0 = $r1[i1];

        $l3 = virtualinvoke $r0.<java.io.File: long length()>();

        l0 = l0 + $l3;

        goto label3;
    }

    public static long getPhoneAvailMemorySize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r2;
        java.io.File $r1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getAvailableBlocks()>();

        l0 = (long) $i2;

        l0 = l0 * l1;

        return l0;
    }

    private static void initCount()
    {
        int[] $r0;
        int i0, i1, i2;

        i0 = 100;

        i1 = 0;

        i2 = 0;

     label1:
        if i2 < 80 goto label3;

        i0 = 0;

     label2:
        if i0 < 80 goto label4;

        return;

     label3:
        $r0 = <com.yang.longrubblishclear.util.ScanUtils: int[] count>;

        $r0[i2] = i0;

        i0 = i0 + -1;

        i2 = i2 + 1;

        goto label1;

     label4:
        $r0 = <com.yang.longrubblishclear.util.ScanUtils: int[] countr>;

        $r0[i0] = i1;

        i1 = i1 + 5;

        i0 = i0 + 1;

        goto label2;
    }

    private static boolean isAvoided(java.io.File)
    {
        java.lang.String[] $r1;
        java.io.File $r0;
        java.util.Locale $r3;
        int i0, $i1;
        java.lang.String $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        i0 = 0;

     label1:
        $r1 = <com.yang.longrubblishclear.util.ScanUtils: java.lang.String[] avoidStrs>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $r1 = <com.yang.longrubblishclear.util.ScanUtils: java.lang.String[] avoidStrs>;

        $r4 = $r1[i0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i0 = i0 + 1;

        goto label1;
    }

    public static boolean isPackageExists(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r3;
        java.lang.String $r1;
        android.content.pm.PackageInfo $r4;
        java.lang.Exception r2;
        boolean z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        z0 = 1;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, 0);

     label2:
        if $r4 != null goto label3;

        z0 = 0;

     label3:
        return z0;

     label4:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return 0;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public void clearCache(android.os.Handler)
    {
        android.content.Context $r9;
        java.lang.Object[] r2;
        android.content.pm.PackageManager $r12;
        long $l0, $l3;
        com.yang.longrubblishclear.info.ClassPathInfo r19;
        com.yang.longrubblishclear.util.ScanUtils$2 $r17;
        java.lang.Long $r7;
        android.os.Handler $r1;
        int $i1, $i2;
        java.lang.String r4;
        java.lang.reflect.Method $r16;
        boolean $z0;
        java.lang.Class[] $r14;
        com.yang.longrubblishclear.util.ScanUtils r0;
        java.lang.Exception r3;
        java.io.File r5;
        java.util.List $r10;
        android.os.Message $r8;
        java.lang.StringBuilder $r6;
        java.lang.Class $r13, $r15;
        java.lang.Object $r18;
        java.io.File[] $r11;

        r0 := @this: com.yang.longrubblishclear.util.ScanUtils;

        $r1 := @parameter0: android.os.Handler;

        r4 = <com.yang.longrubblishclear.util.LocalUtil: java.lang.String SDCARDDIR>;

        if r4 == null goto label01;

        r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(r4);

        r4 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DCIM/.thumbnails");

        r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>(r4);

        $z0 = virtualinvoke r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $l0 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getFileSize(java.io.File)>(r5);

        r4 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <com.yang.longrubblishclear.util.ScanUtils: void deleteDirWithParent(java.lang.String)>(r4);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1003, $r7);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

     label01:
        $r9 = r0.<com.yang.longrubblishclear.util.ScanUtils: android.content.Context context>;

        $r10 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: java.util.List getAllClassPathInfos(android.content.Context)>($r9);

        if $r10 == null goto label03;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i1 <= 0 goto label03;

        $i1 = 0;

     label02:
        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i1 < $i2 goto label18;

     label03:
        $r9 = r0.<com.yang.longrubblishclear.util.ScanUtils: android.content.Context context>;

        r5 = virtualinvoke $r9.<android.content.Context: java.io.File getExternalCacheDir()>();

        $r11 = virtualinvoke r5.<java.io.File: java.io.File[] listFiles()>();

        if $r11 == null goto label05;

        $i1 = lengthof $r11;

        $i2 = 0;

     label04:
        if $i2 < $i1 goto label20;

     label05:
        $l0 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getPhoneAvailMemorySize()>();

        $r9 = r0.<com.yang.longrubblishclear.util.ScanUtils: android.content.Context context>;

        $r12 = virtualinvoke $r9.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label06:
        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

     label07:
        $r14 = newarray (java.lang.Class)[2];

        $r15 = <java.lang.Long: java.lang.Class TYPE>;

     label08:
        $r14[0] = $r15;

        $r14[1] = class "Landroid/content/pm/IPackageDataObserver;";

        $r16 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("freeStorageAndNotify", $r14);

        $l3 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getEnvironmentSize()>();

     label09:
        $l3 = $l3 - 1L;

     label10:
        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

     label11:
        r2 = newarray (java.lang.Object)[2];

     label12:
        r2[0] = $r7;

     label13:
        r2 = newarray (java.lang.Object)[2];

     label14:
        r2[0] = $r7;

     label15:
        $r17 = new com.yang.longrubblishclear.util.ScanUtils$2;

     label16:
        specialinvoke $r17.<com.yang.longrubblishclear.util.ScanUtils$2: void <init>(com.yang.longrubblishclear.util.ScanUtils,android.os.Handler,long)>(r0, $r1, $l0);

        r2[1] = $r17;

        virtualinvoke $r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, r2);

     label17:
        r0.<com.yang.longrubblishclear.util.ScanUtils: int scanState> = 6;

        return;

     label18:
        $r18 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i1);

        r19 = (com.yang.longrubblishclear.info.ClassPathInfo) $r18;

        r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        r4 = <com.yang.longrubblishclear.util.LocalUtil: java.lang.String SDCARDDIR>;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(r4);

        r4 = virtualinvoke r19.<com.yang.longrubblishclear.info.ClassPathInfo: java.lang.String getFilepath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>(r4);

        $z0 = virtualinvoke r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label19;

        $z0 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label19;

        $r9 = r0.<com.yang.longrubblishclear.util.ScanUtils: android.content.Context context>;

        r4 = virtualinvoke r19.<com.yang.longrubblishclear.info.ClassPathInfo: java.lang.String getApkname()>();

        $z0 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: boolean isPackageExists(android.content.Context,java.lang.String)>($r9, r4);

        if $z0 != 0 goto label19;

        r4 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $l0 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getDirSize(java.lang.String)>(r4);

        r4 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();

        staticinvoke <com.yang.longrubblishclear.util.ScanUtils: void deleteDirWithParent(java.lang.String)>(r4);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1003, $r7);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

     label19:
        $i1 = $i1 + 1;

        goto label02;

     label20:
        r5 = $r11[$i2];

        $z0 = r0.<com.yang.longrubblishclear.util.ScanUtils: boolean stop>;

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label22;

        $l0 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getFileSize(java.io.File)>(r5);

        r4 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <com.yang.longrubblishclear.util.ScanUtils: void deleteDirWithParent(java.lang.String)>(r4);

     label21:
        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1003, $r7);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

        $i2 = $i2 + 1;

        goto label04;

     label22:
        $l0 = virtualinvoke r5.<java.io.File: long length()>();

        r4 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <com.yang.longrubblishclear.util.ScanUtils: boolean deleteFile(java.lang.String)>(r4);

        goto label21;

     label23:
        r3 := @caughtexception;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        $l3 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getPhoneAvailMemorySize()>();

        $l0 = $l3 - $l0;

        $l0 = staticinvoke <java.lang.Math: long abs(long)>($l0);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1003, $r7);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

        goto label17;

        catch java.lang.Exception from label06 to label07 with label23;
        catch java.lang.Exception from label08 to label09 with label23;
        catch java.lang.Exception from label10 to label11 with label23;
        catch java.lang.Exception from label12 to label13 with label23;
        catch java.lang.Exception from label14 to label15 with label23;
        catch java.lang.Exception from label16 to label17 with label23;
    }

    public long freeMem(android.content.Context)
    {
        android.app.ActivityManager$RunningAppProcessInfo r9;
        android.content.Context $r1;
        android.app.ActivityManager r6;
        android.os.Debug$MemoryInfo[] $r13;
        long l0, $l2;
        int[] r2;
        int $i1;
        java.lang.String $r10, $r11;
        boolean $z0;
        java.util.Iterator $r8;
        com.yang.longrubblishclear.database.LongDataBase r4;
        com.yang.longrubblishclear.util.ScanUtils r0;
        android.os.Debug$MemoryInfo $r14;
        com.yang.longrubblishclear.util.PackageUtil r3;
        java.util.List $r7;
        java.lang.Object $r5;
        android.content.pm.ApplicationInfo $r12;

        r0 := @this: com.yang.longrubblishclear.util.ScanUtils;

        $r1 := @parameter0: android.content.Context;

        l0 = 0L;

        $r5 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        r6 = (android.app.ActivityManager) $r5;

        r3 = new com.yang.longrubblishclear.util.PackageUtil;

        specialinvoke r3.<com.yang.longrubblishclear.util.PackageUtil: void <init>(android.content.Context)>($r1);

        $r7 = virtualinvoke r6.<android.app.ActivityManager: java.util.List getRunningAppProcesses()>();

        r4 = new com.yang.longrubblishclear.database.LongDataBase;

        specialinvoke r4.<com.yang.longrubblishclear.database.LongDataBase: void <init>(android.content.Context)>($r1);

        virtualinvoke r4.<com.yang.longrubblishclear.database.LongDataBase: android.database.sqlite.SQLiteDatabase openDatabase()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        virtualinvoke r4.<com.yang.longrubblishclear.database.LongDataBase: void Closedatabase()>();

        return l0;

     label2:
        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.app.ActivityManager$RunningAppProcessInfo) $r5;

        $r10 = r9.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String processName>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z0 != 0 goto label1;

        $r10 = r9.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String processName>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("com.android.phone");

        if $z0 != 0 goto label1;

        $r10 = r9.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String processName>;

        $r11 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label1;

        $r10 = r9.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String processName>;

        $r12 = virtualinvoke r3.<com.yang.longrubblishclear.util.PackageUtil: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String)>($r10);

        if $r12 == null goto label1;

        $i1 = $r12.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i1 & 1;

        if $i1 != 1 goto label4;

        $z0 = 1;

     label3:
        if $z0 != 0 goto label1;

        $r10 = $r12.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ScanUtils: boolean getContain(com.yang.longrubblishclear.database.LongDataBase,java.lang.String)>(r4, $r10);

        if $z0 != 0 goto label1;

        r2 = newarray (int)[1];

        $i1 = r9.<android.app.ActivityManager$RunningAppProcessInfo: int pid>;

        r2[0] = $i1;

        $r13 = virtualinvoke r6.<android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>(r2);

        $r14 = $r13[0];

        $i1 = $r14.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        $i1 = $i1 * 1024;

        $l2 = (long) $i1;

        l0 = l0 + $l2;

        $r10 = $r12.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        virtualinvoke r6.<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>($r10);

        goto label1;

     label4:
        $z0 = 0;

        goto label3;
    }

    public boolean getContain(com.yang.longrubblishclear.database.LongDataBase, java.lang.String)
    {
        com.yang.longrubblishclear.database.LongDataBase $r1;
        com.yang.longrubblishclear.util.ScanUtils r0;
        java.lang.String $r2;
        boolean z0, $z1;
        android.database.Cursor $r3;

        r0 := @this: com.yang.longrubblishclear.util.ScanUtils;

        $r1 := @parameter0: com.yang.longrubblishclear.database.LongDataBase;

        $r2 := @parameter1: java.lang.String;

        z0 = 0;

        $r3 = virtualinvoke $r1.<com.yang.longrubblishclear.database.LongDataBase: android.database.Cursor select(java.lang.String)>($r2);

        if $r3 != null goto label1;

        return 0;

     label1:
        $z1 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label2;

        z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

        if z0 == 0 goto label3;

        z0 = 1;

     label2:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return z0;

     label3:
        z0 = 0;

        goto label2;
    }

    public int getScanState()
    {
        int i0;
        com.yang.longrubblishclear.util.ScanUtils r0;

        r0 := @this: com.yang.longrubblishclear.util.ScanUtils;

        i0 = r0.<com.yang.longrubblishclear.util.ScanUtils: int scanState>;

        return i0;
    }

    public void scanCache(android.os.Handler)
    {
        android.content.Context $r8;
        com.yang.longrubblishclear.util.ScanUtils$1 $r19, $r22;
        java.lang.Object[] $r18;
        android.content.pm.PackageManager $r11;
        long $l0, $l1;
        com.yang.longrubblishclear.info.ClassPathInfo r13;
        android.content.pm.PackageInfo r14;
        short $s4;
        java.lang.Long $r6;
        android.os.Handler $r1;
        int $i2, $i3;
        java.lang.String r3;
        java.lang.reflect.Method $r17;
        boolean $z0;
        java.lang.Class[] $r16;
        com.yang.longrubblishclear.util.ScanUtils r0;
        java.lang.Exception r2;
        java.io.File r4, $r21;
        java.util.List $r9;
        android.os.Message $r7;
        java.lang.StringBuilder $r5, $r20;
        java.lang.Object $r12;
        java.lang.Class $r15;
        java.io.File[] $r10;

        r0 := @this: com.yang.longrubblishclear.util.ScanUtils;

        $r1 := @parameter0: android.os.Handler;

        r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache> = 0L;

        r3 = <com.yang.longrubblishclear.util.LocalUtil: java.lang.String SDCARDDIR>;

        if r3 == null goto label01;

        $r21 = new java.io.File;

        r4 = $r21;

        $r20 = new java.lang.StringBuilder;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);

        r3 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DCIM/.thumbnails");

        r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r3);

        $z0 = virtualinvoke r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $l0 = r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache>;

        $l1 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getFileSize(java.io.File)>(r4);

        $l0 = $l0 + $l1;

        r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache> = $l0;

        $l0 = r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1001, $r6);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

     label01:
        $r8 = r0.<com.yang.longrubblishclear.util.ScanUtils: android.content.Context context>;

        $r9 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: java.util.List getAllClassPathInfos(android.content.Context)>($r8);

        if $r9 == null goto label03;

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i2 <= 0 goto label03;

        $i2 = 0;

     label02:
        $i3 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i2 < $i3 goto label08;

     label03:
        $r8 = r0.<com.yang.longrubblishclear.util.ScanUtils: android.content.Context context>;

        r4 = virtualinvoke $r8.<android.content.Context: java.io.File getExternalCacheDir()>();

        $r10 = virtualinvoke r4.<java.io.File: java.io.File[] listFiles()>();

        if $r10 == null goto label05;

        $i2 = lengthof $r10;

        $i3 = 0;

     label04:
        if $i3 < $i2 goto label10;

     label05:
        $r8 = r0.<com.yang.longrubblishclear.util.ScanUtils: android.content.Context context>;

        $r11 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = virtualinvoke $r11.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(0);

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i2 != 0 goto label06;

        $l0 = r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1002, $r6);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

     label06:
        $i2 = 0;

     label07:
        $i3 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i2 < $i3 goto label13;

        return;

     label08:
        $r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i2);

        r13 = (com.yang.longrubblishclear.info.ClassPathInfo) $r12;

        $r21 = new java.io.File;

        r4 = $r21;

        $r20 = new java.lang.StringBuilder;

        r3 = <com.yang.longrubblishclear.util.LocalUtil: java.lang.String SDCARDDIR>;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);

        r3 = virtualinvoke r13.<com.yang.longrubblishclear.info.ClassPathInfo: java.lang.String getFilepath()>();

        $r5 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r3);

        $z0 = virtualinvoke r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label09;

        $z0 = virtualinvoke r4.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label09;

        $r8 = r0.<com.yang.longrubblishclear.util.ScanUtils: android.content.Context context>;

        r3 = virtualinvoke r13.<com.yang.longrubblishclear.info.ClassPathInfo: java.lang.String getApkname()>();

        $z0 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: boolean isPackageExists(android.content.Context,java.lang.String)>($r8, r3);

        if $z0 != 0 goto label09;

        $l0 = r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache>;

        r3 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $l1 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getDirSize(java.lang.String)>(r3);

        $l0 = $l0 + $l1;

        r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache> = $l0;

        $l0 = r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1001, $r6);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

     label09:
        $i2 = $i2 + 1;

        goto label02;

     label10:
        r4 = $r10[$i3];

        $z0 = r0.<com.yang.longrubblishclear.util.ScanUtils: boolean stop>;

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke r4.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label12;

        $l0 = r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache>;

        $l1 = staticinvoke <com.yang.longrubblishclear.util.ScanUtils: long getFileSize(java.io.File)>(r4);

        $l0 = $l0 + $l1;

        r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache> = $l0;

     label11:
        $l0 = r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1001, $r6);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

        $i3 = $i3 + 1;

        goto label04;

     label12:
        $l0 = r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache>;

        $l1 = virtualinvoke r4.<java.io.File: long length()>();

        $l0 = $l0 + $l1;

        r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache> = $l0;

        goto label11;

     label13:
        $r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i2);

        r14 = (android.content.pm.PackageInfo) $r12;

        $r15 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

     label14:
        $r16 = newarray (java.lang.Class)[2];

     label15:
        $r16[0] = class "Ljava/lang/String;";

        $r16[1] = class "Landroid/content/pm/IPackageStatsObserver;";

        $r17 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPackageSizeInfo", $r16);

     label16:
        $r18 = newarray (java.lang.Object)[2];

     label17:
        r3 = r14.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r18[0] = r3;

     label18:
        $r22 = new com.yang.longrubblishclear.util.ScanUtils$1;

        $r19 = $r22;

     label19:
        specialinvoke $r22.<com.yang.longrubblishclear.util.ScanUtils$1: void <init>(com.yang.longrubblishclear.util.ScanUtils,android.os.Handler,int,java.util.List)>(r0, $r1, $i2, $r9);

        $r18[1] = $r19;

        virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r18);

     label20:
        $i2 = $i2 + 1;

        goto label07;

     label21:
        r2 := @caughtexception;

        $i3 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i3 = $i3 + -1;

        if $i2 < $i3 goto label23;

        $s4 = 1002;

     label22:
        $l0 = r0.<com.yang.longrubblishclear.util.ScanUtils: long sizeCache>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>($s4, $r6);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

        goto label20;

     label23:
        $s4 = 1001;

        goto label22;

        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    public void setScanState(int)
    {
        int $i0;
        com.yang.longrubblishclear.util.ScanUtils r0;

        r0 := @this: com.yang.longrubblishclear.util.ScanUtils;

        $i0 := @parameter0: int;

        r0.<com.yang.longrubblishclear.util.ScanUtils: int scanState> = $i0;

        return;
    }
}
