public final class com.kingroot.sdk.dv extends java.lang.Object
{
    private java.lang.String cS;
    private byte gA;
    private java.lang.String gs;
    private java.net.HttpURLConnection gt;
    private byte[] gu;
    private int gv;
    private java.util.Hashtable gw;
    private boolean gx;
    private boolean gy;
    private byte gz;
    private android.content.Context mContext;

    private void <init>(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        com.kingroot.sdk.dv r0;
        java.lang.String $r2;
        java.util.Hashtable $r3;

        r0 := @this: com.kingroot.sdk.dv;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.kingroot.sdk.dv: java.lang.String gs> = "GET";

        r0.<com.kingroot.sdk.dv: int gv> = -1;

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>(int)>(0);

        r0.<com.kingroot.sdk.dv: java.util.Hashtable gw> = $r3;

        r0.<com.kingroot.sdk.dv: boolean gx> = 0;

        r0.<com.kingroot.sdk.dv: boolean gy> = 1;

        r0.<com.kingroot.sdk.dv: byte gz> = 0;

        r0.<com.kingroot.sdk.dv: byte gA> = 0;

        r0.<com.kingroot.sdk.dv: android.content.Context mContext> = $r1;

        r0.<com.kingroot.sdk.dv: java.lang.String cS> = $r2;

        return;
    }

    public static com.kingroot.sdk.dv a(android.content.Context, com.kingroot.sdk.dv)
    {
        java.lang.Throwable $r4, $r8;
        android.content.Context $r0;
        byte[] $r6;
        java.net.URL $r5, $r12;
        byte $b0, $b1;
        int $i2, $i3;
        java.lang.String $r3;
        java.util.Hashtable $r7;
        boolean $z0;
        java.net.MalformedURLException $r14;
        com.kingroot.sdk.dv $r1, $r2, $r10;
        java.lang.StringBuilder $r9, $r13;
        com.kingroot.sdk.dw $r11;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.kingroot.sdk.dv;

        $b0 = 2;

        entermonitor class "Lcom/kingroot/sdk/dv;";

     label01:
        $b1 = staticinvoke <com.kingroot.sdk.util.k: byte J(android.content.Context)>($r0);

        $r10 = new com.kingroot.sdk.dv;

        $r2 = $r10;

        $r3 = virtualinvoke $r1.<com.kingroot.sdk.dv: java.lang.String bw()>();

        specialinvoke $r10.<com.kingroot.sdk.dv: void <init>(android.content.Context,java.lang.String)>($r0, $r3);

        $i3 = (int) $b1;

        if -1 != $i3 goto label03;

        $r11 = new com.kingroot.sdk.dw;

        specialinvoke $r11.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-1052, "no connection!");

        throw $r11;

     label02:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/kingroot/sdk/dv;";

        throw $r4;

     label03:
        $z0 = $r1.<com.kingroot.sdk.dv: boolean gx>;

        if $z0 == 0 goto label07;

        $i2 = (int) $b1;

        if $i2 == 2 goto label07;

     label04:
        $r12 = new java.net.URL;

        $r5 = $r12;

        $r3 = $r2.<com.kingroot.sdk.dv: java.lang.String cS>;

     label05:
        specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r3);

        specialinvoke $r2.<com.kingroot.sdk.dv: void a(java.net.URL,byte)>($r5, $b0);

        $r3 = virtualinvoke $r1.<com.kingroot.sdk.dv: java.lang.String getRequestMethod()>();

        virtualinvoke $r2.<com.kingroot.sdk.dv: void setRequestMethod(java.lang.String)>($r3);

        $r6 = virtualinvoke $r1.<com.kingroot.sdk.dv: byte[] bs()>();

        virtualinvoke $r2.<com.kingroot.sdk.dv: void k(byte[])>($r6);

        $r7 = specialinvoke $r1.<com.kingroot.sdk.dv: java.util.Hashtable bx()>();

        virtualinvoke $r2.<com.kingroot.sdk.dv: void a(java.util.Hashtable)>($r7);

     label06:
        exitmonitor class "Lcom/kingroot/sdk/dv;";

        return $r2;

     label07:
        $z0 = $r1.<com.kingroot.sdk.dv: boolean gx>;

     label08:
        if $z0 != 0 goto label11;

        $i2 = (int) $b1;

        if $i2 != 2 goto label11;

        $b0 = 1;

        goto label04;

     label09:
        $r8 := @caughtexception;

     label10:
        $r11 = new com.kingroot.sdk.dw;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalide url: ");

        $r3 = $r2.<com.kingroot.sdk.dv: java.lang.String cS>;

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = (java.net.MalformedURLException) $r8;

        $r3 = virtualinvoke $r14.<java.net.MalformedURLException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-1053, $r3);

        throw $r11;

     label11:
        $b0 = $b1;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.net.MalformedURLException from label05 to label06 with label09;
        catch java.lang.Throwable from label03 to label06 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label10 to label11 with label02;
    }

    private void a(java.net.URL, byte)
    {
        java.net.HttpURLConnection $r8;
        java.lang.Throwable $r9, $r11, $r12, $r13;
        android.content.Context $r5;
        java.net.URL $r1;
        java.net.Proxy$Type $r3;
        byte $b0;
        java.net.Proxy $r2, $r15;
        java.net.URLConnection $r7;
        int $i1, $i2;
        java.lang.SecurityException $r19;
        java.lang.String $r6;
        java.lang.UnsupportedOperationException $r20;
        java.io.IOException $r21;
        java.lang.IllegalArgumentException $r18;
        java.net.InetSocketAddress $r4, $r14;
        com.kingroot.sdk.dv r0;
        java.lang.StringBuilder $r10, $r16;
        com.kingroot.sdk.dw $r17;

        r0 := @this: com.kingroot.sdk.dv;

        $r1 := @parameter0: java.net.URL;

        $b0 := @parameter1: byte;

        $i2 = (int) $b0;

        if -1 == $i2 goto label16;

        $i1 = (int) $b0;

        if 2 != $i1 goto label10;

        $r15 = new java.net.Proxy;

        $r2 = $r15;

        $r3 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        $r14 = new java.net.InetSocketAddress;

        $r4 = $r14;

        $r5 = r0.<com.kingroot.sdk.dv: android.content.Context mContext>;

     label01:
        $r6 = staticinvoke <com.kingroot.sdk.util.k: java.lang.String K(android.content.Context)>($r5);

     label02:
        $r5 = r0.<com.kingroot.sdk.dv: android.content.Context mContext>;

     label03:
        $i1 = staticinvoke <com.kingroot.sdk.util.k: int L(android.content.Context)>($r5);

        specialinvoke $r14.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r6, $i1);

        specialinvoke $r15.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r3, $r4);

        $r7 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r2);

     label04:
        $r8 = (java.net.HttpURLConnection) $r7;

        r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt> = $r8;

        r0.<com.kingroot.sdk.dv: boolean gx> = 1;

     label05:
        $r8 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label06:
        virtualinvoke $r8.<java.net.HttpURLConnection: void setReadTimeout(int)>(30000);

     label07:
        $r8 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label08:
        virtualinvoke $r8.<java.net.HttpURLConnection: void setConnectTimeout(int)>(30000);

     label09:
        return;

     label10:
        $r7 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

     label11:
        $r8 = (java.net.HttpURLConnection) $r7;

        r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt> = $r8;

        r0.<com.kingroot.sdk.dv: boolean gx> = 0;

        goto label05;

     label12:
        $r9 := @caughtexception;

        $r17 = new com.kingroot.sdk.dw;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("arg error: ");

        $r18 = (java.lang.IllegalArgumentException) $r9;

        $r6 = virtualinvoke $r18.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-1057, $r6);

        throw $r17;

     label13:
        $r11 := @caughtexception;

        $r17 = new com.kingroot.sdk.dw;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("security error: ");

        $r19 = (java.lang.SecurityException) $r11;

        $r6 = virtualinvoke $r19.<java.lang.SecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-1058, $r6);

        throw $r17;

     label14:
        $r12 := @caughtexception;

        $r17 = new com.kingroot.sdk.dw;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("unsupported operation error: ");

        $r20 = (java.lang.UnsupportedOperationException) $r12;

        $r6 = virtualinvoke $r20.<java.lang.UnsupportedOperationException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-1059, $r6);

        throw $r17;

     label15:
        $r13 := @caughtexception;

        $r17 = new com.kingroot.sdk.dw;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("IOException : ");

        $r21 = (java.io.IOException) $r13;

        $r6 = virtualinvoke $r21.<java.io.IOException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-1056, $r6);

        throw $r17;

     label16:
        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label12;
        catch java.lang.IllegalArgumentException from label03 to label04 with label12;
        catch java.lang.IllegalArgumentException from label06 to label07 with label12;
        catch java.lang.IllegalArgumentException from label08 to label09 with label12;
        catch java.lang.IllegalArgumentException from label10 to label11 with label12;
        catch java.lang.SecurityException from label01 to label02 with label13;
        catch java.lang.SecurityException from label03 to label04 with label13;
        catch java.lang.SecurityException from label06 to label07 with label13;
        catch java.lang.SecurityException from label08 to label09 with label13;
        catch java.lang.SecurityException from label10 to label11 with label13;
        catch java.lang.UnsupportedOperationException from label01 to label02 with label14;
        catch java.lang.UnsupportedOperationException from label03 to label04 with label14;
        catch java.lang.UnsupportedOperationException from label06 to label07 with label14;
        catch java.lang.UnsupportedOperationException from label08 to label09 with label14;
        catch java.lang.UnsupportedOperationException from label10 to label11 with label14;
        catch java.io.IOException from label01 to label02 with label15;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.io.IOException from label06 to label07 with label15;
        catch java.io.IOException from label08 to label09 with label15;
        catch java.io.IOException from label10 to label11 with label15;
    }

    private java.util.Hashtable bx()
    {
        com.kingroot.sdk.dv r0;
        java.util.Hashtable r1;

        r0 := @this: com.kingroot.sdk.dv;

        r1 = r0.<com.kingroot.sdk.dv: java.util.Hashtable gw>;

        return r1;
    }

    private static byte[] c(java.io.InputStream)
    {
        java.lang.Throwable $r4;
        byte[] $r2;
        java.io.BufferedInputStream $r1, $r8;
        java.io.ByteArrayOutputStream $r3, $r9;
        java.io.IOException $r12;
        java.lang.Exception $r7;
        int $i0;
        java.lang.StringBuilder $r5, $r10;
        java.lang.String $r6;
        com.kingroot.sdk.dw $r11;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r8 = new java.io.BufferedInputStream;

        $r1 = $r8;

        specialinvoke $r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r0);

        $r2 = newarray (byte)[2048];

        $r9 = new java.io.ByteArrayOutputStream;

        $r3 = $r9;

        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

     label2:
        if $i0 == -1 goto label6;

     label3:
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i0);

     label4:
        goto label1;

     label5:
        $r4 := @caughtexception;

        $r11 = new com.kingroot.sdk.dw;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("get Bytes from inputStream when read buffer: ");

        $r12 = (java.io.IOException) $r4;

        $r6 = virtualinvoke $r12.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-56, $r6);

        throw $r11;

     label6:
        $r2 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label7:
        virtualinvoke $r1.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void close()>();

     label8:
        return $r2;

     label9:
        $r7 := @caughtexception;

        $r11 = new com.kingroot.sdk.dw;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("get Bytes from inputStream: ");

        $r6 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-56, $r6);

        throw $r11;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    private boolean isConnected()
    {
        int $i0;
        com.kingroot.sdk.dv r0;

        r0 := @this: com.kingroot.sdk.dv;

        $i0 = r0.<com.kingroot.sdk.dv: int gv>;

        if $i0 == 200 goto label1;

        $i0 = r0.<com.kingroot.sdk.dv: int gv>;

        if $i0 != 206 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static com.kingroot.sdk.dv u(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r3, $r6;
        android.content.Context $r0;
        java.net.MalformedURLException $r12;
        java.net.URL $r4, $r10;
        byte $b0;
        int $i2;
        com.kingroot.sdk.dv $r2, $r8;
        java.lang.StringBuilder $r7, $r11;
        java.lang.String $r1, $r5;
        com.kingroot.sdk.dw $r9;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "Lcom/kingroot/sdk/dv;";

     label1:
        $r8 = new com.kingroot.sdk.dv;

        $r2 = $r8;

        specialinvoke $r8.<com.kingroot.sdk.dv: void <init>(android.content.Context,java.lang.String)>($r0, $r1);

        $b0 = staticinvoke <com.kingroot.sdk.util.k: byte J(android.content.Context)>($r0);

        $i2 = (int) $b0;

        if -1 != $i2 goto label3;

        $r9 = new com.kingroot.sdk.dw;

        specialinvoke $r9.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-1052, "no connecition!");

        throw $r9;

     label2:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/kingroot/sdk/dv;";

        throw $r3;

     label3:
        $r10 = new java.net.URL;

        $r4 = $r10;

        $r5 = $r2.<com.kingroot.sdk.dv: java.lang.String cS>;

     label4:
        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r5);

        specialinvoke $r2.<com.kingroot.sdk.dv: void a(java.net.URL,byte)>($r4, $b0);

     label5:
        exitmonitor class "Lcom/kingroot/sdk/dv;";

        return $r2;

     label6:
        $r6 := @caughtexception;

     label7:
        $r9 = new com.kingroot.sdk.dw;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("malformed url: ");

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = (java.net.MalformedURLException) $r6;

        $r1 = virtualinvoke $r12.<java.net.MalformedURLException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-1053, $r1);

        throw $r9;

     label8:
        nop;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.net.MalformedURLException from label4 to label5 with label6;
        catch java.lang.Throwable from label3 to label5 with label2;
        catch java.lang.Throwable from label7 to label8 with label2;
    }

    public final int a(boolean, java.util.concurrent.atomic.AtomicReference)
    {
        java.net.HttpURLConnection $r3;
        byte[] $r6;
        java.util.concurrent.atomic.AtomicReference $r1;
        java.lang.Exception $r7;
        com.kingroot.sdk.dv r0;
        java.lang.StringBuilder $r2, $r10;
        java.lang.Object $r4;
        java.lang.String $r8;
        com.kingroot.sdk.dw $r11;
        boolean $z0, $z1;
        java.io.InputStream $r5;

        r0 := @this: com.kingroot.sdk.dv;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.util.concurrent.atomic.AtomicReference;

        $r3 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        if $r3 == null goto label1;

        $z1 = specialinvoke r0.<com.kingroot.sdk.dv: boolean isConnected()>();

        if $z1 != 0 goto label4;

     label1:
        return -4000;

     label2:
        $r5 = (java.io.InputStream) $r4;

        $r6 = staticinvoke <com.kingroot.sdk.dv: byte[] c(java.io.InputStream)>($r5);

     label3:
        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r6);

        return 0;

     label4:
        $r3 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        $r5 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label5:
        $r4 = $r5;

        goto label2;

     label6:
        $r7 := @caughtexception;

        $r11 = new com.kingroot.sdk.dw;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("get response exception : ");

        $r8 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-4002, $r8);

        throw $r11;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public final void a(java.util.Hashtable)
    {
        java.net.HttpURLConnection $r2;
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        com.kingroot.sdk.dv r0;
        java.lang.Object $r5;
        java.lang.String $r7, $r8;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.dv;

        $r1 := @parameter0: java.util.Hashtable;

        $r2 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        if $r2 == null goto label2;

        if $r1 == null goto label2;

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.String) $r5;

        virtualinvoke r0.<com.kingroot.sdk.dv: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8);

        goto label1;

     label2:
        return;
    }

    public final void b(java.util.Hashtable)
    {
        java.net.HttpURLConnection $r2;
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        int $i0;
        com.kingroot.sdk.dv r0;
        java.lang.Object $r5;
        java.lang.String $r7, $r8;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.dv;

        $r1 := @parameter0: java.util.Hashtable;

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<java.util.Hashtable: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        if $r2 == null goto label3;

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r2 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.String) $r5;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r7, $r8);

        goto label2;

     label3:
        return;
    }

    public final byte[] bs()
    {
        byte[] r1;
        com.kingroot.sdk.dv r0;

        r0 := @this: com.kingroot.sdk.dv;

        r1 = r0.<com.kingroot.sdk.dv: byte[] gu>;

        return r1;
    }

    public final int bt()
    {
        java.net.HttpURLConnection $r1;
        byte[] $r7;
        java.lang.IllegalStateException $r24;
        java.net.URL $r5, $r21;
        byte $b2, $b3;
        boolean $z0;
        java.lang.Exception $r19;
        java.lang.IllegalAccessError $r12;
        com.kingroot.sdk.dv r0;
        java.lang.StringBuilder $r4, $r20;
        com.kingroot.sdk.dw $r18, $r22;
        java.lang.Throwable $r10, $r11, $r13, $r14, $r15, $r16, $r17;
        org.apache.http.client.ClientProtocolException $r26;
        android.content.Context $r6;
        short $s0;
        java.net.SocketException $r27;
        java.net.SocketTimeoutException $r28;
        int $i1, $i4;
        java.lang.String $r2, $r3;
        java.util.Hashtable $r8;
        java.io.OutputStream $r9;
        java.net.UnknownHostException $r23;
        java.net.ProtocolException $r25;

        r0 := @this: com.kingroot.sdk.dv;

     label001:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label002:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Cookie", "");

     label003:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label004:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept", "*/*");

     label005:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label006:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Charset", "utf-8");

     label007:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label008:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/octet-stream");

     label009:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label010:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(1);

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.keepAlive", "false");

     label011:
        $r2 = "GET";

     label012:
        $r3 = r0.<com.kingroot.sdk.dv: java.lang.String gs>;

     label013:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

     label014:
        if $z0 == 0 goto label055;

        $s0 = -3000;

     label015:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label016:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

     label017:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label018:
        $i1 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>();

     label019:
        r0.<com.kingroot.sdk.dv: int gv> = $i1;

     label020:
        $r20 = new java.lang.StringBuilder;

     label021:
        $r4 = $r20;

     label022:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("mResponseCode = ");

     label023:
        $i1 = r0.<com.kingroot.sdk.dv: int gv>;

     label024:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void h(java.lang.String)>($r2);

     label025:
        $i1 = r0.<com.kingroot.sdk.dv: int gv>;

     label026:
        if $i1 < 301 goto label085;

     label027:
        $i1 = r0.<com.kingroot.sdk.dv: int gv>;

     label028:
        if $i1 > 305 goto label085;

     label029:
        $b2 = r0.<com.kingroot.sdk.dv: byte gz>;

     label030:
        $i1 = (int) $b2;

        $i1 = $i1 + 1;

        $b3 = (byte) $i1;

     label031:
        r0.<com.kingroot.sdk.dv: byte gz> = $b3;

     label032:
        $i1 = (int) $b2;

        if $i1 >= 2 goto label141;

     label033:
        $r2 = virtualinvoke r0.<com.kingroot.sdk.dv: java.lang.String bv()>();

     label034:
        r0.<com.kingroot.sdk.dv: java.lang.String cS> = $r2;

        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label035:
        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

     label036:
        $r21 = new java.net.URL;

     label037:
        $r5 = $r21;

     label038:
        $r2 = r0.<com.kingroot.sdk.dv: java.lang.String cS>;

     label039:
        specialinvoke $r21.<java.net.URL: void <init>(java.lang.String)>($r2);

     label040:
        $r6 = r0.<com.kingroot.sdk.dv: android.content.Context mContext>;

     label041:
        $b2 = staticinvoke <com.kingroot.sdk.util.k: byte J(android.content.Context)>($r6);

        specialinvoke r0.<com.kingroot.sdk.dv: void a(java.net.URL,byte)>($r5, $b2);

     label042:
        $r2 = r0.<com.kingroot.sdk.dv: java.lang.String gs>;

     label043:
        virtualinvoke r0.<com.kingroot.sdk.dv: void setRequestMethod(java.lang.String)>($r2);

     label044:
        $r2 = "POST";

     label045:
        $r3 = r0.<com.kingroot.sdk.dv: java.lang.String gs>;

     label046:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

     label047:
        if $z0 == 0 goto label052;

     label048:
        $r7 = r0.<com.kingroot.sdk.dv: byte[] gu>;

     label049:
        if $r7 == null goto label052;

     label050:
        $r7 = r0.<com.kingroot.sdk.dv: byte[] gu>;

     label051:
        virtualinvoke r0.<com.kingroot.sdk.dv: void k(byte[])>($r7);

     label052:
        $r8 = r0.<com.kingroot.sdk.dv: java.util.Hashtable gw>;

     label053:
        virtualinvoke r0.<com.kingroot.sdk.dv: void b(java.util.Hashtable)>($r8);

        $i1 = virtualinvoke r0.<com.kingroot.sdk.dv: int bt()>();

     label054:
        return $i1;

     label055:
        $s0 = -2000;

     label056:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label057:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

     label058:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label059:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label060:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label061:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

     label062:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label063:
        virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

     label064:
        $r7 = r0.<com.kingroot.sdk.dv: byte[] gu>;

     label065:
        if $r7 == null goto label017;

     label066:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label067:
        $r20 = new java.lang.StringBuilder;

     label068:
        $r4 = $r20;

     label069:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

     label070:
        $r7 = r0.<com.kingroot.sdk.dv: byte[] gu>;

     label071:
        $i1 = lengthof $r7;

     label072:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-length", $r2);

     label073:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label074:
        $r9 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

     label075:
        $r7 = r0.<com.kingroot.sdk.dv: byte[] gu>;

     label076:
        virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r7);

        virtualinvoke $r9.<java.io.OutputStream: void flush()>();

        virtualinvoke $r9.<java.io.OutputStream: void close()>();

     label077:
        goto label017;

     label078:
        $r10 := @caughtexception;

     label079:
        $z0 = r0.<com.kingroot.sdk.dv: boolean gy>;

        if $z0 == 0 goto label124;

        r0.<com.kingroot.sdk.dv: boolean gy> = 0;

        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

        $r6 = r0.<com.kingroot.sdk.dv: android.content.Context mContext>;

     label080:
        $b2 = staticinvoke <com.kingroot.sdk.util.k: byte J(android.content.Context)>($r6);

     label081:
        $i1 = (int) $b2;

        if 2 != $i1 goto label118;

        $z0 = r0.<com.kingroot.sdk.dv: boolean gx>;

        if $z0 == 0 goto label118;

        $r21 = new java.net.URL;

        $r5 = $r21;

        $r2 = r0.<com.kingroot.sdk.dv: java.lang.String cS>;

     label082:
        specialinvoke $r21.<java.net.URL: void <init>(java.lang.String)>($r2);

        specialinvoke r0.<com.kingroot.sdk.dv: void a(java.net.URL,byte)>($r5, 1);

     label083:
        $r2 = r0.<com.kingroot.sdk.dv: java.lang.String gs>;

        virtualinvoke r0.<com.kingroot.sdk.dv: void setRequestMethod(java.lang.String)>($r2);

        $r2 = "POST";

        $r3 = r0.<com.kingroot.sdk.dv: java.lang.String gs>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label084;

        $r7 = r0.<com.kingroot.sdk.dv: byte[] gu>;

        if $r7 == null goto label084;

        $r7 = r0.<com.kingroot.sdk.dv: byte[] gu>;

        virtualinvoke r0.<com.kingroot.sdk.dv: void k(byte[])>($r7);

     label084:
        $r8 = r0.<com.kingroot.sdk.dv: java.util.Hashtable gw>;

        virtualinvoke r0.<com.kingroot.sdk.dv: void b(java.util.Hashtable)>($r8);

        goto label001;

     label085:
        $i1 = r0.<com.kingroot.sdk.dv: int gv>;

     label086:
        if $i1 != 200 goto label141;

     label087:
        $r2 = virtualinvoke r0.<com.kingroot.sdk.dv: java.lang.String getContentType()>();

     label088:
        $r6 = r0.<com.kingroot.sdk.dv: android.content.Context mContext>;

     label089:
        $b2 = staticinvoke <com.kingroot.sdk.util.k: byte J(android.content.Context)>($r6);

     label090:
        $i1 = (int) $b2;

        if 2 != $i1 goto label141;

        if $r2 == null goto label141;

     label091:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("vnd.wap.wml");

     label092:
        if $i1 == -1 goto label141;

     label093:
        $b2 = r0.<com.kingroot.sdk.dv: byte gA>;

     label094:
        $i1 = (int) $b2;

        $i1 = $i1 + 1;

        $b3 = (byte) $i1;

     label095:
        r0.<com.kingroot.sdk.dv: byte gA> = $b3;

     label096:
        $i1 = (int) $b2;

        if $i1 > 0 goto label141;

     label097:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

     label098:
        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

     label099:
        $r21 = new java.net.URL;

     label100:
        $r5 = $r21;

     label101:
        $r2 = r0.<com.kingroot.sdk.dv: java.lang.String cS>;

     label102:
        specialinvoke $r21.<java.net.URL: void <init>(java.lang.String)>($r2);

     label103:
        $r6 = r0.<com.kingroot.sdk.dv: android.content.Context mContext>;

     label104:
        $b2 = staticinvoke <com.kingroot.sdk.util.k: byte J(android.content.Context)>($r6);

        specialinvoke r0.<com.kingroot.sdk.dv: void a(java.net.URL,byte)>($r5, $b2);

     label105:
        $r2 = r0.<com.kingroot.sdk.dv: java.lang.String gs>;

     label106:
        virtualinvoke r0.<com.kingroot.sdk.dv: void setRequestMethod(java.lang.String)>($r2);

     label107:
        $r2 = "POST";

     label108:
        $r3 = r0.<com.kingroot.sdk.dv: java.lang.String gs>;

     label109:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

     label110:
        if $z0 == 0 goto label115;

     label111:
        $r7 = r0.<com.kingroot.sdk.dv: byte[] gu>;

     label112:
        if $r7 == null goto label115;

     label113:
        $r7 = r0.<com.kingroot.sdk.dv: byte[] gu>;

     label114:
        virtualinvoke r0.<com.kingroot.sdk.dv: void k(byte[])>($r7);

     label115:
        $r8 = r0.<com.kingroot.sdk.dv: java.util.Hashtable gw>;

     label116:
        virtualinvoke r0.<com.kingroot.sdk.dv: void b(java.util.Hashtable)>($r8);

        $i1 = virtualinvoke r0.<com.kingroot.sdk.dv: int bt()>();

     label117:
        return $i1;

     label118:
        $r6 = r0.<com.kingroot.sdk.dv: android.content.Context mContext>;

     label119:
        $b2 = staticinvoke <com.kingroot.sdk.util.k: byte J(android.content.Context)>($r6);

     label120:
        $i1 = (int) $b2;

        if 2 == $i1 goto label083;

        $z0 = r0.<com.kingroot.sdk.dv: boolean gx>;

        if $z0 != 0 goto label083;

        $r21 = new java.net.URL;

        $r5 = $r21;

        $r2 = r0.<com.kingroot.sdk.dv: java.lang.String cS>;

     label121:
        specialinvoke $r21.<java.net.URL: void <init>(java.lang.String)>($r2);

        specialinvoke r0.<com.kingroot.sdk.dv: void a(java.net.URL,byte)>($r5, 2);

     label122:
        goto label083;

     label123:
        $r11 := @caughtexception;

        $i1 = $s0 + -53;

        $r18 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("malformed url: ");

        $r2 = r0.<com.kingroot.sdk.dv: java.lang.String cS>;

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = (java.net.UnknownHostException) $r10;

        $r2 = virtualinvoke $r23.<java.net.UnknownHostException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($i1, $r2);

        throw $r18;

     label124:
        $i1 = $s0 + -62;

        $r18 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendRequest UnknownHostException: ");

        $r23 = (java.net.UnknownHostException) $r10;

        $r2 = virtualinvoke $r23.<java.net.UnknownHostException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($i1, $r2);

        throw $r18;

     label125:
        $r12 := @caughtexception;

        $s0 = 0;

     label126:
        $i1 = $s0 + -60;

        $r18 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendRequest IllegalAccessError: ");

        $r2 = virtualinvoke $r12.<java.lang.IllegalAccessError: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($i1, $r2);

        throw $r18;

     label127:
        $r13 := @caughtexception;

        $s0 = 0;

     label128:
        $i1 = $s0 + -61;

        $r18 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendRequest IllegalStateException: ");

        $r24 = (java.lang.IllegalStateException) $r13;

        $r2 = virtualinvoke $r24.<java.lang.IllegalStateException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($i1, $r2);

        throw $r18;

     label129:
        $r14 := @caughtexception;

        $s0 = 0;

     label130:
        $i1 = $s0 + -51;

        $r18 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendRequest ProtocolException: ");

        $r25 = (java.net.ProtocolException) $r14;

        $r2 = virtualinvoke $r25.<java.net.ProtocolException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($i1, $r2);

        throw $r18;

     label131:
        $r15 := @caughtexception;

        $s0 = 0;

     label132:
        $i1 = $s0 + -51;

        $r18 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendRequest ClientProtocolException: ");

        $r26 = (org.apache.http.client.ClientProtocolException) $r15;

        $r2 = virtualinvoke $r26.<org.apache.http.client.ClientProtocolException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($i1, $r2);

        throw $r18;

     label133:
        $r16 := @caughtexception;

        $s0 = 0;

     label134:
        $i1 = $s0 + -54;

        $r18 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendRequest SocketException: ");

        $r27 = (java.net.SocketException) $r16;

        $r2 = virtualinvoke $r27.<java.net.SocketException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($i1, $r2);

        throw $r18;

     label135:
        $r17 := @caughtexception;

        $s0 = 0;

     label136:
        $i1 = $s0 + -55;

        $r18 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendRequest SocketTimeoutException: ");

        $r28 = (java.net.SocketTimeoutException) $r17;

        $r2 = virtualinvoke $r28.<java.net.SocketTimeoutException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($i1, $r2);

        throw $r18;

     label137:
        $r18 := @caughtexception;

        $s0 = 0;

     label138:
        $i1 = $s0 + -56;

        $r22 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendRequest NetWorkException: ");

        $r2 = virtualinvoke $r18.<com.kingroot.sdk.dw: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($i1, $r2);

        throw $r22;

     label139:
        $r19 := @caughtexception;

        $s0 = 0;

     label140:
        virtualinvoke $r19.<java.lang.Exception: void printStackTrace()>();

        $r18 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendRequest Exception: ");

        $r2 = virtualinvoke $r19.<java.lang.Exception: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($s0, $r2);

        throw $r18;

     label141:
        $i1 = r0.<com.kingroot.sdk.dv: int gv>;

        if $i1 == 206 goto label142;

        $i1 = r0.<com.kingroot.sdk.dv: int gv>;

        if $i1 == 200 goto label142;

        $i1 = r0.<com.kingroot.sdk.dv: int gv>;

        $i1 = $i1 + $s0;

        $r18 = new com.kingroot.sdk.dw;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("response code is unnormal: ");

        $i4 = r0.<com.kingroot.sdk.dv: int gv>;

        $r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>($i1, $r2);

        throw $r18;

     label142:
        $i1 = r0.<com.kingroot.sdk.dv: int gv>;

        return $i1;

     label143:
        $r19 := @caughtexception;

        goto label140;

     label144:
        $r18 := @caughtexception;

        goto label138;

     label145:
        $r17 := @caughtexception;

        goto label136;

     label146:
        $r16 := @caughtexception;

        goto label134;

     label147:
        $r15 := @caughtexception;

        goto label132;

     label148:
        $r14 := @caughtexception;

        goto label130;

     label149:
        $r13 := @caughtexception;

        goto label128;

     label150:
        $r12 := @caughtexception;

        goto label126;

     label151:
        $r10 := @caughtexception;

        $s0 = 0;

        goto label079;

        catch java.net.UnknownHostException from label002 to label003 with label151;
        catch java.net.UnknownHostException from label004 to label005 with label151;
        catch java.net.UnknownHostException from label006 to label007 with label151;
        catch java.net.UnknownHostException from label008 to label009 with label151;
        catch java.net.UnknownHostException from label010 to label011 with label151;
        catch java.net.UnknownHostException from label013 to label014 with label151;
        catch java.lang.IllegalAccessError from label001 to label011 with label125;
        catch java.lang.IllegalAccessError from label012 to label014 with label125;
        catch java.lang.IllegalStateException from label002 to label003 with label127;
        catch java.lang.IllegalStateException from label004 to label005 with label127;
        catch java.lang.IllegalStateException from label006 to label007 with label127;
        catch java.lang.IllegalStateException from label008 to label009 with label127;
        catch java.lang.IllegalStateException from label010 to label011 with label127;
        catch java.lang.IllegalStateException from label013 to label014 with label127;
        catch java.net.ProtocolException from label002 to label003 with label129;
        catch java.net.ProtocolException from label004 to label005 with label129;
        catch java.net.ProtocolException from label006 to label007 with label129;
        catch java.net.ProtocolException from label008 to label009 with label129;
        catch java.net.ProtocolException from label010 to label011 with label129;
        catch java.net.ProtocolException from label013 to label014 with label129;
        catch org.apache.http.client.ClientProtocolException from label002 to label003 with label131;
        catch org.apache.http.client.ClientProtocolException from label004 to label005 with label131;
        catch org.apache.http.client.ClientProtocolException from label006 to label007 with label131;
        catch org.apache.http.client.ClientProtocolException from label008 to label009 with label131;
        catch org.apache.http.client.ClientProtocolException from label010 to label011 with label131;
        catch org.apache.http.client.ClientProtocolException from label013 to label014 with label131;
        catch java.net.SocketException from label002 to label003 with label133;
        catch java.net.SocketException from label004 to label005 with label133;
        catch java.net.SocketException from label006 to label007 with label133;
        catch java.net.SocketException from label008 to label009 with label133;
        catch java.net.SocketException from label010 to label011 with label133;
        catch java.net.SocketException from label013 to label014 with label133;
        catch java.net.SocketTimeoutException from label002 to label003 with label135;
        catch java.net.SocketTimeoutException from label004 to label005 with label135;
        catch java.net.SocketTimeoutException from label006 to label007 with label135;
        catch java.net.SocketTimeoutException from label008 to label009 with label135;
        catch java.net.SocketTimeoutException from label010 to label011 with label135;
        catch java.net.SocketTimeoutException from label013 to label014 with label135;
        catch com.kingroot.sdk.dw from label002 to label003 with label137;
        catch com.kingroot.sdk.dw from label004 to label005 with label137;
        catch com.kingroot.sdk.dw from label006 to label007 with label137;
        catch com.kingroot.sdk.dw from label008 to label009 with label137;
        catch com.kingroot.sdk.dw from label010 to label011 with label137;
        catch com.kingroot.sdk.dw from label013 to label014 with label137;
        catch java.lang.Exception from label001 to label011 with label139;
        catch java.lang.Exception from label012 to label014 with label139;
        catch java.net.UnknownHostException from label016 to label017 with label078;
        catch java.net.UnknownHostException from label018 to label019 with label078;
        catch java.net.UnknownHostException from label022 to label023 with label078;
        catch java.net.UnknownHostException from label024 to label025 with label078;
        catch java.net.UnknownHostException from label033 to label034 with label078;
        catch java.net.UnknownHostException from label035 to label036 with label078;
        catch java.net.UnknownHostException from label039 to label040 with label078;
        catch java.net.UnknownHostException from label041 to label042 with label078;
        catch java.net.UnknownHostException from label043 to label044 with label078;
        catch java.net.UnknownHostException from label046 to label047 with label078;
        catch java.net.UnknownHostException from label051 to label052 with label078;
        catch java.net.UnknownHostException from label053 to label054 with label078;
        catch java.net.UnknownHostException from label057 to label058 with label078;
        catch java.net.UnknownHostException from label059 to label060 with label078;
        catch java.net.UnknownHostException from label061 to label062 with label078;
        catch java.net.UnknownHostException from label063 to label064 with label078;
        catch java.net.UnknownHostException from label069 to label070 with label078;
        catch java.net.UnknownHostException from label072 to label073 with label078;
        catch java.net.UnknownHostException from label074 to label075 with label078;
        catch java.net.UnknownHostException from label076 to label077 with label078;
        catch java.lang.IllegalAccessError from label015 to label021 with label150;
        catch java.lang.IllegalAccessError from label022 to label026 with label150;
        catch java.lang.IllegalAccessError from label027 to label028 with label150;
        catch java.lang.IllegalAccessError from label029 to label030 with label150;
        catch java.lang.IllegalAccessError from label031 to label032 with label150;
        catch java.lang.IllegalAccessError from label033 to label037 with label150;
        catch java.lang.IllegalAccessError from label038 to label044 with label150;
        catch java.lang.IllegalAccessError from label045 to label047 with label150;
        catch java.lang.IllegalAccessError from label048 to label049 with label150;
        catch java.lang.IllegalAccessError from label050 to label054 with label150;
        catch java.lang.IllegalAccessError from label056 to label065 with label150;
        catch java.lang.IllegalAccessError from label066 to label068 with label150;
        catch java.lang.IllegalAccessError from label069 to label071 with label150;
        catch java.lang.IllegalAccessError from label072 to label077 with label150;
        catch java.lang.IllegalStateException from label016 to label017 with label149;
        catch java.lang.IllegalStateException from label018 to label019 with label149;
        catch java.lang.IllegalStateException from label022 to label023 with label149;
        catch java.lang.IllegalStateException from label024 to label025 with label149;
        catch java.lang.IllegalStateException from label033 to label034 with label149;
        catch java.lang.IllegalStateException from label035 to label036 with label149;
        catch java.lang.IllegalStateException from label039 to label040 with label149;
        catch java.lang.IllegalStateException from label041 to label042 with label149;
        catch java.lang.IllegalStateException from label043 to label044 with label149;
        catch java.lang.IllegalStateException from label046 to label047 with label149;
        catch java.lang.IllegalStateException from label051 to label052 with label149;
        catch java.lang.IllegalStateException from label053 to label054 with label149;
        catch java.lang.IllegalStateException from label057 to label058 with label149;
        catch java.lang.IllegalStateException from label059 to label060 with label149;
        catch java.lang.IllegalStateException from label061 to label062 with label149;
        catch java.lang.IllegalStateException from label063 to label064 with label149;
        catch java.lang.IllegalStateException from label069 to label070 with label149;
        catch java.lang.IllegalStateException from label072 to label073 with label149;
        catch java.lang.IllegalStateException from label074 to label075 with label149;
        catch java.lang.IllegalStateException from label076 to label077 with label149;
        catch java.net.ProtocolException from label016 to label017 with label148;
        catch java.net.ProtocolException from label018 to label019 with label148;
        catch java.net.ProtocolException from label022 to label023 with label148;
        catch java.net.ProtocolException from label024 to label025 with label148;
        catch java.net.ProtocolException from label033 to label034 with label148;
        catch java.net.ProtocolException from label035 to label036 with label148;
        catch java.net.ProtocolException from label039 to label040 with label148;
        catch java.net.ProtocolException from label041 to label042 with label148;
        catch java.net.ProtocolException from label043 to label044 with label148;
        catch java.net.ProtocolException from label046 to label047 with label148;
        catch java.net.ProtocolException from label051 to label052 with label148;
        catch java.net.ProtocolException from label053 to label054 with label148;
        catch java.net.ProtocolException from label057 to label058 with label148;
        catch java.net.ProtocolException from label059 to label060 with label148;
        catch java.net.ProtocolException from label061 to label062 with label148;
        catch java.net.ProtocolException from label063 to label064 with label148;
        catch java.net.ProtocolException from label069 to label070 with label148;
        catch java.net.ProtocolException from label072 to label073 with label148;
        catch java.net.ProtocolException from label074 to label075 with label148;
        catch java.net.ProtocolException from label076 to label077 with label148;
        catch org.apache.http.client.ClientProtocolException from label016 to label017 with label147;
        catch org.apache.http.client.ClientProtocolException from label018 to label019 with label147;
        catch org.apache.http.client.ClientProtocolException from label022 to label023 with label147;
        catch org.apache.http.client.ClientProtocolException from label024 to label025 with label147;
        catch org.apache.http.client.ClientProtocolException from label033 to label034 with label147;
        catch org.apache.http.client.ClientProtocolException from label035 to label036 with label147;
        catch org.apache.http.client.ClientProtocolException from label039 to label040 with label147;
        catch org.apache.http.client.ClientProtocolException from label041 to label042 with label147;
        catch org.apache.http.client.ClientProtocolException from label043 to label044 with label147;
        catch org.apache.http.client.ClientProtocolException from label046 to label047 with label147;
        catch org.apache.http.client.ClientProtocolException from label051 to label052 with label147;
        catch org.apache.http.client.ClientProtocolException from label053 to label054 with label147;
        catch org.apache.http.client.ClientProtocolException from label057 to label058 with label147;
        catch org.apache.http.client.ClientProtocolException from label059 to label060 with label147;
        catch org.apache.http.client.ClientProtocolException from label061 to label062 with label147;
        catch org.apache.http.client.ClientProtocolException from label063 to label064 with label147;
        catch org.apache.http.client.ClientProtocolException from label069 to label070 with label147;
        catch org.apache.http.client.ClientProtocolException from label072 to label073 with label147;
        catch org.apache.http.client.ClientProtocolException from label074 to label075 with label147;
        catch org.apache.http.client.ClientProtocolException from label076 to label077 with label147;
        catch java.net.SocketException from label016 to label017 with label146;
        catch java.net.SocketException from label018 to label019 with label146;
        catch java.net.SocketException from label022 to label023 with label146;
        catch java.net.SocketException from label024 to label025 with label146;
        catch java.net.SocketException from label033 to label034 with label146;
        catch java.net.SocketException from label035 to label036 with label146;
        catch java.net.SocketException from label039 to label040 with label146;
        catch java.net.SocketException from label041 to label042 with label146;
        catch java.net.SocketException from label043 to label044 with label146;
        catch java.net.SocketException from label046 to label047 with label146;
        catch java.net.SocketException from label051 to label052 with label146;
        catch java.net.SocketException from label053 to label054 with label146;
        catch java.net.SocketException from label057 to label058 with label146;
        catch java.net.SocketException from label059 to label060 with label146;
        catch java.net.SocketException from label061 to label062 with label146;
        catch java.net.SocketException from label063 to label064 with label146;
        catch java.net.SocketException from label069 to label070 with label146;
        catch java.net.SocketException from label072 to label073 with label146;
        catch java.net.SocketException from label074 to label075 with label146;
        catch java.net.SocketException from label076 to label077 with label146;
        catch java.net.SocketTimeoutException from label016 to label017 with label145;
        catch java.net.SocketTimeoutException from label018 to label019 with label145;
        catch java.net.SocketTimeoutException from label022 to label023 with label145;
        catch java.net.SocketTimeoutException from label024 to label025 with label145;
        catch java.net.SocketTimeoutException from label033 to label034 with label145;
        catch java.net.SocketTimeoutException from label035 to label036 with label145;
        catch java.net.SocketTimeoutException from label039 to label040 with label145;
        catch java.net.SocketTimeoutException from label041 to label042 with label145;
        catch java.net.SocketTimeoutException from label043 to label044 with label145;
        catch java.net.SocketTimeoutException from label046 to label047 with label145;
        catch java.net.SocketTimeoutException from label051 to label052 with label145;
        catch java.net.SocketTimeoutException from label053 to label054 with label145;
        catch java.net.SocketTimeoutException from label057 to label058 with label145;
        catch java.net.SocketTimeoutException from label059 to label060 with label145;
        catch java.net.SocketTimeoutException from label061 to label062 with label145;
        catch java.net.SocketTimeoutException from label063 to label064 with label145;
        catch java.net.SocketTimeoutException from label069 to label070 with label145;
        catch java.net.SocketTimeoutException from label072 to label073 with label145;
        catch java.net.SocketTimeoutException from label074 to label075 with label145;
        catch java.net.SocketTimeoutException from label076 to label077 with label145;
        catch com.kingroot.sdk.dw from label016 to label017 with label144;
        catch com.kingroot.sdk.dw from label018 to label019 with label144;
        catch com.kingroot.sdk.dw from label022 to label023 with label144;
        catch com.kingroot.sdk.dw from label024 to label025 with label144;
        catch com.kingroot.sdk.dw from label033 to label034 with label144;
        catch com.kingroot.sdk.dw from label035 to label036 with label144;
        catch com.kingroot.sdk.dw from label039 to label040 with label144;
        catch com.kingroot.sdk.dw from label041 to label042 with label144;
        catch com.kingroot.sdk.dw from label043 to label044 with label144;
        catch com.kingroot.sdk.dw from label046 to label047 with label144;
        catch com.kingroot.sdk.dw from label051 to label052 with label144;
        catch com.kingroot.sdk.dw from label053 to label054 with label144;
        catch com.kingroot.sdk.dw from label057 to label058 with label144;
        catch com.kingroot.sdk.dw from label059 to label060 with label144;
        catch com.kingroot.sdk.dw from label061 to label062 with label144;
        catch com.kingroot.sdk.dw from label063 to label064 with label144;
        catch com.kingroot.sdk.dw from label069 to label070 with label144;
        catch com.kingroot.sdk.dw from label072 to label073 with label144;
        catch com.kingroot.sdk.dw from label074 to label075 with label144;
        catch com.kingroot.sdk.dw from label076 to label077 with label144;
        catch java.lang.Exception from label015 to label020 with label143;
        catch java.lang.Exception from label022 to label026 with label143;
        catch java.lang.Exception from label027 to label028 with label143;
        catch java.lang.Exception from label029 to label030 with label143;
        catch java.lang.Exception from label031 to label032 with label143;
        catch java.lang.Exception from label033 to label036 with label143;
        catch java.lang.Exception from label038 to label044 with label143;
        catch java.lang.Exception from label045 to label047 with label143;
        catch java.lang.Exception from label048 to label049 with label143;
        catch java.lang.Exception from label050 to label054 with label143;
        catch java.lang.Exception from label056 to label065 with label143;
        catch java.lang.Exception from label066 to label067 with label143;
        catch java.lang.Exception from label069 to label077 with label143;
        catch java.net.MalformedURLException from label080 to label081 with label123;
        catch java.net.MalformedURLException from label082 to label083 with label123;
        catch java.net.UnknownHostException from label087 to label088 with label078;
        catch java.net.UnknownHostException from label089 to label090 with label078;
        catch java.net.UnknownHostException from label091 to label092 with label078;
        catch java.net.UnknownHostException from label098 to label099 with label078;
        catch java.net.UnknownHostException from label102 to label103 with label078;
        catch java.net.UnknownHostException from label104 to label105 with label078;
        catch java.net.UnknownHostException from label106 to label107 with label078;
        catch java.net.UnknownHostException from label109 to label110 with label078;
        catch java.net.UnknownHostException from label114 to label115 with label078;
        catch java.net.UnknownHostException from label116 to label117 with label078;
        catch java.lang.IllegalAccessError from label085 to label086 with label150;
        catch java.lang.IllegalAccessError from label087 to label090 with label150;
        catch java.lang.IllegalAccessError from label091 to label092 with label150;
        catch java.lang.IllegalAccessError from label093 to label094 with label150;
        catch java.lang.IllegalAccessError from label095 to label096 with label150;
        catch java.lang.IllegalAccessError from label097 to label100 with label150;
        catch java.lang.IllegalAccessError from label101 to label107 with label150;
        catch java.lang.IllegalAccessError from label108 to label110 with label150;
        catch java.lang.IllegalAccessError from label111 to label112 with label150;
        catch java.lang.IllegalAccessError from label113 to label117 with label150;
        catch java.lang.IllegalStateException from label087 to label088 with label149;
        catch java.lang.IllegalStateException from label089 to label090 with label149;
        catch java.lang.IllegalStateException from label091 to label092 with label149;
        catch java.lang.IllegalStateException from label098 to label099 with label149;
        catch java.lang.IllegalStateException from label102 to label103 with label149;
        catch java.lang.IllegalStateException from label104 to label105 with label149;
        catch java.lang.IllegalStateException from label106 to label107 with label149;
        catch java.lang.IllegalStateException from label109 to label110 with label149;
        catch java.lang.IllegalStateException from label114 to label115 with label149;
        catch java.lang.IllegalStateException from label116 to label117 with label149;
        catch java.net.ProtocolException from label087 to label088 with label148;
        catch java.net.ProtocolException from label089 to label090 with label148;
        catch java.net.ProtocolException from label091 to label092 with label148;
        catch java.net.ProtocolException from label098 to label099 with label148;
        catch java.net.ProtocolException from label102 to label103 with label148;
        catch java.net.ProtocolException from label104 to label105 with label148;
        catch java.net.ProtocolException from label106 to label107 with label148;
        catch java.net.ProtocolException from label109 to label110 with label148;
        catch java.net.ProtocolException from label114 to label115 with label148;
        catch java.net.ProtocolException from label116 to label117 with label148;
        catch org.apache.http.client.ClientProtocolException from label087 to label088 with label147;
        catch org.apache.http.client.ClientProtocolException from label089 to label090 with label147;
        catch org.apache.http.client.ClientProtocolException from label091 to label092 with label147;
        catch org.apache.http.client.ClientProtocolException from label098 to label099 with label147;
        catch org.apache.http.client.ClientProtocolException from label102 to label103 with label147;
        catch org.apache.http.client.ClientProtocolException from label104 to label105 with label147;
        catch org.apache.http.client.ClientProtocolException from label106 to label107 with label147;
        catch org.apache.http.client.ClientProtocolException from label109 to label110 with label147;
        catch org.apache.http.client.ClientProtocolException from label114 to label115 with label147;
        catch org.apache.http.client.ClientProtocolException from label116 to label117 with label147;
        catch java.net.SocketException from label087 to label088 with label146;
        catch java.net.SocketException from label089 to label090 with label146;
        catch java.net.SocketException from label091 to label092 with label146;
        catch java.net.SocketException from label098 to label099 with label146;
        catch java.net.SocketException from label102 to label103 with label146;
        catch java.net.SocketException from label104 to label105 with label146;
        catch java.net.SocketException from label106 to label107 with label146;
        catch java.net.SocketException from label109 to label110 with label146;
        catch java.net.SocketException from label114 to label115 with label146;
        catch java.net.SocketException from label116 to label117 with label146;
        catch java.net.SocketTimeoutException from label087 to label088 with label145;
        catch java.net.SocketTimeoutException from label089 to label090 with label145;
        catch java.net.SocketTimeoutException from label091 to label092 with label145;
        catch java.net.SocketTimeoutException from label098 to label099 with label145;
        catch java.net.SocketTimeoutException from label102 to label103 with label145;
        catch java.net.SocketTimeoutException from label104 to label105 with label145;
        catch java.net.SocketTimeoutException from label106 to label107 with label145;
        catch java.net.SocketTimeoutException from label109 to label110 with label145;
        catch java.net.SocketTimeoutException from label114 to label115 with label145;
        catch java.net.SocketTimeoutException from label116 to label117 with label145;
        catch com.kingroot.sdk.dw from label087 to label088 with label144;
        catch com.kingroot.sdk.dw from label089 to label090 with label144;
        catch com.kingroot.sdk.dw from label091 to label092 with label144;
        catch com.kingroot.sdk.dw from label098 to label099 with label144;
        catch com.kingroot.sdk.dw from label102 to label103 with label144;
        catch com.kingroot.sdk.dw from label104 to label105 with label144;
        catch com.kingroot.sdk.dw from label106 to label107 with label144;
        catch com.kingroot.sdk.dw from label109 to label110 with label144;
        catch com.kingroot.sdk.dw from label114 to label115 with label144;
        catch com.kingroot.sdk.dw from label116 to label117 with label144;
        catch java.lang.Exception from label085 to label086 with label143;
        catch java.lang.Exception from label087 to label090 with label143;
        catch java.lang.Exception from label091 to label092 with label143;
        catch java.lang.Exception from label093 to label094 with label143;
        catch java.lang.Exception from label095 to label096 with label143;
        catch java.lang.Exception from label097 to label099 with label143;
        catch java.lang.Exception from label101 to label107 with label143;
        catch java.lang.Exception from label108 to label110 with label143;
        catch java.lang.Exception from label111 to label112 with label143;
        catch java.lang.Exception from label113 to label117 with label143;
        catch java.net.MalformedURLException from label119 to label120 with label123;
        catch java.net.MalformedURLException from label121 to label122 with label123;
    }

    public final long bu()
    {
        long $l1;
        java.lang.Exception $r3;
        int $i0;
        com.kingroot.sdk.dv r0;
        java.lang.StringBuilder $r1, $r4;
        java.lang.String $r2;
        com.kingroot.sdk.dw $r5;

        r0 := @this: com.kingroot.sdk.dv;

        $r2 = virtualinvoke r0.<com.kingroot.sdk.dv: java.lang.String getHeaderField(java.lang.String)>("Content-Range");

        if $r2 == null goto label6;

     label1:
        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(47);

     label2:
        $i0 = $i0 + 1;

     label3:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label4:
        return $l1;

     label5:
        $r3 := @caughtexception;

        $r5 = new com.kingroot.sdk.dw;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("get breakpoint total size: ");

        $r2 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-56, $r2);

        throw $r5;

     label6:
        return -1L;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public final java.lang.String bv()
    {
        java.net.HttpURLConnection $r2;
        com.kingroot.sdk.dv r0;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r3;
        com.kingroot.sdk.dw $r6;
        java.lang.Exception $r4;

        r0 := @this: com.kingroot.sdk.dv;

     label1:
        $r2 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r6 = new com.kingroot.sdk.dw;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("get redirect url: ");

        $r3 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-56, $r3);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final java.lang.String bw()
    {
        com.kingroot.sdk.dv r0;
        java.lang.String r1;

        r0 := @this: com.kingroot.sdk.dv;

        r1 = r0.<com.kingroot.sdk.dv: java.lang.String cS>;

        return r1;
    }

    public final void close()
    {
        java.net.HttpURLConnection $r1;
        java.lang.Throwable $r2;
        com.kingroot.sdk.dv r0;

        r0 := @this: com.kingroot.sdk.dv;

        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        if $r1 == null goto label4;

     label1:
        $r1 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

     label2:
        r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt> = null;

        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <com.kingroot.sdk.at: void a(java.lang.String,java.lang.Throwable)>("HttpConnection.close() throw e", $r2);

        goto label2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final long getContentLength()
    {
        com.kingroot.sdk.dv r0;
        java.lang.StringBuilder $r1, $r4;
        long $l0;
        java.lang.String $r2;
        com.kingroot.sdk.dw $r5;
        java.lang.Exception $r3;

        r0 := @this: com.kingroot.sdk.dv;

        $r2 = virtualinvoke r0.<com.kingroot.sdk.dv: java.lang.String getHeaderField(java.lang.String)>("content-length");

        if $r2 == null goto label4;

     label1:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        $r5 = new com.kingroot.sdk.dw;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("get content length: ");

        $r2 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-56, $r2);

        throw $r5;

     label4:
        return -1L;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final java.lang.String getContentType()
    {
        java.net.HttpURLConnection $r2;
        com.kingroot.sdk.dv r0;
        java.lang.StringBuilder $r1, $r5;
        java.lang.String $r3;
        com.kingroot.sdk.dw $r6;
        java.lang.Exception $r4;

        r0 := @this: com.kingroot.sdk.dv;

     label1:
        $r2 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Type");

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r6 = new com.kingroot.sdk.dw;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("get content type: ");

        $r3 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-56, $r3);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final java.lang.String getHeaderField(java.lang.String)
    {
        java.net.HttpURLConnection $r3;
        com.kingroot.sdk.dv r0;
        java.lang.StringBuilder $r2, $r5;
        java.lang.String $r1;
        com.kingroot.sdk.dw $r6;
        java.lang.Exception $r4;

        r0 := @this: com.kingroot.sdk.dv;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        $r1 = virtualinvoke $r3.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $r6 = new com.kingroot.sdk.dw;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("get header field: ");

        $r1 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-56, $r1);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final java.io.InputStream getInputStream()
    {
        java.net.HttpURLConnection $r2;
        java.lang.Exception $r4;
        com.kingroot.sdk.dv r0;
        java.lang.StringBuilder $r1, $r6;
        java.lang.String $r5;
        com.kingroot.sdk.dw $r7;
        java.io.InputStream $r3;

        r0 := @this: com.kingroot.sdk.dv;

     label1:
        $r2 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r7 = new com.kingroot.sdk.dw;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("get inputStream: ");

        $r5 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.kingroot.sdk.dw: void <init>(int,java.lang.String)>(-56, $r5);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final java.lang.String getRequestMethod()
    {
        com.kingroot.sdk.dv r0;
        java.lang.String r1;

        r0 := @this: com.kingroot.sdk.dv;

        r1 = r0.<com.kingroot.sdk.dv: java.lang.String gs>;

        return r1;
    }

    public final int getResponseCode()
    {
        int i0;
        com.kingroot.sdk.dv r0;

        r0 := @this: com.kingroot.sdk.dv;

        i0 = r0.<com.kingroot.sdk.dv: int gv>;

        return i0;
    }

    public final void k(byte[])
    {
        byte[] $r1;
        com.kingroot.sdk.dv r0;

        r0 := @this: com.kingroot.sdk.dv;

        $r1 := @parameter0: byte[];

        r0.<com.kingroot.sdk.dv: byte[] gu> = $r1;

        return;
    }

    public final void setRequestMethod(java.lang.String)
    {
        com.kingroot.sdk.dv r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.dv;

        $r1 := @parameter0: java.lang.String;

        r0.<com.kingroot.sdk.dv: java.lang.String gs> = $r1;

        $r2 = "GET";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        r0.<com.kingroot.sdk.dv: java.lang.String gs> = "GET";

        return;

     label1:
        $r2 = "POST";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        r0.<com.kingroot.sdk.dv: java.lang.String gs> = "POST";

     label2:
        return;
    }

    public final void setRequestProperty(java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r3;
        com.kingroot.sdk.dv r0;
        java.lang.String $r1, $r2;
        java.util.Hashtable $r4;

        r0 := @this: com.kingroot.sdk.dv;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label2;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        if $r3 == null goto label2;

        $r3 = r0.<com.kingroot.sdk.dv: java.net.HttpURLConnection gt>;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2);

        $r4 = r0.<com.kingroot.sdk.dv: java.util.Hashtable gw>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label2:
        return;
    }
}
