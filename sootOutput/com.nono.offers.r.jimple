final class com.nono.offers.r extends java.lang.Object implements java.util.Comparator
{
    final com.nono.offers.p a;

    void <init>(com.nono.offers.p)
    {
        com.nono.offers.p $r1;
        com.nono.offers.r r0;

        r0 := @this: com.nono.offers.r;

        $r1 := @parameter0: com.nono.offers.p;

        r0.<com.nono.offers.r: com.nono.offers.p a> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.nono.offers.ac $r3, $r4;
        com.nono.BaseInfo $r7, $r8;
        int $i0, $i1;
        java.lang.Object $r1, $r2;
        com.nono.offers.p $r5;
        java.util.Comparator $r6;
        com.nono.offers.r r0;

        r0 := @this: com.nono.offers.r;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (com.nono.offers.ac) $r1;

        $r4 = (com.nono.offers.ac) $r2;

        $i0 = $r3.<com.nono.offers.ac: int a>;

        if $i0 != 1 goto label1;

        $i0 = $r4.<com.nono.offers.ac: int a>;

        if $i0 != 1 goto label1;

        $r5 = r0.<com.nono.offers.r: com.nono.offers.p a>;

        $r6 = $r5.<com.nono.offers.p: java.util.Comparator d>;

        $r1 = $r3.<com.nono.offers.ac: java.lang.Object b>;

        $r7 = (com.nono.BaseInfo) $r1;

        $r1 = $r4.<com.nono.offers.ac: java.lang.Object b>;

        $r8 = (com.nono.BaseInfo) $r1;

        $i0 = interfaceinvoke $r6.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r7, $r8);

        return $i0;

     label1:
        $i0 = $r3.<com.nono.offers.ac: int a>;

        $i1 = $r4.<com.nono.offers.ac: int a>;

        if $i0 >= $i1 goto label2;

        $i0 = -1;

        return $i0;

     label2:
        if $i0 != $i1 goto label3;

        return 0;

     label3:
        return 1;
    }
}
