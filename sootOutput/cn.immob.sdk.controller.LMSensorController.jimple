public class cn.immob.sdk.controller.LMSensorController extends cn.immob.sdk.controller.LMController
{
    final int c;
    private y d;
    private float e;
    private float f;
    private float g;
    private int h;
    private int i;
    private int j;

    public void <init>(cn.immob.sdk.IMWebView, android.content.Context)
    {
        cn.immob.sdk.IMWebView $r1;
        android.content.Context $r2;
        y $r3;
        cn.immob.sdk.controller.LMSensorController r0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 := @parameter0: cn.immob.sdk.IMWebView;

        $r2 := @parameter1: android.content.Context;

        specialinvoke r0.<cn.immob.sdk.controller.LMController: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>($r1, $r2);

        r0.<cn.immob.sdk.controller.LMSensorController: int c> = 1000;

        r0.<cn.immob.sdk.controller.LMSensorController: float e> = 0.0F;

        r0.<cn.immob.sdk.controller.LMSensorController: float f> = 0.0F;

        r0.<cn.immob.sdk.controller.LMSensorController: float g> = 0.0F;

        r0.<cn.immob.sdk.controller.LMSensorController: int h> = 0;

        r0.<cn.immob.sdk.controller.LMSensorController: int i> = 0;

        r0.<cn.immob.sdk.controller.LMSensorController: int j> = 0;

        $r3 = new y;

        specialinvoke $r3.<y: void <init>(android.content.Context,cn.immob.sdk.controller.LMSensorController)>($r2, r0);

        r0.<cn.immob.sdk.controller.LMSensorController: y d> = $r3;

        return;
    }

    public float getHeading()
    {
        y $r2;
        float $f0;
        cn.immob.sdk.controller.LMSensorController r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("getHeading: ");

        $r2 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        $f0 = virtualinvoke $r2.<y: float j()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMSensorController", $r3);

        $r2 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        $f0 = virtualinvoke $r2.<y: float j()>();

        return $f0;
    }

    public int getOrientation()
    {
        int $i0;
        cn.immob.sdk.controller.LMSensorController r0;
        boolean $z0, $z1;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $z0 = 1;

        $i0 = r0.<cn.immob.sdk.controller.LMSensorController: int h>;

        if $i0 < 45 goto label9;

        $i0 = r0.<cn.immob.sdk.controller.LMSensorController: int h>;

        if $i0 < 315 goto label1;

        return 0;

     label1:
        $i0 = r0.<cn.immob.sdk.controller.LMSensorController: int h>;

        if $i0 < 45 goto label2;

        $i0 = r0.<cn.immob.sdk.controller.LMSensorController: int h>;

        if $i0 >= 135 goto label2;

        return 90;

     label2:
        $i0 = r0.<cn.immob.sdk.controller.LMSensorController: int h>;

        if $i0 < 135 goto label3;

        $i0 = r0.<cn.immob.sdk.controller.LMSensorController: int h>;

        if $i0 >= 225 goto label3;

        return 180;

     label3:
        $i0 = r0.<cn.immob.sdk.controller.LMSensorController: int h>;

        if $i0 < 225 goto label6;

        $z1 = 1;

     label4:
        $i0 = r0.<cn.immob.sdk.controller.LMSensorController: int h>;

        if $i0 >= 315 goto label7;

     label5:
        $z0 = $z1 & $z0;

        if $z0 == 0 goto label8;

        return 270;

     label6:
        $z1 = 0;

        goto label4;

     label7:
        $z0 = 0;

        goto label5;

     label8:
        return -1;

     label9:
        return 0;
    }

    public java.lang.String getShakeProperties()
    {
        int $i0;
        y $r2;
        cn.immob.sdk.controller.LMSensorController r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{\"intensity\":\"");

        $r2 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        $i0 = virtualinvoke $r2.<y: int k()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"interval\":\"");

        $r2 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        $i0 = virtualinvoke $r2.<y: int l()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"}");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getTilt()
    {
        float $f0;
        cn.immob.sdk.controller.LMSensorController r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{ x : \"");

        $f0 = r0.<cn.immob.sdk.controller.LMSensorController: float e>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", y : \"");

        $f0 = r0.<cn.immob.sdk.controller.LMSensorController: float f>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", z : \"");

        $f0 = r0.<cn.immob.sdk.controller.LMSensorController: float g>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public void onHeadingChange(float)
    {
        cn.immob.sdk.IMWebView $r3;
        int $i0;
        float $f0;
        cn.immob.sdk.controller.LMSensorController r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        double $d0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $f0 := @parameter0: float;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ heading: ");

        $d0 = (double) $f0;

        $d0 = $d0 * 57.29577951308232;

        $i0 = (int) $d0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("});");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<cn.immob.sdk.controller.LMSensorController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r3.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>($r2);

        return;
    }

    public void onShake()
    {
        cn.immob.sdk.IMWebView $r3;
        cn.immob.sdk.controller.LMSensorController r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("getShakeProperties: ");

        $r2 = virtualinvoke r0.<cn.immob.sdk.controller.LMSensorController: java.lang.String getShakeProperties()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMSensorController", $r2);

        $r3 = r0.<cn.immob.sdk.controller.LMSensorController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r3.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>("window.immobview.fireShakeEvent()");

        return;
    }

    public void onTilt(float, float, float)
    {
        cn.immob.sdk.IMWebView $r3;
        float $f0, $f1, $f2;
        cn.immob.sdk.controller.LMSensorController r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        r0.<cn.immob.sdk.controller.LMSensorController: float e> = $f0;

        r0.<cn.immob.sdk.controller.LMSensorController: float f> = $f1;

        r0.<cn.immob.sdk.controller.LMSensorController: float g> = $f2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ tilt: ");

        $r2 = virtualinvoke r0.<cn.immob.sdk.controller.LMSensorController: java.lang.String getTilt()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<cn.immob.sdk.controller.LMSensorController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r3.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>($r2);

        return;
    }

    public void orientationChange(int, int, int)
    {
        cn.immob.sdk.controller.LMSensorController r0;
        cn.immob.sdk.IMWebView $r3;
        short $s3;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 = 0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("x=");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("y=");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("z=");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMSensorController", $r2);

        $s3 = -1;

        if $i0 < 45 goto label1;

        if $i0 < 315 goto label3;

     label1:
        $s3 = 0;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ orientation: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<cn.immob.sdk.controller.LMSensorController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r3.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>($r2);

        return;

     label3:
        if $i0 < 45 goto label4;

        if $i0 >= 135 goto label4;

        $s3 = 90;

        goto label2;

     label4:
        if $i0 < 135 goto label5;

        if $i0 >= 225 goto label5;

        $s3 = 180;

        goto label2;

     label5:
        if $i0 < 225 goto label8;

        $z1 = 1;

     label6:
        if $i0 >= 315 goto label7;

        $z0 = 1;

     label7:
        $z0 = $z0 & $z1;

        if $z0 == 0 goto label2;

        $s3 = 270;

        goto label2;

     label8:
        $z1 = 0;

        goto label6;
    }

    public void setShakeProperties(java.lang.String)
    {
        org.json.JSONTokener $r3;
        cn.immob.sdk.controller.LMSensorController r0;
        org.json.JSONException $r6;
        org.json.JSONObject $r5;
        int $i0, $i1;
        y $r2;
        java.lang.Object $r4;
        java.lang.String $r1;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 := @parameter0: java.lang.String;

        $r3 = new org.json.JSONTokener;

     label1:
        specialinvoke $r3.<org.json.JSONTokener: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<org.json.JSONTokener: java.lang.Object nextValue()>();

     label2:
        $r5 = (org.json.JSONObject) $r4;

        $r2 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

     label3:
        $i0 = virtualinvoke $r5.<org.json.JSONObject: int getInt(java.lang.String)>("intensity");

        $i1 = virtualinvoke $r5.<org.json.JSONObject: int getInt(java.lang.String)>("interval");

        virtualinvoke $r2.<y: void b(int,int)>($i0, $i1);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        virtualinvoke $r6.<org.json.JSONException: void printStackTrace()>();

        return;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    public void startHeadingListener()
    {
        y $r1;
        cn.immob.sdk.controller.LMSensorController r0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        virtualinvoke $r1.<y: void b()>();

        return;
    }

    public void startOrientation()
    {
        y $r1;
        cn.immob.sdk.controller.LMSensorController r0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        virtualinvoke $r1.<y: void f()>();

        return;
    }

    public void startShakeListener()
    {
        y $r1;
        cn.immob.sdk.controller.LMSensorController r0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        virtualinvoke $r1.<y: void h()>();

        return;
    }

    public void startTiltListener()
    {
        y $r1;
        cn.immob.sdk.controller.LMSensorController r0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        virtualinvoke $r1.<y: void d()>();

        return;
    }

    public void stopAllListeners()
    {
        y $r1;
        cn.immob.sdk.controller.LMSensorController r0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        virtualinvoke $r1.<y: void m()>();

        return;
    }

    public void stopHeadingListener()
    {
        y $r1;
        cn.immob.sdk.controller.LMSensorController r0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        virtualinvoke $r1.<y: void c()>();

        return;
    }

    public void stopOrientation()
    {
        y $r1;
        cn.immob.sdk.controller.LMSensorController r0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        virtualinvoke $r1.<y: void g()>();

        return;
    }

    public void stopShakeListener()
    {
        y $r1;
        cn.immob.sdk.controller.LMSensorController r0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        virtualinvoke $r1.<y: void i()>();

        return;
    }

    public void stopTiltListener()
    {
        y $r1;
        cn.immob.sdk.controller.LMSensorController r0;

        r0 := @this: cn.immob.sdk.controller.LMSensorController;

        $r1 = r0.<cn.immob.sdk.controller.LMSensorController: y d>;

        virtualinvoke $r1.<y: void e()>();

        return;
    }
}
