class com.google.tagmanager.CtfeDebugInformationHandler extends java.lang.Object implements com.google.tagmanager.DebugInformationHandler
{
    static final java.lang.String CTFE_URL_PATH_PREFIX;
    static final int NUM_EVENTS_PER_SEND;
    private int currentDebugEventNumber;
    private com.google.tagmanager.NetworkClient mClient;
    private com.google.tagmanager.CtfeHost mCtfeHost;
    private com.google.analytics.containertag.proto.MutableDebug$DebugEvents mDebugEvents;

    public void <init>(com.google.tagmanager.CtfeHost)
    {
        com.google.tagmanager.NetworkClientFactory $r3;
        com.google.tagmanager.CtfeDebugInformationHandler r0;
        com.google.tagmanager.NetworkClient $r2;
        com.google.tagmanager.CtfeHost $r1;

        r0 := @this: com.google.tagmanager.CtfeDebugInformationHandler;

        $r1 := @parameter0: com.google.tagmanager.CtfeHost;

        $r3 = new com.google.tagmanager.NetworkClientFactory;

        specialinvoke $r3.<com.google.tagmanager.NetworkClientFactory: void <init>()>();

        $r2 = virtualinvoke $r3.<com.google.tagmanager.NetworkClientFactory: com.google.tagmanager.NetworkClient createNetworkClient()>();

        specialinvoke r0.<com.google.tagmanager.CtfeDebugInformationHandler: void <init>(com.google.tagmanager.NetworkClient,com.google.tagmanager.CtfeHost)>($r2, $r1);

        return;
    }

    void <init>(com.google.tagmanager.NetworkClient, com.google.tagmanager.CtfeHost)
    {
        com.google.tagmanager.CtfeDebugInformationHandler r0;
        com.google.tagmanager.NetworkClient $r1;
        com.google.analytics.containertag.proto.MutableDebug$DebugEvents $r3;
        com.google.tagmanager.CtfeHost $r2;

        r0 := @this: com.google.tagmanager.CtfeDebugInformationHandler;

        $r1 := @parameter0: com.google.tagmanager.NetworkClient;

        $r2 := @parameter1: com.google.tagmanager.CtfeHost;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.tagmanager.CtfeDebugInformationHandler: com.google.tagmanager.CtfeHost mCtfeHost> = $r2;

        r0.<com.google.tagmanager.CtfeDebugInformationHandler: com.google.tagmanager.NetworkClient mClient> = $r1;

        $r3 = staticinvoke <com.google.analytics.containertag.proto.MutableDebug$DebugEvents: com.google.analytics.containertag.proto.MutableDebug$DebugEvents newMessage()>();

        r0.<com.google.tagmanager.CtfeDebugInformationHandler: com.google.analytics.containertag.proto.MutableDebug$DebugEvents mDebugEvents> = $r3;

        return;
    }

    private byte[] getDebugEventsAsBytes()
    {
        byte[] $r1;
        com.google.analytics.containertag.proto.MutableDebug$DebugEvents $r2;
        com.google.tagmanager.CtfeDebugInformationHandler r0;

        r0 := @this: com.google.tagmanager.CtfeDebugInformationHandler;

        $r2 = r0.<com.google.tagmanager.CtfeDebugInformationHandler: com.google.analytics.containertag.proto.MutableDebug$DebugEvents mDebugEvents>;

        $r1 = virtualinvoke $r2.<com.google.analytics.containertag.proto.MutableDebug$DebugEvents: byte[] toByteArray()>();

        return $r1;
    }

    private boolean sendDebugInformationtoCtfe()
    {
        java.lang.Throwable $r5;
        byte[] $r4;
        com.google.tagmanager.CtfeDebugInformationHandler r0;
        java.io.IOException $r8;
        int $i0, $i1;
        com.google.tagmanager.NetworkClient $r1;
        com.google.tagmanager.CtfeHost $r2;
        java.lang.StringBuilder $r6, $r7;
        java.lang.String $r3;

        r0 := @this: com.google.tagmanager.CtfeDebugInformationHandler;

        $r1 = r0.<com.google.tagmanager.CtfeDebugInformationHandler: com.google.tagmanager.NetworkClient mClient>;

        $r2 = r0.<com.google.tagmanager.CtfeDebugInformationHandler: com.google.tagmanager.CtfeHost mCtfeHost>;

        $i1 = r0.<com.google.tagmanager.CtfeDebugInformationHandler: int currentDebugEventNumber>;

        $i0 = $i1 + 1;

        r0.<com.google.tagmanager.CtfeDebugInformationHandler: int currentDebugEventNumber> = $i0;

     label1:
        $r3 = virtualinvoke $r2.<com.google.tagmanager.CtfeHost: java.lang.String constructCtfeDebugUrl(int)>($i1);

        $r4 = specialinvoke r0.<com.google.tagmanager.CtfeDebugInformationHandler: byte[] getDebugEventsAsBytes()>();

        interfaceinvoke $r1.<com.google.tagmanager.NetworkClient: void sendPostRequest(java.lang.String,byte[])>($r3, $r4);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("CtfeDebugInformationHandler: Error sending information to server that handles debug information: ");

        $r8 = (java.io.IOException) $r5;

        $r3 = virtualinvoke $r8.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>($r3);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void receiveEventInfo(com.google.analytics.containertag.proto.MutableDebug$EventInfo)
    {
        java.lang.Throwable $r3;
        com.google.tagmanager.CtfeDebugInformationHandler r0;
        int $i0;
        com.google.analytics.containertag.proto.MutableDebug$DebugEvents $r2;
        com.google.analytics.containertag.proto.MutableDebug$EventInfo $r1;
        boolean $z0;

        r0 := @this: com.google.tagmanager.CtfeDebugInformationHandler;

        $r1 := @parameter0: com.google.analytics.containertag.proto.MutableDebug$EventInfo;

        entermonitor r0;

     label1:
        $r2 = r0.<com.google.tagmanager.CtfeDebugInformationHandler: com.google.analytics.containertag.proto.MutableDebug$DebugEvents mDebugEvents>;

        virtualinvoke $r2.<com.google.analytics.containertag.proto.MutableDebug$DebugEvents: com.google.analytics.containertag.proto.MutableDebug$DebugEvents addEvent(com.google.analytics.containertag.proto.MutableDebug$EventInfo)>($r1);

        $r2 = r0.<com.google.tagmanager.CtfeDebugInformationHandler: com.google.analytics.containertag.proto.MutableDebug$DebugEvents mDebugEvents>;

        $i0 = virtualinvoke $r2.<com.google.analytics.containertag.proto.MutableDebug$DebugEvents: int getEventCount()>();

        if $i0 <= 0 goto label2;

        $z0 = specialinvoke r0.<com.google.tagmanager.CtfeDebugInformationHandler: boolean sendDebugInformationtoCtfe()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.google.tagmanager.CtfeDebugInformationHandler: com.google.analytics.containertag.proto.MutableDebug$DebugEvents mDebugEvents>;

        $r2 = virtualinvoke $r2.<com.google.analytics.containertag.proto.MutableDebug$DebugEvents: com.google.analytics.containertag.proto.MutableDebug$DebugEvents clear()>();

        r0.<com.google.tagmanager.CtfeDebugInformationHandler: com.google.analytics.containertag.proto.MutableDebug$DebugEvents mDebugEvents> = $r2;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.google.tagmanager.CtfeDebugInformationHandler: int NUM_EVENTS_PER_SEND> = 1;

        <com.google.tagmanager.CtfeDebugInformationHandler: java.lang.String CTFE_URL_PATH_PREFIX> = "/d?";

        return;
    }
}
