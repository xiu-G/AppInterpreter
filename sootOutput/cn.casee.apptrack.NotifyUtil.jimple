public class cn.casee.apptrack.NotifyUtil extends java.lang.Object
{
    android.content.Context a;
    android.content.res.AssetManager b;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.content.res.AssetManager $r2;
        cn.casee.apptrack.NotifyUtil r0;

        r0 := @this: cn.casee.apptrack.NotifyUtil;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cn.casee.apptrack.NotifyUtil: android.content.Context a> = $r1;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        r0.<cn.casee.apptrack.NotifyUtil: android.content.res.AssetManager b> = $r2;

        return;
    }

    private static java.net.HttpURLConnection a(java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r4;
        java.io.OutputStream $r5;
        java.lang.Throwable $r8;
        java.net.URL $r2;
        java.io.BufferedWriter $r6;
        java.net.URLConnection $r3;
        java.io.OutputStreamWriter $r7;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.net.URL;

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        $r4 = (java.net.HttpURLConnection) $r3;

        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", "Android-CASEE-PTSDK");

        virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000);

        virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>(5000);

        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r5 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r6 = new java.io.BufferedWriter;

        $r7 = new java.io.OutputStreamWriter;

        specialinvoke $r7.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r5);

        specialinvoke $r6.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r7);

     label1:
        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>($r1);

     label2:
        virtualinvoke $r6.<java.io.Writer: void close()>();

        return $r4;

     label3:
        $r8 := @caughtexception;

        virtualinvoke $r6.<java.io.Writer: void close()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private java.io.File c(java.lang.String)
    {
        android.content.Context $r3;
        cn.casee.apptrack.NotifyUtil r0;
        java.lang.String $r1;
        java.io.File $r2, $r4;

        r0 := @this: cn.casee.apptrack.NotifyUtil;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<cn.casee.apptrack.NotifyUtil: android.content.Context a>;

        $r2 = virtualinvoke $r3.<android.content.Context: java.io.File getDir(java.lang.String,int)>("casee", 0);

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "pt.log");

        return $r4;
    }

    private static long d(java.lang.String)
    {
        byte[] $r2;
        java.util.zip.CheckedInputStream $r1;
        long $l0;
        java.lang.Exception $r6;
        java.util.zip.Checksum $r5;
        java.io.ByteArrayInputStream $r3;
        java.util.zip.Adler32 $r4;
        int $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

     label01:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

     label02:
        $r3 = new java.io.ByteArrayInputStream;

     label03:
        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

     label04:
        $r1 = new java.util.zip.CheckedInputStream;

        $r4 = new java.util.zip.Adler32;

     label05:
        specialinvoke $r4.<java.util.zip.Adler32: void <init>()>();

        specialinvoke $r1.<java.util.zip.CheckedInputStream: void <init>(java.io.InputStream,java.util.zip.Checksum)>($r3, $r4);

     label06:
        $r2 = newarray (byte)[128];

        $l0 = 0L;

     label07:
        $i1 = virtualinvoke $r1.<java.util.zip.CheckedInputStream: int read(byte[])>($r2);

     label08:
        if $i1 >= 0 goto label09;

        return $l0;

     label09:
        $r5 = virtualinvoke $r1.<java.util.zip.CheckedInputStream: java.util.zip.Checksum getChecksum()>();

        $l0 = interfaceinvoke $r5.<java.util.zip.Checksum: long getValue()>();

     label10:
        goto label07;

     label11:
        $r6 := @caughtexception;

        $r0 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CASEE-TA", $r0);

        return 0L;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public java.util.Properties a(java.lang.String)
    {
        java.lang.Throwable $r5, $r6;
        java.util.Properties $r2;
        java.io.FileInputStream $r4;
        java.io.File $r3;
        cn.casee.apptrack.NotifyUtil r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: cn.casee.apptrack.NotifyUtil;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        $r3 = specialinvoke r0.<cn.casee.apptrack.NotifyUtil: java.io.File c(java.lang.String)>("pt.log");

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label02:
        if $z0 != 0 goto label04;

     label03:
        exitmonitor r0;

        return $r2;

     label04:
        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label05:
        virtualinvoke $r2.<java.util.Properties: void load(java.io.InputStream)>($r4);

     label06:
        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

     label07:
        goto label03;

     label08:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

     label09:
        $r6 := @caughtexception;

     label10:
        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

        throw $r6;

     label11:
        nop;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    public void a(java.lang.String, java.util.Properties)
    {
        java.lang.Throwable $r5, $r6;
        java.util.Properties $r2;
        cn.casee.apptrack.NotifyUtil r0;
        java.io.FileOutputStream $r3;
        java.lang.String $r1;
        java.io.File $r4;

        r0 := @this: cn.casee.apptrack.NotifyUtil;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Properties;

        entermonitor r0;

     label1:
        $r4 = specialinvoke r0.<cn.casee.apptrack.NotifyUtil: java.io.File c(java.lang.String)>("pt.log");

        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

     label2:
        virtualinvoke $r2.<java.util.Properties: void save(java.io.OutputStream,java.lang.String)>($r3, null);

     label3:
        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

     label4:
        exitmonitor r0;

        return;

     label5:
        $r5 := @caughtexception;

     label6:
        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

        throw $r5;

     label7:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public boolean a(java.lang.String, java.util.Map)
    {
        java.net.HttpURLConnection $r8, $r9;
        java.lang.Throwable $r12, $r13, $r14, $r15, $r16;
        long $l0;
        cn.casee.apptrack.NotifyUtil r0;
        java.lang.StringBuffer $r5;
        java.util.Map $r2;
        java.lang.String $r1, $r6, $r11;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.StringBuilder $r7;
        java.lang.Object $r10;

        r0 := @this: cn.casee.apptrack.NotifyUtil;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $z0 = 1;

     label01:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label08;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $l0 = staticinvoke <cn.casee.apptrack.NotifyUtil: long d(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("http://wap.casee.cn/mo/fee.jsp");

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?cs=");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = null;

     label02:
        $r9 = staticinvoke <cn.casee.apptrack.NotifyUtil: java.net.HttpURLConnection a(java.lang.String,java.lang.String)>($r1, $r6);

     label03:
        $r8 = $r9;

     label04:
        virtualinvoke $r9.<java.net.HttpURLConnection: int getResponseCode()>();

     label05:
        if $r9 == null goto label23;

     label06:
        virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>();

     label07:
        return 1;

     label08:
        $r10 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r10;

        $r10 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r11 = (java.lang.String) $r10;

        if $r11 == null goto label01;

        $r11 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r11);

        if $z0 == 0 goto label10;

        $z0 = 0;

     label09:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label01;

     label10:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        goto label09;

     label11:
        $r12 := @caughtexception;

     label12:
        $r1 = virtualinvoke $r12.<java.lang.Throwable: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CASEE-TA", $r1, $r12);

     label13:
        if $r8 == null goto label22;

     label14:
        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

     label15:
        return 0;

     label16:
        $r13 := @caughtexception;

        return 0;

     label17:
        $r14 := @caughtexception;

        if $r8 == null goto label19;

     label18:
        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

     label19:
        throw $r14;

     label20:
        $r15 := @caughtexception;

        goto label19;

     label21:
        $r16 := @caughtexception;

        return 1;

     label22:
        return 0;

     label23:
        return 1;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    public java.util.Properties b(java.lang.String)
    {
        java.lang.Throwable $r6;
        android.content.Context $r2;
        java.util.Properties $r5;
        android.content.res.AssetManager $r3;
        cn.casee.apptrack.NotifyUtil r0;
        java.lang.String $r1;
        java.io.InputStream $r4;

        r0 := @this: cn.casee.apptrack.NotifyUtil;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.casee.apptrack.NotifyUtil: android.content.Context a>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r4 = virtualinvoke $r3.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("casee_pt.txt");

        $r5 = new java.util.Properties;

        specialinvoke $r5.<java.util.Properties: void <init>()>();

     label1:
        virtualinvoke $r5.<java.util.Properties: void load(java.io.InputStream)>($r4);

     label2:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        return $r5;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
