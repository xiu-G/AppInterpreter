public class com.cp.plugin.apk.update.util.NetworkManager extends java.lang.Object
{
    static final java.lang.String TAG;
    private int connectTimeout;
    android.content.Context mContext;
    java.net.Proxy mProxy;
    private int readTimeout;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.cp.plugin.apk.update.util.NetworkManager r0;

        r0 := @this: com.cp.plugin.apk.update.util.NetworkManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.cp.plugin.apk.update.util.NetworkManager: int connectTimeout> = 30000;

        r0.<com.cp.plugin.apk.update.util.NetworkManager: int readTimeout> = 30000;

        r0.<com.cp.plugin.apk.update.util.NetworkManager: java.net.Proxy mProxy> = null;

        r0.<com.cp.plugin.apk.update.util.NetworkManager: android.content.Context mContext> = $r1;

        specialinvoke r0.<com.cp.plugin.apk.update.util.NetworkManager: void setDefaultHostnameVerifier()>();

        return;
    }

    private void detectProxy()
    {
        android.net.ConnectivityManager $r4;
        android.content.Context $r2;
        android.net.NetworkInfo $r5;
        java.net.InetSocketAddress $r1;
        com.cp.plugin.apk.update.util.NetworkManager r0;
        java.net.Proxy$Type $r8;
        java.net.Proxy $r7;
        int $i0;
        java.lang.Object $r3;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.cp.plugin.apk.update.util.NetworkManager;

        $r2 = r0.<com.cp.plugin.apk.update.util.NetworkManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r4 = (android.net.ConnectivityManager) $r3;

        $r5 = virtualinvoke $r4.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r5 == null goto label1;

        $z0 = virtualinvoke $r5.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r5.<android.net.NetworkInfo: int getType()>();

        if $i0 != 0 goto label1;

        $r6 = staticinvoke <android.net.Proxy: java.lang.String getDefaultHost()>();

        $i0 = staticinvoke <android.net.Proxy: int getDefaultPort()>();

        if $r6 == null goto label1;

        $r1 = new java.net.InetSocketAddress;

        specialinvoke $r1.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r6, $i0);

        $r7 = new java.net.Proxy;

        $r8 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        specialinvoke $r7.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r8, $r1);

        r0.<com.cp.plugin.apk.update.util.NetworkManager: java.net.Proxy mProxy> = $r7;

     label1:
        return;
    }

    private void setDefaultHostnameVerifier()
    {
        com.cp.plugin.apk.update.util.NetworkManager r0;
        com.cp.plugin.apk.update.util.NetworkManager$1 $r1;

        r0 := @this: com.cp.plugin.apk.update.util.NetworkManager;

        $r1 = new com.cp.plugin.apk.update.util.NetworkManager$1;

        specialinvoke $r1.<com.cp.plugin.apk.update.util.NetworkManager$1: void <init>(com.cp.plugin.apk.update.util.NetworkManager)>(r0);

        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r1);

        return;
    }

    public java.lang.String SendAndWaitResponse(java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r8;
        java.lang.Throwable $r12, $r13, $r14, $r15;
        byte[] $r9;
        java.net.URL $r5, $r17;
        java.net.Proxy $r6;
        java.net.URLConnection $r7;
        int $i0;
        java.lang.String $r1, $r2, $r4;
        java.io.OutputStream $r10;
        java.io.IOException $r18;
        com.cp.plugin.apk.update.util.NetworkManager r0;
        java.lang.StringBuilder $r3, $r16;
        java.io.InputStream $r11;

        r0 := @this: com.cp.plugin.apk.update.util.NetworkManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("request ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://payment.umpay.com/hfwebbusi/pay/wxVersionUpdate.do");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.cp.plugin.apk.update.util.BaseHelper: void log(java.lang.String,java.lang.String)>("NetworkManager", $r4);

        specialinvoke r0.<com.cp.plugin.apk.update.util.NetworkManager: void detectProxy()>();

     label01:
        $r17 = new java.net.URL;

     label02:
        $r5 = $r17;

     label03:
        specialinvoke $r17.<java.net.URL: void <init>(java.lang.String)>("http://payment.umpay.com/hfwebbusi/pay/wxVersionUpdate.do");

     label04:
        $r6 = r0.<com.cp.plugin.apk.update.util.NetworkManager: java.net.Proxy mProxy>;

     label05:
        if $r6 == null goto label20;

     label06:
        $r6 = r0.<com.cp.plugin.apk.update.util.NetworkManager: java.net.Proxy mProxy>;

     label07:
        $r7 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r6);

     label08:
        $r8 = (java.net.HttpURLConnection) $r7;

     label09:
        $i0 = r0.<com.cp.plugin.apk.update.util.NetworkManager: int connectTimeout>;

     label10:
        virtualinvoke $r8.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        virtualinvoke $r8.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r9 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label11:
        $i0 = lengthof $r9;

     label12:
        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r8.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Length", $r2);

        virtualinvoke $r8.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/octet-stream");

     label13:
        $i0 = r0.<com.cp.plugin.apk.update.util.NetworkManager: int readTimeout>;

     label14:
        virtualinvoke $r8.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r8.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r8.<java.net.HttpURLConnection: void connect()>();

        $r10 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r9 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r9);

        virtualinvoke $r10.<java.io.OutputStream: void flush()>();

        $r11 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r1 = staticinvoke <com.cp.plugin.apk.update.util.BaseHelper: java.lang.String convertStreamToString(java.io.InputStream)>($r11);

     label15:
        $r2 = $r1;

     label16:
        $r16 = new java.lang.StringBuilder;

     label17:
        $r3 = $r16;

     label18:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("response ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.cp.plugin.apk.update.util.BaseHelper: void log(java.lang.String,java.lang.String)>("NetworkManager", $r4);

     label19:
        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

        return $r1;

     label20:
        $r7 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

     label21:
        $r8 = (java.net.HttpURLConnection) $r7;

     label22:
        goto label09;

     label23:
        $r12 := @caughtexception;

        $r8 = null;

        $r2 = null;

        $r13 = $r12;

     label24:
        $r18 = (java.io.IOException) $r13;

        virtualinvoke $r18.<java.io.IOException: void printStackTrace()>();

     label25:
        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

        return $r2;

     label26:
        $r14 := @caughtexception;

        $r8 = null;

     label27:
        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

        throw $r14;

     label28:
        $r14 := @caughtexception;

        goto label27;

     label29:
        $r15 := @caughtexception;

        $r2 = null;

        $r13 = $r15;

        goto label24;

     label30:
        $r13 := @caughtexception;

        goto label24;

        catch java.io.IOException from label03 to label04 with label23;
        catch java.io.IOException from label07 to label08 with label23;
        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label05 with label26;
        catch java.lang.Throwable from label06 to label09 with label26;
        catch java.io.IOException from label10 to label11 with label29;
        catch java.io.IOException from label12 to label13 with label29;
        catch java.io.IOException from label14 to label15 with label29;
        catch java.lang.Throwable from label09 to label15 with label28;
        catch java.io.IOException from label18 to label19 with label30;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.io.IOException from label20 to label21 with label23;
        catch java.lang.Throwable from label20 to label22 with label26;
        catch java.lang.Throwable from label24 to label25 with label28;
    }

    public boolean urlDownloadToFile(android.content.Context, java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r8;
        java.lang.Throwable $r12;
        android.content.Context $r1;
        byte[] $r11;
        java.net.URL $r5, $r13;
        java.net.Proxy $r6;
        java.net.URLConnection $r7;
        int $i0;
        java.lang.String $r2, $r3;
        java.io.FileOutputStream $r4, $r15;
        java.io.IOException $r16;
        java.io.File $r10, $r14;
        com.cp.plugin.apk.update.util.NetworkManager r0;
        java.io.InputStream $r9;

        r0 := @this: com.cp.plugin.apk.update.util.NetworkManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.cp.plugin.apk.update.util.NetworkManager: void detectProxy()>();

        $r13 = new java.net.URL;

        $r5 = $r13;

     label01:
        specialinvoke $r13.<java.net.URL: void <init>(java.lang.String)>($r2);

     label02:
        $r6 = r0.<com.cp.plugin.apk.update.util.NetworkManager: java.net.Proxy mProxy>;

        if $r6 == null goto label19;

        $r6 = r0.<com.cp.plugin.apk.update.util.NetworkManager: java.net.Proxy mProxy>;

     label03:
        $r7 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r6);

     label04:
        $r8 = (java.net.HttpURLConnection) $r7;

     label05:
        $i0 = r0.<com.cp.plugin.apk.update.util.NetworkManager: int connectTimeout>;

     label06:
        virtualinvoke $r8.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

     label07:
        $i0 = r0.<com.cp.plugin.apk.update.util.NetworkManager: int readTimeout>;

     label08:
        virtualinvoke $r8.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        virtualinvoke $r8.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r8.<java.net.HttpURLConnection: void connect()>();

        $r9 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label09:
        $r14 = new java.io.File;

        $r10 = $r14;

     label10:
        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r3);

        virtualinvoke $r10.<java.io.File: boolean createNewFile()>();

     label11:
        $r15 = new java.io.FileOutputStream;

        $r4 = $r15;

     label12:
        specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.io.File)>($r10);

     label13:
        $r11 = newarray (byte)[1024];

     label14:
        $i0 = virtualinvoke $r9.<java.io.InputStream: int read(byte[])>($r11);

     label15:
        if $i0 <= 0 goto label21;

     label16:
        virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[],int,int)>($r11, 0, $i0);

     label17:
        goto label14;

     label18:
        $r12 := @caughtexception;

        $r16 = (java.io.IOException) $r12;

        virtualinvoke $r16.<java.io.IOException: void printStackTrace()>();

        return 0;

     label19:
        $r7 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

     label20:
        $r8 = (java.net.HttpURLConnection) $r7;

        goto label05;

     label21:
        virtualinvoke $r4.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r9.<java.io.InputStream: void close()>();

     label22:
        return 1;

        catch java.io.IOException from label01 to label02 with label18;
        catch java.io.IOException from label03 to label04 with label18;
        catch java.io.IOException from label06 to label07 with label18;
        catch java.io.IOException from label08 to label09 with label18;
        catch java.io.IOException from label10 to label11 with label18;
        catch java.io.IOException from label12 to label13 with label18;
        catch java.io.IOException from label14 to label15 with label18;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.io.IOException from label19 to label20 with label18;
        catch java.io.IOException from label21 to label22 with label18;
    }

    public static void <clinit>()
    {
        <com.cp.plugin.apk.update.util.NetworkManager: java.lang.String TAG> = "NetworkManager";

        return;
    }
}
