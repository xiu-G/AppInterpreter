public class com.rsm.insurance.irl.remote.FixedMyLocationOverlay extends com.google.android.maps.MyLocationOverlay
{
    private android.graphics.Paint accuracyPaint;
    private boolean bugged;
    private android.graphics.Point center;
    private android.graphics.drawable.Drawable drawable;
    private int height;
    private android.graphics.Point left;
    private int width;

    public void <init>(android.content.Context, com.google.android.maps.MapView)
    {
        android.content.Context $r1;
        com.rsm.insurance.irl.remote.FixedMyLocationOverlay r0;
        com.google.android.maps.MapView $r2;

        r0 := @this: com.rsm.insurance.irl.remote.FixedMyLocationOverlay;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.google.android.maps.MapView;

        specialinvoke r0.<com.google.android.maps.MyLocationOverlay: void <init>(android.content.Context,com.google.android.maps.MapView)>($r1, $r2);

        r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: boolean bugged> = 0;

        return;
    }

    protected void drawMyLocation(android.graphics.Canvas, com.google.android.maps.MapView, android.location.Location, com.google.android.maps.GeoPoint, long)
    {
        android.content.Context $r9;
        com.rsm.insurance.irl.remote.FixedMyLocationOverlay r0;
        long $l0;
        float[] r13;
        android.graphics.drawable.Drawable $r7;
        android.graphics.Paint$Style $r14;
        int i1, $i2, $i3, $i4, $i5;
        android.graphics.Canvas $r1;
        com.google.android.maps.GeoPoint $r4, r6;
        boolean $z0;
        double $d0, $d1, $d2;
        android.graphics.Point $r11;
        com.google.android.maps.MapView $r2;
        java.lang.Exception r5;
        float f0, $f1, $f2;
        android.graphics.Paint $r8;
        android.location.Location $r3;
        com.google.android.maps.Projection $r12;
        android.content.res.Resources $r10;

        r0 := @this: com.rsm.insurance.irl.remote.FixedMyLocationOverlay;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.google.android.maps.MapView;

        $r3 := @parameter2: android.location.Location;

        $r4 := @parameter3: com.google.android.maps.GeoPoint;

        $l0 := @parameter4: long;

        $z0 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: boolean bugged>;

        if $z0 != 0 goto label2;

     label1:
        specialinvoke r0.<com.google.android.maps.MyLocationOverlay: void drawMyLocation(android.graphics.Canvas,com.google.android.maps.MapView,android.location.Location,com.google.android.maps.GeoPoint,long)>($r1, $r2, $r3, $r4, $l0);

     label2:
        $z0 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: boolean bugged>;

        if $z0 == 0 goto label5;

        $r7 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.drawable.Drawable drawable>;

        if $r7 != null goto label3;

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Paint accuracyPaint> = $r8;

        $r8 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Paint accuracyPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r8 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Paint accuracyPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r9 = virtualinvoke $r2.<com.google.android.maps.MapView: android.content.Context getContext()>();

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r10.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837642);

        r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.drawable.Drawable drawable> = $r7;

        $r7 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.drawable.Drawable drawable>;

        i1 = virtualinvoke $r7.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: int width> = i1;

        $r7 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.drawable.Drawable drawable>;

        i1 = virtualinvoke $r7.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: int height> = i1;

        $r11 = new android.graphics.Point;

        specialinvoke $r11.<android.graphics.Point: void <init>()>();

        r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center> = $r11;

        $r11 = new android.graphics.Point;

        specialinvoke $r11.<android.graphics.Point: void <init>()>();

        r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point left> = $r11;

     label3:
        $r12 = virtualinvoke $r2.<com.google.android.maps.MapView: com.google.android.maps.Projection getProjection()>();

        $d0 = virtualinvoke $r3.<android.location.Location: double getLatitude()>();

        $d1 = virtualinvoke $r3.<android.location.Location: double getLongitude()>();

        $f1 = virtualinvoke $r3.<android.location.Location: float getAccuracy()>();

        r13 = newarray (float)[1];

        $d2 = $d1 + 1.0;

        staticinvoke <android.location.Location: void distanceBetween(double,double,double,double,float[])>($d0, $d1, $d0, $d2, r13);

        f0 = r13[0];

        r6 = new com.google.android.maps.GeoPoint;

        $d0 = 1000000.0 * $d0;

        i1 = (int) $d0;

        f0 = $f1 / f0;

        $d0 = (double) f0;

        $d1 = $d1 - $d0;

        $d1 = $d1 * 1000000.0;

        $i2 = (int) $d1;

        specialinvoke r6.<com.google.android.maps.GeoPoint: void <init>(int,int)>(i1, $i2);

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point left>;

        interfaceinvoke $r12.<com.google.android.maps.Projection: android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point)>(r6, $r11);

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center>;

        interfaceinvoke $r12.<com.google.android.maps.Projection: android.graphics.Point toPixels(com.google.android.maps.GeoPoint,android.graphics.Point)>($r4, $r11);

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center>;

        i1 = $r11.<android.graphics.Point: int x>;

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point left>;

        $i2 = $r11.<android.graphics.Point: int x>;

        i1 = i1 - $i2;

        $r8 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Paint accuracyPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>(-10066177);

        $r8 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Paint accuracyPaint>;

        $r14 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r8.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r14);

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center>;

        $i2 = $r11.<android.graphics.Point: int x>;

        f0 = (float) $i2;

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center>;

        $i2 = $r11.<android.graphics.Point: int y>;

        $f1 = (float) $i2;

        $f2 = (float) i1;

        $r8 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Paint accuracyPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f0, $f1, $f2, $r8);

        $r8 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Paint accuracyPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>(409364223);

        $r8 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Paint accuracyPaint>;

        $r14 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r8.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r14);

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center>;

        $i2 = $r11.<android.graphics.Point: int x>;

        f0 = (float) $i2;

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center>;

        $i2 = $r11.<android.graphics.Point: int y>;

        $f1 = (float) $i2;

        $f2 = (float) i1;

        $r8 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Paint accuracyPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f0, $f1, $f2, $r8);

        $r7 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.drawable.Drawable drawable>;

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center>;

        i1 = $r11.<android.graphics.Point: int x>;

        $i2 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: int width>;

        $i2 = $i2 / 2;

        i1 = i1 - $i2;

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center>;

        $i2 = $r11.<android.graphics.Point: int y>;

        $i3 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: int height>;

        $i3 = $i3 / 2;

        $i2 = $i2 - $i3;

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center>;

        $i3 = $r11.<android.graphics.Point: int x>;

        $i4 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: int width>;

        $i4 = $i4 / 2;

        $i3 = $i3 + $i4;

        $r11 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.Point center>;

        $i4 = $r11.<android.graphics.Point: int y>;

        $i5 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: int height>;

        $i5 = $i5 / 2;

        $i4 = $i4 + $i5;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i1, $i2, $i3, $i4);

        $r7 = r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: android.graphics.drawable.Drawable drawable>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;

     label4:
        r5 := @caughtexception;

        r0.<com.rsm.insurance.irl.remote.FixedMyLocationOverlay: boolean bugged> = 1;

        goto label2;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label4;
    }
}
