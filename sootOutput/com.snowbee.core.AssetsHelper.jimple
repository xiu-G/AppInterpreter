public class com.snowbee.core.AssetsHelper extends java.lang.Object
{

    public void <init>()
    {
        com.snowbee.core.AssetsHelper r0;

        r0 := @this: com.snowbee.core.AssetsHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getAbout(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.snowbee.core.AssetsHelper: java.lang.String getResourceText(android.content.Context,java.lang.String)>($r0, "about.txt");

        return $r1;
    }

    public static java.lang.String getLicenses(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.snowbee.core.AssetsHelper: java.lang.String getResourceText(android.content.Context,java.lang.String)>($r0, "licenses.txt");

        return $r1;
    }

    public static java.lang.String getNotice(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.snowbee.core.AssetsHelper: java.lang.String getResourceText(android.content.Context,java.lang.String)>($r0, "notice.txt");

        return $r1;
    }

    public static java.lang.String getProDetail(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.snowbee.core.AssetsHelper: java.lang.String getResourceText(android.content.Context,java.lang.String)>($r0, "pro.txt");

        return $r1;
    }

    private static java.lang.String getResourceText(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r8;
        android.content.Context $r0;
        java.io.IOException $r12;
        java.io.InputStreamReader r3, $r9;
        android.content.res.AssetManager $r5;
        int $i0;
        java.lang.StringBuilder $r7, $r11;
        java.lang.String $r1, r4;
        java.io.BufferedReader r2, $r10;
        java.io.InputStream $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r4 = "";

     label01:
        $r5 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label02:
        $r9 = new java.io.InputStreamReader;

        r3 = $r9;

     label03:
        $r6 = virtualinvoke $r5.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r6, "UTF-8");

     label04:
        $r10 = new java.io.BufferedReader;

        r2 = $r10;

     label05:
        specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>(r3);

     label06:
        $i0 = virtualinvoke r2.<java.io.BufferedReader: int read()>();

     label07:
        if $i0 != -1 goto label10;

     label08:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label09:
        return r4;

     label10:
        $r11 = new java.lang.StringBuilder;

        $r7 = $r11;

     label11:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r1 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        r4 = $r1;

        goto label06;

     label13:
        $r8 := @caughtexception;

        $r12 = (java.io.IOException) $r8;

        virtualinvoke $r12.<java.io.IOException: void printStackTrace()>();

        return r4;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label05 to label07 with label13;
        catch java.io.IOException from label08 to label09 with label13;
        catch java.io.IOException from label11 to label12 with label13;
    }
}
