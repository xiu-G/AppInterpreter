public abstract class com.google.tagmanager.protobuf.ByteString extends java.lang.Object implements java.lang.Iterable
{
    static final boolean $assertionsDisabled;
    static final int CONCATENATE_BY_COPY_SIZE;
    public static final com.google.tagmanager.protobuf.ByteString EMPTY;
    static final int MAX_READ_FROM_CHUNK_SIZE;
    static final int MIN_READ_FROM_CHUNK_SIZE;

    static void <clinit>()
    {
        byte[] $r2;
        com.google.tagmanager.protobuf.LiteralByteString $r1;
        java.lang.Class $r0;
        boolean $z0;

        <com.google.tagmanager.protobuf.ByteString: int MIN_READ_FROM_CHUNK_SIZE> = 256;

        <com.google.tagmanager.protobuf.ByteString: int MAX_READ_FROM_CHUNK_SIZE> = 8192;

        <com.google.tagmanager.protobuf.ByteString: int CONCATENATE_BY_COPY_SIZE> = 128;

        <com.google.tagmanager.protobuf.ByteString: boolean $assertionsDisabled> = 0;

        $r0 = class "Lcom/google/tagmanager/protobuf/ByteString;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.google.tagmanager.protobuf.ByteString: boolean $assertionsDisabled> = $z0;

        $r1 = new com.google.tagmanager.protobuf.LiteralByteString;

        $r2 = newarray (byte)[0];

        specialinvoke $r1.<com.google.tagmanager.protobuf.LiteralByteString: void <init>(byte[])>($r2);

        <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString EMPTY> = $r1;

        return;

     label2:
        $z0 = 0;

        goto label1;

        return;
    }

    void <init>()
    {
        com.google.tagmanager.protobuf.ByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static com.google.tagmanager.protobuf.ByteString balancedConcat(java.util.Iterator, int)
    {
        com.google.tagmanager.protobuf.ByteString $r3, $r4;
        java.util.Iterator $r0;
        java.lang.AssertionError $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Iterator;

        $i0 := @parameter1: int;

        $z0 = <com.google.tagmanager.protobuf.ByteString: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $i0 > 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        if $i0 != 1 goto label2;

        $r2 = interfaceinvoke $r0.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.google.tagmanager.protobuf.ByteString) $r2;

        return $r3;

     label2:
        $i1 = $i0 >>> 1;

        $r3 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString balancedConcat(java.util.Iterator,int)>($r0, $i1);

        $i0 = $i0 - $i1;

        $r4 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString balancedConcat(java.util.Iterator,int)>($r0, $i0);

        $r3 = virtualinvoke $r3.<com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString concat(com.google.tagmanager.protobuf.ByteString)>($r4);

        return $r3;
    }

    public static com.google.tagmanager.protobuf.ByteString copyFrom(java.lang.Iterable)
    {
        com.google.tagmanager.protobuf.ByteString $r4;
        java.util.Iterator $r2;
        java.util.Collection $r6;
        java.lang.Iterable $r0;
        java.util.ArrayList $r1, $r5;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Iterable;

        $z0 = $r0 instanceof java.util.Collection;

        if $z0 != 0 goto label4;

        $r5 = new java.util.ArrayList;

        $r1 = $r5;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.tagmanager.protobuf.ByteString) $r3;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        $r3 = $r1;

     label3:
        $r6 = (java.util.Collection) $r3;

        $z0 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label5;

        $r4 = <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString EMPTY>;

        return $r4;

     label4:
        $r3 = (java.util.Collection) $r0;

        goto label3;

     label5:
        $r6 = (java.util.Collection) $r3;

        $r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

        $r6 = (java.util.Collection) $r3;

        $i0 = interfaceinvoke $r6.<java.util.Collection: int size()>();

        $r4 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString balancedConcat(java.util.Iterator,int)>($r2, $i0);

        return $r4;
    }

    public static com.google.tagmanager.protobuf.ByteString copyFrom(java.lang.String, java.lang.String)
    {
        byte[] $r3;
        com.google.tagmanager.protobuf.LiteralByteString $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new com.google.tagmanager.protobuf.LiteralByteString;

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r1);

        specialinvoke $r2.<com.google.tagmanager.protobuf.LiteralByteString: void <init>(byte[])>($r3);

        return $r2;
    }

    public static com.google.tagmanager.protobuf.ByteString copyFrom(java.nio.ByteBuffer)
    {
        int $i0;
        com.google.tagmanager.protobuf.ByteString $r1;
        java.nio.ByteBuffer $r0;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke $r0.<java.nio.ByteBuffer: int remaining()>();

        $r1 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString copyFrom(java.nio.ByteBuffer,int)>($r0, $i0);

        return $r1;
    }

    public static com.google.tagmanager.protobuf.ByteString copyFrom(java.nio.ByteBuffer, int)
    {
        byte[] $r1;
        int $i0;
        com.google.tagmanager.protobuf.LiteralByteString $r2;
        java.nio.ByteBuffer $r0;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $i0 := @parameter1: int;

        $r1 = newarray (byte)[$i0];

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r1);

        $r2 = new com.google.tagmanager.protobuf.LiteralByteString;

        specialinvoke $r2.<com.google.tagmanager.protobuf.LiteralByteString: void <init>(byte[])>($r1);

        return $r2;
    }

    public static com.google.tagmanager.protobuf.ByteString copyFrom(byte[])
    {
        int $i0;
        com.google.tagmanager.protobuf.ByteString $r1;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString copyFrom(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static com.google.tagmanager.protobuf.ByteString copyFrom(byte[], int, int)
    {
        byte[] $r0, $r1;
        int $i0, $i1;
        com.google.tagmanager.protobuf.LiteralByteString $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i0, $r1, 0, $i1);

        $r2 = new com.google.tagmanager.protobuf.LiteralByteString;

        specialinvoke $r2.<com.google.tagmanager.protobuf.LiteralByteString: void <init>(byte[])>($r1);

        return $r2;
    }

    public static com.google.tagmanager.protobuf.ByteString copyFromUtf8(java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r1;
        com.google.tagmanager.protobuf.LiteralByteString $r2;
        java.lang.String $r0;
        java.lang.RuntimeException $r4;

        $r0 := @parameter0: java.lang.String;

        $r2 = new com.google.tagmanager.protobuf.LiteralByteString;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        specialinvoke $r2.<com.google.tagmanager.protobuf.LiteralByteString: void <init>(byte[])>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("UTF-8 not supported?", $r3);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    static com.google.tagmanager.protobuf.ByteString$CodedBuilder newCodedBuilder(int)
    {
        int $i0;
        com.google.tagmanager.protobuf.ByteString$CodedBuilder $r0;

        $i0 := @parameter0: int;

        $r0 = new com.google.tagmanager.protobuf.ByteString$CodedBuilder;

        specialinvoke $r0.<com.google.tagmanager.protobuf.ByteString$CodedBuilder: void <init>(int,com.google.tagmanager.protobuf.ByteString$1)>($i0, null);

        return $r0;
    }

    public static com.google.tagmanager.protobuf.ByteString$Output newOutput()
    {
        com.google.tagmanager.protobuf.ByteString$Output $r0;

        $r0 = new com.google.tagmanager.protobuf.ByteString$Output;

        specialinvoke $r0.<com.google.tagmanager.protobuf.ByteString$Output: void <init>(int)>(128);

        return $r0;
    }

    public static com.google.tagmanager.protobuf.ByteString$Output newOutput(int)
    {
        int $i0;
        com.google.tagmanager.protobuf.ByteString$Output $r0;

        $i0 := @parameter0: int;

        $r0 = new com.google.tagmanager.protobuf.ByteString$Output;

        specialinvoke $r0.<com.google.tagmanager.protobuf.ByteString$Output: void <init>(int)>($i0);

        return $r0;
    }

    private static com.google.tagmanager.protobuf.ByteString readChunk(java.io.InputStream, int)
    {
        com.google.tagmanager.protobuf.ByteString $r2;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $i0 - $i1;

        $i2 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, $i1, $i2);

        $i3 = -1;

        if $i2 == $i3 goto label2;

        $i1 = $i1 + $i2;

        goto label1;

     label2:
        if $i1 != 0 goto label3;

        return null;

     label3:
        $r2 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString copyFrom(byte[],int,int)>($r1, 0, $i1);

        return $r2;
    }

    public static com.google.tagmanager.protobuf.ByteString readFrom(java.io.InputStream)
    {
        com.google.tagmanager.protobuf.ByteString $r1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString readFrom(java.io.InputStream,int,int)>($r0, 256, 8192);

        return $r1;
    }

    public static com.google.tagmanager.protobuf.ByteString readFrom(java.io.InputStream, int)
    {
        int $i0;
        com.google.tagmanager.protobuf.ByteString $r1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString readFrom(java.io.InputStream,int,int)>($r0, $i0, $i0);

        return $r1;
    }

    public static com.google.tagmanager.protobuf.ByteString readFrom(java.io.InputStream, int, int)
    {
        com.google.tagmanager.protobuf.ByteString $r2;
        int $i0, $i1;
        java.io.InputStream $r0;
        java.util.ArrayList $r1;

        $r0 := @parameter0: java.io.InputStream;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

     label1:
        $r2 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString readChunk(java.io.InputStream,int)>($r0, $i1);

        if $r2 == null goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 * 2;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        goto label1;

     label2:
        $r2 = staticinvoke <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString copyFrom(java.lang.Iterable)>($r1);

        return $r2;
    }

    public abstract java.nio.ByteBuffer asReadOnlyByteBuffer();

    public abstract java.util.List asReadOnlyByteBufferList();

    public abstract byte byteAt(int);

    public com.google.tagmanager.protobuf.ByteString concat(com.google.tagmanager.protobuf.ByteString)
    {
        com.google.tagmanager.protobuf.ByteString r0, $r1;
        long $l2, $l3;
        java.lang.IllegalArgumentException $r5;
        byte $b4;
        int $i0, $i1, $i5;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String $r3;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $r1 := @parameter0: com.google.tagmanager.protobuf.ByteString;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        $i1 = virtualinvoke $r1.<com.google.tagmanager.protobuf.ByteString: int size()>();

        $l2 = (long) $i0;

        $l3 = (long) $i1;

        $l2 = $l2 + $l3;

        $b4 = $l2 cmp 2147483647L;

        $i5 = (int) $b4;

        if $i5 < 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("ByteString would be too long: ");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label1:
        r0 = staticinvoke <com.google.tagmanager.protobuf.RopeByteString: com.google.tagmanager.protobuf.ByteString concatenate(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ByteString)>(r0, $r1);

        return r0;
    }

    public abstract void copyTo(java.nio.ByteBuffer);

    public void copyTo(byte[], int)
    {
        com.google.tagmanager.protobuf.ByteString r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: void copyTo(byte[],int,int,int)>($r1, 0, $i0, $i1);

        return;
    }

    public void copyTo(byte[], int, int, int)
    {
        com.google.tagmanager.protobuf.ByteString r0;
        byte[] $r1;
        java.lang.IndexOutOfBoundsException $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Source offset < 0: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        if $i1 >= 0 goto label2;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Target offset < 0: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        if $i2 >= 0 goto label3;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Length < 0: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label3:
        $i3 = $i0 + $i2;

        $i4 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        if $i3 <= $i4 goto label4;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Source end offset < 0: ");

        $i0 = $i0 + $i2;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label4:
        $i3 = $i1 + $i2;

        $i4 = lengthof $r1;

        if $i3 <= $i4 goto label5;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Target end offset < 0: ");

        $i0 = $i1 + $i2;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label5:
        if $i2 <= 0 goto label6;

        virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>($r1, $i0, $i1, $i2);

     label6:
        return;
    }

    protected abstract void copyToInternal(byte[], int, int, int);

    public boolean endsWith(com.google.tagmanager.protobuf.ByteString)
    {
        com.google.tagmanager.protobuf.ByteString r0, $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $r1 := @parameter0: com.google.tagmanager.protobuf.ByteString;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        $i1 = virtualinvoke $r1.<com.google.tagmanager.protobuf.ByteString: int size()>();

        if $i0 < $i1 goto label1;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        $i1 = virtualinvoke $r1.<com.google.tagmanager.protobuf.ByteString: int size()>();

        $i0 = $i0 - $i1;

        r0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString substring(int)>($i0);

        $z0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract boolean equals(java.lang.Object);

    protected abstract int getTreeDepth();

    public abstract int hashCode();

    protected abstract boolean isBalanced();

    public boolean isEmpty()
    {
        com.google.tagmanager.protobuf.ByteString r0;
        int $i0;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract boolean isValidUtf8();

    public abstract com.google.tagmanager.protobuf.ByteString$ByteIterator iterator();

    public volatile java.util.Iterator iterator()
    {
        com.google.tagmanager.protobuf.ByteString r0;
        com.google.tagmanager.protobuf.ByteString$ByteIterator $r1;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $r1 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString$ByteIterator iterator()>();

        return $r1;
    }

    public abstract com.google.tagmanager.protobuf.CodedInputStream newCodedInput();

    public abstract java.io.InputStream newInput();

    protected abstract int partialHash(int, int, int);

    protected abstract int partialIsValidUtf8(int, int, int);

    protected abstract int peekCachedHashCode();

    public abstract int size();

    public boolean startsWith(com.google.tagmanager.protobuf.ByteString)
    {
        com.google.tagmanager.protobuf.ByteString r0, $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $r1 := @parameter0: com.google.tagmanager.protobuf.ByteString;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        $i1 = virtualinvoke $r1.<com.google.tagmanager.protobuf.ByteString: int size()>();

        if $i0 < $i1 goto label1;

        $i0 = virtualinvoke $r1.<com.google.tagmanager.protobuf.ByteString: int size()>();

        r0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString substring(int,int)>(0, $i0);

        $z0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public com.google.tagmanager.protobuf.ByteString substring(int)
    {
        com.google.tagmanager.protobuf.ByteString r0;
        int $i0, $i1;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        r0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString substring(int,int)>($i0, $i1);

        return r0;
    }

    public abstract com.google.tagmanager.protobuf.ByteString substring(int, int);

    public byte[] toByteArray()
    {
        com.google.tagmanager.protobuf.ByteString r0;
        int $i0;
        byte[] $r1;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        if $i0 != 0 goto label1;

        $r1 = <com.google.tagmanager.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        return $r1;

     label1:
        $r1 = newarray (byte)[$i0];

        virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>($r1, 0, 0, $i0);

        return $r1;
    }

    public java.lang.String toString()
    {
        com.google.tagmanager.protobuf.ByteString r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.String $r2;
        java.lang.Integer $r3;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1[0] = $r2;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r3;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<ByteString@%s size=%d>", $r1);

        return $r2;
    }

    public abstract java.lang.String toString(java.lang.String);

    public java.lang.String toStringUtf8()
    {
        com.google.tagmanager.protobuf.ByteString r0;
        java.lang.Throwable $r3;
        java.lang.RuntimeException $r1;
        java.lang.String $r2;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

     label1:
        $r2 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: java.lang.String toString(java.lang.String)>("UTF-8");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("UTF-8 not supported?", $r3);

        throw $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public abstract void writeTo(java.io.OutputStream);

    void writeTo(java.io.OutputStream, int, int)
    {
        com.google.tagmanager.protobuf.ByteString r0;
        java.io.OutputStream $r1;
        java.lang.IndexOutOfBoundsException $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.google.tagmanager.protobuf.ByteString;

        $r1 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Source offset < 0: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        if $i1 >= 0 goto label2;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Length < 0: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: int size()>();

        if $i2 <= $i3 goto label3;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Source end offset exceeded: ");

        $i0 = $i0 + $i1;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label3:
        if $i1 <= 0 goto label4;

        virtualinvoke r0.<com.google.tagmanager.protobuf.ByteString: void writeToInternal(java.io.OutputStream,int,int)>($r1, $i0, $i1);

     label4:
        return;
    }

    abstract void writeToInternal(java.io.OutputStream, int, int);
}
