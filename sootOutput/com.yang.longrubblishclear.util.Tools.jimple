public class com.yang.longrubblishclear.util.Tools extends java.lang.Object
{

    private void <init>()
    {
        com.yang.longrubblishclear.util.Tools r0;

        r0 := @this: com.yang.longrubblishclear.util.Tools;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addBrowserMark(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        android.net.Uri $r6;
        java.lang.String[] $r7, $r8;
        java.lang.Integer $r4;
        android.content.ContentResolver $r5;
        int $i0;
        java.lang.String $r1, $r2;
        android.content.ContentValues r3;
        android.database.Cursor $r9;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r3 = new android.content.ContentValues;

        specialinvoke r3.<android.content.ContentValues: void <init>()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("bookmark", $r4);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("url", $r1);

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = <android.provider.Browser: android.net.Uri BOOKMARKS_URI>;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "url";

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = $r1;

        $r9 = virtualinvoke $r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r7, "url=?", $r8, null);

        if $r9 != null goto label1;

        return;

     label1:
        $i0 = interfaceinvoke $r9.<android.database.Cursor: int getCount()>();

        if $i0 > 0 goto label2;

        $r6 = <android.provider.Browser: android.net.Uri BOOKMARKS_URI>;

        virtualinvoke $r5.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r6, r3);

     label2:
        interfaceinvoke $r9.<android.database.Cursor: void close()>();

        return;
    }

    public static int chechSim(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("46000");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("46002");

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("46001");

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("46003");

        if $z0 == 0 goto label4;

        return 3;

     label4:
        $i0 = -1;

        return $i0;
    }

    public static org.apache.http.HttpEntity connectToURL(android.content.Context, java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient r4;
        android.content.Context $r0;
        org.apache.http.params.BasicHttpParams r3;
        java.net.URL r10;
        org.apache.http.StatusLine $r6;
        int $i0;
        java.lang.String $r1, r9, $r13;
        boolean $z0;
        org.apache.http.HttpEntity $r7;
        java.lang.Exception r8, r16;
        org.apache.http.client.methods.HttpGet r2;
        org.apache.http.params.HttpParams $r15;
        org.apache.http.HttpResponse $r5;
        java.lang.StringBuilder $r14;
        org.apache.http.HttpHost r11, r12;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.yang.longrubblishclear.util.Tools: boolean isConnect(android.content.Context)>($r0);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $z0 = staticinvoke <com.yang.longrubblishclear.util.Tools: boolean isCmwap(android.content.Context)>($r0);

        if $z0 != 0 goto label12;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "%20");

        r2 = new org.apache.http.client.methods.HttpGet;

     label02:
        specialinvoke r2.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

     label03:
        r3 = new org.apache.http.params.BasicHttpParams;

     label04:
        specialinvoke r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r3, 10000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r3, 10000);

     label05:
        r4 = new org.apache.http.impl.client.DefaultHttpClient;

     label06:
        specialinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r3);

        $r5 = interfaceinvoke r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r2);

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r6.<org.apache.http.StatusLine: int getStatusCode()>();

     label07:
        if $i0 == 200 goto label08;

        return null;

     label08:
        $r7 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label09:
        return $r7;

     label10:
        r8 := @caughtexception;

        virtualinvoke r8.<java.lang.Exception: void printStackTrace()>();

     label11:
        return null;

     label12:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

     label13:
        r9 = "http://wap.baidu.com/";

        r10 = new java.net.URL;

     label14:
        specialinvoke r10.<java.net.URL: void <init>(java.lang.String)>("http://wap.baidu.com/");

     label15:
        r11 = new org.apache.http.HttpHost;

     label16:
        specialinvoke r11.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>("10.0.0.172", 80, "http");

     label17:
        r12 = new org.apache.http.HttpHost;

     label18:
        $r13 = virtualinvoke r10.<java.net.URL: java.lang.String getHost()>();

        $i0 = virtualinvoke r10.<java.net.URL: int getPort()>();

        specialinvoke r12.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r13, $i0, "http");

     label19:
        $r14 = new java.lang.StringBuilder;

     label20:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://");

        $r13 = virtualinvoke r10.<java.net.URL: java.lang.String getHost()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>($r13, "");

     label21:
        r2 = new org.apache.http.client.methods.HttpGet;

     label22:
        specialinvoke r2.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>(r9);

     label23:
        r3 = new org.apache.http.params.BasicHttpParams;

     label24:
        specialinvoke r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r3, 10000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r3, 10000);

     label25:
        r4 = new org.apache.http.impl.client.DefaultHttpClient;

     label26:
        specialinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r3);

        $r15 = interfaceinvoke r4.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r15.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", r11);

        staticinvoke <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>(r3, 0);

        interfaceinvoke r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>(r12, r2);

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "%20");

     label27:
        r10 = new java.net.URL;

     label28:
        specialinvoke r10.<java.net.URL: void <init>(java.lang.String)>($r1);

     label29:
        r11 = new org.apache.http.HttpHost;

     label30:
        specialinvoke r11.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>("10.0.0.172", 80, "http");

     label31:
        r12 = new org.apache.http.HttpHost;

     label32:
        r9 = virtualinvoke r10.<java.net.URL: java.lang.String getHost()>();

        $i0 = virtualinvoke r10.<java.net.URL: int getPort()>();

        specialinvoke r12.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>(r9, $i0, "http");

     label33:
        $r14 = new java.lang.StringBuilder;

     label34:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://");

        r9 = virtualinvoke r10.<java.net.URL: java.lang.String getHost()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        r9 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>(r9, "");

     label35:
        r2 = new org.apache.http.client.methods.HttpGet;

     label36:
        specialinvoke r2.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

     label37:
        r3 = new org.apache.http.params.BasicHttpParams;

     label38:
        specialinvoke r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r3, 10000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r3, 10000);

     label39:
        r4 = new org.apache.http.impl.client.DefaultHttpClient;

     label40:
        specialinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r3);

        $r15 = interfaceinvoke r4.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r15.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", r11);

        $r5 = interfaceinvoke r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>(r12, r2);

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r6.<org.apache.http.StatusLine: int getStatusCode()>();

     label41:
        if $i0 == 200 goto label42;

        return null;

     label42:
        $r7 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label43:
        return $r7;

     label44:
        r16 := @caughtexception;

        virtualinvoke r16.<java.lang.Exception: void printStackTrace()>();

        goto label11;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label44;
        catch java.lang.Exception from label14 to label15 with label44;
        catch java.lang.Exception from label16 to label17 with label44;
        catch java.lang.Exception from label18 to label19 with label44;
        catch java.lang.Exception from label20 to label21 with label44;
        catch java.lang.Exception from label22 to label23 with label44;
        catch java.lang.Exception from label24 to label25 with label44;
        catch java.lang.Exception from label26 to label27 with label44;
        catch java.lang.Exception from label28 to label29 with label44;
        catch java.lang.Exception from label30 to label31 with label44;
        catch java.lang.Exception from label32 to label33 with label44;
        catch java.lang.Exception from label34 to label35 with label44;
        catch java.lang.Exception from label36 to label37 with label44;
        catch java.lang.Exception from label38 to label39 with label44;
        catch java.lang.Exception from label40 to label41 with label44;
        catch java.lang.Exception from label42 to label43 with label44;
    }

    public static boolean downloadFile(android.content.Context, java.lang.String, java.io.File, java.lang.String)
    {
        java.lang.Throwable $r14, $r15, $r16, $r17;
        android.content.Context $r0;
        byte[] r3;
        long $l0;
        byte $b1;
        int $i2, $i3;
        java.lang.String $r2, $r5;
        boolean $z0;
        org.apache.http.HttpEntity $r8;
        java.io.FileOutputStream r4, r6, $r19;
        java.io.File $r1, r9, $r12, $r20;
        java.lang.Exception r13;
        java.lang.StringBuilder $r10, $r18;
        java.io.InputStream r7, $r11;

        $r0 := @parameter0: android.content.Context;

        $r5 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.io.File;

        $r2 := @parameter3: java.lang.String;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" ", "%20");

        r6 = null;

        r7 = null;

     label01:
        $r8 = staticinvoke <com.yang.longrubblishclear.util.Tools: org.apache.http.HttpEntity connectToURL(android.content.Context,java.lang.String)>($r0, $r5);

     label02:
        if $r8 != null goto label05;

        $r12 = new java.io.File;

        $r18 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        goto label03;

     label03:
        goto label04;

     label04:
        return 0;

     label05:
        $l0 = interfaceinvoke $r8.<org.apache.http.HttpEntity: long getContentLength()>();

     label06:
        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 > 0 goto label09;

        $r12 = new java.io.File;

        $r18 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        goto label07;

     label07:
        goto label08;

     label08:
        return 0;

     label09:
        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label10:
        if $z0 != 0 goto label12;

     label11:
        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

     label12:
        $r19 = new java.io.FileOutputStream;

     label13:
        r4 = $r19;

     label14:
        $r12 = new java.io.File;

     label15:
        r9 = $r12;

     label16:
        $r18 = new java.lang.StringBuilder;

     label17:
        $r10 = $r18;

     label18:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.io.File)>(r9);

     label19:
        $r11 = interfaceinvoke $r8.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label20:
        r7 = $r11;

        r3 = newarray (byte)[1024];

     label21:
        $i2 = virtualinvoke $r11.<java.io.InputStream: int read(byte[])>(r3);

     label22:
        $i3 = -1;

        if $i2 != $i3 goto label37;

     label23:
        virtualinvoke r4.<java.io.FileOutputStream: void flush()>();

     label24:
        $r12 = new java.io.File;

     label25:
        r9 = $r12;

     label26:
        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r2);

     label27:
        $r20 = new java.io.File;

     label28:
        $r12 = $r20;

     label29:
        $r18 = new java.lang.StringBuilder;

     label30:
        $r10 = $r18;

     label31:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        staticinvoke <com.yang.longrubblishclear.util.Tools: boolean moveTo(java.io.File,java.io.File)>(r9, $r12);

     label32:
        $r12 = new java.io.File;

        $r18 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        if r4 == null goto label34;

     label33:
        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

     label34:
        if $r11 == null goto label36;

     label35:
        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label36:
        return 1;

     label37:
        virtualinvoke r4.<java.io.FileOutputStream: void write(byte[],int,int)>(r3, 0, $i2);

     label38:
        goto label21;

     label39:
        r13 := @caughtexception;

        r6 = r4;

     label40:
        virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();

     label41:
        $r12 = new java.io.File;

        $r18 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        if r6 == null goto label43;

     label42:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

     label43:
        if r7 == null goto label45;

     label44:
        virtualinvoke r7.<java.io.InputStream: void close()>();

     label45:
        return 0;

     label46:
        $r14 := @caughtexception;

     label47:
        $r12 = new java.io.File;

        $r18 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        if r6 == null goto label49;

     label48:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

     label49:
        if r7 == null goto label51;

     label50:
        virtualinvoke r7.<java.io.InputStream: void close()>();

     label51:
        throw $r14;

     label52:
        $r15 := @caughtexception;

        goto label36;

     label53:
        $r16 := @caughtexception;

        goto label51;

     label54:
        $r14 := @caughtexception;

        r6 = r4;

        goto label47;

     label55:
        $r17 := @caughtexception;

        goto label45;

     label56:
        r13 := @caughtexception;

        goto label40;

        catch java.lang.Exception from label01 to label02 with label56;
        catch java.lang.Throwable from label01 to label02 with label46;
        catch java.lang.Exception from label05 to label06 with label56;
        catch java.lang.Throwable from label05 to label06 with label46;
        catch java.lang.Exception from label09 to label10 with label56;
        catch java.lang.Exception from label11 to label12 with label56;
        catch java.lang.Exception from label18 to label19 with label56;
        catch java.lang.Throwable from label09 to label10 with label46;
        catch java.lang.Throwable from label11 to label13 with label46;
        catch java.lang.Throwable from label14 to label15 with label46;
        catch java.lang.Throwable from label16 to label17 with label46;
        catch java.lang.Throwable from label18 to label19 with label46;
        catch java.lang.Exception from label19 to label20 with label39;
        catch java.lang.Exception from label21 to label22 with label39;
        catch java.lang.Exception from label23 to label24 with label39;
        catch java.lang.Exception from label26 to label27 with label39;
        catch java.lang.Exception from label31 to label32 with label39;
        catch java.lang.Throwable from label19 to label20 with label54;
        catch java.lang.Throwable from label21 to label22 with label54;
        catch java.lang.Throwable from label23 to label25 with label54;
        catch java.lang.Throwable from label26 to label28 with label54;
        catch java.lang.Throwable from label29 to label30 with label54;
        catch java.lang.Throwable from label31 to label32 with label54;
        catch java.io.IOException from label33 to label34 with label52;
        catch java.io.IOException from label35 to label36 with label52;
        catch java.lang.Exception from label37 to label38 with label39;
        catch java.lang.Throwable from label37 to label38 with label54;
        catch java.lang.Throwable from label40 to label41 with label46;
        catch java.io.IOException from label42 to label43 with label55;
        catch java.io.IOException from label44 to label45 with label55;
        catch java.io.IOException from label48 to label49 with label53;
        catch java.io.IOException from label50 to label51 with label53;
    }

    public static java.lang.String getADS_CHANNEL(android.content.Context)
    {
        java.lang.Throwable r5;
        android.content.Context $r0;
        android.os.Bundle r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        java.lang.NullPointerException r6;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 128);

     label2:
        r1 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label3:
        $r3 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("R_IDC");

     label4:
        return $r3;

     label5:
        r5 := @caughtexception;

        $r7 = (android.content.pm.PackageManager$NameNotFoundException) r5;

        virtualinvoke $r7.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return null;

     label6:
        r6 := @caughtexception;

        virtualinvoke r6.<java.lang.NullPointerException: void printStackTrace()>();

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
        catch java.lang.NullPointerException from label1 to label4 with label6;
    }

    public static java.lang.String getADS_ID(android.content.Context)
    {
        java.lang.Throwable r5;
        android.content.Context $r0;
        android.os.Bundle r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        java.lang.NullPointerException r6;
        int $i0;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 128);

     label2:
        r1 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label3:
        $i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("R_ID");

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label4:
        return $r3;

     label5:
        r5 := @caughtexception;

        $r7 = (android.content.pm.PackageManager$NameNotFoundException) r5;

        virtualinvoke $r7.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return null;

     label6:
        r6 := @caughtexception;

        virtualinvoke r6.<java.lang.NullPointerException: void printStackTrace()>();

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
        catch java.lang.NullPointerException from label1 to label4 with label6;
    }

    public static java.lang.String getAPP_ID(android.content.Context)
    {
        java.lang.Throwable r5;
        android.content.Context $r0;
        android.os.Bundle r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        java.lang.NullPointerException r6;
        int $i0;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 128);

     label2:
        r1 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label3:
        $i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("R_IDP");

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label4:
        return $r3;

     label5:
        r5 := @caughtexception;

        $r7 = (android.content.pm.PackageManager$NameNotFoundException) r5;

        virtualinvoke $r7.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return null;

     label6:
        r6 := @caughtexception;

        virtualinvoke r6.<java.lang.NullPointerException: void printStackTrace()>();

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
        catch java.lang.NullPointerException from label1 to label4 with label6;
    }

    public static java.lang.String getCurTime()
    {
        java.text.SimpleDateFormat r1;
        long $l0;
        java.lang.String $r2;
        java.sql.Date r0;

        r1 = new java.text.SimpleDateFormat;

        specialinvoke r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm");

        r0 = new java.sql.Date;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r0.<java.sql.Date: void <init>(long)>($l0);

        $r2 = virtualinvoke r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r0);

        return $r2;
    }

    public static final int getDates(java.sql.Date, java.sql.Date)
    {
        long $l3, $l4;
        java.sql.Date $r0, $r1, r2;
        int i0, $i1, $i2;

        $r0 := @parameter0: java.sql.Date;

        $r1 := @parameter1: java.sql.Date;

        r2 = new java.sql.Date;

        i0 = virtualinvoke $r0.<java.sql.Date: int getYear()>();

        $i1 = virtualinvoke $r0.<java.sql.Date: int getMonth()>();

        $i2 = virtualinvoke $r0.<java.sql.Date: int getDate()>();

        specialinvoke r2.<java.sql.Date: void <init>(int,int,int)>(i0, $i1, $i2);

        $r0 = new java.sql.Date;

        i0 = virtualinvoke $r1.<java.sql.Date: int getYear()>();

        $i1 = virtualinvoke $r1.<java.sql.Date: int getMonth()>();

        $i2 = virtualinvoke $r1.<java.sql.Date: int getDate()>();

        specialinvoke $r0.<java.sql.Date: void <init>(int,int,int)>(i0, $i1, $i2);

        $l3 = virtualinvoke r2.<java.sql.Date: long getTime()>();

        $l4 = virtualinvoke $r0.<java.sql.Date: long getTime()>();

        $l3 = $l3 - $l4;

        i0 = (int) $l3;

        i0 = i0 / 86400000;

        return i0;
    }

    public static android.content.Intent getLaunchIntentForPackage(android.content.pm.PackageManager, java.lang.String)
    {
        android.content.Intent $r2;
        java.lang.String $r1;
        android.content.pm.PackageManager $r0;

        $r0 := @parameter0: android.content.pm.PackageManager;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.String getMD5Str(java.lang.String)
    {
        java.lang.Throwable r5, r7;
        java.io.PrintStream $r6;
        byte[] $r4;
        java.security.MessageDigest r2, $r3;
        short $s3;
        byte $b2;
        java.lang.StringBuffer r1, $r8;
        int i0, $i1;
        java.lang.String $r0;
        java.io.UnsupportedEncodingException $r9;

        $r0 := @parameter0: java.lang.String;

        r2 = null;

     label01:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label02:
        r2 = $r3;

     label03:
        virtualinvoke $r3.<java.security.MessageDigest: void reset()>();

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

     label04:
        $r4 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>();

        $r8 = new java.lang.StringBuffer;

        r1 = $r8;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        i0 = 0;

     label05:
        $i1 = lengthof $r4;

        if i0 < $i1 goto label08;

        $r0 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String substring(int,int)>(8, 24);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toString()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        return $r0;

     label06:
        r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("NoSuchAlgorithmException caught!");

        i0 = -1;

        staticinvoke <java.lang.System: void exit(int)>(i0);

        goto label04;

     label07:
        r7 := @caughtexception;

        $r9 = (java.io.UnsupportedEncodingException) r7;

        virtualinvoke $r9.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label04;

     label08:
        $b2 = $r4[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 != 1 goto label10;

        $r8 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $b2 = $r4[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label09:
        i0 = i0 + 1;

        goto label05;

     label10:
        $b2 = $r4[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        goto label09;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label06;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label06;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label07;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label07;
    }

    public static int getRandom(int, int)
    {
        int $i0, $i1;
        double $d0, $d1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 > $i1 goto label1;

        if $i0 < 0 goto label1;

        if $i1 >= 0 goto label2;

     label1:
        $i0 = -1;

        return $i0;

     label2:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $i1 = $i1 - $i0;

        $i1 = $i1 + 1;

        $d1 = (double) $i1;

        $d0 = $d0 * $d1;

        $i1 = (int) $d0;

        $i0 = $i1 + $i0;

        return $i0;
    }

    public static java.lang.String getSimOperator(android.content.Context)
    {
        android.content.Context $r0;
        android.telephony.TelephonyManager r2;
        java.lang.Object $r1;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r2 = (android.telephony.TelephonyManager) $r1;

        $r3 = virtualinvoke r2.<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>();

        if $r3 == null goto label1;

        return $r3;

     label1:
        return "00000";
    }

    public static java.lang.String getUMENG_CHANNEL(android.content.Context)
    {
        java.lang.Throwable r5;
        android.content.Context $r0;
        android.os.Bundle r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        java.lang.NullPointerException r6;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 128);

     label2:
        r1 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label3:
        $r3 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("UMENG_CHANNEL");

     label4:
        return $r3;

     label5:
        r5 := @caughtexception;

        $r7 = (android.content.pm.PackageManager$NameNotFoundException) r5;

        virtualinvoke $r7.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return null;

     label6:
        r6 := @caughtexception;

        virtualinvoke r6.<java.lang.NullPointerException: void printStackTrace()>();

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
        catch java.lang.NullPointerException from label1 to label4 with label6;
    }

    public static boolean isCmwap(android.content.Context)
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        int $i0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getType()>();

        if $i0 == 1 goto label3;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("cmwap");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("3gwap");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("uniwap");

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static boolean isConnect(android.content.Context)
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isWifiEnabled(android.content.Context)
    {
        android.content.Context $r0;
        android.net.wifi.WifiManager r2;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r2 = (android.net.wifi.WifiManager) $r1;

        $z0 = virtualinvoke r2.<android.net.wifi.WifiManager: boolean isWifiEnabled()>();

        return $z0;
    }

    public static boolean moveTo(java.io.File, java.io.File)
    {
        java.lang.Throwable r5, $r6, r7;
        byte[] r2;
        java.io.FileOutputStream r4, $r9;
        java.io.IOException $r11;
        java.io.FileInputStream r3, $r8;
        java.io.File $r0, $r1;
        java.io.FileNotFoundException $r10;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.io.File;

        $z0 = 0;

        entermonitor class "Lcom/yang/longrubblishclear/util/Tools;";

     label01:
        $r8 = new java.io.FileInputStream;

        r3 = $r8;

     label02:
        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label03:
        $r9 = new java.io.FileOutputStream;

        r4 = $r9;

     label04:
        specialinvoke $r9.<java.io.FileOutputStream: void <init>(java.io.File)>($r0);

     label05:
        r2 = newarray (byte)[1024];

     label06:
        $i0 = virtualinvoke r3.<java.io.FileInputStream: int read(byte[])>(r2);

     label07:
        $i1 = -1;

        if $i0 != $i1 goto label11;

     label08:
        virtualinvoke r4.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

        virtualinvoke r3.<java.io.FileInputStream: void close()>();

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label09:
        $z0 = 1;

     label10:
        exitmonitor class "Lcom/yang/longrubblishclear/util/Tools;";

        return $z0;

     label11:
        virtualinvoke r4.<java.io.FileOutputStream: void write(byte[],int,int)>(r2, 0, $i0);

     label12:
        goto label06;

     label13:
        r5 := @caughtexception;

     label14:
        $r10 = (java.io.FileNotFoundException) r5;

        virtualinvoke $r10.<java.io.FileNotFoundException: void printStackTrace()>();

     label15:
        goto label10;

     label16:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/yang/longrubblishclear/util/Tools;";

        throw $r6;

     label17:
        r7 := @caughtexception;

     label18:
        $r11 = (java.io.IOException) r7;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

     label19:
        goto label10;

        catch java.io.FileNotFoundException from label02 to label03 with label13;
        catch java.io.FileNotFoundException from label04 to label05 with label13;
        catch java.io.FileNotFoundException from label06 to label07 with label13;
        catch java.io.FileNotFoundException from label08 to label09 with label13;
        catch java.io.IOException from label02 to label03 with label17;
        catch java.io.IOException from label04 to label05 with label17;
        catch java.io.IOException from label06 to label07 with label17;
        catch java.io.IOException from label08 to label09 with label17;
        catch java.lang.Throwable from label01 to label09 with label16;
        catch java.io.FileNotFoundException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label16;
    }

    public static final boolean startActivitySafe(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        android.content.Intent $r3;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>($r1);

        if $r3 == null goto label1;

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r3);

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String toString(java.io.InputStream)
    {
        java.lang.Throwable r2;
        java.io.IOException $r8;
        java.io.InputStreamReader $r5;
        java.lang.StringBuffer r1, $r7;
        java.io.BufferedReader r3, $r6;
        java.lang.String $r4;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        if $r0 != null goto label1;

        return null;

     label1:
        $r6 = new java.io.BufferedReader;

        r3 = $r6;

        $r5 = new java.io.InputStreamReader;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        $r7 = new java.lang.StringBuffer;

        r1 = $r7;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

     label2:
        $r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label3:
        if $r4 != null goto label4;

        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

     label4:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label5:
        goto label2;

     label6:
        r2 := @caughtexception;

        $r8 = (java.io.IOException) r2;

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

        return null;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public static boolean tryLaunchActivity(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        android.content.Intent $r3;
        java.lang.String $r1;
        java.lang.Exception $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = staticinvoke <com.yang.longrubblishclear.util.Tools: android.content.Intent getLaunchIntentForPackage(android.content.pm.PackageManager,java.lang.String)>($r2, $r1);

        if $r3 == null goto label4;

     label1:
        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r3);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

     label4:
        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
