public class proguard.classfile.instruction.visitor.InstructionCounter extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.instruction.visitor.InstructionVisitor
{
    private int count;

    public void <init>()
    {
        proguard.classfile.instruction.visitor.InstructionCounter r0;

        r0 := @this: proguard.classfile.instruction.visitor.InstructionCounter;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        return;
    }

    public int getCount()
    {
        int i0;
        proguard.classfile.instruction.visitor.InstructionCounter r0;

        r0 := @this: proguard.classfile.instruction.visitor.InstructionCounter;

        i0 = r0.<proguard.classfile.instruction.visitor.InstructionCounter: int count>;

        return i0;
    }

    public void visitAnyInstruction(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.instruction.Instruction)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.instruction.Instruction $r4;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.instruction.visitor.InstructionCounter r0;

        r0 := @this: proguard.classfile.instruction.visitor.InstructionCounter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.instruction.Instruction;

        $i0 = r0.<proguard.classfile.instruction.visitor.InstructionCounter: int count>;

        $i0 = $i0 + 1;

        r0.<proguard.classfile.instruction.visitor.InstructionCounter: int count> = $i0;

        return;
    }
}
