public class org.achartengine.chart.LineChart extends org.achartengine.chart.XYChart
{
    private static final int SHAPE_WIDTH;

    public void <init>(org.achartengine.model.XYMultipleSeriesDataset, org.achartengine.renderer.XYMultipleSeriesRenderer)
    {
        org.achartengine.model.XYMultipleSeriesDataset $r1;
        org.achartengine.chart.LineChart r0;
        org.achartengine.renderer.XYMultipleSeriesRenderer $r2;

        r0 := @this: org.achartengine.chart.LineChart;

        $r1 := @parameter0: org.achartengine.model.XYMultipleSeriesDataset;

        $r2 := @parameter1: org.achartengine.renderer.XYMultipleSeriesRenderer;

        specialinvoke r0.<org.achartengine.chart.XYChart: void <init>(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer)>($r1, $r2);

        return;
    }

    public void drawLegendShape(android.graphics.Canvas, org.achartengine.renderer.SimpleSeriesRenderer, float, float, android.graphics.Paint)
    {
        float $f0, $f1, $f2;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r3;
        org.achartengine.chart.LineChart r0;
        org.achartengine.renderer.SimpleSeriesRenderer $r2;

        r0 := @this: org.achartengine.chart.LineChart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: org.achartengine.renderer.SimpleSeriesRenderer;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $r3 := @parameter4: android.graphics.Paint;

        $f2 = $f0 + 30.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f1, $r3);

        return;
    }

    public void drawSeries(android.graphics.Canvas, android.graphics.Paint, float[], org.achartengine.renderer.SimpleSeriesRenderer, float, int)
    {
        float[] $r3, $r6;
        org.achartengine.chart.LineChart r0;
        org.achartengine.renderer.SimpleSeriesRenderer $r4;
        org.achartengine.renderer.XYSeriesRenderer $r5;
        android.graphics.Paint$Style $r7;
        int $i0, $i1;
        float $f0, $f1, $f2;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        boolean $z0;

        r0 := @this: org.achartengine.chart.LineChart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $r3 := @parameter2: float[];

        $r4 := @parameter3: org.achartengine.renderer.SimpleSeriesRenderer;

        $f0 := @parameter4: float;

        $i0 := @parameter5: int;

        $i0 = lengthof $r3;

        $r5 = (org.achartengine.renderer.XYSeriesRenderer) $r4;

        $f1 = virtualinvoke $r2.<android.graphics.Paint: float getStrokeWidth()>();

        $f2 = virtualinvoke $r5.<org.achartengine.renderer.XYSeriesRenderer: float getLineWidth()>();

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>($f2);

        $z0 = virtualinvoke $r5.<org.achartengine.renderer.XYSeriesRenderer: boolean isFillBelowLine()>();

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke $r5.<org.achartengine.renderer.XYSeriesRenderer: int getFillBelowLineColor()>();

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i1);

        $i1 = lengthof $r3;

        $i1 = $i1 + 4;

        $r6 = newarray (float)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r6, 0, $i0);

        $f2 = $r3[0];

        $f2 = $f2 + 1.0F;

        $r6[0] = $f2;

        $i1 = $i0 - 2;

        $f2 = $r6[$i1];

        $r6[$i0] = $f2;

        $i1 = $i0 + 1;

        $r6[$i1] = $f0;

        $i1 = $i0 + 2;

        $f0 = $r6[0];

        $r6[$i1] = $f0;

        $i1 = $i0 + 3;

        $i0 = $i0 + 1;

        $f0 = $r6[$i0];

        $r6[$i1] = $f0;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        virtualinvoke r0.<org.achartengine.chart.LineChart: void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean)>($r1, $r6, $r2, 1);

     label1:
        $i0 = virtualinvoke $r4.<org.achartengine.renderer.SimpleSeriesRenderer: int getColor()>();

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        virtualinvoke r0.<org.achartengine.chart.LineChart: void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean)>($r1, $r3, $r2, 0);

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>($f1);

        return;
    }

    public int getLegendShapeWidth()
    {
        org.achartengine.chart.LineChart r0;

        r0 := @this: org.achartengine.chart.LineChart;

        return 30;
    }

    public boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer)
    {
        org.achartengine.chart.PointStyle $r1, $r2;
        org.achartengine.chart.LineChart r0;
        org.achartengine.renderer.SimpleSeriesRenderer $r3;
        org.achartengine.renderer.XYSeriesRenderer $r4;

        r0 := @this: org.achartengine.chart.LineChart;

        $r3 := @parameter0: org.achartengine.renderer.SimpleSeriesRenderer;

        $r4 = (org.achartengine.renderer.XYSeriesRenderer) $r3;

        $r2 = virtualinvoke $r4.<org.achartengine.renderer.XYSeriesRenderer: org.achartengine.chart.PointStyle getPointStyle()>();

        $r1 = <org.achartengine.chart.PointStyle: org.achartengine.chart.PointStyle POINT>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <org.achartengine.chart.LineChart: int SHAPE_WIDTH> = 30;

        return;
    }
}
