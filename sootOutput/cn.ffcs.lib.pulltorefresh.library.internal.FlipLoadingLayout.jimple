public class cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout extends cn.ffcs.lib.pulltorefresh.library.internal.LoadingLayout
{
    static final int FLIP_ANIMATION_DURATION;
    private final android.view.animation.Animation mResetRotateAnimation;
    private final android.view.animation.Animation mRotateAnimation;

    public void <init>(android.content.Context, cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode, cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation, android.content.res.TypedArray)
    {
        android.content.Context $r1;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode $r2, $r5;
        android.view.animation.Interpolator $r8;
        cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout r0;
        android.content.res.TypedArray $r4;
        android.view.animation.RotateAnimation $r6;
        short s0;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation $r3;
        float $f0;
        android.view.animation.Animation $r7;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode;

        $r3 := @parameter2: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation;

        $r4 := @parameter3: android.content.res.TypedArray;

        specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.internal.LoadingLayout: void <init>(android.content.Context,cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode,cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray)>($r1, $r2, $r3, $r4);

        $r5 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_START>;

        if $r2 != $r5 goto label2;

        s0 = -180;

     label1:
        $r6 = new android.view.animation.RotateAnimation;

        $f0 = (float) s0;

        specialinvoke $r6.<android.view.animation.RotateAnimation: void <init>(float,float,int,float,int,float)>(0.0F, $f0, 1, 0.5F, 1, 0.5F);

        r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mRotateAnimation> = $r6;

        $r7 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mRotateAnimation>;

        $r8 = <cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Interpolator ANIMATION_INTERPOLATOR>;

        virtualinvoke $r7.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r8);

        $r7 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mRotateAnimation>;

        virtualinvoke $r7.<android.view.animation.Animation: void setDuration(long)>(150L);

        $r7 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mRotateAnimation>;

        virtualinvoke $r7.<android.view.animation.Animation: void setFillAfter(boolean)>(1);

        $r6 = new android.view.animation.RotateAnimation;

        $f0 = (float) s0;

        specialinvoke $r6.<android.view.animation.RotateAnimation: void <init>(float,float,int,float,int,float)>($f0, 0.0F, 1, 0.5F, 1, 0.5F);

        r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mResetRotateAnimation> = $r6;

        $r7 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mResetRotateAnimation>;

        $r8 = <cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Interpolator ANIMATION_INTERPOLATOR>;

        virtualinvoke $r7.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r8);

        $r7 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mResetRotateAnimation>;

        virtualinvoke $r7.<android.view.animation.Animation: void setDuration(long)>(150L);

        $r7 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mResetRotateAnimation>;

        virtualinvoke $r7.<android.view.animation.Animation: void setFillAfter(boolean)>(1);

        return;

     label2:
        s0 = 180;

        goto label1;
    }

    private float getDrawableRotationAngle()
    {
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode $r2;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation $r3, $r4;
        int[] $r1;
        int $i0;
        cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout r0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout;

        $r1 = <cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout$1: int[] $SwitchMap$cn$ffcs$lib$pulltorefresh$library$PullToRefreshBase$Mode>;

        $r2 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode mMode>;

        $i0 = virtualinvoke $r2.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        return 0.0F;

     label2:
        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation mScrollDirection>;

        $r4 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation HORIZONTAL>;

        if $r3 != $r4 goto label3;

        return 90.0F;

     label3:
        return 180.0F;

     label4:
        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation mScrollDirection>;

        $r4 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation HORIZONTAL>;

        if $r3 != $r4 goto label5;

        return 270.0F;

     label5:
        return 0.0F;
    }

    protected int getDefaultDrawableResId()
    {
        cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout r0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout;

        return 2130837621;
    }

    protected void onLoadingDrawableSet(android.graphics.drawable.Drawable)
    {
        android.view.ViewGroup$LayoutParams $r4;
        android.widget.ImageView$ScaleType $r5;
        android.widget.ImageView $r3;
        cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2;
        android.graphics.Matrix r2;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        $r4 = virtualinvoke $r3.<android.widget.ImageView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $r4.<android.view.ViewGroup$LayoutParams: int height> = $i2;

        $r4.<android.view.ViewGroup$LayoutParams: int width> = $i2;

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r3.<android.widget.ImageView: void requestLayout()>();

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        $r5 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        virtualinvoke $r3.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r5);

        r2 = new android.graphics.Matrix;

        specialinvoke r2.<android.graphics.Matrix: void <init>()>();

        $i2 = $r4.<android.view.ViewGroup$LayoutParams: int width>;

        $i1 = $i2 - $i1;

        $f0 = (float) $i1;

        $f0 = $f0 / 2.0F;

        $i1 = $r4.<android.view.ViewGroup$LayoutParams: int height>;

        $i0 = $i1 - $i0;

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        virtualinvoke r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

        $f0 = specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: float getDrawableRotationAngle()>();

        $i0 = $r4.<android.view.ViewGroup$LayoutParams: int width>;

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        $i0 = $r4.<android.view.ViewGroup$LayoutParams: int height>;

        $f2 = (float) $i0;

        $f2 = $f2 / 2.0F;

        virtualinvoke r2.<android.graphics.Matrix: boolean postRotate(float,float,float)>($f0, $f1, $f2);

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r3.<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>(r2);

     label1:
        return;
    }

    protected void onPullImpl(float)
    {
        float $f0;
        cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout r0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout;

        $f0 := @parameter0: float;

        return;
    }

    protected void pullToRefreshImpl()
    {
        android.widget.ImageView $r3;
        android.view.animation.Animation $r1, $r2;
        cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout r0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout;

        $r2 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mRotateAnimation>;

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        $r1 = virtualinvoke $r3.<android.widget.ImageView: android.view.animation.Animation getAnimation()>();

        if $r2 != $r1 goto label1;

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mResetRotateAnimation>;

        virtualinvoke $r3.<android.widget.ImageView: void startAnimation(android.view.animation.Animation)>($r1);

     label1:
        return;
    }

    protected void refreshingImpl()
    {
        android.widget.ImageView $r1;
        cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout r0;
        android.widget.ProgressBar $r2;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r1.<android.widget.ImageView: void clearAnimation()>();

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r1.<android.widget.ImageView: void setVisibility(int)>(4);

        $r2 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ProgressBar mHeaderProgress>;

        virtualinvoke $r2.<android.widget.ProgressBar: void setVisibility(int)>(0);

        return;
    }

    protected void releaseToRefreshImpl()
    {
        android.widget.ImageView $r1;
        android.view.animation.Animation $r2;
        cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout r0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        $r2 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.view.animation.Animation mRotateAnimation>;

        virtualinvoke $r1.<android.widget.ImageView: void startAnimation(android.view.animation.Animation)>($r2);

        return;
    }

    protected void resetImpl()
    {
        android.widget.ImageView $r1;
        cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout r0;
        android.widget.ProgressBar $r2;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r1.<android.widget.ImageView: void clearAnimation()>();

        $r2 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ProgressBar mHeaderProgress>;

        virtualinvoke $r2.<android.widget.ProgressBar: void setVisibility(int)>(8);

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: android.widget.ImageView mHeaderImage>;

        virtualinvoke $r1.<android.widget.ImageView: void setVisibility(int)>(0);

        return;
    }

    public static void <clinit>()
    {
        <cn.ffcs.lib.pulltorefresh.library.internal.FlipLoadingLayout: int FLIP_ANIMATION_DURATION> = 150;

        return;
    }
}
