public class proguard.classfile.attribute.preverification.DoubleType extends proguard.classfile.attribute.preverification.VerificationType
{

    public void <init>()
    {
        proguard.classfile.attribute.preverification.DoubleType r0;

        r0 := @this: proguard.classfile.attribute.preverification.DoubleType;

        specialinvoke r0.<proguard.classfile.attribute.preverification.VerificationType: void <init>()>();

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)
    {
        proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.DoubleType r0;

        r0 := @this: proguard.classfile.attribute.preverification.DoubleType;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor;

        interfaceinvoke $r4.<proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor: void visitDoubleType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.DoubleType)>($r1, $r2, $r3, $i0, r0);

        return;
    }

    public int getTag()
    {
        proguard.classfile.attribute.preverification.DoubleType r0;

        r0 := @this: proguard.classfile.attribute.preverification.DoubleType;

        return 3;
    }

    public void stackAccept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, int, proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)
    {
        proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.DoubleType r0;

        r0 := @this: proguard.classfile.attribute.preverification.DoubleType;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 := @parameter5: proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor;

        interfaceinvoke $r4.<proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor: void visitStackDoubleType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.DoubleType)>($r1, $r2, $r3, $i0, $i1, r0);

        return;
    }

    public java.lang.String toString()
    {
        proguard.classfile.attribute.preverification.DoubleType r0;

        r0 := @this: proguard.classfile.attribute.preverification.DoubleType;

        return "d";
    }

    public void variablesAccept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, int, proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)
    {
        proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.DoubleType r0;

        r0 := @this: proguard.classfile.attribute.preverification.DoubleType;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 := @parameter5: proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor;

        interfaceinvoke $r4.<proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor: void visitVariablesDoubleType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.DoubleType)>($r1, $r2, $r3, $i0, $i1, r0);

        return;
    }
}
