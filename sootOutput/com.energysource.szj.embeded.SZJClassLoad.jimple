public class com.energysource.szj.embeded.SZJClassLoad extends java.lang.Object
{
    private static final int START_CLASSLOAD;
    private static final java.lang.String TAG;
    android.os.HandlerThread handleThread;
    android.os.Looper looper;
    android.os.Message msg;
    com.energysource.szj.embeded.SZJClassLoad$MyHandler myHandler;
    java.lang.String pkg;

    public void <init>()
    {
        com.energysource.szj.embeded.SZJClassLoad r0;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg> = "";

        return;
    }

    public void backupDatabase()
    {
        com.energysource.szj.embeded.SZJClassLoad r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.io.File r1, r2;
        boolean $z0;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

        r1 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r4 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/databases/SZJService");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r4);

        r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r4 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/databases/SZJServiceBak");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean existsFile(java.io.File)>(r1);

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean existsFile(java.io.File)>(r2);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label1:
        r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r4 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/databases/SZJServiceBak");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.File: boolean renameTo(java.io.File)>(r2);

     label2:
        return;
    }

    public boolean checkJar(com.energysource.szj.embeded.ModuleEntity)
    {
        com.energysource.szj.embeded.SZJClassLoad r0;
        java.lang.String $r2;
        com.energysource.szj.embeded.ModuleEntity $r1;
        boolean $z0;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

        $r1 := @parameter0: com.energysource.szj.embeded.ModuleEntity;

        $r2 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $z0 = staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean checkJarFile(java.lang.String,com.energysource.szj.embeded.ModuleEntity,java.lang.String)>("bootablemodule", $r1, $r2);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean classLoad()
    {
        java.util.concurrent.ConcurrentHashMap r1;
        java.lang.Exception r2;
        com.energysource.szj.embeded.SZJServiceInstance $r3;
        com.energysource.szj.embeded.SZJClassLoad r0;
        java.lang.String $r5, $r6;
        com.energysource.szj.android.SZJModule $r7;
        com.energysource.szj.embeded.ModuleEntity $r4;
        boolean z0;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

        z0 = 1;

        r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r3 = staticinvoke <com.energysource.szj.embeded.SZJServiceInstance: com.energysource.szj.embeded.SZJServiceInstance getInstance()>();

        $r4 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: com.energysource.szj.embeded.ModuleEntity getMe()>();

     label1:
        $r5 = virtualinvoke $r4.<com.energysource.szj.embeded.ModuleEntity: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<com.energysource.szj.embeded.ModuleEntity: java.lang.String getLoadClassPath()>();

        $r7 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: com.energysource.szj.android.SZJModule loadJar(java.lang.String,java.lang.String)>($r5, $r6);

     label2:
        if $r7 != null goto label4;

        z0 = 0;

     label3:
        if z0 == 0 goto label7;

        virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: void setModulesMap(java.util.concurrent.ConcurrentHashMap)>(r1);

        return z0;

     label4:
        virtualinvoke r1.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("bootableModule", $r7);

     label5:
        goto label3;

     label6:
        r2 := @caughtexception;

        staticinvoke <com.energysource.szj.android.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SZJClassLoad.java", "classLoadException", r2);

        z0 = 0;

        goto label3;

     label7:
        return z0;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public boolean copyBakFile()
    {
        com.energysource.szj.embeded.SZJClassLoad r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Exception r1;
        java.io.File r2, r3;
        boolean $z0;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

        r2 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r5 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/bakjar/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bootablemodule");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jar");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("path===");

        $r5 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.energysource.szj.android.Log: void i(java.lang.String,java.lang.String)>("framework", $r5);

        staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean existsFile(java.io.File)>(r2);

        r2 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = <com.energysource.szj.embeded.SZJFrameworkConfig: java.lang.String BAKJARPATH>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bootablemodule.xml");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean existsFile(java.io.File)>(r2);

        if $z0 == 0 goto label10;

        $r5 = <com.energysource.szj.embeded.SZJFrameworkConfig: java.lang.String JARPATH>;

        $z0 = staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean deleteDirectory(java.lang.String)>($r5);

        if $z0 == 0 goto label10;

        $r5 = <com.energysource.szj.embeded.SZJFrameworkConfig: java.lang.String JARPATH>;

     label01:
        staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean createDire(java.lang.String)>($r5);

     label02:
        r2 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r5 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/loadjar/");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r5);

     label04:
        r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r5 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/bakjar/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bootablemodule");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jar");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r5);

        staticinvoke <com.energysource.szj.embeded.utils.ZipUtil: void copyFile(java.io.File,java.io.File)>(r3, r2);

     label06:
        r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r5 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/bakjar/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bootablemodule.xml");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r5);

        staticinvoke <com.energysource.szj.embeded.utils.ZipUtil: void copyFile(java.io.File,java.io.File)>(r3, r2);

     label08:
        return $z0;

     label09:
        r1 := @caughtexception;

        staticinvoke <com.energysource.szj.android.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SZJClassLoad.java", "copyBakFileException:", r1);

        return 0;

     label10:
        return $z0;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public com.energysource.szj.android.SZJModule loadJar(java.lang.String, java.lang.String)
    {
        java.lang.Exception r5;
        com.energysource.szj.embeded.SZJClassLoad r0;
        java.lang.StringBuilder $r6;
        java.lang.Class $r9;
        java.lang.Object $r11;
        java.lang.String $r1, $r2, $r7, $r8;
        java.lang.ClassLoader $r10;
        com.energysource.szj.android.SZJModule r12;
        dalvik.system.DexClassLoader r3, r4;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r6 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("classname===");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("===fileName====");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.energysource.szj.android.Log: void i(java.lang.String,java.lang.String)>("framework", $r7);

     label02:
        r3 = new dalvik.system.DexClassLoader;

        $r6 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r7 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/loadjar/moduleconfig");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jar");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r6 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r8 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/loadjar/");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke r3.<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>($r7, $r8, null, $r10);

     label06:
        r4 = new dalvik.system.DexClassLoader;

        $r6 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r7 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/loadjar/");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jar");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r6 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r8 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/loadjar/");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>($r7, $r8, null, r3);

        $r9 = virtualinvoke r4.<dalvik.system.DexClassLoader: java.lang.Class loadClass(java.lang.String)>($r2);

        $r11 = virtualinvoke $r9.<java.lang.Class: java.lang.Object newInstance()>();

        r12 = (com.energysource.szj.android.SZJModule) $r11;

     label10:
        $r6 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name==");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("==classpath==");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.energysource.szj.android.Log: void i(java.lang.String,java.lang.String)>("framework", $r1);

     label12:
        return r12;

     label13:
        r5 := @caughtexception;

        staticinvoke <com.energysource.szj.android.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SZJClassLoad.java", "loadJarException:", r5);

        return null;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public void start()
    {
        com.energysource.szj.embeded.SZJClassLoad$MyHandler $r3;
        android.os.Message $r4;
        android.os.HandlerThread $r1;
        android.os.Looper $r2;
        com.energysource.szj.embeded.SZJClassLoad r0;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

        $r1 = new android.os.HandlerThread;

        specialinvoke $r1.<android.os.HandlerThread: void <init>(java.lang.String)>("handler_thread");

        r0.<com.energysource.szj.embeded.SZJClassLoad: android.os.HandlerThread handleThread> = $r1;

        $r1 = r0.<com.energysource.szj.embeded.SZJClassLoad: android.os.HandlerThread handleThread>;

        virtualinvoke $r1.<android.os.HandlerThread: void start()>();

        $r1 = r0.<com.energysource.szj.embeded.SZJClassLoad: android.os.HandlerThread handleThread>;

        $r2 = virtualinvoke $r1.<android.os.HandlerThread: android.os.Looper getLooper()>();

        r0.<com.energysource.szj.embeded.SZJClassLoad: android.os.Looper looper> = $r2;

        $r3 = new com.energysource.szj.embeded.SZJClassLoad$MyHandler;

        $r2 = r0.<com.energysource.szj.embeded.SZJClassLoad: android.os.Looper looper>;

        specialinvoke $r3.<com.energysource.szj.embeded.SZJClassLoad$MyHandler: void <init>(com.energysource.szj.embeded.SZJClassLoad,android.os.Looper)>(r0, $r2);

        r0.<com.energysource.szj.embeded.SZJClassLoad: com.energysource.szj.embeded.SZJClassLoad$MyHandler myHandler> = $r3;

        $r3 = r0.<com.energysource.szj.embeded.SZJClassLoad: com.energysource.szj.embeded.SZJClassLoad$MyHandler myHandler>;

        $r4 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJClassLoad$MyHandler: android.os.Message obtainMessage()>();

        r0.<com.energysource.szj.embeded.SZJClassLoad: android.os.Message msg> = $r4;

        $r4 = r0.<com.energysource.szj.embeded.SZJClassLoad: android.os.Message msg>;

        $r4.<android.os.Message: int arg1> = 1;

        $r4 = r0.<com.energysource.szj.embeded.SZJClassLoad: android.os.Message msg>;

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void startClassLoad()
    {
        android.content.Context $r5;
        java.util.concurrent.ConcurrentHashMap $r9;
        com.energysource.szj.embeded.UpgradeJar $r3;
        java.lang.Exception r1;
        java.io.File r2;
        com.energysource.szj.embeded.SZJServiceInstance $r4;
        com.energysource.szj.embeded.SZJClassLoad r0;
        java.lang.StringBuilder $r7;
        java.lang.String $r6;
        com.energysource.szj.embeded.ModuleEntity $r8;
        boolean z0, $z1, $z2;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

        $r3 = new com.energysource.szj.embeded.UpgradeJar;

        specialinvoke $r3.<com.energysource.szj.embeded.UpgradeJar: void <init>()>();

        virtualinvoke $r3.<com.energysource.szj.embeded.UpgradeJar: void startUpgradeJar()>();

        z0 = 1;

        $r4 = staticinvoke <com.energysource.szj.embeded.SZJServiceInstance: com.energysource.szj.embeded.SZJServiceInstance getInstance()>();

        $r5 = virtualinvoke $r4.<com.energysource.szj.embeded.SZJServiceInstance: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg> = $r6;

        r2 = new java.io.File;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r6 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/loadjar/");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bootablemodule.xml");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r6);

        $z1 = staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean existsFile(java.io.File)>(r2);

        if $z1 != 0 goto label04;

        $z1 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean copyBakFile()>();

        z0 = 0;

        if $z1 != 0 goto label04;

        virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: void backupDatabase()>();

        $z1 = 0;

     label01:
        $z2 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean unzipJar()>();

     label02:
        $z1 = $z2;

     label03:
        if $z1 == 0 goto label04;

        z0 = 1;

     label04:
        $r8 = staticinvoke <com.energysource.szj.embeded.utils.FileUtils: com.energysource.szj.embeded.ModuleEntity readXml(java.io.File)>(r2);

        virtualinvoke $r4.<com.energysource.szj.embeded.SZJServiceInstance: void setMe(com.energysource.szj.embeded.ModuleEntity)>($r8);

        $z1 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean checkJar(com.energysource.szj.embeded.ModuleEntity)>($r8);

        if $z1 == 0 goto label05;

        z0 = 0;

        virtualinvoke $r4.<com.energysource.szj.embeded.SZJServiceInstance: void setLoadClassFlag(boolean)>(1);

        $z1 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean copyBakFile()>();

        if $z1 != 0 goto label05;

        $z1 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean checkJar(com.energysource.szj.embeded.ModuleEntity)>($r8);

        if $z1 == 0 goto label05;

        virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: void backupDatabase()>();

        $z1 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean unzipJar()>();

        if $z1 == 0 goto label05;

        z0 = 1;

     label05:
        if z0 == 0 goto label12;

        $r9 = virtualinvoke $r4.<com.energysource.szj.embeded.SZJServiceInstance: java.util.concurrent.ConcurrentHashMap getModulesMap()>();

        if $r9 == null goto label06;

        virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: int size()>();

     label06:
        z0 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean classLoad()>();

        $z1 = z0;

        if z0 != 0 goto label09;

        z0 = virtualinvoke $r4.<com.energysource.szj.embeded.SZJServiceInstance: boolean isLoadClassFlag()>();

        if z0 != 0 goto label07;

        z0 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean copyBakFile()>();

        if z0 != 0 goto label07;

        z0 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean checkJar(com.energysource.szj.embeded.ModuleEntity)>($r8);

        if z0 == 0 goto label07;

        virtualinvoke $r4.<com.energysource.szj.embeded.SZJServiceInstance: void setLoadClassFlag(boolean)>(1);

     label07:
        z0 = virtualinvoke $r4.<com.energysource.szj.embeded.SZJServiceInstance: boolean isLoadClassFlag()>();

        if z0 == 0 goto label08;

        virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: void backupDatabase()>();

        virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean unzipJar()>();

     label08:
        $z1 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean classLoad()>();

     label09:
        if $z1 == 0 goto label12;

        z0 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean startModule()>();

        if z0 == 0 goto label11;

        staticinvoke <com.energysource.szj.android.Log: void i(java.lang.String,java.lang.String)>("framework", "startModuleSuccess");

        return;

     label10:
        r1 := @caughtexception;

        staticinvoke <com.energysource.szj.android.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SZJClassLoad.java", "unzipJar", r1);

        goto label03;

     label11:
        z0 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean copyBakFile()>();

        if z0 != 0 goto label12;

        z0 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean checkJar(com.energysource.szj.embeded.ModuleEntity)>($r8);

        if z0 == 0 goto label12;

        virtualinvoke $r4.<com.energysource.szj.embeded.SZJServiceInstance: void setLoadClassFlag(boolean)>(1);

        virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: void backupDatabase()>();

        virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean unzipJar()>();

        z0 = virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean classLoad()>();

        if z0 == 0 goto label12;

        virtualinvoke r0.<com.energysource.szj.embeded.SZJClassLoad: boolean startModule()>();

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label10;
    }

    public boolean startModule()
    {
        android.content.Context $r4;
        java.lang.Integer $r8;
        java.lang.Boolean $r11;
        java.lang.String $r13, $r14;
        boolean $z0;
        java.util.concurrent.ConcurrentHashMap r2, $r5;
        com.energysource.szj.android.DebugListener $r12;
        java.lang.Exception r1;
        com.energysource.szj.embeded.SZJServiceInstance $r3;
        android.net.wifi.WifiManager r9;
        com.energysource.szj.embeded.SZJClassLoad r0;
        java.lang.Object $r6;
        com.energysource.szj.android.SZJModule r7;
        android.app.Activity $r10;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

     label01:
        $r3 = staticinvoke <com.energysource.szj.embeded.SZJServiceInstance: com.energysource.szj.embeded.SZJServiceInstance getInstance()>();

     label02:
        r2 = new java.util.concurrent.ConcurrentHashMap;

     label03:
        specialinvoke r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r4 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: android.content.Context getContext()>();

        virtualinvoke r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", $r4);

        $r5 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: java.util.concurrent.ConcurrentHashMap getModulesMap()>();

        $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("bootableModule");

        r7 = (com.energysource.szj.android.SZJModule) $r6;

        $r4 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: android.content.Context getContext()>();

        virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("watchertype", "");

        virtualinvoke r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("bootableModule", r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("projecttype", $r8);

        $r6 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r9 = (android.net.wifi.WifiManager) $r6;

        virtualinvoke r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("wifiManager", r9);

        $r10 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: android.app.Activity getActivity()>();

        virtualinvoke r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("activity", $r10);

        $z0 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: boolean isDebug()>();

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("debugFlag", $r11);

        $r12 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: com.energysource.szj.android.DebugListener getDebugListener()>();

     label04:
        if $r12 == null goto label06;

     label05:
        $r12 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: com.energysource.szj.android.DebugListener getDebugListener()>();

        virtualinvoke r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("debugListener", $r12);

     label06:
        $r13 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: java.lang.String getAppsec()>();

     label07:
        if $r13 == null goto label10;

        $r13 = "";

     label08:
        $r14 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: java.lang.String getAppsec()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

     label09:
        if $z0 == 0 goto label11;

     label10:
        $r13 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: void setAppsec(java.lang.String)>($r13);

     label11:
        $r13 = virtualinvoke $r3.<com.energysource.szj.embeded.SZJServiceInstance: java.lang.String getAppsec()>();

        virtualinvoke r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("appsec", $r13);

        interfaceinvoke r7.<com.energysource.szj.android.SZJModule: void initValue(java.util.concurrent.ConcurrentHashMap)>(r2);

        interfaceinvoke r7.<com.energysource.szj.android.SZJModule: void start()>();

     label12:
        return 1;

     label13:
        r1 := @caughtexception;

        staticinvoke <com.energysource.szj.android.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SZJClassLoad.java", "startModuleException:", r1);

        return 0;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label07 with label13;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.lang.Exception from label10 to label12 with label13;
    }

    public boolean stopModule()
    {
        com.energysource.szj.embeded.SZJClassLoad r0;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.Object $r4;
        com.energysource.szj.android.SZJModule r5;
        java.lang.Exception r1;
        com.energysource.szj.embeded.SZJServiceInstance $r2;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

        $r2 = staticinvoke <com.energysource.szj.embeded.SZJServiceInstance: com.energysource.szj.embeded.SZJServiceInstance getInstance()>();

        $r3 = virtualinvoke $r2.<com.energysource.szj.embeded.SZJServiceInstance: java.util.concurrent.ConcurrentHashMap getModulesMap()>();

        if $r3 == null goto label6;

     label1:
        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("bootableModule");

     label2:
        if $r4 == null goto label6;

     label3:
        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>("bootableModule");

        r5 = (com.energysource.szj.android.SZJModule) $r4;

        interfaceinvoke r5.<com.energysource.szj.android.SZJModule: void destory()>();

     label4:
        return 1;

     label5:
        r1 := @caughtexception;

        staticinvoke <com.energysource.szj.android.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SZJClassLoad.java", "stopModuleException:", r1);

        return 0;

     label6:
        return 1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public boolean unzipJar()
    {
        java.lang.Exception r1;
        java.io.File r2;
        com.energysource.szj.embeded.SZJClassLoad r0;
        java.lang.StringBuilder $r3;
        java.lang.Class $r5;
        java.lang.String $r4;
        java.lang.ClassLoader $r6;
        boolean $z0, $z1;
        java.io.InputStream $r7;

        r0 := @this: com.energysource.szj.embeded.SZJClassLoad;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r4 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/loadjar/");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean deleteDirectory(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r4 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/loadjar/");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean createDire(java.lang.String)>($r4);

        if $z0 == 0 goto label10;

     label01:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r7 = virtualinvoke $r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("modulejar.zip");

     label02:
        r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data/data/");

        $r4 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/loadjar/");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r4);

        staticinvoke <com.energysource.szj.embeded.utils.ZipUtil: void doExtract(java.io.InputStream,java.io.File)>($r7, r2);

     label04:
        $r3 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/data/");

        $r4 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/bakjar/");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = staticinvoke <com.energysource.szj.embeded.utils.FileUtils: boolean createDire(java.lang.String)>($r4);

     label06:
        if $z1 == 0 goto label10;

        r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/data/");

        $r4 = r0.<com.energysource.szj.embeded.SZJClassLoad: java.lang.String pkg>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/bakjar/");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r7 = virtualinvoke $r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("modulejar.zip");

        staticinvoke <com.energysource.szj.embeded.utils.ZipUtil: void doExtract(java.io.InputStream,java.io.File)>($r7, r2);

     label08:
        return $z0;

     label09:
        r1 := @caughtexception;

        staticinvoke <com.energysource.szj.android.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SZJClassLoad.java", "unzipjarException:", r1);

        return 0;

     label10:
        return $z0;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public static void <clinit>()
    {
        <com.energysource.szj.embeded.SZJClassLoad: java.lang.String TAG> = "SZJClassLoad.java";

        <com.energysource.szj.embeded.SZJClassLoad: int START_CLASSLOAD> = 1;

        return;
    }
}
