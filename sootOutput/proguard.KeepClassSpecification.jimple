public class proguard.KeepClassSpecification extends proguard.ClassSpecification
{
    public final boolean allowObfuscation;
    public final boolean allowOptimization;
    public final boolean allowShrinking;
    public final boolean markClasses;
    public final boolean markConditionally;

    public void <init>(boolean, boolean, boolean, boolean, boolean)
    {
        proguard.KeepClassSpecification r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: proguard.KeepClassSpecification;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 := @parameter2: boolean;

        $z3 := @parameter3: boolean;

        $z4 := @parameter4: boolean;

        specialinvoke r0.<proguard.ClassSpecification: void <init>()>();

        r0.<proguard.KeepClassSpecification: boolean markClasses> = $z0;

        r0.<proguard.KeepClassSpecification: boolean markConditionally> = $z1;

        r0.<proguard.KeepClassSpecification: boolean allowShrinking> = $z2;

        r0.<proguard.KeepClassSpecification: boolean allowOptimization> = $z3;

        r0.<proguard.KeepClassSpecification: boolean allowObfuscation> = $z4;

        return;
    }

    public void <init>(boolean, boolean, boolean, boolean, boolean, proguard.ClassSpecification)
    {
        proguard.ClassSpecification $r1;
        proguard.KeepClassSpecification r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: proguard.KeepClassSpecification;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 := @parameter2: boolean;

        $z3 := @parameter3: boolean;

        $z4 := @parameter4: boolean;

        $r1 := @parameter5: proguard.ClassSpecification;

        specialinvoke r0.<proguard.ClassSpecification: void <init>(proguard.ClassSpecification)>($r1);

        r0.<proguard.KeepClassSpecification: boolean markClasses> = $z0;

        r0.<proguard.KeepClassSpecification: boolean markConditionally> = $z1;

        r0.<proguard.KeepClassSpecification: boolean allowShrinking> = $z2;

        r0.<proguard.KeepClassSpecification: boolean allowOptimization> = $z3;

        r0.<proguard.KeepClassSpecification: boolean allowObfuscation> = $z4;

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $r1;
        proguard.KeepClassSpecification r0;

        r0 := @this: proguard.KeepClassSpecification;

        $r1 = specialinvoke r0.<proguard.ClassSpecification: java.lang.Object clone()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        proguard.KeepClassSpecification r0, $r4;
        boolean $z0, $z1;

        r0 := @this: proguard.KeepClassSpecification;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label2;

     label1:
        return 0;

     label2:
        $r4 = (proguard.KeepClassSpecification) $r1;

        $z0 = r0.<proguard.KeepClassSpecification: boolean markClasses>;

        $z1 = $r4.<proguard.KeepClassSpecification: boolean markClasses>;

        if $z0 != $z1 goto label3;

        $z0 = r0.<proguard.KeepClassSpecification: boolean markConditionally>;

        $z1 = $r4.<proguard.KeepClassSpecification: boolean markConditionally>;

        if $z0 != $z1 goto label3;

        $z0 = r0.<proguard.KeepClassSpecification: boolean allowShrinking>;

        $z1 = $r4.<proguard.KeepClassSpecification: boolean allowShrinking>;

        if $z0 != $z1 goto label3;

        $z0 = r0.<proguard.KeepClassSpecification: boolean allowOptimization>;

        $z1 = $r4.<proguard.KeepClassSpecification: boolean allowOptimization>;

        if $z0 != $z1 goto label3;

        $z0 = r0.<proguard.KeepClassSpecification: boolean allowObfuscation>;

        $z1 = $r4.<proguard.KeepClassSpecification: boolean allowObfuscation>;

        if $z0 != $z1 goto label3;

        $z0 = specialinvoke r0.<proguard.ClassSpecification: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        byte $b1, $b2;
        int $i0;
        proguard.KeepClassSpecification r0;
        boolean $z0, $z1;

        r0 := @this: proguard.KeepClassSpecification;

        $z0 = r0.<proguard.KeepClassSpecification: boolean markClasses>;

        if $z0 == 0 goto label06;

        $z0 = 0;

     label01:
        $z1 = r0.<proguard.KeepClassSpecification: boolean markConditionally>;

        if $z1 == 0 goto label07;

        $b1 = 0;

     label02:
        $b1 = $z0 ^ $b1;

        $z0 = r0.<proguard.KeepClassSpecification: boolean allowShrinking>;

        if $z0 == 0 goto label08;

        $b2 = 0;

     label03:
        $b1 = $b1 ^ $b2;

        $z0 = r0.<proguard.KeepClassSpecification: boolean allowOptimization>;

        if $z0 == 0 goto label09;

        $b2 = 0;

     label04:
        $b1 = $b1 ^ $b2;

        $z0 = r0.<proguard.KeepClassSpecification: boolean allowObfuscation>;

        if $z0 == 0 goto label10;

        $b2 = 0;

     label05:
        $b1 = $b1 ^ $b2;

        $i0 = specialinvoke r0.<proguard.ClassSpecification: int hashCode()>();

        $i0 = $b1 ^ $i0;

        return $i0;

     label06:
        $z0 = 1;

        goto label01;

     label07:
        $b1 = 2;

        goto label02;

     label08:
        $b2 = 4;

        goto label03;

     label09:
        $b2 = 8;

        goto label04;

     label10:
        $b2 = 16;

        goto label05;
    }
}
