public class io.vov.vitamio.MediaMetadataRetriever extends java.lang.Object
{
    private static boolean NATIVE_LIB_LOADED;
    private android.content.Context mContext;
    private android.content.res.AssetFileDescriptor mFD;

    static void <clinit>()
    {
        <io.vov.vitamio.MediaMetadataRetriever: boolean NATIVE_LIB_LOADED> = 0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.Object[] $r3;
        io.vov.vitamio.MediaMetadataRetriever r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r5;
        boolean $z0;

        r0 := @this: io.vov.vitamio.MediaMetadataRetriever;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<io.vov.vitamio.MediaMetadataRetriever: android.content.res.AssetFileDescriptor mFD> = null;

        r0.<io.vov.vitamio.MediaMetadataRetriever: android.content.Context mContext> = $r1;

        $z0 = <io.vov.vitamio.MediaMetadataRetriever: boolean NATIVE_LIB_LOADED>;

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <io.vov.vitamio.Vitamio: java.lang.String getLibraryPath()>();

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r2;

        staticinvoke <io.vov.utils.Log: void i(java.lang.String,java.lang.Object[])>("LIB ROOT: %s", $r3);

        $r4 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libstlport_shared.so");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: void load(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libvscanner.so");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: void load(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("libffmpeg.so");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <io.vov.vitamio.MediaMetadataRetriever: boolean loadFFmpeg_native(java.lang.String)>($r2);

        <io.vov.vitamio.MediaMetadataRetriever: boolean NATIVE_LIB_LOADED> = 1;

     label1:
        specialinvoke r0.<io.vov.vitamio.MediaMetadataRetriever: void native_init()>();

        return;
    }

    private native void _release();

    private void closeFD()
    {
        io.vov.vitamio.MediaMetadataRetriever r0;
        android.content.res.AssetFileDescriptor $r1;
        java.lang.Throwable $r2;

        r0 := @this: io.vov.vitamio.MediaMetadataRetriever;

        $r1 = r0.<io.vov.vitamio.MediaMetadataRetriever: android.content.res.AssetFileDescriptor mFD>;

        if $r1 == null goto label4;

        $r1 = r0.<io.vov.vitamio.MediaMetadataRetriever: android.content.res.AssetFileDescriptor mFD>;

     label1:
        virtualinvoke $r1.<android.content.res.AssetFileDescriptor: void close()>();

     label2:
        r0.<io.vov.vitamio.MediaMetadataRetriever: android.content.res.AssetFileDescriptor mFD> = null;

        return;

     label3:
        $r2 := @caughtexception;

        goto label2;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static native boolean loadFFmpeg_native(java.lang.String);

    private final native void native_finalize();

    private final native void native_init();

    public native java.lang.String extractMetadata(int) throws java.lang.IllegalStateException;

    protected void finalize() throws java.lang.Throwable
    {
        io.vov.vitamio.MediaMetadataRetriever r0;
        java.lang.Throwable $r1;
        boolean $z0;

        r0 := @this: io.vov.vitamio.MediaMetadataRetriever;

     label1:
        $z0 = <io.vov.vitamio.MediaMetadataRetriever: boolean NATIVE_LIB_LOADED>;

     label2:
        if $z0 == 0 goto label4;

     label3:
        specialinvoke r0.<io.vov.vitamio.MediaMetadataRetriever: void native_finalize()>();

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label5:
        $r1 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public native android.graphics.Bitmap getFrameAtTime(long) throws java.lang.IllegalStateException;

    public void release()
    {
        io.vov.vitamio.MediaMetadataRetriever r0;

        r0 := @this: io.vov.vitamio.MediaMetadataRetriever;

        specialinvoke r0.<io.vov.vitamio.MediaMetadataRetriever: void _release()>();

        specialinvoke r0.<io.vov.vitamio.MediaMetadataRetriever: void closeFD()>();

        return;
    }

    public void setDataSource(android.content.Context, android.net.Uri) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.SecurityException, java.lang.IllegalStateException
    {
        android.content.res.AssetFileDescriptor $r7;
        android.content.Context $r1;
        android.os.ParcelFileDescriptor $r8;
        java.lang.Object[] $r10;
        io.vov.vitamio.MediaMetadataRetriever r0;
        android.net.Uri $r2;
        java.lang.IllegalArgumentException $r4;
        java.lang.Exception r3;
        android.content.ContentResolver $r6;
        java.io.FileDescriptor $r9;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: io.vov.vitamio.MediaMetadataRetriever;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.net.Uri;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label2:
        $r5 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        if $r5 == null goto label3;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 == 0 goto label4;

     label3:
        $r5 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        $r5 = staticinvoke <io.vov.utils.FileUtils: java.lang.String getPath(java.lang.String)>($r5);

        virtualinvoke r0.<io.vov.vitamio.MediaMetadataRetriever: void setDataSource(java.lang.String)>($r5);

        return;

     label4:
        $r6 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke $r6.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>($r2, "r");

        r0.<io.vov.vitamio.MediaMetadataRetriever: android.content.res.AssetFileDescriptor mFD> = $r7;

        $r7 = r0.<io.vov.vitamio.MediaMetadataRetriever: android.content.res.AssetFileDescriptor mFD>;

     label5:
        if $r7 == null goto label9;

     label6:
        $r7 = r0.<io.vov.vitamio.MediaMetadataRetriever: android.content.res.AssetFileDescriptor mFD>;

        $r8 = virtualinvoke $r7.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>();

        $r9 = virtualinvoke $r8.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke r0.<io.vov.vitamio.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)>($r9);

     label7:
        return;

     label8:
        r3 := @caughtexception;

        specialinvoke r0.<io.vov.vitamio.MediaMetadataRetriever: void closeFD()>();

        $r10 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        $r10[0] = $r5;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Object[])>("Couldn\'t open file on client side, trying server side %s", $r10);

        $r5 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r0.<io.vov.vitamio.MediaMetadataRetriever: void setDataSource(java.lang.String)>($r5);

     label9:
        return;

        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public native void setDataSource(java.io.FileDescriptor) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;

    public native void setDataSource(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
}
