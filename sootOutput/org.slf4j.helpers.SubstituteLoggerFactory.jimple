public class org.slf4j.helpers.SubstituteLoggerFactory extends java.lang.Object implements org.slf4j.ILoggerFactory
{
    final java.util.List loggerNameList;

    public void <init>()
    {
        org.slf4j.helpers.SubstituteLoggerFactory r0;
        java.util.ArrayList $r1;

        r0 := @this: org.slf4j.helpers.SubstituteLoggerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.slf4j.helpers.SubstituteLoggerFactory: java.util.List loggerNameList> = $r1;

        return;
    }

    public org.slf4j.Logger getLogger(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.util.List $r2, $r3;
        org.slf4j.helpers.NOPLogger r5;
        java.lang.String $r1;
        org.slf4j.helpers.SubstituteLoggerFactory r0;

        r0 := @this: org.slf4j.helpers.SubstituteLoggerFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.slf4j.helpers.SubstituteLoggerFactory: java.util.List loggerNameList>;

        entermonitor $r2;

     label1:
        $r3 = r0.<org.slf4j.helpers.SubstituteLoggerFactory: java.util.List loggerNameList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        exitmonitor $r2;

     label2:
        r5 = <org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER>;

        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor $r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getLoggerNameList()
    {
        java.lang.Throwable $r4;
        java.util.List $r2, $r3;
        org.slf4j.helpers.SubstituteLoggerFactory r0;
        java.util.ArrayList r1;

        r0 := @this: org.slf4j.helpers.SubstituteLoggerFactory;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<org.slf4j.helpers.SubstituteLoggerFactory: java.util.List loggerNameList>;

        entermonitor $r2;

     label1:
        $r3 = r0.<org.slf4j.helpers.SubstituteLoggerFactory: java.util.List loggerNameList>;

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        exitmonitor $r2;

     label2:
        return r1;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
