public class it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE extends java.lang.Object
{
    private static it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE singleton__;

    static void <clinit>()
    {
        <it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE singleton__> = null;

        return;
    }

    private void <init>()
    {
        it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE getInstance()
    {
        it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE $r0;

        $r0 = <it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE singleton__>;

        if $r0 != null goto label1;

        $r0 = new it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE;

        specialinvoke $r0.<it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE: void <init>()>();

        <it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE singleton__> = $r0;

     label1:
        $r0 = <it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE singleton__>;

        return $r0;
    }

    public java.lang.String getLockingType()
    {
        android.database.sqlite.SQLiteDatabase $r3;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE r0;
        java.lang.String $r4;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager $r2;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE;

        $r1 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE getInstance()>();

        $r2 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager getInstance()>();

        $r3 = virtualinvoke $r2.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.database.sqlite.SQLiteDatabase getDB(java.lang.String,int)>("crypto.db", 1);

        $r4 = virtualinvoke $r1.<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: java.lang.String getSystemData(java.lang.String,android.database.sqlite.SQLiteDatabase)>("LOCKMODE", $r3);

        return $r4;
    }

    public boolean getOrderByMostUsed()
    {
        android.database.sqlite.SQLiteDatabase $r3;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE r0;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE $r1;
        int $i0;
        java.lang.String $r5;
        java.lang.Integer $r4;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager $r2;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE;

        $r1 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE getInstance()>();

        $r2 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager getInstance()>();

        $r3 = virtualinvoke $r2.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.database.sqlite.SQLiteDatabase getDB(java.lang.String,int)>("crypto.db", 1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r5 = virtualinvoke $r1.<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE: java.lang.String getPref(android.database.sqlite.SQLiteDatabase,java.lang.Integer)>($r3, $r4);

        if $r5 == null goto label1;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void invalidateCaches()
    {
        it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE r0;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE;

        $r1 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE getInstance()>();

        virtualinvoke $r1.<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: void invalidateCache()>();

        return;
    }

    public void resetTable(java.lang.String, java.lang.String, android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r3;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonManagerBE $r4;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE r0;
        java.lang.String $r1, $r2;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.database.sqlite.SQLiteDatabase;

        $r4 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonManagerBE getInstance()>();

        virtualinvoke $r4.<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonManagerBE: void resetTable(java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>($r1, $r2, $r3);

        return;
    }
}
