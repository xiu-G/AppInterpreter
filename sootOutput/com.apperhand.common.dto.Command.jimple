public class com.apperhand.common.dto.Command extends com.apperhand.common.dto.BaseDTO
{
    private static final long serialVersionUID;
    private com.apperhand.common.dto.Command$Commands command;
    private java.lang.String id;
    private java.util.Map parameters;

    public void <init>()
    {
        com.apperhand.common.dto.Command r0;

        r0 := @this: com.apperhand.common.dto.Command;

        specialinvoke r0.<com.apperhand.common.dto.Command: void <init>(com.apperhand.common.dto.Command$Commands)>(null);

        return;
    }

    public void <init>(com.apperhand.common.dto.Command$Commands)
    {
        com.apperhand.common.dto.Command r0;
        com.apperhand.common.dto.Command$Commands $r1;
        java.util.UUID $r2;
        java.lang.String $r3;

        r0 := @this: com.apperhand.common.dto.Command;

        $r1 := @parameter0: com.apperhand.common.dto.Command$Commands;

        $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r3 = virtualinvoke $r2.<java.util.UUID: java.lang.String toString()>();

        specialinvoke r0.<com.apperhand.common.dto.Command: void <init>(com.apperhand.common.dto.Command$Commands,java.lang.String,java.util.Map)>($r1, $r3, null);

        return;
    }

    public void <init>(com.apperhand.common.dto.Command$Commands, java.lang.String)
    {
        java.lang.String $r2;
        com.apperhand.common.dto.Command r0;
        com.apperhand.common.dto.Command$Commands $r1;

        r0 := @this: com.apperhand.common.dto.Command;

        $r1 := @parameter0: com.apperhand.common.dto.Command$Commands;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.apperhand.common.dto.Command: void <init>(com.apperhand.common.dto.Command$Commands,java.lang.String,java.util.Map)>($r1, $r2, null);

        return;
    }

    public void <init>(com.apperhand.common.dto.Command$Commands, java.lang.String, java.util.Map)
    {
        com.apperhand.common.dto.Command r0;
        com.apperhand.common.dto.Command$Commands $r1;
        java.util.Map $r3;
        java.lang.String $r2;

        r0 := @this: com.apperhand.common.dto.Command;

        $r1 := @parameter0: com.apperhand.common.dto.Command$Commands;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Map;

        specialinvoke r0.<com.apperhand.common.dto.BaseDTO: void <init>()>();

        r0.<com.apperhand.common.dto.Command: com.apperhand.common.dto.Command$Commands command> = $r1;

        r0.<com.apperhand.common.dto.Command: java.lang.String id> = $r2;

        r0.<com.apperhand.common.dto.Command: java.util.Map parameters> = null;

        return;
    }

    public void <init>(com.apperhand.common.dto.Command)
    {
        com.apperhand.common.dto.Command r0, $r1;
        com.apperhand.common.dto.Command$Commands $r2;
        java.util.Map $r4;
        java.lang.String $r3;

        r0 := @this: com.apperhand.common.dto.Command;

        $r1 := @parameter0: com.apperhand.common.dto.Command;

        $r2 = $r1.<com.apperhand.common.dto.Command: com.apperhand.common.dto.Command$Commands command>;

        $r3 = $r1.<com.apperhand.common.dto.Command: java.lang.String id>;

        $r4 = $r1.<com.apperhand.common.dto.Command: java.util.Map parameters>;

        specialinvoke r0.<com.apperhand.common.dto.Command: void <init>(com.apperhand.common.dto.Command$Commands,java.lang.String,java.util.Map)>($r2, $r3, $r4);

        return;
    }

    public static com.apperhand.common.dto.Command$Commands getCommandByName(java.lang.String)
    {
        com.apperhand.common.dto.Command$Commands[] $r1;
        com.apperhand.common.dto.Command$Commands $r2;
        int $i0, $i1;
        java.lang.String $r0, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = staticinvoke <com.apperhand.common.dto.Command$Commands: com.apperhand.common.dto.Command$Commands[] values()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r2 = $r1[$i1];

        $r3 = virtualinvoke $r2.<com.apperhand.common.dto.Command$Commands: java.lang.String getString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 != 0 goto label5;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return null;

     label5:
        return $r2;
    }

    public com.apperhand.common.dto.Command$Commands getCommand()
    {
        com.apperhand.common.dto.Command r0;
        com.apperhand.common.dto.Command$Commands r1;

        r0 := @this: com.apperhand.common.dto.Command;

        r1 = r0.<com.apperhand.common.dto.Command: com.apperhand.common.dto.Command$Commands command>;

        return r1;
    }

    public java.lang.String getId()
    {
        java.lang.String r1;
        com.apperhand.common.dto.Command r0;

        r0 := @this: com.apperhand.common.dto.Command;

        r1 = r0.<com.apperhand.common.dto.Command: java.lang.String id>;

        return r1;
    }

    public java.util.Map getParameters()
    {
        com.apperhand.common.dto.Command r0;
        java.util.Map r1;

        r0 := @this: com.apperhand.common.dto.Command;

        r1 = r0.<com.apperhand.common.dto.Command: java.util.Map parameters>;

        return r1;
    }

    public void setCommand(com.apperhand.common.dto.Command$Commands)
    {
        com.apperhand.common.dto.Command r0;
        com.apperhand.common.dto.Command$Commands $r1;

        r0 := @this: com.apperhand.common.dto.Command;

        $r1 := @parameter0: com.apperhand.common.dto.Command$Commands;

        r0.<com.apperhand.common.dto.Command: com.apperhand.common.dto.Command$Commands command> = $r1;

        return;
    }

    public void setId(java.lang.String)
    {
        java.lang.String $r1;
        com.apperhand.common.dto.Command r0;

        r0 := @this: com.apperhand.common.dto.Command;

        $r1 := @parameter0: java.lang.String;

        r0.<com.apperhand.common.dto.Command: java.lang.String id> = $r1;

        return;
    }

    public void setParameters(java.util.Map)
    {
        com.apperhand.common.dto.Command r0;
        java.util.Map $r1;

        r0 := @this: com.apperhand.common.dto.Command;

        $r1 := @parameter0: java.util.Map;

        r0.<com.apperhand.common.dto.Command: java.util.Map parameters> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        com.apperhand.common.dto.Command r0;
        com.apperhand.common.dto.Command$Commands $r2;
        java.util.Map $r4;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;

        r0 := @this: com.apperhand.common.dto.Command;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Command [command=");

        $r2 = r0.<com.apperhand.common.dto.Command: com.apperhand.common.dto.Command$Commands command>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id=");

        $r3 = r0.<com.apperhand.common.dto.Command: java.lang.String id>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", parameters=");

        $r4 = r0.<com.apperhand.common.dto.Command: java.util.Map parameters>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <com.apperhand.common.dto.Command: long serialVersionUID> = 4898626949566617224L;

        return;
    }
}
