public class twitter4j.management.APIStatisticsOpenMBean extends java.lang.Object implements javax.management.DynamicMBean
{
    private static final java.lang.String[] ITEM_DESCRIPTIONS;
    private static final java.lang.String[] ITEM_NAMES;
    private static final javax.management.openmbean.OpenType[] ITEM_TYPES;
    private final twitter4j.management.APIStatisticsMBean API_STATISTICS;
    private final javax.management.openmbean.TabularType API_STATISTICS_TYPE;
    private final javax.management.openmbean.CompositeType METHOD_STATS_TYPE;

    static void <clinit>()
    {
        java.lang.Object[] $r1;
        javax.management.openmbean.OpenType[] $r3;
        javax.management.openmbean.SimpleType $r2;
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "methodName";

        $r0[1] = "callCount";

        $r0[2] = "errorCount";

        $r0[3] = "totalTime";

        $r0[4] = "avgTime";

        <twitter4j.management.APIStatisticsOpenMBean: java.lang.String[] ITEM_NAMES> = $r0;

        $r1 = newarray (javax.management.openmbean.OpenType)[5];

        $r2 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType STRING>;

        $r1[0] = $r2;

        $r2 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType LONG>;

        $r1[1] = $r2;

        $r2 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType LONG>;

        $r1[2] = $r2;

        $r2 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType LONG>;

        $r1[3] = $r2;

        $r2 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType LONG>;

        $r1[4] = $r2;

        $r3 = (javax.management.openmbean.OpenType[]) $r1;

        <twitter4j.management.APIStatisticsOpenMBean: javax.management.openmbean.OpenType[] ITEM_TYPES> = $r3;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "The method name";

        $r0[1] = "The number of times this method has been called";

        $r0[2] = "The number of calls that failed";

        $r0[3] = "The total amount of time spent invoking this method in milliseconds";

        $r0[4] = "The average amount of time spent invoking this method in milliseconds";

        <twitter4j.management.APIStatisticsOpenMBean: java.lang.String[] ITEM_DESCRIPTIONS> = $r0;

        return;
    }

    public void <init>(twitter4j.management.APIStatistics)
    {
        java.lang.Throwable $r7;
        javax.management.openmbean.CompositeType $r3;
        javax.management.openmbean.OpenType[] $r2;
        java.lang.String[] $r4, $r5;
        java.lang.RuntimeException $r8;
        twitter4j.management.APIStatistics $r1;
        javax.management.openmbean.TabularType $r6;
        twitter4j.management.APIStatisticsOpenMBean r0;

        r0 := @this: twitter4j.management.APIStatisticsOpenMBean;

        $r1 := @parameter0: twitter4j.management.APIStatistics;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.management.APIStatisticsOpenMBean: twitter4j.management.APIStatisticsMBean API_STATISTICS> = $r1;

        $r3 = new javax.management.openmbean.CompositeType;

        $r4 = <twitter4j.management.APIStatisticsOpenMBean: java.lang.String[] ITEM_NAMES>;

        $r5 = <twitter4j.management.APIStatisticsOpenMBean: java.lang.String[] ITEM_DESCRIPTIONS>;

        $r2 = <twitter4j.management.APIStatisticsOpenMBean: javax.management.openmbean.OpenType[] ITEM_TYPES>;

     label1:
        specialinvoke $r3.<javax.management.openmbean.CompositeType: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],javax.management.openmbean.OpenType[])>("method statistics", "method statistics", $r4, $r5, $r2);

     label2:
        r0.<twitter4j.management.APIStatisticsOpenMBean: javax.management.openmbean.CompositeType METHOD_STATS_TYPE> = $r3;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "methodName";

        $r6 = new javax.management.openmbean.TabularType;

        $r3 = r0.<twitter4j.management.APIStatisticsOpenMBean: javax.management.openmbean.CompositeType METHOD_STATS_TYPE>;

     label3:
        specialinvoke $r6.<javax.management.openmbean.TabularType: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String[])>("API statistics", "list of methods", $r3, $r4);

     label4:
        r0.<twitter4j.management.APIStatisticsOpenMBean: javax.management.openmbean.TabularType API_STATISTICS_TYPE> = $r6;

        return;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch javax.management.openmbean.OpenDataException from label1 to label2 with label5;
        catch javax.management.openmbean.OpenDataException from label3 to label4 with label5;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        java.lang.Throwable $r8;
        javax.management.AttributeNotFoundException $r7;
        twitter4j.management.APIStatisticsMBean $r3;
        long $l0;
        java.lang.Long $r4;
        javax.management.openmbean.TabularDataSupport $r2;
        java.lang.StringBuilder $r5, $r6;
        java.lang.String $r1;
        twitter4j.management.APIStatisticsOpenMBean r0;
        boolean $z0;

        r0 := @this: twitter4j.management.APIStatisticsOpenMBean;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("statisticsTable");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<twitter4j.management.APIStatisticsOpenMBean: javax.management.openmbean.TabularDataSupport getStatistics()>();

        return $r2;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("callCount");

        if $z0 == 0 goto label2;

        $r3 = r0.<twitter4j.management.APIStatisticsOpenMBean: twitter4j.management.APIStatisticsMBean API_STATISTICS>;

        $l0 = interfaceinvoke $r3.<twitter4j.management.APIStatisticsMBean: long getCallCount()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r4;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("errorCount");

        if $z0 == 0 goto label3;

        $r3 = r0.<twitter4j.management.APIStatisticsOpenMBean: twitter4j.management.APIStatisticsMBean API_STATISTICS>;

        $l0 = interfaceinvoke $r3.<twitter4j.management.APIStatisticsMBean: long getErrorCount()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r4;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("totalTime");

        if $z0 == 0 goto label4;

        $r3 = r0.<twitter4j.management.APIStatisticsOpenMBean: twitter4j.management.APIStatisticsMBean API_STATISTICS>;

        $l0 = interfaceinvoke $r3.<twitter4j.management.APIStatisticsMBean: long getTotalTime()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r4;

     label4:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("averageTime");

        if $z0 == 0 goto label5;

        $r3 = r0.<twitter4j.management.APIStatisticsOpenMBean: twitter4j.management.APIStatisticsMBean API_STATISTICS>;

        $l0 = interfaceinvoke $r3.<twitter4j.management.APIStatisticsMBean: long getAverageTime()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r4;

     label5:
        $r7 = new javax.management.AttributeNotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot find ");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute ");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<javax.management.AttributeNotFoundException: void <init>(java.lang.String)>($r1);

        $r8 = (java.lang.Throwable) $r7;

        throw $r8;
    }

    public javax.management.AttributeList getAttributes(java.lang.String[])
    {
        java.lang.String[] $r1;
        javax.management.AttributeList $r2;
        java.lang.Exception $r6;
        javax.management.Attribute $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String $r5;
        twitter4j.management.APIStatisticsOpenMBean r0;

        r0 := @this: twitter4j.management.APIStatisticsOpenMBean;

        $r1 := @parameter0: java.lang.String[];

        $r2 = new javax.management.AttributeList;

        specialinvoke $r2.<javax.management.AttributeList: void <init>()>();

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return $r2;

     label1:
        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label8;

        $r5 = $r1[$i1];

     label3:
        $r4 = virtualinvoke r0.<twitter4j.management.APIStatisticsOpenMBean: java.lang.Object getAttribute(java.lang.String)>($r5);

     label4:
        $r3 = new javax.management.Attribute;

     label5:
        specialinvoke $r3.<javax.management.Attribute: void <init>(java.lang.String,java.lang.Object)>($r5, $r4);

        virtualinvoke $r2.<javax.management.AttributeList: void add(javax.management.Attribute)>($r3);

     label6:
        $i1 = $i1 + 1;

        goto label2;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        goto label6;

     label8:
        return $r2;

        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public javax.management.MBeanInfo getMBeanInfo()
    {
        javax.management.openmbean.OpenMBeanOperationInfoSupport[] $r3;
        javax.management.openmbean.OpenMBeanParameterInfo[] $r15;
        javax.management.openmbean.SimpleType $r5;
        javax.management.openmbean.OpenMBeanAttributeInfo[] $r16;
        javax.management.openmbean.OpenMBeanParameterInfoSupport[] $r7;
        java.lang.String $r9;
        javax.management.openmbean.OpenMBeanConstructorInfoSupport[] $r2;
        javax.management.openmbean.OpenMBeanAttributeInfoSupport[] $r1;
        javax.management.MBeanNotificationInfo[] $r4;
        javax.management.openmbean.OpenMBeanInfoSupport $r13;
        javax.management.openmbean.OpenMBeanAttributeInfoSupport $r10;
        javax.management.openmbean.OpenMBeanConstructorInfo[] $r17;
        javax.management.openmbean.OpenMBeanOperationInfoSupport $r12;
        javax.management.MBeanInfo $r19;
        javax.management.openmbean.OpenMBeanConstructorInfoSupport $r11;
        javax.management.openmbean.OpenType $r14;
        javax.management.openmbean.TabularType $r6;
        javax.management.openmbean.OpenMBeanOperationInfo[] $r18;
        java.lang.Class $r8;
        twitter4j.management.APIStatisticsOpenMBean r0;

        r0 := @this: twitter4j.management.APIStatisticsOpenMBean;

        $r1 = newarray (javax.management.openmbean.OpenMBeanAttributeInfoSupport)[5];

        $r2 = newarray (javax.management.openmbean.OpenMBeanConstructorInfoSupport)[1];

        $r3 = newarray (javax.management.openmbean.OpenMBeanOperationInfoSupport)[1];

        $r4 = newarray (javax.management.MBeanNotificationInfo)[0];

        $r10 = new javax.management.openmbean.OpenMBeanAttributeInfoSupport;

        $r5 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType LONG>;

        $r14 = (javax.management.openmbean.OpenType) $r5;

        specialinvoke $r10.<javax.management.openmbean.OpenMBeanAttributeInfoSupport: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.OpenType,boolean,boolean,boolean)>("callCount", "Total number of API calls", $r14, 1, 0, 0);

        $r1[0] = $r10;

        $r10 = new javax.management.openmbean.OpenMBeanAttributeInfoSupport;

        $r5 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType LONG>;

        $r14 = (javax.management.openmbean.OpenType) $r5;

        specialinvoke $r10.<javax.management.openmbean.OpenMBeanAttributeInfoSupport: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.OpenType,boolean,boolean,boolean)>("errorCount", "The number of failed API calls", $r14, 1, 0, 0);

        $r1[1] = $r10;

        $r10 = new javax.management.openmbean.OpenMBeanAttributeInfoSupport;

        $r5 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType LONG>;

        $r14 = (javax.management.openmbean.OpenType) $r5;

        specialinvoke $r10.<javax.management.openmbean.OpenMBeanAttributeInfoSupport: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.OpenType,boolean,boolean,boolean)>("averageTime", "Average time spent invoking any API method", $r14, 1, 0, 0);

        $r1[2] = $r10;

        $r10 = new javax.management.openmbean.OpenMBeanAttributeInfoSupport;

        $r5 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType LONG>;

        $r14 = (javax.management.openmbean.OpenType) $r5;

        specialinvoke $r10.<javax.management.openmbean.OpenMBeanAttributeInfoSupport: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.OpenType,boolean,boolean,boolean)>("totalTime", "Average time spent invoking any API method", $r14, 1, 0, 0);

        $r1[3] = $r10;

        $r10 = new javax.management.openmbean.OpenMBeanAttributeInfoSupport;

        $r6 = r0.<twitter4j.management.APIStatisticsOpenMBean: javax.management.openmbean.TabularType API_STATISTICS_TYPE>;

        $r14 = (javax.management.openmbean.OpenType) $r6;

        specialinvoke $r10.<javax.management.openmbean.OpenMBeanAttributeInfoSupport: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.OpenType,boolean,boolean,boolean)>("statisticsTable", "Table of statisics for all API methods", $r14, 1, 0, 0);

        $r1[4] = $r10;

        $r11 = new javax.management.openmbean.OpenMBeanConstructorInfoSupport;

        $r7 = newarray (javax.management.openmbean.OpenMBeanParameterInfoSupport)[0];

        $r15 = (javax.management.openmbean.OpenMBeanParameterInfo[]) $r7;

        specialinvoke $r11.<javax.management.openmbean.OpenMBeanConstructorInfoSupport: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.OpenMBeanParameterInfo[])>("APIStatisticsOpenMBean", "Constructs an APIStatisticsOpenMBean instance", $r15);

        $r2[0] = $r11;

        $r7 = newarray (javax.management.openmbean.OpenMBeanParameterInfoSupport)[0];

        $r12 = new javax.management.openmbean.OpenMBeanOperationInfoSupport;

        $r5 = <javax.management.openmbean.SimpleType: javax.management.openmbean.SimpleType VOID>;

        $r15 = (javax.management.openmbean.OpenMBeanParameterInfo[]) $r7;

        $r14 = (javax.management.openmbean.OpenType) $r5;

        specialinvoke $r12.<javax.management.openmbean.OpenMBeanOperationInfoSupport: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.OpenMBeanParameterInfo[],javax.management.openmbean.OpenType,int)>("reset", "reset the statistics", $r15, $r14, 0);

        $r3[0] = $r12;

        $r13 = new javax.management.openmbean.OpenMBeanInfoSupport;

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r16 = (javax.management.openmbean.OpenMBeanAttributeInfo[]) $r1;

        $r17 = (javax.management.openmbean.OpenMBeanConstructorInfo[]) $r2;

        $r18 = (javax.management.openmbean.OpenMBeanOperationInfo[]) $r3;

        specialinvoke $r13.<javax.management.openmbean.OpenMBeanInfoSupport: void <init>(java.lang.String,java.lang.String,javax.management.openmbean.OpenMBeanAttributeInfo[],javax.management.openmbean.OpenMBeanConstructorInfo[],javax.management.openmbean.OpenMBeanOperationInfo[],javax.management.MBeanNotificationInfo[])>($r9, "API Statistics Open MBean", $r16, $r17, $r18, $r4);

        $r19 = (javax.management.MBeanInfo) $r13;

        return $r19;
    }

    public javax.management.openmbean.TabularDataSupport getStatistics()
    {
        java.lang.Throwable $r13, $r14;
        java.lang.Object[] $r8;
        long $l0;
        java.lang.String[] $r12;
        java.lang.Iterable $r4;
        java.lang.Long $r10;
        java.lang.String $r9;
        javax.management.openmbean.CompositeDataSupport $r16;
        boolean $z0;
        javax.management.openmbean.CompositeType $r11;
        java.util.Iterator $r5;
        twitter4j.management.APIStatisticsMBean $r3;
        javax.management.openmbean.CompositeData $r18;
        java.lang.RuntimeException $r17;
        twitter4j.management.InvocationStatistics $r7;
        javax.management.openmbean.TabularType $r2;
        javax.management.openmbean.TabularDataSupport $r1, $r15;
        java.lang.Object $r6;
        twitter4j.management.APIStatisticsOpenMBean r0;

        r0 := @this: twitter4j.management.APIStatisticsOpenMBean;

        entermonitor r0;

     label01:
        $r15 = new javax.management.openmbean.TabularDataSupport;

        $r1 = $r15;

        $r2 = r0.<twitter4j.management.APIStatisticsOpenMBean: javax.management.openmbean.TabularType API_STATISTICS_TYPE>;

        specialinvoke $r15.<javax.management.openmbean.TabularDataSupport: void <init>(javax.management.openmbean.TabularType)>($r2);

        $r3 = r0.<twitter4j.management.APIStatisticsOpenMBean: twitter4j.management.APIStatisticsMBean API_STATISTICS>;

        $r4 = interfaceinvoke $r3.<twitter4j.management.APIStatisticsMBean: java.lang.Iterable getInvocationStatistics()>();

        $r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (twitter4j.management.InvocationStatistics) $r6;

        $r8 = newarray (java.lang.Object)[5];

        $r9 = interfaceinvoke $r7.<twitter4j.management.InvocationStatistics: java.lang.String getName()>();

        $r8[0] = $r9;

        $l0 = interfaceinvoke $r7.<twitter4j.management.InvocationStatistics: long getCallCount()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8[1] = $r10;

        $l0 = interfaceinvoke $r7.<twitter4j.management.InvocationStatistics: long getErrorCount()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8[2] = $r10;

        $l0 = interfaceinvoke $r7.<twitter4j.management.InvocationStatistics: long getTotalTime()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8[3] = $r10;

        $l0 = interfaceinvoke $r7.<twitter4j.management.InvocationStatistics: long getAverageTime()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r8[4] = $r10;

     label03:
        $r16 = new javax.management.openmbean.CompositeDataSupport;

        $r11 = r0.<twitter4j.management.APIStatisticsOpenMBean: javax.management.openmbean.CompositeType METHOD_STATS_TYPE>;

        $r12 = <twitter4j.management.APIStatisticsOpenMBean: java.lang.String[] ITEM_NAMES>;

     label04:
        specialinvoke $r16.<javax.management.openmbean.CompositeDataSupport: void <init>(javax.management.openmbean.CompositeType,java.lang.String[],java.lang.Object[])>($r11, $r12, $r8);

     label05:
        $r18 = (javax.management.openmbean.CompositeData) $r16;

     label06:
        virtualinvoke $r1.<javax.management.openmbean.TabularDataSupport: void put(javax.management.openmbean.CompositeData)>($r18);

     label07:
        goto label02;

     label08:
        $r13 := @caughtexception;

     label09:
        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

        throw $r17;

     label10:
        $r14 := @caughtexception;

        exitmonitor r0;

        throw $r14;

     label11:
        exitmonitor r0;

        return $r1;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch javax.management.openmbean.OpenDataException from label04 to label05 with label08;
        catch javax.management.openmbean.OpenDataException from label06 to label07 with label08;
        catch java.lang.Throwable from label03 to label07 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public java.lang.Object invoke(java.lang.String, java.lang.Object[], java.lang.String[])
    {
        java.lang.Throwable $r8;
        java.lang.Object[] $r2;
        java.lang.NoSuchMethodException $r5;
        java.lang.String[] $r3;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r1;
        twitter4j.management.APIStatisticsOpenMBean r0;
        javax.management.ReflectionException $r7;
        boolean $z0;

        r0 := @this: twitter4j.management.APIStatisticsOpenMBean;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        $r3 := @parameter2: java.lang.String[];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("reset");

        if $z0 == 0 goto label1;

        virtualinvoke r0.<twitter4j.management.APIStatisticsOpenMBean: void reset()>();

        return "Statistics reset";

     label1:
        $r7 = new javax.management.ReflectionException;

        $r5 = new java.lang.NoSuchMethodException;

        specialinvoke $r5.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot find the operation ");

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<javax.management.ReflectionException: void <init>(java.lang.Exception,java.lang.String)>($r5, $r1);

        $r8 = (java.lang.Throwable) $r7;

        throw $r8;
    }

    public void reset()
    {
        twitter4j.management.APIStatisticsMBean $r1;
        twitter4j.management.APIStatisticsOpenMBean r0;

        r0 := @this: twitter4j.management.APIStatisticsOpenMBean;

        $r1 = r0.<twitter4j.management.APIStatisticsOpenMBean: twitter4j.management.APIStatisticsMBean API_STATISTICS>;

        interfaceinvoke $r1.<twitter4j.management.APIStatisticsMBean: void reset()>();

        return;
    }

    public void setAttribute(javax.management.Attribute)
    {
        java.lang.Throwable $r3;
        javax.management.AttributeNotFoundException $r2;
        javax.management.Attribute $r1;
        twitter4j.management.APIStatisticsOpenMBean r0;

        r0 := @this: twitter4j.management.APIStatisticsOpenMBean;

        $r1 := @parameter0: javax.management.Attribute;

        $r2 = new javax.management.AttributeNotFoundException;

        specialinvoke $r2.<javax.management.AttributeNotFoundException: void <init>(java.lang.String)>("No attributes can be set in this MBean");

        $r3 = (java.lang.Throwable) $r2;

        throw $r3;
    }

    public javax.management.AttributeList setAttributes(javax.management.AttributeList)
    {
        javax.management.AttributeList $r1;
        twitter4j.management.APIStatisticsOpenMBean r0;

        r0 := @this: twitter4j.management.APIStatisticsOpenMBean;

        $r1 := @parameter0: javax.management.AttributeList;

        $r1 = new javax.management.AttributeList;

        specialinvoke $r1.<javax.management.AttributeList: void <init>()>();

        return $r1;
    }
}
