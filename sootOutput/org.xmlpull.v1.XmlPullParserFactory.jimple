public class org.xmlpull.v1.XmlPullParserFactory extends java.lang.Object
{
    public static final java.lang.String PROPERTY_NAME;
    private static final java.lang.String RESOURCE_NAME;
    static final java.lang.Class referenceContextClass;
    protected java.lang.String classNamesLocation;
    protected java.util.Hashtable features;
    protected java.util.Vector parserClasses;
    protected java.util.Vector serializerClasses;

    static void <clinit>()
    {
        java.lang.Class $r1;
        org.xmlpull.v1.XmlPullParserFactory r0;

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String RESOURCE_NAME> = "/META-INF/services/org.xmlpull.v1.XmlPullParserFactory";

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String PROPERTY_NAME> = "org.xmlpull.v1.XmlPullParserFactory";

        r0 = new org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.Class referenceContextClass> = $r1;

        return;
    }

    protected void <init>()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.util.Hashtable $r1;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features> = $r1;

        return;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;

        $r0 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class)>(null, null);

        return $r0;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String, java.lang.Class) throws org.xmlpull.v1.XmlPullParserException
    {
        java.util.Vector r1, r3, $r19;
        java.lang.StringBuffer r2, $r17;
        int $i0, $i1, i2, $i4;
        java.lang.String $r4, $r6, $r11;
        boolean $z0, $z1;
        char $c3;
        java.lang.Exception r0, $r15;
        org.xmlpull.v1.XmlPullParserException $r8, $r16;
        org.xmlpull.v1.XmlPullParserFactory r10, $r20;
        java.lang.Class $r5, $r13;
        java.lang.StringBuilder $r9, $r18;
        java.lang.Object r12, $r14;
        java.io.InputStream $r7;

        $r4 := @parameter0: java.lang.String;

        $r5 := @parameter1: java.lang.Class;

        if $r5 != null goto label01;

        $r5 = <org.xmlpull.v1.XmlPullParserFactory: java.lang.Class referenceContextClass>;

     label01:
        if $r4 == null goto label02;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 == 0 goto label02;

        $r6 = "DEFAULT";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label27;

     label02:
        $r7 = virtualinvoke $r5.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/META-INF/services/org.xmlpull.v1.XmlPullParserFactory");

     label03:
        if $r7 != null goto label06;

        $r16 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = $r16;

     label04:
        specialinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("resource not found: /META-INF/services/org.xmlpull.v1.XmlPullParserFactory make sure that parser implementing XmlPull API is available");

        throw $r8;

     label05:
        r0 := @caughtexception;

        $r16 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>(null, null, r0);

        throw $r16;

     label06:
        $r17 = new java.lang.StringBuffer;

        r2 = $r17;

     label07:
        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

     label08:
        $i0 = virtualinvoke $r7.<java.io.InputStream: int read()>();

     label09:
        if $i0 >= 0 goto label24;

     label10:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

        $r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label11:
        $r4 = $r6;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resource /META-INF/services/org.xmlpull.v1.XmlPullParserFactory that contained \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        r10 = null;

        r3 = new java.util.Vector;

        r1 = r3;

        specialinvoke r3.<java.util.Vector: void <init>()>();

        $r19 = new java.util.Vector;

        r3 = $r19;

        specialinvoke $r19.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label13:
        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label29;

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(int,int)>(44, $i0);

        i2 = $i1;

        $i4 = -1;

        if $i1 != $i4 goto label14;

        i2 = virtualinvoke $r4.<java.lang.String: int length()>();

     label14:
        $r11 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>($i0, i2);

        $r5 = null;

        r12 = null;

     label15:
        $r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r11);

     label16:
        $r5 = $r13;

     label17:
        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.Object newInstance()>();

     label18:
        r12 = $r14;

     label19:
        if $r5 == null goto label28;

        $z0 = 0;

        $z1 = r12 instanceof org.xmlpull.v1.XmlPullParser;

        if $z1 == 0 goto label20;

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $z0 = 1;

     label20:
        $z1 = r12 instanceof org.xmlpull.v1.XmlSerializer;

        if $z1 == 0 goto label21;

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $z0 = 1;

     label21:
        $z1 = r12 instanceof org.xmlpull.v1.XmlPullParserFactory;

        if $z1 == 0 goto label23;

        if r10 != null goto label22;

        r10 = (org.xmlpull.v1.XmlPullParserFactory) r12;

     label22:
        $z0 = 1;

     label23:
        if $z0 != 0 goto label28;

        $r16 = new org.xmlpull.v1.XmlPullParserException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("incompatible class: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4);

        throw $r16;

     label24:
        if $i0 <= 32 goto label08;

        $c3 = (char) $i0;

     label25:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label26:
        goto label08;

     label27:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameter classNames to newInstance() that contained \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label28:
        $i0 = i2 + 1;

        goto label13;

     label29:
        if r10 != null goto label30;

        $r20 = new org.xmlpull.v1.XmlPullParserFactory;

        r10 = $r20;

        specialinvoke $r20.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

     label30:
        r10.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses> = r1;

        r10.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses> = r3;

        r10.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation> = $r6;

        return r10;

     label31:
        $r15 := @caughtexception;

        goto label19;

        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.Exception from label04 to label05 with label05;
        catch java.lang.Exception from label07 to label09 with label05;
        catch java.lang.Exception from label10 to label11 with label05;
        catch java.lang.Exception from label15 to label16 with label31;
        catch java.lang.Exception from label17 to label18 with label31;
        catch java.lang.Exception from label25 to label26 with label05;
    }

    public boolean getFeature(java.lang.String)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean r4;
        java.lang.Object $r3;
        java.lang.String $r1;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.Boolean) $r3;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isNamespaceAware()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

        return $z0;
    }

    public boolean isValidating()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#validation");

        return $z0;
    }

    public org.xmlpull.v1.XmlPullParser newPullParser() throws org.xmlpull.v1.XmlPullParserException
    {
        java.util.Enumeration $r11;
        java.util.Vector $r3;
        java.lang.StringBuffer r2;
        int $i0, $i1;
        java.lang.Boolean r12;
        java.lang.String $r6;
        java.util.Hashtable $r10;
        org.xmlpull.v1.XmlPullParser r9;
        boolean $z0;
        java.lang.Exception r1;
        org.xmlpull.v1.XmlPullParserException $r4;
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.StringBuilder $r5;
        java.lang.Object $r7;
        java.lang.Class r8;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        if $r3 != null goto label01;

        $r4 = new org.xmlpull.v1.XmlPullParserException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Factory initialization was incomplete - has not tried ");

        $r6 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label01:
        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i0 != 0 goto label02;

        $r4 = new org.xmlpull.v1.XmlPullParserException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid parser classes found in ");

        $r6 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label02:
        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label03:
        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label14;

        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector parserClasses>;

        $r7 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        r8 = (java.lang.Class) $r7;

     label04:
        $r7 = virtualinvoke r8.<java.lang.Class: java.lang.Object newInstance()>();

        r9 = (org.xmlpull.v1.XmlPullParser) $r7;

        $r10 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r11 = virtualinvoke $r10.<java.util.Hashtable: java.util.Enumeration keys()>();

     label05:
        $z0 = interfaceinvoke $r11.<java.util.Enumeration: boolean hasMoreElements()>();

     label06:
        if $z0 == 0 goto label15;

     label07:
        $r7 = interfaceinvoke $r11.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = (java.lang.String) $r7;

        $r10 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r7 = virtualinvoke $r10.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r6);

        r12 = (java.lang.Boolean) $r7;

     label08:
        if r12 == null goto label05;

     label09:
        $z0 = virtualinvoke r12.<java.lang.Boolean: boolean booleanValue()>();

     label10:
        if $z0 == 0 goto label05;

     label11:
        interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>($r6, 1);

     label12:
        goto label05;

     label13:
        r1 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i0 = $i0 + 1;

        goto label03;

     label14:
        $r4 = new org.xmlpull.v1.XmlPullParserException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not create parser: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label15:
        return r9;

        catch java.lang.Exception from label04 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public org.xmlpull.v1.XmlSerializer newSerializer() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlSerializer r9;
        java.lang.Exception r1;
        org.xmlpull.v1.XmlPullParserException $r4;
        java.util.Vector $r3;
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.StringBuffer r2;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.Object $r7;
        java.lang.Class r8;
        java.lang.String $r6;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        if $r3 != null goto label1;

        $r4 = new org.xmlpull.v1.XmlPullParserException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Factory initialization incomplete - has not tried ");

        $r6 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        $r4 = new org.xmlpull.v1.XmlPullParserException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid serializer classes found in ");

        $r6 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label3:
        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label7;

        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Vector serializerClasses>;

        $r7 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        r8 = (java.lang.Class) $r7;

     label4:
        $r7 = virtualinvoke r8.<java.lang.Class: java.lang.Object newInstance()>();

        r9 = (org.xmlpull.v1.XmlSerializer) $r7;

     label5:
        return r9;

     label6:
        r1 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i0 = $i0 + 1;

        goto label3;

     label7:
        $r4 = new org.xmlpull.v1.XmlPullParserException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not create serializer: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        throw $r4;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean $r3;
        java.lang.String $r1;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r3 = new java.lang.Boolean;

        specialinvoke $r3.<java.lang.Boolean: void <init>(boolean)>($z0);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    public void setNamespaceAware(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean $r2;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 := @parameter0: boolean;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r2 = new java.lang.Boolean;

        specialinvoke $r2.<java.lang.Boolean: void <init>(boolean)>($z0);

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", $r2);

        return;
    }

    public void setValidating(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.Boolean $r2;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 := @parameter0: boolean;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.Hashtable features>;

        $r2 = new java.lang.Boolean;

        specialinvoke $r2.<java.lang.Boolean: void <init>(boolean)>($z0);

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#validation", $r2);

        return;
    }
}
