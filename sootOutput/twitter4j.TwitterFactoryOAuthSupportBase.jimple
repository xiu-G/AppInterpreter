abstract class twitter4j.TwitterFactoryOAuthSupportBase extends twitter4j.TwitterFactoryBase
{

    protected void <init>()
    {
        twitter4j.TwitterFactoryOAuthSupportBase r0;

        r0 := @this: twitter4j.TwitterFactoryOAuthSupportBase;

        specialinvoke r0.<twitter4j.TwitterFactoryBase: void <init>()>();

        return;
    }

    protected void <init>(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.TwitterFactoryOAuthSupportBase r0;

        r0 := @this: twitter4j.TwitterFactoryOAuthSupportBase;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<twitter4j.TwitterFactoryBase: void <init>(java.lang.String)>($r1);

        return;
    }

    protected void <init>(twitter4j.conf.Configuration)
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.TwitterFactoryOAuthSupportBase r0;

        r0 := @this: twitter4j.TwitterFactoryOAuthSupportBase;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        specialinvoke r0.<twitter4j.TwitterFactoryBase: void <init>(twitter4j.conf.Configuration)>($r1);

        return;
    }

    protected abstract java.lang.Object getInstance(twitter4j.conf.Configuration, twitter4j.http.Authorization);

    public java.lang.Object getOAuthAuthorizedInstance(java.lang.String, java.lang.String)
    {
        java.lang.IllegalStateException $r5;
        twitter4j.http.OAuthAuthorization r3;
        twitter4j.TwitterFactoryOAuthSupportBase r0;
        twitter4j.conf.Configuration $r6;
        java.lang.Object $r4;
        java.lang.String $r1, $r2;

        r0 := @this: twitter4j.TwitterFactoryOAuthSupportBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        if $r2 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Consumer key and Consumer secret not supplied.");

        throw $r5;

     label1:
        r3 = new twitter4j.http.OAuthAuthorization;

        $r6 = r0.<twitter4j.TwitterFactoryOAuthSupportBase: twitter4j.conf.Configuration conf>;

        specialinvoke r3.<twitter4j.http.OAuthAuthorization: void <init>(twitter4j.conf.Configuration,java.lang.String,java.lang.String)>($r6, $r1, $r2);

        $r4 = virtualinvoke r0.<twitter4j.TwitterFactoryOAuthSupportBase: java.lang.Object getOAuthSupportInstance(twitter4j.http.Authorization)>(r3);

        return $r4;
    }

    public java.lang.Object getOAuthAuthorizedInstance(java.lang.String, java.lang.String, twitter4j.http.AccessToken)
    {
        java.lang.IllegalStateException $r6;
        twitter4j.TwitterFactoryOAuthSupportBase r0;
        twitter4j.http.AccessToken $r3;
        twitter4j.http.OAuthAuthorization r4;
        twitter4j.conf.Configuration $r7;
        java.lang.Object $r5;
        java.lang.String $r1, $r2;

        r0 := @this: twitter4j.TwitterFactoryOAuthSupportBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.http.AccessToken;

        if $r1 != null goto label1;

        if $r2 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Consumer key and Consumer secret not supplied.");

        throw $r6;

     label1:
        r4 = new twitter4j.http.OAuthAuthorization;

        $r7 = r0.<twitter4j.TwitterFactoryOAuthSupportBase: twitter4j.conf.Configuration conf>;

        specialinvoke r4.<twitter4j.http.OAuthAuthorization: void <init>(twitter4j.conf.Configuration,java.lang.String,java.lang.String)>($r7, $r1, $r2);

        virtualinvoke r4.<twitter4j.http.OAuthAuthorization: void setOAuthAccessToken(twitter4j.http.AccessToken)>($r3);

        $r5 = virtualinvoke r0.<twitter4j.TwitterFactoryOAuthSupportBase: java.lang.Object getOAuthSupportInstance(twitter4j.http.Authorization)>(r4);

        return $r5;
    }

    public java.lang.Object getOAuthAuthorizedInstance(twitter4j.http.AccessToken)
    {
        java.lang.IllegalStateException $r6;
        twitter4j.TwitterFactoryOAuthSupportBase r0;
        twitter4j.http.AccessToken $r1;
        twitter4j.http.OAuthAuthorization r2;
        twitter4j.conf.Configuration $r3;
        java.lang.Object $r7;
        java.lang.String $r4, $r5;

        r0 := @this: twitter4j.TwitterFactoryOAuthSupportBase;

        $r1 := @parameter0: twitter4j.http.AccessToken;

        $r3 = r0.<twitter4j.TwitterFactoryOAuthSupportBase: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getOAuthConsumerKey()>();

        $r3 = r0.<twitter4j.TwitterFactoryOAuthSupportBase: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getOAuthConsumerSecret()>();

        if $r4 != null goto label1;

        if $r5 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Consumer key and Consumer secret not supplied.");

        throw $r6;

     label1:
        r2 = new twitter4j.http.OAuthAuthorization;

        $r3 = r0.<twitter4j.TwitterFactoryOAuthSupportBase: twitter4j.conf.Configuration conf>;

        specialinvoke r2.<twitter4j.http.OAuthAuthorization: void <init>(twitter4j.conf.Configuration,java.lang.String,java.lang.String,twitter4j.http.AccessToken)>($r3, $r4, $r5, $r1);

        $r7 = virtualinvoke r0.<twitter4j.TwitterFactoryOAuthSupportBase: java.lang.Object getOAuthSupportInstance(twitter4j.http.Authorization)>(r2);

        return $r7;
    }

    protected abstract java.lang.Object getOAuthSupportInstance(twitter4j.conf.Configuration, twitter4j.http.Authorization);

    public java.lang.Object getOAuthSupportInstance(twitter4j.http.Authorization)
    {
        twitter4j.http.Authorization $r1;
        twitter4j.TwitterFactoryOAuthSupportBase r0;
        twitter4j.conf.Configuration $r3;
        java.lang.Object $r2;

        r0 := @this: twitter4j.TwitterFactoryOAuthSupportBase;

        $r1 := @parameter0: twitter4j.http.Authorization;

        $r3 = r0.<twitter4j.TwitterFactoryOAuthSupportBase: twitter4j.conf.Configuration conf>;

        $r2 = virtualinvoke r0.<twitter4j.TwitterFactoryOAuthSupportBase: java.lang.Object getInstance(twitter4j.conf.Configuration,twitter4j.http.Authorization)>($r3, $r1);

        return $r2;
    }
}
