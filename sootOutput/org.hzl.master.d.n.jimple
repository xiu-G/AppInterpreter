final class org.hzl.master.d.n extends java.lang.Object
{
    private static int f;
    private static java.lang.String g;
    private static org.hzl.master.d.n h;
    private static org.hzl.master.d.n i;
    private final java.lang.Process a;
    private final java.io.DataInputStream b;
    private final java.io.DataOutputStream c;
    private final java.util.List d;
    private boolean e;
    private java.lang.Runnable j;
    private java.lang.Runnable k;

    static void <clinit>()
    {
        <org.hzl.master.d.n: int f> = 10000;

        <org.hzl.master.d.n: java.lang.String g> = "";

        <org.hzl.master.d.n: org.hzl.master.d.n h> = null;

        <org.hzl.master.d.n: org.hzl.master.d.n i> = null;

        return;
    }

    private void <init>(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r11;
        android.content.Context $r1;
        java.io.DataInputStream $r6, $r18;
        org.hzl.master.d.q $r10, $r20;
        org.hzl.master.d.p $r16;
        java.util.concurrent.TimeoutException $r21;
        java.lang.String[] $r4;
        long $l1;
        org.hzl.master.d.o $r15;
        org.hzl.master.d.n r0;
        java.lang.Runnable $r13;
        java.util.ArrayList $r14;
        java.io.DataOutputStream $r8, $r19;
        java.lang.Thread $r12, $r23;
        int $i0;
        java.lang.String $r2;
        java.lang.ProcessBuilder $r3, $r17;
        org.hzl.master.a.a $r22;
        java.io.OutputStream $r9;
        java.lang.Process $r5;
        java.io.InputStream $r7;

        r0 := @this: org.hzl.master.d.n;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<org.hzl.master.d.n: java.util.List d> = $r14;

        r0.<org.hzl.master.d.n: boolean e> = 0;

        $r15 = new org.hzl.master.d.o;

        specialinvoke $r15.<org.hzl.master.d.o: void <init>(org.hzl.master.d.n)>(r0);

        r0.<org.hzl.master.d.n: java.lang.Runnable j> = $r15;

        $r16 = new org.hzl.master.d.p;

        specialinvoke $r16.<org.hzl.master.d.p: void <init>(org.hzl.master.d.n)>(r0);

        r0.<org.hzl.master.d.n: java.lang.Runnable k> = $r16;

        $r17 = new java.lang.ProcessBuilder;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "su";

        specialinvoke $r17.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r4);

        $r3 = virtualinvoke $r17.<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectErrorStream(boolean)>(1);

        $r5 = virtualinvoke $r3.<java.lang.ProcessBuilder: java.lang.Process start()>();

        r0.<org.hzl.master.d.n: java.lang.Process a> = $r5;

        $r18 = new java.io.DataInputStream;

        $r5 = r0.<org.hzl.master.d.n: java.lang.Process a>;

        $r7 = virtualinvoke $r5.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke $r18.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r7);

        r0.<org.hzl.master.d.n: java.io.DataInputStream b> = $r18;

        $r19 = new java.io.DataOutputStream;

        $r5 = r0.<org.hzl.master.d.n: java.lang.Process a>;

        $r9 = virtualinvoke $r5.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        specialinvoke $r19.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r9);

        r0.<org.hzl.master.d.n: java.io.DataOutputStream c> = $r19;

        $r20 = new org.hzl.master.d.q;

        $r10 = $r20;

        $r6 = r0.<org.hzl.master.d.n: java.io.DataInputStream b>;

        $r8 = r0.<org.hzl.master.d.n: java.io.DataOutputStream c>;

        specialinvoke $r20.<org.hzl.master.d.q: void <init>(android.content.Context,java.io.DataInputStream,java.io.DataOutputStream,byte)>($r1, $r6, $r8, 0);

        virtualinvoke $r10.<org.hzl.master.d.q: void start()>();

        $i0 = <org.hzl.master.d.n: int f>;

        $l1 = (long) $i0;

     label01:
        virtualinvoke $r10.<org.hzl.master.d.q: void join(long)>($l1);

        $i0 = staticinvoke <org.hzl.master.d.q: int a(org.hzl.master.d.q)>($r10);

     label02:
        if $i0 != -911 goto label08;

        $r5 = r0.<org.hzl.master.d.n: java.lang.Process a>;

     label03:
        virtualinvoke $r5.<java.lang.Process: void destroy()>();

     label04:
        $r21 = new java.util.concurrent.TimeoutException;

        $r2 = <org.hzl.master.d.n: java.lang.String g>;

     label05:
        specialinvoke $r21.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r2);

     label06:
        throw $r21;

     label07:
        $r11 := @caughtexception;

        virtualinvoke $r10.<org.hzl.master.d.q: void interrupt()>();

        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r12.<java.lang.Thread: void interrupt()>();

        $r21 = new java.util.concurrent.TimeoutException;

        specialinvoke $r21.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r21;

     label08:
        $i0 = staticinvoke <org.hzl.master.d.q: int a(org.hzl.master.d.q)>($r10);

     label09:
        if $i0 != -42 goto label14;

        $r5 = r0.<org.hzl.master.d.n: java.lang.Process a>;

     label10:
        virtualinvoke $r5.<java.lang.Process: void destroy()>();

     label11:
        $r22 = new org.hzl.master.a.a;

     label12:
        specialinvoke $r22.<org.hzl.master.a.a: void <init>(java.lang.String)>("Root Access Denied");

     label13:
        throw $r22;

     label14:
        $r23 = new java.lang.Thread;

        $r12 = $r23;

        $r13 = r0.<org.hzl.master.d.n: java.lang.Runnable j>;

     label15:
        specialinvoke $r23.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r13, "Shell Input");

        virtualinvoke $r12.<java.lang.Thread: void start()>();

     label16:
        $r23 = new java.lang.Thread;

        $r12 = $r23;

        $r13 = r0.<org.hzl.master.d.n: java.lang.Runnable k>;

     label17:
        specialinvoke $r23.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r13, "Shell Output");

        virtualinvoke $r12.<java.lang.Thread: void start()>();

     label18:
        return;

        catch java.lang.InterruptedException from label01 to label02 with label07;
        catch java.lang.InterruptedException from label03 to label04 with label07;
        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.InterruptedException from label08 to label09 with label07;
        catch java.lang.InterruptedException from label10 to label11 with label07;
        catch java.lang.InterruptedException from label12 to label13 with label07;
        catch java.lang.InterruptedException from label15 to label16 with label07;
        catch java.lang.InterruptedException from label17 to label18 with label07;
    }

    static org.hzl.master.d.n a(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        org.hzl.master.d.n $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 = <org.hzl.master.d.n: int f>;

        $r1 = staticinvoke <org.hzl.master.d.n: org.hzl.master.d.n a(android.content.Context,int)>($r0, $i0);

        return $r1;
    }

    private static org.hzl.master.d.n a(android.content.Context, int)
    {
        java.lang.Throwable $r2;
        android.content.Context $r0;
        int $i0;
        org.hzl.master.d.n $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        <org.hzl.master.d.n: int f> = $i0;

        $r1 = <org.hzl.master.d.n: org.hzl.master.d.n h>;

        if $r1 != null goto label2;

        $i0 = 0;

     label1:
        $r1 = <org.hzl.master.d.n: org.hzl.master.d.n h>;

        if $r1 == null goto label3;

     label2:
        $r1 = <org.hzl.master.d.n: org.hzl.master.d.n h>;

        return $r1;

     label3:
        $r1 = new org.hzl.master.d.n;

     label4:
        specialinvoke $r1.<org.hzl.master.d.n: void <init>(android.content.Context,java.lang.String)>($r0, "su");

     label5:
        <org.hzl.master.d.n: org.hzl.master.d.n h> = $r1;

        goto label1;

     label6:
        $r2 := @caughtexception;

        if $i0 < 5 goto label7;

        throw $r2;

     label7:
        $i0 = $i0 + 1;

        goto label1;

        catch java.io.IOException from label4 to label5 with label6;
    }

    static void a()
    {
        org.hzl.master.d.n $r0;

        $r0 = <org.hzl.master.d.n: org.hzl.master.d.n h>;

        if $r0 == null goto label1;

        $r0 = <org.hzl.master.d.n: org.hzl.master.d.n h>;

        specialinvoke $r0.<org.hzl.master.d.n: void b()>();

     label1:
        $r0 = <org.hzl.master.d.n: org.hzl.master.d.n i>;

        if $r0 == null goto label2;

        $r0 = <org.hzl.master.d.n: org.hzl.master.d.n i>;

        specialinvoke $r0.<org.hzl.master.d.n: void b()>();

     label2:
        return;
    }

    static void a(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <org.hzl.master.d.n: java.lang.String g> = $r0;

        return;
    }

    static void a(org.hzl.master.d.n)
    {
        java.lang.Throwable $r9, $r10;
        byte[] $r8;
        org.hzl.master.d.n $r0;
        org.hzl.master.d.a $r5;
        java.io.DataOutputStream $r1;
        int $i0, $i1;
        java.lang.String $r7;
        boolean $z0;
        java.util.List $r2, $r3;
        java.lang.InterruptedException $r12;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r11;

        $r0 := @parameter0: org.hzl.master.d.n;

        $i0 = 0;

     label01:
        $r2 = $r0.<org.hzl.master.d.n: java.util.List d>;

        entermonitor $r2;

     label02:
        $z0 = $r0.<org.hzl.master.d.n: boolean e>;

        if $z0 != 0 goto label03;

        $r3 = $r0.<org.hzl.master.d.n: java.util.List d>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 >= $i1 goto label13;

     label03:
        $r1 = $r0.<org.hzl.master.d.n: java.io.DataOutputStream c>;

        exitmonitor $r2;

     label04:
        $r2 = $r0.<org.hzl.master.d.n: java.util.List d>;

     label05:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

     label06:
        if $i0 >= $i1 goto label18;

        $r2 = $r0.<org.hzl.master.d.n: java.util.List d>;

     label07:
        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

     label08:
        $r5 = (org.hzl.master.d.a) $r4;

     label09:
        virtualinvoke $r5.<org.hzl.master.d.a: void a(java.io.OutputStream)>($r1);

     label10:
        $r11 = new java.lang.StringBuilder;

        $r6 = $r11;

     label11:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("\necho F*D^W@#FGF ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" $?\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void write(byte[])>($r8);

        virtualinvoke $r1.<java.io.DataOutputStream: void flush()>();

     label12:
        $i0 = $i0 + 1;

        goto label01;

     label13:
        $r3 = $r0.<org.hzl.master.d.n: java.util.List d>;

        virtualinvoke $r3.<java.lang.Object: void wait()>();

     label14:
        goto label02;

     label15:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label16:
        throw $r9;

     label17:
        $r10 := @caughtexception;

        $r12 = (java.lang.InterruptedException) $r10;

        virtualinvoke $r12.<java.lang.InterruptedException: void printStackTrace()>();

        return;

     label18:
        $z0 = $r0.<org.hzl.master.d.n: boolean e>;

        if $z0 == 0 goto label01;

        $r7 = "\nexit 0\n";

     label19:
        $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void write(byte[])>($r8);

        virtualinvoke $r1.<java.io.DataOutputStream: void flush()>();

        virtualinvoke $r1.<java.io.DataOutputStream: void close()>();

     label20:
        return;

        catch java.lang.Throwable from label02 to label04 with label15;
        catch java.lang.InterruptedException from label05 to label06 with label17;
        catch java.lang.InterruptedException from label07 to label08 with label17;
        catch java.lang.InterruptedException from label09 to label10 with label17;
        catch java.lang.InterruptedException from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.InterruptedException from label16 to label17 with label17;
        catch java.lang.InterruptedException from label19 to label20 with label17;
    }

    private void b()
    {
        java.lang.Throwable $r4;
        java.util.List $r2, $r3;
        org.hzl.master.d.n r0, $r1;

        r0 := @this: org.hzl.master.d.n;

        $r1 = <org.hzl.master.d.n: org.hzl.master.d.n h>;

        if r0 != $r1 goto label1;

        <org.hzl.master.d.n: org.hzl.master.d.n h> = null;

     label1:
        $r1 = <org.hzl.master.d.n: org.hzl.master.d.n i>;

        if r0 != $r1 goto label2;

        <org.hzl.master.d.n: org.hzl.master.d.n i> = null;

     label2:
        $r2 = r0.<org.hzl.master.d.n: java.util.List d>;

        entermonitor $r2;

     label3:
        r0.<org.hzl.master.d.n: boolean e> = 1;

        $r3 = r0.<org.hzl.master.d.n: java.util.List d>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor $r2;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r2;

        throw $r4;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static void b(org.hzl.master.d.n)
    {
        java.lang.Throwable $r10, $r11;
        java.io.DataInputStream $r2;
        java.lang.String[] $r9;
        org.hzl.master.d.n $r0;
        org.hzl.master.d.a $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r4, $r8;
        boolean $z0;
        java.lang.Process $r6;
        java.util.List $r5;
        java.lang.Object $r7;

        $r0 := @parameter0: org.hzl.master.d.n;

        $i0 = 0;

        $r1 = null;

     label01:
        $r2 = $r0.<org.hzl.master.d.n: java.io.DataInputStream b>;

        $r3 = virtualinvoke $r2.<java.io.DataInputStream: java.lang.String readLine()>();

        $r4 = $r3;

        if $r3 == null goto label02;

        if $r1 != null goto label05;

        $r5 = $r0.<org.hzl.master.d.n: java.util.List d>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 < $i1 goto label04;

        $z0 = $r0.<org.hzl.master.d.n: boolean e>;

        if $z0 == 0 goto label01;

     label02:
        $r6 = $r0.<org.hzl.master.d.n: java.lang.Process a>;

        virtualinvoke $r6.<java.lang.Process: int waitFor()>();

        $r6 = $r0.<org.hzl.master.d.n: java.lang.Process a>;

        virtualinvoke $r6.<java.lang.Process: void destroy()>();

     label03:
        $r5 = $r0.<org.hzl.master.d.n: java.util.List d>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 < $i1 goto label15;

        return;

     label04:
        $r5 = $r0.<org.hzl.master.d.n: java.util.List d>;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $r1 = (org.hzl.master.d.a) $r7;

     label05:
        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("F*D^W@#FGF");

        if $i1 <= 0 goto label06;

        virtualinvoke $r1.<org.hzl.master.d.a: int b()>();

        $r8 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        virtualinvoke $r1.<org.hzl.master.d.a: void a(java.lang.String)>($r8);

     label06:
        if $i1 < 0 goto label14;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

        $r9 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i1 = lengthof $r9;

        if $i1 < 2 goto label13;

        $r4 = $r9[1];

        if $r4 == null goto label13;

        $r4 = $r9[1];

     label07:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label08:
        $i2 = -1;

        $r4 = $r9[2];

     label09:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label10:
        $i2 = $i3;

     label11:
        if $i1 != $i0 goto label13;

        virtualinvoke $r1.<org.hzl.master.d.a: void a(int)>($i2);

        $i0 = $i0 + 1;

        $r1 = null;

        goto label01;

     label12:
        $r10 := @caughtexception;

        $i1 = 0;

        goto label08;

     label13:
        $r4 = $r3;

     label14:
        virtualinvoke $r1.<org.hzl.master.d.a: int b()>();

        virtualinvoke $r1.<org.hzl.master.d.a: void a(java.lang.String)>($r4);

        goto label01;

     label15:
        if $r1 != null goto label16;

        $r5 = $r0.<org.hzl.master.d.n: java.util.List d>;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $r1 = (org.hzl.master.d.a) $r7;

     label16:
        virtualinvoke $r1.<org.hzl.master.d.a: void c()>();

        $i0 = $i0 + 1;

        $r1 = null;

        goto label03;

     label17:
        $r11 := @caughtexception;

        goto label11;

        catch java.lang.NumberFormatException from label07 to label08 with label12;
        catch java.lang.NumberFormatException from label09 to label10 with label17;
    }

    final org.hzl.master.d.a a(org.hzl.master.d.a)
    {
        java.lang.Throwable $r5;
        java.lang.IllegalStateException $r2;
        org.hzl.master.d.a $r1;
        java.util.List $r3, $r4;
        org.hzl.master.d.n r0;
        boolean $z0;

        r0 := @this: org.hzl.master.d.n;

        $r1 := @parameter0: org.hzl.master.d.a;

        $z0 = r0.<org.hzl.master.d.n: boolean e>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unable to add commands to a closed shell");

        throw $r2;

     label1:
        $r3 = r0.<org.hzl.master.d.n: java.util.List d>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.hzl.master.d.n: java.util.List d>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r4 = r0.<org.hzl.master.d.n: java.util.List d>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor $r3;

     label3:
        return $r1;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r3;

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
    }
}
