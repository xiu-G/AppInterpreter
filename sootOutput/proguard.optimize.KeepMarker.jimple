public class proguard.optimize.KeepMarker extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor
{
    private static final java.lang.Object KEPT;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <proguard.optimize.KeepMarker: java.lang.Object KEPT> = $r0;

        return;
    }

    public void <init>()
    {
        proguard.optimize.KeepMarker r0;

        r0 := @this: proguard.optimize.KeepMarker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isKept(proguard.classfile.VisitorAccepter)
    {
        java.lang.Object $r1, $r2;
        proguard.classfile.VisitorAccepter $r0;

        $r0 := @parameter0: proguard.classfile.VisitorAccepter;

        $r0 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.VisitorAccepter lastVisitorAccepter(proguard.classfile.VisitorAccepter)>($r0);

        $r2 = interfaceinvoke $r0.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        $r1 = <proguard.optimize.KeepMarker: java.lang.Object KEPT>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static void markAsKept(proguard.classfile.VisitorAccepter)
    {
        java.lang.Object $r1;
        proguard.classfile.VisitorAccepter $r0;

        $r0 := @parameter0: proguard.classfile.VisitorAccepter;

        $r1 = <proguard.optimize.KeepMarker: java.lang.Object KEPT>;

        interfaceinvoke $r0.<proguard.classfile.VisitorAccepter: void setVisitorInfo(java.lang.Object)>($r1);

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.optimize.KeepMarker r0;
        proguard.classfile.LibraryClass $r1;

        r0 := @this: proguard.optimize.KeepMarker;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        staticinvoke <proguard.optimize.KeepMarker: void markAsKept(proguard.classfile.VisitorAccepter)>($r1);

        return;
    }

    public void visitLibraryField(proguard.classfile.LibraryClass, proguard.classfile.LibraryField)
    {
        proguard.optimize.KeepMarker r0;
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.LibraryField $r2;

        r0 := @this: proguard.optimize.KeepMarker;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryField;

        staticinvoke <proguard.optimize.KeepMarker: void markAsKept(proguard.classfile.VisitorAccepter)>($r2);

        return;
    }

    public void visitLibraryMethod(proguard.classfile.LibraryClass, proguard.classfile.LibraryMethod)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.optimize.KeepMarker r0;
        proguard.classfile.LibraryMethod $r2;
        proguard.classfile.Member $r3;

        r0 := @this: proguard.optimize.KeepMarker;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryMethod;

        $r3 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.Member lastMember(proguard.classfile.Member)>($r2);

        staticinvoke <proguard.optimize.KeepMarker: void markAsKept(proguard.classfile.VisitorAccepter)>($r3);

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.optimize.KeepMarker r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.optimize.KeepMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        staticinvoke <proguard.optimize.KeepMarker: void markAsKept(proguard.classfile.VisitorAccepter)>($r1);

        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        proguard.optimize.KeepMarker r0;
        proguard.classfile.ProgramField $r2;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.optimize.KeepMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        staticinvoke <proguard.optimize.KeepMarker: void markAsKept(proguard.classfile.VisitorAccepter)>($r2);

        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.classfile.ProgramMethod $r2;
        proguard.optimize.KeepMarker r0;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.Member $r3;

        r0 := @this: proguard.optimize.KeepMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r3 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.Member lastMember(proguard.classfile.Member)>($r2);

        staticinvoke <proguard.optimize.KeepMarker: void markAsKept(proguard.classfile.VisitorAccepter)>($r3);

        return;
    }
}
