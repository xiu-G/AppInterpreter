public class cn.ffcs.lib.slidingmenu.SlidingActivityHelper extends java.lang.Object
{
    private android.app.Activity mActivity;
    private boolean mBroadcasting;
    private boolean mEnableSlide;
    private boolean mOnPostCreateCalled;
    private cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu;
    private android.view.View mViewAbove;
    private android.view.View mViewBehind;

    public void <init>(android.app.Activity)
    {
        android.app.Activity $r1;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: boolean mBroadcasting> = 0;

        r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: boolean mOnPostCreateCalled> = 0;

        r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: boolean mEnableSlide> = 1;

        r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: android.app.Activity mActivity> = $r1;

        return;
    }

    static cn.ffcs.lib.slidingmenu.SlidingMenu access$000(cn.ffcs.lib.slidingmenu.SlidingActivityHelper)
    {
        cn.ffcs.lib.slidingmenu.SlidingMenu r1;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper $r0;

        $r0 := @parameter0: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        r1 = $r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        return r1;
    }

    public android.view.View findViewById(int)
    {
        cn.ffcs.lib.slidingmenu.SlidingMenu $r2;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $i0 := @parameter0: int;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        if $r2 == null goto label1;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        $r1 = virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.SlidingMenu: android.view.View findViewById(int)>($i0);

        if $r1 == null goto label1;

        return $r1;

     label1:
        return null;
    }

    public cn.ffcs.lib.slidingmenu.SlidingMenu getSlidingMenu()
    {
        cn.ffcs.lib.slidingmenu.SlidingMenu r1;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        r1 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        return r1;
    }

    public void onCreate(android.os.Bundle)
    {
        android.os.Bundle $r1;
        cn.ffcs.lib.slidingmenu.SlidingMenu $r5;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;
        android.view.LayoutInflater $r3;
        android.view.View $r4;
        android.app.Activity $r2;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: android.app.Activity mActivity>;

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r2);

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130903109, null);

        $r5 = (cn.ffcs.lib.slidingmenu.SlidingMenu) $r4;

        r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu> = $r5;

        return;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        cn.ffcs.lib.slidingmenu.SlidingMenu $r2;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;
        int $i0;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        if $i0 != 4 goto label1;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        $z0 = virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.SlidingMenu: boolean isMenuShowing()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: void showContent()>();

        return 1;

     label1:
        return 0;
    }

    public void onPostCreate(android.os.Bundle)
    {
        java.lang.IllegalStateException $r4;
        android.os.Bundle $r1;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper$1 $r7;
        byte $b0;
        cn.ffcs.lib.slidingmenu.SlidingMenu $r5;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;
        android.os.Handler $r6;
        android.view.View $r3;
        android.app.Activity $r2;
        boolean $z0, $z1;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 := @parameter0: android.os.Bundle;

        $b0 = 1;

        $r3 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: android.view.View mViewBehind>;

        if $r3 == null goto label1;

        $r3 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: android.view.View mViewAbove>;

        if $r3 != null goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Both setBehindContentView must be called in onCreate in addition to setContentView.");

        throw $r4;

     label2:
        r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: boolean mOnPostCreateCalled> = 1;

        $r5 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: android.app.Activity mActivity>;

        $z0 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: boolean mEnableSlide>;

        if $z0 == 0 goto label3;

        $b0 = 0;

     label3:
        virtualinvoke $r5.<cn.ffcs.lib.slidingmenu.SlidingMenu: void attachToActivity(android.app.Activity,int)>($r2, $b0);

        if $r1 == null goto label5;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("SlidingActivityHelper.open");

        $z1 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("SlidingActivityHelper.secondary");

     label4:
        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>()>();

        $r7 = new cn.ffcs.lib.slidingmenu.SlidingActivityHelper$1;

        specialinvoke $r7.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper$1: void <init>(cn.ffcs.lib.slidingmenu.SlidingActivityHelper,boolean,boolean)>(r0, $z0, $z1);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        return;

     label5:
        $z0 = 0;

        $z1 = 0;

        goto label4;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        cn.ffcs.lib.slidingmenu.SlidingMenu $r2;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        $z0 = virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.SlidingMenu: boolean isMenuShowing()>();

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("SlidingActivityHelper.open", $z0);

        $r2 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        $z0 = virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.SlidingMenu: boolean isSecondaryMenuShowing()>();

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("SlidingActivityHelper.secondary", $z0);

        return;
    }

    public void registerAboveContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r2;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $z0 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: boolean mBroadcasting>;

        if $z0 != 0 goto label1;

        r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: android.view.View mViewAbove> = $r1;

     label1:
        return;
    }

    public void setBehindContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r2;
        cn.ffcs.lib.slidingmenu.SlidingMenu $r3;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;
        android.view.View $r1;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: android.view.View mViewBehind> = $r1;

        $r3 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: android.view.View mViewBehind>;

        virtualinvoke $r3.<cn.ffcs.lib.slidingmenu.SlidingMenu: void setMenu(android.view.View)>($r1);

        return;
    }

    public void setContentView(android.view.View)
    {
        android.view.View $r1;
        android.app.Activity $r2;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 := @parameter0: android.view.View;

        r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: boolean mBroadcasting> = 1;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: android.app.Activity mActivity>;

        virtualinvoke $r2.<android.app.Activity: void setContentView(android.view.View)>($r1);

        return;
    }

    public void setSlidingActionBarEnabled(boolean)
    {
        java.lang.IllegalStateException $r1;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;
        boolean $z0, $z1;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $z0 := @parameter0: boolean;

        $z1 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: boolean mOnPostCreateCalled>;

        if $z1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("enableSlidingActionBar must be called in onCreate.");

        throw $r1;

     label1:
        r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: boolean mEnableSlide> = $z0;

        return;
    }

    public void showContent()
    {
        cn.ffcs.lib.slidingmenu.SlidingMenu $r1;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        virtualinvoke $r1.<cn.ffcs.lib.slidingmenu.SlidingMenu: void showContent()>();

        return;
    }

    public void showMenu()
    {
        cn.ffcs.lib.slidingmenu.SlidingMenu $r1;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        virtualinvoke $r1.<cn.ffcs.lib.slidingmenu.SlidingMenu: void showMenu()>();

        return;
    }

    public void showSecondaryMenu()
    {
        cn.ffcs.lib.slidingmenu.SlidingMenu $r1;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        virtualinvoke $r1.<cn.ffcs.lib.slidingmenu.SlidingMenu: void showSecondaryMenu()>();

        return;
    }

    public void toggle()
    {
        cn.ffcs.lib.slidingmenu.SlidingMenu $r1;
        cn.ffcs.lib.slidingmenu.SlidingActivityHelper r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.SlidingActivityHelper;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.SlidingActivityHelper: cn.ffcs.lib.slidingmenu.SlidingMenu mSlidingMenu>;

        virtualinvoke $r1.<cn.ffcs.lib.slidingmenu.SlidingMenu: void toggle()>();

        return;
    }
}
