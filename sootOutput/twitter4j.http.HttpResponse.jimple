public class twitter4j.http.HttpResponse extends java.lang.Object
{
    private static java.lang.ThreadLocal builders;
    private static final twitter4j.logging.Logger logger;
    private java.net.HttpURLConnection con;
    private java.io.InputStream is;
    private org.w3c.dom.Document responseAsDocument;
    private java.lang.String responseAsString;
    private int statusCode;
    private boolean streamConsumed;

    static void <clinit>()
    {
        twitter4j.logging.Logger $r0;
        twitter4j.http.HttpResponse$1 $r1;

        $r0 = staticinvoke <twitter4j.logging.Logger: twitter4j.logging.Logger getLogger()>();

        <twitter4j.http.HttpResponse: twitter4j.logging.Logger logger> = $r0;

        $r1 = new twitter4j.http.HttpResponse$1;

        specialinvoke $r1.<twitter4j.http.HttpResponse$1: void <init>()>();

        <twitter4j.http.HttpResponse: java.lang.ThreadLocal builders> = $r1;

        return;
    }

    void <init>(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.http.HttpResponse r0;

        r0 := @this: twitter4j.http.HttpResponse;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.http.HttpResponse: org.w3c.dom.Document responseAsDocument> = null;

        r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString> = null;

        r0.<twitter4j.http.HttpResponse: boolean streamConsumed> = 0;

        r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString> = $r1;

        return;
    }

    public void <init>(java.net.HttpURLConnection) throws java.io.IOException
    {
        java.net.HttpURLConnection $r1;
        java.util.zip.GZIPInputStream $r5;
        twitter4j.http.HttpResponse r0;
        int $i0;
        java.lang.String $r3, $r4;
        java.io.InputStream $r2;
        boolean $z0;

        r0 := @this: twitter4j.http.HttpResponse;

        $r1 := @parameter0: java.net.HttpURLConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.http.HttpResponse: org.w3c.dom.Document responseAsDocument> = null;

        r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString> = null;

        r0.<twitter4j.http.HttpResponse: boolean streamConsumed> = 0;

        r0.<twitter4j.http.HttpResponse: java.net.HttpURLConnection con> = $r1;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>();

        r0.<twitter4j.http.HttpResponse: int statusCode> = $i0;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        r0.<twitter4j.http.HttpResponse: java.io.InputStream is> = $r2;

        if $r2 != null goto label1;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        r0.<twitter4j.http.HttpResponse: java.io.InputStream is> = $r2;

     label1:
        $r2 = r0.<twitter4j.http.HttpResponse: java.io.InputStream is>;

        if $r2 == null goto label2;

        $r3 = "gzip";

        $r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = new java.util.zip.GZIPInputStream;

        $r2 = r0.<twitter4j.http.HttpResponse: java.io.InputStream is>;

        specialinvoke $r5.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r2);

        r0.<twitter4j.http.HttpResponse: java.io.InputStream is> = $r5;

     label2:
        return;
    }

    public org.w3c.dom.Document asDocument() throws twitter4j.TwitterException
    {
        java.lang.Throwable r1, r2;
        byte[] $r9;
        java.lang.ThreadLocal $r4;
        java.lang.Exception $r14;
        java.io.ByteArrayInputStream $r7, $r11;
        twitter4j.http.HttpResponse r0;
        org.w3c.dom.Document $r3;
        java.lang.StringBuffer $r10, $r12;
        javax.xml.parsers.DocumentBuilder $r6;
        twitter4j.TwitterException $r13;
        java.lang.Object $r5;
        java.lang.String $r8;

        r0 := @this: twitter4j.http.HttpResponse;

        $r3 = r0.<twitter4j.http.HttpResponse: org.w3c.dom.Document responseAsDocument>;

        if $r3 != null goto label5;

        $r4 = <twitter4j.http.HttpResponse: java.lang.ThreadLocal builders>;

     label1:
        $r5 = virtualinvoke $r4.<java.lang.ThreadLocal: java.lang.Object get()>();

     label2:
        $r6 = (javax.xml.parsers.DocumentBuilder) $r5;

        $r11 = new java.io.ByteArrayInputStream;

        $r7 = $r11;

     label3:
        $r8 = virtualinvoke r0.<twitter4j.http.HttpResponse: java.lang.String asString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

        $r3 = virtualinvoke $r6.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r7);

     label4:
        r0.<twitter4j.http.HttpResponse: org.w3c.dom.Document responseAsDocument> = $r3;

     label5:
        $r3 = r0.<twitter4j.http.HttpResponse: org.w3c.dom.Document responseAsDocument>;

        return $r3;

     label6:
        r2 := @caughtexception;

        $r13 = new twitter4j.TwitterException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The response body was not well-formed:\n");

        $r8 = r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = (java.lang.Exception) r2;

        specialinvoke $r13.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception)>($r8, $r14);

        throw $r13;

     label7:
        r1 := @caughtexception;

        $r13 = new twitter4j.TwitterException;

        $r14 = (java.lang.Exception) r1;

        specialinvoke $r13.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception)>("There\'s something with the connection.", $r14);

        throw $r13;

        catch org.xml.sax.SAXException from label1 to label2 with label6;
        catch org.xml.sax.SAXException from label3 to label4 with label6;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
    }

    public twitter4j.org.json.JSONArray asJSONArray() throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse r0;
        java.lang.StringBuffer $r5;
        twitter4j.org.json.JSONArray $r2;
        twitter4j.org.json.JSONException r1;
        twitter4j.TwitterException $r4;
        java.lang.String $r3;

        r0 := @this: twitter4j.http.HttpResponse;

        $r2 = new twitter4j.org.json.JSONArray;

     label1:
        $r3 = virtualinvoke r0.<twitter4j.http.HttpResponse: java.lang.String asString()>();

        specialinvoke $r2.<twitter4j.org.json.JSONArray: void <init>(java.lang.String)>($r3);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r1.<twitter4j.org.json.JSONException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r3 = r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception)>($r3, r1);

        throw $r4;

        catch twitter4j.org.json.JSONException from label1 to label2 with label3;
    }

    public twitter4j.org.json.JSONObject asJSONObject() throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse r0;
        java.lang.StringBuffer $r5;
        twitter4j.org.json.JSONException r1;
        twitter4j.TwitterException $r4;
        java.lang.String $r3;
        twitter4j.org.json.JSONObject $r2;

        r0 := @this: twitter4j.http.HttpResponse;

        $r2 = new twitter4j.org.json.JSONObject;

     label1:
        $r3 = virtualinvoke r0.<twitter4j.http.HttpResponse: java.lang.String asString()>();

        specialinvoke $r2.<twitter4j.org.json.JSONObject: void <init>(java.lang.String)>($r3);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r4 = new twitter4j.TwitterException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r1.<twitter4j.org.json.JSONException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r3 = r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception)>($r3, r1);

        throw $r4;

        catch twitter4j.org.json.JSONException from label1 to label2 with label3;
    }

    public java.io.InputStreamReader asReader()
    {
        java.lang.Throwable r1;
        twitter4j.http.HttpResponse r0;
        java.io.InputStreamReader $r2;
        java.io.InputStream $r3;

        r0 := @this: twitter4j.http.HttpResponse;

        $r2 = new java.io.InputStreamReader;

        $r3 = r0.<twitter4j.http.HttpResponse: java.io.InputStream is>;

     label1:
        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r3, "UTF-8");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r2 = new java.io.InputStreamReader;

        $r3 = r0.<twitter4j.http.HttpResponse: java.io.InputStream is>;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r3);

        return $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.io.InputStream asStream()
    {
        java.lang.IllegalStateException $r1;
        twitter4j.http.HttpResponse r0;
        boolean $z0;
        java.io.InputStream r2;

        r0 := @this: twitter4j.http.HttpResponse;

        $z0 = r0.<twitter4j.http.HttpResponse: boolean streamConsumed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stream has already been consumed.");

        throw $r1;

     label1:
        r2 = r0.<twitter4j.http.HttpResponse: java.io.InputStream is>;

        return r2;
    }

    public java.lang.String asString() throws twitter4j.TwitterException
    {
        java.lang.Throwable r3;
        java.net.HttpURLConnection $r10;
        java.lang.NullPointerException r4;
        twitter4j.http.HttpResponse r0;
        java.lang.StringBuffer r2, $r8;
        twitter4j.TwitterException $r13;
        twitter4j.logging.Logger $r9;
        java.lang.String $r5;
        java.io.IOException $r14;
        java.io.InputStreamReader $r7, $r11;
        java.lang.Exception $r15;
        java.io.BufferedReader r1, $r12;
        java.io.InputStream $r6;

        r0 := @this: twitter4j.http.HttpResponse;

        $r5 = r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString>;

        if $r5 != null goto label20;

     label01:
        $r6 = virtualinvoke r0.<twitter4j.http.HttpResponse: java.io.InputStream asStream()>();

     label02:
        if $r6 != null goto label03;

        return null;

     label03:
        $r12 = new java.io.BufferedReader;

        r1 = $r12;

        $r11 = new java.io.InputStreamReader;

        $r7 = $r11;

     label04:
        specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r6, "UTF-8");

        specialinvoke $r12.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

     label05:
        $r8 = new java.lang.StringBuffer;

        r2 = $r8;

     label06:
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

     label07:
        $r5 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label08:
        if $r5 == null goto label12;

     label09:
        $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label10:
        goto label07;

     label11:
        r4 := @caughtexception;

        $r13 = new twitter4j.TwitterException;

        $r5 = virtualinvoke r4.<java.lang.NullPointerException: java.lang.String getMessage()>();

        specialinvoke $r13.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception)>($r5, r4);

        throw $r13;

     label12:
        $r5 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label13:
        r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString> = $r5;

     label14:
        $r9 = <twitter4j.http.HttpResponse: twitter4j.logging.Logger logger>;

     label15:
        $r5 = r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString>;

     label16:
        virtualinvoke $r9.<twitter4j.logging.Logger: void debug(java.lang.String)>($r5);

        virtualinvoke $r6.<java.io.InputStream: void close()>();

     label17:
        $r10 = r0.<twitter4j.http.HttpResponse: java.net.HttpURLConnection con>;

     label18:
        virtualinvoke $r10.<java.net.HttpURLConnection: void disconnect()>();

     label19:
        r0.<twitter4j.http.HttpResponse: boolean streamConsumed> = 1;

     label20:
        $r5 = r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString>;

        return $r5;

     label21:
        r3 := @caughtexception;

        $r13 = new twitter4j.TwitterException;

        $r14 = (java.io.IOException) r3;

        $r5 = virtualinvoke $r14.<java.io.IOException: java.lang.String getMessage()>();

        $r15 = (java.lang.Exception) r3;

        specialinvoke $r13.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception)>($r5, $r15);

        throw $r13;

        catch java.lang.NullPointerException from label01 to label02 with label11;
        catch java.lang.NullPointerException from label04 to label05 with label11;
        catch java.lang.NullPointerException from label06 to label08 with label11;
        catch java.lang.NullPointerException from label09 to label10 with label11;
        catch java.io.IOException from label01 to label02 with label21;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.io.IOException from label06 to label08 with label21;
        catch java.io.IOException from label09 to label10 with label21;
        catch java.lang.NullPointerException from label12 to label14 with label11;
        catch java.lang.NullPointerException from label15 to label20 with label11;
        catch java.io.IOException from label12 to label13 with label21;
        catch java.io.IOException from label16 to label17 with label21;
        catch java.io.IOException from label18 to label19 with label21;
    }

    public void disconnect()
    {
        java.net.HttpURLConnection $r1;
        twitter4j.http.HttpResponse r0;

        r0 := @this: twitter4j.http.HttpResponse;

        $r1 = r0.<twitter4j.http.HttpResponse: java.net.HttpURLConnection con>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

        return;
    }

    public java.lang.String getResponseHeader(java.lang.String)
    {
        java.net.HttpURLConnection $r2;
        java.lang.String $r1;
        twitter4j.http.HttpResponse r0;

        r0 := @this: twitter4j.http.HttpResponse;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.http.HttpResponse: java.net.HttpURLConnection con>;

        $r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>($r1);

        return $r1;
    }

    public int getStatusCode()
    {
        int i0;
        twitter4j.http.HttpResponse r0;

        r0 := @this: twitter4j.http.HttpResponse;

        i0 = r0.<twitter4j.http.HttpResponse: int statusCode>;

        return i0;
    }

    public java.lang.String toString()
    {
        java.net.HttpURLConnection $r5;
        twitter4j.http.HttpResponse r0;
        java.lang.StringBuffer $r2;
        org.w3c.dom.Document $r3;
        int $i0;
        java.lang.String $r1;
        java.io.InputStream $r4;

        r0 := @this: twitter4j.http.HttpResponse;

        $r1 = r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString>;

        if $r1 == null goto label1;

        $r1 = r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString>;

        return $r1;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Response{statusCode=");

        $i0 = r0.<twitter4j.http.HttpResponse: int statusCode>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", response=");

        $r3 = r0.<twitter4j.http.HttpResponse: org.w3c.dom.Document responseAsDocument>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", responseString=\'");

        $r1 = r0.<twitter4j.http.HttpResponse: java.lang.String responseAsString>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", is=");

        $r4 = r0.<twitter4j.http.HttpResponse: java.io.InputStream is>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", con=");

        $r5 = r0.<twitter4j.http.HttpResponse: java.net.HttpURLConnection con>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }
}
