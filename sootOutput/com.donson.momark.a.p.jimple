public class com.donson.momark.a.p extends android.app.Application
{

    public void <init>()
    {
        com.donson.momark.a.p r0;

        r0 := @this: com.donson.momark.a.p;

        specialinvoke r0.<android.app.Application: void <init>()>();

        return;
    }

    public static java.lang.String a(android.content.Context)
    {
        android.content.Context $r0;
        org.json.JSONException $r5;
        org.json.JSONObject $r1, $r2;
        com.donson.momark.a.a.t $r3;
        int $i0;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r3 = staticinvoke <com.donson.momark.a.p: com.donson.momark.a.a.t d(android.content.Context)>($r0);

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

     label01:
        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String a()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("bp", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String d()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("xh", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String e()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("yy", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String g()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sid", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String h()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("av", $r4);

     label02:
        $r4 = <com.donson.momark.util.e: java.lang.String i>;

     label03:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sv", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String j()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("apv", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String w()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("pm", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String b()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("mm", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String c()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("mac", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String f()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("wl", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String i()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("iso", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String k()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sim", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String o()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("bn", $r4);

        $i0 = virtualinvoke $r3.<com.donson.momark.a.a.t: int p()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("im", $i0);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("cb", 0);

        $i0 = virtualinvoke $r3.<com.donson.momark.a.a.t: int n()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("t", $i0);

        $r4 = staticinvoke <com.donson.momark.a.o: java.lang.String a(android.content.Context)>($r0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("android.permission.ACCESS_COARSE_LOCATION");

     label04:
        if $z0 != 0 goto label07;

     label05:
        $r4 = staticinvoke <com.donson.momark.a.o: java.lang.String a(android.content.Context)>($r0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("android.permission.ACCESS_FINE_LOCATION");

     label06:
        if $z0 == 0 goto label08;

     label07:
        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String m()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("lo", $r4);

        $r4 = virtualinvoke $r3.<com.donson.momark.a.a.t: java.lang.String l()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("la", $r4);

     label08:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("data", $r2);

        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

     label09:
        return $r4;

     label10:
        $r5 := @caughtexception;

        virtualinvoke $r5.<org.json.JSONException: void printStackTrace()>();

        return "";

        catch org.json.JSONException from label01 to label02 with label10;
        catch org.json.JSONException from label03 to label04 with label10;
        catch org.json.JSONException from label05 to label06 with label10;
        catch org.json.JSONException from label07 to label09 with label10;
    }

    public static com.donson.momark.a.a.t d(android.content.Context)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r14;
        android.net.wifi.WifiInfo $r17;
        android.view.WindowManager $r9;
        long $l0, $l3;
        android.content.Intent $r20;
        android.content.pm.PackageInfo $r15;
        com.donson.momark.util.y $r22;
        android.content.ContentResolver $r11;
        java.util.Locale $r3;
        com.donson.momark.a.a.t $r1;
        android.telephony.TelephonyManager $r6;
        int $i1, $i2;
        android.view.Display $r10;
        java.lang.String $r4;
        boolean $z0;
        android.net.ConnectivityManager $r18;
        android.content.ComponentName $r21;
        android.net.NetworkInfo $r19;
        android.util.DisplayMetrics $r7;
        java.io.File $r12;
        java.lang.Exception $r23;
        android.os.StatFs $r13;
        android.net.wifi.WifiManager $r16;
        java.lang.StringBuilder $r2;
        java.lang.Object $r5;
        android.app.Activity $r8;

        $r0 := @parameter0: android.content.Context;

        $r1 = new com.donson.momark.a.a.t;

        specialinvoke $r1.<com.donson.momark.a.a.t: void <init>()>();

     label01:
        virtualinvoke $r1.<com.donson.momark.a.a.t: void a(int)>(1);

     label02:
        $r2 = new java.lang.StringBuilder;

     label03:
        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r3.<java.util.Locale: java.lang.String getCountry()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r3.<java.util.Locale: java.lang.String getLanguage()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        if $r4 == null goto label06;

     label05:
        virtualinvoke $r1.<com.donson.momark.a.a.t: void g(java.lang.String)>($r4);

     label06:
        $r4 = staticinvoke <com.donson.momark.a.o: java.lang.String a(android.content.Context)>($r0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("android.permission.READ_PHONE_STATE");

     label07:
        if $z0 == 0 goto label16;

     label08:
        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r6 = (android.telephony.TelephonyManager) $r5;

        $r4 = virtualinvoke $r6.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>();

        virtualinvoke $r1.<com.donson.momark.a.a.t: void a(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>();

     label09:
        if $r4 == null goto label11;

     label10:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, 5);

        virtualinvoke $r1.<com.donson.momark.a.a.t: void l(java.lang.String)>($r4);

     label11:
        $r4 = virtualinvoke $r6.<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>();

        virtualinvoke $r1.<com.donson.momark.a.a.t: void n(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

     label12:
        if $r4 == null goto label51;

     label13:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("000000000000000");

     label14:
        if $z0 == 0 goto label51;

     label15:
        virtualinvoke $r1.<com.donson.momark.a.a.t: void d(int)>(1);

     label16:
        $r4 = <android.os.Build$VERSION: java.lang.String SDK>;

     label17:
        virtualinvoke $r1.<com.donson.momark.a.a.t: void w(java.lang.String)>($r4);

     label18:
        $r2 = new java.lang.StringBuilder;

     label19:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Android:");

     label20:
        $r4 = <android.os.Build$VERSION: java.lang.String RELEASE>;

     label21:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.donson.momark.a.a.t: void j(java.lang.String)>($r4);

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r3.<java.util.Locale: java.lang.String getCountry()>();

        virtualinvoke $r1.<com.donson.momark.a.a.t: void m(java.lang.String)>($r4);

     label22:
        $r4 = <android.os.Build: java.lang.String MODEL>;

     label23:
        virtualinvoke $r1.<com.donson.momark.a.a.t: void e(java.lang.String)>($r4);

     label24:
        $r4 = <android.os.Build: java.lang.String BRAND>;

     label25:
        virtualinvoke $r1.<com.donson.momark.a.a.t: void d(java.lang.String)>($r4);

     label26:
        $r7 = new android.util.DisplayMetrics;

     label27:
        specialinvoke $r7.<android.util.DisplayMetrics: void <init>()>();

        $r8 = (android.app.Activity) $r0;

        $r9 = virtualinvoke $r8.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r10 = interfaceinvoke $r9.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r10.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r7);

        $i1 = $r7.<android.util.DisplayMetrics: int widthPixels>;

        $i2 = $r7.<android.util.DisplayMetrics: int heightPixels>;

     label28:
        if $i1 >= $i2 goto label54;

        $r2 = new java.lang.StringBuilder;

     label29:
        $i1 = $r7.<android.util.DisplayMetrics: int widthPixels>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $i1 = $r7.<android.util.DisplayMetrics: int heightPixels>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label30:
        virtualinvoke $r1.<com.donson.momark.a.a.t: void c(java.lang.String)>($r4);

        $r11 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r11, "android_id");

     label31:
        if $r4 == null goto label57;

     label32:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r1.<com.donson.momark.a.a.t: void h(java.lang.String)>($r4);

     label33:
        $r12 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

     label34:
        $r13 = new android.os.StatFs;

     label35:
        $r4 = virtualinvoke $r12.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r13.<android.os.StatFs: void <init>(java.lang.String)>($r4);

        $i1 = virtualinvoke $r13.<android.os.StatFs: int getBlockSize()>();

     label36:
        $l3 = (long) $i1;

     label37:
        $i1 = virtualinvoke $r13.<android.os.StatFs: int getBlockCount()>();

     label38:
        $l0 = (long) $i1;

        $l0 = $l3 * $l0;

     label39:
        $r4 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>($r0, $l0);

        virtualinvoke $r1.<com.donson.momark.a.a.t: void f(java.lang.String)>($r4);

        $r14 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r15 = virtualinvoke $r14.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r4, 0);

        $r4 = $r15.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label40:
        <com.donson.momark.util.e: java.lang.String f> = $r4;

        $r4 = <com.donson.momark.util.e: java.lang.String f>;

     label41:
        virtualinvoke $r1.<com.donson.momark.a.a.t: void b(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r16 = (android.net.wifi.WifiManager) $r5;

        $r17 = virtualinvoke $r16.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r4 = virtualinvoke $r17.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

        virtualinvoke $r1.<com.donson.momark.a.a.t: void i(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r18 = (android.net.ConnectivityManager) $r5;

        $r19 = virtualinvoke $r18.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label42:
        $r4 = "";

        if $r19 == null goto label44;

     label43:
        $r4 = virtualinvoke $r19.<android.net.NetworkInfo: java.lang.String getTypeName()>();

     label44:
        virtualinvoke $r1.<com.donson.momark.a.a.t: void k(java.lang.String)>($r4);

        $r14 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r20 = virtualinvoke $r14.<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>($r4);

        $r21 = virtualinvoke $r20.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r4 = virtualinvoke $r21.<android.content.ComponentName: java.lang.String getClassName()>();

        virtualinvoke $r1.<com.donson.momark.a.a.t: void q(java.lang.String)>($r4);

        $r4 = staticinvoke <com.donson.momark.a.o: java.lang.String a(android.content.Context)>($r0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("android.permission.ACCESS_COARSE_LOCATION");

     label45:
        if $z0 != 0 goto label48;

     label46:
        $r4 = staticinvoke <com.donson.momark.a.o: java.lang.String a(android.content.Context)>($r0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("android.permission.ACCESS_FINE_LOCATION");

     label47:
        if $z0 == 0 goto label59;

     label48:
        $r22 = new com.donson.momark.util.y;

     label49:
        specialinvoke $r22.<com.donson.momark.util.y: void <init>(android.content.Context)>($r0);

        $r4 = virtualinvoke $r22.<com.donson.momark.util.y: java.lang.String a()>();

        virtualinvoke $r1.<com.donson.momark.a.a.t: void o(java.lang.String)>($r4);

        $r4 = virtualinvoke $r22.<com.donson.momark.util.y: java.lang.String d()>();

        virtualinvoke $r1.<com.donson.momark.a.a.t: void p(java.lang.String)>($r4);

     label50:
        return $r1;

     label51:
        virtualinvoke $r1.<com.donson.momark.a.a.t: void d(int)>(0);

     label52:
        goto label16;

     label53:
        $r23 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" SubmitData.getDeviceInfo 40021:get device data error.", $r23);

        return $r1;

     label54:
        $r2 = new java.lang.StringBuilder;

     label55:
        $i1 = $r7.<android.util.DisplayMetrics: int heightPixels>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $i1 = $r7.<android.util.DisplayMetrics: int widthPixels>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label56:
        goto label30;

     label57:
        $r4 = virtualinvoke $r1.<com.donson.momark.a.a.t: java.lang.String k()>();

        virtualinvoke $r1.<com.donson.momark.a.a.t: void h(java.lang.String)>($r4);

     label58:
        goto label33;

     label59:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label53;
        catch java.lang.Exception from label03 to label04 with label53;
        catch java.lang.Exception from label05 to label07 with label53;
        catch java.lang.Exception from label08 to label09 with label53;
        catch java.lang.Exception from label10 to label12 with label53;
        catch java.lang.Exception from label13 to label14 with label53;
        catch java.lang.Exception from label15 to label16 with label53;
        catch java.lang.Exception from label17 to label18 with label53;
        catch java.lang.Exception from label19 to label20 with label53;
        catch java.lang.Exception from label21 to label22 with label53;
        catch java.lang.Exception from label23 to label24 with label53;
        catch java.lang.Exception from label25 to label26 with label53;
        catch java.lang.Exception from label27 to label28 with label53;
        catch java.lang.Exception from label29 to label30 with label53;
        catch java.lang.Exception from label30 to label31 with label53;
        catch java.lang.Exception from label32 to label34 with label53;
        catch java.lang.Exception from label35 to label36 with label53;
        catch java.lang.Exception from label37 to label38 with label53;
        catch java.lang.Exception from label39 to label40 with label53;
        catch java.lang.Exception from label41 to label42 with label53;
        catch java.lang.Exception from label43 to label44 with label53;
        catch java.lang.Exception from label44 to label45 with label53;
        catch java.lang.Exception from label46 to label47 with label53;
        catch java.lang.Exception from label49 to label50 with label53;
        catch java.lang.Exception from label51 to label52 with label53;
        catch java.lang.Exception from label55 to label56 with label53;
        catch java.lang.Exception from label57 to label58 with label53;
    }
}
