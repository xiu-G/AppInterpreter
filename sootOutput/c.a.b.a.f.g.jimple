public abstract class c.a.b.a.f.g extends java.lang.Object
{

    public void <init>()
    {
        c.a.b.a.f.g r0;

        r0 := @this: c.a.b.a.f.g;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public c.a.b.a.f.g a(java.util.concurrent.Executor, c.a.b.a.f.b)
    {
        java.lang.UnsupportedOperationException $r3;
        java.util.concurrent.Executor $r1;
        c.a.b.a.f.g r0;
        c.a.b.a.f.b $r2;

        r0 := @this: c.a.b.a.f.g;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: c.a.b.a.f.b;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("addOnCanceledListener is not implemented");

        throw $r3;
    }

    public abstract c.a.b.a.f.g b(java.util.concurrent.Executor, c.a.b.a.f.c);

    public abstract c.a.b.a.f.g c(java.util.concurrent.Executor, c.a.b.a.f.d);

    public c.a.b.a.f.g d(java.util.concurrent.Executor, c.a.b.a.f.a)
    {
        java.lang.UnsupportedOperationException $r3;
        java.util.concurrent.Executor $r1;
        c.a.b.a.f.g r0;
        c.a.b.a.f.a $r2;

        r0 := @this: c.a.b.a.f.g;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: c.a.b.a.f.a;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("continueWith is not implemented");

        throw $r3;
    }

    public c.a.b.a.f.g e(java.util.concurrent.Executor, c.a.b.a.f.a)
    {
        java.lang.UnsupportedOperationException $r3;
        java.util.concurrent.Executor $r1;
        c.a.b.a.f.g r0;
        c.a.b.a.f.a $r2;

        r0 := @this: c.a.b.a.f.g;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: c.a.b.a.f.a;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("continueWithTask is not implemented");

        throw $r3;
    }

    public abstract java.lang.Exception f();

    public abstract java.lang.Object g();

    public abstract java.lang.Object h(java.lang.Class);

    public abstract boolean i();

    public abstract boolean j();

    public abstract boolean k();

    public c.a.b.a.f.g l(java.util.concurrent.Executor, c.a.b.a.f.f)
    {
        java.lang.UnsupportedOperationException $r3;
        java.util.concurrent.Executor $r1;
        c.a.b.a.f.g r0;
        c.a.b.a.f.f $r2;

        r0 := @this: c.a.b.a.f.g;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: c.a.b.a.f.f;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("onSuccessTask is not implemented");

        throw $r3;
    }
}
