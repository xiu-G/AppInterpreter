public final class com.apperhand.device.a.b.a extends com.apperhand.device.a.b.b
{
    private com.apperhand.device.a.a.a g;

    public void <init>(com.apperhand.device.a.b, com.apperhand.device.a.a, java.lang.String, com.apperhand.common.dto.Command$Commands)
    {
        com.apperhand.common.dto.Command$Commands $r4;
        java.lang.String $r3;
        com.apperhand.device.a.a $r2;
        com.apperhand.device.a.a.a $r5;
        com.apperhand.device.a.b $r1;
        com.apperhand.device.a.b.a r0;

        r0 := @this: com.apperhand.device.a.b.a;

        $r1 := @parameter0: com.apperhand.device.a.b;

        $r2 := @parameter1: com.apperhand.device.a.a;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.apperhand.common.dto.Command$Commands;

        specialinvoke r0.<com.apperhand.device.a.b.b: void <init>(com.apperhand.device.a.b,com.apperhand.device.a.a,java.lang.String,com.apperhand.common.dto.Command$Commands)>($r1, $r2, $r3, $r4);

        $r5 = interfaceinvoke $r2.<com.apperhand.device.a.a: com.apperhand.device.a.a.a c()>();

        r0.<com.apperhand.device.a.b.a: com.apperhand.device.a.a.a g> = $r5;

        return;
    }

    private com.apperhand.common.dto.protocol.ActivationResponse a(com.apperhand.common.dto.protocol.ActivationRequest)
    {
        com.apperhand.common.dto.Command$Commands $r5;
        com.apperhand.device.a.c.a $r4;
        com.apperhand.common.dto.protocol.ActivationResponse $r7;
        com.apperhand.device.a.b.a r0;
        com.apperhand.device.a.d.c$a $r10;
        com.apperhand.device.a.d.c $r9;
        com.apperhand.common.dto.protocol.ActivationRequest $r1;
        com.apperhand.device.a.d.f $r8;
        java.lang.String $r2;
        com.apperhand.device.a.a $r3;
        com.apperhand.common.dto.protocol.BaseResponse $r6;

        r0 := @this: com.apperhand.device.a.b.a;

        $r1 := @parameter0: com.apperhand.common.dto.protocol.ActivationRequest;

        $r3 = r0.<com.apperhand.device.a.b.a: com.apperhand.device.a.a e>;

     label1:
        $r4 = interfaceinvoke $r3.<com.apperhand.device.a.a: com.apperhand.device.a.c.a b()>();

     label2:
        $r5 = <com.apperhand.common.dto.Command$Commands: com.apperhand.common.dto.Command$Commands ACTIVATION>;

     label3:
        $r6 = interfaceinvoke $r4.<com.apperhand.device.a.c.a: com.apperhand.common.dto.protocol.BaseResponse a(java.lang.Object,com.apperhand.common.dto.Command$Commands,java.lang.Class)>($r1, $r5, class "Lcom/apperhand/common/dto/protocol/ActivationResponse;");

     label4:
        $r7 = (com.apperhand.common.dto.protocol.ActivationResponse) $r6;

        return $r7;

     label5:
        $r8 := @caughtexception;

        $r3 = r0.<com.apperhand.device.a.b.a: com.apperhand.device.a.a e>;

        $r9 = interfaceinvoke $r3.<com.apperhand.device.a.a: com.apperhand.device.a.d.c a()>();

        $r10 = <com.apperhand.device.a.d.c$a: com.apperhand.device.a.d.c$a b>;

        $r2 = r0.<com.apperhand.device.a.b.a: java.lang.String a>;

        interfaceinvoke $r9.<com.apperhand.device.a.d.c: void a(com.apperhand.device.a.d.c$a,java.lang.String,java.lang.String,java.lang.Throwable)>($r10, $r2, "Unable to handle Activation command!!!!", $r8);

        return null;

        catch com.apperhand.device.a.d.f from label1 to label2 with label5;
        catch com.apperhand.device.a.d.f from label3 to label4 with label5;
    }

    protected final com.apperhand.common.dto.protocol.BaseResponse a()
    {
        java.util.Collection $r5;
        com.apperhand.common.dto.protocol.ActivationResponse $r7;
        com.apperhand.device.a.b.a r0;
        com.apperhand.device.a.d.d $r4;
        com.apperhand.common.dto.protocol.ActivationRequest $r1;
        com.apperhand.common.dto.ApplicationDetails $r3;
        java.lang.String $r6;
        com.apperhand.device.a.a $r2;
        boolean $z0;

        r0 := @this: com.apperhand.device.a.b.a;

        $r1 = new com.apperhand.common.dto.protocol.ActivationRequest;

        specialinvoke $r1.<com.apperhand.common.dto.protocol.ActivationRequest: void <init>()>();

        $r2 = r0.<com.apperhand.device.a.b.a: com.apperhand.device.a.a e>;

        $r3 = interfaceinvoke $r2.<com.apperhand.device.a.a: com.apperhand.common.dto.ApplicationDetails j()>();

        virtualinvoke $r1.<com.apperhand.common.dto.protocol.ActivationRequest: void setApplicationDetails(com.apperhand.common.dto.ApplicationDetails)>($r3);

        $r2 = r0.<com.apperhand.device.a.b.a: com.apperhand.device.a.a e>;

        $r4 = interfaceinvoke $r2.<com.apperhand.device.a.a: com.apperhand.device.a.d.d i()>();

        $r5 = interfaceinvoke $r4.<com.apperhand.device.a.d.d: java.util.Collection b()>();

        virtualinvoke $r1.<com.apperhand.common.dto.protocol.ActivationRequest: void setMissingParameters(java.util.Collection)>($r5);

        $r2 = r0.<com.apperhand.device.a.b.a: com.apperhand.device.a.a e>;

        $r4 = interfaceinvoke $r2.<com.apperhand.device.a.a: com.apperhand.device.a.d.d i()>();

        $r6 = interfaceinvoke $r4.<com.apperhand.device.a.d.d: java.lang.String a(java.lang.String,java.lang.String)>("ACTIVATED", "false");

        $z0 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>($r6);

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        virtualinvoke $r1.<com.apperhand.common.dto.protocol.ActivationRequest: void setFirstTimeActivation(boolean)>($z0);

        $r7 = specialinvoke r0.<com.apperhand.device.a.b.a: com.apperhand.common.dto.protocol.ActivationResponse a(com.apperhand.common.dto.protocol.ActivationRequest)>($r1);

        return $r7;

     label2:
        $z0 = 0;

        goto label1;
    }

    protected final java.util.Map a(com.apperhand.common.dto.protocol.BaseResponse) throws com.apperhand.device.a.d.f
    {
        java.util.Iterator $r8;
        java.util.Set $r7;
        com.apperhand.common.dto.Activation $r3;
        com.apperhand.common.dto.protocol.ActivationResponse $r2;
        com.apperhand.device.a.b.a r0;
        com.apperhand.device.a.d.d $r6;
        java.util.Map $r4;
        int $i0;
        java.lang.Object $r9;
        java.lang.String $r10, $r11;
        com.apperhand.common.dto.protocol.BaseResponse $r1;
        com.apperhand.device.a.a $r5;
        boolean $z0;

        r0 := @this: com.apperhand.device.a.b.a;

        $r1 := @parameter0: com.apperhand.common.dto.protocol.BaseResponse;

        $r2 = (com.apperhand.common.dto.protocol.ActivationResponse) $r1;

        $r3 = virtualinvoke $r2.<com.apperhand.common.dto.protocol.ActivationResponse: com.apperhand.common.dto.Activation getActivation()>();

        $r4 = virtualinvoke $r3.<com.apperhand.common.dto.Activation: java.util.Map getParameters()>();

        $r5 = r0.<com.apperhand.device.a.b.a: com.apperhand.device.a.a e>;

        $r6 = interfaceinvoke $r5.<com.apperhand.device.a.a: com.apperhand.device.a.d.d i()>();

        interfaceinvoke $r6.<com.apperhand.device.a.d.d: boolean b(java.lang.String,java.lang.String)>("ACTIVATED", "true");

        if $r4 == null goto label2;

        $i0 = interfaceinvoke $r4.<java.util.Map: int size()>();

        if $i0 <= 0 goto label2;

        $r7 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.String) $r9;

        $r5 = r0.<com.apperhand.device.a.b.a: com.apperhand.device.a.a e>;

        $r6 = interfaceinvoke $r5.<com.apperhand.device.a.a: com.apperhand.device.a.d.d i()>();

        $r9 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r11 = (java.lang.String) $r9;

        interfaceinvoke $r6.<com.apperhand.device.a.d.d: boolean b(java.lang.String,java.lang.String)>($r10, $r11);

        goto label1;

     label2:
        return null;
    }

    public final void a(java.util.Map) throws com.apperhand.device.a.d.f
    {
        com.apperhand.common.dto.protocol.CommandStatusRequest $r2;
        com.apperhand.device.a.b.a r0;
        java.util.Map $r1;

        r0 := @this: com.apperhand.device.a.b.a;

        $r1 := @parameter0: java.util.Map;

        $r2 = virtualinvoke r0.<com.apperhand.device.a.b.a: com.apperhand.common.dto.protocol.CommandStatusRequest b()>();

        virtualinvoke r0.<com.apperhand.device.a.b.a: void a(com.apperhand.common.dto.protocol.CommandStatusRequest)>($r2);

        return;
    }

    protected final com.apperhand.common.dto.protocol.CommandStatusRequest b() throws com.apperhand.device.a.d.f
    {
        com.apperhand.common.dto.Command$Commands $r1;
        com.apperhand.device.a.a.a $r4;
        com.apperhand.device.a.b.a r0;
        java.util.List $r9;
        com.apperhand.common.dto.protocol.CommandStatusRequest $r3;
        com.apperhand.common.dto.CommandStatus$Status $r2;
        java.util.Map $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8;
        com.apperhand.device.a.a $r7;

        r0 := @this: com.apperhand.device.a.b.a;

        $r3 = specialinvoke r0.<com.apperhand.device.a.b.b: com.apperhand.common.dto.protocol.CommandStatusRequest b()>();

        $r4 = r0.<com.apperhand.device.a.b.a: com.apperhand.device.a.a.a g>;

        $r5 = interfaceinvoke $r4.<com.apperhand.device.a.a.a: java.util.Map a()>();

        $r1 = <com.apperhand.common.dto.Command$Commands: com.apperhand.common.dto.Command$Commands ACTIVATION>;

        $r2 = <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status SUCCESS>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.apperhand.device.a.b.a: com.apperhand.device.a.a e>;

        $r8 = interfaceinvoke $r7.<com.apperhand.device.a.a: java.lang.String k()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was activated, SABABA!!!");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke r0.<com.apperhand.device.a.b.a: java.util.List a(com.apperhand.common.dto.Command$Commands,com.apperhand.common.dto.CommandStatus$Status,java.lang.String,java.util.Map)>($r1, $r2, $r8, $r5);

        virtualinvoke $r3.<com.apperhand.common.dto.protocol.CommandStatusRequest: void setStatuses(java.util.List)>($r9);

        return $r3;
    }
}
