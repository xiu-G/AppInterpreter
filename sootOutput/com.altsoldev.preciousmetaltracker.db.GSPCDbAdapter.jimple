public class com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter extends java.lang.Object
{
    public static final java.lang.String ADPROPERTIES_AD;
    public static final java.lang.String ADPROPERTIES_DATETIME;
    public static final java.lang.String ADPROPERTIES_MAXSHOWADPERDAY;
    public static final java.lang.String ADPROPERTIES_SHOWADPROB;
    public static final java.lang.String ADPROPERTIES_SSTIMEOUT;
    public static final java.lang.String ADPROPERTIES_TABLE;
    public static final java.lang.String ADREQUESTCOUNTER_AD;
    public static final java.lang.String ADREQUESTCOUNTER_DATE;
    public static final java.lang.String ADREQUESTCOUNTER_REQUESTCOUNT;
    public static final java.lang.String ADREQUESTCOUNTER_TABLE;
    public static final java.lang.String CACHEFEEDLISTVERSION_TABLE;
    public static final java.lang.String CACHEFEEDLISTVERSION_TYPE;
    public static final java.lang.String CACHEFEEDLISTVERSION_VERSION;
    public static final java.lang.String CACHEFEEDLIST_ICON;
    public static final java.lang.String CACHEFEEDLIST_NAME;
    public static final java.lang.String CACHEFEEDLIST_RSSFEEDURL;
    public static final java.lang.String CACHEFEEDLIST_TABLE;
    public static final java.lang.String SPLASHSCREENFLAGS_DATE;
    public static final java.lang.String SPLASHSCREENFLAGS_FLAG;
    public static final java.lang.String SPLASHSCREENFLAGS_TABLE;
    public static final java.lang.String SPLASHSCREENFLAGS_VALUE;
    public static final java.lang.String TAG;
    private android.database.sqlite.SQLiteDatabase gspcDb;
    private com.altsoldev.preciousmetaltracker.db.DatabaseHelper gspcDbHelper;
    public final android.content.Context mCtx;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.content.Context mCtx> = $r1;

        return;
    }

    public long addToCacheFeedList(java.lang.String, java.lang.String, android.graphics.Bitmap)
    {
        byte[] $r8;
        java.io.ByteArrayOutputStream r6;
        java.lang.String[] r4;
        long $l1;
        android.database.sqlite.SQLiteDatabase $r9;
        android.graphics.Bitmap $r3;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        int $i0;
        android.graphics.Bitmap$CompressFormat $r7;
        java.lang.String $r1, $r2;
        android.content.ContentValues r5;
        android.database.Cursor $r10;
        boolean z0;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.graphics.Bitmap;

        r5 = new android.content.ContentValues;

        specialinvoke r5.<android.content.ContentValues: void <init>()>();

        if $r1 == null goto label1;

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r1);

     label1:
        if $r2 == null goto label2;

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rssfeedurl", $r2);

     label2:
        if $r3 == null goto label3;

        r6 = new java.io.ByteArrayOutputStream;

        specialinvoke r6.<java.io.ByteArrayOutputStream: void <init>()>();

        $r7 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke $r3.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r7, 100, r6);

        $r8 = virtualinvoke r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,byte[])>("icon", $r8);

     label3:
        r4 = newarray (java.lang.String)[1];

        r4[0] = $r2;

        $r9 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $r10 = virtualinvoke $r9.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select name from cachefeedlist where rssfeedurl = ?", r4);

        z0 = 0;

        $i0 = interfaceinvoke $r10.<android.database.Cursor: int getCount()>();

        if $i0 > 0 goto label4;

        z0 = 1;

     label4:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

        if z0 == 0 goto label5;

        $r9 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $l1 = virtualinvoke $r9.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("cachefeedlist", null, r5);

        return $l1;

     label5:
        return -1L;
    }

    public void close()
    {
        com.altsoldev.preciousmetaltracker.db.DatabaseHelper $r1;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: com.altsoldev.preciousmetaltracker.db.DatabaseHelper gspcDbHelper>;

        virtualinvoke $r1.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: void close()>();

        return;
    }

    public boolean deleteAllFromFeedList()
    {
        int $i0;
        android.database.sqlite.SQLiteDatabase $r1;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $i0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("cachefeedlist", null, null);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.database.Cursor fetchAdProperties(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        android.database.Cursor $r4;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("select ad, sstimeout, showadprob, maxshowadperday, datetime from adproperties where ad = \'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iad1");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null);

        return $r4;
    }

    public android.database.Cursor fetchAdRequestCounter(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        android.database.Cursor $r4;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("select ad, requestcount, date from adrequestcounter where ad = \'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iad1");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null);

        return $r4;
    }

    public android.database.Cursor fetchCacheFeedList()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        android.database.Cursor $r2;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $r2 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select name, rssfeedurl, icon from cachefeedlist order by name asc", null);

        return $r2;
    }

    public java.lang.String getCacheFeedListVersion()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.String $r3, r4;
        android.database.Cursor $r2;
        boolean $z0;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $r2 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select version from cachefeedlistversion where type = \'cachefeedlist\'", null);

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("version");

        $r3 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r4 = $r3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Version:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GSPCDbAdapter", $r3);

     label1:
        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return r4;

     label2:
        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("version");

        $r3 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r4 = $r3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Version:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GSPCDbAdapter", $r3);

        goto label1;

     label3:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GSPCDbAdapter", "WTH");

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return null;
    }

    public int getValueByFlag(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        android.database.Cursor $r4;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("select value from splashscreenflags where flag = \'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("firstboot");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null);

        interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

        $r1 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $i0;
    }

    public com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter open() throws android.database.SQLException
    {
        java.lang.Throwable r1;
        android.content.Context $r2;
        java.io.IOException $r6;
        android.database.sqlite.SQLiteDatabase $r4;
        com.altsoldev.preciousmetaltracker.db.DatabaseHelper $r3, $r5;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        boolean $z0;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r3 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: com.altsoldev.preciousmetaltracker.db.DatabaseHelper gspcDbHelper>;

        if $r3 != null goto label1;

        $r5 = new com.altsoldev.preciousmetaltracker.db.DatabaseHelper;

        $r2 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.content.Context mCtx>;

        specialinvoke $r5.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: void <init>(android.content.Context,java.lang.String)>($r2, "gspc.db");

        r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: com.altsoldev.preciousmetaltracker.db.DatabaseHelper gspcDbHelper> = $r5;

     label1:
        $r3 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: com.altsoldev.preciousmetaltracker.db.DatabaseHelper gspcDbHelper>;

     label2:
        virtualinvoke $r3.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: void createDataBase()>();

     label3:
        $r4 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        if $r4 == null goto label4;

        $r4 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $z0 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label6;

     label4:
        $r3 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: com.altsoldev.preciousmetaltracker.db.DatabaseHelper gspcDbHelper>;

        $r4 = virtualinvoke $r3.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase openDataBase()>();

        r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb> = $r4;

        return r0;

     label5:
        r1 := @caughtexception;

        $r6 = (java.io.IOException) r1;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

        goto label3;

     label6:
        return r0;

        catch java.io.IOException from label2 to label3 with label5;
    }

    public void setValueByFlag(java.lang.String, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r5;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r2, $r3;
        android.content.ContentValues r4;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 = new android.content.ContentValues;

        specialinvoke r4.<android.content.ContentValues: void <init>()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("flag", "firstboot");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("value", "0");

        if $r3 == null goto label1;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("date", $r3);

     label1:
        $r5 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("flag = \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("firstboot");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("splashscreenflags", r4, $r1, null);

        return;
    }

    public void updateAdProperties(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r7;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        java.lang.StringBuilder $r8;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        android.content.ContentValues r6;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        r6 = new android.content.ContentValues;

        specialinvoke r6.<android.content.ContentValues: void <init>()>();

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ad", "iad1");

        if $r2 == null goto label1;

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("sstimeout", $r2);

     label1:
        if $r3 == null goto label2;

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("showadprob", $r3);

     label2:
        if $r4 == null goto label3;

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("maxshowadperday", $r4);

     label3:
        if $r5 == null goto label4;

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("datetime", $r5);

     label4:
        $r7 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("ad = \'");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iad1");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("adproperties", r6, $r1, null);

        return;
    }

    public void updateAdRequestCounter(java.lang.String, int, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r5;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r2, $r4;
        android.content.ContentValues r3;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        r3 = new android.content.ContentValues;

        specialinvoke r3.<android.content.ContentValues: void <init>()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ad", "iad1");

        if $i0 < 0 goto label1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("requestcount", $r4);

     label1:
        if $r2 == null goto label2;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("date", $r2);

     label2:
        $r5 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("ad = \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iad1");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("adrequestcounter", r3, $r1, null);

        return;
    }

    public void updateCacheFeedListVersion(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r3;
        com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter r0;
        java.lang.String $r1;
        android.content.ContentValues r2;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter;

        $r1 := @parameter0: java.lang.String;

        r2 = new android.content.ContentValues;

        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        if $r1 == null goto label1;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("version", $r1);

     label1:
        $r3 = r0.<com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: android.database.sqlite.SQLiteDatabase gspcDb>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("cachefeedlistversion", r2, "type=\'cachefeedlist\'", null);

        return;
    }

    public static void <clinit>()
    {
        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String TAG> = "GSPCDbAdapter";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String SPLASHSCREENFLAGS_VALUE> = "value";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String SPLASHSCREENFLAGS_TABLE> = "splashscreenflags";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String SPLASHSCREENFLAGS_FLAG> = "flag";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String SPLASHSCREENFLAGS_DATE> = "date";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String CACHEFEEDLIST_TABLE> = "cachefeedlist";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String CACHEFEEDLIST_RSSFEEDURL> = "rssfeedurl";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String CACHEFEEDLIST_NAME> = "name";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String CACHEFEEDLIST_ICON> = "icon";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String CACHEFEEDLISTVERSION_VERSION> = "version";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String CACHEFEEDLISTVERSION_TYPE> = "type";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String CACHEFEEDLISTVERSION_TABLE> = "cachefeedlistversion";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String ADREQUESTCOUNTER_TABLE> = "adrequestcounter";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String ADREQUESTCOUNTER_REQUESTCOUNT> = "requestcount";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String ADREQUESTCOUNTER_DATE> = "date";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String ADREQUESTCOUNTER_AD> = "ad";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String ADPROPERTIES_TABLE> = "adproperties";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String ADPROPERTIES_SSTIMEOUT> = "sstimeout";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String ADPROPERTIES_SHOWADPROB> = "showadprob";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String ADPROPERTIES_MAXSHOWADPERDAY> = "maxshowadperday";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String ADPROPERTIES_DATETIME> = "datetime";

        <com.altsoldev.preciousmetaltracker.db.GSPCDbAdapter: java.lang.String ADPROPERTIES_AD> = "ad";

        return;
    }
}
