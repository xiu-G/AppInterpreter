public class com.facebook.internal.BundleJSONConverter extends java.lang.Object
{
    private static final java.util.Map SETTERS;

    static void <clinit>()
    {
        com.facebook.internal.BundleJSONConverter$1 $r1;
        com.facebook.internal.BundleJSONConverter$3 $r4;
        com.facebook.internal.BundleJSONConverter$2 $r3;
        java.util.HashMap $r0;
        java.util.Map $r2;
        com.facebook.internal.BundleJSONConverter$5 $r6;
        com.facebook.internal.BundleJSONConverter$4 $r5;
        com.facebook.internal.BundleJSONConverter$7 $r8;
        com.facebook.internal.BundleJSONConverter$6 $r7;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS> = $r0;

        $r1 = new com.facebook.internal.BundleJSONConverter$1;

        specialinvoke $r1.<com.facebook.internal.BundleJSONConverter$1: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Boolean;", $r1);

        $r2 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r3 = new com.facebook.internal.BundleJSONConverter$2;

        specialinvoke $r3.<com.facebook.internal.BundleJSONConverter$2: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Integer;", $r3);

        $r2 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r4 = new com.facebook.internal.BundleJSONConverter$3;

        specialinvoke $r4.<com.facebook.internal.BundleJSONConverter$3: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r4);

        $r2 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r5 = new com.facebook.internal.BundleJSONConverter$4;

        specialinvoke $r5.<com.facebook.internal.BundleJSONConverter$4: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Double;", $r5);

        $r2 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r6 = new com.facebook.internal.BundleJSONConverter$5;

        specialinvoke $r6.<com.facebook.internal.BundleJSONConverter$5: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/String;", $r6);

        $r2 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r7 = new com.facebook.internal.BundleJSONConverter$6;

        specialinvoke $r7.<com.facebook.internal.BundleJSONConverter$6: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "[Ljava/lang/String;", $r7);

        $r2 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r8 = new com.facebook.internal.BundleJSONConverter$7;

        specialinvoke $r8.<com.facebook.internal.BundleJSONConverter$7: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Lorg/json/JSONArray;", $r8);

        return;
    }

    public void <init>()
    {
        com.facebook.internal.BundleJSONConverter r0;

        r0 := @this: com.facebook.internal.BundleJSONConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.os.Bundle convertToBundle(org.json.JSONObject)
    {
        android.os.Bundle $r1, $r7;
        java.util.Iterator $r2;
        java.lang.IllegalArgumentException $r11;
        org.json.JSONObject $r0, $r6;
        com.facebook.internal.BundleJSONConverter$Setter $r10;
        java.util.Map $r8;
        java.lang.Object $r3, $r5;
        java.lang.Class $r9;
        java.lang.StringBuilder $r12;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r1;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

        if $r3 == null goto label1;

        $r5 = <org.json.JSONObject: java.lang.Object NULL>;

        if $r3 == $r5 goto label1;

        $z0 = $r3 instanceof org.json.JSONObject;

        if $z0 == 0 goto label3;

        $r6 = (org.json.JSONObject) $r3;

        $r7 = staticinvoke <com.facebook.internal.BundleJSONConverter: android.os.Bundle convertToBundle(org.json.JSONObject)>($r6);

        virtualinvoke $r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r4, $r7);

        goto label1;

     label3:
        $r8 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r9 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r10 = (com.facebook.internal.BundleJSONConverter$Setter) $r5;

        if $r10 != null goto label4;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unsupported type: ");

        $r9 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r11;

     label4:
        interfaceinvoke $r10.<com.facebook.internal.BundleJSONConverter$Setter: void setOnBundle(android.os.Bundle,java.lang.String,java.lang.Object)>($r1, $r4, $r3);

        goto label1;
    }

    public static org.json.JSONObject convertToJSON(android.os.Bundle)
    {
        android.os.Bundle $r0, $r10;
        org.json.JSONObject $r1, $r11;
        com.facebook.internal.BundleJSONConverter$Setter $r15;
        java.util.Map $r12;
        java.lang.String $r5, $r9;
        boolean $z0;
        java.util.Iterator $r3, $r8;
        java.util.Set $r2;
        java.lang.IllegalArgumentException $r16;
        java.util.List $r7;
        java.lang.Object $r4, $r14;
        java.lang.Class $r13;
        java.lang.StringBuilder $r17;
        org.json.JSONArray $r6;

        $r0 := @parameter0: android.os.Bundle;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $r2 = virtualinvoke $r0.<android.os.Bundle: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r1;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r5);

        if $r4 == null goto label1;

        $z0 = $r4 instanceof java.util.List;

        if $z0 == 0 goto label5;

        $r6 = new org.json.JSONArray;

        specialinvoke $r6.<org.json.JSONArray: void <init>()>();

        $r7 = (java.util.List) $r4;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r5, $r6);

        goto label1;

     label4:
        $r4 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.String) $r4;

        virtualinvoke $r6.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r9);

        goto label3;

     label5:
        $z0 = $r4 instanceof android.os.Bundle;

        if $z0 == 0 goto label6;

        $r10 = (android.os.Bundle) $r4;

        $r11 = staticinvoke <com.facebook.internal.BundleJSONConverter: org.json.JSONObject convertToJSON(android.os.Bundle)>($r10);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r5, $r11);

        goto label1;

     label6:
        $r12 = <com.facebook.internal.BundleJSONConverter: java.util.Map SETTERS>;

        $r13 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r15 = (com.facebook.internal.BundleJSONConverter$Setter) $r14;

        if $r15 != null goto label7;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unsupported type: ");

        $r13 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r16;

     label7:
        interfaceinvoke $r15.<com.facebook.internal.BundleJSONConverter$Setter: void setOnJSON(org.json.JSONObject,java.lang.String,java.lang.Object)>($r1, $r5, $r4);

        goto label1;
    }
}
