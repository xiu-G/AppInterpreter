public abstract class com.a.a.c.p extends java.lang.Object implements com.a.a.l
{

    public void <init>()
    {
        com.a.a.c.p r0;

        r0 := @this: com.a.a.c.p;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static int a(int[], int[], int)
    {
        int[] $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i5 = $r0[$i2];

        $i4 = $i4 + $i5;

        $i5 = $r1[$i2];

        $i3 = $i3 + $i5;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        if $i4 >= $i3 goto label3;

        return 2147483647;

     label3:
        $i2 = $i4 << 8;

        $i3 = $i2 / $i3;

        $i0 = $i0 * $i3;

        $i0 = $i0 >> 8;

        $i5 = 0;

        $i2 = 0;

     label4:
        if $i5 >= $i1 goto label7;

        $i6 = $r0[$i5];

        $i6 = $i6 << 8;

        $i7 = $r1[$i5];

        $i7 = $i7 * $i3;

        if $i6 <= $i7 goto label6;

        $i6 = $i6 - $i7;

     label5:
        if $i6 > $i0 goto label8;

        $i2 = $i2 + $i6;

        $i5 = $i5 + 1;

        goto label4;

     label6:
        $i6 = $i7 - $i6;

        goto label5;

     label7:
        $i0 = $i2 / $i4;

        return $i0;

     label8:
        return 2147483647;
    }

    protected static void a(com.a.a.a.a, int, int[])
    {
        com.a.a.a.a $r0;
        com.a.a.k $r2;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        $r0 := @parameter0: com.a.a.a.a;

        $i2 := @parameter1: int;

        $r1 := @parameter2: int[];

        $i0 = lengthof $r1;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label02;

        $r1[$i1] = 0;

        $i1 = $i1 + 1;

        goto label01;

     label02:
        $i1 = $r0.<com.a.a.a.a: int b>;

        if $i2 < $i1 goto label03;

        $r2 = staticinvoke <com.a.a.k: com.a.a.k a()>();

        throw $r2;

     label03:
        $z0 = virtualinvoke $r0.<com.a.a.a.a: boolean a(int)>($i2);

        if $z0 != 0 goto label07;

        $z0 = 1;

     label04:
        $i3 = 0;

     label05:
        if $i2 >= $i1 goto label10;

        $z1 = virtualinvoke $r0.<com.a.a.a.a: boolean a(int)>($i2);

        $z1 = $z1 ^ $z0;

        if $z1 == 0 goto label08;

        $i4 = $r1[$i3];

        $i4 = $i4 + 1;

        $r1[$i3] = $i4;

     label06:
        $i2 = $i2 + 1;

        goto label05;

     label07:
        $z0 = 0;

        goto label04;

     label08:
        $i3 = $i3 + 1;

        if $i3 == $i0 goto label12;

        $r1[$i3] = 1;

        if $z0 != 0 goto label09;

        $z0 = 1;

        goto label06;

     label09:
        $z0 = 0;

        goto label06;

     label10:
        if $i3 == $i0 goto label12;

        $i0 = $i0 + -1;

        if $i3 != $i0 goto label11;

        if $i2 == $i1 goto label12;

     label11:
        $r2 = staticinvoke <com.a.a.k: com.a.a.k a()>();

        throw $r2;

     label12:
        return;
    }

    private com.a.a.n b(com.a.a.c, java.util.Hashtable)
    {
        java.util.Enumeration $r7;
        com.a.a.a.a $r3, $r5;
        java.lang.Integer $r12;
        com.a.a.c $r1;
        com.a.a.p[] $r13;
        com.a.a.e $r4;
        byte $b4;
        com.a.a.c.p r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        java.util.Hashtable $r2, $r6;
        boolean $z0;
        com.a.a.o $r11;
        com.a.a.p $r14, $r15;
        com.a.a.k $r17;
        com.a.a.m $r16;
        com.a.a.n $r10;
        float $f0, $f1;
        java.lang.Object $r8, $r9;

        r0 := @this: com.a.a.c.p;

        $r1 := @parameter0: com.a.a.c;

        $r2 := @parameter1: java.util.Hashtable;

        $i2 = virtualinvoke $r1.<com.a.a.c: int a()>();

        $i3 = virtualinvoke $r1.<com.a.a.c: int b()>();

        $r3 = new com.a.a.a.a;

        specialinvoke $r3.<com.a.a.a.a: void <init>(int)>($i2);

        $i0 = $i3 >> 1;

        if $r2 == null goto label11;

        $r4 = <com.a.a.e: com.a.a.e d>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label11;

        $z0 = 1;

     label01:
        if $z0 == 0 goto label12;

        $b4 = 8;

     label02:
        $i5 = $i3 >> $b4;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i5);

        if $z0 == 0 goto label13;

        $i6 = $i3;

     label03:
        $i7 = 0;

     label04:
        if $i7 >= $i6 goto label32;

        $i1 = $i7 + 1;

        $i1 = $i1 >> 1;

        $i8 = $i7 & 1;

        if $i8 != 0 goto label14;

        $z0 = 1;

     label05:
        if $z0 == 0 goto label15;

     label06:
        $i1 = $i1 * $i5;

        $i1 = $i0 + $i1;

        if $i1 < 0 goto label32;

        if $i1 >= $i3 goto label32;

     label07:
        $r5 = virtualinvoke $r1.<com.a.a.c: com.a.a.a.a a(int,com.a.a.a.a)>($i1, $r3);

     label08:
        $r3 = $r5;

        $i8 = 0;

     label09:
        if $i8 >= 2 goto label31;

        if $i8 != 1 goto label17;

        virtualinvoke $r5.<com.a.a.a.a: void b()>();

        if $r2 == null goto label17;

        $r4 = <com.a.a.e: com.a.a.e h>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label17;

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        $r7 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label10:
        $z0 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label16;

        $r8 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = <com.a.a.e: com.a.a.e h>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label10;

        $r9 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r8);

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label10;

     label11:
        $z0 = 0;

        goto label01;

     label12:
        $b4 = 5;

        goto label02;

     label13:
        $i6 = 15;

        goto label03;

     label14:
        $z0 = 0;

        goto label05;

     label15:
        $i1 = neg $i1;

        goto label06;

     label16:
        $r2 = $r6;

     label17:
        $r10 = virtualinvoke r0.<com.a.a.c.p: com.a.a.n a(int,com.a.a.a.a,java.util.Hashtable)>($i1, $r5, $r2);

     label18:
        if $i8 != 1 goto label33;

        $r11 = <com.a.a.o: com.a.a.o b>;

        $r12 = new java.lang.Integer;

     label19:
        specialinvoke $r12.<java.lang.Integer: void <init>(int)>(180);

        virtualinvoke $r10.<com.a.a.n: void a(com.a.a.o,java.lang.Object)>($r11, $r12);

        $r13 = virtualinvoke $r10.<com.a.a.n: com.a.a.p[] b()>();

     label20:
        $r14 = new com.a.a.p;

        $f0 = (float) $i2;

        $r15 = $r13[0];

     label21:
        $f1 = virtualinvoke $r15.<com.a.a.p: float a()>();

     label22:
        $f0 = $f0 - $f1;

        $f0 = $f0 - 1.0F;

        $r15 = $r13[0];

     label23:
        $f1 = virtualinvoke $r15.<com.a.a.p: float b()>();

        specialinvoke $r14.<com.a.a.p: void <init>(float,float)>($f0, $f1);

     label24:
        $r13[0] = $r14;

        $r14 = new com.a.a.p;

        $f0 = (float) $i2;

        $r15 = $r13[1];

     label25:
        $f1 = virtualinvoke $r15.<com.a.a.p: float a()>();

     label26:
        $f0 = $f0 - $f1;

        $f0 = $f0 - 1.0F;

        $r15 = $r13[1];

     label27:
        $f1 = virtualinvoke $r15.<com.a.a.p: float b()>();

        specialinvoke $r14.<com.a.a.p: void <init>(float,float)>($f0, $f1);

     label28:
        $r13[1] = $r14;

        return $r10;

     label29:
        $r16 := @caughtexception;

        $i8 = $i8 + 1;

        goto label09;

     label30:
        $r17 := @caughtexception;

     label31:
        $i7 = $i7 + 1;

        goto label04;

     label32:
        $r17 = staticinvoke <com.a.a.k: com.a.a.k a()>();

        throw $r17;

     label33:
        return $r10;

        catch com.a.a.k from label07 to label08 with label30;
        catch com.a.a.m from label17 to label18 with label29;
        catch com.a.a.m from label19 to label20 with label29;
        catch com.a.a.m from label21 to label22 with label29;
        catch com.a.a.m from label23 to label24 with label29;
        catch com.a.a.m from label25 to label26 with label29;
        catch com.a.a.m from label27 to label28 with label29;
    }

    protected static void b(com.a.a.a.a, int, int[])
    {
        int[] $r1;
        com.a.a.a.a $r0;
        int $i0, $i1;
        com.a.a.k $r2;
        boolean $z0, $z1;

        $r0 := @parameter0: com.a.a.a.a;

        $i0 := @parameter1: int;

        $r1 := @parameter2: int[];

        $i1 = lengthof $r1;

        $z0 = virtualinvoke $r0.<com.a.a.a.a: boolean a(int)>($i0);

     label1:
        if $i0 <= 0 goto label3;

        if $i1 < 0 goto label4;

        $i0 = $i0 + -1;

        $z1 = virtualinvoke $r0.<com.a.a.a.a: boolean a(int)>($i0);

        if $z1 == $z0 goto label1;

        $i1 = $i1 + -1;

        if $z0 != 0 goto label2;

        $z0 = 1;

        goto label1;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        if $i1 < 0 goto label4;

        $r2 = staticinvoke <com.a.a.k: com.a.a.k a()>();

        throw $r2;

     label4:
        $i0 = $i0 + 1;

        staticinvoke <com.a.a.c.p: void a(com.a.a.a.a,int,int[])>($r0, $i0, $r1);

        return;
    }

    public abstract com.a.a.n a(int, com.a.a.a.a, java.util.Hashtable);

    public com.a.a.n a(com.a.a.c, java.util.Hashtable)
    {
        com.a.a.c $r1;
        com.a.a.e $r5;
        com.a.a.c.p r0;
        com.a.a.k $r3;
        com.a.a.n $r4;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: com.a.a.c.p;

        $r1 := @parameter0: com.a.a.c;

        $r2 := @parameter1: java.util.Hashtable;

     label1:
        $r4 = specialinvoke r0.<com.a.a.c.p: com.a.a.n b(com.a.a.c,java.util.Hashtable)>($r1, $r2);

     label2:
        return $r4;

     label3:
        $r3 := @caughtexception;

        if $r2 == null goto label6;

        $r5 = <com.a.a.e: com.a.a.e d>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label6;

        $z0 = 1;

     label4:
        if $z0 == 0 goto label5;

        virtualinvoke $r1.<com.a.a.c: boolean d()>();

     label5:
        throw $r3;

     label6:
        $z0 = 0;

        goto label4;

        catch com.a.a.k from label1 to label2 with label3;
    }

    public void a()
    {
        com.a.a.c.p r0;

        r0 := @this: com.a.a.c.p;

        return;
    }
}
