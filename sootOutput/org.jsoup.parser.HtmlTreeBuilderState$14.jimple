final enum class org.jsoup.parser.HtmlTreeBuilderState$14 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        org.jsoup.parser.HtmlTreeBuilderState$14 r0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$14;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>("InRow", 13, null);

        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState $r3;
        org.jsoup.parser.HtmlTreeBuilderState$14 r0;
        org.jsoup.parser.Token $r1;
        org.jsoup.parser.HtmlTreeBuilder $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$14;

        $r1 := @parameter0: org.jsoup.parser.Token;

        $r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $r3 = <org.jsoup.parser.HtmlTreeBuilderState$14: org.jsoup.parser.HtmlTreeBuilderState InTable>;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>($r1, $r3);

        return $z0;
    }

    private boolean handleMissingTr(org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder)
    {
        org.jsoup.parser.Token$EndTag $r3;
        org.jsoup.parser.HtmlTreeBuilderState$14 r0;
        org.jsoup.parser.TreeBuilder $r2;
        org.jsoup.parser.Token $r1;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$14;

        $r1 := @parameter0: org.jsoup.parser.Token;

        $r2 := @parameter1: org.jsoup.parser.TreeBuilder;

        $r3 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r3.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("tr");

        $z0 = virtualinvoke $r2.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r3);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        return $z0;

     label1:
        return 0;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState$14 r0;
        org.jsoup.parser.Token$StartTag $r3;
        org.jsoup.parser.Token $r1;
        java.lang.String[] $r5;
        org.jsoup.parser.Token$EndTag $r7;
        org.jsoup.parser.HtmlTreeBuilderState $r6;
        java.lang.String $r4;
        org.jsoup.parser.HtmlTreeBuilder $r2;
        boolean $z0;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$14;

        $r1 := @parameter0: org.jsoup.parser.Token;

        $r2 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isStartTag()>();

        if $z0 == 0 goto label04;

        $r3 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r4 = virtualinvoke $r3.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "th";

        $r5[1] = "td";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r5);

        if $z0 == 0 goto label02;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableRowContext()>();

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r3);

        $r6 = <org.jsoup.parser.HtmlTreeBuilderState$14: org.jsoup.parser.HtmlTreeBuilderState InCell>;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r6);

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void insertMarkerToFormattingElements()>();

     label01:
        return 1;

     label02:
        $r5 = newarray (java.lang.String)[7];

        $r5[0] = "caption";

        $r5[1] = "col";

        $r5[2] = "colgroup";

        $r5[3] = "tbody";

        $r5[4] = "tfoot";

        $r5[5] = "thead";

        $r5[6] = "tr";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r5);

        if $z0 == 0 goto label03;

        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$14: boolean handleMissingTr(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>($r1, $r2);

        return $z0;

     label03:
        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$14: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r1, $r2);

        return $z0;

     label04:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.Token: boolean isEndTag()>();

        if $z0 == 0 goto label11;

        $r7 = virtualinvoke $r1.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        $r4 = virtualinvoke $r7.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("tr");

        if $z0 == 0 goto label06;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>($r4);

        if $z0 != 0 goto label05;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        return 0;

     label05:
        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableRowContext()>();

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();

        $r6 = <org.jsoup.parser.HtmlTreeBuilderState$14: org.jsoup.parser.HtmlTreeBuilderState InTableBody>;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r6);

        goto label01;

     label06:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("table");

        if $z0 == 0 goto label07;

        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$14: boolean handleMissingTr(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>($r1, $r2);

        return $z0;

     label07:
        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "tbody";

        $r5[1] = "tfoot";

        $r5[2] = "thead";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r5);

        if $z0 == 0 goto label09;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>($r4);

        if $z0 != 0 goto label08;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        return 0;

     label08:
        $r7 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r7.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("tr");

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r7);

        $z0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        return $z0;

     label09:
        $r5 = newarray (java.lang.String)[7];

        $r5[0] = "body";

        $r5[1] = "caption";

        $r5[2] = "col";

        $r5[3] = "colgroup";

        $r5[4] = "html";

        $r5[5] = "td";

        $r5[6] = "th";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r5);

        if $z0 == 0 goto label10;

        virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r0);

        return 0;

     label10:
        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$14: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r1, $r2);

        return $z0;

     label11:
        $z0 = specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState$14: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r1, $r2);

        return $z0;
    }
}
