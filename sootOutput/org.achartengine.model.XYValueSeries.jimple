public class org.achartengine.model.XYValueSeries extends org.achartengine.model.XYSeries
{
    private double mMaxValue;
    private double mMinValue;
    private java.util.List mValue;

    public void <init>(java.lang.String)
    {
        org.achartengine.model.XYValueSeries r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.achartengine.model.XYValueSeries;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.achartengine.model.XYSeries: void <init>(java.lang.String)>($r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.achartengine.model.XYValueSeries: java.util.List mValue> = $r2;

        r0.<org.achartengine.model.XYValueSeries: double mMinValue> = 1.7976931348623157E308;

        r0.<org.achartengine.model.XYValueSeries: double mMaxValue> = -1.7976931348623157E308;

        return;
    }

    private void initRange()
    {
        int $i0, $i1;
        org.achartengine.model.XYValueSeries r0;
        double $d0;

        r0 := @this: org.achartengine.model.XYValueSeries;

        r0.<org.achartengine.model.XYValueSeries: double mMinValue> = 1.7976931348623157E308;

        r0.<org.achartengine.model.XYValueSeries: double mMaxValue> = 1.7976931348623157E308;

        $i0 = virtualinvoke r0.<org.achartengine.model.XYValueSeries: int getItemCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = virtualinvoke r0.<org.achartengine.model.XYValueSeries: double getValue(int)>($i1);

        specialinvoke r0.<org.achartengine.model.XYValueSeries: void updateRange(double)>($d0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void updateRange(double)
    {
        org.achartengine.model.XYValueSeries r0;
        double $d0, $d1;

        r0 := @this: org.achartengine.model.XYValueSeries;

        $d0 := @parameter0: double;

        $d1 = r0.<org.achartengine.model.XYValueSeries: double mMinValue>;

        $d1 = staticinvoke <java.lang.Math: double min(double,double)>($d1, $d0);

        r0.<org.achartengine.model.XYValueSeries: double mMinValue> = $d1;

        $d1 = r0.<org.achartengine.model.XYValueSeries: double mMaxValue>;

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d1, $d0);

        r0.<org.achartengine.model.XYValueSeries: double mMaxValue> = $d0;

        return;
    }

    public void add(double, double)
    {
        org.achartengine.model.XYValueSeries r0;
        double $d0, $d1;

        r0 := @this: org.achartengine.model.XYValueSeries;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        virtualinvoke r0.<org.achartengine.model.XYValueSeries: void add(double,double,double)>($d0, $d1, 0.0);

        return;
    }

    public void add(double, double, double)
    {
        java.util.List $r1;
        java.lang.Double $r2;
        org.achartengine.model.XYValueSeries r0;
        double $d0, $d1, $d2;

        r0 := @this: org.achartengine.model.XYValueSeries;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        specialinvoke r0.<org.achartengine.model.XYSeries: void add(double,double)>($d0, $d1);

        $r1 = r0.<org.achartengine.model.XYValueSeries: java.util.List mValue>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        specialinvoke r0.<org.achartengine.model.XYValueSeries: void updateRange(double)>($d2);

        return;
    }

    public void clear()
    {
        org.achartengine.model.XYValueSeries r0;
        java.util.List $r1;

        r0 := @this: org.achartengine.model.XYValueSeries;

        specialinvoke r0.<org.achartengine.model.XYSeries: void clear()>();

        $r1 = r0.<org.achartengine.model.XYValueSeries: java.util.List mValue>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        specialinvoke r0.<org.achartengine.model.XYValueSeries: void initRange()>();

        return;
    }

    public double getMaxValue()
    {
        org.achartengine.model.XYValueSeries r0;
        double d0;

        r0 := @this: org.achartengine.model.XYValueSeries;

        d0 = r0.<org.achartengine.model.XYValueSeries: double mMaxValue>;

        return d0;
    }

    public double getMinValue()
    {
        org.achartengine.model.XYValueSeries r0;
        double d0;

        r0 := @this: org.achartengine.model.XYValueSeries;

        d0 = r0.<org.achartengine.model.XYValueSeries: double mMinValue>;

        return d0;
    }

    public double getValue(int)
    {
        java.util.List $r1;
        java.lang.Double r3;
        int $i0;
        org.achartengine.model.XYValueSeries r0;
        java.lang.Object $r2;
        double $d0;

        r0 := @this: org.achartengine.model.XYValueSeries;

        $i0 := @parameter0: int;

        $r1 = r0.<org.achartengine.model.XYValueSeries: java.util.List mValue>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        r3 = (java.lang.Double) $r2;

        $d0 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public void remove(int)
    {
        java.lang.Double $r3;
        org.achartengine.model.XYValueSeries r0;
        java.util.List $r1;
        byte $b1;
        int $i0;
        java.lang.Object $r2;
        double $d0, $d1;

        r0 := @this: org.achartengine.model.XYValueSeries;

        $i0 := @parameter0: int;

        specialinvoke r0.<org.achartengine.model.XYSeries: void remove(int)>($i0);

        $r1 = r0.<org.achartengine.model.XYValueSeries: java.util.List mValue>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        $r3 = (java.lang.Double) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $d1 = r0.<org.achartengine.model.XYValueSeries: double mMinValue>;

        $b1 = $d0 cmpl $d1;

        if $b1 == 0 goto label1;

        $d1 = r0.<org.achartengine.model.XYValueSeries: double mMaxValue>;

        $b1 = $d0 cmpl $d1;

        if $b1 != 0 goto label2;

     label1:
        specialinvoke r0.<org.achartengine.model.XYValueSeries: void initRange()>();

     label2:
        return;
    }
}
