class com.facebook.AppEventsLogger$SessionEventsState extends java.lang.Object
{
    public static final java.lang.String ENCODED_EVENTS_KEY;
    public static final java.lang.String EVENT_COUNT_KEY;
    public static final java.lang.String NUM_SKIPPED_KEY;
    private final int MAX_ACCUMULATED_LOG_EVENTS;
    private java.util.List accumulatedEvents;
    private java.lang.String attributionId;
    private java.util.List inFlightEvents;
    private int numSkippedEventsDueToFullBuffer;
    private java.lang.String packageName;

    public void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        com.facebook.AppEventsLogger$SessionEventsState r0;
        java.util.ArrayList $r3;

        r0 := @this: com.facebook.AppEventsLogger$SessionEventsState;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List accumulatedEvents> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List inFlightEvents> = $r3;

        r0.<com.facebook.AppEventsLogger$SessionEventsState: int MAX_ACCUMULATED_LOG_EVENTS> = 1000;

        r0.<com.facebook.AppEventsLogger$SessionEventsState: java.lang.String attributionId> = $r1;

        r0.<com.facebook.AppEventsLogger$SessionEventsState: java.lang.String packageName> = $r2;

        return;
    }

    private byte[] getStringAsByteArray(java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r2;
        java.lang.String $r1;
        com.facebook.AppEventsLogger$SessionEventsState r0;
        java.lang.Exception $r4;

        r0 := @this: com.facebook.AppEventsLogger$SessionEventsState;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = (java.lang.Exception) $r3;

        staticinvoke <com.facebook.internal.Utility: void logd(java.lang.String,java.lang.Exception)>("Encoding exception: ", $r4);

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private void populateRequest(com.facebook.Request, int, org.json.JSONArray, boolean, boolean)
    {
        byte[] $r9;
        android.os.Bundle $r7, $r8;
        com.facebook.model.GraphObject $r3;
        com.facebook.AppEventsLogger$SessionEventsState r0;
        java.lang.Integer $r4;
        com.facebook.Request $r1;
        int $i0, $i1;
        java.lang.Boolean $r6;
        java.lang.String $r5;
        org.json.JSONArray $r2;
        boolean $z0, $z1;

        r0 := @this: com.facebook.AppEventsLogger$SessionEventsState;

        $r1 := @parameter0: com.facebook.Request;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.json.JSONArray;

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $r3 = staticinvoke <com.facebook.model.GraphObject$Factory: com.facebook.model.GraphObject create()>();

        interfaceinvoke $r3.<com.facebook.model.GraphObject: void setProperty(java.lang.String,java.lang.Object)>("event", "CUSTOM_APP_EVENTS");

        $i1 = r0.<com.facebook.AppEventsLogger$SessionEventsState: int numSkippedEventsDueToFullBuffer>;

        if $i1 <= 0 goto label1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<com.facebook.model.GraphObject: void setProperty(java.lang.String,java.lang.Object)>("num_skipped_events", $r4);

     label1:
        if $z0 == 0 goto label2;

        $r5 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.lang.String attributionId>;

        if $r5 == null goto label2;

        $r5 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.lang.String attributionId>;

        interfaceinvoke $r3.<com.facebook.model.GraphObject: void setProperty(java.lang.String,java.lang.Object)>("attribution", $r5);

     label2:
        if $z1 == 0 goto label6;

        $z0 = 0;

     label3:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r3.<com.facebook.model.GraphObject: void setProperty(java.lang.String,java.lang.Object)>("application_tracking_enabled", $r6);

        $r5 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.lang.String packageName>;

        interfaceinvoke $r3.<com.facebook.model.GraphObject: void setProperty(java.lang.String,java.lang.Object)>("application_package_name", $r5);

        virtualinvoke $r1.<com.facebook.Request: void setGraphObject(com.facebook.model.GraphObject)>($r3);

        $r7 = virtualinvoke $r1.<com.facebook.Request: android.os.Bundle getParameters()>();

        $r8 = $r7;

        if $r7 != null goto label4;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

     label4:
        $r5 = virtualinvoke $r2.<org.json.JSONArray: java.lang.String toString()>();

        if $r5 == null goto label5;

        $r9 = specialinvoke r0.<com.facebook.AppEventsLogger$SessionEventsState: byte[] getStringAsByteArray(java.lang.String)>($r5);

        virtualinvoke $r8.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("custom_events_file", $r9);

        virtualinvoke $r1.<com.facebook.Request: void setTag(java.lang.Object)>($r5);

     label5:
        virtualinvoke $r1.<com.facebook.Request: void setParameters(android.os.Bundle)>($r8);

        return;

     label6:
        $z0 = 1;

        goto label3;
    }

    public void accumulatePersistedEvents(java.util.List)
    {
        java.lang.Throwable $r3;
        java.util.List $r1, $r2;
        com.facebook.AppEventsLogger$SessionEventsState r0;

        r0 := @this: com.facebook.AppEventsLogger$SessionEventsState;

        $r1 := @parameter0: java.util.List;

        entermonitor r0;

     label1:
        $r2 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List accumulatedEvents>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void addEvent(com.facebook.AppEventsLogger$AppEvent)
    {
        java.lang.Throwable $r3;
        java.util.List $r2;
        com.facebook.AppEventsLogger$AppEvent $r1;
        int $i0, $i1;
        com.facebook.AppEventsLogger$SessionEventsState r0;

        r0 := @this: com.facebook.AppEventsLogger$SessionEventsState;

        $r1 := @parameter0: com.facebook.AppEventsLogger$AppEvent;

        entermonitor r0;

     label1:
        $r2 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List accumulatedEvents>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r2 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List inFlightEvents>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + $i1;

        if $i0 < 1000 goto label3;

        $i0 = r0.<com.facebook.AppEventsLogger$SessionEventsState: int numSkippedEventsDueToFullBuffer>;

        $i0 = $i0 + 1;

        r0.<com.facebook.AppEventsLogger$SessionEventsState: int numSkippedEventsDueToFullBuffer> = $i0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List accumulatedEvents>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label4:
        goto label2;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void clearInFlightAndStats(boolean)
    {
        java.lang.Throwable $r3;
        java.util.List $r1, $r2;
        com.facebook.AppEventsLogger$SessionEventsState r0;
        boolean $z0;

        r0 := @this: com.facebook.AppEventsLogger$SessionEventsState;

        $z0 := @parameter0: boolean;

        entermonitor r0;

        if $z0 == 0 goto label2;

     label1:
        $r2 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List accumulatedEvents>;

        $r1 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List inFlightEvents>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r1);

     label2:
        $r1 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List inFlightEvents>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        r0.<com.facebook.AppEventsLogger$SessionEventsState: int numSkippedEventsDueToFullBuffer> = 0;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public int getAccumulatedEventCount()
    {
        java.lang.Throwable $r2;
        java.util.List $r1;
        int $i0;
        com.facebook.AppEventsLogger$SessionEventsState r0;

        r0 := @this: com.facebook.AppEventsLogger$SessionEventsState;

        entermonitor r0;

     label1:
        $r1 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List accumulatedEvents>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

     label2:
        exitmonitor r0;

        return $i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.List getEventsToPersist()
    {
        java.lang.Throwable $r2;
        java.util.List r3;
        com.facebook.AppEventsLogger$SessionEventsState r0;
        java.util.ArrayList $r1;

        r0 := @this: com.facebook.AppEventsLogger$SessionEventsState;

        entermonitor r0;

     label1:
        r3 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List accumulatedEvents>;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List accumulatedEvents> = $r1;

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int populateRequest(com.facebook.Request, boolean, boolean, boolean)
    {
        java.lang.Throwable $r9;
        com.facebook.AppEventsLogger$SessionEventsState r0;
        org.json.JSONObject $r8;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r5;
        java.util.List $r3, $r4;
        com.facebook.AppEventsLogger$AppEvent $r7;
        com.facebook.Request $r1;
        java.lang.Object $r6;
        org.json.JSONArray $r2;

        r0 := @this: com.facebook.AppEventsLogger$SessionEventsState;

        $r1 := @parameter0: com.facebook.Request;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        entermonitor r0;

     label1:
        $i0 = r0.<com.facebook.AppEventsLogger$SessionEventsState: int numSkippedEventsDueToFullBuffer>;

        $r3 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List inFlightEvents>;

        $r4 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List accumulatedEvents>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $r3 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List accumulatedEvents>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r2 = new org.json.JSONArray;

        specialinvoke $r2.<org.json.JSONArray: void <init>()>();

        $r3 = r0.<com.facebook.AppEventsLogger$SessionEventsState: java.util.List inFlightEvents>;

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label4;

        $i1 = virtualinvoke $r2.<org.json.JSONArray: int length()>();

        if $i1 != 0 goto label8;

        exitmonitor r0;

     label3:
        return 0;

     label4:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.facebook.AppEventsLogger$AppEvent) $r6;

        if $z0 != 0 goto label5;

        $z3 = virtualinvoke $r7.<com.facebook.AppEventsLogger$AppEvent: boolean getIsImplicit()>();

        if $z3 != 0 goto label2;

     label5:
        $r8 = virtualinvoke $r7.<com.facebook.AppEventsLogger$AppEvent: org.json.JSONObject getJSONObject()>();

        virtualinvoke $r2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r8);

     label6:
        goto label2;

     label7:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

     label8:
        exitmonitor r0;

        specialinvoke r0.<com.facebook.AppEventsLogger$SessionEventsState: void populateRequest(com.facebook.Request,int,org.json.JSONArray,boolean,boolean)>($r1, $i0, $r2, $z1, $z2);

        $i0 = virtualinvoke $r2.<org.json.JSONArray: int length()>();

        return $i0;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
    }

    public static void <clinit>()
    {
        <com.facebook.AppEventsLogger$SessionEventsState: java.lang.String NUM_SKIPPED_KEY> = "num_skipped";

        <com.facebook.AppEventsLogger$SessionEventsState: java.lang.String EVENT_COUNT_KEY> = "event_count";

        <com.facebook.AppEventsLogger$SessionEventsState: java.lang.String ENCODED_EVENTS_KEY> = "encoded_events";

        return;
    }
}
