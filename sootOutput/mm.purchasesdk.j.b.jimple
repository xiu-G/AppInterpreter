public class mm.purchasesdk.j.b extends java.lang.Object
{

    public void <init>()
    {
        mm.purchasesdk.j.b r0;

        r0 := @this: mm.purchasesdk.j.b;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean a()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 = staticinvoke <mm.purchasesdk.j.b: java.lang.String c()>();

        $r1 = staticinvoke <mm.purchasesdk.j.b: java.lang.String b()>();

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("unknown");

        if $z0 != 0 goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("unknown");

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static java.lang.String b()
    {
        java.lang.Throwable $r6, $r7, $r9, $r10, $r11;
        java.lang.Object[] $r3;
        java.lang.NoSuchMethodException $r13;
        java.lang.SecurityException $r12;
        java.lang.String $r5;
        java.lang.reflect.Method $r2;
        java.lang.IllegalAccessException $r15;
        java.lang.Class[] $r1;
        java.lang.IllegalArgumentException $r14;
        java.lang.reflect.InvocationTargetException $r16;
        java.lang.Class $r0;
        java.lang.Object $r4;
        java.lang.ClassNotFoundException $r8;

     label01:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.SystemProperties");

     label02:
        $r1 = newarray (java.lang.Class)[2];

        $r1[0] = class "Ljava/lang/String;";

        $r1[1] = class "Ljava/lang/String;";

     label03:
        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("get", $r1);

     label04:
        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = "gsm.version.ril-impl";

        $r3[1] = "unknown";

     label05:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

     label06:
        $r5 = (java.lang.String) $r4;

        return $r5;

     label07:
        $r6 := @caughtexception;

        $r12 = (java.lang.SecurityException) $r6;

        virtualinvoke $r12.<java.lang.SecurityException: void printStackTrace()>();

        return null;

     label08:
        $r7 := @caughtexception;

        $r13 = (java.lang.NoSuchMethodException) $r7;

        virtualinvoke $r13.<java.lang.NoSuchMethodException: void printStackTrace()>();

        return null;

     label09:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.ClassNotFoundException: void printStackTrace()>();

        return null;

     label10:
        $r9 := @caughtexception;

        $r14 = (java.lang.IllegalArgumentException) $r9;

        virtualinvoke $r14.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return null;

     label11:
        $r10 := @caughtexception;

        $r15 = (java.lang.IllegalAccessException) $r10;

        virtualinvoke $r15.<java.lang.IllegalAccessException: void printStackTrace()>();

        return null;

     label12:
        $r11 := @caughtexception;

        $r16 = (java.lang.reflect.InvocationTargetException) $r11;

        virtualinvoke $r16.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        return null;

        catch java.lang.SecurityException from label01 to label02 with label07;
        catch java.lang.SecurityException from label03 to label04 with label07;
        catch java.lang.NoSuchMethodException from label01 to label02 with label08;
        catch java.lang.NoSuchMethodException from label03 to label04 with label08;
        catch java.lang.ClassNotFoundException from label01 to label02 with label09;
        catch java.lang.ClassNotFoundException from label03 to label04 with label09;
        catch java.lang.IllegalArgumentException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label12;
    }

    private static java.lang.String c()
    {
        java.lang.Throwable $r6, $r7, $r9, $r10, $r11;
        java.lang.Object[] $r3;
        java.lang.NoSuchMethodException $r13;
        java.lang.SecurityException $r12;
        java.lang.String $r5;
        java.lang.reflect.Method $r2;
        java.lang.IllegalAccessException $r15;
        java.lang.Class[] $r1;
        java.lang.IllegalArgumentException $r14;
        java.lang.reflect.InvocationTargetException $r16;
        java.lang.Class $r0;
        java.lang.Object $r4;
        java.lang.ClassNotFoundException $r8;

     label01:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.SystemProperties");

     label02:
        $r1 = newarray (java.lang.Class)[2];

        $r1[0] = class "Ljava/lang/String;";

        $r1[1] = class "Ljava/lang/String;";

     label03:
        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("get", $r1);

     label04:
        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = "gsm.version.baseband";

        $r3[1] = "unknown";

     label05:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

     label06:
        $r5 = (java.lang.String) $r4;

        return $r5;

     label07:
        $r6 := @caughtexception;

        $r12 = (java.lang.SecurityException) $r6;

        virtualinvoke $r12.<java.lang.SecurityException: void printStackTrace()>();

        return null;

     label08:
        $r7 := @caughtexception;

        $r13 = (java.lang.NoSuchMethodException) $r7;

        virtualinvoke $r13.<java.lang.NoSuchMethodException: void printStackTrace()>();

        return null;

     label09:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.ClassNotFoundException: void printStackTrace()>();

        return null;

     label10:
        $r9 := @caughtexception;

        $r14 = (java.lang.IllegalArgumentException) $r9;

        virtualinvoke $r14.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return null;

     label11:
        $r10 := @caughtexception;

        $r15 = (java.lang.IllegalAccessException) $r10;

        virtualinvoke $r15.<java.lang.IllegalAccessException: void printStackTrace()>();

        return null;

     label12:
        $r11 := @caughtexception;

        $r16 = (java.lang.reflect.InvocationTargetException) $r11;

        virtualinvoke $r16.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        return null;

        catch java.lang.SecurityException from label01 to label02 with label07;
        catch java.lang.SecurityException from label03 to label04 with label07;
        catch java.lang.NoSuchMethodException from label01 to label02 with label08;
        catch java.lang.NoSuchMethodException from label03 to label04 with label08;
        catch java.lang.ClassNotFoundException from label01 to label02 with label09;
        catch java.lang.ClassNotFoundException from label03 to label04 with label09;
        catch java.lang.IllegalArgumentException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label12;
    }
}
