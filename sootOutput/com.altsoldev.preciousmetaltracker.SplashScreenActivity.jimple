public class com.altsoldev.preciousmetaltracker.SplashScreenActivity extends android.app.Activity
{
    private static final java.lang.String AD_UNIT_ID;
    private com.google.android.gms.ads.InterstitialAd interstitial;
    private boolean interstitialCanceled;
    private com.altsoldev.common.services.billing.IabHelper mHelper;
    protected com.google.android.gms.analytics.Tracker newTracker;
    private com.google.android.apps.analytics.GoogleAnalyticsTracker tracker;
    private java.util.Timer waitTimer;
    private int wait_time;
    public android.content.Intent ipcIntent;
    public android.content.Intent ipcResultIntent;

    public void <init>()
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: boolean interstitialCanceled> = 0;

        return;
    }

    static void access$0(com.altsoldev.preciousmetaltracker.SplashScreenActivity, com.google.android.apps.analytics.GoogleAnalyticsTracker)
    {
        com.google.android.apps.analytics.GoogleAnalyticsTracker $r1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 := @parameter1: com.google.android.apps.analytics.GoogleAnalyticsTracker;

        $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.apps.analytics.GoogleAnalyticsTracker tracker> = $r1;

        return;
    }

    static com.google.android.apps.analytics.GoogleAnalyticsTracker access$1(com.altsoldev.preciousmetaltracker.SplashScreenActivity)
    {
        com.google.android.apps.analytics.GoogleAnalyticsTracker r1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        r1 = $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.apps.analytics.GoogleAnalyticsTracker tracker>;

        return r1;
    }

    static void access$10(com.altsoldev.preciousmetaltracker.SplashScreenActivity)
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        specialinvoke $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void startHomeActivity()>();

        return;
    }

    static void access$11(com.altsoldev.preciousmetaltracker.SplashScreenActivity, boolean)
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;
        boolean $z0;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $z0 := @parameter1: boolean;

        $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: boolean interstitialCanceled> = 1;

        return;
    }

    static com.altsoldev.common.services.billing.IabHelper access$2(com.altsoldev.preciousmetaltracker.SplashScreenActivity)
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;
        com.altsoldev.common.services.billing.IabHelper r1;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        r1 = $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.altsoldev.common.services.billing.IabHelper mHelper>;

        return r1;
    }

    static void access$3(com.altsoldev.preciousmetaltracker.SplashScreenActivity, java.lang.String, boolean)
    {
        java.lang.String $r1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;
        boolean $z0;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void complain(java.lang.String,boolean)>($r1, 0);

        return;
    }

    static void access$4(com.altsoldev.preciousmetaltracker.SplashScreenActivity, java.lang.String)
    {
        java.lang.String $r1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void toast(java.lang.String)>($r1);

        return;
    }

    static void access$5(com.altsoldev.preciousmetaltracker.SplashScreenActivity)
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        specialinvoke $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void splashScreenOnCreate()>();

        return;
    }

    static com.altsoldev.common.services.billing.IabHelper$QueryInventoryFinishedListener access$6(com.altsoldev.preciousmetaltracker.SplashScreenActivity)
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;
        com.altsoldev.common.services.billing.IabHelper$QueryInventoryFinishedListener $r1;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 = specialinvoke $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.altsoldev.common.services.billing.IabHelper$QueryInventoryFinishedListener iabInventoryListener()>();

        return $r1;
    }

    static boolean access$7(com.altsoldev.preciousmetaltracker.SplashScreenActivity)
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;
        boolean z0;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        z0 = $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: boolean interstitialCanceled>;

        return z0;
    }

    static java.util.Timer access$8(com.altsoldev.preciousmetaltracker.SplashScreenActivity)
    {
        java.util.Timer r1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        r1 = $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: java.util.Timer waitTimer>;

        return r1;
    }

    static com.google.android.gms.ads.InterstitialAd access$9(com.altsoldev.preciousmetaltracker.SplashScreenActivity)
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity $r0;
        com.google.android.gms.ads.InterstitialAd r1;

        $r0 := @parameter0: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        r1 = $r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.gms.ads.InterstitialAd interstitial>;

        return r1;
    }

    private void alert(java.lang.String)
    {
        android.app.AlertDialog $r4;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;
        android.app.AlertDialog$Builder r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 := @parameter0: java.lang.String;

        r2 = new android.app.AlertDialog$Builder;

        specialinvoke r2.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r1);

        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("OK", null);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Showing alert dialog: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("IAP", $r1);

        $r4 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        virtualinvoke $r4.<android.app.AlertDialog: void show()>();

        return;
    }

    private void complain(java.lang.String, boolean)
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("**** IAP Error: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IAP", $r3);

        goto label1;

     label1:
        return;
    }

    private com.altsoldev.common.services.billing.IabHelper$QueryInventoryFinishedListener iabInventoryListener()
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity$2 $r1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 = new com.altsoldev.preciousmetaltracker.SplashScreenActivity$2;

        specialinvoke $r1.<com.altsoldev.preciousmetaltracker.SplashScreenActivity$2: void <init>(com.altsoldev.preciousmetaltracker.SplashScreenActivity)>(r0);

        return $r1;
    }

    private void initializeBilling()
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;
        com.altsoldev.common.services.billing.IabHelper $r2;
        java.lang.String $r1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity$1 $r3;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r2 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.altsoldev.common.services.billing.IabHelper mHelper>;

        if $r2 == null goto label1;

        return;

     label1:
        $r2 = new com.altsoldev.common.services.billing.IabHelper;

        $r1 = staticinvoke <com.altsoldev.util.CryptoHelper: java.lang.String decryptGSPCPublicKey()>();

        specialinvoke $r2.<com.altsoldev.common.services.billing.IabHelper: void <init>(android.content.Context,java.lang.String)>(r0, $r1);

        r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.altsoldev.common.services.billing.IabHelper mHelper> = $r2;

        $r2 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.altsoldev.common.services.billing.IabHelper mHelper>;

        $r3 = new com.altsoldev.preciousmetaltracker.SplashScreenActivity$1;

        specialinvoke $r3.<com.altsoldev.preciousmetaltracker.SplashScreenActivity$1: void <init>(com.altsoldev.preciousmetaltracker.SplashScreenActivity)>(r0);

        virtualinvoke $r2.<com.altsoldev.common.services.billing.IabHelper: void startSetup(com.altsoldev.common.services.billing.IabHelper$OnIabSetupFinishedListener)>($r3);

        return;
    }

    private void setupGoogleAnalytics()
    {
        com.altsoldev.preciousmetaltracker.PreciousMetalTrackerApp $r4;
        com.altsoldev.preciousmetaltracker.PreciousMetalTrackerApp$TrackerName $r5;
        java.lang.Object[] $r2;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;
        android.app.Application $r3;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity$StartGATrackerTask $r1;
        com.google.android.gms.analytics.Tracker $r6;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 = new com.altsoldev.preciousmetaltracker.SplashScreenActivity$StartGATrackerTask;

        specialinvoke $r1.<com.altsoldev.preciousmetaltracker.SplashScreenActivity$StartGATrackerTask: void <init>(com.altsoldev.preciousmetaltracker.SplashScreenActivity)>(r0);

        $r2 = newarray (android.app.Activity)[1];

        $r2[0] = r0;

        virtualinvoke $r1.<com.altsoldev.preciousmetaltracker.SplashScreenActivity$StartGATrackerTask: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        $r3 = virtualinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: android.app.Application getApplication()>();

        $r4 = (com.altsoldev.preciousmetaltracker.PreciousMetalTrackerApp) $r3;

        $r5 = <com.altsoldev.preciousmetaltracker.PreciousMetalTrackerApp$TrackerName: com.altsoldev.preciousmetaltracker.PreciousMetalTrackerApp$TrackerName GLOBAL_TRACKER>;

        $r6 = virtualinvoke $r4.<com.altsoldev.preciousmetaltracker.PreciousMetalTrackerApp: com.google.android.gms.analytics.Tracker getTracker(com.altsoldev.preciousmetaltracker.PreciousMetalTrackerApp$TrackerName)>($r5);

        r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.gms.analytics.Tracker newTracker> = $r6;

        return;
    }

    private void splashScreenOnCreate()
    {
        java.lang.Throwable r2;
        android.content.pm.PackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r19;
        java.util.Timer $r12, $r17;
        long $l1;
        android.content.pm.PackageInfo $r6;
        int $i0;
        com.google.android.gms.ads.AdRequest $r11;
        android.view.View $r8;
        java.lang.String r3, $r5;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity$3 $r15;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity$4 $r18;
        boolean $z0;
        com.google.android.gms.ads.InterstitialAd $r10, $r14;
        android.widget.TextView r9;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;
        com.google.android.gms.ads.AdRequest$Builder r1, $r16;
        java.lang.StringBuilder $r7, $r13;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        r3 = "";

     label1:
        $r4 = virtualinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r5, 0);

     label2:
        r3 = $r6.<android.content.pm.PackageInfo: java.lang.String versionName>;

        $z0 = <com.altsoldev.preciousmetaltracker.util.IAPHelper: boolean isAdFree>;

        if $z0 == 0 goto label5;

        $r13 = new java.lang.StringBuilder;

        $r7 = $r13;

     label3:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (PREMIUM EDITION)");

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r3 = $r5;

     label5:
        $r8 = virtualinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: android.view.View findViewById(int)>(2131165287);

        r9 = (android.widget.TextView) $r8;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Version ");

        $r7 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<android.widget.TextView: void setText(java.lang.CharSequence)>(r3);

        staticinvoke <com.altsoldev.preciousmetaltracker.util.SplashScreenHelper: void updateAdProperties(android.content.Context,java.lang.String)>(r0, "iad1");

        $z0 = staticinvoke <com.altsoldev.preciousmetaltracker.util.SplashScreenHelper: boolean checkRequestAd(android.content.Context,java.lang.String)>(r0, "iad1");

        if $z0 == 0 goto label9;

        $i0 = staticinvoke <com.altsoldev.preciousmetaltracker.util.SplashScreenHelper: int getTimeOut(android.content.Context,java.lang.String)>(r0, "iad1");

        r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: int wait_time> = $i0;

     label6:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Splash Screen Ad Wait Time: ");

        $i0 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: int wait_time>;

        $r7 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("INTERSTITIAL", r3);

        $r14 = new com.google.android.gms.ads.InterstitialAd;

        specialinvoke $r14.<com.google.android.gms.ads.InterstitialAd: void <init>(android.content.Context)>(r0);

        r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.gms.ads.InterstitialAd interstitial> = $r14;

        $r10 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.gms.ads.InterstitialAd interstitial>;

        virtualinvoke $r10.<com.google.android.gms.ads.InterstitialAd: void setAdUnitId(java.lang.String)>("ca-app-pub-0991462102359147/9088825618");

        $r10 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.gms.ads.InterstitialAd interstitial>;

        $r15 = new com.altsoldev.preciousmetaltracker.SplashScreenActivity$3;

        specialinvoke $r15.<com.altsoldev.preciousmetaltracker.SplashScreenActivity$3: void <init>(com.altsoldev.preciousmetaltracker.SplashScreenActivity)>(r0);

        virtualinvoke $r10.<com.google.android.gms.ads.InterstitialAd: void setAdListener(com.google.android.gms.ads.AdListener)>($r15);

        $r16 = new com.google.android.gms.ads.AdRequest$Builder;

        r1 = $r16;

        specialinvoke $r16.<com.google.android.gms.ads.AdRequest$Builder: void <init>()>();

        virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String)>("gold");

        virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String)>("gold bullion");

        virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String)>("gold coin");

        virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String)>("precious metals");

        virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String)>("silver");

        virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String)>("silver coins");

        virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String)>("silver bar");

        virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String)>("gold bar");

        virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String)>("forex");

        virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String)>("money");

        if $z0 == 0 goto label7;

        $r10 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.gms.ads.InterstitialAd interstitial>;

        $r11 = virtualinvoke r1.<com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest build()>();

        virtualinvoke $r10.<com.google.android.gms.ads.InterstitialAd: void loadAd(com.google.android.gms.ads.AdRequest)>($r11);

     label7:
        $r17 = new java.util.Timer;

        specialinvoke $r17.<java.util.Timer: void <init>()>();

        r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: java.util.Timer waitTimer> = $r17;

        $r12 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: java.util.Timer waitTimer>;

        $r18 = new com.altsoldev.preciousmetaltracker.SplashScreenActivity$4;

        specialinvoke $r18.<com.altsoldev.preciousmetaltracker.SplashScreenActivity$4: void <init>(com.altsoldev.preciousmetaltracker.SplashScreenActivity)>(r0);

        $i0 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: int wait_time>;

        $l1 = (long) $i0;

        virtualinvoke $r12.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r18, $l1);

        return;

     label8:
        r2 := @caughtexception;

        $r19 = (android.content.pm.PackageManager$NameNotFoundException) r2;

        virtualinvoke $r19.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        goto label5;

     label9:
        r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: int wait_time> = 500;

        goto label6;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label8;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label8;
    }

    private void startHomeActivity()
    {
        android.content.Intent r1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/altsoldev/preciousmetaltracker/HomeActivity;");

        virtualinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void startActivity(android.content.Intent)>(r1);

        virtualinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void finish()>();

        return;
    }

    private void toast(java.lang.String)
    {
        java.lang.String $r1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;
        android.widget.Toast $r2;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, $r1, 1);

        virtualinvoke $r2.<android.widget.Toast: void show()>();

        return;
    }

    public void invokeAndroidMarketAppPage()
    {
        android.net.Uri $r1;
        android.content.Intent r2;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        r2 = new android.content.Intent;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("market://details?id=com.altsoldev.preciousmetaltracker");

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r1);

        virtualinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void startActivity(android.content.Intent)>(r2);

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        android.os.Bundle $r1;
        java.lang.Object[] $r3;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity$StartCheckUpgradeTask $r2;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1);

        virtualinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void setContentView(int)>(2130903086);

        specialinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void setupGoogleAnalytics()>();

        $r2 = new com.altsoldev.preciousmetaltracker.SplashScreenActivity$StartCheckUpgradeTask;

        specialinvoke $r2.<com.altsoldev.preciousmetaltracker.SplashScreenActivity$StartCheckUpgradeTask: void <init>(com.altsoldev.preciousmetaltracker.SplashScreenActivity)>(r0);

        $r3 = newarray (android.app.Activity)[1];

        $r3[0] = r0;

        virtualinvoke $r2.<com.altsoldev.preciousmetaltracker.SplashScreenActivity$StartCheckUpgradeTask: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        specialinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void initializeBilling()>();

        return;
    }

    public void onDestroy()
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;
        com.altsoldev.common.services.billing.IabHelper $r1;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        $r1 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.altsoldev.common.services.billing.IabHelper mHelper>;

        if $r1 == null goto label1;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.altsoldev.common.services.billing.IabHelper mHelper>;

        virtualinvoke $r1.<com.altsoldev.common.services.billing.IabHelper: void dispose()>();

        r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.altsoldev.common.services.billing.IabHelper mHelper> = null;

     label1:
        return;
    }

    public void onPause()
    {
        java.util.Timer $r1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: java.util.Timer waitTimer>;

        if $r1 == null goto label1;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: java.util.Timer waitTimer>;

        virtualinvoke $r1.<java.util.Timer: void cancel()>();

     label1:
        r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: boolean interstitialCanceled> = 1;

        specialinvoke r0.<android.app.Activity: void onPause()>();

        return;
    }

    public void onResume()
    {
        com.altsoldev.preciousmetaltracker.SplashScreenActivity r0;
        com.google.android.gms.ads.InterstitialAd $r1;
        boolean $z0;

        r0 := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $r1 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.gms.ads.InterstitialAd interstitial>;

        if $r1 == null goto label1;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.gms.ads.InterstitialAd interstitial>;

        $z0 = virtualinvoke $r1.<com.google.android.gms.ads.InterstitialAd: boolean isLoaded()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: com.google.android.gms.ads.InterstitialAd interstitial>;

        virtualinvoke $r1.<com.google.android.gms.ads.InterstitialAd: void show()>();

        return;

     label1:
        $z0 = r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: boolean interstitialCanceled>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: void startHomeActivity()>();

     label2:
        return;
    }

    public android.content.Intent getIntent()
    {
        android.content.Intent $r0;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity this;

        this := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        $r0 = this.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: android.content.Intent ipcIntent>;

        return $r0;
    }

    public void setIntent(android.content.Intent)
    {
        android.content.Intent parameter0;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity this;

        this := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        parameter0 := @parameter0: android.content.Intent;

        this.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: android.content.Intent ipcIntent> = parameter0;

        return;
    }

    public void setResult(int, android.content.Intent)
    {
        int parameter0;
        android.content.Intent parameter1;
        com.altsoldev.preciousmetaltracker.SplashScreenActivity this;

        this := @this: com.altsoldev.preciousmetaltracker.SplashScreenActivity;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: android.content.Intent;

        this.<com.altsoldev.preciousmetaltracker.SplashScreenActivity: android.content.Intent ipcResultIntent> = parameter1;

        return;
    }

    public static void <clinit>()
    {
        <com.altsoldev.preciousmetaltracker.SplashScreenActivity: java.lang.String AD_UNIT_ID> = "ca-app-pub-0991462102359147/9088825618";

        return;
    }
}
