public class net.adlayout.ad.util.GetCloudAdUtil extends java.lang.Object
{
    private boolean canWriteSDCard;
    private net.adlayout.ad.util.GetCloudAdInterface getCloudAdInterface;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        net.adlayout.ad.util.GetCloudAdUtil r0;
        boolean $z0;

        r0 := @this: net.adlayout.ad.util.GetCloudAdUtil;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.adlayout.ad.util.GetCloudAdUtil: boolean canWriteSDCard> = 0;

        $z0 = staticinvoke <net.adlayout.ad.util.CheckPermission: boolean checkPermission(android.content.Context,java.lang.String)>($r1, "android.permission.WRITE_EXTERNAL_STORAGE");

        r0.<net.adlayout.ad.util.GetCloudAdUtil: boolean canWriteSDCard> = $z0;

        return;
    }

    static java.net.HttpURLConnection access$0(net.adlayout.ad.util.GetCloudAdUtil, java.lang.String) throws java.io.IOException
    {
        java.net.HttpURLConnection $r2;
        java.lang.String $r1;
        net.adlayout.ad.util.GetCloudAdUtil $r0;

        $r0 := @parameter0: net.adlayout.ad.util.GetCloudAdUtil;

        $r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke $r0.<net.adlayout.ad.util.GetCloudAdUtil: java.net.HttpURLConnection createHttpURLConnection(java.lang.String)>($r1);

        return $r2;
    }

    static void access$1(net.adlayout.ad.util.GetCloudAdUtil, byte[])
    {
        byte[] $r1;
        net.adlayout.ad.util.GetCloudAdUtil $r0;

        $r0 := @parameter0: net.adlayout.ad.util.GetCloudAdUtil;

        $r1 := @parameter1: byte[];

        specialinvoke $r0.<net.adlayout.ad.util.GetCloudAdUtil: void decodeCloudAd(byte[])>($r1);

        return;
    }

    private java.net.HttpURLConnection createHttpURLConnection(java.lang.String) throws java.io.IOException
    {
        java.net.HttpURLConnection r8;
        java.net.URL $r9;
        net.adlayout.ad.util.GetCloudAdUtil r0;
        java.lang.StringBuffer r1, $r6;
        java.net.URLConnection $r7;
        int $i0, $i1;
        java.lang.String $r2, r3, $r4, $r5;
        boolean $z0;

        r0 := @this: net.adlayout.ad.util.GetCloudAdUtil;

        $r2 := @parameter0: java.lang.String;

        r3 = null;

        $z0 = <net.adlayout.ad.manager.AdManager: boolean NEED_HOST>;

        if $z0 == 0 goto label6;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("http://");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(7);

     label1:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(47);

        $r4 = null;

        if $i0 <= 0 goto label7;

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i0 <= -1 goto label3;

        $i1 = $i0 + 1;

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i1);

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label3:
        $r6 = new java.lang.StringBuffer;

        r1 = $r6;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("http://10.0.0.172");

        if $r4 == null goto label4;

        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label4:
        if $r5 == null goto label5;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label5:
        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        $r9 = new java.net.URL;

        specialinvoke $r9.<java.net.URL: void <init>(java.lang.String)>($r2);

        $r7 = virtualinvoke $r9.<java.net.URL: java.net.URLConnection openConnection()>();

        r8 = (java.net.HttpURLConnection) $r7;

        $z0 = <net.adlayout.ad.manager.AdManager: boolean NEED_HOST>;

        if $z0 == 0 goto label8;

        if r3 == null goto label8;

        virtualinvoke r8.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("X-Online-Host", r3);

        return r8;

     label7:
        $r5 = null;

        r3 = $r2;

        goto label2;

     label8:
        return r8;
    }

    private void decodeCloudAd(byte[])
    {
        byte[] $r1;
        net.adlayout.ad.content.AdLayout $r5;
        net.adlayout.ad.decode.HouseAdDecodeJSON r2;
        java.lang.Exception $r4;
        net.adlayout.ad.util.GetCloudAdInterface $r3;
        net.adlayout.ad.util.GetCloudAdUtil r0;
        int $i0;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: net.adlayout.ad.util.GetCloudAdUtil;

        $r1 := @parameter0: byte[];

        if $r1 == null goto label4;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label4;

        r2 = new net.adlayout.ad.decode.HouseAdDecodeJSON;

        specialinvoke r2.<net.adlayout.ad.decode.HouseAdDecodeJSON: void <init>()>();

        $z0 = virtualinvoke r2.<net.adlayout.ad.decode.HouseAdDecodeJSON: boolean decodeData(byte[])>($r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<net.adlayout.ad.util.GetCloudAdUtil: net.adlayout.ad.util.GetCloudAdInterface getCloudAdInterface>;

        if $r3 == null goto label4;

        $r3 = r0.<net.adlayout.ad.util.GetCloudAdUtil: net.adlayout.ad.util.GetCloudAdInterface getCloudAdInterface>;

        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("Decode ad data failed");

        interfaceinvoke $r3.<net.adlayout.ad.util.GetCloudAdInterface: void onFailedToReceiveAd(java.lang.Exception)>($r4);

        return;

     label1:
        $r5 = virtualinvoke r2.<net.adlayout.ad.decode.HouseAdDecodeJSON: net.adlayout.ad.content.AdLayout getMenueAd()>();

        $r6 = virtualinvoke $r5.<net.adlayout.ad.content.AdLayout: java.lang.String getIconUrl()>();

        if $r6 == null goto label3;

        $r1 = specialinvoke r0.<net.adlayout.ad.util.GetCloudAdUtil: byte[] getCloudAdImage(java.lang.String)>($r6);

        if $r1 == null goto label2;

        virtualinvoke $r5.<net.adlayout.ad.content.AdLayout: void setImageData(byte[])>($r1);

        $r3 = r0.<net.adlayout.ad.util.GetCloudAdUtil: net.adlayout.ad.util.GetCloudAdInterface getCloudAdInterface>;

        if $r3 == null goto label4;

        $r3 = r0.<net.adlayout.ad.util.GetCloudAdUtil: net.adlayout.ad.util.GetCloudAdInterface getCloudAdInterface>;

        interfaceinvoke $r3.<net.adlayout.ad.util.GetCloudAdInterface: void onReceiveMenueAd(net.adlayout.ad.content.AdLayout)>($r5);

        return;

     label2:
        $r3 = r0.<net.adlayout.ad.util.GetCloudAdUtil: net.adlayout.ad.util.GetCloudAdInterface getCloudAdInterface>;

        if $r3 == null goto label4;

        $r3 = r0.<net.adlayout.ad.util.GetCloudAdUtil: net.adlayout.ad.util.GetCloudAdInterface getCloudAdInterface>;

        interfaceinvoke $r3.<net.adlayout.ad.util.GetCloudAdInterface: void onReceiveMenueAd(net.adlayout.ad.content.AdLayout)>($r5);

        return;

     label3:
        $r3 = r0.<net.adlayout.ad.util.GetCloudAdUtil: net.adlayout.ad.util.GetCloudAdInterface getCloudAdInterface>;

        if $r3 == null goto label4;

        $r3 = r0.<net.adlayout.ad.util.GetCloudAdUtil: net.adlayout.ad.util.GetCloudAdInterface getCloudAdInterface>;

        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("Cloud ad icon url is null.");

        interfaceinvoke $r3.<net.adlayout.ad.util.GetCloudAdInterface: void onFailedToReceiveAd(java.lang.Exception)>($r4);

     label4:
        return;
    }

    private byte[] getCloudAdImage(java.lang.String)
    {
        java.net.HttpURLConnection $r5;
        byte[] r3;
        java.io.ByteArrayOutputStream r2, $r7;
        java.lang.Exception r4;
        net.adlayout.ad.util.GetCloudAdUtil r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;
        java.io.InputStream $r6;

        r0 := @this: net.adlayout.ad.util.GetCloudAdUtil;

        $r1 := @parameter0: java.lang.String;

     label01:
        $z0 = r0.<net.adlayout.ad.util.GetCloudAdUtil: boolean canWriteSDCard>;

     label02:
        if $z0 == 0 goto label05;

     label03:
        r3 = staticinvoke <net.adlayout.ad.util.CacheUtil: byte[] getFileDataByName(java.lang.String)>($r1);

     label04:
        if r3 == null goto label05;

        return r3;

     label05:
        $r5 = specialinvoke r0.<net.adlayout.ad.util.GetCloudAdUtil: java.net.HttpURLConnection createHttpURLConnection(java.lang.String)>($r1);

        virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept", "*/*");

        virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "text/html");

        virtualinvoke $r5.<java.net.HttpURLConnection: void connect()>();

        $i0 = virtualinvoke $r5.<java.net.HttpURLConnection: int getResponseCode()>();

     label06:
        if $i0 != 200 goto label19;

     label07:
        $r6 = virtualinvoke $r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label08:
        $r7 = new java.io.ByteArrayOutputStream;

        r2 = $r7;

     label09:
        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

     label10:
        r3 = newarray (byte)[512];

     label11:
        $i0 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>(r3);

     label12:
        if $i0 <= 0 goto label14;

     label13:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r3, 0, $i0);

     label14:
        if $i0 != -1 goto label11;

     label15:
        r3 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label16:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void close()>();

        virtualinvoke $r6.<java.io.InputStream: void close()>();

        virtualinvoke $r5.<java.net.HttpURLConnection: void disconnect()>();

     label17:
        $z0 = r0.<net.adlayout.ad.util.GetCloudAdUtil: boolean canWriteSDCard>;

        if $z0 == 0 goto label18;

        if r3 == null goto label18;

        if $r1 == null goto label18;

        staticinvoke <net.adlayout.ad.util.CacheUtil: void addCache(java.lang.String,byte[])>($r1, r3);

     label18:
        return r3;

     label19:
        virtualinvoke $r5.<java.net.HttpURLConnection: void disconnect()>();

     label20:
        r3 = null;

        goto label17;

     label21:
        r4 := @caughtexception;

        r3 = null;

        goto label17;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label16 to label17 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    public void getAdLayoutCloudAd(net.adlayout.ad.util.GetCloudAdInterface, java.lang.String, java.lang.String)
    {
        net.adlayout.ad.util.GetCloudAdInterface $r1;
        net.adlayout.ad.util.GetCloudAdUtil r0;
        java.lang.String $r2, $r3;
        net.adlayout.ad.util.GetCloudAdUtil$1 $r4;

        r0 := @this: net.adlayout.ad.util.GetCloudAdUtil;

        $r1 := @parameter0: net.adlayout.ad.util.GetCloudAdInterface;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r0.<net.adlayout.ad.util.GetCloudAdUtil: net.adlayout.ad.util.GetCloudAdInterface getCloudAdInterface> = $r1;

        $r4 = new net.adlayout.ad.util.GetCloudAdUtil$1;

        specialinvoke $r4.<net.adlayout.ad.util.GetCloudAdUtil$1: void <init>(net.adlayout.ad.util.GetCloudAdUtil,java.lang.String,java.lang.String,net.adlayout.ad.util.GetCloudAdInterface)>(r0, $r2, $r3, $r1);

        virtualinvoke $r4.<net.adlayout.ad.util.GetCloudAdUtil$1: void start()>();

        return;
    }
}
