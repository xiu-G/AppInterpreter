public final class com.codeartmobile.AudioGuide.m extends java.lang.Object
{
    private java.lang.String a;
    private java.lang.String b;
    private android.content.Context c;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        com.codeartmobile.AudioGuide.m r0;
        java.io.File $r3;

        r0 := @this: com.codeartmobile.AudioGuide.m;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.codeartmobile.AudioGuide.m: java.lang.String b> = "db/sgs.xmf";

        r0.<com.codeartmobile.AudioGuide.m: android.content.Context c> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>(2130968577);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/sgs.data");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.codeartmobile.AudioGuide.m: java.lang.String a> = $r4;

        return;
    }

    public final android.database.sqlite.SQLiteDatabase a()
    {
        java.lang.Throwable $r3;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;
        com.codeartmobile.AudioGuide.m r0;

        r0 := @this: com.codeartmobile.AudioGuide.m;

        $r2 = r0.<com.codeartmobile.AudioGuide.m: java.lang.String a>;

     label1:
        $r1 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r2, null, 1);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.database.sqlite.SQLiteException from label1 to label2 with label3;
    }

    public final boolean b()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        java.lang.String $r3;
        com.codeartmobile.AudioGuide.m r0;
        android.database.Cursor $r2;

        r0 := @this: com.codeartmobile.AudioGuide.m;

        $r1 = virtualinvoke r0.<com.codeartmobile.AudioGuide.m: android.database.sqlite.SQLiteDatabase a()>();

        $r2 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT version FROM android_metadata", null);

        interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

        $r3 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>(0);

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>("full");

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final int c()
    {
        java.lang.Throwable $r8;
        android.content.Context $r3;
        byte[] $r7;
        java.io.FileOutputStream $r6;
        com.codeartmobile.AudioGuide.m r0;
        java.io.File $r1;
        android.content.res.AssetManager $r4;
        int $i0;
        java.lang.String $r2;
        boolean $z0;
        java.io.InputStream $r5;

        r0 := @this: com.codeartmobile.AudioGuide.m;

        $r1 = new java.io.File;

        $r2 = r0.<com.codeartmobile.AudioGuide.m: java.lang.String a>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label02;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        if $z0 == 0 goto label02;

        $z0 = virtualinvoke r0.<com.codeartmobile.AudioGuide.m: boolean b()>();

        if $z0 == 0 goto label01;

        return 2;

     label01:
        return 1;

     label02:
        $r3 = r0.<com.codeartmobile.AudioGuide.m: android.content.Context c>;

     label03:
        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label04:
        $r2 = r0.<com.codeartmobile.AudioGuide.m: java.lang.String b>;

     label05:
        $r5 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r2);

     label06:
        $r6 = new java.io.FileOutputStream;

     label07:
        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

     label08:
        $r7 = newarray (byte)[1024];

     label09:
        $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7);

     label10:
        if $i0 > 0 goto label13;

     label11:
        virtualinvoke $r6.<java.io.OutputStream: void flush()>();

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label12:
        return 1;

     label13:
        virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i0);

     label14:
        goto label09;

     label15:
        $r8 := @caughtexception;

        return 0;

        catch java.io.IOException from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.io.IOException from label11 to label12 with label15;
        catch java.io.IOException from label13 to label14 with label15;
    }
}
