class com.google.tagmanager.RegexPredicate extends com.google.tagmanager.StringPredicate
{
    private static final java.lang.String ID;
    private static final java.lang.String IGNORE_CASE;

    static void <clinit>()
    {
        com.google.analytics.containertag.common.FunctionType $r0;
        com.google.analytics.containertag.common.Key $r2;
        java.lang.String $r1;

        $r0 = <com.google.analytics.containertag.common.FunctionType: com.google.analytics.containertag.common.FunctionType REGEX>;

        $r1 = virtualinvoke $r0.<com.google.analytics.containertag.common.FunctionType: java.lang.String toString()>();

        <com.google.tagmanager.RegexPredicate: java.lang.String ID> = $r1;

        $r2 = <com.google.analytics.containertag.common.Key: com.google.analytics.containertag.common.Key IGNORE_CASE>;

        $r1 = virtualinvoke $r2.<com.google.analytics.containertag.common.Key: java.lang.String toString()>();

        <com.google.tagmanager.RegexPredicate: java.lang.String IGNORE_CASE> = $r1;

        return;
    }

    public void <init>()
    {
        java.lang.String $r1;
        com.google.tagmanager.RegexPredicate r0;

        r0 := @this: com.google.tagmanager.RegexPredicate;

        $r1 = <com.google.tagmanager.RegexPredicate: java.lang.String ID>;

        specialinvoke r0.<com.google.tagmanager.StringPredicate: void <init>(java.lang.String)>($r1);

        return;
    }

    public static java.lang.String getFunctionId()
    {
        java.lang.String r0;

        r0 = <com.google.tagmanager.RegexPredicate: java.lang.String ID>;

        return r0;
    }

    public static java.lang.String getIgnoreCaseKey()
    {
        java.lang.String r0;

        r0 = <com.google.tagmanager.RegexPredicate: java.lang.String IGNORE_CASE>;

        return r0;
    }

    protected boolean evaluateString(java.lang.String, java.lang.String, java.util.Map)
    {
        java.lang.Throwable $r10;
        com.google.tagmanager.RegexPredicate r0;
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value $r6;
        java.util.regex.Matcher $r9;
        byte $b0;
        java.util.Map $r3;
        java.lang.Boolean $r7;
        java.lang.Object $r5;
        java.lang.String $r1, $r2, $r4;
        java.util.regex.Pattern $r8;
        boolean $z0;

        r0 := @this: com.google.tagmanager.RegexPredicate;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Map;

        $r4 = <com.google.tagmanager.RegexPredicate: java.lang.String IGNORE_CASE>;

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (com.google.analytics.midtier.proto.containertag.TypeSystem$Value) $r5;

        $r7 = staticinvoke <com.google.tagmanager.Types: java.lang.Boolean valueToBoolean(com.google.analytics.midtier.proto.containertag.TypeSystem$Value)>($r6);

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label4;

        $b0 = 66;

     label1:
        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r2, $b0);

        $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r9.<java.util.regex.Matcher: boolean find()>();

     label2:
        return $z0;

     label3:
        $r10 := @caughtexception;

        return 0;

     label4:
        $b0 = 64;

        goto label1;

        catch java.util.regex.PatternSyntaxException from label1 to label2 with label3;
    }
}
