public class giil.xml.Attribute extends java.lang.Object
{
    private java.lang.String a;
    private java.lang.String b;

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        giil.xml.Attribute r0;

        r0 := @this: giil.xml.Attribute;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<giil.xml.Attribute: java.lang.String a> = null;

        r0.<giil.xml.Attribute: java.lang.String b> = null;

        r0.<giil.xml.Attribute: java.lang.String a> = $r1;

        return;
    }

    public void <init>(java.lang.String, giil.xml.Namespace)
    {
        java.lang.String $r1;
        giil.xml.Namespace $r2;
        giil.xml.Attribute r0;

        r0 := @this: giil.xml.Attribute;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: giil.xml.Namespace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<giil.xml.Attribute: java.lang.String a> = null;

        r0.<giil.xml.Attribute: java.lang.String b> = null;

        r0.<giil.xml.Attribute: java.lang.String a> = $r1;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String r1;
        giil.xml.Attribute r0;

        r0 := @this: giil.xml.Attribute;

        r1 = r0.<giil.xml.Attribute: java.lang.String a>;

        return r1;
    }

    public java.lang.String getValue()
    {
        java.lang.String r1;
        giil.xml.Attribute r0;

        r0 := @this: giil.xml.Attribute;

        r1 = r0.<giil.xml.Attribute: java.lang.String b>;

        return r1;
    }

    public giil.xml.Attribute setValue(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String[] $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        giil.xml.Attribute r0;

        r0 := @this: giil.xml.Attribute;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<giil.xml.Attribute: java.lang.String[] split(java.lang.String,java.lang.String)>($r1, "&");

        $i0 = lengthof $r2;

        $r1 = $r2[0];

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        r0.<giil.xml.Attribute: java.lang.String b> = $r1;

        $i1 = 1;

     label1:
        if $i1 < $i0 goto label2;

        return r0;

     label2:
        $r1 = r0.<giil.xml.Attribute: java.lang.String b>;

        $r3 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");

        $r1 = $r2[$i1];

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<giil.xml.Attribute: java.lang.String b> = $r1;

        $i1 = $i1 + 1;

        goto label1;
    }

    public java.lang.String[] split(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r4;
        giil.xml.Attribute r3;
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.Object $r6;
        java.lang.String $r0, $r1, $r5;

        r3 := @this: giil.xml.Attribute;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("&");

     label1:
        if $i0 >= 0 goto label3;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r0);

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label5;

        $i0 = 0;

     label2:
        $i1 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 < $i1 goto label4;

        return $r4;

     label3:
        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("&");

        goto label1;

     label4:
        $r6 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r0 = (java.lang.String) $r6;

        $r4[$i0] = $r0;

        $i0 = $i0 + 1;

        goto label2;

     label5:
        return $r4;
    }
}
