class com.facebook.ads.AdView$AdWebViewClient extends android.webkit.WebViewClient
{
    final com.facebook.ads.AdView this$0;

    private void <init>(com.facebook.ads.AdView)
    {
        com.facebook.ads.AdView $r1;
        com.facebook.ads.AdView$AdWebViewClient r0;

        r0 := @this: com.facebook.ads.AdView$AdWebViewClient;

        $r1 := @parameter0: com.facebook.ads.AdView;

        r0.<com.facebook.ads.AdView$AdWebViewClient: com.facebook.ads.AdView this$0> = $r1;

        specialinvoke r0.<android.webkit.WebViewClient: void <init>()>();

        return;
    }

    void <init>(com.facebook.ads.AdView, com.facebook.ads.AdView$1)
    {
        com.facebook.ads.AdView $r1;
        com.facebook.ads.AdView$AdWebViewClient r0;
        com.facebook.ads.AdView$1 $r2;

        r0 := @this: com.facebook.ads.AdView$AdWebViewClient;

        $r1 := @parameter0: com.facebook.ads.AdView;

        $r2 := @parameter1: com.facebook.ads.AdView$1;

        specialinvoke r0.<com.facebook.ads.AdView$AdWebViewClient: void <init>(com.facebook.ads.AdView)>($r1);

        return;
    }

    public void onLoadResource(android.webkit.WebView, java.lang.String)
    {
        com.facebook.ads.internal.HtmlAdHandler $r3;
        com.facebook.ads.AdView $r4;
        java.lang.String $r2;
        android.webkit.WebView $r1;
        com.facebook.ads.AdView$AdWebViewClient r0;

        r0 := @this: com.facebook.ads.AdView$AdWebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.facebook.ads.AdView$AdWebViewClient: com.facebook.ads.AdView this$0>;

        $r3 = staticinvoke <com.facebook.ads.AdView: com.facebook.ads.internal.HtmlAdHandler access$500(com.facebook.ads.AdView)>($r4);

        virtualinvoke $r3.<com.facebook.ads.internal.HtmlAdHandler: void activateAd()>();

        return;
    }

    public void onReceivedSslError(android.webkit.WebView, android.webkit.SslErrorHandler, android.net.http.SslError)
    {
        android.webkit.SslErrorHandler $r2;
        android.net.http.SslError $r3;
        java.lang.String $r4;
        android.webkit.WebView $r1;
        com.facebook.ads.AdView$AdWebViewClient r0;
        boolean $z0;

        r0 := @this: com.facebook.ads.AdView$AdWebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: android.webkit.SslErrorHandler;

        $r3 := @parameter2: android.net.http.SslError;

        $r4 = staticinvoke <com.facebook.ads.AdSettings: java.lang.String getUrlPrefix()>();

        $z0 = staticinvoke <com.facebook.ads.internal.StringUtils: boolean isNullOrEmpty(java.lang.String)>($r4);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>(".sb");

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<android.webkit.SslErrorHandler: void proceed()>();

        return;

     label1:
        virtualinvoke $r2.<android.webkit.SslErrorHandler: void cancel()>();

        return;
    }

    public boolean shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String)
    {
        com.facebook.ads.AdView $r3;
        android.content.Context $r6;
        com.facebook.ads.AdListener $r4;
        android.net.Uri $r5;
        java.util.UUID $r12;
        java.lang.Exception $r13;
        com.facebook.ads.AdView$AdWebViewClient r0;
        com.facebook.ads.internal.action.AdAction $r7;
        com.facebook.ads.internal.HtmlAdHandler $r8;
        com.facebook.ads.internal.HtmlAdDataModel $r10;
        com.facebook.ads.internal.AdDataModel $r9;
        java.util.Map $r11;
        java.lang.String $r2;
        android.webkit.WebView $r1;

        r0 := @this: com.facebook.ads.AdView$AdWebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.facebook.ads.AdView$AdWebViewClient: com.facebook.ads.AdView this$0>;

        $r4 = staticinvoke <com.facebook.ads.AdView: com.facebook.ads.AdListener access$600(com.facebook.ads.AdView)>($r3);

        if $r4 == null goto label1;

        $r3 = r0.<com.facebook.ads.AdView$AdWebViewClient: com.facebook.ads.AdView this$0>;

        $r4 = staticinvoke <com.facebook.ads.AdView: com.facebook.ads.AdListener access$600(com.facebook.ads.AdView)>($r3);

        $r3 = r0.<com.facebook.ads.AdView$AdWebViewClient: com.facebook.ads.AdView this$0>;

        interfaceinvoke $r4.<com.facebook.ads.AdListener: void onAdClicked(com.facebook.ads.Ad)>($r3);

     label1:
        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r2);

        $r3 = r0.<com.facebook.ads.AdView$AdWebViewClient: com.facebook.ads.AdView this$0>;

        $r6 = virtualinvoke $r3.<com.facebook.ads.AdView: android.content.Context getContext()>();

        $r7 = staticinvoke <com.facebook.ads.internal.action.AdActionFactory: com.facebook.ads.internal.action.AdAction getAdAction(android.content.Context,android.net.Uri)>($r6, $r5);

        $r3 = r0.<com.facebook.ads.AdView$AdWebViewClient: com.facebook.ads.AdView this$0>;

        $r8 = staticinvoke <com.facebook.ads.AdView: com.facebook.ads.internal.HtmlAdHandler access$500(com.facebook.ads.AdView)>($r3);

        $r9 = virtualinvoke $r8.<com.facebook.ads.internal.HtmlAdHandler: com.facebook.ads.internal.AdDataModel getAdDataModel()>();

        $r10 = (com.facebook.ads.internal.HtmlAdDataModel) $r9;

        $r11 = virtualinvoke $r10.<com.facebook.ads.internal.HtmlAdDataModel: java.util.Map getDataModelMap()>();

        $r12 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r2 = virtualinvoke $r12.<java.util.UUID: java.lang.String toString()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("adInterstitialUniqueId", $r2);

        if $r7 == null goto label3;

     label2:
        virtualinvoke $r7.<com.facebook.ads.internal.action.AdAction: void execute(java.util.Map)>($r11);

     label3:
        return 1;

     label4:
        $r13 := @caughtexception;

        $r2 = staticinvoke <com.facebook.ads.AdView: java.lang.String access$900()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Error executing action", $r13);

        goto label3;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
