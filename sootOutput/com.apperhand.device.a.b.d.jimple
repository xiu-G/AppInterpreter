public final class com.apperhand.device.a.b.d extends com.apperhand.device.a.b.b
{
    public static final java.lang.Object g;
    private com.apperhand.device.a.a.c h;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.apperhand.device.a.b.d: java.lang.Object g> = $r0;

        return;
    }

    public void <init>(com.apperhand.device.a.b, com.apperhand.device.a.a, java.lang.String, com.apperhand.common.dto.Command)
    {
        com.apperhand.device.a.b.d r0;
        com.apperhand.common.dto.Command $r4;
        com.apperhand.common.dto.Command$Commands $r5;
        java.lang.String $r3;
        com.apperhand.device.a.a $r2;
        com.apperhand.device.a.b $r1;
        com.apperhand.device.a.a.c $r6;

        r0 := @this: com.apperhand.device.a.b.d;

        $r1 := @parameter0: com.apperhand.device.a.b;

        $r2 := @parameter1: com.apperhand.device.a.a;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.apperhand.common.dto.Command;

        $r5 = virtualinvoke $r4.<com.apperhand.common.dto.Command: com.apperhand.common.dto.Command$Commands getCommand()>();

        specialinvoke r0.<com.apperhand.device.a.b.b: void <init>(com.apperhand.device.a.b,com.apperhand.device.a.a,java.lang.String,com.apperhand.common.dto.Command$Commands)>($r1, $r2, $r3, $r5);

        $r6 = interfaceinvoke $r2.<com.apperhand.device.a.a: com.apperhand.device.a.a.c h()>();

        r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a.c h> = $r6;

        return;
    }

    private com.apperhand.common.dto.protocol.BaseResponse a(com.apperhand.common.dto.protocol.EULARequest)
    {
        com.apperhand.common.dto.Command$Commands $r5;
        com.apperhand.device.a.c.a $r4;
        com.apperhand.device.a.b.d r0;
        com.apperhand.device.a.d.c$a $r10;
        com.apperhand.device.a.d.c $r9;
        com.apperhand.device.a.d.f $r8;
        com.apperhand.common.dto.protocol.EULARequest $r1;
        java.lang.String $r2;
        com.apperhand.device.a.a $r3;
        com.apperhand.common.dto.protocol.BaseResponse $r6;
        com.apperhand.common.dto.protocol.EULAResponse $r7;

        r0 := @this: com.apperhand.device.a.b.d;

        $r1 := @parameter0: com.apperhand.common.dto.protocol.EULARequest;

        $r3 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a e>;

     label1:
        $r4 = interfaceinvoke $r3.<com.apperhand.device.a.a: com.apperhand.device.a.c.a b()>();

     label2:
        $r5 = <com.apperhand.common.dto.Command$Commands: com.apperhand.common.dto.Command$Commands EULA>;

     label3:
        $r6 = interfaceinvoke $r4.<com.apperhand.device.a.c.a: com.apperhand.common.dto.protocol.BaseResponse a(java.lang.Object,com.apperhand.common.dto.Command$Commands,java.lang.Class)>($r1, $r5, class "Lcom/apperhand/common/dto/protocol/EULAResponse;");

     label4:
        $r7 = (com.apperhand.common.dto.protocol.EULAResponse) $r6;

        return $r7;

     label5:
        $r8 := @caughtexception;

        $r3 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a e>;

        $r9 = interfaceinvoke $r3.<com.apperhand.device.a.a: com.apperhand.device.a.d.c a()>();

        $r10 = <com.apperhand.device.a.d.c$a: com.apperhand.device.a.d.c$a b>;

        $r2 = r0.<com.apperhand.device.a.b.d: java.lang.String a>;

        interfaceinvoke $r9.<com.apperhand.device.a.d.c: void a(com.apperhand.device.a.d.c$a,java.lang.String,java.lang.String,java.lang.Throwable)>($r10, $r2, "Unable to handle EULA command!!!!", $r8);

        return null;

        catch com.apperhand.device.a.d.f from label1 to label2 with label5;
        catch com.apperhand.device.a.d.f from label3 to label4 with label5;
    }

    private void a(com.apperhand.common.dto.EULADetails)
    {
        com.apperhand.device.a.b.d r0;
        byte[] $r3;
        com.apperhand.common.dto.EULADetails $r1;
        com.apperhand.device.a.a.c $r2;

        r0 := @this: com.apperhand.device.a.b.d;

        $r1 := @parameter0: com.apperhand.common.dto.EULADetails;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a.c h>;

        $r3 = virtualinvoke $r1.<com.apperhand.common.dto.EULADetails: byte[] getFooter()>();

        interfaceinvoke $r2.<com.apperhand.device.a.a.c: boolean a(byte[],java.lang.String)>($r3, "new_eula_footer.htm");

        $r2 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a.c h>;

        $r3 = virtualinvoke $r1.<com.apperhand.common.dto.EULADetails: byte[] getBody()>();

        interfaceinvoke $r2.<com.apperhand.device.a.a.c: boolean a(byte[],java.lang.String)>($r3, "new_eula_body.htm");

        $r2 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a.c h>;

        interfaceinvoke $r2.<com.apperhand.device.a.a.c: boolean a(com.apperhand.common.dto.EULADetails)>($r1);

        return;
    }

    protected final com.apperhand.common.dto.protocol.BaseResponse a() throws com.apperhand.device.a.d.f
    {
        com.apperhand.device.a.b.d r0;
        com.apperhand.common.dto.protocol.EULARequest $r1;
        com.apperhand.common.dto.ApplicationDetails $r3;
        com.apperhand.device.a.a $r2;
        com.apperhand.common.dto.protocol.BaseResponse $r4;

        r0 := @this: com.apperhand.device.a.b.d;

        $r1 = new com.apperhand.common.dto.protocol.EULARequest;

        specialinvoke $r1.<com.apperhand.common.dto.protocol.EULARequest: void <init>()>();

        $r2 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a e>;

        $r3 = interfaceinvoke $r2.<com.apperhand.device.a.a: com.apperhand.common.dto.ApplicationDetails j()>();

        virtualinvoke $r1.<com.apperhand.common.dto.protocol.EULARequest: void setApplicationDetails(com.apperhand.common.dto.ApplicationDetails)>($r3);

        $r4 = specialinvoke r0.<com.apperhand.device.a.b.d: com.apperhand.common.dto.protocol.BaseResponse a(com.apperhand.common.dto.protocol.EULARequest)>($r1);

        return $r4;
    }

    protected final java.util.Map a(com.apperhand.common.dto.protocol.BaseResponse) throws com.apperhand.device.a.d.f
    {
        java.lang.Throwable $r8;
        com.apperhand.common.dto.EULADetails $r1;
        java.util.HashMap $r4;
        com.apperhand.device.a.a.c $r3;
        com.apperhand.device.a.b.d r0;
        java.lang.Boolean $r5;
        java.lang.Object $r6;
        com.apperhand.common.dto.protocol.BaseResponse $r2;
        com.apperhand.common.dto.protocol.EULAResponse $r7;

        r0 := @this: com.apperhand.device.a.b.d;

        $r2 := @parameter0: com.apperhand.common.dto.protocol.BaseResponse;

        if $r2 != null goto label2;

        $r3 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a.c h>;

        interfaceinvoke $r3.<com.apperhand.device.a.a.c: void a(java.lang.String,java.lang.String)>(null, null);

     label1:
        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>(1);

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("skip_status", $r5);

        return $r4;

     label2:
        $r6 = <com.apperhand.device.a.b.d: java.lang.Object g>;

        entermonitor $r6;

     label3:
        $r7 = (com.apperhand.common.dto.protocol.EULAResponse) $r2;

        $r1 = virtualinvoke $r7.<com.apperhand.common.dto.protocol.EULAResponse: com.apperhand.common.dto.EULADetails getDetails()>();

        specialinvoke r0.<com.apperhand.device.a.b.d: void a(com.apperhand.common.dto.EULADetails)>($r1);

        $r3 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a.c h>;

        interfaceinvoke $r3.<com.apperhand.device.a.a.c: void a(java.lang.String,java.lang.String)>("new_eula_body.htm", "new_eula_footer.htm");

        exitmonitor $r6;

     label4:
        goto label1;

     label5:
        $r8 := @caughtexception;

        exitmonitor $r6;

        throw $r8;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public final void a(java.util.Map) throws com.apperhand.device.a.d.f
    {
        java.lang.Object[] $r13;
        com.apperhand.common.dto.Command$Commands $r8;
        com.apperhand.device.a.c.a $r7;
        com.apperhand.device.a.b.d r0;
        com.apperhand.device.a.d.c $r15;
        com.apperhand.device.a.d.f $r12;
        java.util.Map $r1;
        java.lang.String $r14, $r17;
        com.apperhand.common.dto.protocol.EULAStatusRequest $r2;
        com.apperhand.common.dto.EULADetails $r11;
        com.apperhand.common.dto.EULAAcceptDetails $r6;
        com.apperhand.device.a.d.c$a $r16;
        com.apperhand.common.dto.ApplicationDetails $r4;
        java.lang.Object $r5;
        com.apperhand.device.a.a $r3;
        com.apperhand.common.dto.protocol.BaseResponse $r9;
        com.apperhand.common.dto.protocol.EULAResponse $r10;

        r0 := @this: com.apperhand.device.a.b.d;

        $r1 := @parameter0: java.util.Map;

        $r2 = new com.apperhand.common.dto.protocol.EULAStatusRequest;

        specialinvoke $r2.<com.apperhand.common.dto.protocol.EULAStatusRequest: void <init>()>();

        $r3 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a e>;

        $r4 = interfaceinvoke $r3.<com.apperhand.device.a.a: com.apperhand.common.dto.ApplicationDetails j()>();

        virtualinvoke $r2.<com.apperhand.common.dto.protocol.EULAStatusRequest: void setApplicationDetails(com.apperhand.common.dto.ApplicationDetails)>($r4);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("details");

        $r6 = (com.apperhand.common.dto.EULAAcceptDetails) $r5;

        virtualinvoke $r2.<com.apperhand.common.dto.protocol.EULAStatusRequest: void setDetails(com.apperhand.common.dto.EULAAcceptDetails)>($r6);

        $r3 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a e>;

     label1:
        $r7 = interfaceinvoke $r3.<com.apperhand.device.a.a: com.apperhand.device.a.c.a b()>();

     label2:
        $r8 = <com.apperhand.common.dto.Command$Commands: com.apperhand.common.dto.Command$Commands EULA_STATUS>;

     label3:
        $r9 = interfaceinvoke $r7.<com.apperhand.device.a.c.a: com.apperhand.common.dto.protocol.BaseResponse a(java.lang.Object,com.apperhand.common.dto.Command$Commands,java.lang.Class)>($r2, $r8, class "Lcom/apperhand/common/dto/protocol/EULAResponse;");

     label4:
        $r10 = (com.apperhand.common.dto.protocol.EULAResponse) $r9;

     label5:
        $r11 = virtualinvoke $r10.<com.apperhand.common.dto.protocol.EULAResponse: com.apperhand.common.dto.EULADetails getDetails()>();

        specialinvoke r0.<com.apperhand.device.a.b.d: void a(com.apperhand.common.dto.EULADetails)>($r11);

     label6:
        return;

     label7:
        $r12 := @caughtexception;

        $r13 = newarray (java.lang.Object)[1];

        $r8 = r0.<com.apperhand.device.a.b.d: com.apperhand.common.dto.Command$Commands d>;

        $r14 = virtualinvoke $r8.<com.apperhand.common.dto.Command$Commands: java.lang.String getString()>();

        $r13[0] = $r14;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to send command status for command [%s]!!!!", $r13);

        $r3 = r0.<com.apperhand.device.a.b.d: com.apperhand.device.a.a e>;

        $r15 = interfaceinvoke $r3.<com.apperhand.device.a.a: com.apperhand.device.a.d.c a()>();

        $r16 = <com.apperhand.device.a.d.c$a: com.apperhand.device.a.d.c$a b>;

        $r17 = r0.<com.apperhand.device.a.b.d: java.lang.String a>;

        interfaceinvoke $r15.<com.apperhand.device.a.d.c: void a(com.apperhand.device.a.d.c$a,java.lang.String,java.lang.String,java.lang.Throwable)>($r16, $r17, $r14, $r12);

        return;

        catch com.apperhand.device.a.d.f from label1 to label2 with label7;
        catch com.apperhand.device.a.d.f from label3 to label4 with label7;
        catch com.apperhand.device.a.d.f from label5 to label6 with label7;
    }
}
