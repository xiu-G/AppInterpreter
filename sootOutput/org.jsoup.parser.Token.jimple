abstract class org.jsoup.parser.Token extends java.lang.Object
{
    org.jsoup.parser.Token$TokenType type;

    private void <init>()
    {
        org.jsoup.parser.Token r0;

        r0 := @this: org.jsoup.parser.Token;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.jsoup.parser.Token$1)
    {
        org.jsoup.parser.Token$1 $r1;
        org.jsoup.parser.Token r0;

        r0 := @this: org.jsoup.parser.Token;

        $r1 := @parameter0: org.jsoup.parser.Token$1;

        specialinvoke r0.<org.jsoup.parser.Token: void <init>()>();

        return;
    }

    org.jsoup.parser.Token$Character asCharacter()
    {
        org.jsoup.parser.Token$Character r1;
        org.jsoup.parser.Token r0;

        r0 := @this: org.jsoup.parser.Token;

        r1 = (org.jsoup.parser.Token$Character) r0;

        return r1;
    }

    org.jsoup.parser.Token$Comment asComment()
    {
        org.jsoup.parser.Token$Comment r1;
        org.jsoup.parser.Token r0;

        r0 := @this: org.jsoup.parser.Token;

        r1 = (org.jsoup.parser.Token$Comment) r0;

        return r1;
    }

    org.jsoup.parser.Token$Doctype asDoctype()
    {
        org.jsoup.parser.Token$Doctype r1;
        org.jsoup.parser.Token r0;

        r0 := @this: org.jsoup.parser.Token;

        r1 = (org.jsoup.parser.Token$Doctype) r0;

        return r1;
    }

    org.jsoup.parser.Token$EndTag asEndTag()
    {
        org.jsoup.parser.Token$EndTag r1;
        org.jsoup.parser.Token r0;

        r0 := @this: org.jsoup.parser.Token;

        r1 = (org.jsoup.parser.Token$EndTag) r0;

        return r1;
    }

    org.jsoup.parser.Token$StartTag asStartTag()
    {
        org.jsoup.parser.Token$StartTag r1;
        org.jsoup.parser.Token r0;

        r0 := @this: org.jsoup.parser.Token;

        r1 = (org.jsoup.parser.Token$StartTag) r0;

        return r1;
    }

    boolean isCharacter()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;

        r0 := @this: org.jsoup.parser.Token;

        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Character>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isComment()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;

        r0 := @this: org.jsoup.parser.Token;

        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Comment>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isDoctype()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;

        r0 := @this: org.jsoup.parser.Token;

        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Doctype>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isEOF()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;

        r0 := @this: org.jsoup.parser.Token;

        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EOF>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isEndTag()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;

        r0 := @this: org.jsoup.parser.Token;

        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType EndTag>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isStartTag()
    {
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$TokenType $r1, $r2;

        r0 := @this: org.jsoup.parser.Token;

        $r2 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $r1 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType StartTag>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    java.lang.String tokenType()
    {
        java.lang.Class $r1;
        java.lang.String $r2;
        org.jsoup.parser.Token r0;

        r0 := @this: org.jsoup.parser.Token;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r2;
    }
}
