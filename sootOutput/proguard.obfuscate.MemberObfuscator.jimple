public class proguard.obfuscate.MemberObfuscator extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.MemberVisitor
{
    private final boolean allowAggressiveOverloading;
    private final java.util.Map descriptorMap;
    private final proguard.obfuscate.NameFactory nameFactory;

    public void <init>(boolean, proguard.obfuscate.NameFactory, java.util.Map)
    {
        proguard.obfuscate.MemberObfuscator r0;
        java.util.Map $r2;
        proguard.obfuscate.NameFactory $r1;
        boolean $z0;

        r0 := @this: proguard.obfuscate.MemberObfuscator;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: proguard.obfuscate.NameFactory;

        $r2 := @parameter2: java.util.Map;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.obfuscate.MemberObfuscator: boolean allowAggressiveOverloading> = $z0;

        r0.<proguard.obfuscate.MemberObfuscator: proguard.obfuscate.NameFactory nameFactory> = $r1;

        r0.<proguard.obfuscate.MemberObfuscator: java.util.Map descriptorMap> = $r2;

        return;
    }

    static boolean hasFixedNewMemberName(proguard.classfile.Member)
    {
        proguard.classfile.VisitorAccepter $r1;
        proguard.classfile.Member $r0;
        boolean $z0;

        $r0 := @parameter0: proguard.classfile.Member;

        $r1 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.VisitorAccepter lastVisitorAccepter(proguard.classfile.VisitorAccepter)>($r0);

        $z0 = $r1 instanceof proguard.classfile.LibraryMember;

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof proguard.obfuscate.MemberObfuscator$MyFixedName;

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    static java.lang.String newMemberName(proguard.classfile.Member)
    {
        proguard.classfile.VisitorAccepter $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        proguard.classfile.Member $r0;

        $r0 := @parameter0: proguard.classfile.Member;

        $r1 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.VisitorAccepter lastVisitorAccepter(proguard.classfile.VisitorAccepter)>($r0);

        $r2 = interfaceinvoke $r1.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    static java.util.Map retrieveNameMap(java.util.Map, java.lang.String)
    {
        java.util.Map $r0, $r3;
        java.lang.Object $r2;
        java.util.HashMap $r4;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.util.Map) $r2;

        if $r3 != null goto label1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        return $r4;

     label1:
        return $r3;
    }

    static void setFixedNewMemberName(proguard.classfile.Member, java.lang.String)
    {
        proguard.classfile.VisitorAccepter $r2;
        java.lang.String $r1;
        proguard.obfuscate.MemberObfuscator$MyFixedName $r3;
        proguard.classfile.Member $r0;
        boolean $z0;

        $r0 := @parameter0: proguard.classfile.Member;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.VisitorAccepter lastVisitorAccepter(proguard.classfile.VisitorAccepter)>($r0);

        $z0 = $r2 instanceof proguard.classfile.LibraryMember;

        if $z0 != 0 goto label1;

        $z0 = $r2 instanceof proguard.obfuscate.MemberObfuscator$MyFixedName;

        if $z0 != 0 goto label1;

        $r3 = new proguard.obfuscate.MemberObfuscator$MyFixedName;

        specialinvoke $r3.<proguard.obfuscate.MemberObfuscator$MyFixedName: void <init>(java.lang.String)>($r1);

        interfaceinvoke $r2.<proguard.classfile.VisitorAccepter: void setVisitorInfo(java.lang.Object)>($r3);

        return;

     label1:
        interfaceinvoke $r2.<proguard.classfile.VisitorAccepter: void setVisitorInfo(java.lang.Object)>($r1);

        return;
    }

    static void setNewMemberName(proguard.classfile.Member, java.lang.String)
    {
        java.lang.String $r1;
        proguard.classfile.VisitorAccepter $r2;
        proguard.classfile.Member $r0;

        $r0 := @parameter0: proguard.classfile.Member;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.VisitorAccepter lastVisitorAccepter(proguard.classfile.VisitorAccepter)>($r0);

        interfaceinvoke $r2.<proguard.classfile.VisitorAccepter: void setVisitorInfo(java.lang.Object)>($r1);

        return;
    }

    public void visitAnyMember(proguard.classfile.Clazz, proguard.classfile.Member)
    {
        proguard.obfuscate.MemberObfuscator r0;
        proguard.classfile.Member $r2;
        proguard.classfile.Clazz $r1;
        java.util.Map $r6;
        int $i0;
        java.lang.String $r3, $r4, $r5;
        proguard.obfuscate.NameFactory $r7;
        boolean $z0;

        r0 := @this: proguard.obfuscate.MemberObfuscator;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Member;

        $r3 = interfaceinvoke $r2.<proguard.classfile.Member: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("<clinit>");

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = interfaceinvoke $r2.<proguard.classfile.Member: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r5 = $r4;

        $z0 = r0.<proguard.obfuscate.MemberObfuscator: boolean allowAggressiveOverloading>;

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(41);

        $i0 = $i0 + 1;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r6 = r0.<proguard.obfuscate.MemberObfuscator: java.util.Map descriptorMap>;

        $r6 = staticinvoke <proguard.obfuscate.MemberObfuscator: java.util.Map retrieveNameMap(java.util.Map,java.lang.String)>($r6, $r5);

        $r4 = staticinvoke <proguard.obfuscate.MemberObfuscator: java.lang.String newMemberName(proguard.classfile.Member)>($r2);

        if $r4 != null goto label4;

        $r7 = r0.<proguard.obfuscate.MemberObfuscator: proguard.obfuscate.NameFactory nameFactory>;

        interfaceinvoke $r7.<proguard.obfuscate.NameFactory: void reset()>();

     label3:
        $r7 = r0.<proguard.obfuscate.MemberObfuscator: proguard.obfuscate.NameFactory nameFactory>;

        $r4 = interfaceinvoke $r7.<proguard.obfuscate.NameFactory: java.lang.String nextName()>();

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z0 != 0 goto label3;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        staticinvoke <proguard.obfuscate.MemberObfuscator: void setNewMemberName(proguard.classfile.Member,java.lang.String)>($r2, $r4);

     label4:
        return;
    }
}
