public final class com.kingroot.sdk.gz extends java.lang.Object
{
    private static final byte[] kn;
    private static final byte[] ko;

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2;
        byte $b2;
        int $i0, $i1;

        $r0 = newarray (byte)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        $r1 = newarray (byte)[256];

        $r2 = newarray (byte)[256];

        $i0 = 0;

     label1:
        if $i0 < 256 goto label2;

        <com.kingroot.sdk.gz: byte[] kn> = $r1;

        <com.kingroot.sdk.gz: byte[] ko> = $r2;

        return;

     label2:
        $i1 = $i0 >>> 4;

        $b2 = $r0[$i1];

        $r1[$i0] = $b2;

        $i1 = $i0 & 15;

        $b2 = $r0[$i1];

        $r2[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label1;
    }

    public static int a(java.lang.Comparable, java.lang.Comparable)
    {
        int $i0;
        java.lang.Comparable $r0, $r1;

        $r0 := @parameter0: java.lang.Comparable;

        $r1 := @parameter1: java.lang.Comparable;

        $i0 = interfaceinvoke $r0.<java.lang.Comparable: int compareTo(java.lang.Object)>($r1);

        return $i0;
    }

    public static byte[] a(java.nio.ByteBuffer)
    {
        byte[] $r1, $r2;
        int $i0;
        java.nio.ByteBuffer $r0;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke $r0.<java.nio.ByteBuffer: int position()>();

        $r1 = newarray (byte)[$i0];

        $r2 = virtualinvoke $r0.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return $r1;
    }

    public static boolean c(boolean, boolean)
    {
        boolean $z0, $z1;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        if $z0 != $z1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean equals(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean equals(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }
}
