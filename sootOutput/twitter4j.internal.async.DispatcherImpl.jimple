final class twitter4j.internal.async.DispatcherImpl extends java.lang.Object implements twitter4j.internal.async.Dispatcher
{
    private boolean active;
    private final java.util.List q;
    private twitter4j.internal.async.ExecuteThread[] threads;
    final java.lang.Object ticket;

    public void <init>(twitter4j.conf.Configuration)
    {
        twitter4j.internal.async.DispatcherImpl r0;
        twitter4j.internal.async.ExecuteThread $r2;
        java.lang.Runtime $r6;
        twitter4j.internal.async.DispatcherImpl$1 $r7;
        twitter4j.internal.async.ExecuteThread[] $r5;
        twitter4j.conf.Configuration $r1;
        int $i0, $i1;
        java.lang.Object $r4;
        java.util.LinkedList $r3;

        r0 := @this: twitter4j.internal.async.DispatcherImpl;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<twitter4j.internal.async.DispatcherImpl: java.util.List q> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<twitter4j.internal.async.DispatcherImpl: java.lang.Object ticket> = $r4;

        r0.<twitter4j.internal.async.DispatcherImpl: boolean active> = 1;

        $i0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: int getAsyncNumThreads()>();

        $r5 = newarray (twitter4j.internal.async.ExecuteThread)[$i0];

        r0.<twitter4j.internal.async.DispatcherImpl: twitter4j.internal.async.ExecuteThread[] threads> = $r5;

        $i0 = 0;

     label1:
        $r5 = r0.<twitter4j.internal.async.DispatcherImpl: twitter4j.internal.async.ExecuteThread[] threads>;

        $i1 = lengthof $r5;

        if $i0 < $i1 goto label2;

        $r6 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r7 = new twitter4j.internal.async.DispatcherImpl$1;

        specialinvoke $r7.<twitter4j.internal.async.DispatcherImpl$1: void <init>(twitter4j.internal.async.DispatcherImpl)>(r0);

        virtualinvoke $r6.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r7);

        return;

     label2:
        $r5 = r0.<twitter4j.internal.async.DispatcherImpl: twitter4j.internal.async.ExecuteThread[] threads>;

        $r2 = new twitter4j.internal.async.ExecuteThread;

        specialinvoke $r2.<twitter4j.internal.async.ExecuteThread: void <init>(java.lang.String,twitter4j.internal.async.DispatcherImpl,int)>("Twitter4J Async Dispatcher", r0, $i0);

        $r5[$i0] = $r2;

        $r5 = r0.<twitter4j.internal.async.DispatcherImpl: twitter4j.internal.async.ExecuteThread[] threads>;

        $r2 = $r5[$i0];

        virtualinvoke $r2.<twitter4j.internal.async.ExecuteThread: void setDaemon(boolean)>(1);

        $r5 = r0.<twitter4j.internal.async.DispatcherImpl: twitter4j.internal.async.ExecuteThread[] threads>;

        $r2 = $r5[$i0];

        virtualinvoke $r2.<twitter4j.internal.async.ExecuteThread: void start()>();

        $i0 = $i0 + 1;

        goto label1;
    }

    static boolean access$0(twitter4j.internal.async.DispatcherImpl)
    {
        twitter4j.internal.async.DispatcherImpl $r0;
        boolean z0;

        $r0 := @parameter0: twitter4j.internal.async.DispatcherImpl;

        z0 = $r0.<twitter4j.internal.async.DispatcherImpl: boolean active>;

        return z0;
    }

    public final void invokeLater(java.lang.Runnable)
    {
        java.lang.Throwable $r6, $r7, $r8;
        twitter4j.internal.async.DispatcherImpl r0;
        java.lang.Runnable $r1;
        java.util.List $r2, $r3;
        java.lang.Object $r4, $r5;

        r0 := @this: twitter4j.internal.async.DispatcherImpl;

        $r1 := @parameter0: java.lang.Runnable;

        entermonitor r0;

     label01:
        $r2 = r0.<twitter4j.internal.async.DispatcherImpl: java.util.List q>;

        entermonitor $r2;

     label02:
        $r3 = r0.<twitter4j.internal.async.DispatcherImpl: java.util.List q>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        exitmonitor $r2;

     label03:
        $r4 = r0.<twitter4j.internal.async.DispatcherImpl: java.lang.Object ticket>;

        entermonitor $r4;

     label04:
        $r5 = r0.<twitter4j.internal.async.DispatcherImpl: java.lang.Object ticket>;

        virtualinvoke $r5.<java.lang.Object: void notify()>();

        exitmonitor $r4;

     label05:
        exitmonitor r0;

        return;

     label06:
        $r6 := @caughtexception;

     label07:
        exitmonitor $r2;

        throw $r6;

     label08:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

     label09:
        $r8 := @caughtexception;

     label10:
        exitmonitor $r4;

        throw $r8;

     label11:
        nop;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    public final java.lang.Runnable poll()
    {
        java.lang.Throwable $r5, $r7, $r8;
        twitter4j.internal.async.DispatcherImpl r0;
        java.lang.Runnable $r4;
        java.util.List $r1, $r2;
        int $i0;
        java.lang.Object $r3, $r6;
        boolean $z0;

        r0 := @this: twitter4j.internal.async.DispatcherImpl;

     label01:
        $z0 = r0.<twitter4j.internal.async.DispatcherImpl: boolean active>;

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r1 = r0.<twitter4j.internal.async.DispatcherImpl: java.util.List q>;

        entermonitor $r1;

     label03:
        $r2 = r0.<twitter4j.internal.async.DispatcherImpl: java.util.List q>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label06;

        $r2 = r0.<twitter4j.internal.async.DispatcherImpl: java.util.List q>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(0);

        $r4 = (java.lang.Runnable) $r3;

        if $r4 == null goto label06;

        exitmonitor $r1;

     label04:
        return $r4;

     label05:
        $r5 := @caughtexception;

        exitmonitor $r1;

        throw $r5;

     label06:
        exitmonitor $r1;

        $r3 = r0.<twitter4j.internal.async.DispatcherImpl: java.lang.Object ticket>;

        entermonitor $r3;

     label07:
        $r6 = r0.<twitter4j.internal.async.DispatcherImpl: java.lang.Object ticket>;

     label08:
        virtualinvoke $r6.<java.lang.Object: void wait()>();

     label09:
        exitmonitor $r3;

     label10:
        goto label01;

     label11:
        $r7 := @caughtexception;

        exitmonitor $r3;

        throw $r7;

     label12:
        $r8 := @caughtexception;

        goto label09;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.InterruptedException from label08 to label09 with label12;
        catch java.lang.Throwable from label07 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public final void shutdown()
    {
        java.lang.Throwable $r5, $r6;
        twitter4j.internal.async.DispatcherImpl r0;
        twitter4j.internal.async.ExecuteThread $r1;
        twitter4j.internal.async.ExecuteThread[] $r2;
        int $i0, $i1;
        java.lang.Object $r3, $r4;
        boolean $z0;

        r0 := @this: twitter4j.internal.async.DispatcherImpl;

        $i1 = 0;

        entermonitor r0;

     label1:
        $z0 = r0.<twitter4j.internal.async.DispatcherImpl: boolean active>;

        if $z0 == 0 goto label4;

        r0.<twitter4j.internal.async.DispatcherImpl: boolean active> = 0;

        $r2 = r0.<twitter4j.internal.async.DispatcherImpl: twitter4j.internal.async.ExecuteThread[] threads>;

        $i0 = lengthof $r2;

     label2:
        if $i1 < $i0 goto label5;

        $r3 = r0.<twitter4j.internal.async.DispatcherImpl: java.lang.Object ticket>;

        entermonitor $r3;

     label3:
        $r4 = r0.<twitter4j.internal.async.DispatcherImpl: java.lang.Object ticket>;

        virtualinvoke $r4.<java.lang.Object: void notify()>();

        exitmonitor $r3;

     label4:
        exitmonitor r0;

        return;

     label5:
        $r1 = $r2[$i1];

        virtualinvoke $r1.<twitter4j.internal.async.ExecuteThread: void shutdown()>();

        $i1 = $i1 + 1;

        goto label2;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r3;

        throw $r5;

     label7:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label7;
    }
}
