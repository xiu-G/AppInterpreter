class twitter4j.conf.ConfigurationBase extends java.lang.Object implements twitter4j.conf.Configuration, java.io.Serializable
{
    public static final java.lang.String DALVIK;
    private static final long serialVersionUID;
    private boolean IS_DALVIK;
    private int asyncNumThreads;
    private java.lang.String clientURL;
    private java.lang.String clientVersion;
    private boolean debug;
    private int httpConnectionTimeout;
    private java.lang.String httpProxyHost;
    private java.lang.String httpProxyPassword;
    private int httpProxyPort;
    private java.lang.String httpProxyUser;
    private int httpReadTimeout;
    private int httpRetryCount;
    private int httpRetryIntervalMilliSecs;
    private int httpStreamingReadTimeout;
    private java.lang.String oAuthAccessToken;
    private java.lang.String oAuthAccessTokenSecret;
    private java.lang.String oAuthAccessTokenURL;
    private java.lang.String oAuthAuthenticationURL;
    private java.lang.String oAuthAuthorizationURL;
    private java.lang.String oAuthConsumerKey;
    private java.lang.String oAuthConsumerSecret;
    private java.lang.String oAuthRequestTokenURL;
    private java.lang.String password;
    java.util.Map requestHeaders;
    private java.lang.String restBaseURL;
    private java.lang.String searchBaseURL;
    private java.lang.String source;
    private java.lang.String streamBaseURL;
    private boolean useSSL;
    private java.lang.String user;
    private java.lang.String userAgent;

    protected void <init>()
    {
        java.lang.StringBuffer $r3, $r5;
        twitter4j.conf.ConfigurationBase r0;
        java.lang.Boolean $r4;
        java.lang.ClassNotFoundException r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setDebug(boolean)>(0);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setSource(java.lang.String)>("Twitter4J");

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setUser(java.lang.String)>(null);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setPassword(java.lang.String)>(null);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setUseSSL(boolean)>(1);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setHttpProxyHost(java.lang.String)>(null);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setHttpProxyUser(java.lang.String)>(null);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setHttpProxyPassword(java.lang.String)>(null);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setHttpProxyPort(int)>(-1);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setHttpConnectionTimeout(int)>(20000);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setHttpReadTimeout(int)>(120000);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setHttpStreamingReadTimeout(int)>(300000);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setHttpRetryCount(int)>(0);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setHttpRetryIntervalSecs(int)>(5);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthConsumerKey(java.lang.String)>(null);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthConsumerSecret(java.lang.String)>(null);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthAccessToken(java.lang.String)>(null);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthAccessTokenSecret(java.lang.String)>(null);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setAsyncNumThreads(int)>(1);

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_ClassNotFoundException_3()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setClientVersion(java.lang.String)>("2.1.0");

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("http://twitter4j.org/en/twitter4j-");

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_ClassNotFoundException_3()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("2.1.0");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".xml");

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setClientURL(java.lang.String)>($r2);

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("twitter4j http://twitter4j.org/ /");

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_ClassNotFoundException_3()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("2.1.0");

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setUserAgent(java.lang.String)>($r2);

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthRequestTokenURL(java.lang.String)>("http://twitter.com/oauth/request_token");

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthAuthorizationURL(java.lang.String)>("http://twitter.com/oauth/authorize");

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthAccessTokenURL(java.lang.String)>("http://twitter.com/oauth/access_token");

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthAuthenticationURL(java.lang.String)>("http://twitter.com/oauth/authenticate");

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setRestBaseURL(java.lang.String)>("http://api.twitter.com/1/");

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setSearchBaseURL(java.lang.String)>("http://search.twitter.com/");

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setStreamBaseURL(java.lang.String)>("http://stream.twitter.com/1/");

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("dalvik.system.VMRuntime");

     label2:
        $r2 = "true";

     label3:
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("twitter4j.dalvik", $r2);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        r0.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK> = $z0;

        return;

     label4:
        r1 := @caughtexception;

        $r2 = "false";

        goto label3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
    }

    static java.lang.String fixURL(boolean, java.lang.String)
    {
        java.lang.StringBuffer $r1, $r3;
        int $i0;
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("://");

        if -1 != $i0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("url should contain \'://\'");

        throw $r2;

     label2:
        $i0 = $i0 + 3;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("https://");

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label3:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("http://");

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    private void initRequestHeaders()
    {
        twitter4j.conf.ConfigurationBase r0;
        java.util.Map $r2;
        java.util.HashMap $r1;
        java.lang.String $r3;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders> = $r1;

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $r3 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getClientVersion()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X-Twitter-Client-Version", $r3);

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $r3 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getClientURL()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X-Twitter-Client-URL", $r3);

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $r3 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getSource()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X-Twitter-Client", $r3);

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        $r3 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getUserAgent()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("User-Agent", $r3);

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept-Encoding", "gzip");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Connection", "close");

        return;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.conf.ConfigurationBase r0, r2;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label01;

        return 1;

     label01:
        $z0 = $r1 instanceof twitter4j.conf.ConfigurationBase;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r2 = (twitter4j.conf.ConfigurationBase) $r1;

        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK>;

        $z1 = r2.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK>;

        if $z0 == $z1 goto label03;

        return 0;

     label03:
        $i0 = r0.<twitter4j.conf.ConfigurationBase: int asyncNumThreads>;

        $i1 = r2.<twitter4j.conf.ConfigurationBase: int asyncNumThreads>;

        if $i0 == $i1 goto label04;

        return 0;

     label04:
        $i0 = r0.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout>;

        $i1 = r2.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout>;

        if $i0 == $i1 goto label05;

        return 0;

     label05:
        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean debug>;

        $z1 = r2.<twitter4j.conf.ConfigurationBase: boolean debug>;

        if $z0 == $z1 goto label06;

        return 0;

     label06:
        $i0 = r0.<twitter4j.conf.ConfigurationBase: int httpProxyPort>;

        $i1 = r2.<twitter4j.conf.ConfigurationBase: int httpProxyPort>;

        if $i0 == $i1 goto label07;

        return 0;

     label07:
        $i0 = r0.<twitter4j.conf.ConfigurationBase: int httpReadTimeout>;

        $i1 = r2.<twitter4j.conf.ConfigurationBase: int httpReadTimeout>;

        if $i0 == $i1 goto label08;

        return 0;

     label08:
        $i0 = r0.<twitter4j.conf.ConfigurationBase: int httpRetryCount>;

        $i1 = r2.<twitter4j.conf.ConfigurationBase: int httpRetryCount>;

        if $i0 == $i1 goto label09;

        return 0;

     label09:
        $i0 = r0.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalMilliSecs>;

        $i1 = r2.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalMilliSecs>;

        if $i0 == $i1 goto label10;

        return 0;

     label10:
        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $z1 = r2.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        if $z0 == $z1 goto label11;

        return 0;

     label11:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        if $r3 == null goto label13;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label14;

     label12:
        return 0;

     label13:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        if $r3 != null goto label12;

     label14:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        if $r3 == null goto label16;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label17;

     label15:
        return 0;

     label16:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        if $r3 != null goto label15;

     label17:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        if $r3 == null goto label19;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label20;

     label18:
        return 0;

     label19:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        if $r3 != null goto label18;

     label20:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        if $r3 == null goto label22;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label23;

     label21:
        return 0;

     label22:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        if $r3 != null goto label21;

     label23:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        if $r3 == null goto label25;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label26;

     label24:
        return 0;

     label25:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        if $r3 != null goto label24;

     label26:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        if $r3 == null goto label28;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label29;

     label27:
        return 0;

     label28:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        if $r3 != null goto label27;

     label29:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        if $r3 == null goto label31;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label32;

     label30:
        return 0;

     label31:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        if $r3 != null goto label30;

     label32:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        if $r3 == null goto label34;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label35;

     label33:
        return 0;

     label34:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        if $r3 != null goto label33;

     label35:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        if $r3 == null goto label37;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label38;

     label36:
        return 0;

     label37:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        if $r3 != null goto label36;

     label38:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        if $r3 == null goto label40;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label41;

     label39:
        return 0;

     label40:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        if $r3 != null goto label39;

     label41:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        if $r3 == null goto label43;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label44;

     label42:
        return 0;

     label43:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        if $r3 != null goto label42;

     label44:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        if $r3 == null goto label46;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label47;

     label45:
        return 0;

     label46:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        if $r3 != null goto label45;

     label47:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        if $r3 == null goto label49;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label50;

     label48:
        return 0;

     label49:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        if $r3 != null goto label48;

     label50:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        if $r3 == null goto label52;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label53;

     label51:
        return 0;

     label52:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        if $r3 != null goto label51;

     label53:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        if $r3 == null goto label55;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label56;

     label54:
        return 0;

     label55:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        if $r3 != null goto label54;

     label56:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String searchBaseURL>;

        if $r3 == null goto label58;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String searchBaseURL>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String searchBaseURL>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label59;

     label57:
        return 0;

     label58:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String searchBaseURL>;

        if $r3 != null goto label57;

     label59:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String source>;

        if $r3 == null goto label61;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String source>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String source>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label62;

     label60:
        return 0;

     label61:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String source>;

        if $r3 != null goto label60;

     label62:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        if $r3 == null goto label64;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label65;

     label63:
        return 0;

     label64:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        if $r3 != null goto label63;

     label65:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        if $r3 == null goto label67;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label68;

     label66:
        return 0;

     label67:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        if $r3 != null goto label66;

     label68:
        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        if $r3 == null goto label70;

        $r3 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        $r4 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label71;

     label69:
        return 0;

     label70:
        $r3 = r2.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        if $r3 != null goto label69;

     label71:
        return 1;
    }

    public final int getAsyncNumThreads()
    {
        int i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = r0.<twitter4j.conf.ConfigurationBase: int asyncNumThreads>;

        return i0;
    }

    public final java.lang.String getClientURL()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        return r1;
    }

    public final java.lang.String getClientVersion()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        return r1;
    }

    public final int getHttpConnectionTimeout()
    {
        int i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = r0.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout>;

        return i0;
    }

    public final java.lang.String getHttpProxyHost()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        return r1;
    }

    public final java.lang.String getHttpProxyPassword()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        return r1;
    }

    public final int getHttpProxyPort()
    {
        int i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = r0.<twitter4j.conf.ConfigurationBase: int httpProxyPort>;

        return i0;
    }

    public final java.lang.String getHttpProxyUser()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        return r1;
    }

    public final int getHttpReadTimeout()
    {
        int i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = r0.<twitter4j.conf.ConfigurationBase: int httpReadTimeout>;

        return i0;
    }

    public final int getHttpRetryCount()
    {
        int i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = r0.<twitter4j.conf.ConfigurationBase: int httpRetryCount>;

        return i0;
    }

    public final int getHttpRetryIntervalSeconds()
    {
        int i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = r0.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalMilliSecs>;

        return i0;
    }

    public int getHttpStreamingReadTimeout()
    {
        int i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        i0 = r0.<twitter4j.conf.ConfigurationBase: int httpStreamingReadTimeout>;

        return i0;
    }

    public java.lang.String getOAuthAccessToken()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        return r1;
    }

    public java.lang.String getOAuthAccessTokenSecret()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        return r1;
    }

    public java.lang.String getOAuthAccessTokenURL()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        return r1;
    }

    public java.lang.String getOAuthAuthenticationURL()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        return r1;
    }

    public java.lang.String getOAuthAuthorizationURL()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        return r1;
    }

    public final java.lang.String getOAuthConsumerKey()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        return r1;
    }

    public final java.lang.String getOAuthConsumerSecret()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        return r1;
    }

    public java.lang.String getOAuthRequestTokenURL()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        return r1;
    }

    public final java.lang.String getPassword()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        return r1;
    }

    public java.util.Map getRequestHeaders()
    {
        twitter4j.conf.ConfigurationBase r0;
        java.util.Map r1;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.util.Map requestHeaders>;

        return r1;
    }

    public java.lang.String getRestBaseURL()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        return r1;
    }

    public java.lang.String getSearchBaseURL()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String searchBaseURL>;

        return r1;
    }

    public final java.lang.String getSource()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String source>;

        return r1;
    }

    public java.lang.String getStreamBaseURL()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        return r1;
    }

    public final java.lang.String getUser()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        return r1;
    }

    public final java.lang.String getUserAgent()
    {
        java.lang.String r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        r1 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        return r1;
    }

    public final boolean isDalvik()
    {
        twitter4j.conf.ConfigurationBase r0;
        boolean z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = r0.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK>;

        return z0;
    }

    public final boolean isDebugEnabled()
    {
        twitter4j.conf.ConfigurationBase r0;
        boolean z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        z0 = r0.<twitter4j.conf.ConfigurationBase: boolean debug>;

        return z0;
    }

    protected final void setAsyncNumThreads(int)
    {
        int $i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        r0.<twitter4j.conf.ConfigurationBase: int asyncNumThreads> = $i0;

        return;
    }

    protected final void setClientURL(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL> = $r1;

        specialinvoke r0.<twitter4j.conf.ConfigurationBase: void initRequestHeaders()>();

        return;
    }

    protected final void setClientVersion(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion> = $r1;

        specialinvoke r0.<twitter4j.conf.ConfigurationBase: void initRequestHeaders()>();

        return;
    }

    protected final void setDebug(boolean)
    {
        twitter4j.conf.ConfigurationBase r0;
        boolean $z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        r0.<twitter4j.conf.ConfigurationBase: boolean debug> = $z0;

        return;
    }

    protected final void setHttpConnectionTimeout(int)
    {
        int $i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        r0.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout> = $i0;

        return;
    }

    protected final void setHttpProxyHost(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost> = $r1;

        return;
    }

    protected final void setHttpProxyPassword(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword> = $r1;

        return;
    }

    protected final void setHttpProxyPort(int)
    {
        int $i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        r0.<twitter4j.conf.ConfigurationBase: int httpProxyPort> = $i0;

        return;
    }

    protected final void setHttpProxyUser(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser> = $r1;

        return;
    }

    protected final void setHttpReadTimeout(int)
    {
        int $i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        r0.<twitter4j.conf.ConfigurationBase: int httpReadTimeout> = $i0;

        return;
    }

    protected final void setHttpRetryCount(int)
    {
        int $i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        r0.<twitter4j.conf.ConfigurationBase: int httpRetryCount> = $i0;

        return;
    }

    protected final void setHttpRetryIntervalSecs(int)
    {
        int $i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        $i0 = $i0 * 1000;

        r0.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalMilliSecs> = $i0;

        return;
    }

    protected void setHttpStreamingReadTimeout(int)
    {
        int $i0;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $i0 := @parameter0: int;

        r0.<twitter4j.conf.ConfigurationBase: int httpStreamingReadTimeout> = $i0;

        return;
    }

    protected void setOAuthAccessToken(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken> = $r1;

        return;
    }

    protected void setOAuthAccessTokenSecret(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret> = $r1;

        return;
    }

    protected void setOAuthAccessTokenURL(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;
        boolean $z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>($z0, $r1);

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL> = $r1;

        return;
    }

    protected void setOAuthAuthenticationURL(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;
        boolean $z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>($z0, $r1);

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL> = $r1;

        return;
    }

    protected void setOAuthAuthorizationURL(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;
        boolean $z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>($z0, $r1);

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL> = $r1;

        return;
    }

    protected final void setOAuthConsumerKey(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey> = $r1;

        return;
    }

    protected final void setOAuthConsumerSecret(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret> = $r1;

        return;
    }

    protected void setOAuthRequestTokenURL(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;
        boolean $z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>($z0, $r1);

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL> = $r1;

        return;
    }

    protected final void setPassword(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String password> = $r1;

        return;
    }

    protected void setRestBaseURL(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;
        boolean $z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>($z0, $r1);

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL> = $r1;

        return;
    }

    protected void setSearchBaseURL(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>(0, $r1);

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String searchBaseURL> = $r1;

        return;
    }

    protected final void setSource(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String source> = $r1;

        specialinvoke r0.<twitter4j.conf.ConfigurationBase: void initRequestHeaders()>();

        return;
    }

    protected void setStreamBaseURL(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationBase: java.lang.String fixURL(boolean,java.lang.String)>(0, $r1);

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL> = $r1;

        return;
    }

    protected final void setUseSSL(boolean)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;
        boolean $z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $z0 := @parameter0: boolean;

        r0.<twitter4j.conf.ConfigurationBase: boolean useSSL> = $z0;

        $r1 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getRestBaseURL()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setRestBaseURL(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getSearchBaseURL()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setSearchBaseURL(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getStreamBaseURL()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setStreamBaseURL(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getOAuthRequestTokenURL()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthRequestTokenURL(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getOAuthAuthorizationURL()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthAuthorizationURL(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getOAuthAccessTokenURL()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthAccessTokenURL(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<twitter4j.conf.ConfigurationBase: java.lang.String getOAuthAuthenticationURL()>();

        virtualinvoke r0.<twitter4j.conf.ConfigurationBase: void setOAuthAuthenticationURL(java.lang.String)>($r1);

        return;
    }

    protected final void setUser(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String user> = $r1;

        return;
    }

    protected final void setUserAgent(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.conf.ConfigurationBase r0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 := @parameter0: java.lang.String;

        r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent> = $r1;

        specialinvoke r0.<twitter4j.conf.ConfigurationBase: void initRequestHeaders()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r1;
        twitter4j.conf.ConfigurationBase r0;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: twitter4j.conf.ConfigurationBase;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ConfigurationBase{debug=");

        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean debug>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", source=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String source>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", userAgent=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String userAgent>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", user=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String user>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", password=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String password>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", useSSL=");

        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean useSSL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", httpProxyHost=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyHost>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", httpProxyUser=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyUser>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", httpProxyPassword=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String httpProxyPassword>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", httpProxyPort=");

        $i0 = r0.<twitter4j.conf.ConfigurationBase: int httpProxyPort>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", httpConnectionTimeout=");

        $i0 = r0.<twitter4j.conf.ConfigurationBase: int httpConnectionTimeout>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", httpReadTimeout=");

        $i0 = r0.<twitter4j.conf.ConfigurationBase: int httpReadTimeout>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", httpRetryCount=");

        $i0 = r0.<twitter4j.conf.ConfigurationBase: int httpRetryCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", httpRetryIntervalMilliSecs=");

        $i0 = r0.<twitter4j.conf.ConfigurationBase: int httpRetryIntervalMilliSecs>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", oAuthConsumerKey=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerKey>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", oAuthConsumerSecret=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthConsumerSecret>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", oAuthAccessToken=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessToken>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", oAuthAccessTokenSecret=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenSecret>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", oAuthRequestTokenURL=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthRequestTokenURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", oAuthAuthorizationURL=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthorizationURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", oAuthAccessTokenURL=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAccessTokenURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", oAuthAuthenticationURL=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String oAuthAuthenticationURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", restBaseURL=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String restBaseURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", searchBaseURL=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String searchBaseURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", streamBaseURL=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String streamBaseURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", asyncNumThreads=");

        $i0 = r0.<twitter4j.conf.ConfigurationBase: int asyncNumThreads>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", clientVersion=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientVersion>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", clientURL=\'");

        $r2 = r0.<twitter4j.conf.ConfigurationBase: java.lang.String clientURL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", IS_DALVIK=");

        $z0 = r0.<twitter4j.conf.ConfigurationBase: boolean IS_DALVIK>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <twitter4j.conf.ConfigurationBase: long serialVersionUID> = -6610497517837844232L;

        <twitter4j.conf.ConfigurationBase: java.lang.String DALVIK> = "twitter4j.dalvik";

        return;
    }
}
