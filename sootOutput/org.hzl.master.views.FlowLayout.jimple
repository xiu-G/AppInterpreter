public class org.hzl.master.views.FlowLayout extends android.view.ViewGroup
{
    private int a;
    private int b;
    private int c;
    private boolean d;

    public void <init>(android.content.Context)
    {
        org.hzl.master.views.FlowLayout r0;
        android.content.Context $r1;

        r0 := @this: org.hzl.master.views.FlowLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<org.hzl.master.views.FlowLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        org.hzl.master.views.FlowLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: org.hzl.master.views.FlowLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<org.hzl.master.views.FlowLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        java.lang.Throwable $r5;
        android.content.Context $r1;
        android.content.res.TypedArray $r4;
        android.util.AttributeSet $r2;
        int[] $r3;
        int $i0;
        org.hzl.master.views.FlowLayout r0;
        boolean $z0;

        r0 := @this: org.hzl.master.views.FlowLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0);

        r0.<org.hzl.master.views.FlowLayout: int a> = 0;

        r0.<org.hzl.master.views.FlowLayout: int b> = 0;

        r0.<org.hzl.master.views.FlowLayout: int c> = 0;

        r0.<org.hzl.master.views.FlowLayout: boolean d> = 0;

        $r3 = <org.sohu.master.major.by: int[] c>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(null, $r3);

     label1:
        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        r0.<org.hzl.master.views.FlowLayout: int a> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, 0);

        r0.<org.hzl.master.views.FlowLayout: int b> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInteger(int,int)>(2, 0);

        r0.<org.hzl.master.views.FlowLayout: int c> = $i0;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 0);

        r0.<org.hzl.master.views.FlowLayout: boolean d> = $z0;

     label2:
        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static android.graphics.Paint a(int)
    {
        int $i0;
        android.graphics.Paint $r0;

        $i0 := @parameter0: int;

        $r0 = new android.graphics.Paint;

        specialinvoke $r0.<android.graphics.Paint: void <init>()>();

        virtualinvoke $r0.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke $r0.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke $r0.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        return $r0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        org.hzl.master.views.FlowLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        r0 := @this: org.hzl.master.views.FlowLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof org.hzl.master.views.FlowLayout$LayoutParams;

        return $z0;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        long $l0;
        int $i1;
        org.hzl.master.views.FlowLayout r0;
        android.view.View $r2;
        android.graphics.Canvas $r1;
        org.hzl.master.views.FlowLayout$LayoutParams $r7;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r6;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.Paint $r3, $r4, $r5;

        r0 := @this: org.hzl.master.views.FlowLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.view.View;

        $l0 := @parameter2: long;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r2, $l0);

        $z1 = r0.<org.hzl.master.views.FlowLayout: boolean d>;

        if $z1 == 0 goto label6;

        $r3 = staticinvoke <org.hzl.master.views.FlowLayout: android.graphics.Paint a(int)>(-256);

        $r4 = staticinvoke <org.hzl.master.views.FlowLayout: android.graphics.Paint a(int)>(-16711936);

        $r5 = staticinvoke <org.hzl.master.views.FlowLayout: android.graphics.Paint a(int)>(-65536);

        $r6 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (org.hzl.master.views.FlowLayout$LayoutParams) $r6;

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int c(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        if $i1 <= 0 goto label3;

        $i1 = virtualinvoke $r2.<android.view.View: int getRight()>();

        $f0 = (float) $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $f1 = (float) $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $f2 = (float) $i1;

        $f2 = $f2 / 2.0F;

        $f1 = $f2 + $f1;

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int c(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        $f2 = (float) $i1;

        $f2 = $f0 + $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f1, $r3);

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int c(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        $f2 = (float) $i1;

        $f2 = $f2 + $f0;

        $f2 = $f2 - 4.0F;

        $f3 = $f1 - 4.0F;

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int c(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        $f4 = (float) $i1;

        $f4 = $f0 + $f4;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f4, $f1, $r3);

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int c(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        $f2 = (float) $i1;

        $f2 = $f2 + $f0;

        $f2 = $f2 - 4.0F;

        $f3 = $f1 + 4.0F;

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int c(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        $f4 = (float) $i1;

        $f0 = $f0 + $f4;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f0, $f1, $r3);

     label1:
        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int b(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        if $i1 <= 0 goto label4;

        $i1 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $f0 = (float) $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $f1 = (float) $i1;

        $f1 = $f1 / 2.0F;

        $f0 = $f1 + $f0;

        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $f1 = (float) $i1;

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int b(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        $f2 = (float) $i1;

        $f2 = $f1 + $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f0, $f2, $r3);

        $f2 = $f0 - 4.0F;

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int b(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        $f3 = (float) $i1;

        $f3 = $f3 + $f1;

        $f3 = $f3 - 4.0F;

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int b(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        $f4 = (float) $i1;

        $f4 = $f1 + $f4;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f0, $f4, $r3);

        $f2 = $f0 + 4.0F;

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int b(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        $f3 = (float) $i1;

        $f3 = $f3 + $f1;

        $f3 = $f3 - 4.0F;

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int b(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        $f4 = (float) $i1;

        $f1 = $f1 + $f4;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f0, $f1, $r3);

     label2:
        $z1 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: boolean a(org.hzl.master.views.FlowLayout$LayoutParams)>($r7);

        if $z1 == 0 goto label6;

        $i1 = r0.<org.hzl.master.views.FlowLayout: int c>;

        if $i1 != 0 goto label5;

        $i1 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $f0 = (float) $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $f1 = (float) $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $f2 = (float) $i1;

        $f2 = $f2 / 2.0F;

        $f2 = $f1 + $f2;

        $f1 = $f2 - 6.0F;

        $f2 = $f2 + 6.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f0, $f2, $r5);

        return $z0;

     label3:
        $i1 = r0.<org.hzl.master.views.FlowLayout: int a>;

        if $i1 <= 0 goto label1;

        $i1 = virtualinvoke $r2.<android.view.View: int getRight()>();

        $f0 = (float) $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $f1 = (float) $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $f2 = (float) $i1;

        $f2 = $f2 / 2.0F;

        $f1 = $f1 + $f2;

        $i1 = r0.<org.hzl.master.views.FlowLayout: int a>;

        $f2 = (float) $i1;

        $f2 = $f0 + $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f1, $r4);

        $i1 = r0.<org.hzl.master.views.FlowLayout: int a>;

        $f2 = (float) $i1;

        $f2 = $f2 + $f0;

        $f2 = $f2 - 4.0F;

        $f3 = $f1 - 4.0F;

        $i1 = r0.<org.hzl.master.views.FlowLayout: int a>;

        $f4 = (float) $i1;

        $f4 = $f0 + $f4;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f4, $f1, $r4);

        $i1 = r0.<org.hzl.master.views.FlowLayout: int a>;

        $f2 = (float) $i1;

        $f2 = $f2 + $f0;

        $f2 = $f2 - 4.0F;

        $f3 = $f1 + 4.0F;

        $i1 = r0.<org.hzl.master.views.FlowLayout: int a>;

        $f4 = (float) $i1;

        $f0 = $f0 + $f4;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f0, $f1, $r4);

        goto label1;

     label4:
        $i1 = r0.<org.hzl.master.views.FlowLayout: int b>;

        if $i1 <= 0 goto label2;

        $i1 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $f0 = (float) $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $f1 = (float) $i1;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 + $f1;

        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $f1 = (float) $i1;

        $i1 = r0.<org.hzl.master.views.FlowLayout: int b>;

        $f2 = (float) $i1;

        $f2 = $f1 + $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f0, $f2, $r4);

        $f2 = $f0 - 4.0F;

        $i1 = r0.<org.hzl.master.views.FlowLayout: int b>;

        $f3 = (float) $i1;

        $f3 = $f3 + $f1;

        $f3 = $f3 - 4.0F;

        $i1 = r0.<org.hzl.master.views.FlowLayout: int b>;

        $f4 = (float) $i1;

        $f4 = $f1 + $f4;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f0, $f4, $r4);

        $f2 = $f0 + 4.0F;

        $i1 = r0.<org.hzl.master.views.FlowLayout: int b>;

        $f3 = (float) $i1;

        $f3 = $f3 + $f1;

        $f3 = $f3 - 4.0F;

        $i1 = r0.<org.hzl.master.views.FlowLayout: int b>;

        $f4 = (float) $i1;

        $f1 = $f1 + $f4;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f0, $f1, $r4);

        goto label2;

     label5:
        $i1 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $f0 = (float) $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $f1 = (float) $i1;

        $f1 = $f1 / 2.0F;

        $f2 = $f0 + $f1;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $f0 = (float) $i1;

        $f1 = $f2 - 6.0F;

        $f2 = 6.0F + $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f1, $f0, $f2, $f0, $r5);

     label6:
        return $z0;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        org.hzl.master.views.FlowLayout r0;
        org.hzl.master.views.FlowLayout$LayoutParams $r1;

        r0 := @this: org.hzl.master.views.FlowLayout;

        $r1 = new org.hzl.master.views.FlowLayout$LayoutParams;

        specialinvoke $r1.<org.hzl.master.views.FlowLayout$LayoutParams: void <init>()>();

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.content.Context $r3;
        android.util.AttributeSet $r1;
        org.hzl.master.views.FlowLayout r0;
        org.hzl.master.views.FlowLayout$LayoutParams $r2;

        r0 := @this: org.hzl.master.views.FlowLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new org.hzl.master.views.FlowLayout$LayoutParams;

        $r3 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: android.content.Context getContext()>();

        specialinvoke $r2.<org.hzl.master.views.FlowLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        org.hzl.master.views.FlowLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        org.hzl.master.views.FlowLayout$LayoutParams $r2;

        r0 := @this: org.hzl.master.views.FlowLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new org.hzl.master.views.FlowLayout$LayoutParams;

        specialinvoke $r2.<org.hzl.master.views.FlowLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.hzl.master.views.FlowLayout r0;
        android.view.View $r1;
        org.hzl.master.views.FlowLayout$LayoutParams $r3;
        boolean $z0;

        r0 := @this: org.hzl.master.views.FlowLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return;

     label2:
        $r1 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: android.view.View getChildAt(int)>($i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (org.hzl.master.views.FlowLayout$LayoutParams) $r2;

        $i2 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int d(org.hzl.master.views.FlowLayout$LayoutParams)>($r3);

        $i3 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int e(org.hzl.master.views.FlowLayout$LayoutParams)>($r3);

        $i4 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int d(org.hzl.master.views.FlowLayout$LayoutParams)>($r3);

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i4 = $i4 + $i5;

        $i5 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int e(org.hzl.master.views.FlowLayout$LayoutParams)>($r3);

        $i6 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i5 = $i5 + $i6;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i2, $i3, $i4, $i5);

        $i1 = $i1 + 1;

        goto label1;
    }

    protected void onMeasure(int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        org.hzl.master.views.FlowLayout r0;
        android.view.View $r1;
        org.hzl.master.views.FlowLayout$LayoutParams $r3;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r2;

        r0 := @this: org.hzl.master.views.FlowLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i4 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingRight()>();

        $i2 = $i2 - $i4;

        $i4 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingLeft()>();

        $i2 = $i2 - $i4;

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i3 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingTop()>();

        $i4 = $i4 - $i3;

        $i3 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingBottom()>();

        $i3 = $i4 - $i3;

        $i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i6 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i4 = r0.<org.hzl.master.views.FlowLayout: int c>;

        if $i4 != 0 goto label04;

        $i7 = $i5;

        $i8 = $i2;

     label01:
        $i9 = 0;

        $i10 = 0;

        $i11 = 0;

        $i12 = 0;

        $i4 = 0;

        $i13 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getChildCount()>();

        $i14 = 0;

        $i15 = 0;

     label02:
        if $i14 < $i13 goto label05;

        $i2 = r0.<org.hzl.master.views.FlowLayout: int c>;

        if $i2 != 0 goto label23;

        $i2 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingRight()>();

        $i2 = $i2 + $i3;

        $i2 = $i2 + $i4;

        $i4 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingBottom()>();

        $i3 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingTop()>();

        $i4 = $i4 + $i3;

        $i4 = $i15 + $i4;

     label03:
        $i3 = r0.<org.hzl.master.views.FlowLayout: int c>;

        if $i3 != 0 goto label24;

        $i0 = staticinvoke <org.hzl.master.views.FlowLayout: int resolveSize(int,int)>($i2, $i0);

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout: int resolveSize(int,int)>($i4, $i1);

        virtualinvoke r0.<org.hzl.master.views.FlowLayout: void setMeasuredDimension(int,int)>($i0, $i1);

        return;

     label04:
        $i7 = $i6;

        $i8 = $i3;

        goto label01;

     label05:
        $r1 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: android.view.View getChildAt(int)>($i14);

        $i16 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i16 == 8 goto label15;

        if $i5 != 1073741824 goto label16;

        $i15 = -2147483648;

     label06:
        $i15 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, $i15);

        if $i6 != 1073741824 goto label17;

        $i16 = -2147483648;

     label07:
        $i16 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, $i16);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i15, $i16);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (org.hzl.master.views.FlowLayout$LayoutParams) $r2;

        $z0 = virtualinvoke $r3.<org.hzl.master.views.FlowLayout$LayoutParams: boolean a()>();

        if $z0 == 0 goto label18;

        $i17 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int c(org.hzl.master.views.FlowLayout$LayoutParams)>($r3);

     label08:
        $z0 = virtualinvoke $r3.<org.hzl.master.views.FlowLayout$LayoutParams: boolean b()>();

        if $z0 == 0 goto label19;

        $i16 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: int b(org.hzl.master.views.FlowLayout$LayoutParams)>($r3);

     label09:
        $i18 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i19 = $i18;

        $i15 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i20 = r0.<org.hzl.master.views.FlowLayout: int c>;

        if $i20 != 0 goto label20;

        $i20 = $i16;

        $i16 = $i18;

        $i19 = $i15;

     label10:
        $i18 = $i11 + $i16;

        $i11 = $i18 + $i17;

        $z0 = staticinvoke <org.hzl.master.views.FlowLayout$LayoutParams: boolean a(org.hzl.master.views.FlowLayout$LayoutParams)>($r3);

        if $z0 != 0 goto label21;

        if $i7 == 0 goto label11;

        if $i18 > $i8 goto label21;

     label11:
        $z0 = 0;

     label12:
        if $z0 == 0 goto label25;

        $i12 = $i12 + $i9;

        $i10 = $i19;

        $i9 = $i19 + $i20;

        $i11 = $i17 + $i16;

        $i17 = $i16;

     label13:
        $i20 = $i20 + $i19;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i20);

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i19);

        $i10 = $i19;

        $i20 = r0.<org.hzl.master.views.FlowLayout: int c>;

        if $i20 != 0 goto label22;

        $i15 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingLeft()>();

        $i15 = $i15 + $i17;

        $i16 = $i15 - $i16;

        $i15 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingTop()>();

        $i15 = $i15 + $i12;

     label14:
        virtualinvoke $r3.<org.hzl.master.views.FlowLayout$LayoutParams: void a(int,int)>($i16, $i15);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i17);

        $i15 = $i12 + $i19;

     label15:
        $i14 = $i14 + 1;

        goto label02;

     label16:
        $i15 = $i5;

        goto label06;

     label17:
        $i16 = $i6;

        goto label07;

     label18:
        $i17 = r0.<org.hzl.master.views.FlowLayout: int a>;

        goto label08;

     label19:
        $i16 = r0.<org.hzl.master.views.FlowLayout: int b>;

        goto label09;

     label20:
        $i20 = $i17;

        $i17 = $i16;

        $i16 = $i15;

        goto label10;

     label21:
        $z0 = 1;

        goto label12;

     label22:
        $i16 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingLeft()>();

        $i16 = $i16 + $i12;

        $i20 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingTop()>();

        $i20 = $i20 + $i17;

        $i15 = $i20 - $i15;

        goto label14;

     label23:
        $i2 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingBottom()>();

        $i3 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingTop()>();

        $i2 = $i2 + $i3;

        $i2 = $i2 + $i4;

        $i4 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<org.hzl.master.views.FlowLayout: int getPaddingRight()>();

        $i4 = $i4 + $i3;

        $i4 = $i15 + $i4;

        goto label03;

     label24:
        $i0 = staticinvoke <org.hzl.master.views.FlowLayout: int resolveSize(int,int)>($i4, $i0);

        $i1 = staticinvoke <org.hzl.master.views.FlowLayout: int resolveSize(int,int)>($i2, $i1);

        virtualinvoke r0.<org.hzl.master.views.FlowLayout: void setMeasuredDimension(int,int)>($i0, $i1);

        return;

     label25:
        $i17 = $i18;

        goto label13;
    }
}
