public class cn.trinea.android.common.service.impl.ImageSDCardCache extends cn.trinea.android.common.service.impl.PreloadDataCache
{
    public static final java.lang.String DEFAULT_CACHE_FOLDER;
    public static final int DEFAULT_MAX_SIZE;
    private static final java.lang.String TAG;
    private static final int WHAT_GET_IMAGE_FAILED;
    private static final int WHAT_GET_IMAGE_SUCCESS;
    private static final long serialVersionUID;
    private java.lang.String cacheFolder;
    private cn.trinea.android.common.service.FileNameRule fileNameRule;
    private transient android.os.Handler handler;
    private int httpReadTimeOut;
    private boolean isOpenWaitingQueue;
    private cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener onImageSDCallbackListener;
    private java.util.Map requestProperties;
    private transient java.util.concurrent.ExecutorService threadPool;
    private transient java.util.Map viewMap;
    private transient java.util.Map viewSetMap;

    static void <clinit>()
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        java.io.File $r1;

        <cn.trinea.android.common.service.impl.ImageSDCardCache: long serialVersionUID> = 1L;

        <cn.trinea.android.common.service.impl.ImageSDCardCache: int WHAT_GET_IMAGE_SUCCESS> = 1;

        <cn.trinea.android.common.service.impl.ImageSDCardCache: int WHAT_GET_IMAGE_FAILED> = 2;

        <cn.trinea.android.common.service.impl.ImageSDCardCache: java.lang.String TAG> = "ImageSDCardCache";

        <cn.trinea.android.common.service.impl.ImageSDCardCache: int DEFAULT_MAX_SIZE> = 0;

        $i0 = staticinvoke <cn.trinea.android.common.service.impl.ImageSDCardCache: int getDefaultMaxSize()>();

        <cn.trinea.android.common.service.impl.ImageSDCardCache: int DEFAULT_MAX_SIZE> = $i0;

        $r0 = new java.lang.StringBuilder;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = <java.io.File: java.lang.String separator>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trinea");

        $r2 = <java.io.File: java.lang.String separator>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AndroidCommon");

        $r2 = <java.io.File: java.lang.String separator>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImageSDCardCache");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        <cn.trinea.android.common.service.impl.ImageSDCardCache: java.lang.String DEFAULT_CACHE_FOLDER> = $r2;

        return;
    }

    public void <init>()
    {
        int $i0, $i1;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $i0 = <cn.trinea.android.common.service.impl.ImageSDCardCache: int DEFAULT_MAX_SIZE>;

        $i1 = <cn.trinea.android.common.service.impl.PreloadDataCache: int DEFAULT_THREAD_POOL_SIZE>;

        specialinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: void <init>(int,int)>($i0, $i1);

        return;
    }

    public void <init>(int)
    {
        int $i0, $i1;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $i0 := @parameter0: int;

        $i1 = <cn.trinea.android.common.service.impl.PreloadDataCache: int DEFAULT_THREAD_POOL_SIZE>;

        specialinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: void <init>(int,int)>($i0, $i1);

        return;
    }

    public void <init>(int, int)
    {
        cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener $r3;
        cn.trinea.android.common.service.impl.FileNameRuleImageUrl $r5;
        java.util.concurrent.ConcurrentHashMap $r7;
        java.util.HashMap $r8;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        cn.trinea.android.common.service.impl.ImageSDCardCache$MyHandler $r9;
        android.os.Looper $r4;
        int $i0, $i1;
        java.lang.String $r1;
        cn.trinea.android.common.service.impl.RemoveTypeUsedCountSmall $r6;
        java.util.concurrent.ExecutorService $r2;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<cn.trinea.android.common.service.impl.PreloadDataCache: void <init>(int,int)>($i0, $i1);

        $r1 = <cn.trinea.android.common.service.impl.ImageSDCardCache: java.lang.String DEFAULT_CACHE_FOLDER>;

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.lang.String cacheFolder> = $r1;

        $r5 = new cn.trinea.android.common.service.impl.FileNameRuleImageUrl;

        specialinvoke $r5.<cn.trinea.android.common.service.impl.FileNameRuleImageUrl: void <init>()>();

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.FileNameRule fileNameRule> = $r5;

        $i0 = -1;

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: int httpReadTimeOut> = $i0;

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: boolean isOpenWaitingQueue> = 1;

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map requestProperties> = null;

        $i0 = <cn.trinea.android.common.util.SystemUtils: int DEFAULT_THREAD_POOL_SIZE>;

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>($i0);

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.concurrent.ExecutorService threadPool> = $r2;

        $r3 = virtualinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener getDefaultOnGetImageListener()>();

        specialinvoke r0.<cn.trinea.android.common.service.impl.PreloadDataCache: void setOnGetDataListener(cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener)>($r3);

        $r6 = new cn.trinea.android.common.service.impl.RemoveTypeUsedCountSmall;

        specialinvoke $r6.<cn.trinea.android.common.service.impl.RemoveTypeUsedCountSmall: void <init>()>();

        specialinvoke r0.<cn.trinea.android.common.service.impl.PreloadDataCache: void setCacheFullRemoveType(cn.trinea.android.common.service.CacheFullRemoveType)>($r6);

        $r7 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r7.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map viewMap> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map viewSetMap> = $r8;

        $r9 = new cn.trinea.android.common.service.impl.ImageSDCardCache$MyHandler;

        specialinvoke $r9.<cn.trinea.android.common.service.impl.ImageSDCardCache$MyHandler: void <init>(cn.trinea.android.common.service.impl.ImageSDCardCache,cn.trinea.android.common.service.impl.ImageSDCardCache$MyHandler)>(r0, null);

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: android.os.Handler handler> = $r9;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r4 != null goto label1;

        staticinvoke <android.os.Looper: void prepare()>();

     label1:
        return;
    }

    static cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener access$1(cn.trinea.android.common.service.impl.ImageSDCardCache)
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache $r0;
        cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener r1;

        $r0 := @parameter0: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = $r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener onImageSDCallbackListener>;

        return r1;
    }

    static boolean access$2(cn.trinea.android.common.service.impl.ImageSDCardCache)
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache $r0;
        boolean z0;

        $r0 := @parameter0: cn.trinea.android.common.service.impl.ImageSDCardCache;

        z0 = $r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: boolean isOpenWaitingQueue>;

        return z0;
    }

    static java.util.Map access$3(cn.trinea.android.common.service.impl.ImageSDCardCache)
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache $r0;
        java.util.Map r1;

        $r0 := @parameter0: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = $r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map viewSetMap>;

        return r1;
    }

    static java.util.Map access$4(cn.trinea.android.common.service.impl.ImageSDCardCache)
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache $r0;
        java.util.Map r1;

        $r0 := @parameter0: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = $r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map viewMap>;

        return r1;
    }

    static android.os.Handler access$5(cn.trinea.android.common.service.impl.ImageSDCardCache)
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache $r0;
        android.os.Handler r1;

        $r0 := @parameter0: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = $r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: android.os.Handler handler>;

        return r1;
    }

    static int access$6(cn.trinea.android.common.service.impl.ImageSDCardCache)
    {
        int i0;
        cn.trinea.android.common.service.impl.ImageSDCardCache $r0;

        $r0 := @parameter0: cn.trinea.android.common.service.impl.ImageSDCardCache;

        i0 = $r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: int httpReadTimeOut>;

        return i0;
    }

    static java.util.Map access$7(cn.trinea.android.common.service.impl.ImageSDCardCache)
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache $r0;
        java.util.Map r1;

        $r0 := @parameter0: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = $r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map requestProperties>;

        return r1;
    }

    static java.lang.String access$8(cn.trinea.android.common.service.impl.ImageSDCardCache)
    {
        java.lang.String r1;
        cn.trinea.android.common.service.impl.ImageSDCardCache $r0;

        $r0 := @parameter0: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = $r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.lang.String cacheFolder>;

        return r1;
    }

    static cn.trinea.android.common.service.FileNameRule access$9(cn.trinea.android.common.service.impl.ImageSDCardCache)
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache $r0;
        cn.trinea.android.common.service.FileNameRule r1;

        $r0 := @parameter0: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = $r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.FileNameRule fileNameRule>;

        return r1;
    }

    private boolean deleteFile(java.lang.String)
    {
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        boolean $z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <cn.trinea.android.common.util.FileUtils: boolean deleteFile(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("delete file fail, path is ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ImageSDCardCache", $r1);

        return 0;

     label1:
        return 1;
    }

    static int getDefaultMaxSize()
    {
        byte $b1;
        java.lang.Runtime $r0;
        int $i2;
        long $l0;

        $r0 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l0 = virtualinvoke $r0.<java.lang.Runtime: long maxMemory()>();

        $b1 = $l0 cmp 1073741824L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        return 256;

     label1:
        $l0 = $l0 / 1048576L;

        $i2 = (int) $l0;

        if $i2 > 8 goto label2;

        return 8;

     label2:
        return $i2;
    }

    public static boolean loadDataFromDb(android.content.Context, cn.trinea.android.common.service.impl.ImageSDCardCache, java.lang.String)
    {
        android.content.Context $r0;
        cn.trinea.android.common.dao.impl.ImageSDCardCacheDaoImpl $r4;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        cn.trinea.android.common.service.impl.ImageSDCardCache $r1;
        cn.trinea.android.common.util.SqliteUtils $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r2 := @parameter2: java.lang.String;

        if $r0 == null goto label1;

        if $r1 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The context and cache both can not be null.");

        throw $r3;

     label2:
        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The tag can not be null or empty.");

        throw $r3;

     label3:
        $r4 = new cn.trinea.android.common.dao.impl.ImageSDCardCacheDaoImpl;

        $r5 = staticinvoke <cn.trinea.android.common.util.SqliteUtils: cn.trinea.android.common.util.SqliteUtils getInstance(android.content.Context)>($r0);

        specialinvoke $r4.<cn.trinea.android.common.dao.impl.ImageSDCardCacheDaoImpl: void <init>(cn.trinea.android.common.util.SqliteUtils)>($r5);

        $z0 = virtualinvoke $r4.<cn.trinea.android.common.dao.impl.ImageSDCardCacheDaoImpl: boolean putIntoImageSDCardCache(cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String)>($r1, $r2);

        return $z0;
    }

    public static boolean saveDataToDb(android.content.Context, cn.trinea.android.common.service.impl.ImageSDCardCache, java.lang.String)
    {
        android.content.Context $r0;
        cn.trinea.android.common.dao.impl.ImageSDCardCacheDaoImpl $r4;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        cn.trinea.android.common.service.impl.ImageSDCardCache $r1;
        cn.trinea.android.common.util.SqliteUtils $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r2 := @parameter2: java.lang.String;

        if $r0 == null goto label1;

        if $r1 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The context and cache both can not be null.");

        throw $r3;

     label2:
        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The tag can not be null or empty.");

        throw $r3;

     label3:
        $r4 = new cn.trinea.android.common.dao.impl.ImageSDCardCacheDaoImpl;

        $r5 = staticinvoke <cn.trinea.android.common.util.SqliteUtils: cn.trinea.android.common.util.SqliteUtils getInstance(android.content.Context)>($r0);

        specialinvoke $r4.<cn.trinea.android.common.dao.impl.ImageSDCardCacheDaoImpl: void <init>(cn.trinea.android.common.util.SqliteUtils)>($r5);

        $z0 = virtualinvoke $r4.<cn.trinea.android.common.dao.impl.ImageSDCardCacheDaoImpl: boolean deleteAndInsertImageSDCardCache(cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String)>($r1, $r2);

        return $z0;
    }

    private void startGetImageThread(java.lang.String, java.util.List)
    {
        java.util.List $r2;
        cn.trinea.android.common.service.impl.ImageSDCardCache$1 $r4;
        java.lang.String $r1;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.List;

        $r3 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.concurrent.ExecutorService threadPool>;

        $r4 = new cn.trinea.android.common.service.impl.ImageSDCardCache$1;

        specialinvoke $r4.<cn.trinea.android.common.service.impl.ImageSDCardCache$1: void <init>(cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String,java.util.List)>(r0, $r1, $r2);

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r4);

        return;
    }

    public void clear()
    {
        java.util.Iterator $r2;
        java.util.Collection $r1;
        java.lang.Object $r3;
        cn.trinea.android.common.entity.CacheObject $r4;
        java.lang.String $r5;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        boolean $z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 = virtualinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Collection values()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        specialinvoke r0.<cn.trinea.android.common.service.impl.PreloadDataCache: void clear()>();

        return;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (cn.trinea.android.common.entity.CacheObject) $r3;

        if $r4 == null goto label1;

        $r3 = virtualinvoke $r4.<cn.trinea.android.common.entity.CacheObject: java.lang.Object getData()>();

        $r5 = (java.lang.String) $r3;

        specialinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: boolean deleteFile(java.lang.String)>($r5);

        goto label1;
    }

    public void deleteUnusedFiles()
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        cn.trinea.android.common.service.impl.ImageSDCardCache$2 $r5;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        java.util.HashSet $r1;
        int $i0, $i1;
        java.lang.Object $r6;
        cn.trinea.android.common.entity.CacheObject $r7;
        java.lang.String $r8;
        java.util.concurrent.ExecutorService $r4;
        boolean $z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $i0 = virtualinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: int getSize()>();

        $i1 = $i0;

        $r1 = new java.util.HashSet;

        if $i0 <= 16 goto label3;

     label1:
        specialinvoke $r1.<java.util.HashSet: void <init>(int)>($i1);

        $r2 = virtualinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        $r4 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.concurrent.ExecutorService threadPool>;

        $r5 = new cn.trinea.android.common.service.impl.ImageSDCardCache$2;

        specialinvoke $r5.<cn.trinea.android.common.service.impl.ImageSDCardCache$2: void <init>(cn.trinea.android.common.service.impl.ImageSDCardCache,java.util.HashSet)>(r0, $r1);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r5);

        return;

     label3:
        $i1 = 16;

        goto label1;

     label4:
        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (cn.trinea.android.common.entity.CacheObject) $r6;

        if $r7 == null goto label2;

        $r6 = virtualinvoke $r7.<cn.trinea.android.common.entity.CacheObject: java.lang.Object getData()>();

        $r8 = (java.lang.String) $r6;

        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>($r8);

        goto label2;
    }

    protected cn.trinea.android.common.entity.CacheObject fullRemoveOne()
    {
        java.lang.Object $r2;
        cn.trinea.android.common.entity.CacheObject $r1;
        java.lang.String $r3;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 = specialinvoke r0.<cn.trinea.android.common.service.impl.PreloadDataCache: cn.trinea.android.common.entity.CacheObject fullRemoveOne()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<cn.trinea.android.common.entity.CacheObject: java.lang.Object getData()>();

        $r3 = (java.lang.String) $r2;

        specialinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: boolean deleteFile(java.lang.String)>($r3);

     label1:
        return $r1;
    }

    public boolean get(java.lang.String, android.view.View)
    {
        android.view.View $r2;
        java.lang.String $r1;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        boolean $z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.view.View;

        $z0 = virtualinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: boolean get(java.lang.String,java.util.List,android.view.View)>($r1, null, $r2);

        return $z0;
    }

    public boolean get(java.lang.String, java.util.List, android.view.View)
    {
        java.lang.Throwable $r11;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener $r4;
        java.util.HashSet $r10;
        java.util.List $r2;
        java.util.Map $r8, $r9;
        android.view.View $r3;
        java.lang.Object $r6;
        java.lang.String $r1, $r7;
        cn.trinea.android.common.entity.CacheObject $r5;
        boolean $z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: android.view.View;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $r4 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener onImageSDCallbackListener>;

        if $r4 == null goto label02;

        $r4 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener onImageSDCallbackListener>;

        interfaceinvoke $r4.<cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener: void onPreGet(java.lang.String,android.view.View)>($r1, $r3);

     label02:
        $r5 = virtualinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.entity.CacheObject getFromCache(java.lang.Object,java.util.List)>($r1, $r2);

        if $r5 == null goto label05;

        $r6 = virtualinvoke $r5.<cn.trinea.android.common.entity.CacheObject: java.lang.Object getData()>();

        $r7 = (java.lang.String) $r6;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r7);

        if $z0 != 0 goto label04;

        $z0 = staticinvoke <cn.trinea.android.common.util.FileUtils: boolean isFileExist(java.lang.String)>($r7);

        if $z0 == 0 goto label04;

        $r4 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener onImageSDCallbackListener>;

        if $r4 == null goto label03;

        $r4 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener onImageSDCallbackListener>;

        interfaceinvoke $r4.<cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener: void onGetSuccess(java.lang.String,java.lang.String,android.view.View,boolean)>($r1, $r7, $r3, 1);

     label03:
        return 1;

     label04:
        virtualinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.entity.CacheObject remove(java.lang.String)>($r1);

     label05:
        $z0 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: boolean isOpenWaitingQueue>;

        if $z0 == 0 goto label10;

        $r8 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map viewSetMap>;

        entermonitor $r8;

     label06:
        $r9 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map viewSetMap>;

        $r6 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r10 = (java.util.HashSet) $r6;

        if $r10 != null goto label07;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        $r9 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map viewSetMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r10);

     label07:
        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        exitmonitor $r8;

     label08:
        $z0 = virtualinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: boolean isExistGettingDataThread(java.lang.Object)>($r1);

        if $z0 == 0 goto label11;

        return 0;

     label09:
        $r11 := @caughtexception;

        exitmonitor $r8;

        throw $r11;

     label10:
        $r8 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map viewMap>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        goto label08;

     label11:
        specialinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: void startGetImageThread(java.lang.String,java.util.List)>($r1, $r2);

        return 0;

        catch java.lang.Throwable from label06 to label08 with label09;
    }

    public java.lang.String getCacheFolder()
    {
        java.lang.String r1;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.lang.String cacheFolder>;

        return r1;
    }

    public cn.trinea.android.common.service.impl.PreloadDataCache$OnGetDataListener getDefaultOnGetImageListener()
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache$3 $r1;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 = new cn.trinea.android.common.service.impl.ImageSDCardCache$3;

        specialinvoke $r1.<cn.trinea.android.common.service.impl.ImageSDCardCache$3: void <init>(cn.trinea.android.common.service.impl.ImageSDCardCache)>(r0);

        return $r1;
    }

    public cn.trinea.android.common.service.FileNameRule getFileNameRule()
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        cn.trinea.android.common.service.FileNameRule r1;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.FileNameRule fileNameRule>;

        return r1;
    }

    public int getHttpReadTimeOut()
    {
        int i0;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        i0 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: int httpReadTimeOut>;

        return i0;
    }

    public cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener getOnImageSDCallbackListener()
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener r1;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener onImageSDCallbackListener>;

        return r1;
    }

    public java.util.Map getRequestProperties()
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        java.util.Map r1;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        r1 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map requestProperties>;

        return r1;
    }

    public void initData(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        java.lang.String $r2;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        staticinvoke <cn.trinea.android.common.service.impl.ImageSDCardCache: boolean loadDataFromDb(android.content.Context,cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String)>($r1, r0, $r2);

        virtualinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: void deleteUnusedFiles()>();

        return;
    }

    public boolean isOpenWaitingQueue()
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        boolean z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        z0 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: boolean isOpenWaitingQueue>;

        return z0;
    }

    public boolean loadDataFromDb(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        java.lang.String $r2;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        boolean $z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.service.impl.ImageSDCardCache: boolean loadDataFromDb(android.content.Context,cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String)>($r1, r0, $r2);

        return $z0;
    }

    public volatile cn.trinea.android.common.entity.CacheObject remove(java.lang.Object)
    {
        java.lang.Object $r2;
        cn.trinea.android.common.entity.CacheObject $r1;
        java.lang.String $r3;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r2 := @parameter0: java.lang.Object;

        $r3 = (java.lang.String) $r2;

        $r1 = virtualinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.entity.CacheObject remove(java.lang.String)>($r3);

        return $r1;
    }

    public cn.trinea.android.common.entity.CacheObject remove(java.lang.String)
    {
        java.lang.Object $r3;
        java.lang.String $r1;
        cn.trinea.android.common.entity.CacheObject $r2;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<cn.trinea.android.common.service.impl.PreloadDataCache: cn.trinea.android.common.entity.CacheObject remove(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<cn.trinea.android.common.entity.CacheObject: java.lang.Object getData()>();

        $r1 = (java.lang.String) $r3;

        specialinvoke r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: boolean deleteFile(java.lang.String)>($r1);

     label1:
        return $r2;
    }

    public boolean saveDataToDb(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        java.lang.String $r2;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        boolean $z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.service.impl.ImageSDCardCache: boolean saveDataToDb(android.content.Context,cn.trinea.android.common.service.impl.ImageSDCardCache,java.lang.String)>($r1, r0, $r2);

        return $z0;
    }

    public void setCacheFolder(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        boolean $z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The cacheFolder of cache can not be null.");

        throw $r2;

     label1:
        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.lang.String cacheFolder> = $r1;

        return;
    }

    public void setFileNameRule(cn.trinea.android.common.service.FileNameRule)
    {
        java.lang.IllegalArgumentException $r2;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        cn.trinea.android.common.service.FileNameRule $r1;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: cn.trinea.android.common.service.FileNameRule;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The fileNameRule of cache can not be null.");

        throw $r2;

     label1:
        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.FileNameRule fileNameRule> = $r1;

        return;
    }

    public void setHttpReadTimeOut(int)
    {
        int $i0;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $i0 := @parameter0: int;

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: int httpReadTimeOut> = $i0;

        return;
    }

    public void setOnImageSDCallbackListener(cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener)
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener $r1;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener;

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: cn.trinea.android.common.service.impl.ImageSDCardCache$OnImageSDCallbackListener onImageSDCallbackListener> = $r1;

        return;
    }

    public void setOpenWaitingQueue(boolean)
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        boolean $z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $z0 := @parameter0: boolean;

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: boolean isOpenWaitingQueue> = $z0;

        return;
    }

    public void setRequestProperties(java.util.Map)
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        java.util.Map $r1;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: java.util.Map;

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map requestProperties> = $r1;

        return;
    }

    public void setRequestProperty(java.lang.String, java.lang.String)
    {
        java.util.Map $r3;
        java.util.HashMap $r4;
        java.lang.String $r1, $r2;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        boolean $z0;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map requestProperties>;

        if $r3 != null goto label2;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map requestProperties> = $r4;

     label2:
        $r3 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.Map requestProperties>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    protected void shutdown()
    {
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r1 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.concurrent.ExecutorService threadPool>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void shutdown()>();

        specialinvoke r0.<cn.trinea.android.common.service.impl.PreloadDataCache: void shutdown()>();

        return;
    }

    public java.util.List shutdownNow()
    {
        java.util.List $r1;
        cn.trinea.android.common.service.impl.ImageSDCardCache r0;
        java.util.concurrent.ExecutorService $r2;

        r0 := @this: cn.trinea.android.common.service.impl.ImageSDCardCache;

        $r2 = r0.<cn.trinea.android.common.service.impl.ImageSDCardCache: java.util.concurrent.ExecutorService threadPool>;

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

        $r1 = specialinvoke r0.<cn.trinea.android.common.service.impl.PreloadDataCache: java.util.List shutdownNow()>();

        return $r1;
    }
}
