public class com.tencent.connect.share.a extends java.lang.Object
{

    public void <init>()
    {
        com.tencent.connect.share.a r0;

        r0 := @this: com.tencent.connect.share.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final int a(android.graphics.BitmapFactory$Options, int, int)
    {
        int $i0, $i1;
        android.graphics.BitmapFactory$Options $r0;

        $r0 := @parameter0: android.graphics.BitmapFactory$Options;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = staticinvoke <com.tencent.connect.share.a: int b(android.graphics.BitmapFactory$Options,int,int)>($r0, -1, $i1);

        if $i0 > 8 goto label2;

        $i1 = 1;

     label1:
        if $i1 >= $i0 goto label3;

        $i1 = $i1 << 1;

        goto label1;

     label2:
        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        $i0 = $i0 * 8;

        return $i0;

     label3:
        return $i1;
    }

    private static android.graphics.Bitmap a(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.graphics.Matrix $r1;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i2 = $i1;

        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        if $i1 <= $i3 goto label2;

     label1:
        $f0 = (float) $i0;

        $f1 = (float) $i2;

        $f0 = $f0 / $f1;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postScale(float,float)>($f0, $f0);

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r0, 0, 0, $i0, $i1, $r1, 1);

        return $r0;

     label2:
        $i2 = $i3;

        goto label1;
    }

    public static final android.graphics.Bitmap a(java.lang.String, int)
    {
        android.graphics.Bitmap$Config $r2;
        android.graphics.Bitmap $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0;
        android.graphics.BitmapFactory$Options $r1, $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r4 = new android.graphics.BitmapFactory$Options;

        $r1 = $r4;

        specialinvoke $r4.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r1.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, $r1);

        $i1 = $r1.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i2 = $r1.<android.graphics.BitmapFactory$Options: int outHeight>;

        $z0 = $r1.<android.graphics.BitmapFactory$Options: boolean mCancel>;

        if $z0 != 0 goto label02;

        $i3 = $r1.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i3 == -1 goto label02;

        $i3 = $r1.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i3 != -1 goto label03;

     label02:
        return null;

     label03:
        if $i1 <= $i2 goto label06;

     label04:
        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r2;

        if $i1 <= $i0 goto label05;

        $i1 = $i0 * $i0;

        $i1 = staticinvoke <com.tencent.connect.share.a: int a(android.graphics.BitmapFactory$Options,int,int)>($r1, -1, $i1);

        $r1.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i1;

     label05:
        $r1.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, $r1);

        if $r3 != null goto label07;

        return null;

     label06:
        $i1 = $i2;

        goto label04;

     label07:
        $i1 = $r1.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i2 = $r1.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i1 <= $i2 goto label09;

     label08:
        if $i1 <= $i0 goto label10;

        $r3 = staticinvoke <com.tencent.connect.share.a: android.graphics.Bitmap a(android.graphics.Bitmap,int)>($r3, $i0);

        return $r3;

     label09:
        $i1 = $i2;

        goto label08;

     label10:
        return $r3;
    }

    protected static final java.lang.String a(android.graphics.Bitmap, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r7, $r8;
        java.io.FileOutputStream $r5, $r11;
        java.io.IOException $r13;
        java.io.File $r3, $r9;
        java.io.FileNotFoundException $r12;
        android.graphics.Bitmap $r0;
        java.lang.StringBuffer $r4, $r10;
        android.graphics.Bitmap$CompressFormat $r6;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r9 = new java.io.File;

        $r3 = $r9;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

     label1:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = new java.io.File;

        $r3 = $r9;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label2:
        if $r0 == null goto label8;

        $r11 = new java.io.FileOutputStream;

        $r5 = $r11;

     label3:
        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label4:
        $r6 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label5:
        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r6, 80, $r5);

        virtualinvoke $r5.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r5.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r0.<android.graphics.Bitmap: void recycle()>();

     label6:
        return $r1;

     label7:
        $r7 := @caughtexception;

        $r12 = (java.io.FileNotFoundException) $r7;

        virtualinvoke $r12.<java.io.FileNotFoundException: void printStackTrace()>();

     label8:
        return null;

     label9:
        $r8 := @caughtexception;

        $r13 = (java.io.IOException) $r8;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        goto label8;

        catch java.io.FileNotFoundException from label3 to label4 with label7;
        catch java.io.FileNotFoundException from label5 to label6 with label7;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label6 with label9;
    }

    public static final void a(android.content.Context, java.lang.String, com.tencent.open.utils.AsynLoadImgBack)
    {
        android.content.Context $r0;
        com.tencent.connect.share.a$1 $r3;
        com.tencent.connect.share.a$2 $r6;
        com.tencent.open.utils.AsynLoadImgBack $r2;
        android.os.Looper $r4;
        java.lang.Thread $r5;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: com.tencent.open.utils.AsynLoadImgBack;

        staticinvoke <com.tencent.open.a.b: void b(java.lang.String,java.lang.String)>("AsynScaleCompressImage", "scaleCompressImage");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        interfaceinvoke $r2.<com.tencent.open.utils.AsynLoadImgBack: void saved(int,java.lang.String)>(1, null);

        return;

     label1:
        $z0 = staticinvoke <com.tencent.open.utils.Util: boolean hasSDCard()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r2.<com.tencent.open.utils.AsynLoadImgBack: void saved(int,java.lang.String)>(2, null);

        return;

     label2:
        $r3 = new com.tencent.connect.share.a$1;

        $r4 = virtualinvoke $r0.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<com.tencent.connect.share.a$1: void <init>(android.os.Looper,com.tencent.open.utils.AsynLoadImgBack)>($r4, $r2);

        $r5 = new java.lang.Thread;

        $r6 = new com.tencent.connect.share.a$2;

        specialinvoke $r6.<com.tencent.connect.share.a$2: void <init>(java.lang.String,android.os.Handler)>($r1, $r3);

        specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6);

        virtualinvoke $r5.<java.lang.Thread: void start()>();

        return;
    }

    public static final void a(android.content.Context, java.util.ArrayList, com.tencent.open.utils.AsynLoadImgBack)
    {
        com.tencent.open.utils.AsynLoadImgBack $r2;
        android.content.Context $r0;
        com.tencent.connect.share.a$4 $r3;
        android.os.Looper $r4;
        java.lang.Thread $r6;
        com.tencent.connect.share.a$3 $r5;
        java.util.ArrayList $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: com.tencent.open.utils.AsynLoadImgBack;

        staticinvoke <com.tencent.open.a.b: void b(java.lang.String,java.lang.String)>("AsynScaleCompressImage", "batchScaleCompressImage");

        if $r1 != null goto label1;

        interfaceinvoke $r2.<com.tencent.open.utils.AsynLoadImgBack: void saved(int,java.lang.String)>(1, null);

        return;

     label1:
        $r5 = new com.tencent.connect.share.a$3;

        $r4 = virtualinvoke $r0.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<com.tencent.connect.share.a$3: void <init>(android.os.Looper,com.tencent.open.utils.AsynLoadImgBack)>($r4, $r2);

        $r6 = new java.lang.Thread;

        $r3 = new com.tencent.connect.share.a$4;

        specialinvoke $r3.<com.tencent.connect.share.a$4: void <init>(java.util.ArrayList,android.os.Handler)>($r1, $r5);

        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3);

        virtualinvoke $r6.<java.lang.Thread: void start()>();

        return;
    }

    static boolean a(java.lang.String, int, int)
    {
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = staticinvoke <com.tencent.connect.share.a: boolean b(java.lang.String,int,int)>($r0, $i0, $i1);

        return $z0;
    }

    private static int b(android.graphics.BitmapFactory$Options, int, int)
    {
        int $i0, $i1, $i2, $i3;
        android.graphics.BitmapFactory$Options $r0;
        double $d0, $d1, $d2, $d3;

        $r0 := @parameter0: android.graphics.BitmapFactory$Options;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $r0.<android.graphics.BitmapFactory$Options: int outWidth>;

        $d1 = (double) $i2;

        $i2 = $r0.<android.graphics.BitmapFactory$Options: int outHeight>;

        $d2 = (double) $i2;

        if $i1 != -1 goto label2;

        $i2 = 1;

     label1:
        $i3 = 128;

        if $i3 >= $i2 goto label3;

        return $i2;

     label2:
        $d3 = $d1 * $d2;

        $d0 = (double) $i1;

        $d0 = $d3 / $d0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i2 = (int) $d0;

        goto label1;

     label3:
        if $i1 != -1 goto label4;

        return 1;

     label4:
        return $i2;
    }

    private static final boolean b(java.lang.String, int, int)
    {
        android.graphics.Bitmap$Config $r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r2, $r5;
        java.lang.String $r0;
        android.graphics.BitmapFactory$Options $r1, $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r4 = new android.graphics.BitmapFactory$Options;

        $r1 = $r4;

        specialinvoke $r4.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r1.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, $r1);

        $i2 = $r1.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i3 = $r1.<android.graphics.BitmapFactory$Options: int outHeight>;

        $z0 = $r1.<android.graphics.BitmapFactory$Options: boolean mCancel>;

        if $z0 != 0 goto label2;

        $i4 = $r1.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i4 == -1 goto label2;

        $i4 = $r1.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i4 != -1 goto label3;

     label2:
        return 0;

     label3:
        if $i2 <= $i3 goto label7;

        $i4 = $i2;

     label4:
        if $i2 >= $i3 goto label8;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longSide=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shortSide=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tencent.open.a.b: void b(java.lang.String,java.lang.String)>("AsynScaleCompressImage", $r0);

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r3;

        if $i4 > $i1 goto label6;

        if $i2 <= $i0 goto label9;

     label6:
        return 1;

     label7:
        $i4 = $i3;

        goto label4;

     label8:
        $i2 = $i3;

        goto label5;

     label9:
        return 0;
    }
}
