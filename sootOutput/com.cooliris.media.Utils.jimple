public class com.cooliris.media.Utils extends java.lang.Object
{
    private static long[] CRCTable;
    private static final long INITIALCRC;
    private static final long POLY64REV;
    private static boolean init;

    static void <clinit>()
    {
        long[] $r0;

        <com.cooliris.media.Utils: long POLY64REV> = -7661587058870466123L;

        <com.cooliris.media.Utils: long INITIALCRC> = -1L;

        <com.cooliris.media.Utils: boolean init> = 0;

        $r0 = newarray (long)[256];

        <com.cooliris.media.Utils: long[] CRCTable> = $r0;

        return;
    }

    public void <init>()
    {
        com.cooliris.media.Utils r0;

        r0 := @this: com.cooliris.media.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void Copy(java.io.File, java.io.File) throws java.io.IOException
    {
        byte[] r2;
        int $i0;
        java.io.FileOutputStream r4;
        java.io.FileInputStream r3;
        java.io.File $r0, $r1;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.io.File;

        r3 = new java.io.FileInputStream;

        specialinvoke r3.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        r4 = new java.io.FileOutputStream;

        specialinvoke r4.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        r2 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r2);

        if $i0 > 0 goto label2;

        virtualinvoke r3.<java.io.InputStream: void close()>();

        virtualinvoke r4.<java.io.OutputStream: void close()>();

        return;

     label2:
        virtualinvoke r4.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0);

        goto label1;
    }

    public static final java.lang.String Crc64(java.lang.String)
    {
        int i0, i1, $i3;
        long $l2;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $l2 = staticinvoke <com.cooliris.media.Utils: long Crc64Long(java.lang.String)>($r0);

        i1 = (int) $l2;

        i0 = -1;

        i1 = i1 & i0;

        $l2 = $l2 >> 32;

        i0 = (int) $l2;

        $i3 = -1;

        i0 = i0 & $i3;

        $r2 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static final long Crc64Long(java.lang.String)
    {
        long l2, l3;
        char $c5;
        long[] r1;
        int $i0, i1, i4, $i6;
        java.lang.String $r0;
        boolean z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label01;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return 0L;

     label02:
        z0 = <com.cooliris.media.Utils: boolean init>;

        if z0 != 0 goto label04;

        $i0 = 0;

     label03:
        if $i0 < 256 goto label06;

        <com.cooliris.media.Utils: boolean init> = 1;

     label04:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i1 = 0;

        l2 = -1L;

     label05:
        if i1 < $i0 goto label11;

        return l2;

     label06:
        l3 = (long) $i0;

        i1 = 0;

     label07:
        if i1 < 8 goto label08;

        r1 = <com.cooliris.media.Utils: long[] CRCTable>;

        r1[$i0] = l3;

        $i0 = $i0 + 1;

        goto label03;

     label08:
        i4 = (int) l3;

        i4 = i4 & 1;

        if i4 == 0 goto label10;

        l3 = l3 >> 1;

        l3 = l3 ^ -7661587058870466123L;

     label09:
        i1 = i1 + 1;

        goto label07;

     label10:
        l3 = l3 >> 1;

        goto label09;

     label11:
        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        r1 = <com.cooliris.media.Utils: long[] CRCTable>;

        i4 = (int) l2;

        $i6 = (int) $c5;

        i4 = $i6 ^ i4;

        i4 = i4 & 255;

        l3 = r1[i4];

        l2 = l2 >> 8;

        i1 = i1 + 1;

        l2 = l2 ^ l3;

        goto label05;
    }

    public static java.lang.String getBucketNameFromUri(android.net.Uri)
    {
        java.util.List $r2;
        android.net.Uri $r0;
        int $i0;
        java.lang.Object $r3;
        java.lang.String r1;

        $r0 := @parameter0: android.net.Uri;

        r1 = "";

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r2 = virtualinvoke $r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 - 2;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        r1 = (java.lang.String) $r3;

     label1:
        if r1 != null goto label3;

     label2:
        return "";

     label3:
        return r1;
    }

    public static final java.lang.String readUTF(java.io.DataInputStream) throws java.io.IOException
    {
        int $i0;
        java.io.DataInputStream $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.io.DataInputStream;

        $r1 = virtualinvoke $r0.<java.io.DataInputStream: java.lang.String readUTF()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        return $r1;
    }

    public static final android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1, $i2, i3, i4;
        boolean z0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        i3 = $i0;

        i4 = $i0;

        z0 = 0;

        if $i1 <= $i2 goto label2;

        if $i1 <= $i0 goto label1;

        z0 = 1;

        $i0 = $i0 * $i2;

        i4 = $i0 / $i1;

     label1:
        if z0 == 0 goto label3;

        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, i3, i4, 1);

        return $r0;

     label2:
        if $i2 <= $i0 goto label1;

        z0 = 1;

        $i0 = $i0 * $i1;

        i3 = $i0 / $i2;

        goto label1;

     label3:
        return $r0;
    }

    public static final void writeUTF(java.io.DataOutputStream, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r1;
        java.io.DataOutputStream $r0;

        $r0 := @parameter0: java.io.DataOutputStream;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>()>();

        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r1);

        return;

     label1:
        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r1);

        return;
    }
}
