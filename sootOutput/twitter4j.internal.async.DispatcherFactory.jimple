public final class twitter4j.internal.async.DispatcherFactory extends java.lang.Object
{
    private twitter4j.conf.Configuration conf;
    private java.lang.String dispatcherImpl;

    public void <init>()
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.internal.async.DispatcherFactory r0;

        r0 := @this: twitter4j.internal.async.DispatcherFactory;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        specialinvoke r0.<twitter4j.internal.async.DispatcherFactory: void <init>(twitter4j.conf.Configuration)>($r1);

        return;
    }

    public void <init>(twitter4j.conf.Configuration)
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.internal.async.DispatcherFactory r0;
        java.lang.String $r2;

        r0 := @this: twitter4j.internal.async.DispatcherFactory;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getDispatcherImpl()>();

        r0.<twitter4j.internal.async.DispatcherFactory: java.lang.String dispatcherImpl> = $r2;

        r0.<twitter4j.internal.async.DispatcherFactory: twitter4j.conf.Configuration conf> = $r1;

        return;
    }

    public final twitter4j.internal.async.Dispatcher getInstance()
    {
        java.lang.Throwable $r9, $r11, $r14, $r15;
        java.lang.Object[] $r5;
        java.lang.AssertionError $r10;
        java.lang.reflect.Constructor $r4;
        java.lang.ClassCastException $r13;
        java.lang.String $r1;
        twitter4j.internal.async.Dispatcher $r8;
        java.lang.Class[] $r3;
        twitter4j.internal.async.DispatcherFactory r0;
        twitter4j.conf.Configuration $r6;
        java.lang.Class $r2;
        java.lang.Object $r7;
        java.lang.ClassNotFoundException $r12;

        r0 := @this: twitter4j.internal.async.DispatcherFactory;

        $r1 = r0.<twitter4j.internal.async.DispatcherFactory: java.lang.String dispatcherImpl>;

     label01:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

     label02:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Ltwitter4j/conf/Configuration;";

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label04:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = r0.<twitter4j.internal.async.DispatcherFactory: twitter4j.conf.Configuration conf>;

        $r5[0] = $r6;

     label05:
        $r7 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label06:
        $r8 = (twitter4j.internal.async.Dispatcher) $r7;

     label07:
        return $r8;

     label08:
        $r9 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r10;

     label09:
        $r11 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r11);

        throw $r10;

     label10:
        $r12 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r10;

     label11:
        $r13 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r13);

        throw $r10;

     label12:
        $r14 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r10;

     label13:
        $r15 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r15);

        throw $r10;

        catch java.lang.InstantiationException from label01 to label02 with label08;
        catch java.lang.InstantiationException from label03 to label04 with label08;
        catch java.lang.InstantiationException from label05 to label06 with label08;
        catch java.lang.IllegalAccessException from label01 to label02 with label09;
        catch java.lang.IllegalAccessException from label03 to label04 with label09;
        catch java.lang.IllegalAccessException from label05 to label06 with label09;
        catch java.lang.ClassNotFoundException from label01 to label02 with label10;
        catch java.lang.ClassNotFoundException from label03 to label04 with label10;
        catch java.lang.ClassNotFoundException from label05 to label06 with label10;
        catch java.lang.ClassCastException from label01 to label02 with label11;
        catch java.lang.ClassCastException from label03 to label04 with label11;
        catch java.lang.ClassCastException from label05 to label07 with label11;
        catch java.lang.NoSuchMethodException from label01 to label02 with label12;
        catch java.lang.NoSuchMethodException from label03 to label04 with label12;
        catch java.lang.NoSuchMethodException from label05 to label06 with label12;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label13;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label13;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label13;
    }
}
