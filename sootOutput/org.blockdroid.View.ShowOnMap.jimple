public class org.blockdroid.View.ShowOnMap extends com.google.android.maps.MapActivity implements org.blockdroid.Others.GPSCallback
{
    public static final java.lang.String LOCATION;
    private static final java.lang.String TAG;
    private static final double[] multipliers;
    private static final java.lang.String[] unitstrings;
    private com.google.android.maps.MapController controller;
    private double currentLat;
    private double currentLon;
    private android.location.Location destination;
    private org.blockdroid.Others.GPSManager gpsManager;
    private boolean isMeasuring;
    private android.location.LocationListener ll;
    private java.lang.String location;
    private com.google.android.maps.MapView mapView;
    com.google.android.maps.GeoPoint p;
    private boolean satteliteView;
    private android.location.Location start;
    private double startLat;
    private double startLon;
    private int unitindex;
    private int zoom;
    public android.content.Intent ipcIntent;
    public android.content.Intent ipcResultIntent;

    static void <clinit>()
    {
        double[] $r0;
        java.lang.String[] $r1;

        <org.blockdroid.View.ShowOnMap: java.lang.String TAG> = "ShowOnMap.java";

        <org.blockdroid.View.ShowOnMap: java.lang.String LOCATION> = "LOCATION";

        $r0 = newarray (double)[4];

        $r0[0] = 1.0;

        $r0[1] = 1.0936133;

        $r0[2] = 0.001;

        $r0[3] = 6.21371192E-4;

        <org.blockdroid.View.ShowOnMap: double[] multipliers> = $r0;

        $r1 = newarray (java.lang.String)[4];

        $r1[0] = "m";

        $r1[1] = "y";

        $r1[2] = "km";

        $r1[3] = "mi";

        <org.blockdroid.View.ShowOnMap: java.lang.String[] unitstrings> = $r1;

        return;
    }

    public void <init>()
    {
        org.blockdroid.View.ShowOnMap r0;
        android.location.Location $r1;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        specialinvoke r0.<com.google.android.maps.MapActivity: void <init>()>();

        $r1 = new android.location.Location;

        specialinvoke $r1.<android.location.Location: void <init>(java.lang.String)>("Destination");

        r0.<org.blockdroid.View.ShowOnMap: android.location.Location destination> = $r1;

        $r1 = new android.location.Location;

        specialinvoke $r1.<android.location.Location: void <init>(java.lang.String)>("Start");

        r0.<org.blockdroid.View.ShowOnMap: android.location.Location start> = $r1;

        r0.<org.blockdroid.View.ShowOnMap: int zoom> = 12;

        r0.<org.blockdroid.View.ShowOnMap: boolean satteliteView> = 0;

        r0.<org.blockdroid.View.ShowOnMap: org.blockdroid.Others.GPSManager gpsManager> = null;

        r0.<org.blockdroid.View.ShowOnMap: int unitindex> = 2;

        r0.<org.blockdroid.View.ShowOnMap: double currentLon> = 0.0;

        r0.<org.blockdroid.View.ShowOnMap: double currentLat> = 0.0;

        r0.<org.blockdroid.View.ShowOnMap: double startLon> = 0.0;

        r0.<org.blockdroid.View.ShowOnMap: double startLat> = 0.0;

        r0.<org.blockdroid.View.ShowOnMap: boolean isMeasuring> = 1;

        return;
    }

    private double calcGeoDistance(double, double, double, double)
    {
        org.blockdroid.View.ShowOnMap r0;
        float[] r1;
        java.lang.Exception $r2;
        float $f0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 := @parameter3: double;

        r1 = newarray (float)[3];

     label1:
        staticinvoke <android.location.Location: void distanceBetween(double,double,double,double,float[])>($d0, $d1, $d2, $d3, r1);

        $f0 = r1[0];

     label2:
        $d0 = (double) $f0;

        return $d0;

     label3:
        $r2 := @caughtexception;

        return 0.0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void findLocation()
    {
        android.location.Address $r8;
        java.lang.Throwable $r12;
        android.content.Context $r16;
        java.util.Locale $r3;
        int $i0, $i1;
        org.blockdroid.View.ShowOnMap$MapOverlay r2, $r15;
        java.lang.String $r4;
        com.google.android.maps.GeoPoint $r6, $r14;
        double $d0;
        org.blockdroid.View.ShowOnMap r0;
        java.io.IOException $r17;
        android.location.Geocoder r1, $r13;
        com.google.android.maps.MapView $r11;
        java.util.List $r5;
        java.lang.Object $r7;
        com.google.android.maps.MapController $r9;
        android.location.Location $r10;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $r13 = new android.location.Geocoder;

        r1 = $r13;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r16 = (android.content.Context) r0;

        specialinvoke $r13.<android.location.Geocoder: void <init>(android.content.Context,java.util.Locale)>($r16, $r3);

        $r4 = r0.<org.blockdroid.View.ShowOnMap: java.lang.String location>;

     label01:
        $r5 = virtualinvoke r1.<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>($r4, 5);

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label02:
        if $i0 <= 0 goto label36;

        $r14 = new com.google.android.maps.GeoPoint;

     label03:
        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

     label04:
        $r8 = (android.location.Address) $r7;

     label05:
        $d0 = virtualinvoke $r8.<android.location.Address: double getLatitude()>();

     label06:
        $d0 = $d0 * 1000000.0;

        $i0 = (int) $d0;

     label07:
        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

     label08:
        $r8 = (android.location.Address) $r7;

     label09:
        $d0 = virtualinvoke $r8.<android.location.Address: double getLongitude()>();

     label10:
        $d0 = $d0 * 1000000.0;

        $i1 = (int) $d0;

     label11:
        specialinvoke $r14.<com.google.android.maps.GeoPoint: void <init>(int,int)>($i0, $i1);

     label12:
        r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.GeoPoint p> = $r14;

        $r9 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapController controller>;

        $r6 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.GeoPoint p>;

     label13:
        virtualinvoke $r9.<com.google.android.maps.MapController: void animateTo(com.google.android.maps.GeoPoint)>($r6);

     label14:
        $r9 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapController controller>;

        $i0 = r0.<org.blockdroid.View.ShowOnMap: int zoom>;

     label15:
        virtualinvoke $r9.<com.google.android.maps.MapController: int setZoom(int)>($i0);

     label16:
        $r6 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.GeoPoint p>;

     label17:
        $i0 = virtualinvoke $r6.<com.google.android.maps.GeoPoint: int getLatitudeE6()>();

     label18:
        $d0 = (double) $i0;

        $d0 = $d0 / 1000000.0;

        r0.<org.blockdroid.View.ShowOnMap: double startLat> = $d0;

        $r6 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.GeoPoint p>;

     label19:
        $i0 = virtualinvoke $r6.<com.google.android.maps.GeoPoint: int getLongitudeE6()>();

     label20:
        $d0 = (double) $i0;

        $d0 = $d0 / 1000000.0;

        r0.<org.blockdroid.View.ShowOnMap: double startLon> = $d0;

        $r10 = r0.<org.blockdroid.View.ShowOnMap: android.location.Location destination>;

        $r6 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.GeoPoint p>;

     label21:
        $i0 = virtualinvoke $r6.<com.google.android.maps.GeoPoint: int getLatitudeE6()>();

     label22:
        $d0 = (double) $i0;

        $d0 = $d0 / 1000000.0;

     label23:
        virtualinvoke $r10.<android.location.Location: void setLatitude(double)>($d0);

     label24:
        $r10 = r0.<org.blockdroid.View.ShowOnMap: android.location.Location destination>;

        $r6 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.GeoPoint p>;

     label25:
        $i0 = virtualinvoke $r6.<com.google.android.maps.GeoPoint: int getLongitudeE6()>();

     label26:
        $d0 = (double) $i0;

        $d0 = $d0 / 1000000.0;

     label27:
        virtualinvoke $r10.<android.location.Location: void setLongitude(double)>($d0);

     label28:
        $r15 = new org.blockdroid.View.ShowOnMap$MapOverlay;

        r2 = $r15;

     label29:
        specialinvoke $r15.<org.blockdroid.View.ShowOnMap$MapOverlay: void <init>(org.blockdroid.View.ShowOnMap)>(r0);

     label30:
        $r11 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapView mapView>;

     label31:
        $r5 = virtualinvoke $r11.<com.google.android.maps.MapView: java.util.List getOverlays()>();

        interfaceinvoke $r5.<java.util.List: void clear()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

     label32:
        $r11 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapView mapView>;

     label33:
        virtualinvoke $r11.<com.google.android.maps.MapView: void invalidate()>();

     label34:
        return;

     label35:
        $r12 := @caughtexception;

        $r17 = (java.io.IOException) $r12;

        virtualinvoke $r17.<java.io.IOException: void printStackTrace()>();

     label36:
        return;

        catch java.io.IOException from label01 to label02 with label35;
        catch java.io.IOException from label03 to label04 with label35;
        catch java.io.IOException from label05 to label06 with label35;
        catch java.io.IOException from label07 to label08 with label35;
        catch java.io.IOException from label09 to label10 with label35;
        catch java.io.IOException from label11 to label12 with label35;
        catch java.io.IOException from label13 to label14 with label35;
        catch java.io.IOException from label15 to label16 with label35;
        catch java.io.IOException from label17 to label18 with label35;
        catch java.io.IOException from label19 to label20 with label35;
        catch java.io.IOException from label21 to label22 with label35;
        catch java.io.IOException from label23 to label24 with label35;
        catch java.io.IOException from label25 to label26 with label35;
        catch java.io.IOException from label27 to label28 with label35;
        catch java.io.IOException from label29 to label30 with label35;
        catch java.io.IOException from label31 to label32 with label35;
        catch java.io.IOException from label33 to label34 with label35;
    }

    private double[] getLastKnownGPS()
    {
        org.blockdroid.View.ShowOnMap r1;
        double[] r0;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r2;
        java.lang.String r6;
        android.location.Location r5, $r7;
        android.location.LocationManager r3;
        double $d0;

        r1 := @this: org.blockdroid.View.ShowOnMap;

        $r2 = virtualinvoke r1.<org.blockdroid.View.ShowOnMap: java.lang.Object getSystemService(java.lang.String)>("location");

        r3 = (android.location.LocationManager) $r2;

        $r4 = virtualinvoke r3.<android.location.LocationManager: java.util.List getProviders(boolean)>(1);

        r5 = null;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 - 1;

     label1:
        if $i0 >= 0 goto label3;

     label2:
        r0 = newarray (double)[2];

        if r5 == null goto label4;

        $d0 = virtualinvoke r5.<android.location.Location: double getLatitude()>();

        r0[0] = $d0;

        $d0 = virtualinvoke r5.<android.location.Location: double getLongitude()>();

        r0[1] = $d0;

        return r0;

     label3:
        $r2 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        r6 = (java.lang.String) $r2;

        $r7 = virtualinvoke r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>(r6);

        r5 = $r7;

        if $r7 != null goto label2;

        $i0 = $i0 + -1;

        goto label1;

     label4:
        return r0;
    }

    private void initMapView()
    {
        org.blockdroid.View.ShowOnMap r0;
        android.view.View $r1;
        com.google.android.maps.MapController $r3;
        com.google.android.maps.MapView $r2;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $r1 = virtualinvoke r0.<org.blockdroid.View.ShowOnMap: android.view.View findViewById(int)>(2131361818);

        $r2 = (com.google.android.maps.MapView) $r1;

        r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapView mapView> = $r2;

        $r2 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapView mapView>;

        $r3 = virtualinvoke $r2.<com.google.android.maps.MapView: com.google.android.maps.MapController getController()>();

        r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapController controller> = $r3;

        $r2 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapView mapView>;

        virtualinvoke $r2.<com.google.android.maps.MapView: void setSatellite(boolean)>(0);

        $r2 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapView mapView>;

        virtualinvoke $r2.<com.google.android.maps.MapView: void setBuiltInZoomControls(boolean)>(1);

        return;
    }

    private void initMyLocation()
    {
        android.content.Context $r11;
        org.blockdroid.View.ShowOnMap$MyLocationListener $r9;
        org.blockdroid.View.ShowOnMap r0;
        com.google.android.maps.MyLocationOverlay r2, $r8;
        com.google.android.maps.MapView $r3;
        java.util.List $r7;
        int $i0, $i1;
        java.lang.Object $r4;
        android.location.Location $r6;
        android.location.LocationManager r5;
        com.google.android.maps.GeoPoint r1, $r10;
        double $d0;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $r8 = new com.google.android.maps.MyLocationOverlay;

        r2 = $r8;

        $r3 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapView mapView>;

        $r11 = (android.content.Context) r0;

        specialinvoke $r8.<com.google.android.maps.MyLocationOverlay: void <init>(android.content.Context,com.google.android.maps.MapView)>($r11, $r3);

        virtualinvoke r2.<com.google.android.maps.MyLocationOverlay: boolean enableMyLocation()>();

        $r9 = new org.blockdroid.View.ShowOnMap$MyLocationListener;

        specialinvoke $r9.<org.blockdroid.View.ShowOnMap$MyLocationListener: void <init>(org.blockdroid.View.ShowOnMap,org.blockdroid.View.ShowOnMap$MyLocationListener)>(r0, null);

        r0.<org.blockdroid.View.ShowOnMap: android.location.LocationListener ll> = $r9;

        $r4 = virtualinvoke r0.<org.blockdroid.View.ShowOnMap: java.lang.Object getSystemService(java.lang.String)>("location");

        r5 = (android.location.LocationManager) $r4;

        $r10 = new com.google.android.maps.GeoPoint;

        r1 = $r10;

        $r6 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps");

        $d0 = virtualinvoke $r6.<android.location.Location: double getLatitude()>();

        $d0 = $d0 * 1000000.0;

        $i0 = (int) $d0;

        $r6 = virtualinvoke r5.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps");

        $d0 = virtualinvoke $r6.<android.location.Location: double getLongitude()>();

        $d0 = $d0 * 1000000.0;

        $i1 = (int) $d0;

        specialinvoke $r10.<com.google.android.maps.GeoPoint: void <init>(int,int)>($i0, $i1);

        $r6 = r0.<org.blockdroid.View.ShowOnMap: android.location.Location start>;

        $i0 = virtualinvoke r1.<com.google.android.maps.GeoPoint: int getLatitudeE6()>();

        $d0 = (double) $i0;

        $d0 = $d0 / 1000000.0;

        virtualinvoke $r6.<android.location.Location: void setLatitude(double)>($d0);

        $r6 = r0.<org.blockdroid.View.ShowOnMap: android.location.Location start>;

        $i0 = virtualinvoke r1.<com.google.android.maps.GeoPoint: int getLongitudeE6()>();

        $d0 = (double) $i0;

        $d0 = $d0 / 1000000.0;

        virtualinvoke $r6.<android.location.Location: void setLongitude(double)>($d0);

        $r3 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapView mapView>;

        $r7 = virtualinvoke $r3.<com.google.android.maps.MapView: java.util.List getOverlays()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    private void startMeasuring()
    {
        org.blockdroid.View.ShowOnMap r0;
        double $d0;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        r0.<org.blockdroid.View.ShowOnMap: boolean isMeasuring> = 1;

        $d0 = r0.<org.blockdroid.View.ShowOnMap: double currentLon>;

        r0.<org.blockdroid.View.ShowOnMap: double startLon> = $d0;

        $d0 = r0.<org.blockdroid.View.ShowOnMap: double currentLat>;

        r0.<org.blockdroid.View.ShowOnMap: double startLat> = $d0;

        specialinvoke r0.<org.blockdroid.View.ShowOnMap: void updateMeasurement(boolean)>(0);

        return;
    }

    private void stopMeasuring()
    {
        org.blockdroid.View.ShowOnMap r0;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        r0.<org.blockdroid.View.ShowOnMap: boolean isMeasuring> = 0;

        r0.<org.blockdroid.View.ShowOnMap: double startLon> = 0.0;

        r0.<org.blockdroid.View.ShowOnMap: double startLat> = 0.0;

        return;
    }

    private void updateMeasurement(boolean)
    {
        android.content.Context $r8;
        org.blockdroid.View.ShowOnMap r0;
        double[] $r1;
        java.lang.String[] $r3;
        android.widget.Toast $r6;
        int $i0;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r4, $r5;
        boolean $z0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $z0 := @parameter0: boolean;

        $d2 = r0.<org.blockdroid.View.ShowOnMap: double startLat>;

        $d3 = r0.<org.blockdroid.View.ShowOnMap: double startLon>;

        $d0 = r0.<org.blockdroid.View.ShowOnMap: double currentLat>;

        $d1 = r0.<org.blockdroid.View.ShowOnMap: double currentLon>;

        $d0 = specialinvoke r0.<org.blockdroid.View.ShowOnMap: double calcGeoDistance(double,double,double,double)>($d2, $d3, $d0, $d1);

        $r1 = <org.blockdroid.View.ShowOnMap: double[] multipliers>;

        $i0 = r0.<org.blockdroid.View.ShowOnMap: int unitindex>;

        $d1 = $r1[$i0];

        $d0 = $d0 * $d1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $d0 = virtualinvoke r0.<org.blockdroid.View.ShowOnMap: double RoundDecimal(double,int)>($d0, 2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = <org.blockdroid.View.ShowOnMap: java.lang.String[] unitstrings>;

        $i0 = r0.<org.blockdroid.View.ShowOnMap: int unitindex>;

        $r4 = $r3[$i0];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        $r5 = virtualinvoke r0.<org.blockdroid.View.ShowOnMap: java.lang.String getString(int)>(2131230759);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke r0.<org.blockdroid.View.ShowOnMap: java.lang.String getString(int)>(2131230760);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = (android.content.Context) r0;

        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r8, $r4, 1);

        virtualinvoke $r6.<android.widget.Toast: void show()>();

        $r4 = virtualinvoke r0.<org.blockdroid.View.ShowOnMap: java.lang.String getString(int)>(2131230761);

        $r8 = (android.content.Context) r0;

        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r8, $r4, 1);

        virtualinvoke $r6.<android.widget.Toast: void show()>();

        return;
    }

    public double RoundDecimal(double, int)
    {
        java.math.BigDecimal r1;
        org.blockdroid.View.ShowOnMap r0;
        int $i0;
        double $d0;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        r1 = new java.math.BigDecimal;

        specialinvoke r1.<java.math.BigDecimal: void <init>(double)>($d0);

        r1 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(2, 6);

        $d0 = virtualinvoke r1.<java.math.BigDecimal: double doubleValue()>();

        return $d0;
    }

    protected boolean isRouteDisplayed()
    {
        org.blockdroid.View.ShowOnMap r0;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        return 0;
    }

    public void onCreate(android.os.Bundle)
    {
        android.content.Context $r11;
        org.blockdroid.View.ShowOnMap r0;
        android.os.Bundle $r1;
        org.blockdroid.Others.GPSManager $r5, $r9;
        double[] $r6;
        android.content.Intent $r2;
        android.widget.Toast $r7;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r3;
        android.app.Activity $r10;
        double $d0;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.google.android.maps.MapActivity: void onCreate(android.os.Bundle)>($r1);

        virtualinvoke r0.<org.blockdroid.View.ShowOnMap: void setContentView(int)>(2130903059);

        $r2 = virtualinvoke r0.<org.blockdroid.View.ShowOnMap: android.content.Intent getIntent()>();

        $r3 = virtualinvoke $r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("LOCATION");

        r0.<org.blockdroid.View.ShowOnMap: java.lang.String location> = $r3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Location: ");

        $r3 = r0.<org.blockdroid.View.ShowOnMap: java.lang.String location>;

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ShowOnMap.java", $r3);

        specialinvoke r0.<org.blockdroid.View.ShowOnMap: void initMapView()>();

        specialinvoke r0.<org.blockdroid.View.ShowOnMap: void findLocation()>();

        $r9 = new org.blockdroid.Others.GPSManager;

        specialinvoke $r9.<org.blockdroid.Others.GPSManager: void <init>()>();

        r0.<org.blockdroid.View.ShowOnMap: org.blockdroid.Others.GPSManager gpsManager> = $r9;

        $r5 = r0.<org.blockdroid.View.ShowOnMap: org.blockdroid.Others.GPSManager gpsManager>;

        $r10 = (android.app.Activity) r0;

        virtualinvoke $r5.<org.blockdroid.Others.GPSManager: void startListening(android.app.Activity)>($r10);

        $r5 = r0.<org.blockdroid.View.ShowOnMap: org.blockdroid.Others.GPSManager gpsManager>;

        virtualinvoke $r5.<org.blockdroid.Others.GPSManager: void setGPSCallback(org.blockdroid.Others.GPSCallback)>(r0);

        $r6 = specialinvoke r0.<org.blockdroid.View.ShowOnMap: double[] getLastKnownGPS()>();

        if $r6 == null goto label1;

        $d0 = $r6[0];

        r0.<org.blockdroid.View.ShowOnMap: double currentLat> = $d0;

        $d0 = $r6[1];

        r0.<org.blockdroid.View.ShowOnMap: double currentLon> = $d0;

        specialinvoke r0.<org.blockdroid.View.ShowOnMap: void updateMeasurement(boolean)>(0);

        return;

     label1:
        $r3 = virtualinvoke r0.<org.blockdroid.View.ShowOnMap: java.lang.String getString(int)>(2131230763);

        $r11 = (android.content.Context) r0;

        $r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r11, $r3, 1);

        virtualinvoke $r7.<android.widget.Toast: void show()>();

        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        android.view.Menu $r1;
        org.blockdroid.View.ShowOnMap r0;
        android.view.MenuInflater $r2;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $r1 := @parameter0: android.view.Menu;

        specialinvoke r0.<com.google.android.maps.MapActivity: boolean onCreateOptionsMenu(android.view.Menu)>($r1);

        $r2 = virtualinvoke r0.<org.blockdroid.View.ShowOnMap: android.view.MenuInflater getMenuInflater()>();

        virtualinvoke $r2.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131296258, $r1);

        return 1;
    }

    protected void onDestroy()
    {
        org.blockdroid.View.ShowOnMap r0;
        org.blockdroid.Others.GPSManager $r1;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $r1 = r0.<org.blockdroid.View.ShowOnMap: org.blockdroid.Others.GPSManager gpsManager>;

        virtualinvoke $r1.<org.blockdroid.Others.GPSManager: void stopListening()>();

        $r1 = r0.<org.blockdroid.View.ShowOnMap: org.blockdroid.Others.GPSManager gpsManager>;

        virtualinvoke $r1.<org.blockdroid.Others.GPSManager: void setGPSCallback(org.blockdroid.Others.GPSCallback)>(null);

        r0.<org.blockdroid.View.ShowOnMap: org.blockdroid.Others.GPSManager gpsManager> = null;

        specialinvoke r0.<com.google.android.maps.MapActivity: void onDestroy()>();

        return;
    }

    public void onGPSUpdate(android.location.Location)
    {
        org.blockdroid.View.ShowOnMap r0;
        android.location.Location $r1;
        double $d0;
        boolean $z0;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $r1 := @parameter0: android.location.Location;

        $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>();

        r0.<org.blockdroid.View.ShowOnMap: double currentLon> = $d0;

        $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>();

        r0.<org.blockdroid.View.ShowOnMap: double currentLat> = $d0;

        $z0 = r0.<org.blockdroid.View.ShowOnMap: boolean isMeasuring>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.blockdroid.View.ShowOnMap: void updateMeasurement(boolean)>(1);

        r0.<org.blockdroid.View.ShowOnMap: boolean isMeasuring> = 0;

     label1:
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        org.blockdroid.View.ShowOnMap r0;
        int $i0;
        com.google.android.maps.MapView $r2;
        android.view.MenuItem $r1;
        boolean $z0;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        $r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 2131361975: goto label2;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        $r2 = r0.<org.blockdroid.View.ShowOnMap: com.google.android.maps.MapView mapView>;

        $z0 = r0.<org.blockdroid.View.ShowOnMap: boolean satteliteView>;

        if $z0 == 0 goto label5;

        $z0 = 0;

     label3:
        virtualinvoke $r2.<com.google.android.maps.MapView: void setSatellite(boolean)>($z0);

        $z0 = r0.<org.blockdroid.View.ShowOnMap: boolean satteliteView>;

        if $z0 == 0 goto label6;

        $z0 = 0;

     label4:
        r0.<org.blockdroid.View.ShowOnMap: boolean satteliteView> = $z0;

        return 1;

     label5:
        $z0 = 1;

        goto label3;

     label6:
        $z0 = 1;

        goto label4;
    }

    public void onResume()
    {
        android.content.Context $r3;
        org.blockdroid.View.ShowOnMap r0;
        int $i0;
        java.lang.String $r1;
        java.lang.Integer $r2;

        r0 := @this: org.blockdroid.View.ShowOnMap;

        specialinvoke r0.<com.google.android.maps.MapActivity: void onResume()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ShowOnMap.java", "onResume");

        $r3 = (android.content.Context) r0;

        $r1 = staticinvoke <org.blockdroid.View.Prefs: java.lang.String getOrientation(android.content.Context)>($r3);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        return;

     label2:
        virtualinvoke r0.<org.blockdroid.View.ShowOnMap: void setRequestedOrientation(int)>(-1);

        return;

     label3:
        virtualinvoke r0.<org.blockdroid.View.ShowOnMap: void setRequestedOrientation(int)>(1);

        return;

     label4:
        virtualinvoke r0.<org.blockdroid.View.ShowOnMap: void setRequestedOrientation(int)>(0);

        return;
    }

    public android.content.Intent getIntent()
    {
        android.content.Intent $r0;
        org.blockdroid.View.ShowOnMap this;

        this := @this: org.blockdroid.View.ShowOnMap;

        $r0 = this.<org.blockdroid.View.ShowOnMap: android.content.Intent ipcIntent>;

        return $r0;
    }

    public void setIntent(android.content.Intent)
    {
        android.content.Intent parameter0;
        org.blockdroid.View.ShowOnMap this;

        this := @this: org.blockdroid.View.ShowOnMap;

        parameter0 := @parameter0: android.content.Intent;

        this.<org.blockdroid.View.ShowOnMap: android.content.Intent ipcIntent> = parameter0;

        return;
    }

    public void setResult(int, android.content.Intent)
    {
        int parameter0;
        android.content.Intent parameter1;
        org.blockdroid.View.ShowOnMap this;

        this := @this: org.blockdroid.View.ShowOnMap;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: android.content.Intent;

        this.<org.blockdroid.View.ShowOnMap: android.content.Intent ipcResultIntent> = parameter1;

        return;
    }
}
