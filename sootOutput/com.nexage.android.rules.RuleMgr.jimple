public class com.nexage.android.rules.RuleMgr extends java.lang.Object
{
    private static final java.lang.String ADMAX_SDK_DEVICE;
    private static final java.lang.String JSON_RULE;
    private static final java.lang.String NEXT_FETCH;
    private static final java.lang.String PREF_NAME;
    private static final int RETRY_TIME;
    private static java.lang.String jSonRule;
    private static long nextFetch;
    private static android.content.SharedPreferences preferences;
    public static java.lang.Boolean s_HasKids;
    private static java.util.regex.Pattern s_KeyPattern;
    private static long s_LaunchTime;
    static final java.lang.String s_LogSubTag;
    private static android.webkit.CookieSyncManager s_SyncMgr;
    private static final java.util.Timer timer;

    static void <clinit>()
    {
        long $l0;
        java.util.Timer $r0;

        <com.nexage.android.rules.RuleMgr: java.lang.String s_LogSubTag> = "RULE";

        <com.nexage.android.rules.RuleMgr: int RETRY_TIME> = 600000;

        <com.nexage.android.rules.RuleMgr: java.lang.String PREF_NAME> = "com.nexage.AdMaxRule";

        <com.nexage.android.rules.RuleMgr: java.lang.String NEXT_FETCH> = "com.nexage.NextFetch";

        <com.nexage.android.rules.RuleMgr: java.lang.String JSON_RULE> = "com.nexage.JSonRule";

        <com.nexage.android.rules.RuleMgr: java.lang.String ADMAX_SDK_DEVICE> = "ANDROID";

        <com.nexage.android.rules.RuleMgr: long nextFetch> = 0L;

        $r0 = <com.nexage.android.NonBlockingTimerTask: java.util.Timer s_SDKTimer>;

        <com.nexage.android.rules.RuleMgr: java.util.Timer timer> = $r0;

        <com.nexage.android.rules.RuleMgr: java.util.regex.Pattern s_KeyPattern> = null;

        <com.nexage.android.rules.RuleMgr: java.lang.Boolean s_HasKids> = null;

        <com.nexage.android.rules.RuleMgr: android.webkit.CookieSyncManager s_SyncMgr> = null;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        <com.nexage.android.rules.RuleMgr: long s_LaunchTime> = $l0;

        return;
    }

    public void <init>()
    {
        com.nexage.android.rules.RuleMgr r0;

        r0 := @this: com.nexage.android.rules.RuleMgr;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void appendParams(java.lang.StringBuilder, java.lang.String, java.lang.String)
    {
        java.lang.Throwable r3;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r2 == null goto label4;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTF-8 encoding exception: ");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void e(java.lang.String)>($r1);

     label4:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    static void fetchRule()
    {
        java.net.HttpURLConnection r5, $r9;
        byte[] r0;
        java.util.zip.GZIPInputStream $r30;
        java.net.URL r4, $r28;
        byte $b2;
        boolean $z0;
        java.lang.Exception r3, $r17, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        java.lang.StringBuilder r2, $r29;
        android.content.SharedPreferences$Editor $r16;
        java.lang.Throwable $r18, $r19;
        long l0, $l1;
        java.net.URLConnection $r8;
        int i3, $i4;
        java.lang.String r1, $r14;
        java.io.OutputStream r7, $r10;
        com.nexage.android.rules.Rule $r12, $r13;
        android.content.SharedPreferences $r15;
        java.lang.Object r6;
        java.io.InputStream $r11;

        entermonitor class "Lcom/nexage/android/rules/RuleMgr;";

     label01:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = <com.nexage.android.rules.RuleMgr: long s_LaunchTime>;

        l0 = l0 - $l1;

        $b2 = l0 cmp 10000L;

        i3 = (int) $b2;

        if i3 <= 0 goto label02;

        staticinvoke <com.nexage.android.NexageAdFetcher: void checkSuspend()>();

     label02:
        staticinvoke <com.nexage.android.NexageAdFetcher: void checkPause(java.lang.String)>("RULE");

        staticinvoke <com.nexage.android.NexageActivity: void yieldToInterstitial()>();

     label03:
        r5 = null;

        r6 = null;

        r7 = null;

        i3 = 600000;

     label04:
        r1 = staticinvoke <com.nexage.android.rules.RuleMgr: java.lang.String getRuleRequestServlet()>();

     label05:
        $r28 = new java.net.URL;

        r4 = $r28;

     label06:
        specialinvoke $r28.<java.net.URL: void <init>(java.lang.String)>(r1);

        staticinvoke <java.net.HttpURLConnection: void setFollowRedirects(boolean)>(1);

        $r8 = virtualinvoke r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r9 = (java.net.HttpURLConnection) $r8;

     label07:
        r5 = $r9;

     label08:
        virtualinvoke $r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(30000);

        virtualinvoke $r9.<java.net.HttpURLConnection: void setReadTimeout(int)>(30000);

        virtualinvoke $r9.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

        virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Connection", "close");

        virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

     label09:
        r1 = <com.nexage.android.NexageContext: java.lang.String s_UserAgent>;

        if r1 == null goto label13;

        r1 = <com.nexage.android.NexageContext: java.lang.String s_UserAgent>;

     label10:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

     label11:
        if $i4 <= 0 goto label13;

        r1 = <com.nexage.android.NexageContext: java.lang.String s_UserAgent>;

     label12:
        virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", r1);

     label13:
        staticinvoke <com.nexage.android.rules.RuleMgr: void setCookies(java.net.HttpURLConnection)>($r9);

        $r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

     label14:
        r7 = $r10;

     label15:
        r2 = staticinvoke <com.nexage.android.rules.RuleMgr: java.lang.StringBuilder getNexageRequestParams()>();

        r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>(r0);

        staticinvoke <com.nexage.android.rules.RuleMgr: void saveCookies(java.net.HttpURLConnection,java.lang.String)>($r9, "RULE");

     label16:
        $r29 = new java.lang.StringBuilder;

        r2 = $r29;

     label17:
        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $i4 = virtualinvoke $r9.<java.net.HttpURLConnection: int getResponseCode()>();

     label18:
        if $i4 == 200 goto label19;

        if $i4 != 201 goto label75;

     label19:
        r1 = virtualinvoke $r9.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>();

     label20:
        if r1 == null goto label41;

     label21:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("gzip");

     label22:
        if $z0 == 0 goto label41;

        $r30 = new java.util.zip.GZIPInputStream;

     label23:
        $r11 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r30.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r11);

     label24:
        r6 = $r30;

     label25:
        r0 = newarray (byte)[1500];

     label26:
        $r11 = (java.io.InputStream) r6;

        $i4 = virtualinvoke $r11.<java.io.InputStream: int read(byte[])>(r0);

     label27:
        if $i4 == -1 goto label43;

        $r14 = new java.lang.String;

        r1 = $r14;

     label28:
        specialinvoke $r14.<java.lang.String: void <init>(byte[],int,int)>(r0, 0, $i4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label29:
        goto label26;

     label30:
        r3 := @caughtexception;

     label31:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rule exception: ");

        r1 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        r1 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void w(java.lang.String,java.lang.String)>("RULE", r1);

     label32:
        if r6 == null goto label34;

     label33:
        $r11 = (java.io.InputStream) r6;

        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label34:
        if r7 == null goto label36;

     label35:
        virtualinvoke r7.<java.io.OutputStream: void close()>();

     label36:
        if r5 == null goto label38;

     label37:
        virtualinvoke r5.<java.net.HttpURLConnection: void disconnect()>();

     label38:
        l0 = (long) i3;

     label39:
        staticinvoke <com.nexage.android.rules.RuleMgr: void setFetch(long)>(l0);

     label40:
        exitmonitor class "Lcom/nexage/android/rules/RuleMgr;";

        return;

     label41:
        $r11 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label42:
        r6 = $r11;

        goto label25;

     label43:
        $i4 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

     label44:
        if $i4 <= 200 goto label64;

     label45:
        r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <com.nexage.android.rules.Rule: com.nexage.android.rules.Rule fromJson(java.lang.String)>(r1);

     label46:
        if $r12 == null goto label52;

     label47:
        staticinvoke <com.nexage.android.rules.Rule: void set(com.nexage.android.rules.Rule)>($r12);

     label48:
        $r13 = <com.nexage.android.rules.Rule: com.nexage.android.rules.Rule rule>;

     label49:
        $i4 = virtualinvoke $r13.<com.nexage.android.rules.Rule: int timeToLive()>();

     label50:
        i3 = $i4;

        $r29 = new java.lang.StringBuilder;

        r2 = $r29;

     label51:
        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got new rules: next download in ");

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void i(java.lang.String,java.lang.String)>("RULE", $r14);

        $r14 = virtualinvoke $r12.<com.nexage.android.rules.Rule: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void d(java.lang.String,java.lang.String)>("RULE", $r14);

     label52:
        $r15 = <com.nexage.android.rules.RuleMgr: android.content.SharedPreferences preferences>;

     label53:
        $r16 = interfaceinvoke $r15.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label54:
        $l1 = (long) i3;

        l0 = l0 + $l1;

     label55:
        interfaceinvoke $r16.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("com.nexage.NextFetch", l0);

        interfaceinvoke $r16.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("com.nexage.JSonRule", r1);

        interfaceinvoke $r16.<android.content.SharedPreferences$Editor: boolean commit()>();

     label56:
        if r6 == null goto label58;

     label57:
        $r11 = (java.io.InputStream) r6;

        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label58:
        if $r10 == null goto label60;

     label59:
        virtualinvoke $r10.<java.io.OutputStream: void close()>();

     label60:
        if $r9 == null goto label38;

     label61:
        virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>();

     label62:
        goto label38;

     label63:
        $r17 := @caughtexception;

        goto label38;

     label64:
        $r29 = new java.lang.StringBuilder;

        r2 = $r29;

     label65:
        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received empty rule from \'");

        r1 = virtualinvoke r4.<java.net.URL: java.lang.String getHost()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void w(java.lang.String,java.lang.String)>("RULE", r1);

     label66:
        goto label56;

     label67:
        $r18 := @caughtexception;

        if r6 == null goto label69;

     label68:
        $r11 = (java.io.InputStream) r6;

        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label69:
        if r7 == null goto label71;

     label70:
        virtualinvoke r7.<java.io.OutputStream: void close()>();

     label71:
        if r5 == null goto label73;

     label72:
        virtualinvoke r5.<java.net.HttpURLConnection: void disconnect()>();

     label73:
        throw $r18;

     label74:
        $r19 := @caughtexception;

        exitmonitor class "Lcom/nexage/android/rules/RuleMgr;";

        throw $r19;

     label75:
        $r29 = new java.lang.StringBuilder;

        r2 = $r29;

     label76:
        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Download status = ");

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void w(java.lang.String,java.lang.String)>("RULE", r1);

     label77:
        goto label56;

     label78:
        $r20 := @caughtexception;

        goto label58;

     label79:
        $r21 := @caughtexception;

        goto label60;

     label80:
        $r22 := @caughtexception;

        goto label34;

     label81:
        $r23 := @caughtexception;

        goto label36;

     label82:
        $r24 := @caughtexception;

        goto label38;

     label83:
        $r25 := @caughtexception;

        goto label69;

     label84:
        $r26 := @caughtexception;

        goto label71;

     label85:
        $r27 := @caughtexception;

        goto label73;

        catch java.lang.Throwable from label01 to label03 with label74;
        catch java.lang.Exception from label04 to label05 with label30;
        catch java.lang.Exception from label06 to label07 with label30;
        catch java.lang.Exception from label08 to label09 with label30;
        catch java.lang.Exception from label10 to label11 with label30;
        catch java.lang.Exception from label12 to label14 with label30;
        catch java.lang.Exception from label15 to label16 with label30;
        catch java.lang.Exception from label17 to label18 with label30;
        catch java.lang.Exception from label19 to label20 with label30;
        catch java.lang.Exception from label21 to label22 with label30;
        catch java.lang.Exception from label23 to label24 with label30;
        catch java.lang.Exception from label26 to label27 with label30;
        catch java.lang.Exception from label28 to label29 with label30;
        catch java.lang.Throwable from label04 to label29 with label67;
        catch java.lang.Throwable from label31 to label32 with label67;
        catch java.lang.Exception from label33 to label34 with label80;
        catch java.lang.Throwable from label33 to label34 with label74;
        catch java.lang.Exception from label35 to label36 with label81;
        catch java.lang.Throwable from label35 to label36 with label74;
        catch java.lang.Exception from label37 to label38 with label82;
        catch java.lang.Throwable from label37 to label38 with label74;
        catch java.lang.Throwable from label39 to label40 with label74;
        catch java.lang.Exception from label41 to label42 with label30;
        catch java.lang.Exception from label43 to label44 with label30;
        catch java.lang.Exception from label45 to label46 with label30;
        catch java.lang.Exception from label47 to label48 with label30;
        catch java.lang.Exception from label49 to label50 with label30;
        catch java.lang.Exception from label51 to label52 with label30;
        catch java.lang.Exception from label53 to label54 with label30;
        catch java.lang.Exception from label55 to label56 with label30;
        catch java.lang.Throwable from label41 to label56 with label67;
        catch java.lang.Exception from label57 to label58 with label78;
        catch java.lang.Throwable from label57 to label58 with label74;
        catch java.lang.Exception from label59 to label60 with label79;
        catch java.lang.Throwable from label59 to label60 with label74;
        catch java.lang.Exception from label61 to label62 with label63;
        catch java.lang.Throwable from label61 to label62 with label74;
        catch java.lang.Exception from label65 to label66 with label30;
        catch java.lang.Throwable from label64 to label66 with label67;
        catch java.lang.Exception from label68 to label69 with label83;
        catch java.lang.Throwable from label68 to label69 with label74;
        catch java.lang.Exception from label70 to label71 with label84;
        catch java.lang.Throwable from label70 to label71 with label74;
        catch java.lang.Exception from label72 to label73 with label85;
        catch java.lang.Throwable from label72 to label73 with label74;
        catch java.lang.Throwable from label73 to label74 with label74;
        catch java.lang.Exception from label76 to label77 with label30;
        catch java.lang.Throwable from label75 to label77 with label67;
    }

    public static java.lang.StringBuilder getNexageRequestParams()
    {
        java.util.Enumeration $r12;
        com.nexage.android.NexageAdManager$Gender $r8;
        java.util.regex.Matcher $r15;
        int $i0;
        java.lang.Boolean $r9;
        com.nexage.android.NexageAdManager$Ethnicity $r7;
        java.lang.String $r3, $r16;
        java.util.Hashtable $r11;
        boolean $z0;
        double $d0;
        java.util.GregorianCalendar $r5;
        java.lang.CharSequence $r6;
        com.nexage.android.NexageAdManager$MaritalStatus $r10;
        java.lang.Exception r0;
        java.lang.StringBuilder r1, $r2;
        java.lang.Object $r13;
        java.util.regex.Pattern $r14;
        android.location.Location $r4;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dcn");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getDCN()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = staticinvoke <com.nexage.android.NexageContext: java.lang.String getOperator()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "c", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getCn()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "cn", $r3);

     label02:
        $r2 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANDROID ");

     label04:
        $r3 = <android.os.Build$VERSION: java.lang.String RELEASE>;

     label05:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "d(name)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageContext: java.lang.String getMD5Uuid()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "d(id)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageContext: java.lang.String getSHA1IMEI()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "d(id1)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageContext: java.lang.String getSHA1Uuid()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "d(id2)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageContext: java.lang.String getSHA1MAC()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "d(id3)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageContext: java.lang.String getMD5IMEI()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "d(id11)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageContext: java.lang.String getMD5Uuid()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "d(id12)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageContext: java.lang.String getMD5MAC()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "d(id13)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageContext: java.lang.String getMD5Uuid()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(id)", $r3);

        $z0 = staticinvoke <com.nexage.android.NexageAdManager: boolean isTestMode()>();

     label06:
        if $z0 == 0 goto label08;

     label07:
        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "mode", "test");

     label08:
        $r4 = staticinvoke <com.nexage.android.NexageContext: android.location.Location getCoordinates()>();

     label09:
        if $r4 == null goto label11;

        $r2 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $d0 = virtualinvoke $r4.<android.location.Location: double getLatitude()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $d0 = virtualinvoke $r4.<android.location.Location: double getLongitude()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "req(loc)", $r3);

     label11:
        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getRequestAreaCode()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "req(ac)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getRequestKeywords()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "req(keywords)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getRequestPostCode()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "req(zip)", $r3);

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "sdk", "ANDROID");

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "v", "4.0.13");

     label12:
        $r3 = <com.nexage.android.NexageContext: java.lang.String s_UserAgent>;

     label13:
        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "ua", $r3);

        $i0 = staticinvoke <com.nexage.android.NexageAdManager: int getAge()>();

     label14:
        if $i0 <= 0 goto label18;

     label15:
        $i0 = staticinvoke <com.nexage.android.NexageAdManager: int getAge()>();

     label16:
        if $i0 >= 120 goto label18;

        $r2 = new java.lang.StringBuilder;

     label17:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = staticinvoke <com.nexage.android.NexageAdManager: int getAge()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(age)", $r3);

     label18:
        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getCity()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(city)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getCountryCode()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(country)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getDesignatedMarketArea()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(dma)", $r3);

        $r5 = staticinvoke <com.nexage.android.NexageAdManager: java.util.GregorianCalendar getBirthday()>();

     label19:
        if $r5 == null goto label21;

     label20:
        $r5 = staticinvoke <com.nexage.android.NexageAdManager: java.util.GregorianCalendar getBirthday()>();

        $r6 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>("yyyyMMdd", $r5);

        $r3 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(dob)", $r3);

     label21:
        $r7 = staticinvoke <com.nexage.android.NexageAdManager: com.nexage.android.NexageAdManager$Ethnicity getEnthnicity()>();

     label22:
        if $r7 == null goto label24;

        $r2 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r7 = staticinvoke <com.nexage.android.NexageAdManager: com.nexage.android.NexageAdManager$Ethnicity getEnthnicity()>();

        $r3 = virtualinvoke $r7.<com.nexage.android.NexageAdManager$Ethnicity: java.lang.String code()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(eth)", $r3);

     label24:
        $r8 = staticinvoke <com.nexage.android.NexageAdManager: com.nexage.android.NexageAdManager$Gender getGender()>();

     label25:
        if $r8 == null goto label27;

     label26:
        $r8 = staticinvoke <com.nexage.android.NexageAdManager: com.nexage.android.NexageAdManager$Gender getGender()>();

        $r3 = virtualinvoke $r8.<com.nexage.android.NexageAdManager$Gender: java.lang.String code()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(gender)", $r3);

     label27:
        $i0 = staticinvoke <com.nexage.android.NexageAdManager: int getHouseholdIncome()>();

     label28:
        if $i0 <= 0 goto label30;

        $r2 = new java.lang.StringBuilder;

     label29:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = staticinvoke <com.nexage.android.NexageAdManager: int getHouseholdIncome()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(hhi)", $r3);

     label30:
        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getKeywords()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(keywords)", $r3);

     label31:
        $r9 = <com.nexage.android.rules.RuleMgr: java.lang.Boolean s_HasKids>;

        if $r9 == null goto label35;

        $r9 = <com.nexage.android.rules.RuleMgr: java.lang.Boolean s_HasKids>;

     label32:
        $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label33:
        if $z0 == 0 goto label50;

        $r3 = "Y";

     label34:
        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(kids)", $r3);

     label35:
        $r10 = staticinvoke <com.nexage.android.NexageAdManager: com.nexage.android.NexageAdManager$MaritalStatus getMarital()>();

     label36:
        if $r10 == null goto label38;

     label37:
        $r10 = staticinvoke <com.nexage.android.NexageAdManager: com.nexage.android.NexageAdManager$MaritalStatus getMarital()>();

        $r3 = virtualinvoke $r10.<com.nexage.android.NexageAdManager$MaritalStatus: java.lang.String code()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(marital)", $r3);

     label38:
        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getState()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(state)", $r3);

        $r3 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getPostCode()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, "u(zip)", $r3);

        $r11 = staticinvoke <com.nexage.android.NexageAdManager: java.util.Hashtable getExtraParameters()>();

     label39:
        if $r11 == null goto label51;

     label40:
        staticinvoke <com.nexage.android.rules.RuleMgr: java.util.regex.Pattern initPattern()>();

        $r12 = virtualinvoke $r11.<java.util.Hashtable: java.util.Enumeration keys()>();

     label41:
        $z0 = interfaceinvoke $r12.<java.util.Enumeration: boolean hasMoreElements()>();

     label42:
        if $z0 == 0 goto label51;

     label43:
        $r13 = interfaceinvoke $r12.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r3 = (java.lang.String) $r13;

        $r13 = virtualinvoke $r11.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

     label44:
        if $r13 == null goto label41;

        $r14 = <com.nexage.android.rules.RuleMgr: java.util.regex.Pattern s_KeyPattern>;

     label45:
        $r15 = virtualinvoke $r14.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r15.<java.util.regex.Matcher: boolean find()>();

     label46:
        if $z0 == 0 goto label41;

        $r2 = new java.lang.StringBuilder;

     label47:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("p(");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.nexage.android.rules.RuleMgr: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r1, $r3, $r16);

     label48:
        goto label41;

     label49:
        r0 := @caughtexception;

        virtualinvoke r0.<java.lang.Exception: void printStackTrace()>();

        return r1;

     label50:
        $r3 = "N";

        goto label34;

     label51:
        return r1;

        catch java.lang.Exception from label01 to label02 with label49;
        catch java.lang.Exception from label03 to label04 with label49;
        catch java.lang.Exception from label05 to label06 with label49;
        catch java.lang.Exception from label07 to label09 with label49;
        catch java.lang.Exception from label10 to label12 with label49;
        catch java.lang.Exception from label13 to label14 with label49;
        catch java.lang.Exception from label15 to label16 with label49;
        catch java.lang.Exception from label17 to label19 with label49;
        catch java.lang.Exception from label20 to label22 with label49;
        catch java.lang.Exception from label23 to label25 with label49;
        catch java.lang.Exception from label26 to label28 with label49;
        catch java.lang.Exception from label29 to label31 with label49;
        catch java.lang.Exception from label32 to label33 with label49;
        catch java.lang.Exception from label34 to label36 with label49;
        catch java.lang.Exception from label37 to label39 with label49;
        catch java.lang.Exception from label40 to label42 with label49;
        catch java.lang.Exception from label43 to label44 with label49;
        catch java.lang.Exception from label45 to label46 with label49;
        catch java.lang.Exception from label47 to label48 with label49;
    }

    private static java.lang.String getRuleRequestServlet()
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getMediationURL()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/adRules");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.util.regex.Pattern initPattern()
    {
        java.lang.Throwable $r1;
        java.util.regex.Pattern $r0;

        entermonitor class "Lcom/nexage/android/rules/RuleMgr;";

     label1:
        $r0 = <com.nexage.android.rules.RuleMgr: java.util.regex.Pattern s_KeyPattern>;

        if $r0 != null goto label2;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\w+$");

        <com.nexage.android.rules.RuleMgr: java.util.regex.Pattern s_KeyPattern> = $r0;

     label2:
        $r0 = <com.nexage.android.rules.RuleMgr: java.util.regex.Pattern s_KeyPattern>;

     label3:
        exitmonitor class "Lcom/nexage/android/rules/RuleMgr;";

        return $r0;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/nexage/android/rules/RuleMgr;";

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private static void loadCookies()
    {
        android.webkit.CookieSyncManager $r0;
        android.webkit.CookieManager $r1;

        $r0 = <com.nexage.android.rules.RuleMgr: android.webkit.CookieSyncManager s_SyncMgr>;

        if $r0 == null goto label1;

        return;

     label1:
        $r0 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

        <com.nexage.android.rules.RuleMgr: android.webkit.CookieSyncManager s_SyncMgr> = $r0;

        $r0 = <com.nexage.android.rules.RuleMgr: android.webkit.CookieSyncManager s_SyncMgr>;

        virtualinvoke $r0.<android.webkit.CookieSyncManager: void sync()>();

        $r1 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        virtualinvoke $r1.<android.webkit.CookieManager: void setAcceptCookie(boolean)>(1);

        return;
    }

    public static void saveCookies(java.net.HttpURLConnection, java.lang.String)
    {
        java.net.HttpURLConnection $r0;
        java.util.Iterator $r7;
        java.lang.Exception $r10;
        java.util.List r4;
        android.webkit.CookieManager $r6;
        java.util.Map r2, $r3;
        int $i0;
        android.webkit.CookieSyncManager $r9;
        java.lang.Object $r5;
        java.lang.String $r1, $r8;
        boolean $z0;

        $r0 := @parameter0: java.net.HttpURLConnection;

        $r1 := @parameter1: java.lang.String;

        r2 = null;

     label1:
        $r3 = virtualinvoke $r0.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

     label2:
        r2 = $r3;

     label3:
        r4 = null;

        if r2 == null goto label4;

        $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("set-cookie");

        r4 = (java.util.List) $r5;

     label4:
        if r4 == null goto label5;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 != 0 goto label6;

     label5:
        staticinvoke <com.nexage.android.NexageLog: void v(java.lang.String,java.lang.String)>($r1, "Did not receive any COOKIE from the Server");

        return;

     label6:
        $r6 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        $r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r5;

        $r8 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getMediationURL()>();

        virtualinvoke $r6.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r8, $r1);

        goto label7;

     label8:
        $r9 = <com.nexage.android.rules.RuleMgr: android.webkit.CookieSyncManager s_SyncMgr>;

        virtualinvoke $r9.<android.webkit.CookieSyncManager: void sync()>();

        return;

     label9:
        $r10 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label9;
    }

    public static void setCookies(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r0;
        android.webkit.CookieManager $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @parameter0: java.net.HttpURLConnection;

        $r1 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        virtualinvoke $r1.<android.webkit.CookieManager: void removeExpiredCookie()>();

        $r2 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getMediationURL()>();

        $r2 = virtualinvoke $r1.<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>($r2);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke $r0.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Cookie", $r2);

     label1:
        return;
    }

    private static void setFetch(long)
    {
        java.lang.Throwable $r2;
        com.nexage.android.rules.RuleMgr$1 r0;
        long $l0;
        java.util.Timer $r1;

        $l0 := @parameter0: long;

        entermonitor class "Lcom/nexage/android/rules/RuleMgr;";

     label1:
        r0 = new com.nexage.android.rules.RuleMgr$1;

        specialinvoke r0.<com.nexage.android.rules.RuleMgr$1: void <init>()>();

        $r1 = new java.util.Timer;

        specialinvoke $r1.<java.util.Timer: void <init>()>();

        virtualinvoke $r1.<java.util.Timer: void schedule(java.util.TimerTask,long)>(r0, $l0);

     label2:
        exitmonitor class "Lcom/nexage/android/rules/RuleMgr;";

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/nexage/android/rules/RuleMgr;";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void start(android.content.Context)
    {
        java.lang.Throwable $r7;
        android.content.Context $r0;
        long $l0, $l2;
        com.nexage.android.rules.Rule $r4;
        java.lang.Exception r1;
        android.content.SharedPreferences $r2;
        byte $b3;
        int $i1;
        java.lang.StringBuilder $r6, $r8;
        java.lang.String $r3, $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/nexage/android/rules/RuleMgr;";

     label01:
        $r2 = <com.nexage.android.rules.RuleMgr: android.content.SharedPreferences preferences>;

        if $r2 != null goto label11;

        staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>($r0);

        staticinvoke <com.nexage.android.rules.RuleMgr: void loadCookies()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.nexage.AdMaxRule", 0);

        <com.nexage.android.rules.RuleMgr: android.content.SharedPreferences preferences> = $r2;

        $r2 = <com.nexage.android.rules.RuleMgr: android.content.SharedPreferences preferences>;

        $l0 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("com.nexage.NextFetch", 0L);

        <com.nexage.android.rules.RuleMgr: long nextFetch> = $l0;

        $r2 = <com.nexage.android.rules.RuleMgr: android.content.SharedPreferences preferences>;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("com.nexage.JSonRule", "");

        <com.nexage.android.rules.RuleMgr: java.lang.String jSonRule> = $r3;

        $r3 = <com.nexage.android.rules.RuleMgr: java.lang.String jSonRule>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

     label02:
        if $i1 <= 0 goto label08;

     label03:
        $r3 = <com.nexage.android.rules.RuleMgr: java.lang.String jSonRule>;

     label04:
        $r4 = staticinvoke <com.nexage.android.rules.Rule: com.nexage.android.rules.Rule fromJson(java.lang.String)>($r3);

     label05:
        if $r4 == null goto label08;

     label06:
        $r3 = virtualinvoke $r4.<com.nexage.android.rules.Rule: java.lang.String getDCN()>();

        $r5 = staticinvoke <com.nexage.android.NexageAdManager: java.lang.String getDCN()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label07:
        if $z0 != 0 goto label12;

        <com.nexage.android.rules.RuleMgr: long nextFetch> = 0L;

     label08:
        $l0 = <com.nexage.android.rules.RuleMgr: long nextFetch>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 - $l2;

        $l2 = 1000L;

        $r4 = <com.nexage.android.rules.Rule: com.nexage.android.rules.Rule rule>;

        if $r4 != null goto label09;

        $l2 = 1L;

     label09:
        $b3 = $l0 cmp $l2;

        $i1 = (int) $b3;

        if $i1 >= 0 goto label10;

        $l0 = $l2;

     label10:
        staticinvoke <com.nexage.android.rules.RuleMgr: void setFetch(long)>($l0);

     label11:
        exitmonitor class "Lcom/nexage/android/rules/RuleMgr;";

        return;

     label12:
        staticinvoke <com.nexage.android.rules.Rule: void set(com.nexage.android.rules.Rule)>($r4);

     label13:
        goto label08;

     label14:
        r1 := @caughtexception;

     label15:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rule parse exception: ");

        $r3 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r3 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void w(java.lang.String,java.lang.String)>("RULE", $r3);

     label16:
        goto label08;

     label17:
        $r7 := @caughtexception;

        exitmonitor class "Lcom/nexage/android/rules/RuleMgr;";

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Throwable from label03 to label08 with label17;
        catch java.lang.Throwable from label08 to label11 with label17;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }
}
