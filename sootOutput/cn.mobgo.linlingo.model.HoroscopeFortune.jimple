public class cn.mobgo.linlingo.model.HoroscopeFortune extends java.lang.Object
{
    private static final java.lang.String KEY_MONTH;
    private static final java.lang.String KEY_MONTHS;
    private static final java.lang.String KEY_YEAR;
    private static final int[] LUNAR_MONTH_DAYS;
    public int index;
    public java.lang.String monthFortune;
    public java.lang.String yearFortune;

    static void <clinit>()
    {
        int[] $r0;

        <cn.mobgo.linlingo.model.HoroscopeFortune: java.lang.String KEY_YEAR> = "y";

        <cn.mobgo.linlingo.model.HoroscopeFortune: java.lang.String KEY_MONTHS> = "m";

        <cn.mobgo.linlingo.model.HoroscopeFortune: java.lang.String KEY_MONTH> = "d";

        $r0 = newarray (int)[12];

        $r0[0] = 30;

        $r0[1] = 29;

        $r0[2] = 30;

        $r0[3] = 29;

        $r0[4] = 30;

        $r0[5] = 29;

        $r0[6] = 29;

        $r0[7] = 30;

        $r0[8] = 29;

        $r0[9] = 30;

        $r0[10] = 29;

        $r0[11] = 30;

        <cn.mobgo.linlingo.model.HoroscopeFortune: int[] LUNAR_MONTH_DAYS> = $r0;

        return;
    }

    public void <init>()
    {
        cn.mobgo.linlingo.model.HoroscopeFortune r0;

        r0 := @this: cn.mobgo.linlingo.model.HoroscopeFortune;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static cn.mobgo.linlingo.model.HoroscopeFortune fromJson(org.json.JSONObject)
    {
        cn.mobgo.linlingo.model.HoroscopeFortune r1, $r7;
        org.json.JSONException $r6;
        org.json.JSONObject $r0;
        java.util.Calendar $r4;
        int[] $r5;
        int $i0, i1, $i2;
        java.lang.String $r2;
        org.json.JSONArray $r3;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r7 = new cn.mobgo.linlingo.model.HoroscopeFortune;

        r1 = $r7;

     label01:
        specialinvoke $r7.<cn.mobgo.linlingo.model.HoroscopeFortune: void <init>()>();

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("y");

     label02:
        if $z0 == 0 goto label05;

     label03:
        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("y");

     label04:
        r1.<cn.mobgo.linlingo.model.HoroscopeFortune: java.lang.String yearFortune> = $r2;

     label05:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("m");

     label06:
        if $z0 == 0 goto label16;

     label07:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("m");

        $i0 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

     label08:
        if $i0 != 12 goto label16;

     label09:
        $r4 = staticinvoke <java.util.GregorianCalendar: java.util.Calendar getInstance()>();

        $i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(6);

     label10:
        $i0 = $i0 + -45;

        i1 = 0;

     label11:
        $r5 = <cn.mobgo.linlingo.model.HoroscopeFortune: int[] LUNAR_MONTH_DAYS>;

        $i2 = $r5[i1];

        if $i2 >= $i0 goto label12;

        if i1 >= 12 goto label12;

        $r5 = <cn.mobgo.linlingo.model.HoroscopeFortune: int[] LUNAR_MONTH_DAYS>;

        $i2 = $r5[i1];

        $i0 = $i0 - $i2;

        i1 = i1 + 1;

        goto label11;

     label12:
        $r0 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i1);

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("d");

     label13:
        if $z0 == 0 goto label16;

     label14:
        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("d");

     label15:
        r1.<cn.mobgo.linlingo.model.HoroscopeFortune: java.lang.String monthFortune> = $r2;

     label16:
        return r1;

     label17:
        $r6 := @caughtexception;

        return null;

        catch org.json.JSONException from label01 to label02 with label17;
        catch org.json.JSONException from label03 to label04 with label17;
        catch org.json.JSONException from label05 to label06 with label17;
        catch org.json.JSONException from label07 to label08 with label17;
        catch org.json.JSONException from label09 to label10 with label17;
        catch org.json.JSONException from label12 to label13 with label17;
        catch org.json.JSONException from label14 to label15 with label17;
    }
}
