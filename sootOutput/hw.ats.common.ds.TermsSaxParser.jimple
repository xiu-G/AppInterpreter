public class hw.ats.common.ds.TermsSaxParser extends hw.ats.common.ds.BaseParser
{
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Lhw/ats/common/ds/TermsSaxParser;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <hw.ats.common.ds.TermsSaxParser: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.StringBuilder $r3;
        hw.ats.common.ds.TermsSaxParser r0;
        java.lang.String $r1, $r2;

        r0 := @this: hw.ats.common.ds.TermsSaxParser;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<hw.ats.common.ds.BaseParser: void <init>(java.lang.String)>($r1);

        $r2 = <hw.ats.common.ds.TermsSaxParser: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r1);

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String r0;

        r0 = <hw.ats.common.ds.TermsSaxParser: java.lang.String TAG>;

        return r0;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r7;
        java.util.Iterator $r4;
        hw.ats.common.model.Term r6;
        java.lang.String[] $r0;
        java.util.List $r3;
        java.lang.Object $r5;
        hw.ats.common.ds.TermsSaxParser r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        r1 = new hw.ats.common.ds.TermsSaxParser;

        specialinvoke r1.<hw.ats.common.ds.TermsSaxParser: void <init>(java.lang.String)>("http://api.allthatfactory.com/otaku/openapi/standalone/terms");

        $r3 = virtualinvoke r1.<hw.ats.common.ds.TermsSaxParser: java.util.List parse()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (hw.ats.common.model.Term) $r5;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r2 = r6.<hw.ats.common.model.Term: java.lang.String keyword>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r2);

        goto label1;

     label2:
        return;
    }

    public java.util.List parse()
    {
        android.sax.Element $r4;
        android.sax.RootElement r3;
        hw.ats.common.model.Term r1;
        java.lang.RuntimeException $r10;
        java.lang.Exception $r9;
        java.util.ArrayList r2;
        android.util.Xml$Encoding $r7;
        hw.ats.common.ds.TermsSaxParser r0;
        org.xml.sax.ContentHandler $r8;
        hw.ats.common.ds.TermsSaxParser$1 $r5;
        java.io.InputStream $r6;

        r0 := @this: hw.ats.common.ds.TermsSaxParser;

        r3 = new android.sax.RootElement;

        specialinvoke r3.<android.sax.RootElement: void <init>(java.lang.String)>("response");

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r3.<android.sax.RootElement: android.sax.Element getChild(java.lang.String)>("terms");

        r1 = new hw.ats.common.model.Term;

        specialinvoke r1.<hw.ats.common.model.Term: void <init>()>();

        $r4 = virtualinvoke $r4.<android.sax.Element: android.sax.Element getChild(java.lang.String)>("term");

        $r5 = new hw.ats.common.ds.TermsSaxParser$1;

        specialinvoke $r5.<hw.ats.common.ds.TermsSaxParser$1: void <init>(hw.ats.common.ds.TermsSaxParser,hw.ats.common.model.Term,java.util.List)>(r0, r1, r2);

        virtualinvoke $r4.<android.sax.Element: void setTextElementListener(android.sax.TextElementListener)>($r5);

     label1:
        $r6 = virtualinvoke r0.<hw.ats.common.ds.TermsSaxParser: java.io.InputStream getInputStream()>();

     label2:
        $r7 = <android.util.Xml$Encoding: android.util.Xml$Encoding UTF_8>;

     label3:
        $r8 = virtualinvoke r3.<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()>();

        staticinvoke <android.util.Xml: void parse(java.io.InputStream,android.util.Xml$Encoding,org.xml.sax.ContentHandler)>($r6, $r7, $r8);

     label4:
        return r2;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
