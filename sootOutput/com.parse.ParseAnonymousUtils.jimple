public final class com.parse.ParseAnonymousUtils extends java.lang.Object
{
    static final java.lang.String ANONYMOUS_AUTH_TYPE;
    private static com.parse.auth.AnonymousAuthenticationProvider provider;

    static void <clinit>()
    {
        <com.parse.ParseAnonymousUtils: java.lang.String ANONYMOUS_AUTH_TYPE> = "anonymous";

        staticinvoke <com.parse.ParseAnonymousUtils: void initialize()>();

        return;
    }

    private void <init>()
    {
        com.parse.ParseAnonymousUtils r0;

        r0 := @this: com.parse.ParseAnonymousUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void initialize()
    {
        com.parse.auth.AnonymousAuthenticationProvider $r0;

        $r0 = <com.parse.ParseAnonymousUtils: com.parse.auth.AnonymousAuthenticationProvider provider>;

        if $r0 != null goto label1;

        $r0 = new com.parse.auth.AnonymousAuthenticationProvider;

        specialinvoke $r0.<com.parse.auth.AnonymousAuthenticationProvider: void <init>()>();

        <com.parse.ParseAnonymousUtils: com.parse.auth.AnonymousAuthenticationProvider provider> = $r0;

        staticinvoke <com.parse.ParseUser: void registerAuthenticationProvider(com.parse.auth.ParseAuthenticationProvider)>($r0);

     label1:
        return;
    }

    public static boolean isLinked(com.parse.ParseUser)
    {
        java.util.Set $r1;
        com.parse.ParseUser $r0;
        boolean $z0;

        $r0 := @parameter0: com.parse.ParseUser;

        $r1 = virtualinvoke $r0.<com.parse.ParseUser: java.util.Set getLinkedServiceNames()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>("anonymous");

        return $z0;
    }

    static void lazyLogIn()
    {
        com.parse.auth.AnonymousAuthenticationProvider $r0;
        org.json.JSONException $r3;
        org.json.JSONObject $r2;
        java.lang.RuntimeException $r4;

        $r0 = <com.parse.ParseAnonymousUtils: com.parse.auth.AnonymousAuthenticationProvider provider>;

     label1:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_org_json_JSONException_4()>();

     label2:
        $r0 = <com.parse.ParseAnonymousUtils: com.parse.auth.AnonymousAuthenticationProvider provider>;

     label3:
        $r2 = virtualinvoke $r0.<com.parse.auth.AnonymousAuthenticationProvider: org.json.JSONObject getAuthData()>();

        staticinvoke <com.parse.ParseUser: com.parse.ParseUser logInLazyUser(java.lang.String,org.json.JSONObject)>("anonymous", $r2);

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    public static void logIn(com.parse.LogInCallback)
    {
        com.parse.LogInCallback $r0;
        com.parse.auth.AnonymousAuthenticationProvider $r2;
        java.lang.String $r1;

        $r0 := @parameter0: com.parse.LogInCallback;

        $r2 = <com.parse.ParseAnonymousUtils: com.parse.auth.AnonymousAuthenticationProvider provider>;

        $r1 = virtualinvoke $r2.<com.parse.auth.AnonymousAuthenticationProvider: java.lang.String getAuthType()>();

        staticinvoke <com.parse.ParseUser: void logInWith(java.lang.String,com.parse.LogInCallback)>($r1, $r0);

        return;
    }
}
