public final class com.kingroot.sdk.ge extends java.lang.Object
{

    public static byte[] W(java.lang.String)
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r2;
        int $i0;
        java.lang.String $r0;
        java.io.FileInputStream $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

        $r2 = new java.io.ByteArrayOutputStream;

        $i0 = virtualinvoke $r1.<java.io.FileInputStream: int available()>();

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        $r3 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r1.<java.io.FileInputStream: int read(byte[])>($r3);

        if $i0 >= 0 goto label2;

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

        virtualinvoke $r1.<java.io.FileInputStream: void close()>();

        if $r3 == null goto label3;

        return $r3;

     label2:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i0);

        goto label1;

     label3:
        $r0 = "";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        return $r3;
    }

    public static void a(byte[], java.lang.String)
    {
        byte[] $r0;
        java.io.FileOutputStream $r2;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>($r1, 0);

        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>($r0);

        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

        return;
    }

    public static java.lang.String c(byte[])
    {
        byte[] $r0;
        char $c3;
        byte $b2;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return "";

     label1:
        $r3 = new java.lang.StringBuilder;

        $r1 = $r3;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label3;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $b2 = $r0[$i0];

        $r2 = "0123456789abcdef";

        $i1 = (int) $b2;

        $i1 = $i1 >> 4;

        $i1 = $i1 & 15;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r2 = "0123456789abcdef";

        $b2 = $b2 & 15;

        $i1 = (int) $b2;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i0 = $i0 + 1;

        goto label2;
    }

    public static long f(java.io.File)
    {
        java.lang.Throwable $r1, $r6, $r7, $r8;
        byte[] $r4;
        long $l1;
        java.io.FileInputStream $r3, $r11;
        java.io.File $r0;
        java.lang.Exception $r5, $r9;
        int $i0;
        java.util.zip.CRC32 $r2, $r10;

        $r0 := @parameter0: java.io.File;

     label01:
        $r10 = new java.util.zip.CRC32;

     label02:
        $r2 = $r10;

     label03:
        specialinvoke $r10.<java.util.zip.CRC32: void <init>()>();

     label04:
        $r11 = new java.io.FileInputStream;

     label05:
        $r3 = $r11;

     label06:
        specialinvoke $r11.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

     label07:
        $r4 = newarray (byte)[8192];

     label08:
        $i0 = virtualinvoke $r3.<java.io.FileInputStream: int read(byte[])>($r4);

     label09:
        if $i0 != -1 goto label13;

     label10:
        $l1 = virtualinvoke $r2.<java.util.zip.CRC32: long getValue()>();

     label11:
        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

     label12:
        return $l1;

     label13:
        virtualinvoke $r2.<java.util.zip.CRC32: void update(byte[],int,int)>($r4, 0, $i0);

     label14:
        goto label08;

     label15:
        $r5 := @caughtexception;

     label16:
        if $r3 == null goto label28;

     label17:
        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

     label18:
        return 0L;

     label19:
        $r6 := @caughtexception;

        return 0L;

     label20:
        $r7 := @caughtexception;

        $r3 = null;

     label21:
        if $r3 == null goto label23;

     label22:
        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

     label23:
        throw $r7;

     label24:
        $r1 := @caughtexception;

        goto label23;

     label25:
        $r8 := @caughtexception;

        return $l1;

     label26:
        $r7 := @caughtexception;

        goto label21;

     label27:
        $r9 := @caughtexception;

        $r3 = null;

        goto label16;

     label28:
        return 0L;

        catch java.lang.Exception from label03 to label04 with label27;
        catch java.lang.Exception from label06 to label07 with label27;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.io.IOException from label11 to label12 with label25;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label26;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label22 to label23 with label24;
    }

    public static java.lang.String g(java.io.File)
    {
        java.lang.Throwable $r6, $r7, $r8, $r9;
        byte[] $r3;
        java.security.MessageDigest $r1;
        java.io.FileInputStream $r2, $r10;
        java.io.File $r0;
        java.lang.Exception $r5;
        int $i0;
        java.lang.String $r4;

        $r0 := @parameter0: java.io.File;

     label01:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label02:
        $r10 = new java.io.FileInputStream;

     label03:
        $r2 = $r10;

     label04:
        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

     label05:
        $r3 = newarray (byte)[8192];

     label06:
        $i0 = virtualinvoke $r2.<java.io.FileInputStream: int read(byte[])>($r3);

     label07:
        if $i0 != -1 goto label11;

     label08:
        $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r4 = staticinvoke <com.kingroot.sdk.ge: java.lang.String c(byte[])>($r3);

     label09:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label10:
        return $r4;

     label11:
        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r3, 0, $i0);

     label12:
        goto label06;

     label13:
        $r5 := @caughtexception;

     label14:
        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

     label15:
        if $r2 == null goto label27;

     label16:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label17:
        return "";

     label18:
        $r6 := @caughtexception;

        return "";

     label19:
        $r7 := @caughtexception;

        $r2 = null;

     label20:
        if $r2 == null goto label22;

     label21:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label22:
        throw $r7;

     label23:
        $r8 := @caughtexception;

        goto label22;

     label24:
        $r9 := @caughtexception;

        return $r4;

     label25:
        $r7 := @caughtexception;

        goto label20;

     label26:
        $r5 := @caughtexception;

        $r2 = null;

        goto label14;

     label27:
        return "";

        catch java.lang.Exception from label01 to label02 with label26;
        catch java.lang.Exception from label04 to label05 with label26;
        catch java.lang.Throwable from label01 to label03 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.io.IOException from label09 to label10 with label24;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.io.IOException from label21 to label22 with label23;
    }

    public static boolean k(java.io.File)
    {
        java.io.File $r0, $r2;
        java.lang.NullPointerException $r1;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        if $r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("File must not be null");

        throw $r1;

     label1:
        $r2 = virtualinvoke $r0.<java.io.File: java.io.File getCanonicalFile()>();

        $r0 = virtualinvoke $r0.<java.io.File: java.io.File getAbsoluteFile()>();

        $z0 = virtualinvoke $r2.<java.io.File: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }
}
