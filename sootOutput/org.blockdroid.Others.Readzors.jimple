public class org.blockdroid.Others.Readzors extends android.app.Activity
{
    static java.lang.String[][] chars;
    static java.lang.String[] comma;
    static java.lang.String[] eight;
    static java.lang.String[] five;
    static java.lang.String[] four;
    static java.lang.String[] line;
    static java.lang.String newTel;
    static java.lang.String[] nine;
    static java.lang.String[] one;
    static java.lang.String[] plus;
    static java.lang.String[] seven;
    static java.lang.String[] six;
    static java.lang.String[] three;
    static java.lang.String[] two;
    private static int whitePixel;
    static java.lang.String[] zero;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.lang.String[][] $r1;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "01111110";

        $r0[1] = "11111110";

        $r0[2] = "11101111";

        $r0[3] = "11101111";

        $r0[4] = "11101111";

        $r0[5] = "11101111";

        $r0[6] = "11101111";

        $r0[7] = "11111110";

        $r0[8] = "11111110";

        $r0[9] = "00000000";

        $r0[10] = "00000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] zero> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "111100";

        $r0[1] = "111100";

        $r0[2] = "111100";

        $r0[3] = "011100";

        $r0[4] = "011100";

        $r0[5] = "011100";

        $r0[6] = "011100";

        $r0[7] = "111111";

        $r0[8] = "111111";

        $r0[9] = "000000";

        $r0[10] = "000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] one> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "1111110";

        $r0[1] = "1111111";

        $r0[2] = "0001111";

        $r0[3] = "0001111";

        $r0[4] = "0001110";

        $r0[5] = "0011110";

        $r0[6] = "1111100";

        $r0[7] = "1111111";

        $r0[8] = "1111111";

        $r0[9] = "0000000";

        $r0[10] = "0000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] two> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "1111111";

        $r0[1] = "1111111";

        $r0[2] = "0000111";

        $r0[3] = "0011111";

        $r0[4] = "0011111";

        $r0[5] = "0001111";

        $r0[6] = "1100111";

        $r0[7] = "1111111";

        $r0[8] = "1111111";

        $r0[9] = "0000000";

        $r0[10] = "0000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] three> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "00011110";

        $r0[1] = "00111110";

        $r0[2] = "01111110";

        $r0[3] = "01111110";

        $r0[4] = "11101110";

        $r0[5] = "11111111";

        $r0[6] = "11111111";

        $r0[7] = "00001110";

        $r0[8] = "00001110";

        $r0[9] = "00000000";

        $r0[10] = "00000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] four> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "1111111";

        $r0[1] = "1111111";

        $r0[2] = "1110000";

        $r0[3] = "1111110";

        $r0[4] = "1111111";

        $r0[5] = "0001111";

        $r0[6] = "1001111";

        $r0[7] = "1111110";

        $r0[8] = "1111110";

        $r0[9] = "0000000";

        $r0[10] = "0000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] five> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "0111110";

        $r0[1] = "1111110";

        $r0[2] = "1111110";

        $r0[3] = "1111111";

        $r0[4] = "1111111";

        $r0[5] = "1110111";

        $r0[6] = "1110111";

        $r0[7] = "1111111";

        $r0[8] = "0111111";

        $r0[9] = "0000000";

        $r0[10] = "0000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] six> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "1111111";

        $r0[1] = "1111111";

        $r0[2] = "0001111";

        $r0[3] = "0001111";

        $r0[4] = "0011110";

        $r0[5] = "0011110";

        $r0[6] = "0111100";

        $r0[7] = "0111000";

        $r0[8] = "1111000";

        $r0[9] = "0000000";

        $r0[10] = "0000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] seven> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "11111110";

        $r0[1] = "11111111";

        $r0[2] = "11101111";

        $r0[3] = "11111110";

        $r0[4] = "11111110";

        $r0[5] = "11111111";

        $r0[6] = "11101111";

        $r0[7] = "11111111";

        $r0[8] = "11111110";

        $r0[9] = "00000000";

        $r0[10] = "00000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] eight> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "1111110";

        $r0[1] = "1111111";

        $r0[2] = "1110111";

        $r0[3] = "1110111";

        $r0[4] = "1111111";

        $r0[5] = "1111111";

        $r0[6] = "0111111";

        $r0[7] = "0111111";

        $r0[8] = "0111110";

        $r0[9] = "0000000";

        $r0[10] = "0000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] nine> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "0000";

        $r0[1] = "0000";

        $r0[2] = "0000";

        $r0[3] = "0000";

        $r0[4] = "1111";

        $r0[5] = "1111";

        $r0[6] = "0000";

        $r0[7] = "0000";

        $r0[8] = "0000";

        $r0[9] = "0000";

        $r0[10] = "0000";

        <org.blockdroid.Others.Readzors: java.lang.String[] line> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "0000";

        $r0[1] = "0000";

        $r0[2] = "0000";

        $r0[3] = "0000";

        $r0[4] = "0000";

        $r0[5] = "0000";

        $r0[6] = "0111";

        $r0[7] = "1111";

        $r0[8] = "1110";

        $r0[9] = "1110";

        $r0[10] = "1100";

        <org.blockdroid.Others.Readzors: java.lang.String[] comma> = $r0;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "00000000";

        $r0[1] = "00111000";

        $r0[2] = "00111000";

        $r0[3] = "00111000";

        $r0[4] = "11111111";

        $r0[5] = "11111111";

        $r0[6] = "00111000";

        $r0[7] = "00111000";

        $r0[8] = "00111000";

        $r0[9] = "00000000";

        $r0[10] = "00000000";

        <org.blockdroid.Others.Readzors: java.lang.String[] plus> = $r0;

        $r1 = newarray (java.lang.String[])[13];

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] zero>;

        $r1[0] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] one>;

        $r1[1] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] two>;

        $r1[2] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] three>;

        $r1[3] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] four>;

        $r1[4] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] five>;

        $r1[5] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] six>;

        $r1[6] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] seven>;

        $r1[7] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] eight>;

        $r1[8] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] nine>;

        $r1[9] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] comma>;

        $r1[10] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] line>;

        $r1[11] = $r0;

        $r0 = <org.blockdroid.Others.Readzors: java.lang.String[] plus>;

        $r1[12] = $r0;

        <org.blockdroid.Others.Readzors: java.lang.String[][] chars> = $r1;

        <org.blockdroid.Others.Readzors: java.lang.String newTel> = ",\n";

        return;
    }

    public void <init>()
    {
        org.blockdroid.Others.Readzors r0;

        r0 := @this: org.blockdroid.Others.Readzors;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        return;
    }

    private static java.lang.String checkStringForMissPlacedLine(java.lang.String)
    {
        int $i0, $i1;
        java.lang.StringBuilder r1, $r4;
        java.lang.String[] $r3;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",\n");

        $r4 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("sb", $r2);

        $r4 = new java.lang.StringBuilder;

        $i0 = lengthof $r3;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("tmp", $r2);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = lengthof $r3;

        $i0 = $i0 / $i1;

        if $i0 <= 12 goto label5;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("READZORS", "FIRST LEVEL");

        $i0 = 0;

     label1:
        $i1 = lengthof $r3;

        if $i0 < $i1 goto label2;

        $r0 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("READZORS", "SECOND LEVEL");

        $r0 = $r3[$i0];

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 <= 15 goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("READZORS", "THIRD LEVEL");

        $r0 = $r3[$i0];

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(7, 15);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("-", ",\n");

        $r2 = $r3[$i0];

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = $r3[$i0];

        $r2 = $r3[$i0];

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(15, $i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r0 = $r3[$i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        goto label3;

     label5:
        return $r0;
    }

    private static java.lang.String checkStringForMissPlacedSpace(java.lang.String)
    {
        int i0, i1, $i2;
        java.lang.StringBuilder r0;
        java.lang.String[] $r2;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(",\n,\n", ",\n");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",\n");

        i0 = lengthof $r2;

        if i0 != 1 goto label1;

        return $r1;

     label1:
        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = $r2[0];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        i1 = 1;

     label2:
        if i1 < i0 goto label3;

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label3:
        $r1 = $r2[i1];

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 >= 6 goto label5;

        $r1 = $r2[i1];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\n");

        $r1 = $r2[i1];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label4;
    }

    private static int[][] commaQuickFix(int[][], int)
    {
        int[][] $r0, r6;
        java.lang.String[] $r1;
        int[] $r3, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Class $r4;
        java.lang.Object $r5;
        java.lang.String $r2;

        $r0 := @parameter0: int[][];

        $i0 := @parameter1: int;

        $r1 = <org.blockdroid.Others.Readzors: java.lang.String[] comma>;

        $r2 = $r1[0];

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = $r0[0];

        $i2 = lengthof $r3;

        $r3 = newarray (int)[2];

        $r3[0] = $i1;

        $r3[1] = $i2;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r4, $r3);

        r6 = (int[][]) $r5;

        $i2 = 0;

     label1:
        $r3 = $r0[0];

        $i3 = lengthof $r3;

        if $i2 < $i3 goto label2;

        return r6;

     label2:
        $i3 = $i0 - $i1;

     label3:
        if $i3 < $i0 goto label4;

        $i2 = $i2 + 1;

        goto label1;

     label4:
        $i4 = $i0 - $i1;

        $i4 = $i3 - $i4;

        $r3 = r6[$i4];

        $r7 = $r0[$i3];

        $i4 = $r7[$i2];

        $r3[$i2] = $i4;

        $i3 = $i3 + 1;

        goto label3;
    }

    static java.lang.String compare_char_procent(int[][], int)
    {
        int[][] r0, $r1;
        java.lang.String[] $r2;
        byte b4;
        int[] $r8;
        int $i0, $i1, $i2, i3, $i5, $i7;
        java.lang.String $r3, $r4;
        boolean $z0;
        double d0, d1;
        java.io.PrintStream r7;
        char $c6;
        java.lang.StringBuilder r5, $r9;
        java.lang.String[][] r6;

        r0 := @parameter0: int[][];

        $i0 := @parameter1: int;

        if $i0 <= 10 goto label02;

        $r1 = staticinvoke <org.blockdroid.Others.Readzors: int[][] commaQuickFix(int[][],int)>(r0, $i0);

        $r2 = <org.blockdroid.Others.Readzors: java.lang.String[] comma>;

        $r3 = $r2[0];

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r3 = staticinvoke <org.blockdroid.Others.Readzors: java.lang.String compare_char_procent(int[][],int)>($r1, $i1);

        $r4 = <org.blockdroid.Others.Readzors: java.lang.String newTel>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label01;

        $r2 = <org.blockdroid.Others.Readzors: java.lang.String[] comma>;

        $r3 = $r2[0];

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        $r9 = new java.lang.StringBuilder;

        $r3 = staticinvoke <org.blockdroid.Others.Readzors: java.lang.String compare_char_procent(int[][],int)>(r0, $i0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = <org.blockdroid.Others.Readzors: java.lang.String newTel>;

        r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label01:
        $r9 = new java.lang.StringBuilder;

        r0 = staticinvoke <org.blockdroid.Others.Readzors: int[][] numberFourQuickFix(int[][])>(r0);

        $r2 = <org.blockdroid.Others.Readzors: java.lang.String[] four>;

        $r3 = $r2[0];

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        $r3 = staticinvoke <org.blockdroid.Others.Readzors: java.lang.String compare_char_procent(int[][],int)>(r0, $i0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("4");

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label02:
        $i1 = 12;

     label03:
        if $i1 >= 0 goto label04;

        return " ";

     label04:
        d0 = 0.0;

        d1 = 0.0;

        r6 = <org.blockdroid.Others.Readzors: java.lang.String[][] chars>;

        $r2 = r6[$i1];

        $r3 = $r2[0];

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == $i2 goto label06;

     label05:
        $i1 = $i1 + -1;

        goto label03;

     label06:
        $i2 = 0;

     label07:
        $r2 = <org.blockdroid.Others.Readzors: java.lang.String[] one>;

        i3 = lengthof $r2;

        if $i2 < i3 goto label08;

        d0 = d1 / d0;

        b4 = d0 cmpg 0.1;

        $i2 = (int) b4;

        if $i2 >= 0 goto label05;

        if $i1 != 10 goto label13;

        $r3 = <org.blockdroid.Others.Readzors: java.lang.String newTel>;

        return $r3;

     label08:
        i3 = 0;

     label09:
        if i3 < $i0 goto label10;

        r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke r7.<java.io.PrintStream: void println()>();

        $i2 = $i2 + 1;

        goto label07;

     label10:
        $r8 = r0[i3];

        $i5 = $r8[$i2];

        r6 = <org.blockdroid.Others.Readzors: java.lang.String[][] chars>;

        $r2 = r6[$i1];

        $r3 = $r2[$i2];

        $c6 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i3);

        $i7 = (int) $c6;

        $i7 = $i7 - 48;

        if $i5 == $i7 goto label12;

        d1 = d1 + 1.0;

     label11:
        i3 = i3 + 1;

        goto label09;

     label12:
        d0 = d0 + 1.0;

        goto label11;

     label13:
        if $i1 != 11 goto label14;

        return "-";

     label14:
        if $i1 != 12 goto label15;

        return "+";

     label15:
        $i0 = $i1 + 48;

        $c6 = (char) $i0;

        $r3 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c6);

        return $r3;
    }

    private static boolean isWhite(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = <org.blockdroid.Others.Readzors: int whitePixel>;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static int[][] numberFourQuickFix(int[][])
    {
        int[][] $r0, r6;
        java.lang.String[] $r1;
        int[] $r3, $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.Class $r4;
        java.lang.Object $r5;
        java.lang.String $r2;

        $r0 := @parameter0: int[][];

        $r1 = <org.blockdroid.Others.Readzors: java.lang.String[] four>;

        $r2 = $r1[0];

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = lengthof $r0;

        $i1 = $i1 - $i0;

        $r3 = $r0[0];

        $i2 = lengthof $r3;

        $r3 = newarray (int)[2];

        $r3[0] = $i1;

        $r3[1] = $i2;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r4, $r3);

        r6 = (int[][]) $r5;

        $i1 = 0;

     label1:
        $r3 = $r0[0];

        $i2 = lengthof $r3;

        if $i1 < $i2 goto label2;

        return r6;

     label2:
        $i2 = 0;

     label3:
        $i3 = lengthof $r0;

        $i3 = $i3 - $i0;

        if $i2 < $i3 goto label4;

        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r3 = r6[$i2];

        $r7 = $r0[$i2];

        $i3 = $r7[$i1];

        $r3[$i1] = $i3;

        $i2 = $i2 + 1;

        goto label3;
    }

    private static void printChar(int[][], int)
    {
        java.io.PrintStream $r1;
        int[][] $r0;
        char $c4;
        int[] $r4;
        int $i0, i1, i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: int[][];

        $i0 := @parameter1: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Printing char of len: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        i1 = 0;

     label1:
        if i1 < 11 goto label2;

        return;

     label2:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>("\"");

        i2 = 0;

     label3:
        if i2 < $i0 goto label4;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("\",");

        i1 = i1 + 1;

        goto label1;

     label4:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r4 = $r0[i2];

        $i3 = $r4[i1];

        $z0 = staticinvoke <org.blockdroid.Others.Readzors: boolean isWhite(int)>($i3);

        if $z0 == 0 goto label6;

        $c4 = 48;

     label5:
        virtualinvoke $r1.<java.io.PrintStream: void print(char)>($c4);

        i2 = i2 + 1;

        goto label3;

     label6:
        $c4 = 49;

        goto label5;
    }

    public static java.lang.String read_code(android.graphics.Bitmap, java.lang.String)
    {
        int[][] r5;
        java.lang.String[] $r11;
        java.lang.NullPointerException r13;
        int[] $r2;
        java.lang.StringBuffer r9;
        int $i0, $i1, i2, i3, $i4, $i5;
        java.lang.String $r0, $r8, r10;
        boolean $z0;
        java.io.PrintStream r6;
        java.lang.ArrayIndexOutOfBoundsException r12;
        android.graphics.Bitmap r1;
        java.lang.Class r3;
        java.lang.Object $r4;
        java.lang.StringBuilder r7;

        r1 := @parameter0: android.graphics.Bitmap;

        $r0 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("IM HERE and READIN THE CODE", "");

     label01:
        $i0 = virtualinvoke r1.<android.graphics.Bitmap: int getPixel(int,int)>(0, 0);

     label02:
        <org.blockdroid.Others.Readzors: int whitePixel> = $i0;

        $r2 = newarray (int)[2];

     label03:
        $r2[0] = 60;

        $r2[1] = 20;

     label04:
        r3 = <java.lang.Integer: java.lang.Class TYPE>;

     label05:
        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(r3, $r2);

     label06:
        r5 = (int[][]) $r4;

        $i0 = 0;

        r6 = <java.lang.System: java.io.PrintStream out>;

        r7 = new java.lang.StringBuilder;

     label07:
        specialinvoke r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("h\u00f6jden:");

        $i1 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        r7 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label08:
        r9 = new java.lang.StringBuffer;

     label09:
        specialinvoke r9.<java.lang.StringBuffer: void <init>()>();

     label10:
        i2 = 0;

        $i1 = 0;

        i3 = 0;

     label11:
        $i4 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

     label12:
        if $i1 < $i4 goto label15;

     label13:
        $r8 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r8 = staticinvoke <org.blockdroid.Others.Readzors: java.lang.String checkStringForMissPlacedSpace(java.lang.String)>($r8);

     label14:
        return $r8;

     label15:
        i3 = i3 + 1;

        $i4 = 0;

     label16:
        $i5 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

     label17:
        $i5 = $i5 - 1;

        if $i4 < $i5 goto label28;

        if i3 != 0 goto label18;

        i2 = i2 + 1;

     label18:
        if i3 <= 4 goto label33;

     label19:
        $r8 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label20:
        r10 = <org.blockdroid.Others.Readzors: java.lang.String newTel>;

     label21:
        $r11 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(r10);

     label22:
        $i4 = lengthof $r11;

     label23:
        $i4 = $i4 - 1;

     label24:
        $r8 = $r11[$i4];

        $i4 = virtualinvoke $r8.<java.lang.String: int length()>();

     label25:
        if $i4 <= 7 goto label27;

        i3 = 0;

        $r8 = <org.blockdroid.Others.Readzors: java.lang.String newTel>;

     label26:
        virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label27:
        $i1 = $i1 + 1;

        goto label11;

     label28:
        $i5 = virtualinvoke r1.<android.graphics.Bitmap: int getPixel(int,int)>($i1, $i4);

        $z0 = staticinvoke <org.blockdroid.Others.Readzors: boolean isWhite(int)>($i5);

     label29:
        if $z0 != 0 goto label32;

        if $i0 != 0 goto label30;

        $i0 = $i1;

     label30:
        $r2 = r5[i2];

        $r2[$i4] = 1;

     label31:
        i3 = 0;

     label32:
        $i4 = $i4 + 1;

        goto label16;

     label33:
        if i3 > 0 goto label36;

        $i4 = $i1 + 1;

     label34:
        $i5 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

     label35:
        if $i4 != $i5 goto label27;

     label36:
        if $i0 == 0 goto label27;

        $i4 = $i1 - $i0;

        $i0 = $i1 - $i0;

        if i2 == $i0 goto label47;

        $i0 = i2;

     label37:
        $r8 = staticinvoke <org.blockdroid.Others.Readzors: java.lang.String compare_char_procent(int[][],int)>(r5, $i0);

     label38:
        if $r8 == " " goto label40;

     label39:
        virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r8 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Char", $r8);

     label40:
        $r2 = newarray (int)[2];

     label41:
        $r2[0] = 60;

        $r2[1] = 20;

     label42:
        r3 = <java.lang.Integer: java.lang.Class TYPE>;

     label43:
        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(r3, $r2);

     label44:
        r5 = (int[][]) $r4;

        $i0 = 0;

        i2 = 0;

        goto label27;

     label45:
        r12 := @caughtexception;

        staticinvoke <org.blockdroid.Others.Readzors: void sendMailDebug(java.lang.String)>($r0);

        return null;

     label46:
        r13 := @caughtexception;

        return null;

     label47:
        $i0 = $i4;

        goto label37;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label08 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label11 to label12 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label13 to label14 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label16 to label17 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label19 to label20 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label21 to label22 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label24 to label25 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label26 to label27 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label28 to label29 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label30 to label31 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label34 to label35 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label37 to label38 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label39 to label40 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label41 to label42 with label45;
        catch java.lang.ArrayIndexOutOfBoundsException from label43 to label44 with label45;
        catch java.lang.NullPointerException from label01 to label02 with label46;
        catch java.lang.NullPointerException from label03 to label04 with label46;
        catch java.lang.NullPointerException from label05 to label06 with label46;
        catch java.lang.NullPointerException from label07 to label08 with label46;
        catch java.lang.NullPointerException from label09 to label10 with label46;
        catch java.lang.NullPointerException from label11 to label12 with label46;
        catch java.lang.NullPointerException from label13 to label14 with label46;
        catch java.lang.NullPointerException from label16 to label17 with label46;
        catch java.lang.NullPointerException from label19 to label20 with label46;
        catch java.lang.NullPointerException from label21 to label23 with label46;
        catch java.lang.NullPointerException from label24 to label25 with label46;
        catch java.lang.NullPointerException from label26 to label27 with label46;
        catch java.lang.NullPointerException from label28 to label29 with label46;
        catch java.lang.NullPointerException from label30 to label31 with label46;
        catch java.lang.NullPointerException from label34 to label35 with label46;
        catch java.lang.NullPointerException from label37 to label38 with label46;
        catch java.lang.NullPointerException from label39 to label40 with label46;
        catch java.lang.NullPointerException from label41 to label42 with label46;
        catch java.lang.NullPointerException from label43 to label44 with label46;
    }

    private static void sendMailDebug(java.lang.String)
    {
        java.lang.String $r0;
        org.blockdroid.Alarm.GmailSender r1;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.lang.String;

        r1 = new org.blockdroid.Alarm.GmailSender;

        specialinvoke r1.<org.blockdroid.Alarm.GmailSender: void <init>(java.lang.String,java.lang.String)>("subidroid", "ddgaKsE34B46L");

     label1:
        virtualinvoke r1.<org.blockdroid.Alarm.GmailSender: void sendMail(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("Debug Blockdroid", $r0, "anybody@hotmail.com", "rebecca.marino85@gmail.com");

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
