public final class com.skt.wifiagent.common.BitConverter extends java.lang.Object
{
    private static final char[] hexchar;

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <com.skt.wifiagent.common.BitConverter: char[] hexchar> = $r0;

        return;
    }

    public void <init>()
    {
        com.skt.wifiagent.common.BitConverter r0;

        r0 := @this: com.skt.wifiagent.common.BitConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final int byteArrayToInt(byte[])
    {
        byte[] $r0;
        short $s2;
        byte $b0;
        int $i1, $i3;

        $r0 := @parameter0: byte[];

        $b0 = $r0[0];

        $i1 = (int) $b0;

        $i1 = $i1 << 24;

        $b0 = $r0[1];

        $s2 = (short) $b0;

        $s2 = $s2 & 255;

        $i3 = (int) $s2;

        $i3 = $i3 << 16;

        $i1 = $i1 + $i3;

        $b0 = $r0[2];

        $s2 = (short) $b0;

        $s2 = $s2 & 255;

        $i3 = (int) $s2;

        $i3 = $i3 << 8;

        $i1 = $i1 + $i3;

        $b0 = $r0[3];

        $s2 = (short) $b0;

        $s2 = $s2 & 255;

        $i3 = (int) $s2;

        $i1 = $i1 + $i3;

        return $i1;
    }

    public static java.lang.String encode(byte[])
    {
        byte[] $r0;
        char $c4;
        short s0;
        byte $b3;
        int $i1, $i2;
        char[] $r3;
        java.lang.StringBuilder r1, $r4;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $r4 = new java.lang.StringBuilder;

        r1 = $r4;

        $i1 = lengthof $r0;

        $i1 = $i1 * 2;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if $i1 < $i2 goto label2;

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $b3 = $r0[$i1];

        s0 = (short) $b3;

        s0 = s0 & 255;

        $r3 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i2 = (int) s0;

        $i2 = $i2 >> 4;

        $c4 = $r3[$i2];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r3 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        s0 = s0 & 15;

        $i2 = (int) s0;

        $c4 = $r3[$i2];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $i1 = $i1 + 1;

        goto label1;
    }

    public static java.lang.String fromBytetoHexString(int)
    {
        java.lang.StringBuffer r0;
        int $i0, $i1;
        char[] $r2;
        char $c2;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        r0 = new java.lang.StringBuffer;

        specialinvoke r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = $i0 >>> 4;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i0 = $i0 & 15;

        $c2 = $r2[$i0];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String getDecToHex(java.lang.String)
    {
        long $l0;
        java.lang.String $r0;
        java.lang.Long $r1;

        $r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $r0 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        return $r0;
    }

    public static java.lang.String getHexToDec(java.lang.String)
    {
        long $l0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r0, 16);

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        return $r0;
    }

    public static byte[] getMacByteArray(java.lang.String)
    {
        byte[] r1, $r3;
        java.lang.String[] $r2;
        byte $b1, $b3;
        int $i0, $i2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r1 = newarray (byte)[6];

        $i0 = lengthof r1;

        if $i0 == 6 goto label03;

        $i0 = 0;

     label01:
        if $i0 < 6 goto label02;

        return r1;

     label02:
        r1[$i0] = 0;

        $i0 = $i0 + 1;

        goto label01;

     label03:
        $i0 = 0;

     label04:
        if $i0 >= 6 goto label13;

        $r0 = $r2[$i0];

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 < 48 goto label07;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 > 57 goto label07;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        $i2 = $i2 - 48;

        $i2 = $i2 << 4;

        $b1 = (byte) $i2;

     label05:
        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 < 48 goto label10;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 > 57 goto label10;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        $i2 = $i2 - 48;

        $b3 = (byte) $i2;

     label06:
        $b1 = $b1 | $b3;

        r1[$i0] = $b1;

        $i0 = $i0 + 1;

        goto label04;

     label07:
        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 < 97 goto label08;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 > 102 goto label08;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        $i2 = $i2 - 87;

        $i2 = $i2 << 4;

        $b1 = (byte) $i2;

        goto label05;

     label08:
        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 < 65 goto label09;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 > 70 goto label09;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        $i2 = $i2 - 55;

        $i2 = $i2 << 4;

        $b1 = (byte) $i2;

        goto label05;

     label09:
        $b1 = 0;

        goto label05;

     label10:
        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 < 97 goto label11;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 > 102 goto label11;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        $i2 = $i2 - 87;

        $b3 = (byte) $i2;

        goto label06;

     label11:
        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 < 65 goto label12;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 > 70 goto label12;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        $i2 = $i2 - 55;

        $b3 = (byte) $i2;

        goto label06;

     label12:
        $b3 = 0;

        goto label06;

     label13:
        return r1;
    }

    public static byte[] getStringToByteForBssid(java.lang.String)
    {
        byte[] r1, $r3;
        java.lang.String[] $r2;
        byte $b1, $b3;
        int $i0, $i2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r1 = newarray (byte)[6];

        $i0 = lengthof r1;

        if $i0 == 6 goto label03;

        $i0 = 0;

     label01:
        if $i0 < 6 goto label02;

        return r1;

     label02:
        r1[$i0] = 0;

        $i0 = $i0 + 1;

        goto label01;

     label03:
        $i0 = 0;

     label04:
        if $i0 >= 6 goto label13;

        $r0 = $r2[$i0];

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 < 48 goto label07;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 > 57 goto label07;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        $i2 = $i2 - 48;

        $i2 = $i2 << 4;

        $b1 = (byte) $i2;

     label05:
        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 < 48 goto label10;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 > 57 goto label10;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        $i2 = $i2 - 48;

        $b3 = (byte) $i2;

     label06:
        $b1 = $b1 | $b3;

        r1[$i0] = $b1;

        $i0 = $i0 + 1;

        goto label04;

     label07:
        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 < 97 goto label08;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 > 102 goto label08;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        $i2 = $i2 - 87;

        $i2 = $i2 << 4;

        $b1 = (byte) $i2;

        goto label05;

     label08:
        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 < 65 goto label09;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        if $i2 > 70 goto label09;

        $b1 = $r3[0];

        $i2 = (int) $b1;

        $i2 = $i2 - 55;

        $i2 = $i2 << 4;

        $b1 = (byte) $i2;

        goto label05;

     label09:
        $b1 = 0;

        goto label05;

     label10:
        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 < 97 goto label11;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 > 102 goto label11;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        $i2 = $i2 - 87;

        $b3 = (byte) $i2;

        goto label06;

     label11:
        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 < 65 goto label12;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        if $i2 > 70 goto label12;

        $b3 = $r3[1];

        $i2 = (int) $b3;

        $i2 = $i2 - 55;

        $b3 = (byte) $i2;

        goto label06;

     label12:
        $b3 = 0;

        goto label06;

     label13:
        return r1;
    }

    public static byte[] hexToByteArray(java.lang.String)
    {
        byte[] r1;
        byte $b3;
        int $i0, $i1, $i2;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label3:
        $i1 = lengthof r1;

        if $i0 < $i1 goto label4;

        return r1;

     label4:
        $i1 = $i0 * 2;

        $i2 = $i0 * 2;

        $i2 = $i2 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        $b3 = (byte) $i1;

        r1[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label3;
    }

    public static final byte[] intToByteArray(int)
    {
        byte[] $r0;
        byte $b2;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $r0 = newarray (byte)[4];

        $i1 = $i0 >>> 24;

        $b2 = (byte) $i1;

        $r0[0] = $b2;

        $i1 = $i0 >>> 16;

        $b2 = (byte) $i1;

        $r0[1] = $b2;

        $i1 = $i0 >>> 8;

        $b2 = (byte) $i1;

        $r0[2] = $b2;

        $b2 = (byte) $i0;

        $r0[3] = $b2;

        return $r0;
    }

    public static final byte[] shortToByteArray(short)
    {
        byte[] $r0;
        short $s0;
        byte $b2;
        int $i1;

        $s0 := @parameter0: short;

        $r0 = newarray (byte)[2];

        $i1 = (int) $s0;

        $i1 = $i1 >>> 8;

        $b2 = (byte) $i1;

        $r0[0] = $b2;

        $b2 = (byte) $s0;

        $r0[1] = $b2;

        return $r0;
    }

    private static byte toByte(char)
    {
        int $i1;
        char $c0;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        lookupswitch($i1)
        {
            case 48: goto label01;
            case 49: goto label02;
            case 50: goto label03;
            case 51: goto label04;
            case 52: goto label05;
            case 53: goto label06;
            case 54: goto label07;
            case 55: goto label08;
            case 56: goto label09;
            case 57: goto label10;
            case 58: goto label01;
            case 59: goto label01;
            case 60: goto label01;
            case 61: goto label01;
            case 62: goto label01;
            case 63: goto label01;
            case 64: goto label01;
            case 65: goto label11;
            case 66: goto label12;
            case 67: goto label13;
            case 68: goto label14;
            case 69: goto label15;
            case 70: goto label16;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        return 1;

     label03:
        return 2;

     label04:
        return 3;

     label05:
        return 4;

     label06:
        return 5;

     label07:
        return 6;

     label08:
        return 7;

     label09:
        return 8;

     label10:
        return 9;

     label11:
        return 10;

     label12:
        return 11;

     label13:
        return 12;

     label14:
        return 13;

     label15:
        return 14;

     label16:
        return 15;
    }

    public static byte toByte(java.lang.String)
    {
        byte b0, $b4;
        int i1, $i2, $i5;
        char $c3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        b0 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        i1 = 0;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i1 < $i2 goto label2;

        return b0;

     label2:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i2 - i1;

        $i2 = $i2 - 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $b4 = staticinvoke <com.skt.wifiagent.common.BitConverter: byte toByte(char)>($c3);

        $b4 = $b4 & 15;

        $i2 = i1 * 4;

        $i5 = (int) $b4;

        $i2 = $i5 << $i2;

        $i2 = $i2 | b0;

        b0 = (byte) $i2;

        i1 = i1 + 1;

        goto label1;
    }

    public static char toChar(java.lang.String)
    {
        byte $b4;
        int i1, $i2, $i5;
        char c0, $c3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        c0 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        i1 = 0;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i1 < $i2 goto label2;

        return c0;

     label2:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i2 - i1;

        $i2 = $i2 - 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $b4 = staticinvoke <com.skt.wifiagent.common.BitConverter: byte toByte(char)>($c3);

        $b4 = $b4 & 15;

        $i2 = i1 * 4;

        $i5 = (int) $b4;

        $i2 = $i5 << $i2;

        $i2 = $i2 | c0;

        c0 = (char) $i2;

        i1 = i1 + 1;

        goto label1;
    }

    public static java.lang.String toHexChar(short)
    {
        short $s0;
        java.lang.StringBuffer r0, $r3;
        int $i1;
        char[] $r2;
        char $c2;
        java.lang.String $r1;

        $s0 := @parameter0: short;

        $r3 = new java.lang.StringBuffer;

        r0 = $r3;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = (int) $s0;

        $i1 = $i1 >>> 4;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $s0 = $s0 & 15;

        $i1 = (int) $s0;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String toHexString(byte)
    {
        byte $b0;
        java.lang.StringBuffer r0, $r3;
        int $i1;
        char[] $r2;
        char $c2;
        java.lang.String $r1;

        $b0 := @parameter0: byte;

        $r3 = new java.lang.StringBuffer;

        r0 = $r3;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = (int) $b0;

        $i1 = $i1 >>> 4;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $b0 = $b0 & 15;

        $i1 = (int) $b0;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String toHexString(char)
    {
        java.lang.StringBuffer r0, $r3;
        int $i1;
        char[] $r2;
        char $c0, $c2;
        java.lang.String $r1;

        $c0 := @parameter0: char;

        $r3 = new java.lang.StringBuffer;

        r0 = $r3;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = (int) $c0;

        $i1 = $i1 >>> 12;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = (int) $c0;

        $i1 = $i1 >>> 8;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = (int) $c0;

        $i1 = $i1 >>> 4;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $c0 = $c0 & 15;

        $i1 = (int) $c0;

        $c0 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String toHexString(int)
    {
        java.lang.StringBuffer r0;
        int $i0, $i1;
        char[] $r2;
        char $c2;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        r0 = new java.lang.StringBuffer;

        specialinvoke r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = $i0 >>> 28;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = $i0 >>> 24;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = $i0 >>> 20;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = $i0 >>> 16;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = $i0 >>> 12;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = $i0 >>> 8;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = $i0 >>> 4;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i0 = $i0 & 15;

        $c2 = $r2[$i0];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String toHexString(long)
    {
        java.lang.StringBuffer r0;
        int $i2;
        char[] $r2;
        long $l0, $l1;
        char $c3;
        java.lang.String $r1;

        $l0 := @parameter0: long;

        r0 = new java.lang.StringBuffer;

        specialinvoke r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 60;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 56;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 52;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 48;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 44;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 40;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 36;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 32;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 28;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 24;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 20;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 16;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 12;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 8;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l1 = $l0 >>> 4;

        $l1 = $l1 & 15L;

        $i2 = (int) $l1;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $l0 = $l0 & 15L;

        $i2 = (int) $l0;

        $c3 = $r2[$i2];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String toHexString(short)
    {
        short $s0;
        java.lang.StringBuffer r0, $r3;
        int $i1;
        char[] $r2;
        char $c2;
        java.lang.String $r1;

        $s0 := @parameter0: short;

        $r3 = new java.lang.StringBuffer;

        r0 = $r3;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = (int) $s0;

        $i1 = $i1 >>> 12;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = (int) $s0;

        $i1 = $i1 >>> 8;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $i1 = (int) $s0;

        $i1 = $i1 >>> 4;

        $i1 = $i1 & 15;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r2 = <com.skt.wifiagent.common.BitConverter: char[] hexchar>;

        $s0 = $s0 & 15;

        $i1 = (int) $s0;

        $c2 = $r2[$i1];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static int toInt(java.lang.String)
    {
        byte $b4;
        int i0, i1, $i2, $i5;
        char $c3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        i0 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        i1 = 0;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i1 < $i2 goto label2;

        return i0;

     label2:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i2 - i1;

        $i2 = $i2 - 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $b4 = staticinvoke <com.skt.wifiagent.common.BitConverter: byte toByte(char)>($c3);

        $b4 = $b4 & 15;

        $i2 = i1 * 4;

        $i5 = (int) $b4;

        $i2 = $i5 << $i2;

        i0 = i0 | $i2;

        i1 = i1 + 1;

        goto label1;
    }

    public static long toLong(java.lang.String)
    {
        byte $b4;
        int $i0, i2;
        long l1, $l5;
        char $c3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        l1 = 0L;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i2 < $i0 goto label2;

        return l1;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - i2;

        $i0 = $i0 - 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $b4 = staticinvoke <com.skt.wifiagent.common.BitConverter: byte toByte(char)>($c3);

        $b4 = $b4 & 15;

        $l5 = (long) $b4;

        $i0 = i2 * 4;

        $l5 = $l5 << $i0;

        l1 = l1 | $l5;

        i2 = i2 + 1;

        goto label1;
    }

    public static short toShort(java.lang.String)
    {
        short s0;
        byte $b4;
        int i1, $i2, $i5;
        char $c3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        s0 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        i1 = 0;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i1 < $i2 goto label2;

        return s0;

     label2:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i2 - i1;

        $i2 = $i2 - 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $b4 = staticinvoke <com.skt.wifiagent.common.BitConverter: byte toByte(char)>($c3);

        $b4 = $b4 & 15;

        $i2 = i1 * 4;

        $i5 = (int) $b4;

        $i2 = $i5 << $i2;

        $i2 = $i2 | s0;

        s0 = (short) $i2;

        i1 = i1 + 1;

        goto label1;
    }
}
