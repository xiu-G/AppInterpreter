final class c.a.b.a.d.e.h7 extends java.lang.Object
{
    private static final java.util.logging.Logger a;
    private static final sun.misc.Unsafe b;
    private static final java.lang.Class c;
    private static final boolean d;
    private static final boolean e;
    private static final c.a.b.a.d.e.h7$d f;
    private static final boolean g;
    private static final boolean h;
    private static final long i;
    static final boolean j;

    static void <clinit>()
    {
        sun.misc.Unsafe $r3;
        long $l1;
        java.util.logging.Logger $r2;
        java.lang.reflect.Field $r5;
        java.nio.ByteOrder $r6, $r7;
        int $i0;
        c.a.b.a.d.e.h7$b $r10;
        c.a.b.a.d.e.h7$a $r9;
        java.lang.Class $r0;
        c.a.b.a.d.e.h7$d $r4;
        java.lang.String $r1;
        c.a.b.a.d.e.h7$c $r8;
        boolean $z0;

        $r0 = class "Lc/a/b/a/d/e/h7;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <c.a.b.a.d.e.h7: java.util.logging.Logger a> = $r2;

        $r3 = staticinvoke <c.a.b.a.d.e.h7: sun.misc.Unsafe t()>();

        <c.a.b.a.d.e.h7: sun.misc.Unsafe b> = $r3;

        $r0 = staticinvoke <c.a.b.a.d.e.z2: java.lang.Class c()>();

        <c.a.b.a.d.e.h7: java.lang.Class c> = $r0;

        $r0 = <java.lang.Long: java.lang.Class TYPE>;

        $z0 = staticinvoke <c.a.b.a.d.e.h7: boolean B(java.lang.Class)>($r0);

        <c.a.b.a.d.e.h7: boolean d> = $z0;

        $r0 = <java.lang.Integer: java.lang.Class TYPE>;

        $z0 = staticinvoke <c.a.b.a.d.e.h7: boolean B(java.lang.Class)>($r0);

        <c.a.b.a.d.e.h7: boolean e> = $z0;

        $r3 = <c.a.b.a.d.e.h7: sun.misc.Unsafe b>;

        $r4 = null;

        if $r3 == null goto label3;

        $z0 = staticinvoke <c.a.b.a.d.e.z2: boolean b()>();

        if $z0 == 0 goto label2;

        $z0 = <c.a.b.a.d.e.h7: boolean d>;

        if $z0 == 0 goto label1;

        $r8 = new c.a.b.a.d.e.h7$c;

        $r4 = $r8;

        $r3 = <c.a.b.a.d.e.h7: sun.misc.Unsafe b>;

        specialinvoke $r8.<c.a.b.a.d.e.h7$c: void <init>(sun.misc.Unsafe)>($r3);

        goto label3;

     label1:
        $z0 = <c.a.b.a.d.e.h7: boolean e>;

        if $z0 == 0 goto label3;

        $r9 = new c.a.b.a.d.e.h7$a;

        $r4 = $r9;

        $r3 = <c.a.b.a.d.e.h7: sun.misc.Unsafe b>;

        specialinvoke $r9.<c.a.b.a.d.e.h7$a: void <init>(sun.misc.Unsafe)>($r3);

        goto label3;

     label2:
        $r10 = new c.a.b.a.d.e.h7$b;

        $r4 = $r10;

        $r3 = <c.a.b.a.d.e.h7: sun.misc.Unsafe b>;

        specialinvoke $r10.<c.a.b.a.d.e.h7$b: void <init>(sun.misc.Unsafe)>($r3);

     label3:
        <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f> = $r4;

        $z0 = staticinvoke <c.a.b.a.d.e.h7: boolean E()>();

        <c.a.b.a.d.e.h7: boolean g> = $z0;

        $z0 = staticinvoke <c.a.b.a.d.e.h7: boolean A()>();

        <c.a.b.a.d.e.h7: boolean h> = $z0;

        $i0 = staticinvoke <c.a.b.a.d.e.h7: int n(java.lang.Class)>(class "[B");

        $l1 = (long) $i0;

        <c.a.b.a.d.e.h7: long i> = $l1;

        staticinvoke <c.a.b.a.d.e.h7: int n(java.lang.Class)>(class "[Z");

        staticinvoke <c.a.b.a.d.e.h7: int s(java.lang.Class)>(class "[Z");

        staticinvoke <c.a.b.a.d.e.h7: int n(java.lang.Class)>(class "[I");

        staticinvoke <c.a.b.a.d.e.h7: int s(java.lang.Class)>(class "[I");

        staticinvoke <c.a.b.a.d.e.h7: int n(java.lang.Class)>(class "[J");

        staticinvoke <c.a.b.a.d.e.h7: int s(java.lang.Class)>(class "[J");

        staticinvoke <c.a.b.a.d.e.h7: int n(java.lang.Class)>(class "[F");

        staticinvoke <c.a.b.a.d.e.h7: int s(java.lang.Class)>(class "[F");

        staticinvoke <c.a.b.a.d.e.h7: int n(java.lang.Class)>(class "[D");

        staticinvoke <c.a.b.a.d.e.h7: int s(java.lang.Class)>(class "[D");

        staticinvoke <c.a.b.a.d.e.h7: int n(java.lang.Class)>(class "[Ljava/lang/Object;");

        staticinvoke <c.a.b.a.d.e.h7: int s(java.lang.Class)>(class "[Ljava/lang/Object;");

        $r5 = staticinvoke <c.a.b.a.d.e.h7: java.lang.reflect.Field G()>();

        if $r5 == null goto label4;

        $r4 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        if $r4 == null goto label4;

        $r3 = $r4.<c.a.b.a.d.e.h7$d: sun.misc.Unsafe a>;

        virtualinvoke $r3.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r5);

     label4:
        $r6 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r7 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        if $r6 != $r7 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        <c.a.b.a.d.e.h7: boolean j> = $z0;

        return;
    }

    private void <init>()
    {
        c.a.b.a.d.e.h7 r0;

        r0 := @this: c.a.b.a.d.e.h7;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean A()
    {
        sun.misc.Unsafe $r0;
        java.lang.Throwable $r4;
        java.lang.Class[] $r2;
        java.util.logging.Logger $r5;
        java.util.logging.Level $r6;
        int $i0;
        java.lang.Class $r1, $r3;
        java.lang.StringBuilder $r9;
        java.lang.String $r7, $r8;
        boolean $z0;

        $r0 = <c.a.b.a.d.e.h7: sun.misc.Unsafe b>;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/reflect/Field;";

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("objectFieldOffset", $r2);

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/Class;";

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("arrayBaseOffset", $r2);

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/Class;";

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("arrayIndexScale", $r2);

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getInt", $r2);

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[2] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putInt", $r2);

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getLong", $r2);

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[2] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putLong", $r2);

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getObject", $r2);

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r2[2] = class "Ljava/lang/Object;";

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putObject", $r2);

        $z0 = staticinvoke <c.a.b.a.d.e.z2: boolean b()>();

     label2:
        if $z0 == 0 goto label3;

        return 1;

     label3:
        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getByte", $r2);

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        $r2[2] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putByte", $r2);

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getBoolean", $r2);

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r2[2] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putBoolean", $r2);

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getFloat", $r2);

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        $r2[2] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putFloat", $r2);

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getDouble", $r2);

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        $r2[2] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putDouble", $r2);

     label4:
        return 1;

     label5:
        $r4 := @caughtexception;

        $r5 = <c.a.b.a.d.e.h7: java.util.logging.Logger a>;

        $r6 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i0 = $i0 + 71;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("platform method missing - proto runtime falling back to safer methods: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>($r6, "com.google.protobuf.UnsafeUtil", "supportsUnsafeArrayOperations", $r7);

        return 0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static boolean B(java.lang.Class)
    {
        java.lang.Throwable $r0;
        java.lang.Class[] $r3;
        java.lang.Class $r1, $r2, $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.Class;

        $z0 = staticinvoke <c.a.b.a.d.e.z2: boolean b()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = <c.a.b.a.d.e.h7: java.lang.Class c>;

        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = $r1;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3[1] = $r4;

        virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("peekLong", $r3);

        $r3 = newarray (java.lang.Class)[3];

        $r3[0] = $r1;

        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        $r3[1] = $r4;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3[2] = $r4;

        virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("pokeLong", $r3);

        $r3 = newarray (java.lang.Class)[3];

        $r3[0] = $r1;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[1] = $r4;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3[2] = $r4;

        virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("pokeInt", $r3);

        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = $r1;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3[1] = $r4;

        virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("peekInt", $r3);

        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = $r1;

        $r4 = <java.lang.Byte: java.lang.Class TYPE>;

        $r3[1] = $r4;

        virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("pokeByte", $r3);

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = $r1;

        virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("peekByte", $r3);

        $r3 = newarray (java.lang.Class)[4];

        $r3[0] = $r1;

        $r3[1] = class "[B";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[2] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[3] = $r4;

        virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("pokeByteArray", $r3);

        $r3 = newarray (java.lang.Class)[4];

        $r3[0] = $r1;

        $r3[1] = class "[B";

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[2] = $r1;

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[3] = $r1;

        virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("peekByteArray", $r3);

     label2:
        return 1;

     label3:
        $r0 := @caughtexception;

        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static double C(java.lang.Object, long)
    {
        long $l0;
        c.a.b.a.d.e.h7$d $r0;
        java.lang.Object $r1;
        double $d0;

        $r1 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r0 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $d0 = virtualinvoke $r0.<c.a.b.a.d.e.h7$d: double j(java.lang.Object,long)>($r1, $l0);

        return $d0;
    }

    private static void D(java.lang.Object, long, boolean)
    {
        byte $b1;
        java.lang.Object $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        $b1 = (byte) $z0;

        staticinvoke <c.a.b.a.d.e.h7: void y(java.lang.Object,long,byte)>($r0, $l0, $b1);

        return;
    }

    private static boolean E()
    {
        sun.misc.Unsafe $r0;
        java.lang.Throwable $r5;
        java.lang.Class[] $r2;
        java.lang.reflect.Field $r4;
        java.util.logging.Logger $r6;
        java.util.logging.Level $r7;
        int $i0;
        java.lang.Class $r1, $r3;
        java.lang.StringBuilder $r10;
        java.lang.String $r8, $r9;
        boolean $z0;

        $r0 = <c.a.b.a.d.e.h7: sun.misc.Unsafe b>;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/reflect/Field;";

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("objectFieldOffset", $r2);

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getLong", $r2);

        $r4 = staticinvoke <c.a.b.a.d.e.h7: java.lang.reflect.Field G()>();

     label2:
        if $r4 != null goto label3;

        return 0;

     label3:
        $z0 = staticinvoke <c.a.b.a.d.e.z2: boolean b()>();

     label4:
        if $z0 == 0 goto label5;

        return 1;

     label5:
        $r2 = newarray (java.lang.Class)[1];

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[0] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getByte", $r2);

        $r2 = newarray (java.lang.Class)[2];

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[0] = $r3;

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putByte", $r2);

        $r2 = newarray (java.lang.Class)[1];

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[0] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getInt", $r2);

        $r2 = newarray (java.lang.Class)[2];

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[0] = $r3;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putInt", $r2);

        $r2 = newarray (java.lang.Class)[1];

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[0] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getLong", $r2);

        $r2 = newarray (java.lang.Class)[2];

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[0] = $r3;

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putLong", $r2);

        $r2 = newarray (java.lang.Class)[3];

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[0] = $r3;

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[2] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("copyMemory", $r2);

        $r2 = newarray (java.lang.Class)[5];

        $r2[0] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[1] = $r3;

        $r2[2] = class "Ljava/lang/Object;";

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[3] = $r3;

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r2[4] = $r3;

        virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("copyMemory", $r2);

     label6:
        return 1;

     label7:
        $r5 := @caughtexception;

        $r6 = <c.a.b.a.d.e.h7: java.util.logging.Logger a>;

        $r7 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i0 = $i0 + 71;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("platform method missing - proto runtime falling back to safer methods: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>($r7, "com.google.protobuf.UnsafeUtil", "supportsUnsafeByteBufferOperations", $r8);

        return 0;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    static java.lang.Object F(java.lang.Object, long)
    {
        sun.misc.Unsafe $r2;
        long $l0;
        java.lang.Object $r0;
        c.a.b.a.d.e.h7$d $r1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r1 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $r2 = $r1.<c.a.b.a.d.e.h7$d: sun.misc.Unsafe a>;

        $r0 = virtualinvoke $r2.<sun.misc.Unsafe: java.lang.Object getObject(java.lang.Object,long)>($r0, $l0);

        return $r0;
    }

    private static java.lang.reflect.Field G()
    {
        java.lang.Class $r0, $r2;
        java.lang.reflect.Field $r1;
        boolean $z0;

        $z0 = staticinvoke <c.a.b.a.d.e.z2: boolean b()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <c.a.b.a.d.e.h7: java.lang.reflect.Field d(java.lang.Class,java.lang.String)>(class "Ljava/nio/Buffer;", "effectiveDirectAddress");

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r1 = staticinvoke <c.a.b.a.d.e.h7: java.lang.reflect.Field d(java.lang.Class,java.lang.String)>(class "Ljava/nio/Buffer;", "address");

        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r0 = <java.lang.Long: java.lang.Class TYPE>;

        if $r2 != $r0 goto label2;

        return $r1;

     label2:
        return null;
    }

    static byte H(java.lang.Object, long)
    {
        long $l0;
        java.lang.Object $r0;
        byte $b1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $b1 = staticinvoke <c.a.b.a.d.e.h7: byte L(java.lang.Object,long)>($r0, $l0);

        return $b1;
    }

    static byte I(java.lang.Object, long)
    {
        long $l0;
        java.lang.Object $r0;
        byte $b1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $b1 = staticinvoke <c.a.b.a.d.e.h7: byte M(java.lang.Object,long)>($r0, $l0);

        return $b1;
    }

    static boolean J(java.lang.Object, long)
    {
        long $l0;
        java.lang.Object $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $z0 = staticinvoke <c.a.b.a.d.e.h7: boolean N(java.lang.Object,long)>($r0, $l0);

        return $z0;
    }

    static boolean K(java.lang.Object, long)
    {
        long $l0;
        java.lang.Object $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $z0 = staticinvoke <c.a.b.a.d.e.h7: boolean O(java.lang.Object,long)>($r0, $l0);

        return $z0;
    }

    private static byte L(java.lang.Object, long)
    {
        byte $b4;
        int $i0, $i1;
        java.lang.Object $r0;
        long $l2, $l3;

        $r0 := @parameter0: java.lang.Object;

        $l2 := @parameter1: long;

        $l3 = -4L & $l2;

        $i1 = staticinvoke <c.a.b.a.d.e.h7: int b(java.lang.Object,long)>($r0, $l3);

        $l2 = $l2 ^ -1L;

        $l2 = $l2 & 3L;

        $l2 = $l2 << 3;

        $i0 = (int) $l2;

        $i0 = $i1 >>> $i0;

        $b4 = (byte) $i0;

        return $b4;
    }

    private static byte M(java.lang.Object, long)
    {
        byte $b4;
        int $i0, $i1;
        java.lang.Object $r0;
        long $l2, $l3;

        $r0 := @parameter0: java.lang.Object;

        $l2 := @parameter1: long;

        $l3 = -4L & $l2;

        $i1 = staticinvoke <c.a.b.a.d.e.h7: int b(java.lang.Object,long)>($r0, $l3);

        $l2 = $l2 & 3L;

        $l2 = $l2 << 3;

        $i0 = (int) $l2;

        $i0 = $i1 >>> $i0;

        $b4 = (byte) $i0;

        return $b4;
    }

    private static boolean N(java.lang.Object, long)
    {
        long $l0;
        java.lang.Object $r0;
        byte $b1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $b1 = staticinvoke <c.a.b.a.d.e.h7: byte L(java.lang.Object,long)>($r0, $l0);

        if $b1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean O(java.lang.Object, long)
    {
        long $l0;
        java.lang.Object $r0;
        byte $b1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $b1 = staticinvoke <c.a.b.a.d.e.h7: byte M(java.lang.Object,long)>($r0, $l0);

        if $b1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    static byte a(byte[], long)
    {
        byte[] $r1;
        byte $b1;
        long $l0, $l2;
        c.a.b.a.d.e.h7$d $r0;

        $r1 := @parameter0: byte[];

        $l0 := @parameter1: long;

        $r0 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $l2 = <c.a.b.a.d.e.h7: long i>;

        $l0 = $l2 + $l0;

        $b1 = virtualinvoke $r0.<c.a.b.a.d.e.h7$d: byte a(java.lang.Object,long)>($r1, $l0);

        return $b1;
    }

    static int b(java.lang.Object, long)
    {
        int $i1;
        long $l0;
        c.a.b.a.d.e.h7$d $r0;
        java.lang.Object $r1;

        $r1 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r0 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $i1 = virtualinvoke $r0.<c.a.b.a.d.e.h7$d: int k(java.lang.Object,long)>($r1, $l0);

        return $i1;
    }

    static java.lang.Object c(java.lang.Class)
    {
        sun.misc.Unsafe $r2;
        java.lang.Throwable $r3;
        java.lang.IllegalStateException $r4;
        java.lang.Object $r0;
        java.lang.Class $r1;

        $r1 := @parameter0: java.lang.Class;

        $r2 = <c.a.b.a.d.e.h7: sun.misc.Unsafe b>;

     label1:
        $r0 = virtualinvoke $r2.<sun.misc.Unsafe: java.lang.Object allocateInstance(java.lang.Class)>($r1);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.InstantiationException from label1 to label2 with label3;
    }

    private static java.lang.reflect.Field d(java.lang.Class, java.lang.String)
    {
        java.lang.Throwable $r2;
        java.lang.Class $r3;
        java.lang.String $r0;
        java.lang.reflect.Field $r1;

        $r3 := @parameter0: java.lang.Class;

        $r0 := @parameter1: java.lang.String;

     label1:
        $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r0);

     label2:
        return $r1;

     label3:
        return null;

     label4:
        $r2 := @caughtexception;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    static void e(java.lang.Object, long, byte)
    {
        java.lang.Object $r0;
        long $l0;
        byte $b1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $b1 := @parameter2: byte;

        staticinvoke <c.a.b.a.d.e.h7: void u(java.lang.Object,long,byte)>($r0, $l0, $b1);

        return;
    }

    static void f(java.lang.Object, long, double)
    {
        java.lang.Object $r0;
        long $l0;
        c.a.b.a.d.e.h7$d $r1;
        double $d0;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $d0 := @parameter2: double;

        $r1 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        virtualinvoke $r1.<c.a.b.a.d.e.h7$d: void c(java.lang.Object,long,double)>($r0, $l0, $d0);

        return;
    }

    static void g(java.lang.Object, long, float)
    {
        float $f0;
        java.lang.Object $r0;
        long $l0;
        c.a.b.a.d.e.h7$d $r1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $f0 := @parameter2: float;

        $r1 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        virtualinvoke $r1.<c.a.b.a.d.e.h7$d: void d(java.lang.Object,long,float)>($r0, $l0, $f0);

        return;
    }

    static void h(java.lang.Object, long, int)
    {
        int $i1;
        java.lang.Object $r0;
        long $l0;
        c.a.b.a.d.e.h7$d $r1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        $r1 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        virtualinvoke $r1.<c.a.b.a.d.e.h7$d: void e(java.lang.Object,long,int)>($r0, $l0, $i1);

        return;
    }

    static void i(java.lang.Object, long, long)
    {
        java.lang.Object $r0;
        long $l0, $l1;
        c.a.b.a.d.e.h7$d $r1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r1 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        virtualinvoke $r1.<c.a.b.a.d.e.h7$d: void f(java.lang.Object,long,long)>($r0, $l0, $l1);

        return;
    }

    static void j(java.lang.Object, long, java.lang.Object)
    {
        sun.misc.Unsafe $r3;
        java.lang.Object $r0, $r1;
        long $l0;
        c.a.b.a.d.e.h7$d $r2;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.lang.Object;

        $r2 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $r3 = $r2.<c.a.b.a.d.e.h7$d: sun.misc.Unsafe a>;

        virtualinvoke $r3.<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>($r0, $l0, $r1);

        return;
    }

    static void k(java.lang.Object, long, boolean)
    {
        java.lang.Object $r0;
        long $l0;
        c.a.b.a.d.e.h7$d $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        $r1 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        virtualinvoke $r1.<c.a.b.a.d.e.h7$d: void g(java.lang.Object,long,boolean)>($r0, $l0, $z0);

        return;
    }

    static void l(byte[], long, byte)
    {
        byte[] $r0;
        byte $b1;
        long $l0, $l2;
        c.a.b.a.d.e.h7$d $r1;

        $r0 := @parameter0: byte[];

        $l0 := @parameter1: long;

        $b1 := @parameter2: byte;

        $r1 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $l2 = <c.a.b.a.d.e.h7: long i>;

        $l0 = $l2 + $l0;

        virtualinvoke $r1.<c.a.b.a.d.e.h7$d: void b(java.lang.Object,long,byte)>($r0, $l0, $b1);

        return;
    }

    static boolean m()
    {
        boolean z0;

        z0 = <c.a.b.a.d.e.h7: boolean h>;

        return z0;
    }

    private static int n(java.lang.Class)
    {
        sun.misc.Unsafe $r2;
        int $i0;
        java.lang.Class $r0;
        c.a.b.a.d.e.h7$d $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Class;

        $z0 = <c.a.b.a.d.e.h7: boolean h>;

        if $z0 == 0 goto label1;

        $r1 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $r2 = $r1.<c.a.b.a.d.e.h7$d: sun.misc.Unsafe a>;

        $i0 = virtualinvoke $r2.<sun.misc.Unsafe: int arrayBaseOffset(java.lang.Class)>($r0);

        return $i0;

     label1:
        return -1;
    }

    static long o(java.lang.Object, long)
    {
        long $l0;
        c.a.b.a.d.e.h7$d $r0;
        java.lang.Object $r1;

        $r1 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r0 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $l0 = virtualinvoke $r0.<c.a.b.a.d.e.h7$d: long l(java.lang.Object,long)>($r1, $l0);

        return $l0;
    }

    static void p(java.lang.Object, long, byte)
    {
        java.lang.Object $r0;
        long $l0;
        byte $b1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $b1 := @parameter2: byte;

        staticinvoke <c.a.b.a.d.e.h7: void y(java.lang.Object,long,byte)>($r0, $l0, $b1);

        return;
    }

    static void q(java.lang.Object, long, boolean)
    {
        java.lang.Object $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        staticinvoke <c.a.b.a.d.e.h7: void z(java.lang.Object,long,boolean)>($r0, $l0, $z0);

        return;
    }

    static boolean r()
    {
        boolean z0;

        z0 = <c.a.b.a.d.e.h7: boolean g>;

        return z0;
    }

    private static int s(java.lang.Class)
    {
        sun.misc.Unsafe $r2;
        int $i0;
        java.lang.Class $r0;
        c.a.b.a.d.e.h7$d $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Class;

        $z0 = <c.a.b.a.d.e.h7: boolean h>;

        if $z0 == 0 goto label1;

        $r1 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $r2 = $r1.<c.a.b.a.d.e.h7$d: sun.misc.Unsafe a>;

        $i0 = virtualinvoke $r2.<sun.misc.Unsafe: int arrayIndexScale(java.lang.Class)>($r0);

        return $i0;

     label1:
        return -1;
    }

    static sun.misc.Unsafe t()
    {
        java.lang.Throwable $r1;
        sun.misc.Unsafe $r3;
        java.lang.Object $r0;
        c.a.b.a.d.e.j7 $r2;

     label1:
        $r2 = new c.a.b.a.d.e.j7;

        specialinvoke $r2.<c.a.b.a.d.e.j7: void <init>()>();

        $r0 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r2);

        $r3 = (sun.misc.Unsafe) $r0;

     label2:
        return $r3;

     label3:
        return null;

     label4:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private static void u(java.lang.Object, long, byte)
    {
        long $l2, $l3;
        short $s6;
        byte $b0;
        int $i1, $i4, $i5;
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        $l2 := @parameter1: long;

        $b0 := @parameter2: byte;

        $l3 = -4L & $l2;

        $i1 = staticinvoke <c.a.b.a.d.e.h7: int b(java.lang.Object,long)>($r0, $l3);

        $i4 = (int) $l2;

        $i4 = $i4 ^ -1;

        $i4 = $i4 & 3;

        $i4 = $i4 << 3;

        $i5 = 255 << $i4;

        $i5 = $i5 ^ -1;

        $i1 = $i1 & $i5;

        $s6 = (short) $b0;

        $s6 = 255 & $s6;

        $i5 = (int) $s6;

        $i4 = $i5 << $i4;

        $i1 = $i4 | $i1;

        staticinvoke <c.a.b.a.d.e.h7: void h(java.lang.Object,long,int)>($r0, $l3, $i1);

        return;
    }

    static void v(java.lang.Object, long, boolean)
    {
        java.lang.Object $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        staticinvoke <c.a.b.a.d.e.h7: void D(java.lang.Object,long,boolean)>($r0, $l0, $z0);

        return;
    }

    static boolean w(java.lang.Object, long)
    {
        long $l0;
        c.a.b.a.d.e.h7$d $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r0 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $z0 = virtualinvoke $r0.<c.a.b.a.d.e.h7$d: boolean h(java.lang.Object,long)>($r1, $l0);

        return $z0;
    }

    static float x(java.lang.Object, long)
    {
        float $f0;
        long $l0;
        c.a.b.a.d.e.h7$d $r0;
        java.lang.Object $r1;

        $r1 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r0 = <c.a.b.a.d.e.h7: c.a.b.a.d.e.h7$d f>;

        $f0 = virtualinvoke $r0.<c.a.b.a.d.e.h7$d: float i(java.lang.Object,long)>($r1, $l0);

        return $f0;
    }

    private static void y(java.lang.Object, long, byte)
    {
        long $l2, $l3;
        short $s6;
        byte $b0;
        int $i1, $i4, $i5;
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        $l2 := @parameter1: long;

        $b0 := @parameter2: byte;

        $l3 = -4L & $l2;

        $i1 = staticinvoke <c.a.b.a.d.e.h7: int b(java.lang.Object,long)>($r0, $l3);

        $i4 = (int) $l2;

        $i4 = $i4 & 3;

        $i4 = $i4 << 3;

        $i5 = 255 << $i4;

        $i5 = $i5 ^ -1;

        $i1 = $i1 & $i5;

        $s6 = (short) $b0;

        $s6 = 255 & $s6;

        $i5 = (int) $s6;

        $i4 = $i5 << $i4;

        $i1 = $i4 | $i1;

        staticinvoke <c.a.b.a.d.e.h7: void h(java.lang.Object,long,int)>($r0, $l3, $i1);

        return;
    }

    private static void z(java.lang.Object, long, boolean)
    {
        byte $b1;
        java.lang.Object $r0;
        long $l0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        $b1 = (byte) $z0;

        staticinvoke <c.a.b.a.d.e.h7: void u(java.lang.Object,long,byte)>($r0, $l0, $b1);

        return;
    }
}
