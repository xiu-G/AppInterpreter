public final class wabao.ETAppLock.util.i extends java.lang.Object
{

    public static void a(java.io.InputStream, java.io.OutputStream, java.security.PublicKey)
    {
        java.io.OutputStream $r1;
        java.lang.Throwable $r7;
        byte[] $r4, $r5;
        java.security.PublicKey $r2;
        javax.crypto.Cipher $r3;
        java.lang.Exception $r6, $r8, $r9;
        byte $b0;
        int $i1, $i2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 := @parameter2: java.security.PublicKey;

     label01:
        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA/ECB/PKCS1Padding");

     label02:
        $r4 = newarray (byte)[128];

     label03:
        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r2);

     label04:
        $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r4);

     label05:
        if $i1 != -1 goto label12;

     label06:
        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

     label07:
        if $r1 == null goto label09;

     label08:
        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label09:
        if $r0 == null goto label30;

     label10:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label11:
        return;

     label12:
        $i2 = lengthof $r4;

     label13:
        if $i2 != $i1 goto label23;

        $r5 = $r4;

     label14:
        $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r5);

     label15:
        goto label04;

     label16:
        $r6 := @caughtexception;

     label17:
        throw $r6;

     label18:
        $r7 := @caughtexception;

        if $r1 == null goto label20;

     label19:
        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label20:
        if $r0 == null goto label22;

     label21:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label22:
        throw $r7;

     label23:
        $r5 = newarray (byte)[$i1];

     label24:
        $i2 = 0;

     label25:
        if $i2 >= $i1 goto label14;

     label26:
        $b0 = $r4[$i2];

        $r5[$i2] = $b0;

     label27:
        $i2 = $i2 + 1;

        goto label25;

     label28:
        $r8 := @caughtexception;

        return;

     label29:
        $r9 := @caughtexception;

        goto label22;

     label30:
        return;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label05 with label16;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Exception from label08 to label09 with label28;
        catch java.lang.Exception from label10 to label11 with label28;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Exception from label19 to label20 with label29;
        catch java.lang.Exception from label21 to label22 with label29;
        catch java.lang.Exception from label23 to label24 with label16;
        catch java.lang.Exception from label26 to label27 with label16;
    }
}
