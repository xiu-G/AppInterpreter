public final class com.google.zxing.oned.EAN8Writer extends com.google.zxing.oned.UPCEANWriter
{
    private static final int codeWidth;

    public void <init>()
    {
        com.google.zxing.oned.EAN8Writer r0;

        r0 := @this: com.google.zxing.oned.EAN8Writer;

        specialinvoke r0.<com.google.zxing.oned.UPCEANWriter: void <init>()>();

        return;
    }

    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int, java.util.Hashtable) throws com.google.zxing.WriterException
    {
        com.google.zxing.oned.EAN8Writer r0;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuffer $r6;
        int $i0, $i1;
        com.google.zxing.common.BitMatrix $r7;
        java.lang.String $r1;
        com.google.zxing.BarcodeFormat $r2, $r4;
        java.util.Hashtable $r3;

        r0 := @this: com.google.zxing.oned.EAN8Writer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: java.util.Hashtable;

        $r4 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat EAN_8>;

        if $r2 == $r4 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can only encode EAN_8, but got ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label1:
        $r7 = specialinvoke r0.<com.google.zxing.oned.UPCEANWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable)>($r1, $r2, $i0, $i1, $r3);

        return $r7;
    }

    public byte[] encode(java.lang.String)
    {
        byte[] $r2;
        int[][] $r3;
        com.google.zxing.oned.EAN8Writer r0;
        java.lang.IllegalArgumentException $r4;
        int[] $r6;
        java.lang.StringBuffer $r5;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r7;

        r0 := @this: com.google.zxing.oned.EAN8Writer;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 8 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Requested contents should be 8 digits long, but got ");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label1:
        $r2 = newarray (byte)[67];

        $r6 = <com.google.zxing.oned.UPCEANReader: int[] START_END_PATTERN>;

        $i0 = staticinvoke <com.google.zxing.oned.EAN8Writer: int appendPattern(byte[],int,int[],int)>($r2, 0, $r6, 1);

        $i1 = 0;

     label2:
        if $i1 > 3 goto label3;

        $i2 = $i1 + 1;

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r3 = <com.google.zxing.oned.UPCEANReader: int[][] L_PATTERNS>;

        $r6 = $r3[$i2];

        $i2 = staticinvoke <com.google.zxing.oned.EAN8Writer: int appendPattern(byte[],int,int[],int)>($r2, $i0, $r6, 0);

        $i0 = $i0 + $i2;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r6 = <com.google.zxing.oned.UPCEANReader: int[] MIDDLE_PATTERN>;

        $i1 = staticinvoke <com.google.zxing.oned.EAN8Writer: int appendPattern(byte[],int,int[],int)>($r2, $i0, $r6, 0);

        $i0 = $i0 + $i1;

        $i1 = 4;

     label4:
        if $i1 > 7 goto label5;

        $i2 = $i1 + 1;

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r3 = <com.google.zxing.oned.UPCEANReader: int[][] L_PATTERNS>;

        $r6 = $r3[$i2];

        $i2 = staticinvoke <com.google.zxing.oned.EAN8Writer: int appendPattern(byte[],int,int[],int)>($r2, $i0, $r6, 1);

        $i0 = $i0 + $i2;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r6 = <com.google.zxing.oned.UPCEANReader: int[] START_END_PATTERN>;

        staticinvoke <com.google.zxing.oned.EAN8Writer: int appendPattern(byte[],int,int[],int)>($r2, $i0, $r6, 1);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.google.zxing.oned.EAN8Writer: int codeWidth> = 67;

        return;
    }
}
