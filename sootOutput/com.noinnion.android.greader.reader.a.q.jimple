public final class com.noinnion.android.greader.reader.a.q extends java.lang.Object
{
    private static final android.graphics.Paint a;

    static void <clinit>()
    {
        android.graphics.Paint $r0;

        $r0 = new android.graphics.Paint;

        specialinvoke $r0.<android.graphics.Paint: void <init>(int)>(3);

        <com.noinnion.android.greader.reader.a.q: android.graphics.Paint a> = $r0;

        return;
    }

    private void <init>()
    {
        com.noinnion.android.greader.reader.a.q r0;

        r0 := @this: com.noinnion.android.greader.reader.a.q;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void a(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r7, $r9, $r10;
        byte[] $r6;
        java.net.URL $r2, $r12;
        int $i0;
        java.lang.String $r0, $r1;
        java.net.MalformedURLException $r14;
        java.io.FileOutputStream $r5, $r13;
        java.io.IOException $r15;
        java.lang.Exception $r8, $r11;
        java.lang.Object $r3;
        java.io.InputStream $r4;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r12 = new java.net.URL;

        $r2 = $r12;

     label01:
        specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.Object getContent()>();

     label02:
        $r4 = (java.io.InputStream) $r3;

     label03:
        if $r4 != null goto label04;

        return;

     label04:
        $r13 = new java.io.FileOutputStream;

        $r5 = $r13;

     label05:
        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.lang.String)>($r0);

     label06:
        $r6 = newarray (byte)[4096];

     label07:
        $i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>($r6);

     label08:
        if $i0 != -1 goto label12;

     label09:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        virtualinvoke $r5.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r5.<java.io.FileOutputStream: void close()>();

     label10:
        return;

     label11:
        $r7 := @caughtexception;

        $r14 = (java.net.MalformedURLException) $r7;

        virtualinvoke $r14.<java.net.MalformedURLException: void printStackTrace()>();

        return;

     label12:
        virtualinvoke $r5.<java.io.FileOutputStream: void write(byte[],int,int)>($r6, 0, $i0);

     label13:
        goto label07;

     label14:
        $r8 := @caughtexception;

     label15:
        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label16:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        virtualinvoke $r5.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r5.<java.io.FileOutputStream: void close()>();

     label17:
        return;

     label18:
        $r9 := @caughtexception;

        $r15 = (java.io.IOException) $r9;

        virtualinvoke $r15.<java.io.IOException: void printStackTrace()>();

        return;

     label19:
        $r10 := @caughtexception;

     label20:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        virtualinvoke $r5.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r5.<java.io.FileOutputStream: void close()>();

        throw $r10;

     label21:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.net.MalformedURLException from label01 to label02 with label11;
        catch java.net.MalformedURLException from label05 to label06 with label11;
        catch java.io.IOException from label01 to label02 with label18;
        catch java.io.IOException from label05 to label06 with label18;
        catch java.lang.Exception from label01 to label03 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.net.MalformedURLException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label18;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.net.MalformedURLException from label16 to label17 with label11;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Exception from label16 to label17 with label21;
        catch java.net.MalformedURLException from label20 to label21 with label11;
        catch java.io.IOException from label20 to label21 with label18;
        catch java.lang.Exception from label20 to label21 with label21;
    }
}
