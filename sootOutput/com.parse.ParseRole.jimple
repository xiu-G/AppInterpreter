public class com.parse.ParseRole extends com.parse.ParseObject
{
    static final java.lang.String CLASS_NAME;
    private static final java.util.regex.Pattern NAME_PATTERN;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <com.parse.ParseRole: java.lang.String CLASS_NAME> = "_Role";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[0-9a-zA-Z_\\- ]+$");

        <com.parse.ParseRole: java.util.regex.Pattern NAME_PATTERN> = $r0;

        return;
    }

    void <init>()
    {
        com.parse.ParseRole r0;

        r0 := @this: com.parse.ParseRole;

        specialinvoke r0.<com.parse.ParseObject: void <init>(java.lang.String)>("_Role");

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        com.parse.ParseRole r0;

        r0 := @this: com.parse.ParseRole;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.parse.ParseObject: void <init>(java.lang.String)>("_Role");

        virtualinvoke r0.<com.parse.ParseRole: void setName(java.lang.String)>($r1);

        return;
    }

    public void <init>(java.lang.String, com.parse.ParseACL)
    {
        java.lang.String $r1;
        com.parse.ParseACL $r2;
        com.parse.ParseRole r0;

        r0 := @this: com.parse.ParseRole;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.parse.ParseACL;

        specialinvoke r0.<com.parse.ParseObject: void <init>(java.lang.String)>("_Role");

        virtualinvoke r0.<com.parse.ParseRole: void setName(java.lang.String)>($r1);

        virtualinvoke r0.<com.parse.ParseRole: void setACL(com.parse.ParseACL)>($r2);

        return;
    }

    public static com.parse.ParseQuery getQuery()
    {
        com.parse.ParseQuery $r0;

        $r0 = new com.parse.ParseQuery;

        specialinvoke $r0.<com.parse.ParseQuery: void <init>(java.lang.String)>("_Role");

        return $r0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        com.parse.ParseRole r0;

        r0 := @this: com.parse.ParseRole;

        $r1 = virtualinvoke r0.<com.parse.ParseRole: java.lang.String getString(java.lang.String)>("name");

        return $r1;
    }

    public com.parse.ParseRelation getRoles()
    {
        com.parse.ParseRelation $r1;
        com.parse.ParseRole r0;

        r0 := @this: com.parse.ParseRole;

        $r1 = virtualinvoke r0.<com.parse.ParseRole: com.parse.ParseRelation getRelation(java.lang.String)>("roles");

        return $r1;
    }

    public com.parse.ParseRelation getUsers()
    {
        com.parse.ParseRelation $r1;
        com.parse.ParseRole r0;

        r0 := @this: com.parse.ParseRole;

        $r1 = virtualinvoke r0.<com.parse.ParseRole: com.parse.ParseRelation getRelation(java.lang.String)>("users");

        return $r1;
    }

    public void put(java.lang.String, java.lang.Object)
    {
        java.lang.IllegalArgumentException $r4;
        java.util.regex.Matcher $r6;
        com.parse.ParseRole r0;
        java.lang.Object $r2;
        java.lang.String $r1, $r3;
        java.util.regex.Pattern $r5;
        boolean $z0;

        r0 := @this: com.parse.ParseRole;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = "name";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<com.parse.ParseRole: java.lang.String getObjectId()>();

        if $r3 == null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A role\'s name can only be set before it has been saved.");

        throw $r4;

     label1:
        $z0 = $r2 instanceof java.lang.String;

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A role\'s name must be a String.");

        throw $r4;

     label2:
        $r5 = <com.parse.ParseRole: java.util.regex.Pattern NAME_PATTERN>;

        $r3 = (java.lang.String) $r2;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A role\'s name can only contain alphanumeric characters, _, -, and spaces.");

        throw $r4;

     label3:
        specialinvoke r0.<com.parse.ParseObject: void put(java.lang.String,java.lang.Object)>($r1, $r2);

        return;
    }

    public void setName(java.lang.String)
    {
        java.lang.String $r1;
        com.parse.ParseRole r0;

        r0 := @this: com.parse.ParseRole;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.parse.ParseRole: void put(java.lang.String,java.lang.Object)>("name", $r1);

        return;
    }

    void validateSave()
    {
        java.lang.IllegalStateException $r2;
        java.lang.String $r1;
        com.parse.ParseRole r0;

        r0 := @this: com.parse.ParseRole;

        $r1 = virtualinvoke r0.<com.parse.ParseRole: java.lang.String getObjectId()>();

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.<com.parse.ParseRole: java.lang.String getName()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("New roles must specify a name.");

        throw $r2;

     label1:
        specialinvoke r0.<com.parse.ParseObject: void validateSave()>();

        return;
    }
}
