public final class cs.gson.internal.bind.ArrayTypeAdapter extends cs.gson.TypeAdapter
{
    public static final cs.gson.TypeAdapterFactory FACTORY;
    private final java.lang.Class componentType;
    private final cs.gson.TypeAdapter componentTypeAdapter;

    static void <clinit>()
    {
        cs.gson.internal.bind.ArrayTypeAdapter$1 $r0;

        $r0 = new cs.gson.internal.bind.ArrayTypeAdapter$1;

        specialinvoke $r0.<cs.gson.internal.bind.ArrayTypeAdapter$1: void <init>()>();

        <cs.gson.internal.bind.ArrayTypeAdapter: cs.gson.TypeAdapterFactory FACTORY> = $r0;

        return;
    }

    public void <init>(cs.gson.Gson, cs.gson.TypeAdapter, java.lang.Class)
    {
        cs.gson.TypeAdapter r2;
        cs.gson.Gson $r1;
        cs.gson.internal.bind.ArrayTypeAdapter r0;
        java.lang.Class r3;
        cs.gson.internal.bind.TypeAdapterRuntimeTypeWrapper $r4;

        r0 := @this: cs.gson.internal.bind.ArrayTypeAdapter;

        $r1 := @parameter0: cs.gson.Gson;

        r2 := @parameter1: cs.gson.TypeAdapter;

        r3 := @parameter2: java.lang.Class;

        specialinvoke r0.<cs.gson.TypeAdapter: void <init>()>();

        $r4 = new cs.gson.internal.bind.TypeAdapterRuntimeTypeWrapper;

        specialinvoke $r4.<cs.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void <init>(cs.gson.Gson,cs.gson.TypeAdapter,java.lang.reflect.Type)>($r1, r2, r3);

        r0.<cs.gson.internal.bind.ArrayTypeAdapter: cs.gson.TypeAdapter componentTypeAdapter> = $r4;

        r0.<cs.gson.internal.bind.ArrayTypeAdapter: java.lang.Class componentType> = r3;

        return;
    }

    public java.lang.Object read(cs.gson.stream.JsonReader) throws java.io.IOException
    {
        cs.gson.internal.bind.ArrayTypeAdapter r0;
        cs.gson.stream.JsonReader $r1;
        java.util.ArrayList r2;
        cs.gson.TypeAdapter $r8;
        int $i0, $i1;
        java.lang.Class $r5;
        java.lang.Object $r6, $r7;
        cs.gson.stream.JsonToken $r3, $r4;
        boolean $z0;

        r0 := @this: cs.gson.internal.bind.ArrayTypeAdapter;

        $r1 := @parameter0: cs.gson.stream.JsonReader;

        $r3 = virtualinvoke $r1.<cs.gson.stream.JsonReader: cs.gson.stream.JsonToken peek()>();

        $r4 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken NULL>;

        if $r3 != $r4 goto label1;

        virtualinvoke $r1.<cs.gson.stream.JsonReader: void nextNull()>();

        return null;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r1.<cs.gson.stream.JsonReader: void beginArray()>();

     label2:
        $z0 = virtualinvoke $r1.<cs.gson.stream.JsonReader: boolean hasNext()>();

        if $z0 != 0 goto label4;

        virtualinvoke $r1.<cs.gson.stream.JsonReader: void endArray()>();

        $r5 = r0.<cs.gson.internal.bind.ArrayTypeAdapter: java.lang.Class componentType>;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r5, $i0);

        $i0 = 0;

     label3:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label5;

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i0);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r6, $i0, $r7);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r8 = r0.<cs.gson.internal.bind.ArrayTypeAdapter: cs.gson.TypeAdapter componentTypeAdapter>;

        $r6 = virtualinvoke $r8.<cs.gson.TypeAdapter: java.lang.Object read(cs.gson.stream.JsonReader)>($r1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label2;

     label5:
        return $r6;
    }

    public void write(cs.gson.stream.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        cs.gson.TypeAdapter $r3;
        cs.gson.internal.bind.ArrayTypeAdapter r0;
        int i0, $i1;
        java.lang.Object $r2, $r4;
        cs.gson.stream.JsonWriter $r1;

        r0 := @this: cs.gson.internal.bind.ArrayTypeAdapter;

        $r1 := @parameter0: cs.gson.stream.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        if $r2 != null goto label1;

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter nullValue()>();

        return;

     label1:
        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter beginArray()>();

        i0 = 0;

        $i1 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r2);

     label2:
        if i0 < $i1 goto label3;

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter endArray()>();

        return;

     label3:
        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r2, i0);

        $r3 = r0.<cs.gson.internal.bind.ArrayTypeAdapter: cs.gson.TypeAdapter componentTypeAdapter>;

        virtualinvoke $r3.<cs.gson.TypeAdapter: void write(cs.gson.stream.JsonWriter,java.lang.Object)>($r1, $r4);

        i0 = i0 + 1;

        goto label2;
    }
}
