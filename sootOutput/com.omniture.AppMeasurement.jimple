public class com.omniture.AppMeasurement extends com.omniture.AppMeasurementBaseSE
{
    protected android.app.Application application;
    public com.omniture.AppMeasurement$DoPlugins doPlugins;
    public com.omniture.AppMeasurement$DoRequest doRequest;

    public void <init>()
    {
        com.omniture.AppMeasurement r0;

        r0 := @this: com.omniture.AppMeasurement;

        specialinvoke r0.<com.omniture.AppMeasurementBaseSE: void <init>()>();

        r0.<com.omniture.AppMeasurement: com.omniture.AppMeasurement$DoPlugins doPlugins> = null;

        r0.<com.omniture.AppMeasurement: com.omniture.AppMeasurement$DoRequest doRequest> = null;

        r0.<com.omniture.AppMeasurement: android.app.Application application> = null;

        r0.<com.omniture.AppMeasurementBase: java.lang.String target> = "AN";

        return;
    }

    public void <init>(android.app.Application)
    {
        android.app.Application $r1;
        java.lang.String $r2;
        java.io.File $r3, $r4;
        com.omniture.AppMeasurement r0;

        r0 := @this: com.omniture.AppMeasurement;

        $r1 := @parameter0: android.app.Application;

        specialinvoke r0.<com.omniture.AppMeasurement: void <init>()>();

        r0.<com.omniture.AppMeasurement: android.app.Application application> = $r1;

        $r1 = r0.<com.omniture.AppMeasurement: android.app.Application application>;

        if $r1 == null goto label1;

        $r2 = r0.<com.omniture.AppMeasurement_Variables: java.lang.String offlineFilename>;

        if $r2 != null goto label1;

        $r3 = new java.io.File;

        $r1 = r0.<com.omniture.AppMeasurement: android.app.Application application>;

        $r4 = virtualinvoke $r1.<android.content.ContextWrapper: java.io.File getCacheDir()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "AppMeasurement.offline");

        $r2 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String offlineFilename> = $r2;

     label1:
        return;
    }

    protected void _doPlugins()
    {
        com.omniture.AppMeasurement$DoPlugins $r1;
        com.omniture.AppMeasurement r0;

        r0 := @this: com.omniture.AppMeasurement;

        $r1 = r0.<com.omniture.AppMeasurement: com.omniture.AppMeasurement$DoPlugins doPlugins>;

        if $r1 == null goto label1;

        $r1 = r0.<com.omniture.AppMeasurement: com.omniture.AppMeasurement$DoPlugins doPlugins>;

        interfaceinvoke $r1.<com.omniture.AppMeasurement$DoPlugins: void doPlugins(com.omniture.AppMeasurement)>(r0);

     label1:
        return;
    }

    protected boolean _doRequest(java.lang.String, java.util.Hashtable)
    {
        com.omniture.AppMeasurement$DoRequest $r3;
        java.lang.String $r1;
        java.util.Hashtable $r2;
        com.omniture.AppMeasurement r0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurement;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Hashtable;

        $r3 = r0.<com.omniture.AppMeasurement: com.omniture.AppMeasurement$DoRequest doRequest>;

        if $r3 == null goto label1;

        $r3 = r0.<com.omniture.AppMeasurement: com.omniture.AppMeasurement$DoRequest doRequest>;

        $z0 = interfaceinvoke $r3.<com.omniture.AppMeasurement$DoRequest: boolean doRequest(com.omniture.AppMeasurement,java.lang.String,java.util.Hashtable)>(r0, $r1, $r2);

        return $z0;

     label1:
        return 1;
    }

    protected boolean _hasDoPlugins()
    {
        com.omniture.AppMeasurement$DoPlugins $r1;
        com.omniture.AppMeasurement r0;

        r0 := @this: com.omniture.AppMeasurement;

        $r1 = r0.<com.omniture.AppMeasurement: com.omniture.AppMeasurement$DoPlugins doPlugins>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean _hasDoRequest()
    {
        com.omniture.AppMeasurement$DoRequest $r1;
        com.omniture.AppMeasurement r0;

        r0 := @this: com.omniture.AppMeasurement;

        $r1 = r0.<com.omniture.AppMeasurement: com.omniture.AppMeasurement$DoRequest doRequest>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    protected java.lang.String getApplicationID()
    {
        java.lang.CharSequence $r6;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageInfo $r5;
        java.lang.Exception $r10;
        android.app.Application $r2;
        java.lang.StringBuffer $r8, $r9;
        java.lang.String r1, r7;
        android.content.pm.ApplicationInfo $r4;
        com.omniture.AppMeasurement r0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurement;

     label01:
        $r2 = r0.<com.omniture.AppMeasurement: android.app.Application application>;

        $r3 = virtualinvoke $r2.<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>();

        $r2 = r0.<com.omniture.AppMeasurement: android.app.Application application>;

        r1 = virtualinvoke $r2.<android.content.ContextWrapper: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        $r2 = r0.<com.omniture.AppMeasurement: android.app.Application application>;

        r1 = virtualinvoke $r2.<android.content.ContextWrapper: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 0);

        $r6 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r4);

        r7 = (java.lang.String) $r6;

        r1 = $r5.<android.content.pm.PackageInfo: java.lang.String versionName>;

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r7);

     label02:
        if $z0 == 0 goto label10;

        $r8 = new java.lang.StringBuffer;

     label03:
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>(r1);

     label04:
        if $z0 == 0 goto label08;

        $r9 = new java.lang.StringBuffer;

     label05:
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        r1 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label06:
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        r1 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        return r1;

     label08:
        r1 = "";

        goto label06;

     label09:
        $r10 := @caughtexception;

     label10:
        return null;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label06 to label07 with label09;
    }

    protected java.lang.String getDefaultAcceptLanguage()
    {
        java.lang.Exception $r7;
        android.app.Application $r2;
        java.util.Locale r1;
        java.lang.StringBuffer $r5;
        android.content.res.Configuration $r4;
        java.lang.String $r6;
        com.omniture.AppMeasurement r0;
        android.content.res.Resources $r3;

        r0 := @this: com.omniture.AppMeasurement;

     label1:
        $r2 = r0.<com.omniture.AppMeasurement: android.app.Application application>;

        $r3 = virtualinvoke $r2.<android.content.ContextWrapper: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r1 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

     label2:
        $r5 = new java.lang.StringBuffer;

     label3:
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        $r6 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    protected java.lang.String getDefaultUserAgent()
    {
        java.lang.StringBuffer $r3, $r5;
        java.lang.String $r1, $r2, $r4;
        com.omniture.AppMeasurement r0;
        boolean $z0;

        r0 := @this: com.omniture.AppMeasurement;

        $r1 = virtualinvoke r0.<com.omniture.AppMeasurement: java.lang.String getDefaultAcceptLanguage()>();

        $r2 = virtualinvoke r0.<com.omniture.AppMeasurement: java.lang.String getApplicationID()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Mozilla/5.0 (Linux; U; Android ");

        $r4 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

     label1:
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r1 = <android.os.Build: java.lang.String DEVICE>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $z0 = virtualinvoke r0.<com.omniture.AppMeasurementBase: boolean isSet(java.lang.String)>($r2);

        if $z0 == 0 goto label4;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label3:
        $r1 = "en_US";

        goto label1;

     label4:
        $r2 = "";

        goto label2;
    }

    protected java.lang.String getDefaultVisitorID()
    {
        android.app.Application $r1;
        android.telephony.TelephonyManager r3;
        java.lang.Object $r2;
        java.lang.String $r4;
        java.lang.Exception $r5;
        com.omniture.AppMeasurement r0;

        r0 := @this: com.omniture.AppMeasurement;

     label1:
        $r1 = r0.<com.omniture.AppMeasurement: android.app.Application application>;

        $r2 = virtualinvoke $r1.<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>("phone");

        r3 = (android.telephony.TelephonyManager) $r2;

        $r4 = virtualinvoke r3.<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void handleTechnology()
    {
        android.util.DisplayMetrics $r3;
        java.lang.Exception $r6;
        android.app.Application $r1;
        java.lang.StringBuffer $r4;
        int $i0;
        java.lang.String $r5;
        com.omniture.AppMeasurement r0;
        android.content.res.Resources $r2;

        r0 := @this: com.omniture.AppMeasurement;

     label1:
        $r1 = r0.<com.omniture.AppMeasurement: android.app.Application application>;

        $r2 = virtualinvoke $r1.<android.content.ContextWrapper: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

     label2:
        $r4 = new java.lang.StringBuffer;

     label3:
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $i0 = $r3.<android.util.DisplayMetrics: int widthPixels>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("x");

        $i0 = $r3.<android.util.DisplayMetrics: int heightPixels>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<com.omniture.AppMeasurement_Variables: java.lang.String resolution> = $r5;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void logDebug(java.lang.String)
    {
        java.lang.String $r1;
        com.omniture.AppMeasurement r0;

        r0 := @this: com.omniture.AppMeasurement;

        $r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AppMeasurement", $r1);

        return;
    }
}
