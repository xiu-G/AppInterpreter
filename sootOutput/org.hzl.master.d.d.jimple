final class org.hzl.master.d.d extends java.lang.Object
{

    private static java.util.List a()
    {
        java.lang.Throwable $r5, $r10;
        java.lang.String[] $r6;
        java.util.ArrayList $r3, $r13;
        org.hzl.master.d.c $r7, $r15;
        java.lang.String $r4, $r9;
        java.io.LineNumberReader $r1, $r12;
        java.io.IOException $r17;
        java.io.File $r0, $r8, $r14;
        java.io.FileNotFoundException $r16;
        java.io.FileReader $r2, $r11;

        $r12 = new java.io.LineNumberReader;

        $r1 = $r12;

        $r11 = new java.io.FileReader;

        $r2 = $r11;

     label01:
        specialinvoke $r11.<java.io.FileReader: void <init>(java.lang.String)>("/proc/mounts");

        specialinvoke $r12.<java.io.LineNumberReader: void <init>(java.io.Reader)>($r2);

     label02:
        $r13 = new java.util.ArrayList;

        $r3 = $r13;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

     label03:
        $r4 = virtualinvoke $r1.<java.io.LineNumberReader: java.lang.String readLine()>();

     label04:
        if $r4 != null goto label08;

     label05:
        virtualinvoke $r1.<java.io.LineNumberReader: void close()>();

     label06:
        return $r3;

     label07:
        $r5 := @caughtexception;

        $r16 = (java.io.FileNotFoundException) $r5;

        virtualinvoke $r16.<java.io.FileNotFoundException: void printStackTrace()>();

        return null;

     label08:
        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

     label09:
        $r15 = new org.hzl.master.d.c;

        $r7 = $r15;

        $r8 = new java.io.File;

        $r0 = $r8;

        $r4 = $r6[0];

     label10:
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r4);

     label11:
        $r14 = new java.io.File;

        $r8 = $r14;

        $r4 = $r6[1];

     label12:
        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r4);

     label13:
        $r4 = $r6[2];

        $r9 = $r6[3];

     label14:
        specialinvoke $r15.<org.hzl.master.d.c: void <init>(java.io.File,java.io.File,java.lang.String,java.lang.String)>($r0, $r8, $r4, $r9);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label15:
        goto label03;

     label16:
        $r10 := @caughtexception;

        $r17 = (java.io.IOException) $r10;

        virtualinvoke $r17.<java.io.IOException: void printStackTrace()>();

        return $r3;

        catch java.io.FileNotFoundException from label01 to label02 with label07;
        catch java.io.IOException from label03 to label04 with label16;
        catch java.io.IOException from label05 to label06 with label16;
        catch java.io.IOException from label08 to label09 with label16;
        catch java.io.IOException from label10 to label11 with label16;
        catch java.io.IOException from label12 to label13 with label16;
        catch java.io.IOException from label14 to label15 with label16;
    }

    private static org.hzl.master.d.c a(java.lang.String)
    {
        java.util.Iterator $r3;
        java.io.File $r1, $r6;
        org.hzl.master.d.c $r5;
        java.util.List $r2;
        java.lang.Object $r4;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.hzl.master.d.d: java.util.List a()>();

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

     label3:
        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.hzl.master.d.c) $r4;

        $r6 = virtualinvoke $r5.<org.hzl.master.d.c: java.io.File b()>();

        $z0 = virtualinvoke $r6.<java.io.File: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        return $r5;
    }

    static boolean a(android.content.Context, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r16, $r17, $r18;
        android.content.Context $r0;
        java.util.concurrent.TimeoutException $r25;
        java.lang.String[] $r11;
        org.hzl.master.d.n $r13;
        org.hzl.master.d.c $r6;
        org.hzl.master.d.a $r14;
        java.util.Locale $r8;
        org.hzl.master.d.e $r10, $r22;
        int $i0;
        java.lang.String $r1, $r2, $r9;
        org.hzl.master.a.a $r19;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.Set $r7;
        java.io.IOException $r24;
        java.io.File $r5, $r20;
        java.util.List $r3;
        java.lang.InterruptedException $r23;
        java.lang.StringBuilder $r12, $r21;
        java.lang.Object $r15;

        $r0 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z0 != 0 goto label01;

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label01:
        $r3 = staticinvoke <org.hzl.master.d.d: java.util.List a()>();

        if $r3 == null goto label02;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label15;

     label02:
        return 0;

     label03:
        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label09;

     label05:
        if $z0 != 0 goto label06;

        $r20 = new java.io.File;

        specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>($r2);

        $r2 = virtualinvoke $r20.<java.io.File: java.lang.String getParent()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toString()>();

     label06:
        if $z0 == 0 goto label03;

        $r6 = staticinvoke <org.hzl.master.d.d: org.hzl.master.d.c a(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<org.hzl.master.d.c: java.util.Set c()>();

        $r8 = <java.util.Locale: java.util.Locale CHINA>;

        $r9 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label08;

        $r22 = new org.hzl.master.d.e;

        $r10 = $r22;

        $r11 = newarray (java.lang.String)[4];

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("busybox mount -o remount,");

        $r8 = <java.util.Locale: java.util.Locale CHINA>;

        $r9 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        $r12 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r6.<org.hzl.master.d.c: java.io.File a()>();

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r6.<org.hzl.master.d.c: java.io.File b()>();

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[0] = $r9;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("toolbox mount -o remount,");

        $r8 = <java.util.Locale: java.util.Locale CHINA>;

        $r9 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        $r12 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r6.<org.hzl.master.d.c: java.io.File a()>();

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r6.<org.hzl.master.d.c: java.io.File b()>();

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[1] = $r9;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("mount -o remount,");

        $r8 = <java.util.Locale: java.util.Locale CHINA>;

        $r9 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        $r12 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r6.<org.hzl.master.d.c: java.io.File a()>();

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r6.<org.hzl.master.d.c: java.io.File b()>();

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[2] = $r9;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("/system/bin/toolbox mount -o remount,");

        $r8 = <java.util.Locale: java.util.Locale CHINA>;

        $r9 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        $r12 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r6.<org.hzl.master.d.c: java.io.File a()>();

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r6.<org.hzl.master.d.c: java.io.File b()>();

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[3] = $r9;

        specialinvoke $r22.<org.hzl.master.d.e: void <init>(java.lang.String[])>($r11);

     label07:
        $r13 = staticinvoke <org.hzl.master.d.n: org.hzl.master.d.n a(android.content.Context)>($r0);

        $r14 = virtualinvoke $r13.<org.hzl.master.d.n: org.hzl.master.d.a a(org.hzl.master.d.a)>($r10);

        virtualinvoke $r14.<org.hzl.master.d.a: int d()>();

     label08:
        $r6 = staticinvoke <org.hzl.master.d.d: org.hzl.master.d.c a(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<org.hzl.master.d.c: java.util.Set c()>();

        $r8 = <java.util.Locale: java.util.Locale CHINA>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label14;

        return 1;

     label09:
        $r15 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.hzl.master.d.c) $r15;

        $r5 = virtualinvoke $r6.<org.hzl.master.d.c: java.io.File b()>();

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String toString()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label04;

        $z0 = 1;

        goto label05;

     label10:
        $r16 := @caughtexception;

        $r23 = (java.lang.InterruptedException) $r16;

        virtualinvoke $r23.<java.lang.InterruptedException: void printStackTrace()>();

        goto label08;

     label11:
        $r17 := @caughtexception;

        $r24 = (java.io.IOException) $r17;

        virtualinvoke $r24.<java.io.IOException: void printStackTrace()>();

        goto label08;

     label12:
        $r18 := @caughtexception;

        $r25 = (java.util.concurrent.TimeoutException) $r18;

        virtualinvoke $r25.<java.util.concurrent.TimeoutException: void printStackTrace()>();

        goto label08;

     label13:
        $r19 := @caughtexception;

        virtualinvoke $r19.<org.hzl.master.a.a: void printStackTrace()>();

        goto label08;

     label14:
        return 0;

     label15:
        $z0 = 0;

        goto label06;

        catch java.lang.InterruptedException from label07 to label08 with label10;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.util.concurrent.TimeoutException from label07 to label08 with label12;
        catch org.hzl.master.a.a from label07 to label08 with label13;
    }
}
