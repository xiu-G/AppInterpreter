class com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen extends android.webkit.WebViewClient
{
    final com.apostek.library.AdWhirlCustomHandler this$0;

    private void <init>(com.apostek.library.AdWhirlCustomHandler)
    {
        com.apostek.library.AdWhirlCustomHandler $r1;
        com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen r0;

        r0 := @this: com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen;

        $r1 := @parameter0: com.apostek.library.AdWhirlCustomHandler;

        r0.<com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen: com.apostek.library.AdWhirlCustomHandler this$0> = $r1;

        specialinvoke r0.<android.webkit.WebViewClient: void <init>()>();

        return;
    }

    void <init>(com.apostek.library.AdWhirlCustomHandler, com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen)
    {
        com.apostek.library.AdWhirlCustomHandler $r1;
        com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen r0, $r2;

        r0 := @this: com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen;

        $r1 := @parameter0: com.apostek.library.AdWhirlCustomHandler;

        $r2 := @parameter1: com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen;

        specialinvoke r0.<com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen: void <init>(com.apostek.library.AdWhirlCustomHandler)>($r1);

        return;
    }

    public void onPageFinished(android.webkit.WebView, java.lang.String)
    {
        java.lang.String $r2;
        android.webkit.WebView $r1;
        com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen r0;

        r0 := @this: com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        return;
    }

    public void onReceivedError(android.webkit.WebView, int, java.lang.String, java.lang.String)
    {
        com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen r0;
        int $i0;
        java.lang.String $r2, $r3;
        android.webkit.WebView $r1;
        com.apostek.library.AdWhirlCustomHandler $r5;
        com.adwhirl.AdWhirlLayout $r4;

        r0 := @this: com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen;

        $r1 := @parameter0: android.webkit.WebView;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r5 = r0.<com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen: com.apostek.library.AdWhirlCustomHandler this$0>;

        $r4 = staticinvoke <com.apostek.library.AdWhirlCustomHandler: com.adwhirl.AdWhirlLayout access$0(com.apostek.library.AdWhirlCustomHandler)>($r5);

        virtualinvoke $r4.<com.adwhirl.AdWhirlLayout: void rollover()>();

        return;
    }

    public boolean shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String)
    {
        com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen r0;
        android.net.Uri $r9;
        java.util.HashMap r4;
        android.content.Intent r5;
        java.lang.String[] $r6;
        java.lang.Exception r3, $r12;
        int $i0;
        java.lang.Boolean $r8;
        java.lang.String $r2, r7;
        android.webkit.WebView $r1;
        com.apostek.library.AdWhirlCustomHandler $r10;
        android.app.Activity $r11;
        boolean $z0;

        r0 := @this: com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

     label01:
        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("&_AP_FLURRY_=");

     label02:
        $r2 = null;

        r7 = null;

        if $r6 == null goto label07;

     label03:
        $i0 = lengthof $r6;

     label04:
        if $i0 <= 0 goto label07;

     label05:
        $r2 = $r6[0];

        $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String)>($r2);

     label06:
        r7 = $r6[1];

        r7 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String)>(r7);

     label07:
        $r8 = <com.apostek.library.AdLibrary: java.lang.Boolean ENABLE_FLURRY_EVENTS>;

     label08:
        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

     label09:
        if $z0 == 0 goto label15;

        if r7 == null goto label15;

     label10:
        $z0 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(" - ");

     label11:
        if $z0 == 0 goto label15;

     label12:
        $r6 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(" - ");

        $i0 = lengthof $r6;

     label13:
        if $i0 != 2 goto label15;

        r4 = new java.util.HashMap;

     label14:
        specialinvoke r4.<java.util.HashMap: void <init>()>();

        r7 = $r6[1];

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Banner", r7);

        r7 = $r6[0];

        staticinvoke <com.flurry.android.FlurryAgent: void onEvent(java.lang.String,java.util.Map)>(r7, r4);

     label15:
        if $r2 == null goto label20;

        r5 = new android.content.Intent;

     label16:
        $r9 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r2);

        specialinvoke r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r9);

        $r10 = r0.<com.apostek.library.AdWhirlCustomHandler$CustomWebViewPartnerAdScreen: com.apostek.library.AdWhirlCustomHandler this$0>;

        $r11 = staticinvoke <com.apostek.library.AdWhirlCustomHandler: android.app.Activity access$1(com.apostek.library.AdWhirlCustomHandler)>($r10);

        virtualinvoke $r11.<android.app.Activity: void startActivity(android.content.Intent)>(r5);

     label17:
        return 1;

     label18:
        r3 := @caughtexception;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        return 0;

     label19:
        $r12 := @caughtexception;

        goto label15;

     label20:
        return 1;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label06 to label07 with label18;
        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Exception from label14 to label15 with label19;
        catch java.lang.Exception from label16 to label17 with label18;
    }
}
