public class b.h.d.c.g extends java.lang.Object
{

    public static int a(android.content.Context, int, int)
    {
        android.content.Context $r2;
        android.util.TypedValue $r0;
        int $i0, $i1, $i2;
        android.content.res.Resources$Theme $r1;

        $r2 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 = new android.util.TypedValue;

        specialinvoke $r0.<android.util.TypedValue: void <init>()>();

        $r1 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r1.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, $r0, 1);

        $i2 = $r0.<android.util.TypedValue: int resourceId>;

        if $i2 == 0 goto label1;

        return $i0;

     label1:
        return $i1;
    }

    public static boolean b(android.content.res.TypedArray, int, int, boolean)
    {
        int $i0, $i1;
        boolean $z0;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $z0 = virtualinvoke $r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, $z0);

        $z0 = virtualinvoke $r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, $z0);

        return $z0;
    }

    public static android.graphics.drawable.Drawable c(android.content.res.TypedArray, int, int)
    {
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        if $r1 != null goto label1;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

     label1:
        return $r1;
    }

    public static int d(android.content.res.TypedArray, int, int, int)
    {
        int $i0, $i1, $i2;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        $i2 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 = virtualinvoke $r0.<android.content.res.TypedArray: int getInt(int,int)>($i2, $i1);

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getInt(int,int)>($i0, $i2);

        return $i0;
    }

    public static boolean e(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, boolean)
    {
        int $i0;
        java.lang.String $r0;
        boolean $z0, $z1;
        android.content.res.TypedArray $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r0 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $z1 = staticinvoke <b.h.d.c.g: boolean r(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "autoMirrored");

        if $z1 != 0 goto label1;

        return $z0;

     label1:
        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, $z0);

        return $z0;
    }

    public static int f(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int)
    {
        int $i0, $i1;
        java.lang.String $r0;
        android.content.res.TypedArray $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r0 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $z0 = staticinvoke <b.h.d.c.g: boolean r(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, $r0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i0, 0);

        return $i0;
    }

    public static android.content.res.ColorStateList g(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme, java.lang.String, int)
    {
        java.lang.UnsupportedOperationException $r7;
        android.content.res.TypedArray $r0;
        android.content.res.ColorStateList $r5;
        android.util.TypedValue $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r8;
        java.lang.String $r3;
        android.content.res.Resources$Theme $r2;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;
        android.content.res.Resources $r6;

        $r0 := @parameter0: android.content.res.TypedArray;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: java.lang.String;

        $i0 := @parameter4: int;

        $z0 = staticinvoke <b.h.d.c.g: boolean r(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r1, "tint");

        if $z0 == 0 goto label3;

        $r4 = new android.util.TypedValue;

        specialinvoke $r4.<android.util.TypedValue: void <init>()>();

        virtualinvoke $r0.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(1, $r4);

        $i1 = $r4.<android.util.TypedValue: int type>;

        if $i1 == 2 goto label2;

        if $i1 < 28 goto label1;

        if $i1 > 31 goto label1;

        $r5 = staticinvoke <b.h.d.c.g: android.content.res.ColorStateList h(android.util.TypedValue)>($r4);

        return $r5;

     label1:
        $r6 = virtualinvoke $r0.<android.content.res.TypedArray: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        $r5 = staticinvoke <b.h.d.c.a: android.content.res.ColorStateList c(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r6, $i0, $r2);

        return $r5;

     label2:
        $r7 = new java.lang.UnsupportedOperationException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve attribute at index ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3);

        throw $r7;

     label3:
        return null;
    }

    private static android.content.res.ColorStateList h(android.util.TypedValue)
    {
        android.content.res.ColorStateList $r0;
        int $i0;
        android.util.TypedValue $r1;

        $r1 := @parameter0: android.util.TypedValue;

        $i0 = $r1.<android.util.TypedValue: int data>;

        $r0 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        return $r0;
    }

    public static b.h.d.c.b i(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme, java.lang.String, int, int)
    {
        android.content.res.TypedArray $r1;
        android.util.TypedValue $r4;
        int $i0, $i1, $i2;
        java.lang.String $r3;
        b.h.d.c.b $r5;
        android.content.res.Resources$Theme $r0;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;
        android.content.res.Resources $r6;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r0 := @parameter2: android.content.res.Resources$Theme;

        $r3 := @parameter3: java.lang.String;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        $z0 = staticinvoke <b.h.d.c.g: boolean r(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, $r3);

        if $z0 == 0 goto label2;

        $r4 = new android.util.TypedValue;

        specialinvoke $r4.<android.util.TypedValue: void <init>()>();

        virtualinvoke $r1.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i0, $r4);

        $i2 = $r4.<android.util.TypedValue: int type>;

        if $i2 < 28 goto label1;

        if $i2 > 31 goto label1;

        $i0 = $r4.<android.util.TypedValue: int data>;

        $r5 = staticinvoke <b.h.d.c.b: b.h.d.c.b b(int)>($i0);

        return $r5;

     label1:
        $r6 = virtualinvoke $r1.<android.content.res.TypedArray: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        $r5 = staticinvoke <b.h.d.c.b: b.h.d.c.b g(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r6, $i0, $r0);

        if $r5 == null goto label2;

        return $r5;

     label2:
        $r5 = staticinvoke <b.h.d.c.b: b.h.d.c.b b(int)>(0);

        return $r5;
    }

    public static float j(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float)
    {
        int $i0;
        float $f0;
        java.lang.String $r0;
        android.content.res.TypedArray $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r0 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $f0 := @parameter4: float;

        $z0 = staticinvoke <b.h.d.c.g: boolean r(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, $r0);

        if $z0 != 0 goto label1;

        return $f0;

     label1:
        $f0 = virtualinvoke $r1.<android.content.res.TypedArray: float getFloat(int,float)>($i0, $f0);

        return $f0;
    }

    public static int k(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int)
    {
        int $i0, $i1;
        java.lang.String $r0;
        android.content.res.TypedArray $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r0 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $z0 = staticinvoke <b.h.d.c.g: boolean r(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, $r0);

        if $z0 != 0 goto label1;

        return $i1;

     label1:
        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getInt(int,int)>($i0, $i1);

        return $i0;
    }

    public static int l(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int)
    {
        int $i0, $i1;
        java.lang.String $r0;
        android.content.res.TypedArray $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r0 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $z0 = staticinvoke <b.h.d.c.g: boolean r(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "interpolator");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        return $i0;
    }

    public static java.lang.String m(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;
        android.content.res.TypedArray $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r0 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $z0 = staticinvoke <b.h.d.c.g: boolean r(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, $r0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r0 = virtualinvoke $r1.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        return $r0;
    }

    public static int n(android.content.res.TypedArray, int, int, int)
    {
        int $i0, $i1, $i2;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i0 := @parameter1: int;

        $i2 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 = virtualinvoke $r0.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, $i1);

        $i0 = virtualinvoke $r0.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, $i2);

        return $i0;
    }

    public static java.lang.String o(android.content.res.TypedArray, int, int)
    {
        int $i0, $i1;
        java.lang.String $r1;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.String getString(int)>($i1);

        if $r1 != null goto label1;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

     label1:
        return $r1;
    }

    public static java.lang.CharSequence p(android.content.res.TypedArray, int, int)
    {
        java.lang.CharSequence $r1;
        int $i0, $i1;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($i1);

        if $r1 != null goto label1;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>($i0);

     label1:
        return $r1;
    }

    public static java.lang.CharSequence[] q(android.content.res.TypedArray, int, int)
    {
        java.lang.CharSequence[] $r1;
        int $i0, $i1;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0: android.content.res.TypedArray;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>($i1);

        if $r1 != null goto label1;

        $r1 = virtualinvoke $r0.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>($i0);

     label1:
        return $r1;
    }

    public static boolean r(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        java.lang.String $r0;
        org.xmlpull.v1.XmlPullParser $r1;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r0 := @parameter1: java.lang.String;

        $r0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res/android", $r0);

        if $r0 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public static android.content.res.TypedArray s(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[])
    {
        android.util.AttributeSet $r1;
        int[] $r2;
        android.content.res.Resources$Theme $r0;
        android.content.res.Resources $r3;
        android.content.res.TypedArray $r4;

        $r3 := @parameter0: android.content.res.Resources;

        $r0 := @parameter1: android.content.res.Resources$Theme;

        $r1 := @parameter2: android.util.AttributeSet;

        $r2 := @parameter3: int[];

        if $r0 != null goto label1;

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r1, $r2);

        return $r4;

     label1:
        $r4 = virtualinvoke $r0.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r1, $r2, 0, 0);

        return $r4;
    }

    public static android.util.TypedValue t(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        android.util.TypedValue $r3;
        int $i0;
        java.lang.String $r0;
        android.content.res.TypedArray $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r0 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $z0 = staticinvoke <b.h.d.c.g: boolean r(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "value");

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r1.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(0);

        return $r3;
    }
}
