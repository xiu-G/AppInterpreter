public class cn.ffcs.lib.slidingmenu.CustomViewAbove extends android.view.ViewGroup
{
    private static final boolean DEBUG;
    private static final int INVALID_POINTER;
    private static final int MAX_SETTLE_DURATION;
    private static final int MIN_DISTANCE_FOR_FLING;
    private static final java.lang.String TAG;
    private static final boolean USE_CACHE;
    private static final android.view.animation.Interpolator sInterpolator;
    protected int mActivePointerId;
    private cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener mClosedListener;
    private android.view.View mContent;
    private int mCurItem;
    private boolean mEnabled;
    private int mFlingDistance;
    private java.util.List mIgnoredViews;
    private float mInitialMotionX;
    private cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener;
    private boolean mIsBeingDragged;
    private boolean mIsUnableToDrag;
    private float mLastMotionX;
    private float mLastMotionY;
    protected int mMaximumVelocity;
    private int mMinimumVelocity;
    private cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mOnPageChangeListener;
    private cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener mOpenedListener;
    private boolean mQuickReturn;
    private float mScrollX;
    private android.widget.Scroller mScroller;
    private boolean mScrolling;
    private boolean mScrollingCacheEnabled;
    protected int mTouchMode;
    private int mTouchSlop;
    protected android.view.VelocityTracker mVelocityTracker;
    private cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind;

    static void <clinit>()
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove$1 $r0;

        <cn.ffcs.lib.slidingmenu.CustomViewAbove: java.lang.String TAG> = "CustomViewAbove";

        <cn.ffcs.lib.slidingmenu.CustomViewAbove: int MIN_DISTANCE_FOR_FLING> = 25;

        <cn.ffcs.lib.slidingmenu.CustomViewAbove: int MAX_SETTLE_DURATION> = 600;

        <cn.ffcs.lib.slidingmenu.CustomViewAbove: int INVALID_POINTER> = -1;

        <cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean DEBUG> = 1;

        $r0 = new cn.ffcs.lib.slidingmenu.CustomViewAbove$1;

        specialinvoke $r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove$1: void <init>()>();

        <cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.animation.Interpolator sInterpolator> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0;
        java.util.ArrayList $r3;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $i0 = -1;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId> = $i0;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mEnabled> = 1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: java.util.List mIgnoredViews> = $r3;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mTouchMode> = 0;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mQuickReturn> = 0;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mScrollX> = 0.0F;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void initCustomViewAbove()>();

        return;
    }

    static cn.ffcs.lib.slidingmenu.CustomViewBehind access$000(cn.ffcs.lib.slidingmenu.CustomViewAbove)
    {
        cn.ffcs.lib.slidingmenu.CustomViewBehind r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove $r0;

        $r0 := @parameter0: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        r1 = $r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        return r1;
    }

    private void completeScroll()
    {
        android.widget.Scroller $r1;
        cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener $r2;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, $i1, $i2, $i3;
        cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener $r3;
        boolean z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mScrolling>;

        if z0 == 0 goto label3;

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setScrollingCacheEnabled(boolean)>(0);

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.widget.Scroller mScroller>;

        virtualinvoke $r1.<android.widget.Scroller: void abortAnimation()>();

        $i0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getScrollX()>();

        $i1 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getScrollY()>();

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.widget.Scroller mScroller>;

        $i2 = virtualinvoke $r1.<android.widget.Scroller: int getCurrX()>();

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.widget.Scroller mScroller>;

        $i3 = virtualinvoke $r1.<android.widget.Scroller: int getCurrY()>();

        if $i0 != $i2 goto label1;

        if $i1 == $i3 goto label2;

     label1:
        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void scrollTo(int,int)>($i2, $i3);

     label2:
        z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean isMenuOpen()>();

        if z0 == 0 goto label4;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener mOpenedListener>;

        if $r2 == null goto label3;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener mOpenedListener>;

        interfaceinvoke $r2.<cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener: void onOpened()>();

     label3:
        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mScrolling> = 0;

        return;

     label4:
        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener mClosedListener>;

        if $r3 == null goto label3;

        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener mClosedListener>;

        interfaceinvoke $r3.<cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener: void onClosed()>();

        goto label3;
    }

    private int determineTargetPage(float, int, int)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, $i1, i2, $i3, $i4;
        float $f0, $f1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $f0 := @parameter0: float;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        i2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i4 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mFlingDistance>;

        if $i3 <= $i4 goto label2;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i4 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mMinimumVelocity>;

        if $i3 <= $i4 goto label2;

        if $i0 <= 0 goto label1;

        if $i1 <= 0 goto label1;

        $i0 = -1;

        $i0 = i2 + $i0;

        return $i0;

     label1:
        if $i0 >= 0 goto label3;

        if $i1 >= 0 goto label3;

        $i0 = i2 + 1;

        return $i0;

     label2:
        $i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        $f1 = (float) $i0;

        $f0 = $f1 + $f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;

     label3:
        return i2;
    }

    private void endDrag()
    {
        int $i0;
        android.view.VelocityTracker $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mQuickReturn> = 0;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged> = 0;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsUnableToDrag> = 0;

        $i0 = -1;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId> = $i0;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r1.<android.view.VelocityTracker: void recycle()>();

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    private int getLeftBound()
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0;
        android.view.View $r1;
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r2;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i0 = virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.CustomViewBehind: int getAbsLeftBound(android.view.View)>($r1);

        return $i0;
    }

    private int getPointerIndex(android.view.MotionEvent, int)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        android.view.MotionEvent $r1;
        int $i0, $i1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i0);

        $i1 = -1;

        if $i0 != $i1 goto label1;

        $i1 = -1;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId> = $i1;

     label1:
        return $i0;
    }

    private int getRightBound()
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0;
        android.view.View $r1;
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r2;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i0 = virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.CustomViewBehind: int getAbsRightBound(android.view.View)>($r1);

        return $i0;
    }

    private boolean isInIgnoredView(android.view.MotionEvent)
    {
        android.graphics.Rect r2;
        java.util.Iterator $r4;
        java.util.List $r3;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        android.view.MotionEvent $r1;
        int $i0, $i1;
        android.view.View r6;
        float $f0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.MotionEvent;

        r2 = new android.graphics.Rect;

        specialinvoke r2.<android.graphics.Rect: void <init>()>();

        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: java.util.List mIgnoredViews>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.view.View) $r5;

        virtualinvoke r6.<android.view.View: void getHitRect(android.graphics.Rect)>(r2);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i0 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i1 = (int) $f0;

        $z0 = virtualinvoke r2.<android.graphics.Rect: boolean contains(int,int)>($i0, $i1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.view.VelocityTracker $r2;
        byte b3;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        float $f0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.MotionEvent;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CustomViewAbove", "onSecondaryPointerUp called");

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i0);

        $i2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        if $i1 != $i2 goto label3;

        if $i0 != 0 goto label2;

        b3 = 1;

     label1:
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, b3);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX> = $f0;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, b3);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId> = $i0;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label3;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();

        return;

     label2:
        b3 = 0;

        goto label1;

     label3:
        return;
    }

    private void pageScrolled(int)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, i1, $i2;
        float f0, $f1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $i2 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getWidth()>();

        i1 = $i0 / $i2;

        $i0 = $i0 % $i2;

        f0 = (float) $i0;

        $f1 = (float) $i2;

        f0 = f0 / $f1;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void onPageScrolled(int,float,int)>(i1, f0, $i0);

        return;
    }

    private void setScrollingCacheEnabled(boolean)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        boolean $z0, $z1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $z0 := @parameter0: boolean;

        $z1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mScrollingCacheEnabled>;

        if $z1 == $z0 goto label1;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mScrollingCacheEnabled> = $z0;

     label1:
        return;
    }

    private void startDrag()
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged> = 1;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mQuickReturn> = 0;

        return;
    }

    private boolean thisSlideAllowed(float)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        float $f0;
        java.lang.StringBuilder $r2;
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $f0 := @parameter0: float;

        $z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean isMenuOpen()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $z0 = virtualinvoke $r1.<cn.ffcs.lib.slidingmenu.CustomViewBehind: boolean menuOpenSlideAllowed(float)>($f0);

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this slide allowed ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dx: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CustomViewAbove", $r3);

        return $z0;

     label2:
        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $z0 = virtualinvoke $r1.<cn.ffcs.lib.slidingmenu.CustomViewBehind: boolean menuClosedSlideAllowed(float)>($f0);

        goto label1;
    }

    private boolean thisTouchAllowed(android.view.MotionEvent)
    {
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r2;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        android.view.MotionEvent $r1;
        int i0, $i1;
        float $f0, $f1;
        android.view.View $r3;
        boolean $z0, $z1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = 0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mScrollX>;

        $f0 = $f0 + $f1;

        i0 = (int) $f0;

        $z1 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean isMenuOpen()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        $f0 = (float) i0;

        $z0 = virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.CustomViewBehind: boolean menuOpenTouchAllowed(android.view.View,int,float)>($r3, $i1, $f0);

     label1:
        return $z0;

     label2:
        $i1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mTouchMode>;

        lookupswitch($i1)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label1;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $z0 = virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.CustomViewBehind: boolean marginTouchAllowed(android.view.View,int)>($r3, i0);

        return $z0;

     label5:
        $z0 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean isInIgnoredView(android.view.MotionEvent)>($r1);

        if $z0 != 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    public void addIgnoredView(android.view.View)
    {
        java.util.List $r2;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: java.util.List mIgnoredViews>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: java.util.List mIgnoredViews>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    public boolean arrowScroll(int)
    {
        android.view.FocusFinder $r3;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, $i1, $i2;
        android.view.View $r1, r2;
        boolean z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View findFocus()>();

        r2 = $r1;

        if $r1 != r0 goto label1;

        r2 = null;

     label1:
        z0 = 0;

        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r1 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r2, $i0);

        if $r1 == null goto label5;

        if $r1 == r2 goto label5;

        if $i0 != 17 goto label3;

        z0 = virtualinvoke $r1.<android.view.View: boolean requestFocus()>();

     label2:
        if z0 == 0 goto label9;

        $i0 = staticinvoke <android.view.SoundEffectConstants: int getContantForFocusDirection(int)>($i0);

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void playSoundEffect(int)>($i0);

        return z0;

     label3:
        if $i0 != 66 goto label2;

        if r2 == null goto label4;

        $i1 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i2 = virtualinvoke r2.<android.view.View: int getLeft()>();

        if $i1 > $i2 goto label4;

        z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean pageRight()>();

        goto label2;

     label4:
        z0 = virtualinvoke $r1.<android.view.View: boolean requestFocus()>();

        goto label2;

     label5:
        if $i0 == 17 goto label6;

        if $i0 != 1 goto label7;

     label6:
        z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean pageLeft()>();

        goto label2;

     label7:
        if $i0 == 66 goto label8;

        if $i0 != 2 goto label2;

     label8:
        z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean pageRight()>();

        goto label2;

     label9:
        return z0;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int)
    {
        android.view.ViewGroup r2;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.View $r1, $r3;
        boolean $z0, $z1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $z1 = $r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        r2 = (android.view.ViewGroup) $r1;

        $i5 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i6 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i7 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        $i3 = -1;

        $i7 = $i7 + $i3;

     label1:
        if $i7 < 0 goto label3;

        $r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i7);

        $i3 = $i1 + $i5;

        $i4 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        if $i3 < $i4 goto label2;

        $i3 = $i1 + $i5;

        $i4 = virtualinvoke $r3.<android.view.View: int getRight()>();

        if $i3 >= $i4 goto label2;

        $i3 = $i2 + $i6;

        $i4 = virtualinvoke $r3.<android.view.View: int getTop()>();

        if $i3 < $i4 goto label2;

        $i3 = $i2 + $i6;

        $i4 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        if $i3 >= $i4 goto label2;

        $i3 = $i1 + $i5;

        $i4 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        $i3 = $i3 - $i4;

        $i4 = $i2 + $i6;

        $i8 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i4 = $i4 - $i8;

        $z1 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean canScroll(android.view.View,boolean,int,int,int)>($r3, 1, $i0, $i3, $i4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $i3 = -1;

        $i7 = $i7 + $i3;

        goto label1;

     label3:
        if $z0 == 0 goto label4;

        $i0 = neg $i0;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r1, $i0);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    public void clearIgnoredViews()
    {
        java.util.List $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: java.util.List mIgnoredViews>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public void computeScroll()
    {
        android.widget.Scroller $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label3;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getScrollX()>();

        $i1 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getScrollY()>();

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.widget.Scroller mScroller>;

        $i2 = virtualinvoke $r1.<android.widget.Scroller: int getCurrX()>();

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.widget.Scroller mScroller>;

        $i3 = virtualinvoke $r1.<android.widget.Scroller: int getCurrY()>();

        if $i0 != $i2 goto label1;

        if $i1 == $i3 goto label2;

     label1:
        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void scrollTo(int,int)>($i2, $i3);

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void pageScrolled(int)>($i2);

     label2:
        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void invalidate()>();

        return;

     label3:
        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void completeScroll()>();

        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        android.view.View $r3;
        float $f0;
        android.graphics.Canvas $r1;
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r2;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>($r1);

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.CustomViewBehind: void drawShadow(android.view.View,android.graphics.Canvas)>($r3, $r1);

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $f0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float getPercentOpen()>();

        virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.CustomViewBehind: void drawFade(android.view.View,android.graphics.Canvas,float)>($r3, $r1, $f0);

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $f0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float getPercentOpen()>();

        virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.CustomViewBehind: void drawSelector(android.view.View,android.graphics.Canvas,float)>($r3, $r1, $f0);

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean executeKeyEvent(android.view.KeyEvent)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    float distanceInfluenceForSnapDuration(float)
    {
        float $f0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        double $d0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $f0 := @parameter0: float;

        $f0 = $f0 - 0.5F;

        $d0 = (double) $f0;

        $d0 = $d0 * 0.4712389167638204;

        $f0 = (float) $d0;

        $f0 = staticinvoke <android.util.FloatMath: float sin(float)>($f0);

        return $f0;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label6;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch($i0)
        {
            case 21: goto label2;
            case 22: goto label3;
            case 61: goto label4;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean arrowScroll(int)>(17);

        return $z0;

     label3:
        $z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean arrowScroll(int)>(66);

        return $z0;

     label4:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label6;

        $z0 = staticinvoke <android.support.v4.view.KeyEventCompat: boolean hasNoModifiers(android.view.KeyEvent)>($r1);

        if $z0 == 0 goto label5;

        $z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean arrowScroll(int)>(2);

        return $z0;

     label5:
        $z0 = staticinvoke <android.support.v4.view.KeyEventCompat: boolean hasModifiers(android.view.KeyEvent,int)>($r1, 1);

        if $z0 == 0 goto label6;

        $z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean arrowScroll(int)>(1);

        return $z0;

     label6:
        return 0;
    }

    public int getBehindWidth()
    {
        int $i0;
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $i0 = virtualinvoke $r1.<cn.ffcs.lib.slidingmenu.CustomViewBehind: int getBehindWidth()>();

        return $i0;
    }

    public int getChildWidth(int)
    {
        int $i0;
        android.view.View $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $i0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getBehindWidth()>();

        return $i0;

     label3:
        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        return $i0;
    }

    public android.view.View getContent()
    {
        android.view.View r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        return r1;
    }

    public int getContentLeft()
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i1 = virtualinvoke $r1.<android.view.View: int getPaddingLeft()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    public int getCurrentItem()
    {
        int i0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        return i0;
    }

    public int getDestScrollX(int)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0;
        android.view.View $r1;
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r2;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i0 = virtualinvoke $r2.<cn.ffcs.lib.slidingmenu.CustomViewBehind: int getMenuLeft(android.view.View,int)>($r1, $i0);

        return $i0;

     label3:
        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        return $i0;
    }

    protected float getPercentOpen()
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0;
        float $f0, $f1;
        android.view.View $r1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $f0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mScrollX>;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $i0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getBehindWidth()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;
    }

    public int getTouchMode()
    {
        int i0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mTouchMode>;

        return i0;
    }

    void initCustomViewAbove()
    {
        android.content.Context $r1;
        android.widget.Scroller $r2;
        android.view.animation.Interpolator $r3;
        android.util.DisplayMetrics $r7;
        android.view.ViewConfiguration $r4;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0;
        float f0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove$2 $r5;
        android.content.res.Resources $r6;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setDescendantFocusability(int)>(131072);

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setClickable(boolean)>(1);

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setFocusable(boolean)>(1);

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setWillNotDraw(boolean)>(0);

        $r1 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.content.Context getContext()>();

        $r2 = new android.widget.Scroller;

        $r3 = <cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.animation.Interpolator sInterpolator>;

        specialinvoke $r2.<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($r1, $r3);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.widget.Scroller mScroller> = $r2;

        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>($r4);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mTouchSlop> = $i0;

        $i0 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mMinimumVelocity> = $i0;

        $i0 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mMaximumVelocity> = $i0;

        $r5 = new cn.ffcs.lib.slidingmenu.CustomViewAbove$2;

        specialinvoke $r5.<cn.ffcs.lib.slidingmenu.CustomViewAbove$2: void <init>(cn.ffcs.lib.slidingmenu.CustomViewAbove)>(r0);

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener)>($r5);

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r7.<android.util.DisplayMetrics: float density>;

        f0 = 25.0F * f0;

        $i0 = (int) f0;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mFlingDistance> = $i0;

        return;
    }

    public boolean isMenuOpen()
    {
        int $i0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        if $i0 == 0 goto label1;

        $i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        if $i0 != 2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isSlidingEnabled()
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        boolean z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mEnabled>;

        return z0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        java.lang.Throwable r2;
        android.view.VelocityTracker $r3;
        byte $b1;
        android.view.MotionEvent $r1;
        int i0, $i2;
        android.view.View $r7;
        java.lang.String $r5;
        boolean $z0;
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r6;
        java.lang.IllegalArgumentException $r9;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        float f0, $f1, $f2, $f3, $f4;
        java.lang.StringBuilder $r4, $r8;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mEnabled>;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        i0 = i0 & 255;

        if i0 != 0 goto label02;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CustomViewAbove", "Received ACTION_DOWN");

     label02:
        if i0 == 3 goto label03;

        if i0 == 1 goto label03;

        if i0 == 0 goto label04;

        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsUnableToDrag>;

        if $z0 == 0 goto label04;

     label03:
        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void endDrag()>();

        return 0;

     label04:
        lookupswitch(i0)
        {
            case 0: goto label28;
            case 2: goto label09;
            case 6: goto label32;
            default: goto label05;
        };

     label05:
        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged>;

        if $z0 != 0 goto label07;

        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker>;

        if $r3 != null goto label06;

        $r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker> = $r3;

     label06:
        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

     label07:
        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged>;

        if $z0 != 0 goto label08;

        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mQuickReturn>;

        if $z0 == 0 goto label33;

     label08:
        return 1;

     label09:
        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        $i2 = -1;

        if i0 == $i2 goto label05;

     label10:
        i0 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getPointerIndex(android.view.MotionEvent,int)>($r1, i0);

        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

     label11:
        f0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX>;

        f0 = $f1 - f0;

     label12:
        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, i0);

     label13:
        $f4 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionY>;

        $f4 = $f3 - $f4;

     label14:
        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f4);

     label15:
        $r8 = new java.lang.StringBuilder;

        $r4 = $r8;

     label16:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onInterceptTouch moved to:(");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), diff:(");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), mLastMotionX:");

     label17:
        $f3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX>;

     label18:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CustomViewAbove", $r5);

     label19:
        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mTouchSlop>;

        $f3 = (float) i0;

        $b1 = $f2 cmpl $f3;

        i0 = (int) $b1;

        if i0 <= 0 goto label27;

        $b1 = $f2 cmpl $f4;

        i0 = (int) $b1;

        if i0 <= 0 goto label27;

     label20:
        $z0 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean thisSlideAllowed(float)>(f0);

     label21:
        if $z0 == 0 goto label27;

     label22:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CustomViewAbove", "Starting drag! from onInterceptTouch");

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void startDrag()>();

     label23:
        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX> = $f1;

     label24:
        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setScrollingCacheEnabled(boolean)>(1);

     label25:
        goto label05;

     label26:
        r2 := @caughtexception;

        $r9 = (java.lang.IllegalArgumentException) r2;

        virtualinvoke $r9.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label05;

     label27:
        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mTouchSlop>;

        $f1 = (float) i0;

        $b1 = $f4 cmpl $f1;

        i0 = (int) $b1;

        if i0 <= 0 goto label05;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsUnableToDrag> = 1;

        goto label05;

     label28:
        i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 8 goto label30;

     label29:
        $i2 = 65280;

        i0 = $i2 & i0;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId> = i0;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mInitialMotionX> = $f1;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX> = $f1;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, i0);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionY> = $f1;

        $z0 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean thisTouchAllowed(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label31;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged> = 0;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsUnableToDrag> = 0;

        $z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean isMenuOpen()>();

        if $z0 == 0 goto label05;

        $r6 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r7 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mScrollX>;

        $f1 = f0 + $f1;

        $z0 = virtualinvoke $r6.<cn.ffcs.lib.slidingmenu.CustomViewBehind: boolean menuTouchInQuickReturn(android.view.View,int,float)>($r7, i0, $f1);

        if $z0 == 0 goto label05;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mQuickReturn> = 1;

        goto label05;

     label30:
        goto label29;

     label31:
        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsUnableToDrag> = 1;

        goto label05;

     label32:
        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void onSecondaryPointerUp(android.view.MotionEvent)>($r1);

        goto label05;

     label33:
        return 0;

        catch java.lang.IllegalArgumentException from label10 to label11 with label26;
        catch java.lang.IllegalArgumentException from label12 to label13 with label26;
        catch java.lang.IllegalArgumentException from label14 to label15 with label26;
        catch java.lang.IllegalArgumentException from label16 to label17 with label26;
        catch java.lang.IllegalArgumentException from label18 to label19 with label26;
        catch java.lang.IllegalArgumentException from label20 to label21 with label26;
        catch java.lang.IllegalArgumentException from label22 to label23 with label26;
        catch java.lang.IllegalArgumentException from label24 to label25 with label26;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = $i2 - $i0;

        $i1 = $i3 - $i1;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>(0, 0, $i0, $i1);

        return;
    }

    protected void onMeasure(int, int)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <cn.ffcs.lib.slidingmenu.CustomViewAbove: int getDefaultSize(int,int)>(0, $i0);

        $i3 = staticinvoke <cn.ffcs.lib.slidingmenu.CustomViewAbove: int getDefaultSize(int,int)>(0, $i1);

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setMeasuredDimension(int,int)>($i2, $i3);

        $i0 = staticinvoke <cn.ffcs.lib.slidingmenu.CustomViewAbove: int getChildMeasureSpec(int,int,int)>($i0, 0, $i2);

        $i1 = staticinvoke <cn.ffcs.lib.slidingmenu.CustomViewAbove: int getChildMeasureSpec(int,int,int)>($i1, 0, $i3);

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        return;
    }

    protected void onPageScrolled(int, float, int)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener $r1;
        int $i0, $i1;
        float $f0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 := @parameter2: int;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mOnPageChangeListener>;

        if $r1 == null goto label1;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r1.<cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener: void onPageScrolled(int,float,int)>($i0, $f0, $i1);

     label1:
        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener>;

        if $r1 == null goto label2;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener>;

        interfaceinvoke $r1.<cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener: void onPageScrolled(int,float,int)>($i0, $f0, $i1);

     label2:
        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        if $i0 == $i2 goto label1;

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void completeScroll()>();

        $i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        $i0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getDestScrollX(int)>($i0);

        $i1 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getScrollY()>();

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void scrollTo(int,int)>($i0, $i1);

     label1:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.VelocityTracker $r2;
        byte $b1;
        android.view.MotionEvent $r1;
        int i0, $i2, $i3, $i4;
        android.view.View $r6;
        java.lang.String $r4;
        boolean $z0;
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r5;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        float f0, f1, f2, $f3, $f4;
        java.lang.StringBuilder $r3, $r7;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mEnabled>;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged>;

        if $z0 != 0 goto label02;

        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mQuickReturn>;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label03;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker> = $r2;

     label03:
        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        i0 = i0 & 255;

        lookupswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label12;
            case 2: goto label06;
            case 3: goto label16;
            case 4: goto label04;
            case 5: goto label17;
            case 6: goto label18;
            default: goto label04;
        };

     label04:
        return 1;

     label05:
        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void completeScroll()>();

        f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mInitialMotionX> = f0;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX> = f0;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId> = i0;

        goto label04;

     label06:
        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged>;

        if $z0 != 0 goto label08;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        $i2 = -1;

        if i0 == $i2 goto label04;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        i0 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getPointerIndex(android.view.MotionEvent,int)>($r1, i0);

        f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        f1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX>;

        f1 = f0 - f1;

        f2 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, i0);

        $f4 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionY>;

        $f4 = $f3 - $f4;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onTouch moved to:(");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), diff:(");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\nmIsBeingDragged:");

        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLastMotionX:");

        $f3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CustomViewAbove", $r4);

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mTouchSlop>;

        $f3 = (float) i0;

        $b1 = f2 cmpl $f3;

        i0 = (int) $b1;

        if i0 > 0 goto label07;

        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mQuickReturn>;

        if $z0 == 0 goto label10;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mTouchSlop>;

        i0 = i0 / 4;

        $f3 = (float) i0;

        $b1 = f2 cmpl $f3;

        i0 = (int) $b1;

        if i0 <= 0 goto label10;

     label07:
        $b1 = f2 cmpl $f4;

        i0 = (int) $b1;

        if i0 <= 0 goto label10;

        $z0 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean thisSlideAllowed(float)>(f1);

        if $z0 == 0 goto label10;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CustomViewAbove", "Starting drag! from onTouch");

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void startDrag()>();

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX> = f0;

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setScrollingCacheEnabled(boolean)>(1);

     label08:
        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged>;

        if $z0 == 0 goto label04;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        i0 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getPointerIndex(android.view.MotionEvent,int)>($r1, i0);

        $i2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        $i3 = -1;

        if $i2 == $i3 goto label04;

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        f0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX>;

        f0 = f0 - f1;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX> = f1;

        i0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getScrollX()>();

        f1 = (float) i0;

        f0 = f1 + f0;

        i0 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getLeftBound()>();

        f1 = (float) i0;

        i0 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getRightBound()>();

        f2 = (float) i0;

        $b1 = f0 cmpg f1;

        i0 = (int) $b1;

        if i0 >= 0 goto label11;

        f0 = f1;

     label09:
        f1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX>;

        i0 = (int) f0;

        f2 = (float) i0;

        f2 = f0 - f2;

        f1 = f1 + f2;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX> = f1;

        i0 = (int) f0;

        $i2 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getScrollY()>();

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void scrollTo(int,int)>(i0, $i2);

        i0 = (int) f0;

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void pageScrolled(int)>(i0);

        goto label04;

     label10:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CustomViewAbove", "onTouch returning false");

        return 0;

     label11:
        $b1 = f0 cmpl f2;

        i0 = (int) $b1;

        if i0 <= 0 goto label09;

        f0 = f2;

        goto label09;

     label12:
        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged>;

        if $z0 == 0 goto label15;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker>;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mMaximumVelocity>;

        f0 = (float) i0;

        virtualinvoke $r2.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, f0);

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r2, i0);

        i0 = (int) f0;

        $i2 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getScrollX()>();

        $i3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        $i3 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getDestScrollX(int)>($i3);

        $i2 = $i2 - $i3;

        f0 = (float) $i2;

        $i2 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getBehindWidth()>();

        f1 = (float) $i2;

        f0 = f0 / f1;

        $i2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        $i2 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getPointerIndex(android.view.MotionEvent,int)>($r1, $i2);

        $i3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        $i4 = -1;

        if $i3 == $i4 goto label14;

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i2);

        f2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mInitialMotionX>;

        f1 = f1 - f2;

        $i2 = (int) f1;

        $i2 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int determineTargetPage(float,int,int)>(f0, i0, $i2);

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setCurrentItemInternal(int,boolean,boolean,int)>($i2, 1, 1, i0);

     label13:
        i0 = -1;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId> = i0;

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void endDrag()>();

        goto label04;

     label14:
        $i2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setCurrentItemInternal(int,boolean,boolean,int)>($i2, 1, 1, i0);

        goto label13;

     label15:
        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mQuickReturn>;

        if $z0 == 0 goto label04;

        $r5 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r6 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        f1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mScrollX>;

        f0 = f0 + f1;

        $z0 = virtualinvoke $r5.<cn.ffcs.lib.slidingmenu.CustomViewBehind: boolean menuTouchInQuickReturn(android.view.View,int,float)>($r6, i0, f0);

        if $z0 == 0 goto label04;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setCurrentItem(int)>(1);

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void endDrag()>();

        goto label04;

     label16:
        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mIsBeingDragged>;

        if $z0 == 0 goto label04;

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setCurrentItemInternal(int,boolean,boolean)>(i0, 1, 1);

        i0 = -1;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId> = i0;

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void endDrag()>();

        goto label04;

     label17:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX> = f0;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, i0);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId> = i0;

        goto label04;

     label18:
        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void onSecondaryPointerUp(android.view.MotionEvent)>($r1);

        i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        i0 = specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getPointerIndex(android.view.MotionEvent,int)>($r1, i0);

        $i2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mActivePointerId>;

        $i3 = -1;

        if $i2 == $i3 goto label04;

        f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mLastMotionX> = f0;

        goto label04;
    }

    boolean pageLeft()
    {
        int $i0, $i1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        if $i0 <= 0 goto label1;

        $i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setCurrentItem(int,boolean)>($i0, 1);

        return 1;

     label1:
        return 0;
    }

    boolean pageRight()
    {
        int $i0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        if $i0 >= 1 goto label1;

        $i0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        $i0 = $i0 + 1;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setCurrentItem(int,boolean)>($i0, 1);

        return 1;

     label1:
        return 0;
    }

    public void removeIgnoredView(android.view.View)
    {
        android.view.View $r1;
        java.util.List $r2;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: java.util.List mIgnoredViews>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void scrollTo(int, int)
    {
        android.view.ViewParent $r3;
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        cn.ffcs.lib.slidingmenu.SlidingMenu $r4;
        int $i0, $i1;
        float $f0;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup: void scrollTo(int,int)>($i0, $i1);

        $f0 = (float) $i0;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float mScrollX> = $f0;

        $z0 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        virtualinvoke $r1.<cn.ffcs.lib.slidingmenu.CustomViewBehind: void scrollBehindTo(android.view.View,int,int)>($r2, $i0, $i1);

     label1:
        $r3 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.ViewParent getParent()>();

        $r4 = (cn.ffcs.lib.slidingmenu.SlidingMenu) $r3;

        $f0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float getPercentOpen()>();

        virtualinvoke $r4.<cn.ffcs.lib.slidingmenu.SlidingMenu: void manageLayers(float)>($f0);

        return;
    }

    public void setAboveOffset(int)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1, $r2;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i1 = virtualinvoke $r2.<android.view.View: int getPaddingTop()>();

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i2 = virtualinvoke $r2.<android.view.View: int getPaddingRight()>();

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        $i3 = virtualinvoke $r2.<android.view.View: int getPaddingBottom()>();

        virtualinvoke $r1.<android.view.View: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void setContent(android.view.View)
    {
        android.view.View $r1, $r2;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        if $r2 == null goto label1;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void removeView(android.view.View)>($r2);

     label1:
        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent> = $r1;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        virtualinvoke $r1.<android.view.View: void setFocusable(boolean)>(1);

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.view.View mContent>;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void addView(android.view.View)>($r1);

        return;
    }

    public void setCurrentItem(int)
    {
        int $i0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setCurrentItemInternal(int,boolean,boolean)>($i0, 1, 0);

        return;
    }

    public void setCurrentItem(int, boolean)
    {
        int $i0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setCurrentItemInternal(int,boolean,boolean)>($i0, 0, 0);

        return;
    }

    void setCurrentItemInternal(int, boolean, boolean)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setCurrentItemInternal(int,boolean,boolean,int)>($i0, 0, 0, 0);

        return;
    }

    void setCurrentItemInternal(int, boolean, boolean, int)
    {
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener $r2;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i1 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $i2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        if $i2 != $i1 goto label1;

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label1:
        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind>;

        $i1 = virtualinvoke $r1.<cn.ffcs.lib.slidingmenu.CustomViewBehind: int getMenuPage(int)>($i1);

        $i2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        if $i2 == $i1 goto label4;

        $z1 = 1;

     label2:
        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem> = $i1;

        $i2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mCurItem>;

        $i2 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getDestScrollX(int)>($i2);

        if $z1 == 0 goto label5;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mOnPageChangeListener>;

        if $r2 == null goto label3;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r2.<cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener: void onPageSelected(int)>($i1);

     label3:
        if $z1 == 0 goto label5;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener>;

        if $r2 == null goto label5;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener>;

        interfaceinvoke $r2.<cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener: void onPageSelected(int)>($i1);

        goto label5;

     label4:
        $z1 = 0;

        goto label2;

     label5:
        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void completeScroll()>();

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void scrollTo(int,int)>($i2, 0);

        return;
    }

    public void setCustomViewBehind(cn.ffcs.lib.slidingmenu.CustomViewBehind)
    {
        cn.ffcs.lib.slidingmenu.CustomViewBehind $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: cn.ffcs.lib.slidingmenu.CustomViewBehind;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewBehind mViewBehind> = $r1;

        return;
    }

    cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener $r1, r2;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener;

        r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener>;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener> = $r1;

        return r2;
    }

    public void setOnClosedListener(cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener)
    {
        cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener mClosedListener> = $r1;

        return;
    }

    public void setOnOpenedListener(cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener)
    {
        cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener mOpenedListener> = $r1;

        return;
    }

    public void setOnPageChangeListener(cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener $r1;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $r1 := @parameter0: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.CustomViewAbove$OnPageChangeListener mOnPageChangeListener> = $r1;

        return;
    }

    public void setSlidingEnabled(boolean)
    {
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $z0 := @parameter0: boolean;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mEnabled> = $z0;

        return;
    }

    public void setTouchMode(int)
    {
        int $i0;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int mTouchMode> = $i0;

        return;
    }

    void smoothScrollTo(int, int)
    {
        int $i0, $i1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void smoothScrollTo(int,int,int)>($i0, $i1, 0);

        return;
    }

    void smoothScrollTo(int, int, int)
    {
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        android.widget.Scroller $r3;
        cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener $r1;
        cn.ffcs.lib.slidingmenu.CustomViewAbove r0;
        float f0, $f1, $f2;
        cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener $r2;

        r0 := @this: cn.ffcs.lib.slidingmenu.CustomViewAbove;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 := @parameter2: int;

        $i4 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getChildCount()>();

        if $i4 != 0 goto label1;

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label1:
        $i4 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getScrollX()>();

        $i5 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getScrollY()>();

        $i0 = $i0 - $i4;

        $i1 = 0 - $i5;

        if $i0 != 0 goto label3;

        if $i1 != 0 goto label3;

        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void completeScroll()>();

        $z0 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean isMenuOpen()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener mOpenedListener>;

        if $r1 == null goto label6;

        $r1 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener mOpenedListener>;

        interfaceinvoke $r1.<cn.ffcs.lib.slidingmenu.SlidingMenu$OnOpenedListener: void onOpened()>();

        return;

     label2:
        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener mClosedListener>;

        if $r2 == null goto label6;

        $r2 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener mClosedListener>;

        interfaceinvoke $r2.<cn.ffcs.lib.slidingmenu.SlidingMenu$OnClosedListener: void onClosed()>();

        return;

     label3:
        specialinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void setScrollingCacheEnabled(boolean)>(1);

        r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: boolean mScrolling> = 1;

        $i6 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: int getBehindWidth()>();

        i2 = $i6 / 2;

        $i7 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        f0 = (float) $i7;

        f0 = 1.0F * f0;

        $f1 = (float) $i6;

        f0 = f0 / $f1;

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, f0);

        f0 = (float) i2;

        $f1 = (float) i2;

        $f2 = virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: float distanceInfluenceForSnapDuration(float)>($f2);

        $f1 = $f1 * $f2;

        f0 = f0 + $f1;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>(0);

        if $i3 <= 0 goto label5;

        $f1 = (float) $i3;

        f0 = f0 / $f1;

        f0 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        f0 = 1000.0F * f0;

        $i3 = staticinvoke <java.lang.Math: int round(float)>(f0);

        $i3 = $i3 * 4;

     label4:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 600);

        $r3 = r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: android.widget.Scroller mScroller>;

        virtualinvoke $r3.<android.widget.Scroller: void startScroll(int,int,int,int,int)>($i4, $i5, $i0, $i1, $i3);

        virtualinvoke r0.<cn.ffcs.lib.slidingmenu.CustomViewAbove: void invalidate()>();

        return;

     label5:
        staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i3 = 600;

        goto label4;

     label6:
        return;
    }
}
