class proguard.obfuscate.ClassObfuscator$MyKeepCollector extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor
{
    private final proguard.obfuscate.ClassObfuscator this$0;

    private void <init>(proguard.obfuscate.ClassObfuscator)
    {
        proguard.obfuscate.ClassObfuscator $r1;
        proguard.obfuscate.ClassObfuscator$MyKeepCollector r0;

        r0 := @this: proguard.obfuscate.ClassObfuscator$MyKeepCollector;

        $r1 := @parameter0: proguard.obfuscate.ClassObfuscator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.obfuscate.ClassObfuscator$MyKeepCollector: proguard.obfuscate.ClassObfuscator this$0> = $r1;

        return;
    }

    void <init>(proguard.obfuscate.ClassObfuscator, proguard.obfuscate.ClassObfuscator$1)
    {
        proguard.obfuscate.ClassObfuscator $r1;
        proguard.obfuscate.ClassObfuscator$MyKeepCollector r0;
        proguard.obfuscate.ClassObfuscator$1 $r2;

        r0 := @this: proguard.obfuscate.ClassObfuscator$MyKeepCollector;

        $r1 := @parameter0: proguard.obfuscate.ClassObfuscator;

        $r2 := @parameter1: proguard.obfuscate.ClassObfuscator$1;

        specialinvoke r0.<proguard.obfuscate.ClassObfuscator$MyKeepCollector: void <init>(proguard.obfuscate.ClassObfuscator)>($r1);

        return;
    }

    private void mapPackageName(java.lang.String, java.lang.String, boolean)
    {
        proguard.obfuscate.ClassObfuscator $r3;
        proguard.obfuscate.ClassObfuscator$MyKeepCollector r0;
        java.util.Map $r4;
        int $i0;
        java.lang.String $r1, $r2, $r5, $r6;
        boolean $z0;

        r0 := @this: proguard.obfuscate.ClassObfuscator$MyKeepCollector;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalPackagePrefix(java.lang.String)>($r1);

        $r2 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalPackagePrefix(java.lang.String)>($r2);

     label1:
        $r3 = r0.<proguard.obfuscate.ClassObfuscator$MyKeepCollector: proguard.obfuscate.ClassObfuscator this$0>;

        $r4 = staticinvoke <proguard.obfuscate.ClassObfuscator: java.util.Map access$600(proguard.obfuscate.ClassObfuscator)>($r3);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $z0 != 0 goto label2;

        return;

     label2:
        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalPackagePrefix(java.lang.String)>($r1);

        $r1 = $r5;

        $r6 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalPackagePrefix(java.lang.String)>($r2);

        $r2 = $r6;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 > 0 goto label1;

     label3:
        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.obfuscate.ClassObfuscator$MyKeepCollector r0;

        r0 := @this: proguard.obfuscate.ClassObfuscator$MyKeepCollector;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.obfuscate.ClassObfuscator $r3;
        java.util.Set $r4;
        proguard.classfile.ProgramClass $r1;
        proguard.obfuscate.ClassObfuscator$MyKeepCollector r0;
        java.lang.String $r2, $r5, $r6;
        boolean $z0;

        r0 := @this: proguard.obfuscate.ClassObfuscator$MyKeepCollector;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = staticinvoke <proguard.obfuscate.ClassObfuscator: java.lang.String newClassName(proguard.classfile.Clazz)>($r1);

        if $r2 == null goto label4;

        $r3 = r0.<proguard.obfuscate.ClassObfuscator$MyKeepCollector: proguard.obfuscate.ClassObfuscator this$0>;

        $r4 = staticinvoke <proguard.obfuscate.ClassObfuscator: java.util.Set access$200(proguard.obfuscate.ClassObfuscator)>($r3);

        $r3 = r0.<proguard.obfuscate.ClassObfuscator$MyKeepCollector: proguard.obfuscate.ClassObfuscator this$0>;

        $r5 = staticinvoke <proguard.obfuscate.ClassObfuscator: java.lang.String access$100(proguard.obfuscate.ClassObfuscator,java.lang.String)>($r3, $r2);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r3 = r0.<proguard.obfuscate.ClassObfuscator$MyKeepCollector: proguard.obfuscate.ClassObfuscator this$0>;

        $r5 = staticinvoke <proguard.obfuscate.ClassObfuscator: java.lang.String access$300(proguard.obfuscate.ClassObfuscator)>($r3);

        if $r5 == null goto label1;

        $r3 = r0.<proguard.obfuscate.ClassObfuscator$MyKeepCollector: proguard.obfuscate.ClassObfuscator this$0>;

        $z0 = staticinvoke <proguard.obfuscate.ClassObfuscator: boolean access$400(proguard.obfuscate.ClassObfuscator)>($r3);

        if $z0 != 0 goto label4;

     label1:
        $r5 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r3 = r0.<proguard.obfuscate.ClassObfuscator$MyKeepCollector: proguard.obfuscate.ClassObfuscator this$0>;

        $r6 = staticinvoke <proguard.obfuscate.ClassObfuscator: java.lang.String access$300(proguard.obfuscate.ClassObfuscator)>($r3);

        if $r6 != null goto label3;

        $r3 = r0.<proguard.obfuscate.ClassObfuscator$MyKeepCollector: proguard.obfuscate.ClassObfuscator this$0>;

        $r6 = staticinvoke <proguard.obfuscate.ClassObfuscator: java.lang.String access$500(proguard.obfuscate.ClassObfuscator)>($r3);

        if $r6 != null goto label3;

        $z0 = 1;

     label2:
        specialinvoke r0.<proguard.obfuscate.ClassObfuscator$MyKeepCollector: void mapPackageName(java.lang.String,java.lang.String,boolean)>($r5, $r2, $z0);

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return;
    }
}
