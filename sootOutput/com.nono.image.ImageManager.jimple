public class com.nono.image.ImageManager extends java.lang.Object
{
    private java.io.File a;
    private java.util.HashMap b;
    private android.content.Context c;
    private com.nono.image.c d;
    private final android.os.Handler e;

    public void <init>(android.content.Context, java.io.File)
    {
        android.content.Context $r1;
        com.nono.image.ImageManager r0;
        java.io.File $r2;

        r0 := @this: com.nono.image.ImageManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.io.File;

        specialinvoke r0.<com.nono.image.ImageManager: void <init>(android.content.Context,java.io.File,int)>($r1, $r2, 80);

        return;
    }

    public void <init>(android.content.Context, java.io.File, int)
    {
        android.content.Context $r1;
        com.nono.image.a $r3;
        int $i0;
        java.util.HashMap $r4;
        com.nono.image.c $r5;
        com.nono.image.ImageManager r0;
        java.io.File $r2;

        r0 := @this: com.nono.image.ImageManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.io.File;

        $i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.nono.image.a;

        specialinvoke $r3.<com.nono.image.a: void <init>(com.nono.image.ImageManager)>(r0);

        r0.<com.nono.image.ImageManager: android.os.Handler e> = $r3;

        r0.<com.nono.image.ImageManager: java.io.File a> = $r2;

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.nono.image.ImageManager: android.content.Context c> = $r1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.nono.image.ImageManager: java.util.HashMap b> = $r4;

        $r5 = new com.nono.image.c;

        specialinvoke $r5.<com.nono.image.c: void <init>(int)>(80);

        r0.<com.nono.image.ImageManager: com.nono.image.c d> = $r5;

        return;
    }

    static android.graphics.Bitmap a(com.nono.image.ImageManager, java.io.File)
    {
        com.nono.image.ImageManager $r0;
        java.io.File $r1;
        android.graphics.Bitmap $r2;

        $r0 := @parameter0: com.nono.image.ImageManager;

        $r1 := @parameter1: java.io.File;

        $r2 = specialinvoke $r0.<com.nono.image.ImageManager: android.graphics.Bitmap a(java.io.File)>($r1);

        return $r2;
    }

    private android.graphics.Bitmap a(java.io.File)
    {
        java.lang.Throwable $r4, $r5, $r7, $r10, $r11, $r12, $r13;
        com.nono.image.c $r9;
        java.lang.String $r6;
        com.nono.image.ImageManager r0;
        boolean $z0;
        java.io.IOException $r15;
        java.io.FileInputStream $r2, $r14;
        java.io.File $r1;
        java.io.FileNotFoundException $r16;
        android.graphics.Bitmap $r3;
        java.lang.OutOfMemoryError $r8;

        r0 := @this: com.nono.image.ImageManager;

        $r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label29;

     label01:
        $r14 = new java.io.FileInputStream;

     label02:
        $r2 = $r14;

     label03:
        specialinvoke $r14.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label04:
        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r2);

     label05:
        if $r3 != null goto label06;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label06:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label07:
        return $r3;

     label08:
        $r4 := @caughtexception;

        $r15 = (java.io.IOException) $r4;

        virtualinvoke $r15.<java.io.IOException: void printStackTrace()>();

        return $r3;

     label09:
        $r5 := @caughtexception;

        $r2 = null;

     label10:
        $r16 = (java.io.FileNotFoundException) $r5;

        virtualinvoke $r16.<java.io.FileNotFoundException: void printStackTrace()>();

        $r16 = (java.io.FileNotFoundException) $r5;

        $r6 = virtualinvoke $r16.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        staticinvoke <com.nono.Logger: void e(java.lang.Class,java.lang.String)>(class "Lcom/nono/image/ImageManager;", $r6);

     label11:
        virtualinvoke $r1.<java.io.File: boolean delete()>();

        if $r2 == null goto label29;

     label12:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label13:
        return null;

     label14:
        $r7 := @caughtexception;

        $r15 = (java.io.IOException) $r7;

        virtualinvoke $r15.<java.io.IOException: void printStackTrace()>();

        return null;

     label15:
        $r8 := @caughtexception;

        $r2 = null;

     label16:
        $r6 = virtualinvoke $r8.<java.lang.OutOfMemoryError: java.lang.String getMessage()>();

        staticinvoke <com.nono.Logger: void e(java.lang.Class,java.lang.String)>(class "Lcom/nono/image/ImageManager;", $r6);

        $r9 = r0.<com.nono.image.ImageManager: com.nono.image.c d>;

        virtualinvoke $r9.<com.nono.image.c: void a()>();

        staticinvoke <java.lang.System: void gc()>();

     label17:
        virtualinvoke $r1.<java.io.File: boolean delete()>();

        if $r2 == null goto label29;

     label18:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label19:
        return null;

     label20:
        $r10 := @caughtexception;

        $r15 = (java.io.IOException) $r10;

        virtualinvoke $r15.<java.io.IOException: void printStackTrace()>();

        return null;

     label21:
        $r11 := @caughtexception;

        $r2 = null;

        $r12 = $r11;

     label22:
        virtualinvoke $r1.<java.io.File: boolean delete()>();

        if $r2 == null goto label24;

     label23:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label24:
        throw $r12;

     label25:
        $r13 := @caughtexception;

        $r15 = (java.io.IOException) $r13;

        virtualinvoke $r15.<java.io.IOException: void printStackTrace()>();

        goto label24;

     label26:
        $r12 := @caughtexception;

        goto label22;

     label27:
        $r8 := @caughtexception;

        goto label16;

     label28:
        $r5 := @caughtexception;

        goto label10;

     label29:
        return null;

        catch java.io.FileNotFoundException from label03 to label04 with label09;
        catch java.lang.OutOfMemoryError from label01 to label02 with label15;
        catch java.lang.OutOfMemoryError from label03 to label04 with label15;
        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.io.FileNotFoundException from label04 to label05 with label28;
        catch java.lang.OutOfMemoryError from label04 to label05 with label27;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label26;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label23 to label24 with label25;
    }

    static com.nono.image.c a(com.nono.image.ImageManager)
    {
        com.nono.image.c r1;
        com.nono.image.ImageManager $r0;

        $r0 := @parameter0: com.nono.image.ImageManager;

        r1 = $r0.<com.nono.image.ImageManager: com.nono.image.c d>;

        return r1;
    }

    static java.util.HashMap b(com.nono.image.ImageManager)
    {
        java.util.HashMap r1;
        com.nono.image.ImageManager $r0;

        $r0 := @parameter0: com.nono.image.ImageManager;

        r1 = $r0.<com.nono.image.ImageManager: java.util.HashMap b>;

        return r1;
    }

    static boolean c(com.nono.image.ImageManager)
    {
        com.nono.image.ImageManager $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @parameter0: com.nono.image.ImageManager;

        $r1 = $r0.<com.nono.image.ImageManager: java.io.File a>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r1 = $r0.<com.nono.image.ImageManager: java.io.File a>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        return $z0;

     label1:
        return 1;
    }

    static android.content.Context d(com.nono.image.ImageManager)
    {
        android.content.Context r1;
        com.nono.image.ImageManager $r0;

        $r0 := @parameter0: com.nono.image.ImageManager;

        r1 = $r0.<com.nono.image.ImageManager: android.content.Context c>;

        return r1;
    }

    public android.graphics.Bitmap getBitmap(java.lang.String)
    {
        android.graphics.Bitmap $r4;
        com.nono.image.c $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        com.nono.image.ImageManager r0;
        boolean $z0;

        r0 := @this: com.nono.image.ImageManager;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.nono.image.ImageManager: com.nono.image.c d>;

        $r3 = virtualinvoke $r2.<com.nono.image.c: java.lang.Object a(java.lang.String)>($r1);

        $r4 = (android.graphics.Bitmap) $r3;

        return $r4;
    }

    public java.io.File getCacheFileDirs()
    {
        com.nono.image.ImageManager r0;
        java.io.File r1;

        r0 := @this: com.nono.image.ImageManager;

        r1 = r0.<com.nono.image.ImageManager: java.io.File a>;

        return r1;
    }

    public boolean loadImage(java.lang.String, int, com.nono.image.ImageDownloaderCallback)
    {
        com.nono.image.ImageDownloaderCallback $r2;
        java.util.HashMap $r7;
        java.io.File $r3;
        android.graphics.Bitmap $r6;
        android.os.Handler $r9;
        java.lang.Thread $r12;
        int $i0;
        com.nono.image.c $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r10;
        java.lang.String $r1, $r11;
        com.nono.image.b $r8;
        com.nono.image.ImageManager r0;
        boolean $z0;

        r0 := @this: com.nono.image.ImageManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.nono.image.ImageDownloaderCallback;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label2;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<com.nono.image.ImageDownloaderCallback: void onImageLoaded(android.graphics.Bitmap,java.lang.String,int)>(null, $r1, $i0);

     label1:
        return 0;

     label2:
        $r4 = r0.<com.nono.image.ImageManager: com.nono.image.c d>;

        $r5 = virtualinvoke $r4.<com.nono.image.c: java.lang.Object a(java.lang.String)>($r1);

        $r6 = (android.graphics.Bitmap) $r5;

        if $r6 == null goto label3;

        if $r2 == null goto label3;

        interfaceinvoke $r2.<com.nono.image.ImageDownloaderCallback: void onImageLoaded(android.graphics.Bitmap,java.lang.String,int)>($r6, $r1, $i0);

        return 1;

     label3:
        $r7 = r0.<com.nono.image.ImageManager: java.util.HashMap b>;

        $z0 = virtualinvoke $r7.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r7 = r0.<com.nono.image.ImageManager: java.util.HashMap b>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return 0;

     label4:
        $r7 = r0.<com.nono.image.ImageManager: java.util.HashMap b>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r8 = new com.nono.image.b;

        specialinvoke $r8.<com.nono.image.b: void <init>(com.nono.image.ImageManager)>(r0);

        $r9 = r0.<com.nono.image.ImageManager: android.os.Handler e>;

        $r3 = r0.<com.nono.image.ImageManager: java.io.File a>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = staticinvoke <com.nono.Tools: java.lang.String getMD5Str(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jpg");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<com.nono.image.b: void a(android.os.Handler,java.io.File,java.lang.String,java.lang.String,int)>($r9, $r3, $r11, $r1, $i0);

        $r12 = new java.lang.Thread;

        specialinvoke $r12.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);

        virtualinvoke $r12.<java.lang.Thread: void start()>();

        return 0;
    }

    public void release()
    {
        java.util.HashMap $r1;
        com.nono.image.c $r2;
        com.nono.image.ImageManager r0;

        r0 := @this: com.nono.image.ImageManager;

        $r1 = r0.<com.nono.image.ImageManager: java.util.HashMap b>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r2 = r0.<com.nono.image.ImageManager: com.nono.image.c d>;

        virtualinvoke $r2.<com.nono.image.c: void a()>();

        return;
    }
}
