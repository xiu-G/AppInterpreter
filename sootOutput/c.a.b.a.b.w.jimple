abstract class c.a.b.a.b.w extends c.a.b.a.b.u
{
    private static final java.lang.ref.WeakReference d;
    private java.lang.ref.WeakReference c;

    static void <clinit>()
    {
        java.lang.ref.WeakReference $r0;

        $r0 = new java.lang.ref.WeakReference;

        specialinvoke $r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(null);

        <c.a.b.a.b.w: java.lang.ref.WeakReference d> = $r0;

        return;
    }

    void <init>(byte[])
    {
        byte[] $r1;
        c.a.b.a.b.w r0;
        java.lang.ref.WeakReference $r2;

        r0 := @this: c.a.b.a.b.w;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<c.a.b.a.b.u: void <init>(byte[])>($r1);

        $r2 = <c.a.b.a.b.w: java.lang.ref.WeakReference d>;

        r0.<c.a.b.a.b.w: java.lang.ref.WeakReference c> = $r2;

        return;
    }

    final byte[] S0()
    {
        java.lang.Throwable $r5;
        byte[] $r3, $r4;
        java.lang.Object $r2;
        c.a.b.a.b.w r0;
        java.lang.ref.WeakReference $r1;

        r0 := @this: c.a.b.a.b.w;

        entermonitor r0;

     label1:
        $r1 = r0.<c.a.b.a.b.w: java.lang.ref.WeakReference c>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (byte[]) $r2;

        if $r3 != null goto label2;

        $r4 = virtualinvoke r0.<c.a.b.a.b.w: byte[] p2()>();

        $r3 = $r4;

        $r1 = new java.lang.ref.WeakReference;

        specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r4);

        r0.<c.a.b.a.b.w: java.lang.ref.WeakReference c> = $r1;

     label2:
        exitmonitor r0;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected abstract byte[] p2();
}
