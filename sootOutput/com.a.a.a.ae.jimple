public final class com.a.a.a.ae extends java.io.BufferedOutputStream
{
    private final java.nio.charset.CharsetEncoder a;

    public void <init>(java.io.OutputStream, java.lang.String, int)
    {
        java.io.OutputStream $r1;
        com.a.a.a.ae r0;
        java.nio.charset.Charset $r3;
        java.nio.charset.CharsetEncoder $r4;
        int $i0;
        java.lang.String $r2;

        r0 := @this: com.a.a.a.ae;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        specialinvoke r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r1, $i0);

        $r2 = staticinvoke <com.a.a.a.bw: java.lang.String b(java.lang.String)>($r2);

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        r0.<com.a.a.a.ae: java.nio.charset.CharsetEncoder a> = $r4;

        return;
    }

    public final com.a.a.a.ae a(java.lang.String)
    {
        com.a.a.a.ae r0;
        byte[] $r5;
        java.nio.charset.CharsetEncoder $r2;
        java.nio.CharBuffer $r3;
        int $i0;
        java.lang.String $r1;
        java.nio.ByteBuffer $r4;

        r0 := @this: com.a.a.a.ae;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.a.a.a.ae: java.nio.charset.CharsetEncoder a>;

        $r3 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>($r1);

        $r4 = virtualinvoke $r2.<java.nio.charset.CharsetEncoder: java.nio.ByteBuffer encode(java.nio.CharBuffer)>($r3);

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke $r4.<java.nio.ByteBuffer: int limit()>();

        specialinvoke r0.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r5, 0, $i0);

        return r0;
    }
}
