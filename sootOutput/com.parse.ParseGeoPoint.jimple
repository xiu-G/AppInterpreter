public class com.parse.ParseGeoPoint extends java.lang.Object
{
    static double EARTH_MEAN_RADIUS_KM;
    static double EARTH_MEAN_RADIUS_MILE;
    private double latitude;
    private double longitude;

    static void <clinit>()
    {
        <com.parse.ParseGeoPoint: double EARTH_MEAN_RADIUS_KM> = 6371.0;

        <com.parse.ParseGeoPoint: double EARTH_MEAN_RADIUS_MILE> = 3958.8;

        return;
    }

    public void <init>()
    {
        com.parse.ParseGeoPoint r0;

        r0 := @this: com.parse.ParseGeoPoint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.parse.ParseGeoPoint: double latitude> = 0.0;

        r0.<com.parse.ParseGeoPoint: double longitude> = 0.0;

        return;
    }

    public void <init>(double, double)
    {
        com.parse.ParseGeoPoint r0;
        double $d0, $d1;

        r0 := @this: com.parse.ParseGeoPoint;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.parse.ParseGeoPoint: double latitude> = 0.0;

        r0.<com.parse.ParseGeoPoint: double longitude> = 0.0;

        virtualinvoke r0.<com.parse.ParseGeoPoint: void setLatitude(double)>($d0);

        virtualinvoke r0.<com.parse.ParseGeoPoint: void setLongitude(double)>($d1);

        return;
    }

    public double distanceInKilometersTo(com.parse.ParseGeoPoint)
    {
        com.parse.ParseGeoPoint r0, $r1;
        double $d0, $d1;

        r0 := @this: com.parse.ParseGeoPoint;

        $r1 := @parameter0: com.parse.ParseGeoPoint;

        $d1 = virtualinvoke r0.<com.parse.ParseGeoPoint: double distanceInRadiansTo(com.parse.ParseGeoPoint)>($r1);

        $d0 = <com.parse.ParseGeoPoint: double EARTH_MEAN_RADIUS_KM>;

        $d0 = $d1 * $d0;

        return $d0;
    }

    public double distanceInMilesTo(com.parse.ParseGeoPoint)
    {
        com.parse.ParseGeoPoint r0, $r1;
        double $d0, $d1;

        r0 := @this: com.parse.ParseGeoPoint;

        $r1 := @parameter0: com.parse.ParseGeoPoint;

        $d1 = virtualinvoke r0.<com.parse.ParseGeoPoint: double distanceInRadiansTo(com.parse.ParseGeoPoint)>($r1);

        $d0 = <com.parse.ParseGeoPoint: double EARTH_MEAN_RADIUS_MILE>;

        $d0 = $d1 * $d0;

        return $d0;
    }

    public double distanceInRadiansTo(com.parse.ParseGeoPoint)
    {
        com.parse.ParseGeoPoint r0, $r1;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.parse.ParseGeoPoint;

        $r1 := @parameter0: com.parse.ParseGeoPoint;

        $d0 = r0.<com.parse.ParseGeoPoint: double latitude>;

        $d0 = $d0 * 0.017453292519943295;

        $d1 = r0.<com.parse.ParseGeoPoint: double longitude>;

        $d2 = $d1 * 0.017453292519943295;

        $d1 = virtualinvoke $r1.<com.parse.ParseGeoPoint: double getLatitude()>();

        $d1 = $d1 * 0.017453292519943295;

        $d3 = virtualinvoke $r1.<com.parse.ParseGeoPoint: double getLongitude()>();

        $d4 = $d3 * 0.017453292519943295;

        $d3 = $d0 - $d1;

        $d2 = $d2 - $d4;

        $d3 = $d3 / 2.0;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        $d2 = $d2 / 2.0;

        $d2 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d3 = $d3 * $d3;

        $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d0 = $d0 * $d1;

        $d0 = $d0 * $d2;

        $d0 = $d0 * $d2;

        $d0 = $d0 + $d3;

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>(1.0, $d0);

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $d0 = staticinvoke <java.lang.Math: double asin(double)>($d0);

        $d0 = $d0 * 2.0;

        return $d0;
    }

    public double getLatitude()
    {
        com.parse.ParseGeoPoint r0;
        double d0;

        r0 := @this: com.parse.ParseGeoPoint;

        d0 = r0.<com.parse.ParseGeoPoint: double latitude>;

        return d0;
    }

    public double getLongitude()
    {
        com.parse.ParseGeoPoint r0;
        double d0;

        r0 := @this: com.parse.ParseGeoPoint;

        d0 = r0.<com.parse.ParseGeoPoint: double longitude>;

        return d0;
    }

    public void setLatitude(double)
    {
        byte $b0;
        com.parse.ParseGeoPoint r0;
        int $i1;
        java.lang.IllegalArgumentException $r1;
        double $d0;

        r0 := @this: com.parse.ParseGeoPoint;

        $d0 := @parameter0: double;

        $b0 = $d0 cmpl 90.0;

        $i1 = (int) $b0;

        if $i1 > 0 goto label1;

        $b0 = $d0 cmpg -90.0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Latitude must be within the range (-90.0, 90.0).");

        throw $r1;

     label2:
        r0.<com.parse.ParseGeoPoint: double latitude> = $d0;

        return;
    }

    public void setLongitude(double)
    {
        byte $b0;
        com.parse.ParseGeoPoint r0;
        int $i1;
        java.lang.IllegalArgumentException $r1;
        double $d0;

        r0 := @this: com.parse.ParseGeoPoint;

        $d0 := @parameter0: double;

        $b0 = $d0 cmpl 180.0;

        $i1 = (int) $b0;

        if $i1 > 0 goto label1;

        $b0 = $d0 cmpg -180.0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Longitude must be within the range (-180.0, 180.0).");

        throw $r1;

     label2:
        r0.<com.parse.ParseGeoPoint: double longitude> = $d0;

        return;
    }
}
