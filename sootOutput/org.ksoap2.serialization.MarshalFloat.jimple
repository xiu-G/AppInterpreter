public class org.ksoap2.serialization.MarshalFloat extends java.lang.Object implements org.ksoap2.serialization.Marshal
{
    static java.lang.Class class$java$lang$Double;
    static java.lang.Class class$java$lang$Float;
    static java.lang.Class class$java$math$BigDecimal;

    public void <init>()
    {
        org.ksoap2.serialization.MarshalFloat r0;

        r0 := @this: org.ksoap2.serialization.MarshalFloat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.String $r0;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke r1.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String, org.ksoap2.serialization.PropertyInfo) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        java.lang.Float r5;
        org.ksoap2.serialization.MarshalFloat r0;
        java.lang.Double r6;
        org.ksoap2.serialization.PropertyInfo $r4;
        java.lang.RuntimeException $r8;
        java.math.BigDecimal r7;
        java.lang.String $r2, $r3;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;

        r0 := @this: org.ksoap2.serialization.MarshalFloat;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.ksoap2.serialization.PropertyInfo;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 == 0 goto label1;

        r5 = new java.lang.Float;

        specialinvoke r5.<java.lang.Float: void <init>(java.lang.String)>($r2);

        return r5;

     label1:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z0 == 0 goto label2;

        r6 = new java.lang.Double;

        specialinvoke r6.<java.lang.Double: void <init>(java.lang.String)>($r2);

        return r6;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("decimal");

        if $z0 == 0 goto label3;

        r7 = new java.math.BigDecimal;

        specialinvoke r7.<java.math.BigDecimal: void <init>(java.lang.String)>($r2);

        return r7;

     label3:
        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("float, double, or decimal expected");

        throw $r8;
    }

    public void register(org.ksoap2.serialization.SoapSerializationEnvelope)
    {
        org.ksoap2.serialization.MarshalFloat r0;
        org.ksoap2.serialization.SoapSerializationEnvelope $r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r2;

        r0 := @this: org.ksoap2.serialization.MarshalFloat;

        $r1 := @parameter0: org.ksoap2.serialization.SoapSerializationEnvelope;

        $r2 = $r1.<org.ksoap2.serialization.SoapSerializationEnvelope: java.lang.String xsd>;

        $r3 = <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$java$lang$Float>;

        if $r3 != null goto label4;

        $r3 = staticinvoke <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$(java.lang.String)>("java.lang.Float");

        $r4 = $r3;

        <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$java$lang$Float> = $r3;

     label1:
        virtualinvoke $r1.<org.ksoap2.serialization.SoapSerializationEnvelope: void addMapping(java.lang.String,java.lang.String,java.lang.Class,org.ksoap2.serialization.Marshal)>($r2, "float", $r4, r0);

        $r2 = $r1.<org.ksoap2.serialization.SoapSerializationEnvelope: java.lang.String xsd>;

        $r3 = <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$java$lang$Double>;

        if $r3 != null goto label5;

        $r3 = staticinvoke <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        $r4 = $r3;

        <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$java$lang$Double> = $r3;

     label2:
        virtualinvoke $r1.<org.ksoap2.serialization.SoapSerializationEnvelope: void addMapping(java.lang.String,java.lang.String,java.lang.Class,org.ksoap2.serialization.Marshal)>($r2, "double", $r4, r0);

        $r2 = $r1.<org.ksoap2.serialization.SoapSerializationEnvelope: java.lang.String xsd>;

        $r3 = <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$java$math$BigDecimal>;

        if $r3 != null goto label6;

        $r3 = staticinvoke <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$(java.lang.String)>("java.math.BigDecimal");

        $r4 = $r3;

        <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$java$math$BigDecimal> = $r3;

     label3:
        virtualinvoke $r1.<org.ksoap2.serialization.SoapSerializationEnvelope: void addMapping(java.lang.String,java.lang.String,java.lang.Class,org.ksoap2.serialization.Marshal)>($r2, "decimal", $r4, r0);

        return;

     label4:
        $r4 = <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$java$lang$Float>;

        goto label1;

     label5:
        $r4 = <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$java$lang$Double>;

        goto label2;

     label6:
        $r4 = <org.ksoap2.serialization.MarshalFloat: java.lang.Class class$java$math$BigDecimal>;

        goto label3;
    }

    public void writeInstance(org.xmlpull.v1.XmlSerializer, java.lang.Object) throws java.io.IOException
    {
        org.ksoap2.serialization.MarshalFloat r0;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.xmlpull.v1.XmlSerializer $r1;

        r0 := @this: org.ksoap2.serialization.MarshalFloat;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r3);

        return;
    }
}
