class com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync extends android.os.AsyncTask
{
    private java.lang.String cacheDir;
    private com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback callBack;
    private android.content.Context context;
    private java.io.File fileDirs;
    private java.lang.String fileName;
    private int itemId;
    private android.os.Handler mHandler;
    private android.graphics.Bitmap resultBitmap;
    final com.yang.longrubblishclear.util.ImageManager this$0;
    private java.lang.String url;

    public void <init>(com.yang.longrubblishclear.util.ImageManager, android.content.Context, android.os.Handler, java.io.File, java.lang.String, java.lang.String, int)
    {
        android.content.Context $r2;
        com.yang.longrubblishclear.util.ImageManager $r1;
        java.io.File $r4;
        android.os.Handler $r3;
        int $i0;
        java.lang.String $r5, $r6;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync r0;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync;

        $r1 := @parameter0: com.yang.longrubblishclear.util.ImageManager;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: android.os.Handler;

        $r4 := @parameter3: java.io.File;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: java.lang.String;

        $i0 := @parameter6: int;

        r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager this$0> = $r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: android.os.Handler mHandler> = $r3;

        r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.io.File fileDirs> = $r4;

        r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.lang.String fileName> = $r5;

        r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.lang.String url> = $r6;

        r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: int itemId> = $i0;

        r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: android.content.Context context> = $r2;

        return;
    }

    protected transient android.graphics.Bitmap doInBackground(java.lang.String[])
    {
        byte[] r2;
        com.yang.longrubblishclear.util.ImageManager $r12;
        byte $b1;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync r0;
        boolean $z0;
        org.apache.http.HttpEntity $r8;
        java.util.concurrent.ConcurrentHashMap $r19;
        java.lang.Exception r16;
        java.lang.StringBuilder $r10, $r21;
        android.content.Context $r7;
        java.lang.String[] $r1;
        long $l0, l2, l3, $l5;
        java.util.HashMap $r18;
        int $i4, $i6;
        java.lang.String $r6, $r13;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback $r20;
        java.io.FileOutputStream r5, $r22;
        java.io.FileInputStream r4, $r24;
        java.io.File r3, $r9, $r14, $r23;
        android.graphics.Bitmap $r15;
        java.lang.OutOfMemoryError r17;
        java.io.InputStream $r11;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync;

        $r1 := @parameter0: java.lang.String[];

        $r6 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.lang.String url>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" ", "%20");

     label01:
        $r7 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: android.content.Context context>;

        $r8 = staticinvoke <com.yang.longrubblishclear.util.Tools: org.apache.http.HttpEntity connectToURL(android.content.Context,java.lang.String)>($r7, $r6);

     label02:
        if $r8 != null goto label03;

        return null;

     label03:
        $l0 = interfaceinvoke $r8.<org.apache.http.HttpEntity: long getContentLength()>();

     label04:
        $b1 = $l0 cmp 0L;

        $i4 = (int) $b1;

        if $i4 > 0 goto label05;

        return null;

     label05:
        r3 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.io.File fileDirs>;

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

     label06:
        if $z0 != 0 goto label08;

     label07:
        r3 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.io.File fileDirs>;

        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

     label08:
        $r22 = new java.io.FileOutputStream;

        r5 = $r22;

        $r14 = new java.io.File;

        r3 = $r14;

     label09:
        $r9 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.io.File fileDirs>;

     label10:
        $r21 = new java.lang.StringBuilder;

        $r10 = $r21;

     label11:
        $r6 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.lang.String fileName>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r6);

        specialinvoke $r22.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

     label12:
        $r11 = interfaceinvoke $r8.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label13:
        r2 = newarray (byte)[1024];

        l2 = 0L;

        l3 = 0L;

     label14:
        $i4 = virtualinvoke $r11.<java.io.InputStream: int read(byte[])>(r2);

     label15:
        $i6 = -1;

        if $i4 != $i6 goto label30;

     label16:
        virtualinvoke r5.<java.io.FileOutputStream: void flush()>();

     label17:
        $r9 = new java.io.File;

        r3 = $r9;

     label18:
        $r12 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager this$0>;

        $r6 = staticinvoke <com.yang.longrubblishclear.util.ImageManager: java.lang.String access$6(com.yang.longrubblishclear.util.ImageManager)>($r12);

        $r13 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.lang.String fileName>;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r6, $r13);

     label19:
        $r23 = new java.io.File;

        $r9 = $r23;

     label20:
        $r14 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.io.File fileDirs>;

     label21:
        $r21 = new java.lang.StringBuilder;

        $r10 = $r21;

     label22:
        $r6 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.lang.String fileName>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, $r6);

        staticinvoke <com.yang.longrubblishclear.util.ImageTools: boolean moveTo(java.io.File,java.io.File)>(r3, $r9);

        $r12 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager this$0>;

        $z0 = staticinvoke <com.yang.longrubblishclear.util.ImageManager: boolean access$5(com.yang.longrubblishclear.util.ImageManager)>($r12);

     label23:
        if $z0 == 0 goto label46;

        $r9 = new java.io.File;

        r3 = $r9;

     label24:
        $r12 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager this$0>;

        $r6 = staticinvoke <com.yang.longrubblishclear.util.ImageManager: java.lang.String access$6(com.yang.longrubblishclear.util.ImageManager)>($r12);

        $r13 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.lang.String fileName>;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r6, $r13);

     label25:
        $r24 = new java.io.FileInputStream;

        r4 = $r24;

     label26:
        specialinvoke $r24.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

     label27:
        $r15 = staticinvoke <com.yang.longrubblishclear.util.ImageTools: android.graphics.Bitmap formBitmapOptions(java.io.InputStream,java.io.File)>(r4, r3);

     label28:
        r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: android.graphics.Bitmap resultBitmap> = $r15;

     label29:
        return null;

     label30:
        $l5 = (long) $i4;

        l2 = l2 + $l5;

        $l5 = (long) $i4;

        l3 = l3 + $l5;

        $l5 = 100L * l3;

     label31:
        $l5 = $l5 / $l0;

     label32:
        $i6 = (int) $l5;

        if $i6 != 1 goto label39;

        $r1 = newarray (java.lang.String)[1];

        $r21 = new java.lang.StringBuilder;

        $r10 = $r21;

     label33:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

     label34:
        l3 = 100L * l2;

     label35:
        l3 = l3 / $l0;

     label36:
        $i6 = (int) l3;

     label37:
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1[0] = $r6;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: void publishProgress(java.lang.Object[])>($r1);

     label38:
        l3 = 0L;

     label39:
        virtualinvoke r5.<java.io.FileOutputStream: void write(byte[],int,int)>(r2, 0, $i4);

     label40:
        goto label14;

     label41:
        r16 := @caughtexception;

     label42:
        virtualinvoke r16.<java.lang.Exception: void printStackTrace()>();

        return null;

     label43:
        r17 := @caughtexception;

     label44:
        $r12 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager this$0>;

        $r18 = staticinvoke <com.yang.longrubblishclear.util.ImageManager: java.util.HashMap access$3(com.yang.longrubblishclear.util.ImageManager)>($r12);

        virtualinvoke $r18.<java.util.HashMap: void clear()>();

        $r19 = staticinvoke <com.yang.longrubblishclear.util.ImageManager: java.util.concurrent.ConcurrentHashMap access$4()>();

        virtualinvoke $r19.<java.util.concurrent.ConcurrentHashMap: void clear()>();

        $r12 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager this$0>;

        $r18 = staticinvoke <com.yang.longrubblishclear.util.ImageManager: java.util.HashMap access$1(com.yang.longrubblishclear.util.ImageManager)>($r12);

        virtualinvoke $r18.<java.util.HashMap: void clear()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("error", "out of memory!!!!out of memory!!!!");

        staticinvoke <java.lang.System: void gc()>();

        $r20 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback callBack>;

        $i4 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: int itemId>;

        interfaceinvoke $r20.<com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback: void imageUpdateProgress(java.lang.String,int)>("OutOfMemoryError", $i4);

     label45:
        goto label29;

     label46:
        return null;

     label47:
        r16 := @caughtexception;

        goto label42;

        catch java.lang.Exception from label01 to label02 with label47;
        catch java.lang.Exception from label03 to label04 with label47;
        catch java.lang.Exception from label05 to label06 with label47;
        catch java.lang.Exception from label07 to label08 with label47;
        catch java.lang.Exception from label09 to label10 with label47;
        catch java.lang.Exception from label11 to label12 with label47;
        catch java.lang.Exception from label12 to label13 with label41;
        catch java.lang.Exception from label14 to label15 with label41;
        catch java.lang.Exception from label16 to label17 with label41;
        catch java.lang.Exception from label18 to label19 with label41;
        catch java.lang.Exception from label20 to label21 with label41;
        catch java.lang.Exception from label22 to label23 with label41;
        catch java.lang.Exception from label24 to label25 with label41;
        catch java.lang.Exception from label26 to label27 with label41;
        catch java.lang.OutOfMemoryError from label27 to label28 with label43;
        catch java.lang.Exception from label27 to label29 with label41;
        catch java.lang.Exception from label31 to label32 with label41;
        catch java.lang.Exception from label33 to label34 with label41;
        catch java.lang.Exception from label35 to label36 with label41;
        catch java.lang.Exception from label37 to label38 with label41;
        catch java.lang.Exception from label39 to label40 with label41;
        catch java.lang.Exception from label44 to label45 with label41;
    }

    protected transient volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        java.lang.Object[] $r2;
        android.graphics.Bitmap $r1;
        java.lang.String[] $r3;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync r0;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.String[]) $r2;

        $r1 = virtualinvoke r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: android.graphics.Bitmap doInBackground(java.lang.String[])>($r3);

        return $r1;
    }

    protected void onPostExecute(android.graphics.Bitmap)
    {
        com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback $r7;
        android.os.Bundle r2;
        android.os.Message $r3;
        android.graphics.Bitmap $r1, $r6;
        android.os.Handler $r4;
        int $i0;
        java.lang.String $r5;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync r0;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r4 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        r2 = new android.os.Bundle;

        specialinvoke r2.<android.os.Bundle: void <init>()>();

        $r5 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: java.lang.String url>;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("imageUrl", $r5);

        $i0 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: int itemId>;

        virtualinvoke r2.<android.os.Bundle: void putInt(java.lang.String,int)>("itemId", $i0);

        virtualinvoke $r3.<android.os.Message: void setData(android.os.Bundle)>(r2);

        $r6 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: android.graphics.Bitmap resultBitmap>;

        if $r6 == null goto label2;

        $r7 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback callBack>;

        $i0 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: int itemId>;

        interfaceinvoke $r7.<com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback: void imageUpdateProgress(java.lang.String,int)>("100", $i0);

        $r3.<android.os.Message: java.lang.Object obj> = $r1;

     label1:
        $r4 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        specialinvoke r0.<android.os.AsyncTask: void onPostExecute(java.lang.Object)>($r1);

        return;

     label2:
        $r7 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback callBack>;

        $i0 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: int itemId>;

        interfaceinvoke $r7.<com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback: void imageUpdateProgress(java.lang.String,int)>("-100", $i0);

        goto label1;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        java.lang.Object $r1;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync r0;
        android.graphics.Bitmap $r2;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.graphics.Bitmap) $r1;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: void onPostExecute(android.graphics.Bitmap)>($r2);

        return;
    }

    protected void onPreExecute()
    {
        int $i0;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback $r1;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync r0;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync;

        $r1 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback callBack>;

        $i0 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: int itemId>;

        interfaceinvoke $r1.<com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback: void imageUpdateProgress(java.lang.String,int)>("0", $i0);

        specialinvoke r0.<android.os.AsyncTask: void onPreExecute()>();

        return;
    }

    protected transient volatile void onProgressUpdate(java.lang.Object[])
    {
        java.lang.String[] $r2;
        java.lang.Object[] $r1;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync r0;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.String[]) $r1;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: void onProgressUpdate(java.lang.String[])>($r2);

        return;
    }

    protected transient void onProgressUpdate(java.lang.String[])
    {
        com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback $r2;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r3;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync r0;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync;

        $r1 := @parameter0: java.lang.String[];

        $r2 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback callBack>;

        $r3 = $r1[0];

        $i0 = r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: int itemId>;

        interfaceinvoke $r2.<com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback: void imageUpdateProgress(java.lang.String,int)>($r3, $i0);

        specialinvoke r0.<android.os.AsyncTask: void onProgressUpdate(java.lang.Object[])>($r1);

        return;
    }

    public void setImageDownloaderCallback(com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback)
    {
        com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback $r1;
        com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync r0;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync;

        $r1 := @parameter0: com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback;

        r0.<com.yang.longrubblishclear.util.ImageManager$ImageDownloadAsync: com.yang.longrubblishclear.util.ImageManager$ImageDownloaderCallback callBack> = $r1;

        return;
    }
}
