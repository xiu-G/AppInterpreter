public class org.mozilla.universalchardet.UniversalDetector extends java.lang.Object
{
    public static final float MINIMUM_THRESHOLD;
    public static final float SHORTCUT_THRESHOLD;
    private java.lang.String detectedCharset;
    private boolean done;
    private org.mozilla.universalchardet.prober.CharsetProber escCharsetProber;
    private boolean gotData;
    private org.mozilla.universalchardet.UniversalDetector$InputState inputState;
    private byte lastChar;
    private org.mozilla.universalchardet.CharsetListener listener;
    private org.mozilla.universalchardet.prober.CharsetProber[] probers;
    private boolean start;

    public void <init>(org.mozilla.universalchardet.CharsetListener)
    {
        org.mozilla.universalchardet.prober.CharsetProber[] $r2;
        org.mozilla.universalchardet.UniversalDetector r0;
        org.mozilla.universalchardet.CharsetListener $r1;
        int $i0, $i1;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        $r1 := @parameter0: org.mozilla.universalchardet.CharsetListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener> = null;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber> = null;

        $r2 = newarray (org.mozilla.universalchardet.prober.CharsetProber)[3];

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers> = $r2;

        $i0 = 0;

     label1:
        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r2[$i0] = null;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.mozilla.universalchardet.UniversalDetector: void reset()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r2;
        byte[] $r5;
        java.lang.String[] $r0;
        java.io.FileInputStream $r1;
        org.mozilla.universalchardet.UniversalDetector $r3;
        org.mozilla.universalchardet.UniversalDetector$1 $r4;
        int $i0;
        java.lang.String $r6;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        $i0 = lengthof $r0;

        if $i0 == 1 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("USAGE: java UniversalDetector filename");

        return;

     label1:
        $r3 = new org.mozilla.universalchardet.UniversalDetector;

        $r4 = new org.mozilla.universalchardet.UniversalDetector$1;

        specialinvoke $r4.<org.mozilla.universalchardet.UniversalDetector$1: void <init>()>();

        specialinvoke $r3.<org.mozilla.universalchardet.UniversalDetector: void <init>(org.mozilla.universalchardet.CharsetListener)>($r4);

        $r5 = newarray (byte)[4096];

        $r1 = new java.io.FileInputStream;

        $r6 = $r0[0];

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>($r6);

     label2:
        $i0 = virtualinvoke $r1.<java.io.FileInputStream: int read(byte[])>($r5);

        if $i0 <= 0 goto label3;

        $z0 = virtualinvoke $r3.<org.mozilla.universalchardet.UniversalDetector: boolean isDone()>();

        if $z0 != 0 goto label3;

        virtualinvoke $r3.<org.mozilla.universalchardet.UniversalDetector: void handleData(byte[],int,int)>($r5, 0, $i0);

        goto label2;

     label3:
        virtualinvoke $r3.<org.mozilla.universalchardet.UniversalDetector: void dataEnd()>();

        return;
    }

    public void dataEnd()
    {
        org.mozilla.universalchardet.UniversalDetector$InputState $r3, $r4;
        org.mozilla.universalchardet.prober.CharsetProber $r6;
        org.mozilla.universalchardet.prober.CharsetProber[] $r5;
        org.mozilla.universalchardet.UniversalDetector r0;
        byte $b0;
        org.mozilla.universalchardet.CharsetListener $r2;
        int $i1, $i2, $i3;
        float $f0, $f1;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        $i1 = 0;

        $z0 = r0.<org.mozilla.universalchardet.UniversalDetector: boolean gotData>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset>;

        if $r1 == null goto label2;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean done> = 1;

        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener>;

        if $r2 == null goto label7;

        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener>;

        $r1 = r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset>;

        interfaceinvoke $r2.<org.mozilla.universalchardet.CharsetListener: void report(java.lang.String)>($r1);

        return;

     label2:
        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r4 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState HIGHBYTE>;

        if $r3 != $r4 goto label6;

        $f0 = 0.0F;

        $i2 = 0;

     label3:
        $r5 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $i3 = lengthof $r5;

        if $i1 >= $i3 goto label5;

        $r5 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r6 = $r5[$i1];

        $f1 = virtualinvoke $r6.<org.mozilla.universalchardet.prober.CharsetProber: float getConfidence()>();

        $b0 = $f1 cmpl $f0;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label4;

        $i2 = $i1;

        $f0 = $f1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $b0 = $f0 cmpl 0.2F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label7;

        $r5 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r6 = $r5[$i2];

        $r1 = virtualinvoke $r6.<org.mozilla.universalchardet.prober.CharsetProber: java.lang.String getCharSetName()>();

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r1;

        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener>;

        if $r2 == null goto label7;

        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener>;

        $r1 = r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset>;

        interfaceinvoke $r2.<org.mozilla.universalchardet.CharsetListener: void report(java.lang.String)>($r1);

        return;

     label6:
        $r4 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState ESC_ASCII>;

     label7:
        return;
    }

    public java.lang.String getDetectedCharset()
    {
        java.lang.String r1;
        org.mozilla.universalchardet.UniversalDetector r0;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        r1 = r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset>;

        return r1;
    }

    public org.mozilla.universalchardet.CharsetListener getListener()
    {
        org.mozilla.universalchardet.UniversalDetector r0;
        org.mozilla.universalchardet.CharsetListener r1;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        r1 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener>;

        return r1;
    }

    public void handleData(byte[], int, int)
    {
        org.mozilla.universalchardet.UniversalDetector$InputState $r3, $r4;
        org.mozilla.universalchardet.prober.CharsetProber $r5;
        byte[] $r1;
        short $s4, $s6, $s7, $s8;
        org.mozilla.universalchardet.prober.CharsetProber[] $r6;
        org.mozilla.universalchardet.UniversalDetector r0;
        byte $b3;
        int $i0, $i1, $i2, $i5, $i9, $i10;
        org.mozilla.universalchardet.prober.SBCSGroupProber $r10;
        java.lang.String $r2;
        boolean $z0;
        org.mozilla.universalchardet.prober.CharsetProber$ProbingState $r7, $r8;
        org.mozilla.universalchardet.prober.EscCharsetProber $r12;
        org.mozilla.universalchardet.prober.MBCSGroupProber $r9;
        org.mozilla.universalchardet.prober.Latin1Prober $r11;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = 0;

        $z0 = r0.<org.mozilla.universalchardet.UniversalDetector: boolean done>;

        if $z0 == 0 goto label01;

        return;

     label01:
        if $i1 <= 0 goto label02;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean gotData> = 1;

     label02:
        $z0 = r0.<org.mozilla.universalchardet.UniversalDetector: boolean start>;

        if $z0 == 0 goto label11;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean start> = 0;

        if $i1 <= 3 goto label11;

        $b3 = $r1[0];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $b3 = $r1[1];

        $s6 = (short) $b3;

        $s6 = $s6 & 255;

        $b3 = $r1[2];

        $s7 = (short) $b3;

        $s7 = $s7 & 255;

        $b3 = $r1[3];

        $s8 = (short) $b3;

        $s8 = $s8 & 255;

        $i5 = (int) $s4;

        lookupswitch($i5)
        {
            case 0: goto label07;
            case 239: goto label04;
            case 254: goto label05;
            case 255: goto label09;
            default: goto label03;
        };

     label03:
        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset>;

        if $r2 == null goto label11;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean done> = 1;

        return;

     label04:
        $i5 = (int) $s6;

        if $i5 != 187 goto label03;

        $i5 = (int) $s7;

        if $i5 != 191 goto label03;

        $r2 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_8>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r2;

        goto label03;

     label05:
        $i5 = (int) $s6;

        if $i5 != 255 goto label06;

        if $s7 != 0 goto label06;

        if $s8 != 0 goto label06;

        $r2 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_X_ISO_10646_UCS_4_3412>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r2;

        goto label03;

     label06:
        $i5 = (int) $s6;

        if $i5 != 255 goto label03;

        $r2 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_16BE>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r2;

        goto label03;

     label07:
        if $s6 != 0 goto label03;

        $i5 = (int) $s7;

        if $i5 != 254 goto label08;

        $i5 = (int) $s8;

        if $i5 != 255 goto label08;

        $r2 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_32BE>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r2;

        goto label03;

     label08:
        if $s6 != 0 goto label03;

        $i5 = (int) $s7;

        if $i5 != 255 goto label03;

        $i5 = (int) $s8;

        if $i5 != 254 goto label03;

        $r2 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_X_ISO_10646_UCS_4_2143>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r2;

        goto label03;

     label09:
        $i5 = (int) $s6;

        if $i5 != 254 goto label10;

        if $s7 != 0 goto label10;

        if $s8 != 0 goto label10;

        $r2 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_32LE>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r2;

        goto label03;

     label10:
        $i5 = (int) $s6;

        if $i5 != 254 goto label03;

        $r2 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_16LE>;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r2;

        goto label03;

     label11:
        $i5 = 0 + $i1;

        $i9 = 0;

     label12:
        if $i9 >= $i5 goto label20;

        $b3 = $r1[$i9];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $s6 = $s4 & 128;

        if $s6 == 0 goto label17;

        $i10 = (int) $s4;

        if $i10 == 160 goto label17;

        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r4 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState HIGHBYTE>;

        if $r3 == $r4 goto label16;

        $r3 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState HIGHBYTE>;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState> = $r3;

        $r5 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        if $r5 == null goto label13;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber> = null;

     label13:
        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r5 = $r6[0];

        if $r5 != null goto label14;

        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r9 = new org.mozilla.universalchardet.prober.MBCSGroupProber;

        specialinvoke $r9.<org.mozilla.universalchardet.prober.MBCSGroupProber: void <init>()>();

        $r6[0] = $r9;

     label14:
        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r5 = $r6[1];

        if $r5 != null goto label15;

        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r10 = new org.mozilla.universalchardet.prober.SBCSGroupProber;

        specialinvoke $r10.<org.mozilla.universalchardet.prober.SBCSGroupProber: void <init>()>();

        $r6[1] = $r10;

     label15:
        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r5 = $r6[2];

        if $r5 != null goto label16;

        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r11 = new org.mozilla.universalchardet.prober.Latin1Prober;

        specialinvoke $r11.<org.mozilla.universalchardet.prober.Latin1Prober: void <init>()>();

        $r6[2] = $r11;

     label16:
        $i9 = $i9 + 1;

        goto label12;

     label17:
        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r4 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState PURE_ASCII>;

        if $r3 != $r4 goto label19;

        $i10 = (int) $s4;

        if $i10 == 27 goto label18;

        $i10 = (int) $s4;

        if $i10 != 123 goto label19;

        $b3 = r0.<org.mozilla.universalchardet.UniversalDetector: byte lastChar>;

        $i10 = (int) $b3;

        if $i10 != 126 goto label19;

     label18:
        $r3 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState ESC_ASCII>;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState> = $r3;

     label19:
        $b3 = $r1[$i9];

        r0.<org.mozilla.universalchardet.UniversalDetector: byte lastChar> = $b3;

        goto label16;

     label20:
        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r4 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState ESC_ASCII>;

        if $r3 != $r4 goto label22;

        $r5 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        if $r5 != null goto label21;

        $r12 = new org.mozilla.universalchardet.prober.EscCharsetProber;

        specialinvoke $r12.<org.mozilla.universalchardet.prober.EscCharsetProber: void <init>()>();

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber> = $r12;

     label21:
        $r5 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        $r7 = virtualinvoke $r5.<org.mozilla.universalchardet.prober.CharsetProber: org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int)>($r1, 0, $i1);

        $r8 = <org.mozilla.universalchardet.prober.CharsetProber$ProbingState: org.mozilla.universalchardet.prober.CharsetProber$ProbingState FOUND_IT>;

        if $r7 != $r8 goto label25;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean done> = 1;

        $r5 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        $r2 = virtualinvoke $r5.<org.mozilla.universalchardet.prober.CharsetProber: java.lang.String getCharSetName()>();

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r2;

        return;

     label22:
        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState>;

        $r4 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState HIGHBYTE>;

        if $r3 != $r4 goto label25;

     label23:
        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $i5 = lengthof $r6;

        if $i2 >= $i5 goto label25;

        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r5 = $r6[$i2];

        $r7 = virtualinvoke $r5.<org.mozilla.universalchardet.prober.CharsetProber: org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int)>($r1, 0, $i1);

        $r8 = <org.mozilla.universalchardet.prober.CharsetProber$ProbingState: org.mozilla.universalchardet.prober.CharsetProber$ProbingState FOUND_IT>;

        if $r7 != $r8 goto label24;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean done> = 1;

        $r6 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r5 = $r6[$i2];

        $r2 = virtualinvoke $r5.<org.mozilla.universalchardet.prober.CharsetProber: java.lang.String getCharSetName()>();

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = $r2;

        return;

     label24:
        $i2 = $i2 + 1;

        goto label23;

     label25:
        return;
    }

    public boolean isDone()
    {
        org.mozilla.universalchardet.UniversalDetector r0;
        boolean z0;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        z0 = r0.<org.mozilla.universalchardet.UniversalDetector: boolean done>;

        return z0;
    }

    public void reset()
    {
        org.mozilla.universalchardet.UniversalDetector$InputState $r1;
        org.mozilla.universalchardet.prober.CharsetProber $r2;
        org.mozilla.universalchardet.prober.CharsetProber[] $r3;
        org.mozilla.universalchardet.UniversalDetector r0;
        int $i0, $i1;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        $i0 = 0;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean done> = 0;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean start> = 1;

        r0.<org.mozilla.universalchardet.UniversalDetector: java.lang.String detectedCharset> = null;

        r0.<org.mozilla.universalchardet.UniversalDetector: boolean gotData> = 0;

        $r1 = <org.mozilla.universalchardet.UniversalDetector$InputState: org.mozilla.universalchardet.UniversalDetector$InputState PURE_ASCII>;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.UniversalDetector$InputState inputState> = $r1;

        r0.<org.mozilla.universalchardet.UniversalDetector: byte lastChar> = 0;

        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        if $r2 == null goto label1;

        $r2 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber escCharsetProber>;

        virtualinvoke $r2.<org.mozilla.universalchardet.prober.CharsetProber: void reset()>();

     label1:
        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label3;

        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r2 = $r3[$i0];

        if $r2 == null goto label2;

        $r3 = r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.prober.CharsetProber[] probers>;

        $r2 = $r3[$i0];

        virtualinvoke $r2.<org.mozilla.universalchardet.prober.CharsetProber: void reset()>();

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void setListener(org.mozilla.universalchardet.CharsetListener)
    {
        org.mozilla.universalchardet.UniversalDetector r0;
        org.mozilla.universalchardet.CharsetListener $r1;

        r0 := @this: org.mozilla.universalchardet.UniversalDetector;

        $r1 := @parameter0: org.mozilla.universalchardet.CharsetListener;

        r0.<org.mozilla.universalchardet.UniversalDetector: org.mozilla.universalchardet.CharsetListener listener> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <org.mozilla.universalchardet.UniversalDetector: float SHORTCUT_THRESHOLD> = 0.95F;

        <org.mozilla.universalchardet.UniversalDetector: float MINIMUM_THRESHOLD> = 0.2F;

        return;
    }
}
