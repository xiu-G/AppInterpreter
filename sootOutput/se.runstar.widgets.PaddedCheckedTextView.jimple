public class se.runstar.widgets.PaddedCheckedTextView extends android.widget.TextView implements android.widget.Checkable
{
    private static final int[] e;
    private boolean a;
    private android.graphics.drawable.Drawable b;
    private int c;
    private int d;

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <se.runstar.widgets.PaddedCheckedTextView: int[] e> = $r0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        se.runstar.widgets.PaddedCheckedTextView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: se.runstar.widgets.PaddedCheckedTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r5, $r6;
        android.content.res.TypedArray $r4;
        android.util.AttributeSet $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3;
        se.runstar.widgets.PaddedCheckedTextView r0;
        boolean $z0;

        r0 := @this: se.runstar.widgets.PaddedCheckedTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $i1 = -1;

        r0.<se.runstar.widgets.PaddedCheckedTextView: int c> = $i1;

        $r3 = <se.runstar.R$styleable: int[] a>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, $i0, 0);

        $i0 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingRight()>();

        r0.<se.runstar.widgets.PaddedCheckedTextView: int c> = $i0;

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        if $r5 == null goto label4;

        if $r5 == null goto label6;

        $r6 = r0.<se.runstar.widgets.PaddedCheckedTextView: android.graphics.drawable.Drawable b>;

        if $r6 == null goto label1;

        $r6 = r0.<se.runstar.widgets.PaddedCheckedTextView: android.graphics.drawable.Drawable b>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r6 = r0.<se.runstar.widgets.PaddedCheckedTextView: android.graphics.drawable.Drawable b>;

        virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r6);

     label1:
        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i0 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getVisibility()>();

        if $i0 != 0 goto label5;

        $z0 = 1;

     label2:
        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 0);

        $r3 = <se.runstar.widgets.PaddedCheckedTextView: int[] e>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

        $i0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: void setMinHeight(int)>($i0);

        $i0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<se.runstar.widgets.PaddedCheckedTextView: int d> = $i0;

        $i0 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingLeft()>();

        $i1 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingTop()>();

        $i2 = r0.<se.runstar.widgets.PaddedCheckedTextView: int c>;

        $i3 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingBottom()>();

        virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r3 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int[] getDrawableState()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

        r0.<se.runstar.widgets.PaddedCheckedTextView: android.graphics.drawable.Drawable b> = $r5;

     label3:
        virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: void requestLayout()>();

     label4:
        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: void setChecked(boolean)>($z0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;

     label5:
        $z0 = 0;

        goto label2;

     label6:
        $i0 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingLeft()>();

        $i1 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingTop()>();

        $i2 = r0.<se.runstar.widgets.PaddedCheckedTextView: int c>;

        $i3 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingBottom()>();

        virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        goto label3;
    }

    protected void drawableStateChanged()
    {
        se.runstar.widgets.PaddedCheckedTextView r0;
        android.graphics.drawable.Drawable $r1;
        int[] $r2;

        r0 := @this: se.runstar.widgets.PaddedCheckedTextView;

        specialinvoke r0.<android.widget.TextView: void drawableStateChanged()>();

        $r1 = r0.<se.runstar.widgets.PaddedCheckedTextView: android.graphics.drawable.Drawable b>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int[] getDrawableState()>();

        $r1 = r0.<se.runstar.widgets.PaddedCheckedTextView: android.graphics.drawable.Drawable b>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

        virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: void invalidate()>();

     label1:
        return;
    }

    public boolean isChecked()
    {
        se.runstar.widgets.PaddedCheckedTextView r0;
        boolean z0;

        r0 := @this: se.runstar.widgets.PaddedCheckedTextView;

        z0 = r0.<se.runstar.widgets.PaddedCheckedTextView: boolean a>;

        return z0;
    }

    protected int[] onCreateDrawableState(int)
    {
        int[] $r1, $r2;
        int $i0;
        se.runstar.widgets.PaddedCheckedTextView r0;
        boolean $z0;

        r0 := @this: se.runstar.widgets.PaddedCheckedTextView;

        $i0 := @parameter0: int;

        $i0 = $i0 + 1;

        $r1 = specialinvoke r0.<android.widget.TextView: int[] onCreateDrawableState(int)>($i0);

        $z0 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = <se.runstar.widgets.PaddedCheckedTextView: int[] e>;

        staticinvoke <se.runstar.widgets.PaddedCheckedTextView: int[] mergeDrawableStates(int[],int[])>($r1, $r2);

     label1:
        return $r1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        se.runstar.widgets.PaddedCheckedTextView r0;
        android.graphics.Canvas $r1;

        r0 := @this: se.runstar.widgets.PaddedCheckedTextView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.TextView: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = r0.<se.runstar.widgets.PaddedCheckedTextView: android.graphics.drawable.Drawable b>;

        if $r2 == null goto label5;

        $i0 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getGravity()>();

        $i1 = $i0 & 112;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        lookupswitch($i1)
        {
            case 16: goto label4;
            case 80: goto label3;
            default: goto label1;
        };

     label1:
        $i1 = 0;

     label2:
        $i2 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getWidth()>();

        $i3 = r0.<se.runstar.widgets.PaddedCheckedTextView: int d>;

        $i3 = $i2 - $i3;

        $i4 = r0.<se.runstar.widgets.PaddedCheckedTextView: int c>;

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingTop()>();

        $i4 = $i4 + $i1;

        $i5 = r0.<se.runstar.widgets.PaddedCheckedTextView: int c>;

        $i2 = $i2 - $i5;

        $i5 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingTop()>();

        $i1 = $i1 + $i5;

        $i0 = $i1 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, $i4, $i2, $i0);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;

     label3:
        $i1 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getHeight()>();

        $i1 = $i1 - $i0;

        goto label2;

     label4:
        $i1 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getHeight()>();

        $i3 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingTop()>();

        $i1 = $i1 - $i3;

        $i3 = virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: int getPaddingBottom()>();

        $i1 = $i1 - $i3;

        $i1 = $i1 - $i0;

        $i1 = $i1 / 2;

        goto label2;

     label5:
        return;
    }

    public void setChecked(boolean)
    {
        se.runstar.widgets.PaddedCheckedTextView r0;
        boolean $z0, $z1;

        r0 := @this: se.runstar.widgets.PaddedCheckedTextView;

        $z0 := @parameter0: boolean;

        $z1 = r0.<se.runstar.widgets.PaddedCheckedTextView: boolean a>;

        if $z1 == $z0 goto label1;

        r0.<se.runstar.widgets.PaddedCheckedTextView: boolean a> = $z0;

        virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: void refreshDrawableState()>();

     label1:
        return;
    }

    public void setPadding(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        se.runstar.widgets.PaddedCheckedTextView r0;

        r0 := @this: se.runstar.widgets.PaddedCheckedTextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>($i0, 0, $i2, $i3);

        return;
    }

    public void toggle()
    {
        se.runstar.widgets.PaddedCheckedTextView r0;
        boolean $z0;

        r0 := @this: se.runstar.widgets.PaddedCheckedTextView;

        $z0 = r0.<se.runstar.widgets.PaddedCheckedTextView: boolean a>;

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        virtualinvoke r0.<se.runstar.widgets.PaddedCheckedTextView: void setChecked(boolean)>($z0);

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
}
