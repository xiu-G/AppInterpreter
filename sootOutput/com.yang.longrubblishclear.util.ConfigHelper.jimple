public class com.yang.longrubblishclear.util.ConfigHelper extends java.lang.Object
{
    public static final java.lang.String KEY_APP_LINK;
    public static final java.lang.String KEY_AUTO_BACK_UP;
    public static final java.lang.String KEY_CHECK_CLEAR;
    public static final java.lang.String KEY_CHECK_MOVE;
    public static final java.lang.String KEY_DATA_DIR;
    public static final java.lang.String KEY_OPEN_SHAKE_DETECTOR;
    public static final java.lang.String KEY_SCHEDULE_ON;
    public static final java.lang.String KEY_SCHEDULE_PERIOD;
    public static final java.lang.String KEY_SILENT_UNINSTALL;
    public static final java.lang.String KEY_SORT;
    public static final java.lang.String TAG_REINSTALL;
    public static final java.lang.String TAG_SET;
    public static final java.lang.String TAG_UPDATE;
    public static final java.lang.String TAG_UPDATE_SET;
    public static final boolean TAG_VALUE_REINSTALL_1_1;
    public static final boolean TAG_VALUE_SET_1_1;
    private android.content.Context context;
    private boolean mBatchMode;
    private android.content.SharedPreferences mSharedPreferences;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.content.SharedPreferences $r3;
        java.lang.String $r2;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r2, 0);

        specialinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void <init>(android.content.Context,android.content.SharedPreferences)>($r1, $r3);

        return;
    }

    public void <init>(android.content.Context, android.content.SharedPreferences)
    {
        android.content.Context $r1;
        android.content.SharedPreferences $r2;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.SharedPreferences;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.SharedPreferences mSharedPreferences> = $r2;

        r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.Context context> = $r1;

        r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean mBatchMode> = 0;

        return;
    }

    private java.lang.String getVersionName()
    {
        java.lang.Throwable r1;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r4;
        android.content.pm.PackageInfo $r5;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r2 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.Context context>;

     label1:
        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label2:
        $r2 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.Context context>;

     label3:
        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r4, 0);

     label4:
        $r4 = $r5.<android.content.pm.PackageInfo: java.lang.String versionName>;

        return $r4;

     label5:
        r1 := @caughtexception;

        $r6 = (android.content.pm.PackageManager$NameNotFoundException) r1;

        virtualinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return "0.0";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    public java.lang.String getAppLink()
    {
        java.lang.String $r1;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: java.lang.String getString(java.lang.String,java.lang.String)>("downloadLink", "");

        return $r1;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        android.content.SharedPreferences $r2;
        java.lang.String $r1;
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.SharedPreferences mSharedPreferences>;

        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>($r1, $z0);

        return $z0;
    }

    public int getInt(java.lang.String, int)
    {
        android.content.SharedPreferences $r2;
        int $i0;
        java.lang.String $r1;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.SharedPreferences mSharedPreferences>;

        $i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r1, $i0);

        return $i0;
    }

    public int getSchedulePeriod()
    {
        int $i0;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $i0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: int getInt(java.lang.String,int)>("schedulePeriod", 60);

        return $i0;
    }

    public int getSortMode()
    {
        int $i0;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $i0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: int getInt(java.lang.String,int)>("sort", 1);

        return $i0;
    }

    public java.lang.String getString(java.lang.String, java.lang.String)
    {
        android.content.SharedPreferences $r3;
        java.lang.String $r1, $r2;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.SharedPreferences mSharedPreferences>;

        $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("downloadLink", "");

        return $r1;
    }

    public java.lang.String getTotalClean(long)
    {
        android.content.SharedPreferences$Editor $r2;
        android.content.Context $r3;
        long $l0, $l1, $l3;
        com.yang.longrubblishclear.util.ConfigHelper r0;
        android.content.SharedPreferences $r1;
        byte $b2;
        int $i4;
        java.lang.String $r4;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $l0 := @parameter0: long;

        $r1 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.SharedPreferences mSharedPreferences>;

        $l1 = interfaceinvoke $r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("totalClean", 0L);

        $b2 = $l0 cmp 0L;

        $i4 = (int) $b2;

        if $i4 <= 0 goto label1;

        $r1 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.SharedPreferences mSharedPreferences>;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $l3 = $l1 + $l0;

        $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("totalClean", $l3);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: boolean commit()>();

     label1:
        $r3 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.Context context>;

        $l0 = $l1 + $l0;

        $r4 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>($r3, $l0);

        return $r4;
    }

    public boolean hasNewApp()
    {
        java.lang.String $r1;
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 = specialinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: java.lang.String getVersionName()>();

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean getBoolean(java.lang.String,boolean)>($r1, 0);

        return $z0;
    }

    public boolean isAutoBackUp()
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean getBoolean(java.lang.String,boolean)>("autoBackUp", 0);

        return $z0;
    }

    public boolean isBatchMode()
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        z0 = r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean mBatchMode>;

        return z0;
    }

    public boolean isCheckClear()
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean getBoolean(java.lang.String,boolean)>("checkClear", 1);

        return $z0;
    }

    public boolean isCheckMove()
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean getBoolean(java.lang.String,boolean)>("checkMove", 1);

        return $z0;
    }

    public boolean isFirstRun()
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean getBoolean(java.lang.String,boolean)>("firstRun", 1);

        return $z0;
    }

    public boolean isFirstUninstall()
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean getBoolean(java.lang.String,boolean)>("isFirstUninstall", 1);

        return $z0;
    }

    public boolean isScheduleOn()
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean getBoolean(java.lang.String,boolean)>("scheduleOn", 0);

        return $z0;
    }

    public boolean isSilentUninstall()
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean getBoolean(java.lang.String,boolean)>("silentUninstall", 1);

        return $z0;
    }

    public boolean openShakeDetector()
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean getBoolean(java.lang.String,boolean)>("openShakeDetector", 1);

        return $z0;
    }

    public void putBoolean(java.lang.String, boolean)
    {
        android.content.SharedPreferences$Editor $r3;
        android.content.SharedPreferences $r2;
        java.lang.String $r1;
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.SharedPreferences mSharedPreferences>;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r1, $z0);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public void putInt(java.lang.String, int)
    {
        android.content.SharedPreferences$Editor $r3;
        android.content.SharedPreferences $r2;
        int $i0;
        java.lang.String $r1;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.SharedPreferences mSharedPreferences>;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r1, $i0);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public void putString(java.lang.String, java.lang.String)
    {
        android.content.SharedPreferences$Editor $r4;
        android.content.SharedPreferences $r3;
        java.lang.String $r1, $r2;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.yang.longrubblishclear.util.ConfigHelper: android.content.SharedPreferences mSharedPreferences>;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("downloadLink", $r2);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public void setAdFree(boolean)
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        return;
    }

    public void setAppLink(java.lang.String)
    {
        java.lang.String $r1;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putString(java.lang.String,java.lang.String)>("downloadLink", $r1);

        return;
    }

    public void setAutoBackUp(boolean)
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putBoolean(java.lang.String,boolean)>("autoBackUp", $z0);

        return;
    }

    public void setBatchMode(boolean)
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        r0.<com.yang.longrubblishclear.util.ConfigHelper: boolean mBatchMode> = $z0;

        return;
    }

    public void setCheckClear(boolean)
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putBoolean(java.lang.String,boolean)>("checkClear", $z0);

        return;
    }

    public void setCheckMove(boolean)
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putBoolean(java.lang.String,boolean)>("checkMove", $z0);

        return;
    }

    public void setFirstRun(boolean)
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putBoolean(java.lang.String,boolean)>("firstRun", $z0);

        return;
    }

    public void setFirstUninstall(boolean)
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putBoolean(java.lang.String,boolean)>("isFirstUninstall", $z0);

        return;
    }

    public void setNewApp(boolean)
    {
        java.lang.String $r1;
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: java.lang.String getVersionName()>();

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putBoolean(java.lang.String,boolean)>($r1, $z0);

        return;
    }

    public void setScheduleOn(boolean)
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putBoolean(java.lang.String,boolean)>("scheduleOn", $z0);

        return;
    }

    public void setSchedulePeriod(int)
    {
        int $i0;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putInt(java.lang.String,int)>("schedulePeriod", $i0);

        return;
    }

    public void setShakeDetector(boolean)
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putBoolean(java.lang.String,boolean)>("openShakeDetector", $z0);

        return;
    }

    public void setSilentUninstall(boolean)
    {
        com.yang.longrubblishclear.util.ConfigHelper r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putBoolean(java.lang.String,boolean)>("silentUninstall", $z0);

        return;
    }

    public void setSortMode(int)
    {
        int $i0;
        com.yang.longrubblishclear.util.ConfigHelper r0;

        r0 := @this: com.yang.longrubblishclear.util.ConfigHelper;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.yang.longrubblishclear.util.ConfigHelper: void putInt(java.lang.String,int)>("sort", $i0);

        return;
    }

    public static void <clinit>()
    {
        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String TAG_UPDATE_SET> = "tagUpdateSet";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String TAG_UPDATE> = "tagUpdate";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String TAG_SET> = "tagSet1.1";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String TAG_REINSTALL> = "tagReinstall1.1";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String KEY_SORT> = "sort";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String KEY_SILENT_UNINSTALL> = "silentUninstall";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String KEY_SCHEDULE_PERIOD> = "schedulePeriod";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String KEY_SCHEDULE_ON> = "scheduleOn";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String KEY_OPEN_SHAKE_DETECTOR> = "openShakeDetector";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String KEY_DATA_DIR> = "dataDir";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String KEY_CHECK_MOVE> = "checkMove";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String KEY_CHECK_CLEAR> = "checkClear";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String KEY_AUTO_BACK_UP> = "autoBackUp";

        <com.yang.longrubblishclear.util.ConfigHelper: java.lang.String KEY_APP_LINK> = "downloadLink";

        return;
    }
}
