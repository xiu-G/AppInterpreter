public final class com.google.android.gms.a.d extends com.google.android.gms.a.b
{
    private final java.lang.Object a;

    private void <init>(java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.android.gms.a.d r0;

        r0 := @this: com.google.android.gms.a.d;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<com.google.android.gms.a.b: void <init>()>();

        r0.<com.google.android.gms.a.d: java.lang.Object a> = $r1;

        return;
    }

    public static com.google.android.gms.a.a a(java.lang.Object)
    {
        java.lang.Object $r0;
        com.google.android.gms.a.d $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = new com.google.android.gms.a.d;

        specialinvoke $r1.<com.google.android.gms.a.d: void <init>(java.lang.Object)>($r0);

        return $r1;
    }

    public static java.lang.Object a(com.google.android.gms.a.a)
    {
        java.lang.Throwable $r9, $r10;
        java.lang.reflect.Field $r5;
        java.lang.IllegalArgumentException $r8;
        android.os.IBinder $r2;
        java.lang.NullPointerException $r7;
        java.lang.reflect.Field[] $r4;
        int $i0;
        java.lang.Class $r3;
        java.lang.Object $r6;
        com.google.android.gms.a.a $r0;
        boolean $z0;
        com.google.android.gms.a.d $r1;

        $r0 := @parameter0: com.google.android.gms.a.a;

        $z0 = $r0 instanceof com.google.android.gms.a.d;

        if $z0 == 0 goto label1;

        $r1 = (com.google.android.gms.a.d) $r0;

        $r6 = $r1.<com.google.android.gms.a.d: java.lang.Object a>;

        return $r6;

     label1:
        $r2 = interfaceinvoke $r0.<com.google.android.gms.a.a: android.os.IBinder asBinder()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $i0 = lengthof $r4;

        if $i0 != 1 goto label8;

        $r5 = $r4[0];

        $z0 = virtualinvoke $r5.<java.lang.reflect.Field: boolean isAccessible()>();

        if $z0 != 0 goto label7;

        virtualinvoke $r5.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        $r6 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r2);

     label3:
        return $r6;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Binder object is null.", $r7);

        throw $r8;

     label5:
        $r9 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("remoteBinder is the wrong class.", $r9);

        throw $r8;

     label6:
        $r10 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Could not access the field in remoteBinder.", $r10);

        throw $r8;

     label7:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The concrete class implementing IObjectWrapper must have exactly one declared *private* field for the wrapped object. Preferably, this is an instance of the ObjectWrapper<T> class.");

        throw $r8;

     label8:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The concrete class implementing IObjectWrapper must have exactly *one* declared private field for the wrapped object.  Preferably, this is an instance of the ObjectWrapper<T> class.");

        throw $r8;

        catch java.lang.NullPointerException from label2 to label3 with label4;
        catch java.lang.IllegalArgumentException from label2 to label3 with label5;
        catch java.lang.IllegalAccessException from label2 to label3 with label6;
    }
}
