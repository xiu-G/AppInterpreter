class twitter4j.UserJSONImpl extends twitter4j.TwitterResponseImpl implements twitter4j.User, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.Date createdAt;
    private java.lang.String description;
    private int favouritesCount;
    private int followersCount;
    private int friendsCount;
    private int id;
    private boolean isGeoEnabled;
    private boolean isProtected;
    private boolean isVerified;
    private java.lang.String location;
    private java.lang.String name;
    private java.lang.String profileBackgroundColor;
    private java.lang.String profileBackgroundImageUrl;
    private boolean profileBackgroundTiled;
    private java.lang.String profileImageUrl;
    private java.lang.String profileLinkColor;
    private java.lang.String profileSidebarBorderColor;
    private java.lang.String profileSidebarFillColor;
    private java.lang.String profileTextColor;
    private java.lang.String screenName;
    private java.util.Date statusCreatedAt;
    private boolean statusFavorited;
    private long statusId;
    private java.lang.String statusInReplyToScreenName;
    private long statusInReplyToStatusId;
    private int statusInReplyToUserId;
    private java.lang.String statusSource;
    private java.lang.String statusText;
    private boolean statusTruncated;
    private int statusesCount;
    private java.lang.String timeZone;
    private java.lang.String url;
    private int utcOffset;

    void <init>(twitter4j.http.HttpResponse) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl r0;
        twitter4j.org.json.JSONObject $r2;
        twitter4j.http.HttpResponse $r1;

        r0 := @this: twitter4j.UserJSONImpl;

        $r1 := @parameter0: twitter4j.http.HttpResponse;

        specialinvoke r0.<twitter4j.TwitterResponseImpl: void <init>(twitter4j.http.HttpResponse)>($r1);

        r0.<twitter4j.UserJSONImpl: long statusId> = -1L;

        r0.<twitter4j.UserJSONImpl: java.lang.String statusText> = null;

        r0.<twitter4j.UserJSONImpl: java.lang.String statusSource> = null;

        r0.<twitter4j.UserJSONImpl: boolean statusTruncated> = 0;

        r0.<twitter4j.UserJSONImpl: long statusInReplyToStatusId> = -1L;

        r0.<twitter4j.UserJSONImpl: int statusInReplyToUserId> = -1;

        r0.<twitter4j.UserJSONImpl: boolean statusFavorited> = 0;

        r0.<twitter4j.UserJSONImpl: java.lang.String statusInReplyToScreenName> = null;

        $r2 = virtualinvoke $r1.<twitter4j.http.HttpResponse: twitter4j.org.json.JSONObject asJSONObject()>();

        specialinvoke r0.<twitter4j.UserJSONImpl: void init(twitter4j.org.json.JSONObject)>($r2);

        return;
    }

    void <init>(twitter4j.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl r0;
        twitter4j.org.json.JSONObject $r1;

        r0 := @this: twitter4j.UserJSONImpl;

        $r1 := @parameter0: twitter4j.org.json.JSONObject;

        specialinvoke r0.<twitter4j.TwitterResponseImpl: void <init>()>();

        r0.<twitter4j.UserJSONImpl: long statusId> = -1L;

        r0.<twitter4j.UserJSONImpl: java.lang.String statusText> = null;

        r0.<twitter4j.UserJSONImpl: java.lang.String statusSource> = null;

        r0.<twitter4j.UserJSONImpl: boolean statusTruncated> = 0;

        r0.<twitter4j.UserJSONImpl: long statusInReplyToStatusId> = -1L;

        r0.<twitter4j.UserJSONImpl: int statusInReplyToUserId> = -1;

        r0.<twitter4j.UserJSONImpl: boolean statusFavorited> = 0;

        r0.<twitter4j.UserJSONImpl: java.lang.String statusInReplyToScreenName> = null;

        specialinvoke r0.<twitter4j.UserJSONImpl: void init(twitter4j.org.json.JSONObject)>($r1);

        return;
    }

    static twitter4j.PagableResponseList createPagableUserList(twitter4j.http.HttpResponse) throws twitter4j.TwitterException
    {
        twitter4j.org.json.JSONArray $r5;
        twitter4j.UserJSONImpl $r6;
        twitter4j.org.json.JSONObject $r4;
        twitter4j.http.HttpResponse $r0;
        int $i0, i1;
        twitter4j.org.json.JSONException r1;
        twitter4j.TwitterException r2;
        twitter4j.PagableResponseList r3;

        $r0 := @parameter0: twitter4j.http.HttpResponse;

     label01:
        $r4 = virtualinvoke $r0.<twitter4j.http.HttpResponse: twitter4j.org.json.JSONObject asJSONObject()>();

        $r5 = virtualinvoke $r4.<twitter4j.org.json.JSONObject: twitter4j.org.json.JSONArray getJSONArray(java.lang.String)>("users");

        $i0 = virtualinvoke $r5.<twitter4j.org.json.JSONArray: int length()>();

     label02:
        r3 = new twitter4j.PagableResponseList;

     label03:
        specialinvoke r3.<twitter4j.PagableResponseList: void <init>(int,twitter4j.org.json.JSONObject,twitter4j.http.HttpResponse)>($i0, $r4, $r0);

     label04:
        i1 = 0;

     label05:
        if i1 >= $i0 goto label10;

        $r6 = new twitter4j.UserJSONImpl;

     label06:
        $r4 = virtualinvoke $r5.<twitter4j.org.json.JSONArray: twitter4j.org.json.JSONObject getJSONObject(int)>(i1);

        specialinvoke $r6.<twitter4j.UserJSONImpl: void <init>(twitter4j.org.json.JSONObject)>($r4);

        virtualinvoke r3.<twitter4j.PagableResponseList: boolean add(java.lang.Object)>($r6);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        r1 := @caughtexception;

        r2 = new twitter4j.TwitterException;

        specialinvoke r2.<twitter4j.TwitterException: void <init>(java.lang.Exception)>(r1);

        throw r2;

     label09:
        r2 := @caughtexception;

        throw r2;

     label10:
        return r3;

        catch twitter4j.org.json.JSONException from label01 to label02 with label08;
        catch twitter4j.org.json.JSONException from label03 to label04 with label08;
        catch twitter4j.org.json.JSONException from label06 to label07 with label08;
        catch twitter4j.TwitterException from label01 to label02 with label09;
        catch twitter4j.TwitterException from label03 to label04 with label09;
        catch twitter4j.TwitterException from label06 to label07 with label09;
    }

    static twitter4j.ResponseList createUserList(twitter4j.http.HttpResponse) throws twitter4j.TwitterException
    {
        twitter4j.org.json.JSONArray $r4;
        twitter4j.UserJSONImpl $r5;
        twitter4j.org.json.JSONObject $r6;
        twitter4j.http.HttpResponse $r0;
        int $i0, i1;
        twitter4j.org.json.JSONException r1;
        twitter4j.TwitterException r2;
        twitter4j.ResponseList r3;

        $r0 := @parameter0: twitter4j.http.HttpResponse;

     label01:
        $r4 = virtualinvoke $r0.<twitter4j.http.HttpResponse: twitter4j.org.json.JSONArray asJSONArray()>();

        $i0 = virtualinvoke $r4.<twitter4j.org.json.JSONArray: int length()>();

     label02:
        r3 = new twitter4j.ResponseList;

     label03:
        specialinvoke r3.<twitter4j.ResponseList: void <init>(int,twitter4j.http.HttpResponse)>($i0, $r0);

     label04:
        i1 = 0;

     label05:
        if i1 >= $i0 goto label10;

        $r5 = new twitter4j.UserJSONImpl;

     label06:
        $r6 = virtualinvoke $r4.<twitter4j.org.json.JSONArray: twitter4j.org.json.JSONObject getJSONObject(int)>(i1);

        specialinvoke $r5.<twitter4j.UserJSONImpl: void <init>(twitter4j.org.json.JSONObject)>($r6);

        virtualinvoke r3.<twitter4j.ResponseList: boolean add(java.lang.Object)>($r5);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        r1 := @caughtexception;

        r2 = new twitter4j.TwitterException;

        specialinvoke r2.<twitter4j.TwitterException: void <init>(java.lang.Exception)>(r1);

        throw r2;

     label09:
        r2 := @caughtexception;

        throw r2;

     label10:
        return r3;

        catch twitter4j.org.json.JSONException from label01 to label02 with label08;
        catch twitter4j.org.json.JSONException from label03 to label04 with label08;
        catch twitter4j.org.json.JSONException from label06 to label07 with label08;
        catch twitter4j.TwitterException from label01 to label02 with label09;
        catch twitter4j.TwitterException from label03 to label04 with label09;
        catch twitter4j.TwitterException from label06 to label07 with label09;
    }

    private void init(twitter4j.org.json.JSONObject) throws twitter4j.TwitterException
    {
        java.util.Date $r4;
        twitter4j.UserJSONImpl r0;
        long $l1;
        twitter4j.org.json.JSONObject $r1, $r5;
        java.lang.StringBuffer $r7;
        int $i0;
        twitter4j.org.json.JSONException r2;
        twitter4j.TwitterException $r6;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: twitter4j.UserJSONImpl;

        $r1 := @parameter0: twitter4j.org.json.JSONObject;

     label01:
        $i0 = staticinvoke <twitter4j.ParseUtil: int getInt(java.lang.String,twitter4j.org.json.JSONObject)>("id", $r1);

     label02:
        r0.<twitter4j.UserJSONImpl: int id> = $i0;

     label03:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("name", $r1);

     label04:
        r0.<twitter4j.UserJSONImpl: java.lang.String name> = $r3;

     label05:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("screen_name", $r1);

     label06:
        r0.<twitter4j.UserJSONImpl: java.lang.String screenName> = $r3;

     label07:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("location", $r1);

     label08:
        r0.<twitter4j.UserJSONImpl: java.lang.String location> = $r3;

     label09:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("description", $r1);

     label10:
        r0.<twitter4j.UserJSONImpl: java.lang.String description> = $r3;

     label11:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("profile_image_url", $r1);

     label12:
        r0.<twitter4j.UserJSONImpl: java.lang.String profileImageUrl> = $r3;

     label13:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("url", $r1);

     label14:
        r0.<twitter4j.UserJSONImpl: java.lang.String url> = $r3;

     label15:
        $z0 = staticinvoke <twitter4j.ParseUtil: boolean getBoolean(java.lang.String,twitter4j.org.json.JSONObject)>("protected", $r1);

     label16:
        r0.<twitter4j.UserJSONImpl: boolean isProtected> = $z0;

     label17:
        $z0 = staticinvoke <twitter4j.ParseUtil: boolean getBoolean(java.lang.String,twitter4j.org.json.JSONObject)>("geo_enabled", $r1);

     label18:
        r0.<twitter4j.UserJSONImpl: boolean isGeoEnabled> = $z0;

     label19:
        $z0 = staticinvoke <twitter4j.ParseUtil: boolean getBoolean(java.lang.String,twitter4j.org.json.JSONObject)>("verified", $r1);

     label20:
        r0.<twitter4j.UserJSONImpl: boolean isVerified> = $z0;

     label21:
        $i0 = staticinvoke <twitter4j.ParseUtil: int getInt(java.lang.String,twitter4j.org.json.JSONObject)>("followers_count", $r1);

     label22:
        r0.<twitter4j.UserJSONImpl: int followersCount> = $i0;

     label23:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("profile_background_color", $r1);

     label24:
        r0.<twitter4j.UserJSONImpl: java.lang.String profileBackgroundColor> = $r3;

     label25:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("profile_text_color", $r1);

     label26:
        r0.<twitter4j.UserJSONImpl: java.lang.String profileTextColor> = $r3;

     label27:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("profile_link_color", $r1);

     label28:
        r0.<twitter4j.UserJSONImpl: java.lang.String profileLinkColor> = $r3;

     label29:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("profile_sidebar_fill_color", $r1);

     label30:
        r0.<twitter4j.UserJSONImpl: java.lang.String profileSidebarFillColor> = $r3;

     label31:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("profile_sidebar_border_color", $r1);

     label32:
        r0.<twitter4j.UserJSONImpl: java.lang.String profileSidebarBorderColor> = $r3;

     label33:
        $i0 = staticinvoke <twitter4j.ParseUtil: int getInt(java.lang.String,twitter4j.org.json.JSONObject)>("friends_count", $r1);

     label34:
        r0.<twitter4j.UserJSONImpl: int friendsCount> = $i0;

     label35:
        $r3 = virtualinvoke $r1.<twitter4j.org.json.JSONObject: java.lang.String getString(java.lang.String)>("created_at");

        $r4 = staticinvoke <twitter4j.ParseUtil: java.util.Date getDate(java.lang.String,java.lang.String)>($r3, "EEE MMM dd HH:mm:ss z yyyy");

     label36:
        r0.<twitter4j.UserJSONImpl: java.util.Date createdAt> = $r4;

     label37:
        $i0 = virtualinvoke $r1.<twitter4j.org.json.JSONObject: int getInt(java.lang.String)>("favourites_count");

     label38:
        r0.<twitter4j.UserJSONImpl: int favouritesCount> = $i0;

     label39:
        $i0 = staticinvoke <twitter4j.ParseUtil: int getInt(java.lang.String,twitter4j.org.json.JSONObject)>("utc_offset", $r1);

     label40:
        r0.<twitter4j.UserJSONImpl: int utcOffset> = $i0;

     label41:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("time_zone", $r1);

     label42:
        r0.<twitter4j.UserJSONImpl: java.lang.String timeZone> = $r3;

     label43:
        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.org.json.JSONObject)>("profile_background_image_url", $r1);

     label44:
        r0.<twitter4j.UserJSONImpl: java.lang.String profileBackgroundImageUrl> = $r3;

     label45:
        $z0 = staticinvoke <twitter4j.ParseUtil: boolean getBoolean(java.lang.String,twitter4j.org.json.JSONObject)>("profile_background_tile", $r1);

     label46:
        r0.<twitter4j.UserJSONImpl: boolean profileBackgroundTiled> = $z0;

     label47:
        $i0 = staticinvoke <twitter4j.ParseUtil: int getInt(java.lang.String,twitter4j.org.json.JSONObject)>("statuses_count", $r1);

     label48:
        r0.<twitter4j.UserJSONImpl: int statusesCount> = $i0;

     label49:
        $z0 = virtualinvoke $r1.<twitter4j.org.json.JSONObject: boolean isNull(java.lang.String)>("status");

     label50:
        if $z0 != 0 goto label70;

     label51:
        $r5 = virtualinvoke $r1.<twitter4j.org.json.JSONObject: twitter4j.org.json.JSONObject getJSONObject(java.lang.String)>("status");

        $r3 = virtualinvoke $r5.<twitter4j.org.json.JSONObject: java.lang.String getString(java.lang.String)>("created_at");

        $r4 = staticinvoke <twitter4j.ParseUtil: java.util.Date getDate(java.lang.String,java.lang.String)>($r3, "EEE MMM dd HH:mm:ss z yyyy");

     label52:
        r0.<twitter4j.UserJSONImpl: java.util.Date statusCreatedAt> = $r4;

     label53:
        $l1 = virtualinvoke $r5.<twitter4j.org.json.JSONObject: long getLong(java.lang.String)>("id");

     label54:
        r0.<twitter4j.UserJSONImpl: long statusId> = $l1;

     label55:
        $r3 = virtualinvoke $r5.<twitter4j.org.json.JSONObject: java.lang.String getString(java.lang.String)>("text");

     label56:
        r0.<twitter4j.UserJSONImpl: java.lang.String statusText> = $r3;

     label57:
        $r3 = virtualinvoke $r5.<twitter4j.org.json.JSONObject: java.lang.String getString(java.lang.String)>("source");

     label58:
        r0.<twitter4j.UserJSONImpl: java.lang.String statusSource> = $r3;

     label59:
        $z0 = virtualinvoke $r5.<twitter4j.org.json.JSONObject: boolean getBoolean(java.lang.String)>("truncated");

     label60:
        r0.<twitter4j.UserJSONImpl: boolean statusTruncated> = $z0;

     label61:
        $l1 = staticinvoke <twitter4j.ParseUtil: long getLong(java.lang.String,twitter4j.org.json.JSONObject)>("in_reply_to_status_id", $r5);

     label62:
        r0.<twitter4j.UserJSONImpl: long statusInReplyToStatusId> = $l1;

     label63:
        $i0 = staticinvoke <twitter4j.ParseUtil: int getInt(java.lang.String,twitter4j.org.json.JSONObject)>("in_reply_to_user_id", $r5);

     label64:
        r0.<twitter4j.UserJSONImpl: int statusInReplyToUserId> = $i0;

     label65:
        $z0 = virtualinvoke $r5.<twitter4j.org.json.JSONObject: boolean getBoolean(java.lang.String)>("favorited");

     label66:
        r0.<twitter4j.UserJSONImpl: boolean statusFavorited> = $z0;

     label67:
        $r3 = virtualinvoke $r5.<twitter4j.org.json.JSONObject: java.lang.String getString(java.lang.String)>("in_reply_to_screen_name");

     label68:
        r0.<twitter4j.UserJSONImpl: java.lang.String statusInReplyToScreenName> = $r3;

        return;

     label69:
        r2 := @caughtexception;

        $r6 = new twitter4j.TwitterException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r2.<twitter4j.org.json.JSONException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r3 = virtualinvoke $r1.<twitter4j.org.json.JSONObject: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception)>($r3, r2);

        throw $r6;

     label70:
        return;

        catch twitter4j.org.json.JSONException from label01 to label02 with label69;
        catch twitter4j.org.json.JSONException from label03 to label04 with label69;
        catch twitter4j.org.json.JSONException from label05 to label06 with label69;
        catch twitter4j.org.json.JSONException from label07 to label08 with label69;
        catch twitter4j.org.json.JSONException from label09 to label10 with label69;
        catch twitter4j.org.json.JSONException from label11 to label12 with label69;
        catch twitter4j.org.json.JSONException from label13 to label14 with label69;
        catch twitter4j.org.json.JSONException from label15 to label16 with label69;
        catch twitter4j.org.json.JSONException from label17 to label18 with label69;
        catch twitter4j.org.json.JSONException from label19 to label20 with label69;
        catch twitter4j.org.json.JSONException from label21 to label22 with label69;
        catch twitter4j.org.json.JSONException from label23 to label24 with label69;
        catch twitter4j.org.json.JSONException from label25 to label26 with label69;
        catch twitter4j.org.json.JSONException from label27 to label28 with label69;
        catch twitter4j.org.json.JSONException from label29 to label30 with label69;
        catch twitter4j.org.json.JSONException from label31 to label32 with label69;
        catch twitter4j.org.json.JSONException from label33 to label34 with label69;
        catch twitter4j.org.json.JSONException from label35 to label36 with label69;
        catch twitter4j.org.json.JSONException from label37 to label38 with label69;
        catch twitter4j.org.json.JSONException from label39 to label40 with label69;
        catch twitter4j.org.json.JSONException from label41 to label42 with label69;
        catch twitter4j.org.json.JSONException from label43 to label44 with label69;
        catch twitter4j.org.json.JSONException from label45 to label46 with label69;
        catch twitter4j.org.json.JSONException from label47 to label48 with label69;
        catch twitter4j.org.json.JSONException from label49 to label50 with label69;
        catch twitter4j.org.json.JSONException from label51 to label52 with label69;
        catch twitter4j.org.json.JSONException from label53 to label54 with label69;
        catch twitter4j.org.json.JSONException from label55 to label56 with label69;
        catch twitter4j.org.json.JSONException from label57 to label58 with label69;
        catch twitter4j.org.json.JSONException from label59 to label60 with label69;
        catch twitter4j.org.json.JSONException from label61 to label62 with label69;
        catch twitter4j.org.json.JSONException from label63 to label64 with label69;
        catch twitter4j.org.json.JSONException from label65 to label66 with label69;
        catch twitter4j.org.json.JSONException from label67 to label68 with label69;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0, $i1;
        twitter4j.User r2;
        twitter4j.UserJSONImpl r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 == r1 goto label3;

        $z0 = r1 instanceof twitter4j.User;

        if $z0 == 0 goto label2;

        r2 = (twitter4j.User) r1;

        $i1 = interfaceinvoke r2.<twitter4j.User: int getId()>();

        $i0 = r0.<twitter4j.UserJSONImpl: int id>;

        if $i1 == $i0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public java.util.Date getCreatedAt()
    {
        twitter4j.UserJSONImpl r0;
        java.util.Date r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.util.Date createdAt>;

        return r1;
    }

    public java.lang.String getDescription()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String description>;

        return r1;
    }

    public int getFavouritesCount()
    {
        int i0;
        twitter4j.UserJSONImpl r0;

        r0 := @this: twitter4j.UserJSONImpl;

        i0 = r0.<twitter4j.UserJSONImpl: int favouritesCount>;

        return i0;
    }

    public int getFollowersCount()
    {
        int i0;
        twitter4j.UserJSONImpl r0;

        r0 := @this: twitter4j.UserJSONImpl;

        i0 = r0.<twitter4j.UserJSONImpl: int followersCount>;

        return i0;
    }

    public int getFriendsCount()
    {
        int i0;
        twitter4j.UserJSONImpl r0;

        r0 := @this: twitter4j.UserJSONImpl;

        i0 = r0.<twitter4j.UserJSONImpl: int friendsCount>;

        return i0;
    }

    public int getId()
    {
        int i0;
        twitter4j.UserJSONImpl r0;

        r0 := @this: twitter4j.UserJSONImpl;

        i0 = r0.<twitter4j.UserJSONImpl: int id>;

        return i0;
    }

    public java.lang.String getLocation()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String location>;

        return r1;
    }

    public java.lang.String getName()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String name>;

        return r1;
    }

    public java.lang.String getProfileBackgroundColor()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String profileBackgroundColor>;

        return r1;
    }

    public java.lang.String getProfileBackgroundImageUrl()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String profileBackgroundImageUrl>;

        return r1;
    }

    public java.net.URL getProfileImageURL()
    {
        java.lang.Throwable r1;
        java.net.URL $r3;
        twitter4j.UserJSONImpl r0;
        java.lang.String $r2;

        r0 := @this: twitter4j.UserJSONImpl;

        $r3 = new java.net.URL;

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String profileImageUrl>;

     label1:
        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r2);

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public java.lang.String getProfileLinkColor()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String profileLinkColor>;

        return r1;
    }

    public java.lang.String getProfileSidebarBorderColor()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String profileSidebarBorderColor>;

        return r1;
    }

    public java.lang.String getProfileSidebarFillColor()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String profileSidebarFillColor>;

        return r1;
    }

    public java.lang.String getProfileTextColor()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String profileTextColor>;

        return r1;
    }

    public java.lang.String getScreenName()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String screenName>;

        return r1;
    }

    public java.util.Date getStatusCreatedAt()
    {
        twitter4j.UserJSONImpl r0;
        java.util.Date r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.util.Date statusCreatedAt>;

        return r1;
    }

    public long getStatusId()
    {
        twitter4j.UserJSONImpl r0;
        long l0;

        r0 := @this: twitter4j.UserJSONImpl;

        l0 = r0.<twitter4j.UserJSONImpl: long statusId>;

        return l0;
    }

    public java.lang.String getStatusInReplyToScreenName()
    {
        int $i0, $i1;
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        $i0 = r0.<twitter4j.UserJSONImpl: int statusInReplyToUserId>;

        $i1 = -1;

        if $i1 == $i0 goto label1;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String statusInReplyToScreenName>;

        return r1;

     label1:
        return null;
    }

    public long getStatusInReplyToStatusId()
    {
        twitter4j.UserJSONImpl r0;
        long l0;

        r0 := @this: twitter4j.UserJSONImpl;

        l0 = r0.<twitter4j.UserJSONImpl: long statusInReplyToStatusId>;

        return l0;
    }

    public int getStatusInReplyToUserId()
    {
        int i0;
        twitter4j.UserJSONImpl r0;

        r0 := @this: twitter4j.UserJSONImpl;

        i0 = r0.<twitter4j.UserJSONImpl: int statusInReplyToUserId>;

        return i0;
    }

    public java.lang.String getStatusSource()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String statusSource>;

        return r1;
    }

    public java.lang.String getStatusText()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String statusText>;

        return r1;
    }

    public int getStatusesCount()
    {
        int i0;
        twitter4j.UserJSONImpl r0;

        r0 := @this: twitter4j.UserJSONImpl;

        i0 = r0.<twitter4j.UserJSONImpl: int statusesCount>;

        return i0;
    }

    public java.lang.String getTimeZone()
    {
        twitter4j.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.UserJSONImpl;

        r1 = r0.<twitter4j.UserJSONImpl: java.lang.String timeZone>;

        return r1;
    }

    public java.net.URL getURL()
    {
        java.lang.Throwable r1;
        java.net.URL $r3;
        twitter4j.UserJSONImpl r0;
        java.lang.String $r2;

        r0 := @this: twitter4j.UserJSONImpl;

        $r3 = new java.net.URL;

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String url>;

     label1:
        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r2);

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public int getUtcOffset()
    {
        int i0;
        twitter4j.UserJSONImpl r0;

        r0 := @this: twitter4j.UserJSONImpl;

        i0 = r0.<twitter4j.UserJSONImpl: int utcOffset>;

        return i0;
    }

    public int hashCode()
    {
        int i0;
        twitter4j.UserJSONImpl r0;

        r0 := @this: twitter4j.UserJSONImpl;

        i0 = r0.<twitter4j.UserJSONImpl: int id>;

        return i0;
    }

    public boolean isGeoEnabled()
    {
        twitter4j.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.UserJSONImpl;

        z0 = r0.<twitter4j.UserJSONImpl: boolean isGeoEnabled>;

        return z0;
    }

    public boolean isProfileBackgroundTiled()
    {
        twitter4j.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.UserJSONImpl;

        z0 = r0.<twitter4j.UserJSONImpl: boolean profileBackgroundTiled>;

        return z0;
    }

    public boolean isProtected()
    {
        twitter4j.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.UserJSONImpl;

        z0 = r0.<twitter4j.UserJSONImpl: boolean isProtected>;

        return z0;
    }

    public boolean isStatusFavorited()
    {
        twitter4j.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.UserJSONImpl;

        z0 = r0.<twitter4j.UserJSONImpl: boolean statusFavorited>;

        return z0;
    }

    public boolean isStatusTruncated()
    {
        twitter4j.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.UserJSONImpl;

        z0 = r0.<twitter4j.UserJSONImpl: boolean statusTruncated>;

        return z0;
    }

    public boolean isVerified()
    {
        twitter4j.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.UserJSONImpl;

        z0 = r0.<twitter4j.UserJSONImpl: boolean isVerified>;

        return z0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r1;
        java.util.Date $r3;
        int $i0;
        twitter4j.UserJSONImpl r0;
        long $l1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: twitter4j.UserJSONImpl;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("UserJSONImpl{, id=");

        $i0 = r0.<twitter4j.UserJSONImpl: int id>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", name=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String name>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", screenName=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String screenName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", location=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String location>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", description=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String description>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", profileImageUrl=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String profileImageUrl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", url=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String url>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", isProtected=");

        $z0 = r0.<twitter4j.UserJSONImpl: boolean isProtected>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", followersCount=");

        $i0 = r0.<twitter4j.UserJSONImpl: int followersCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", statusCreatedAt=");

        $r3 = r0.<twitter4j.UserJSONImpl: java.util.Date statusCreatedAt>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", statusId=");

        $l1 = r0.<twitter4j.UserJSONImpl: long statusId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", statusText=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String statusText>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", statusSource=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String statusSource>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", statusTruncated=");

        $z0 = r0.<twitter4j.UserJSONImpl: boolean statusTruncated>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", statusInReplyToStatusId=");

        $l1 = r0.<twitter4j.UserJSONImpl: long statusInReplyToStatusId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", statusInReplyToUserId=");

        $i0 = r0.<twitter4j.UserJSONImpl: int statusInReplyToUserId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", statusFavorited=");

        $z0 = r0.<twitter4j.UserJSONImpl: boolean statusFavorited>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", statusInReplyToScreenName=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String statusInReplyToScreenName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", profileBackgroundColor=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String profileBackgroundColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", profileTextColor=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String profileTextColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", profileLinkColor=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String profileLinkColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", profileSidebarFillColor=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String profileSidebarFillColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", profileSidebarBorderColor=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String profileSidebarBorderColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", friendsCount=");

        $i0 = r0.<twitter4j.UserJSONImpl: int friendsCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", createdAt=");

        $r3 = r0.<twitter4j.UserJSONImpl: java.util.Date createdAt>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", favouritesCount=");

        $i0 = r0.<twitter4j.UserJSONImpl: int favouritesCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", utcOffset=");

        $i0 = r0.<twitter4j.UserJSONImpl: int utcOffset>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", timeZone=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String timeZone>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", profileBackgroundImageUrl=\'");

        $r2 = r0.<twitter4j.UserJSONImpl: java.lang.String profileBackgroundImageUrl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", profileBackgroundTile=\'");

        $z0 = r0.<twitter4j.UserJSONImpl: boolean profileBackgroundTiled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", statusesCount=");

        $i0 = r0.<twitter4j.UserJSONImpl: int statusesCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", geoEnabled=");

        $z0 = r0.<twitter4j.UserJSONImpl: boolean isGeoEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", verified=");

        $z0 = r0.<twitter4j.UserJSONImpl: boolean isVerified>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <twitter4j.UserJSONImpl: long serialVersionUID> = -6345893237975349030L;

        return;
    }
}
