public class net.sourceforge.blowfishj.BlowfishECB extends java.lang.Object
{
    public static final int BLOCKSIZE;
    public static final int MAXKEYLENGTH;
    static final int PBOX_ENTRIES;
    static final int SBOX_ENTRIES;
    static final int[] pbox_init;
    static final int[] sbox_init_1;
    static final int[] sbox_init_2;
    static final int[] sbox_init_3;
    static final int[] sbox_init_4;
    byte[] m_blockBuf;
    int m_nWeakKey;
    final int[] m_pbox;
    final int[] m_sbox1;
    final int[] m_sbox2;
    final int[] m_sbox3;
    final int[] m_sbox4;

    static void <clinit>()
    {
        int[] $r0;

        <net.sourceforge.blowfishj.BlowfishECB: int SBOX_ENTRIES> = 256;

        <net.sourceforge.blowfishj.BlowfishECB: int PBOX_ENTRIES> = 18;

        <net.sourceforge.blowfishj.BlowfishECB: int MAXKEYLENGTH> = 56;

        <net.sourceforge.blowfishj.BlowfishECB: int BLOCKSIZE> = 8;

        $r0 = newarray (int)[18];

        $r0[0] = 608135816;

        $r0[1] = -2052912941;

        $r0[2] = 320440878;

        $r0[3] = 57701188;

        $r0[4] = -1542899678;

        $r0[5] = 698298832;

        $r0[6] = 137296536;

        $r0[7] = -330404727;

        $r0[8] = 1160258022;

        $r0[9] = 953160567;

        $r0[10] = -1101764913;

        $r0[11] = 887688300;

        $r0[12] = -1062458953;

        $r0[13] = -914599715;

        $r0[14] = 1065670069;

        $r0[15] = -1253635817;

        $r0[16] = -1843997223;

        $r0[17] = -1988494565;

        <net.sourceforge.blowfishj.BlowfishECB: int[] pbox_init> = $r0;

        $r0 = newarray (int)[256];

        $r0[0] = -785314906;

        $r0[1] = -1730169428;

        $r0[2] = 805139163;

        $r0[3] = -803545161;

        $r0[4] = -1193168915;

        $r0[5] = 1780907670;

        $r0[6] = -1166241723;

        $r0[7] = -248741991;

        $r0[8] = 614570311;

        $r0[9] = -1282315017;

        $r0[10] = 134345442;

        $r0[11] = -2054226922;

        $r0[12] = 1667834072;

        $r0[13] = 1901547113;

        $r0[14] = -1537671517;

        $r0[15] = -191677058;

        $r0[16] = 227898511;

        $r0[17] = 1921955416;

        $r0[18] = 1904987480;

        $r0[19] = -2112533778;

        $r0[20] = 2069144605;

        $r0[21] = -1034266187;

        $r0[22] = -1674521287;

        $r0[23] = 720527379;

        $r0[24] = -976113629;

        $r0[25] = 677414384;

        $r0[26] = -901678824;

        $r0[27] = -1193592593;

        $r0[28] = -1904616272;

        $r0[29] = 1614419982;

        $r0[30] = 1822297739;

        $r0[31] = -1340175810;

        $r0[32] = -686458943;

        $r0[33] = -1120842969;

        $r0[34] = 2024746970;

        $r0[35] = 1432378464;

        $r0[36] = -430627341;

        $r0[37] = -1437226092;

        $r0[38] = 1464375394;

        $r0[39] = 1676153920;

        $r0[40] = 1439316330;

        $r0[41] = 715854006;

        $r0[42] = -1261675468;

        $r0[43] = 289532110;

        $r0[44] = -1588296017;

        $r0[45] = 2087905683;

        $r0[46] = -1276242927;

        $r0[47] = 1668267050;

        $r0[48] = 732546397;

        $r0[49] = 1947742710;

        $r0[50] = -832815594;

        $r0[51] = -1685613794;

        $r0[52] = -1344882125;

        $r0[53] = 1814351708;

        $r0[54] = 2050118529;

        $r0[55] = 680887927;

        $r0[56] = 999245976;

        $r0[57] = 1800124847;

        $r0[58] = -994056165;

        $r0[59] = 1713906067;

        $r0[60] = 1641548236;

        $r0[61] = -81679983;

        $r0[62] = 1216130144;

        $r0[63] = 1575780402;

        $r0[64] = -276538019;

        $r0[65] = -377129551;

        $r0[66] = -601480446;

        $r0[67] = -345695352;

        $r0[68] = 596196993;

        $r0[69] = -745100091;

        $r0[70] = 258830323;

        $r0[71] = -2081144263;

        $r0[72] = 772490370;

        $r0[73] = -1534844924;

        $r0[74] = 1774776394;

        $r0[75] = -1642095778;

        $r0[76] = 566650946;

        $r0[77] = -152474470;

        $r0[78] = 1728879713;

        $r0[79] = -1412200208;

        $r0[80] = 1783734482;

        $r0[81] = -665571480;

        $r0[82] = -1777359064;

        $r0[83] = -1420741725;

        $r0[84] = 1861159788;

        $r0[85] = 326777828;

        $r0[86] = -1170476976;

        $r0[87] = 2130389656;

        $r0[88] = -1578015459;

        $r0[89] = 967770486;

        $r0[90] = 1724537150;

        $r0[91] = -2109534584;

        $r0[92] = -1930525159;

        $r0[93] = 1164943284;

        $r0[94] = 2105845187;

        $r0[95] = 998989502;

        $r0[96] = -529566248;

        $r0[97] = -2050940813;

        $r0[98] = 1075463327;

        $r0[99] = 1455516326;

        $r0[100] = 1322494562;

        $r0[101] = 910128902;

        $r0[102] = 469688178;

        $r0[103] = 1117454909;

        $r0[104] = 936433444;

        $r0[105] = -804646328;

        $r0[106] = -619713837;

        $r0[107] = 1240580251;

        $r0[108] = 122909385;

        $r0[109] = -2137449605;

        $r0[110] = 634681816;

        $r0[111] = -152510729;

        $r0[112] = -469872614;

        $r0[113] = -1233564613;

        $r0[114] = -1754472259;

        $r0[115] = 79693498;

        $r0[116] = -1045868618;

        $r0[117] = 1084186820;

        $r0[118] = 1583128258;

        $r0[119] = 426386531;

        $r0[120] = 1761308591;

        $r0[121] = 1047286709;

        $r0[122] = 322548459;

        $r0[123] = 995290223;

        $r0[124] = 1845252383;

        $r0[125] = -1691314900;

        $r0[126] = -863943356;

        $r0[127] = -1352745719;

        $r0[128] = -1092366332;

        $r0[129] = -567063811;

        $r0[130] = 1712269319;

        $r0[131] = 422464435;

        $r0[132] = -1060394921;

        $r0[133] = 1170764815;

        $r0[134] = -771006663;

        $r0[135] = -1177289765;

        $r0[136] = 1434042557;

        $r0[137] = 442511882;

        $r0[138] = -694091578;

        $r0[139] = 1076654713;

        $r0[140] = 1738483198;

        $r0[141] = -81812532;

        $r0[142] = -1901729288;

        $r0[143] = -617471240;

        $r0[144] = 1014306527;

        $r0[145] = -43947243;

        $r0[146] = 793779912;

        $r0[147] = -1392160085;

        $r0[148] = 842905082;

        $r0[149] = -48003232;

        $r0[150] = 1395751752;

        $r0[151] = 1040244610;

        $r0[152] = -1638115397;

        $r0[153] = -898659168;

        $r0[154] = 445077038;

        $r0[155] = -552113701;

        $r0[156] = -717051658;

        $r0[157] = 679411651;

        $r0[158] = -1402522938;

        $r0[159] = -1940957837;

        $r0[160] = 1767581616;

        $r0[161] = -1144366904;

        $r0[162] = -503340195;

        $r0[163] = -1192226400;

        $r0[164] = 284835224;

        $r0[165] = -48135240;

        $r0[166] = 1258075500;

        $r0[167] = 768725851;

        $r0[168] = -1705778055;

        $r0[169] = -1225243291;

        $r0[170] = -762426948;

        $r0[171] = 1274779536;

        $r0[172] = -505548070;

        $r0[173] = -1530167757;

        $r0[174] = 1660621633;

        $r0[175] = -823867672;

        $r0[176] = -283063590;

        $r0[177] = 913787905;

        $r0[178] = -797008130;

        $r0[179] = 737222580;

        $r0[180] = -1780753843;

        $r0[181] = -1366257256;

        $r0[182] = -357724559;

        $r0[183] = 1804850592;

        $r0[184] = -795946544;

        $r0[185] = -1345903136;

        $r0[186] = -1908647121;

        $r0[187] = -1904896841;

        $r0[188] = -1879645445;

        $r0[189] = -233690268;

        $r0[190] = -2004305902;

        $r0[191] = -1878134756;

        $r0[192] = 1336762016;

        $r0[193] = 1754252060;

        $r0[194] = -774901359;

        $r0[195] = -1280786003;

        $r0[196] = 791618072;

        $r0[197] = -1106372745;

        $r0[198] = -361419266;

        $r0[199] = -1962795103;

        $r0[200] = -442446833;

        $r0[201] = -1250986776;

        $r0[202] = 413987798;

        $r0[203] = -829824359;

        $r0[204] = -1264037920;

        $r0[205] = -49028937;

        $r0[206] = 2093235073;

        $r0[207] = -760370983;

        $r0[208] = 375366246;

        $r0[209] = -2137688315;

        $r0[210] = -1815317740;

        $r0[211] = 555357303;

        $r0[212] = -424861595;

        $r0[213] = 2008414854;

        $r0[214] = -950779147;

        $r0[215] = -73583153;

        $r0[216] = -338841844;

        $r0[217] = 2067696032;

        $r0[218] = -700376109;

        $r0[219] = -1373733303;

        $r0[220] = 2428461;

        $r0[221] = 544322398;

        $r0[222] = 577241275;

        $r0[223] = 1471733935;

        $r0[224] = 610547355;

        $r0[225] = -267798242;

        $r0[226] = 1432588573;

        $r0[227] = 1507829418;

        $r0[228] = 2025931657;

        $r0[229] = -648391809;

        $r0[230] = 545086370;

        $r0[231] = 48609733;

        $r0[232] = -2094660746;

        $r0[233] = 1653985193;

        $r0[234] = 298326376;

        $r0[235] = 1316178497;

        $r0[236] = -1287180854;

        $r0[237] = 2064951626;

        $r0[238] = 458293330;

        $r0[239] = -1705826027;

        $r0[240] = -703637697;

        $r0[241] = -1130641692;

        $r0[242] = 727753846;

        $r0[243] = -2115603456;

        $r0[244] = 146436021;

        $r0[245] = 1461446943;

        $r0[246] = -224990101;

        $r0[247] = 705550613;

        $r0[248] = -1235000031;

        $r0[249] = -407242314;

        $r0[250] = -13368018;

        $r0[251] = -981117340;

        $r0[252] = 1404054877;

        $r0[253] = -1449160799;

        $r0[254] = 146425753;

        $r0[255] = 1854211946;

        <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_1> = $r0;

        $r0 = newarray (int)[256];

        $r0[0] = 1266315497;

        $r0[1] = -1246549692;

        $r0[2] = -613086930;

        $r0[3] = -1004984797;

        $r0[4] = -1385257296;

        $r0[5] = 1235738493;

        $r0[6] = -1662099272;

        $r0[7] = -1880247706;

        $r0[8] = -324367247;

        $r0[9] = 1771706367;

        $r0[10] = 1449415276;

        $r0[11] = -1028546847;

        $r0[12] = 422970021;

        $r0[13] = 1963543593;

        $r0[14] = -1604775104;

        $r0[15] = -468174274;

        $r0[16] = 1062508698;

        $r0[17] = 1531092325;

        $r0[18] = 1804592342;

        $r0[19] = -1711849514;

        $r0[20] = -1580033017;

        $r0[21] = -269995787;

        $r0[22] = 1294809318;

        $r0[23] = -265986623;

        $r0[24] = 1289560198;

        $r0[25] = -2072974554;

        $r0[26] = 1669523910;

        $r0[27] = 35572830;

        $r0[28] = 157838143;

        $r0[29] = 1052438473;

        $r0[30] = 1016535060;

        $r0[31] = 1802137761;

        $r0[32] = 1753167236;

        $r0[33] = 1386275462;

        $r0[34] = -1214491899;

        $r0[35] = -1437595849;

        $r0[36] = 1040679964;

        $r0[37] = 2145300060;

        $r0[38] = -1904392980;

        $r0[39] = 1461121720;

        $r0[40] = -1338320329;

        $r0[41] = -263189491;

        $r0[42] = -266592508;

        $r0[43] = 33600511;

        $r0[44] = -1374882534;

        $r0[45] = 1018524850;

        $r0[46] = 629373528;

        $r0[47] = -603381315;

        $r0[48] = -779021319;

        $r0[49] = 2091462646;

        $r0[50] = -1808644237;

        $r0[51] = 586499841;

        $r0[52] = 988145025;

        $r0[53] = 935516892;

        $r0[54] = -927631820;

        $r0[55] = -1695294041;

        $r0[56] = -1455136442;

        $r0[57] = 265290510;

        $r0[58] = -322386114;

        $r0[59] = -1535828415;

        $r0[60] = -499593831;

        $r0[61] = 1005194799;

        $r0[62] = 847297441;

        $r0[63] = 406762289;

        $r0[64] = 1314163512;

        $r0[65] = 1332590856;

        $r0[66] = 1866599683;

        $r0[67] = -167115585;

        $r0[68] = 750260880;

        $r0[69] = 613907577;

        $r0[70] = 1450815602;

        $r0[71] = -1129346641;

        $r0[72] = -560302305;

        $r0[73] = -644675568;

        $r0[74] = -1282691566;

        $r0[75] = -590397650;

        $r0[76] = 1427272223;

        $r0[77] = 778793252;

        $r0[78] = 1343938022;

        $r0[79] = -1618686585;

        $r0[80] = 2052605720;

        $r0[81] = 1946737175;

        $r0[82] = -1130390852;

        $r0[83] = -380928628;

        $r0[84] = -327488454;

        $r0[85] = -612033030;

        $r0[86] = 1661551462;

        $r0[87] = -1000029230;

        $r0[88] = -283371449;

        $r0[89] = 840292616;

        $r0[90] = -582796489;

        $r0[91] = 616741398;

        $r0[92] = 312560963;

        $r0[93] = 711312465;

        $r0[94] = 1351876610;

        $r0[95] = 322626781;

        $r0[96] = 1910503582;

        $r0[97] = 271666773;

        $r0[98] = -2119403562;

        $r0[99] = 1594956187;

        $r0[100] = 70604529;

        $r0[101] = -677132437;

        $r0[102] = 1007753275;

        $r0[103] = 1495573769;

        $r0[104] = -225450259;

        $r0[105] = -1745748998;

        $r0[106] = -1631928532;

        $r0[107] = 504708206;

        $r0[108] = -2031925904;

        $r0[109] = -353800271;

        $r0[110] = -2045878774;

        $r0[111] = 1514023603;

        $r0[112] = 1998579484;

        $r0[113] = 1312622330;

        $r0[114] = 694541497;

        $r0[115] = -1712906993;

        $r0[116] = -2143385130;

        $r0[117] = 1382467621;

        $r0[118] = 776784248;

        $r0[119] = -1676627094;

        $r0[120] = -971698502;

        $r0[121] = -1797068168;

        $r0[122] = -1510196141;

        $r0[123] = 503983604;

        $r0[124] = -218673497;

        $r0[125] = 907881277;

        $r0[126] = 423175695;

        $r0[127] = 432175456;

        $r0[128] = 1378068232;

        $r0[129] = -149744970;

        $r0[130] = -340918674;

        $r0[131] = -356311194;

        $r0[132] = -474200683;

        $r0[133] = -1501837181;

        $r0[134] = -1317062703;

        $r0[135] = 26017576;

        $r0[136] = -1020076561;

        $r0[137] = -1100195163;

        $r0[138] = 1700274565;

        $r0[139] = 1756076034;

        $r0[140] = -288447217;

        $r0[141] = -617638597;

        $r0[142] = 720338349;

        $r0[143] = 1533947780;

        $r0[144] = 354530856;

        $r0[145] = 688349552;

        $r0[146] = -321042571;

        $r0[147] = 1637815568;

        $r0[148] = 332179504;

        $r0[149] = -345916010;

        $r0[150] = 53804574;

        $r0[151] = -1442618417;

        $r0[152] = -1250730864;

        $r0[153] = 1282449977;

        $r0[154] = -711025141;

        $r0[155] = -877994476;

        $r0[156] = -288586052;

        $r0[157] = 1617046695;

        $r0[158] = -1666491221;

        $r0[159] = -1292663698;

        $r0[160] = 1686838959;

        $r0[161] = 431878346;

        $r0[162] = -1608291911;

        $r0[163] = 1700445008;

        $r0[164] = 1080580658;

        $r0[165] = 1009431731;

        $r0[166] = 832498133;

        $r0[167] = -1071531785;

        $r0[168] = -1688990951;

        $r0[169] = -2023776103;

        $r0[170] = -1778935426;

        $r0[171] = 1648197032;

        $r0[172] = -130578278;

        $r0[173] = -1746719369;

        $r0[174] = 300782431;

        $r0[175] = 375919233;

        $r0[176] = 238389289;

        $r0[177] = -941219882;

        $r0[178] = -1763778655;

        $r0[179] = 2019080857;

        $r0[180] = 1475708069;

        $r0[181] = 455242339;

        $r0[182] = -1685863425;

        $r0[183] = 448939670;

        $r0[184] = -843904277;

        $r0[185] = 1395535956;

        $r0[186] = -1881585436;

        $r0[187] = 1841049896;

        $r0[188] = 1491858159;

        $r0[189] = 885456874;

        $r0[190] = -30872223;

        $r0[191] = -293847949;

        $r0[192] = 1565136089;

        $r0[193] = -396052509;

        $r0[194] = 1108368660;

        $r0[195] = 540939232;

        $r0[196] = 1173283510;

        $r0[197] = -1549095958;

        $r0[198] = -613658859;

        $r0[199] = -87339056;

        $r0[200] = -951913406;

        $r0[201] = -278217803;

        $r0[202] = 1699691293;

        $r0[203] = 1103962373;

        $r0[204] = -669091426;

        $r0[205] = -2038084153;

        $r0[206] = -464828566;

        $r0[207] = 1031889488;

        $r0[208] = -815619598;

        $r0[209] = 1535977030;

        $r0[210] = -58162272;

        $r0[211] = -1043876189;

        $r0[212] = 2132092099;

        $r0[213] = 1774941330;

        $r0[214] = 1199868427;

        $r0[215] = 1452454533;

        $r0[216] = 157007616;

        $r0[217] = -1390851939;

        $r0[218] = 342012276;

        $r0[219] = 595725824;

        $r0[220] = 1480756522;

        $r0[221] = 206960106;

        $r0[222] = 497939518;

        $r0[223] = 591360097;

        $r0[224] = 863170706;

        $r0[225] = -1919713727;

        $r0[226] = -698356495;

        $r0[227] = 1814182875;

        $r0[228] = 2094937945;

        $r0[229] = -873565088;

        $r0[230] = 1082520231;

        $r0[231] = -831049106;

        $r0[232] = -1509457788;

        $r0[233] = 435703966;

        $r0[234] = -386934699;

        $r0[235] = 1641649973;

        $r0[236] = -1452693590;

        $r0[237] = -989067582;

        $r0[238] = 1510255612;

        $r0[239] = -2146710820;

        $r0[240] = -1639679442;

        $r0[241] = -1018874748;

        $r0[242] = -36346107;

        $r0[243] = 236887753;

        $r0[244] = -613164077;

        $r0[245] = 274041037;

        $r0[246] = 1734335097;

        $r0[247] = -479771840;

        $r0[248] = -976997275;

        $r0[249] = 1899903192;

        $r0[250] = 1026095262;

        $r0[251] = -244449504;

        $r0[252] = 356393447;

        $r0[253] = -1884275382;

        $r0[254] = -421290197;

        $r0[255] = -612127241;

        <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_2> = $r0;

        $r0 = newarray (int)[256];

        $r0[0] = -381855128;

        $r0[1] = -1803468553;

        $r0[2] = -162781668;

        $r0[3] = -1805047500;

        $r0[4] = 1091903735;

        $r0[5] = 1979897079;

        $r0[6] = -1124832466;

        $r0[7] = -727580568;

        $r0[8] = -737663887;

        $r0[9] = 857797738;

        $r0[10] = 1136121015;

        $r0[11] = 1342202287;

        $r0[12] = 507115054;

        $r0[13] = -1759230650;

        $r0[14] = 337727348;

        $r0[15] = -1081374656;

        $r0[16] = 1301675037;

        $r0[17] = -1766485585;

        $r0[18] = 1895095763;

        $r0[19] = 1721773893;

        $r0[20] = -1078195732;

        $r0[21] = 62756741;

        $r0[22] = 2142006736;

        $r0[23] = 835421444;

        $r0[24] = -1762973773;

        $r0[25] = 1442658625;

        $r0[26] = -635090970;

        $r0[27] = -1412822374;

        $r0[28] = 676362277;

        $r0[29] = 1392781812;

        $r0[30] = 170690266;

        $r0[31] = -373920261;

        $r0[32] = 1759253602;

        $r0[33] = -683120384;

        $r0[34] = 1745797284;

        $r0[35] = 664899054;

        $r0[36] = 1329594018;

        $r0[37] = -393761396;

        $r0[38] = -1249058810;

        $r0[39] = 2062866102;

        $r0[40] = -1429332356;

        $r0[41] = -751345684;

        $r0[42] = -830954599;

        $r0[43] = 1080764994;

        $r0[44] = 553557557;

        $r0[45] = -638351943;

        $r0[46] = -298199125;

        $r0[47] = 991055499;

        $r0[48] = 499776247;

        $r0[49] = 1265440854;

        $r0[50] = 648242737;

        $r0[51] = -354183246;

        $r0[52] = 980351604;

        $r0[53] = -581221582;

        $r0[54] = 1749149687;

        $r0[55] = -898096901;

        $r0[56] = -83167922;

        $r0[57] = -654396521;

        $r0[58] = 1161844396;

        $r0[59] = -1169648345;

        $r0[60] = 1431517754;

        $r0[61] = 545492359;

        $r0[62] = -26498633;

        $r0[63] = -795437749;

        $r0[64] = 1437099964;

        $r0[65] = -1592419752;

        $r0[66] = -861329053;

        $r0[67] = -1713251533;

        $r0[68] = -1507177898;

        $r0[69] = 1060185593;

        $r0[70] = 1593081372;

        $r0[71] = -1876348548;

        $r0[72] = -34019326;

        $r0[73] = 69676912;

        $r0[74] = -2135222948;

        $r0[75] = 86519011;

        $r0[76] = -1782508216;

        $r0[77] = -456757982;

        $r0[78] = 1220612927;

        $r0[79] = -955283748;

        $r0[80] = 133810670;

        $r0[81] = 1090789135;

        $r0[82] = 1078426020;

        $r0[83] = 1569222167;

        $r0[84] = 845107691;

        $r0[85] = -711212847;

        $r0[86] = -222510705;

        $r0[87] = 1091646820;

        $r0[88] = 628848692;

        $r0[89] = 1613405280;

        $r0[90] = -537335645;

        $r0[91] = 526609435;

        $r0[92] = 236106946;

        $r0[93] = 48312990;

        $r0[94] = -1352249391;

        $r0[95] = -892239595;

        $r0[96] = 1797494240;

        $r0[97] = 859738849;

        $r0[98] = 992217954;

        $r0[99] = -289490654;

        $r0[100] = -2051890674;

        $r0[101] = -424014439;

        $r0[102] = -562951028;

        $r0[103] = 765654824;

        $r0[104] = -804095931;

        $r0[105] = -1783130883;

        $r0[106] = 1685915746;

        $r0[107] = -405998096;

        $r0[108] = 1414112111;

        $r0[109] = -2021832454;

        $r0[110] = -1013056217;

        $r0[111] = -214004450;

        $r0[112] = 172450625;

        $r0[113] = -1724973196;

        $r0[114] = 980381355;

        $r0[115] = -185008841;

        $r0[116] = -1475158944;

        $r0[117] = -1578377736;

        $r0[118] = -1726226100;

        $r0[119] = -613520627;

        $r0[120] = -964995824;

        $r0[121] = 1835478071;

        $r0[122] = 660984891;

        $r0[123] = -590288892;

        $r0[124] = -248967737;

        $r0[125] = -872349789;

        $r0[126] = -1254551662;

        $r0[127] = 1762651403;

        $r0[128] = 1719377915;

        $r0[129] = -824476260;

        $r0[130] = -1601057013;

        $r0[131] = -652910941;

        $r0[132] = -1156370552;

        $r0[133] = 1364962596;

        $r0[134] = 2073328063;

        $r0[135] = 1983633131;

        $r0[136] = 926494387;

        $r0[137] = -871278215;

        $r0[138] = -2144935273;

        $r0[139] = -198299347;

        $r0[140] = 1749200295;

        $r0[141] = -966120645;

        $r0[142] = 309677260;

        $r0[143] = 2016342300;

        $r0[144] = 1779581495;

        $r0[145] = -1215147545;

        $r0[146] = 111262694;

        $r0[147] = 1274766160;

        $r0[148] = 443224088;

        $r0[149] = 298511866;

        $r0[150] = 1025883608;

        $r0[151] = -488520759;

        $r0[152] = 1145181785;

        $r0[153] = 168956806;

        $r0[154] = -653464466;

        $r0[155] = -710153686;

        $r0[156] = 1689216846;

        $r0[157] = -628709281;

        $r0[158] = -1094719096;

        $r0[159] = 1692713982;

        $r0[160] = -1648590761;

        $r0[161] = -252198778;

        $r0[162] = 1618508792;

        $r0[163] = 1610833997;

        $r0[164] = -771914938;

        $r0[165] = -164094032;

        $r0[166] = 2001055236;

        $r0[167] = -684262196;

        $r0[168] = -2092799181;

        $r0[169] = -266425487;

        $r0[170] = -1333771897;

        $r0[171] = 1006657119;

        $r0[172] = 2006996926;

        $r0[173] = -1108824540;

        $r0[174] = 1430667929;

        $r0[175] = -1084739999;

        $r0[176] = 1314452623;

        $r0[177] = -220332638;

        $r0[178] = -193663176;

        $r0[179] = -2021016126;

        $r0[180] = 1399257539;

        $r0[181] = -927756684;

        $r0[182] = -1267338667;

        $r0[183] = 1190975929;

        $r0[184] = 2062231137;

        $r0[185] = -1960976508;

        $r0[186] = -2073424263;

        $r0[187] = -1856006686;

        $r0[188] = 1181637006;

        $r0[189] = 548689776;

        $r0[190] = -1932175983;

        $r0[191] = -922558900;

        $r0[192] = -1190417183;

        $r0[193] = -1149106736;

        $r0[194] = 296247880;

        $r0[195] = 1970579870;

        $r0[196] = -1216407114;

        $r0[197] = -525738999;

        $r0[198] = 1714227617;

        $r0[199] = -1003338189;

        $r0[200] = -396747006;

        $r0[201] = 166772364;

        $r0[202] = 1251581989;

        $r0[203] = 493813264;

        $r0[204] = 448347421;

        $r0[205] = 195405023;

        $r0[206] = -1584991729;

        $r0[207] = 677966185;

        $r0[208] = -591930749;

        $r0[209] = 1463355134;

        $r0[210] = -1578971493;

        $r0[211] = 1338867538;

        $r0[212] = 1343315457;

        $r0[213] = -1492745222;

        $r0[214] = -1610435132;

        $r0[215] = 233230375;

        $r0[216] = -1694987225;

        $r0[217] = 2000651841;

        $r0[218] = -1017099258;

        $r0[219] = 1638401717;

        $r0[220] = -266896856;

        $r0[221] = -1057650976;

        $r0[222] = 6314154;

        $r0[223] = 819756386;

        $r0[224] = 300326615;

        $r0[225] = 590932579;

        $r0[226] = 1405279636;

        $r0[227] = -1027467724;

        $r0[228] = -1144263082;

        $r0[229] = -1866680610;

        $r0[230] = -335774303;

        $r0[231] = -833020554;

        $r0[232] = 1862657033;

        $r0[233] = 1266418056;

        $r0[234] = 963775037;

        $r0[235] = 2089974820;

        $r0[236] = -2031914401;

        $r0[237] = 1917689273;

        $r0[238] = 448879540;

        $r0[239] = -744572676;

        $r0[240] = -313240200;

        $r0[241] = 150775221;

        $r0[242] = -667058989;

        $r0[243] = 1303187396;

        $r0[244] = 508620638;

        $r0[245] = -1318983944;

        $r0[246] = -1568336679;

        $r0[247] = 1817252668;

        $r0[248] = 1876281319;

        $r0[249] = 1457606340;

        $r0[250] = 908771278;

        $r0[251] = -574175177;

        $r0[252] = -677760460;

        $r0[253] = -1838972398;

        $r0[254] = 1729034894;

        $r0[255] = 1080033504;

        <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_3> = $r0;

        $r0 = newarray (int)[256];

        $r0[0] = 976866871;

        $r0[1] = -738527793;

        $r0[2] = -1413318857;

        $r0[3] = 1522871579;

        $r0[4] = 1555064734;

        $r0[5] = 1336096578;

        $r0[6] = -746444992;

        $r0[7] = -1715692610;

        $r0[8] = -720269667;

        $r0[9] = -1089506539;

        $r0[10] = -701686658;

        $r0[11] = -956251013;

        $r0[12] = -1215554709;

        $r0[13] = 564236357;

        $r0[14] = -1301368386;

        $r0[15] = 1781952180;

        $r0[16] = 1464380207;

        $r0[17] = -1131123079;

        $r0[18] = -962365742;

        $r0[19] = 1699332808;

        $r0[20] = 1393555694;

        $r0[21] = 1183702653;

        $r0[22] = -713881059;

        $r0[23] = 1288719814;

        $r0[24] = 691649499;

        $r0[25] = -1447410096;

        $r0[26] = -1399511320;

        $r0[27] = -1101077756;

        $r0[28] = -1577396752;

        $r0[29] = 1781354906;

        $r0[30] = 1676643554;

        $r0[31] = -1702433246;

        $r0[32] = -1064713544;

        $r0[33] = 1126444790;

        $r0[34] = -1524759638;

        $r0[35] = -1661808476;

        $r0[36] = -2084544070;

        $r0[37] = -1679201715;

        $r0[38] = -1880812208;

        $r0[39] = -1167828010;

        $r0[40] = 673620729;

        $r0[41] = -1489356063;

        $r0[42] = 1269405062;

        $r0[43] = -279616791;

        $r0[44] = -953159725;

        $r0[45] = -145557542;

        $r0[46] = 1057255273;

        $r0[47] = 2012875353;

        $r0[48] = -2132498155;

        $r0[49] = -2018474495;

        $r0[50] = -1693849939;

        $r0[51] = 993977747;

        $r0[52] = -376373926;

        $r0[53] = -1640704105;

        $r0[54] = 753973209;

        $r0[55] = 36408145;

        $r0[56] = -1764381638;

        $r0[57] = 25011837;

        $r0[58] = -774947114;

        $r0[59] = 2088578344;

        $r0[60] = 530523599;

        $r0[61] = -1376601957;

        $r0[62] = 1524020338;

        $r0[63] = 1518925132;

        $r0[64] = -534139791;

        $r0[65] = -535190042;

        $r0[66] = 1202760957;

        $r0[67] = -309069157;

        $r0[68] = -388774771;

        $r0[69] = 674977740;

        $r0[70] = -120232407;

        $r0[71] = 2031300136;

        $r0[72] = 2019492241;

        $r0[73] = -311074731;

        $r0[74] = -141160892;

        $r0[75] = -472686964;

        $r0[76] = 352677332;

        $r0[77] = -1997247046;

        $r0[78] = 60907813;

        $r0[79] = 90501309;

        $r0[80] = -1007968747;

        $r0[81] = 1016092578;

        $r0[82] = -1759044884;

        $r0[83] = -1455814870;

        $r0[84] = 457141659;

        $r0[85] = 509813237;

        $r0[86] = -174299397;

        $r0[87] = 652014361;

        $r0[88] = 1966332200;

        $r0[89] = -1319764491;

        $r0[90] = 55981186;

        $r0[91] = -1967506245;

        $r0[92] = 676427537;

        $r0[93] = -1039476232;

        $r0[94] = -1412673177;

        $r0[95] = -861040033;

        $r0[96] = 1307055953;

        $r0[97] = 942726286;

        $r0[98] = 933058658;

        $r0[99] = -1826555503;

        $r0[100] = -361066302;

        $r0[101] = -79791154;

        $r0[102] = 1361170020;

        $r0[103] = 2001714738;

        $r0[104] = -1464409218;

        $r0[105] = -1020707514;

        $r0[106] = 1222529897;

        $r0[107] = 1679025792;

        $r0[108] = -1565652976;

        $r0[109] = -580013532;

        $r0[110] = 1770335741;

        $r0[111] = 151462246;

        $r0[112] = -1281735158;

        $r0[113] = 1682292957;

        $r0[114] = 1483529935;

        $r0[115] = 471910574;

        $r0[116] = 1539241949;

        $r0[117] = 458788160;

        $r0[118] = -858652289;

        $r0[119] = 1807016891;

        $r0[120] = -576558466;

        $r0[121] = 978976581;

        $r0[122] = 1043663428;

        $r0[123] = -1129001515;

        $r0[124] = 1927990952;

        $r0[125] = -94075717;

        $r0[126] = -1922690386;

        $r0[127] = -1086558393;

        $r0[128] = -761535389;

        $r0[129] = 1412390302;

        $r0[130] = -1362987237;

        $r0[131] = -162634896;

        $r0[132] = 1947078029;

        $r0[133] = -413461673;

        $r0[134] = -126740879;

        $r0[135] = -1353482915;

        $r0[136] = 1077988104;

        $r0[137] = 1320477388;

        $r0[138] = 886195818;

        $r0[139] = 18198404;

        $r0[140] = -508558296;

        $r0[141] = -1785185763;

        $r0[142] = 112762804;

        $r0[143] = -831610808;

        $r0[144] = 1866414978;

        $r0[145] = 891333506;

        $r0[146] = 18488651;

        $r0[147] = 661792760;

        $r0[148] = 1628790961;

        $r0[149] = -409780260;

        $r0[150] = -1153795797;

        $r0[151] = 876946877;

        $r0[152] = -1601685023;

        $r0[153] = 1372485963;

        $r0[154] = 791857591;

        $r0[155] = -1608533303;

        $r0[156] = -534984578;

        $r0[157] = -1127755274;

        $r0[158] = -822013501;

        $r0[159] = -1578587449;

        $r0[160] = 445679433;

        $r0[161] = -732971622;

        $r0[162] = -790962485;

        $r0[163] = -720709064;

        $r0[164] = 54117162;

        $r0[165] = -963561881;

        $r0[166] = -1913048708;

        $r0[167] = -525259953;

        $r0[168] = -140617289;

        $r0[169] = 1140177722;

        $r0[170] = -220915201;

        $r0[171] = 668550556;

        $r0[172] = -1080614356;

        $r0[173] = 367459370;

        $r0[174] = 261225585;

        $r0[175] = -1684794075;

        $r0[176] = -85617823;

        $r0[177] = -826893077;

        $r0[178] = -1029151655;

        $r0[179] = 314222801;

        $r0[180] = -1228863650;

        $r0[181] = -486184436;

        $r0[182] = 282218597;

        $r0[183] = -888953790;

        $r0[184] = -521376242;

        $r0[185] = 379116347;

        $r0[186] = 1285071038;

        $r0[187] = 846784868;

        $r0[188] = -1625320142;

        $r0[189] = -523005217;

        $r0[190] = -744475605;

        $r0[191] = -1989021154;

        $r0[192] = 453669953;

        $r0[193] = 1268987020;

        $r0[194] = -977374944;

        $r0[195] = -1015663912;

        $r0[196] = -550133875;

        $r0[197] = -1684459730;

        $r0[198] = -435458233;

        $r0[199] = 266596637;

        $r0[200] = -447948204;

        $r0[201] = 517658769;

        $r0[202] = -832407089;

        $r0[203] = -851542417;

        $r0[204] = 370717030;

        $r0[205] = -47440635;

        $r0[206] = -2070949179;

        $r0[207] = -151313767;

        $r0[208] = -182193321;

        $r0[209] = -1506642397;

        $r0[210] = -1817692879;

        $r0[211] = 1456262402;

        $r0[212] = -1393524382;

        $r0[213] = 1517677493;

        $r0[214] = 1846949527;

        $r0[215] = -1999473716;

        $r0[216] = -560569710;

        $r0[217] = -2118563376;

        $r0[218] = 1280348187;

        $r0[219] = 1908823572;

        $r0[220] = -423180355;

        $r0[221] = 846861322;

        $r0[222] = 1172426758;

        $r0[223] = -1007518822;

        $r0[224] = -911584259;

        $r0[225] = 1655181056;

        $r0[226] = -1155153950;

        $r0[227] = 901632758;

        $r0[228] = 1897031941;

        $r0[229] = -1308360158;

        $r0[230] = -1228157060;

        $r0[231] = -847864789;

        $r0[232] = 1393639104;

        $r0[233] = 373351379;

        $r0[234] = 950779232;

        $r0[235] = 625454576;

        $r0[236] = -1170726756;

        $r0[237] = -146354570;

        $r0[238] = 2007998917;

        $r0[239] = 544563296;

        $r0[240] = -2050228658;

        $r0[241] = -1964470824;

        $r0[242] = 2058025392;

        $r0[243] = 1291430526;

        $r0[244] = 424198748;

        $r0[245] = 50039436;

        $r0[246] = 29584100;

        $r0[247] = -689184263;

        $r0[248] = -1865090967;

        $r0[249] = -1503863136;

        $r0[250] = 1057563949;

        $r0[251] = -1039604065;

        $r0[252] = -1219600078;

        $r0[253] = -831004069;

        $r0[254] = 1469046755;

        $r0[255] = 985887462;

        <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_4> = $r0;

        return;
    }

    public void <init>()
    {
        byte[] $r3;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r1;
        java.lang.Object $r2;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <net.sourceforge.blowfishj.BlowfishECB: int[] pbox_init>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (int[]) $r2;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_pbox> = $r1;

        $r1 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_1>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (int[]) $r2;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox1> = $r1;

        $r1 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_2>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (int[]) $r2;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox2> = $r1;

        $r1 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_3>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (int[]) $r2;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox3> = $r1;

        $r1 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_4>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (int[]) $r2;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox4> = $r1;

        $r3 = newarray (byte)[8];

        r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf> = $r3;

        return;
    }

    public void <init>(byte[])
    {
        byte[] $r1, $r4;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r2;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <net.sourceforge.blowfishj.BlowfishECB: int[] pbox_init>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r3;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_pbox> = $r2;

        $r2 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_1>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r3;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox1> = $r2;

        $r2 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_2>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r3;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox2> = $r2;

        $r2 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_3>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r3;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox3> = $r2;

        $r2 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_4>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r3;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox4> = $r2;

        $r4 = newarray (byte)[8];

        r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf> = $r4;

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void initialize(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public void <init>(byte[], int, int)
    {
        byte[] $r1, $r4;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <net.sourceforge.blowfishj.BlowfishECB: int[] pbox_init>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r3;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_pbox> = $r2;

        $r2 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_1>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r3;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox1> = $r2;

        $r2 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_2>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r3;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox2> = $r2;

        $r2 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_3>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r3;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox3> = $r2;

        $r2 = <net.sourceforge.blowfishj.BlowfishECB: int[] sbox_init_4>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (int[]) $r3;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox4> = $r2;

        $r4 = newarray (byte)[8];

        r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf> = $r4;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void initialize(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public static boolean selfTest()
    {
        byte[] r1, $r9;
        net.sourceforge.blowfishj.BlowfishECB r2;
        int[] r3, r4, r5, r6, r7, r8;
        int $i0, $i1;
        java.lang.String r0;

        r1 = newarray (byte)[8];

        r1[0] = 28;

        r1[1] = 88;

        r1[2] = 127;

        r1[3] = 28;

        r1[4] = 19;

        r1[5] = -110;

        r1[6] = 79;

        r1[7] = -17;

        r5 = newarray (int)[2];

        r5[0] = 810889768;

        r5[1] = 1836001626;

        r3 = newarray (int)[2];

        r3[0] = 1439381364;

        r3[1] = -784403967;

        r7 = newarray (int)[2];

        r0 = "Who is John Galt?";

        $r9 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        r6 = newarray (int)[2];

        r6[0] = -19088744;

        r6[1] = 1985229328;

        r4 = newarray (int)[2];

        r4[0] = -862883029;

        r4[1] = -2145192316;

        r8 = newarray (int)[2];

        r2 = new net.sourceforge.blowfishj.BlowfishECB;

        specialinvoke r2.<net.sourceforge.blowfishj.BlowfishECB: void <init>(byte[])>(r1);

        virtualinvoke r2.<net.sourceforge.blowfishj.BlowfishECB: void encrypt(int[],int[])>(r5, r7);

        $i0 = r7[0];

        $i1 = r3[0];

        if $i0 != $i1 goto label1;

        $i0 = r7[1];

        $i1 = r3[1];

        if $i0 == $i1 goto label2;

     label1:
        return 0;

     label2:
        virtualinvoke r2.<net.sourceforge.blowfishj.BlowfishECB: void decrypt(int[])>(r7);

        $i0 = r7[0];

        $i1 = r5[0];

        if $i0 != $i1 goto label3;

        $i0 = r7[1];

        $i1 = r5[1];

        if $i0 == $i1 goto label4;

     label3:
        return 0;

     label4:
        r2 = new net.sourceforge.blowfishj.BlowfishECB;

        specialinvoke r2.<net.sourceforge.blowfishj.BlowfishECB: void <init>(byte[])>($r9);

        virtualinvoke r2.<net.sourceforge.blowfishj.BlowfishECB: void encrypt(int[],int[])>(r6, r8);

        $i0 = r8[0];

        $i1 = r4[0];

        if $i0 != $i1 goto label5;

        $i0 = r8[1];

        $i1 = r4[1];

        if $i0 == $i1 goto label6;

     label5:
        return 0;

     label6:
        virtualinvoke r2.<net.sourceforge.blowfishj.BlowfishECB: void decrypt(int[])>(r8);

        $i0 = r8[0];

        $i1 = r6[0];

        if $i0 != $i1 goto label7;

        $i0 = r8[1];

        $i1 = r6[1];

        if $i0 == $i1 goto label8;

     label7:
        return 0;

     label8:
        return 1;
    }

    public void cleanUp()
    {
        byte[] $r5;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r1, $r2, $r3, $r4;
        int i0, i1;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        i0 = 0;

     label1:
        if i0 >= 18 goto label2;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_pbox>;

        $r1[i0] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        i0 = 0;

     label3:
        if i0 >= 256 goto label4;

        $r4 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox1>;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox2>;

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox3>;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox4>;

        $r3[i0] = 0;

        $r2[i0] = 0;

        $r1[i0] = 0;

        $r4[i0] = 0;

        i0 = i0 + 1;

        goto label3;

     label4:
        i1 = 0;

        $r5 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i0 = lengthof $r5;

     label5:
        if i1 >= i0 goto label6;

        $r5 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $r5[i1] = 0;

        i1 = i1 + 1;

        goto label5;

     label6:
        r0.<net.sourceforge.blowfishj.BlowfishECB: int m_nWeakKey> = -1;

        return;
    }

    public int decrypt(byte[], int, byte[], int, int)
    {
        byte[] $r1, $r2;
        net.sourceforge.blowfishj.BlowfishECB r0;
        byte $b23;
        int[] $r3, $r4, $r5, $r6;
        short $s25;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, $i21, i22, i24, i26, $i27;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: byte[];

        i19 := @parameter1: int;

        $r2 := @parameter2: byte[];

        i20 := @parameter3: int;

        i0 := @parameter4: int;

        i1 = i0 % 8;

        $i21 = i0 - i1;

        i0 = i19 + $i21;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_pbox>;

        i1 = $r3[0];

        i2 = $r3[1];

        i3 = $r3[2];

        i4 = $r3[3];

        i5 = $r3[4];

        i6 = $r3[5];

        i7 = $r3[6];

        i8 = $r3[7];

        i9 = $r3[8];

        i10 = $r3[9];

        i11 = $r3[10];

        i12 = $r3[11];

        i13 = $r3[12];

        i14 = $r3[13];

        i15 = $r3[14];

        i16 = $r3[15];

        i17 = $r3[16];

        i18 = $r3[17];

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox1>;

        $r4 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox2>;

        $r5 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox3>;

        $r6 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox4>;

     label1:
        if i19 >= i0 goto label2;

        i22 = i19 + 1;

        $b23 = $r1[i19];

        i19 = (int) $b23;

        i19 = i19 << 24;

        i24 = i22 + 1;

        $b23 = $r1[i22];

        i22 = (int) $b23;

        i22 = i22 << 16;

        i22 = i22 & 16711680;

        i22 = i19 | i22;

        i19 = i24 + 1;

        $b23 = $r1[i24];

        i24 = (int) $b23;

        i24 = i24 << 8;

        i26 = 65280;

        i24 = i24 & i26;

        i24 = i22 | i24;

        i22 = i19 + 1;

        $b23 = $r1[i19];

        $s25 = (short) $b23;

        $s25 = $s25 & 255;

        i19 = (int) $s25;

        i24 = i24 | i19;

        i26 = i22 + 1;

        $b23 = $r1[i22];

        i19 = (int) $b23;

        i22 = i19 << 24;

        i19 = i26 + 1;

        $b23 = $r1[i26];

        i26 = (int) $b23;

        i26 = i26 << 16;

        i26 = i26 & 16711680;

        i26 = i22 | i26;

        i22 = i19 + 1;

        $b23 = $r1[i19];

        i19 = (int) $b23;

        i19 = i19 << 8;

        $i27 = 65280;

        i19 = i19 & $i27;

        i26 = i26 | i19;

        i19 = i22 + 1;

        $b23 = $r1[i22];

        $s25 = (short) $b23;

        $s25 = $s25 & 255;

        i22 = (int) $s25;

        i22 = i26 | i22;

        i24 = i24 ^ i18;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i17;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i16;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i15;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i14;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i13;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i12;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i11;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i10;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i9;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i8;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i7;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i6;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i5;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i4;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i3;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i2;

        i24 = i24 ^ i26;

        i22 = i22 ^ i1;

        i26 = i20 + 1;

        $i27 = i22 >>> 24;

        $b23 = (byte) $i27;

        $r2[i20] = $b23;

        i20 = i26 + 1;

        $i27 = i22 >>> 16;

        $b23 = (byte) $i27;

        $r2[i26] = $b23;

        i26 = i20 + 1;

        $i27 = i22 >>> 8;

        $b23 = (byte) $i27;

        $r2[i20] = $b23;

        i20 = i26 + 1;

        $b23 = (byte) i22;

        $r2[i26] = $b23;

        i22 = i20 + 1;

        i26 = i24 >>> 24;

        $b23 = (byte) i26;

        $r2[i20] = $b23;

        i20 = i22 + 1;

        i26 = i24 >>> 16;

        $b23 = (byte) i26;

        $r2[i22] = $b23;

        i22 = i20 + 1;

        i26 = i24 >>> 8;

        $b23 = (byte) i26;

        $r2[i20] = $b23;

        i20 = i22 + 1;

        $b23 = (byte) i24;

        $r2[i22] = $b23;

        goto label1;

     label2:
        return $i21;
    }

    public void decrypt(byte[])
    {
        int $i0;
        byte[] $r1;
        net.sourceforge.blowfishj.BlowfishECB r0;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: int decrypt(byte[],int,byte[],int,int)>($r1, 0, $r1, 0, $i0);

        return;
    }

    public void decrypt(byte[], byte[])
    {
        byte[] $r1, $r2;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int $i0;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 = lengthof $r2;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: int decrypt(byte[],int,byte[],int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    public void decrypt(int[])
    {
        int $i0;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r1;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: int[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void decrypt(int[],int,int[],int,int)>($r1, 0, $r1, 0, $i0);

        return;
    }

    public void decrypt(int[], int, int[], int, int)
    {
        byte[] $r3;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r1, $r2;
        int $i0, i1, i2, i3, $i4;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: int[];

        i1 := @parameter1: int;

        $r2 := @parameter2: int[];

        i2 := @parameter3: int;

        $i0 := @parameter4: int;

        $i0 = i1 + $i0;

     label1:
        if i1 >= $i0 goto label2;

        i3 = i1 + 1;

        i1 = $r1[i1];

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        staticinvoke <net.sourceforge.blowfishj.BinConverter: void intToByteArray(int,byte[],int)>(i1, $r3, 0);

        i1 = i3 + 1;

        i3 = $r1[i3];

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        staticinvoke <net.sourceforge.blowfishj.BinConverter: void intToByteArray(int,byte[],int)>(i3, $r3, 4);

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void decrypt(byte[])>($r3);

        i3 = i2 + 1;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $i4 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r3, 0);

        $r2[i2] = $i4;

        i2 = i3 + 1;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $i4 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r3, 4);

        $r2[i3] = $i4;

        goto label1;

     label2:
        return;
    }

    public void decrypt(int[], int[])
    {
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r1, $r2;
        int $i0;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: int[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void decrypt(int[],int,int[],int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    public void decrypt(long[])
    {
        int $i0;
        long[] $r1;
        net.sourceforge.blowfishj.BlowfishECB r0;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: long[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void decrypt(long[],int,long[],int,int)>($r1, 0, $r1, 0, $i0);

        return;
    }

    public void decrypt(long[], int, long[], int, int)
    {
        byte[] $r3;
        long $l4;
        long[] $r1, $r2;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int $i0, $i1, i2, i3;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: long[];

        i2 := @parameter1: int;

        $r2 := @parameter2: long[];

        i3 := @parameter3: int;

        $i0 := @parameter4: int;

        $i1 = i2;

     label1:
        i2 = $i1 + $i0;

        if $i1 >= i2 goto label2;

        i2 = $i1 + 1;

        $l4 = $r1[$i1];

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        staticinvoke <net.sourceforge.blowfishj.BinConverter: void longToByteArray(long,byte[],int)>($l4, $r3, 0);

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void decrypt(byte[])>($r3);

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r3, 0);

        $l4 = (long) $i1;

        $r2[i3] = $l4;

        i3 = i3 + 1;

        $i1 = i2;

        goto label1;

     label2:
        return;
    }

    public void decrypt(long[], long[])
    {
        long[] $r1, $r2;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int $i0;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: long[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void decrypt(long[],int,long[],int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    public int encrypt(byte[], int, byte[], int, int)
    {
        byte[] $r1, $r2;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int $i0, $i1, $i2;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i0 = virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: int encryptPrv(byte[],int,byte[],int,int)>($r1, $i0, $r2, $i1, $i2);

        return $i0;
    }

    public void encrypt(byte[])
    {
        int $i0;
        byte[] $r1;
        net.sourceforge.blowfishj.BlowfishECB r0;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: int encrypt(byte[],int,byte[],int,int)>($r1, 0, $r1, 0, $i0);

        return;
    }

    public void encrypt(byte[], byte[])
    {
        byte[] $r1, $r2;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int $i0;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 = lengthof $r2;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: int encrypt(byte[],int,byte[],int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    public void encrypt(int[])
    {
        int $i0;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r1;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: int[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void encrypt(int[],int,int[],int,int)>($r1, 0, $r1, 0, $i0);

        return;
    }

    public void encrypt(int[], int, int[], int, int)
    {
        byte[] $r3;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r1, $r2;
        int $i0, i1, i2, i3, $i4;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: int[];

        i1 := @parameter1: int;

        $r2 := @parameter2: int[];

        i2 := @parameter3: int;

        $i0 := @parameter4: int;

        $i0 = i1 + $i0;

     label1:
        if i1 >= $i0 goto label2;

        i3 = i1 + 1;

        i1 = $r1[i1];

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        staticinvoke <net.sourceforge.blowfishj.BinConverter: void intToByteArray(int,byte[],int)>(i1, $r3, 0);

        i1 = i3 + 1;

        i3 = $r1[i3];

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        staticinvoke <net.sourceforge.blowfishj.BinConverter: void intToByteArray(int,byte[],int)>(i3, $r3, 4);

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void encrypt(byte[])>($r3);

        i3 = i2 + 1;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $i4 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r3, 0);

        $r2[i2] = $i4;

        i2 = i3 + 1;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $i4 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r3, 4);

        $r2[i3] = $i4;

        goto label1;

     label2:
        return;
    }

    public void encrypt(int[], int[])
    {
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r1, $r2;
        int $i0;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: int[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void encrypt(int[],int,int[],int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    public void encrypt(long[])
    {
        int $i0;
        long[] $r1;
        net.sourceforge.blowfishj.BlowfishECB r0;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: long[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void encrypt(long[],int,long[],int,int)>($r1, 0, $r1, 0, $i0);

        return;
    }

    public void encrypt(long[], int, long[], int, int)
    {
        byte[] $r3;
        long $l4;
        long[] $r1, $r2;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int $i0, $i1, i2, i3;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: long[];

        i2 := @parameter1: int;

        $r2 := @parameter2: long[];

        i3 := @parameter3: int;

        $i0 := @parameter4: int;

        $i0 = i2 + $i0;

        $i1 = i2;

     label1:
        if $i1 >= $i0 goto label2;

        i2 = $i1 + 1;

        $l4 = $r1[$i1];

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        staticinvoke <net.sourceforge.blowfishj.BinConverter: void longToByteArray(long,byte[],int)>($l4, $r3, 0);

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void encrypt(byte[])>($r3);

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r3, 0);

        $l4 = (long) $i1;

        $r2[i3] = $l4;

        i3 = i3 + 1;

        $i1 = i2;

        goto label1;

     label2:
        return;
    }

    public void encrypt(long[], long[])
    {
        long[] $r1, $r2;
        net.sourceforge.blowfishj.BlowfishECB r0;
        int $i0;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: long[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: void encrypt(long[],int,long[],int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    protected int encryptPrv(byte[], int, byte[], int, int)
    {
        byte[] $r1, $r2;
        net.sourceforge.blowfishj.BlowfishECB r0;
        byte $b23;
        int[] $r3, $r4, $r5, $r6;
        short $s25;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, $i21, i22, i24, i26, $i27;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: byte[];

        i19 := @parameter1: int;

        $r2 := @parameter2: byte[];

        i20 := @parameter3: int;

        i0 := @parameter4: int;

        i1 = i0 % 8;

        $i21 = i0 - i1;

        i0 = i19 + $i21;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_pbox>;

        i1 = $r3[0];

        i2 = $r3[1];

        i3 = $r3[2];

        i4 = $r3[3];

        i5 = $r3[4];

        i6 = $r3[5];

        i7 = $r3[6];

        i8 = $r3[7];

        i9 = $r3[8];

        i10 = $r3[9];

        i11 = $r3[10];

        i12 = $r3[11];

        i13 = $r3[12];

        i14 = $r3[13];

        i15 = $r3[14];

        i16 = $r3[15];

        i17 = $r3[16];

        i18 = $r3[17];

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox1>;

        $r4 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox2>;

        $r5 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox3>;

        $r6 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox4>;

     label1:
        if i19 >= i0 goto label2;

        i22 = i19 + 1;

        $b23 = $r1[i19];

        i19 = (int) $b23;

        i19 = i19 << 24;

        i24 = i22 + 1;

        $b23 = $r1[i22];

        i22 = (int) $b23;

        i22 = i22 << 16;

        i22 = i22 & 16711680;

        i22 = i19 | i22;

        i19 = i24 + 1;

        $b23 = $r1[i24];

        i24 = (int) $b23;

        i24 = i24 << 8;

        i26 = 65280;

        i24 = i24 & i26;

        i24 = i22 | i24;

        i22 = i19 + 1;

        $b23 = $r1[i19];

        $s25 = (short) $b23;

        $s25 = $s25 & 255;

        i19 = (int) $s25;

        i24 = i24 | i19;

        i26 = i22 + 1;

        $b23 = $r1[i22];

        i19 = (int) $b23;

        i22 = i19 << 24;

        i19 = i26 + 1;

        $b23 = $r1[i26];

        i26 = (int) $b23;

        i26 = i26 << 16;

        i26 = i26 & 16711680;

        i26 = i22 | i26;

        i22 = i19 + 1;

        $b23 = $r1[i19];

        i19 = (int) $b23;

        i19 = i19 << 8;

        $i27 = 65280;

        i19 = i19 & $i27;

        i26 = i26 | i19;

        i19 = i22 + 1;

        $b23 = $r1[i22];

        $s25 = (short) $b23;

        $s25 = $s25 & 255;

        i22 = (int) $s25;

        i22 = i26 | i22;

        i24 = i24 ^ i1;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i2;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i3;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i4;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i5;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i6;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i7;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i8;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i9;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i10;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i11;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i12;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i13;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i14;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i15;

        i24 = i24 ^ i26;

        i26 = i24 >>> 24;

        i26 = $r3[i26];

        $i27 = i24 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i24 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i24 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i16;

        i22 = i22 ^ i26;

        i26 = i22 >>> 24;

        i26 = $r3[i26];

        $i27 = i22 >>> 16;

        $i27 = $i27 & 255;

        $i27 = $r4[$i27];

        i26 = i26 + $i27;

        $i27 = i22 >>> 8;

        $i27 = $i27 & 255;

        $i27 = $r5[$i27];

        i26 = i26 ^ $i27;

        $i27 = i22 & 255;

        $i27 = $r6[$i27];

        i26 = i26 + $i27;

        i26 = i26 ^ i17;

        i24 = i24 ^ i26;

        i22 = i22 ^ i18;

        i26 = i20 + 1;

        $i27 = i22 >>> 24;

        $b23 = (byte) $i27;

        $r2[i20] = $b23;

        i20 = i26 + 1;

        $i27 = i22 >>> 16;

        $b23 = (byte) $i27;

        $r2[i26] = $b23;

        i26 = i20 + 1;

        $i27 = i22 >>> 8;

        $b23 = (byte) $i27;

        $r2[i20] = $b23;

        i20 = i26 + 1;

        $b23 = (byte) i22;

        $r2[i26] = $b23;

        i22 = i20 + 1;

        i26 = i24 >>> 24;

        $b23 = (byte) i26;

        $r2[i20] = $b23;

        i20 = i22 + 1;

        i26 = i24 >>> 16;

        $b23 = (byte) i26;

        $r2[i22] = $b23;

        i22 = i20 + 1;

        i26 = i24 >>> 8;

        $b23 = (byte) i26;

        $r2[i20] = $b23;

        i20 = i22 + 1;

        $b23 = (byte) i24;

        $r2[i22] = $b23;

        goto label1;

     label2:
        return $i21;
    }

    public void initialize(byte[], int, int)
    {
        byte[] $r1, $r3;
        short $s7;
        net.sourceforge.blowfishj.BlowfishECB r0;
        byte $b6;
        int[] $r2;
        int $i0, i1, $i2, i3, i4, i5, $i8;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $r1 := @parameter0: byte[];

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        if $i0 != 0 goto label01;

        return;

     label01:
        i3 = 0;

        i1 = $i2;

        $i0 = $i2 + $i0;

        i4 = 0;

     label02:
        if i4 >= 18 goto label06;

        i5 = 0;

     label03:
        if i5 >= 4 goto label05;

        i3 = i3 << 8;

        $b6 = $r1[$i2];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        $i8 = (int) $s7;

        i3 = i3 | $i8;

        $i2 = $i2 + 1;

        if $i2 != $i0 goto label04;

        $i2 = i1;

     label04:
        i5 = i5 + 1;

        goto label03;

     label05:
        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_pbox>;

        i5 = $r2[i4];

        i5 = i5 ^ i3;

        $r2[i4] = i5;

        i4 = i4 + 1;

        goto label02;

     label06:
        $i2 = 0;

     label07:
        if $i2 >= 8 goto label08;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $r1[$i2] = 0;

        $i2 = $i2 + 1;

        goto label07;

     label08:
        $i2 = 0;

     label09:
        if $i2 >= 18 goto label10;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: int encryptPrv(byte[],int,byte[],int,int)>($r1, 0, $r3, 0, 8);

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_pbox>;

        $i0 = $i2 + 1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r1, 0);

        $r2[$i2] = i1;

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_pbox>;

        $i2 = $i0 + 1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r1, 4);

        $r2[$i0] = i1;

        goto label09;

     label10:
        $i2 = 0;

     label11:
        if $i2 >= 256 goto label12;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: int encryptPrv(byte[],int,byte[],int,int)>($r1, 0, $r3, 0, 8);

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox1>;

        $i0 = $i2 + 1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r1, 0);

        $r2[$i2] = i1;

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox1>;

        $i2 = $i0 + 1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r1, 4);

        $r2[$i0] = i1;

        goto label11;

     label12:
        $i2 = 0;

     label13:
        if $i2 >= 256 goto label14;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: int encryptPrv(byte[],int,byte[],int,int)>($r1, 0, $r3, 0, 8);

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox2>;

        $i0 = $i2 + 1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r1, 0);

        $r2[$i2] = i1;

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox2>;

        $i2 = $i0 + 1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r1, 4);

        $r2[$i0] = i1;

        goto label13;

     label14:
        $i2 = 0;

     label15:
        if $i2 >= 256 goto label16;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: int encryptPrv(byte[],int,byte[],int,int)>($r1, 0, $r3, 0, 8);

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox3>;

        $i0 = $i2 + 1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r1, 0);

        $r2[$i2] = i1;

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox3>;

        $i2 = $i0 + 1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r1, 4);

        $r2[$i0] = i1;

        goto label15;

     label16:
        $i2 = 0;

     label17:
        if $i2 >= 256 goto label18;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        $r3 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishECB: int encryptPrv(byte[],int,byte[],int,int)>($r1, 0, $r3, 0, 8);

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox4>;

        $i0 = $i2 + 1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r1, 0);

        $r2[$i2] = i1;

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox4>;

        $i2 = $i0 + 1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: byte[] m_blockBuf>;

        i1 = staticinvoke <net.sourceforge.blowfishj.BinConverter: int byteArrayToInt(byte[],int)>($r1, 4);

        $r2[$i0] = i1;

        goto label17;

     label18:
        $i2 = -1;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int m_nWeakKey> = $i2;

        return;
    }

    public boolean weakKeyCheck()
    {
        net.sourceforge.blowfishj.BlowfishECB r0;
        int[] $r1;
        int $i0, i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: net.sourceforge.blowfishj.BlowfishECB;

        $i0 = r0.<net.sourceforge.blowfishj.BlowfishECB: int m_nWeakKey>;

        i1 = -1;

        if i1 == $i0 goto label02;

        $i0 = r0.<net.sourceforge.blowfishj.BlowfishECB: int m_nWeakKey>;

        if 1 != $i0 goto label01;

        return 1;

     label01:
        return 0;

     label02:
        $i0 = 0;

     label03:
        if $i0 >= 255 goto label15;

        i1 = $i0 + 1;

     label04:
        if i1 >= 256 goto label14;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox1>;

        $i2 = $r1[$i0];

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox1>;

        $i3 = $r1[i1];

        if $i2 != $i3 goto label09;

        $z0 = 1;

     label05:
        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox2>;

        $i2 = $r1[$i0];

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox2>;

        $i3 = $r1[i1];

        if $i2 != $i3 goto label10;

        $z1 = 1;

     label06:
        $z0 = $z0 | $z1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox3>;

        $i2 = $r1[$i0];

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox3>;

        $i3 = $r1[i1];

        if $i2 != $i3 goto label11;

        $z1 = 1;

     label07:
        $z0 = $z0 | $z1;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox4>;

        $i2 = $r1[$i0];

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishECB: int[] m_sbox4>;

        $i3 = $r1[i1];

        if $i2 != $i3 goto label12;

        $z1 = 1;

     label08:
        $z0 = $z0 | $z1;

        if $z0 == 0 goto label13;

        r0.<net.sourceforge.blowfishj.BlowfishECB: int m_nWeakKey> = 1;

        return 1;

     label09:
        $z0 = 0;

        goto label05;

     label10:
        $z1 = 0;

        goto label06;

     label11:
        $z1 = 0;

        goto label07;

     label12:
        $z1 = 0;

        goto label08;

     label13:
        i1 = i1 + 1;

        goto label04;

     label14:
        $i0 = $i0 + 1;

        goto label03;

     label15:
        r0.<net.sourceforge.blowfishj.BlowfishECB: int m_nWeakKey> = 0;

        return 0;
    }
}
