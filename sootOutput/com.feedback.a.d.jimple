public class com.feedback.a.d extends java.lang.Object implements java.lang.Comparable
{
    public java.lang.String a;
    public com.feedback.a.e b;
    public java.lang.String c;
    public com.feedback.a.a d;
    public com.feedback.a.a e;
    public java.util.List f;

    public void <init>(org.json.JSONArray)
    {
        java.util.ArrayList $r13;
        org.json.JSONException $r12;
        org.json.JSONObject $r11;
        int $i0, $i1;
        java.lang.String $r4;
        boolean $z0;
        com.feedback.a.e $r5;
        com.feedback.a.d r0;
        com.feedback.a.a $r8, $r14;
        com.feedback.a.b $r2, $r10;
        java.util.List $r6, $r9;
        java.lang.Class $r3;
        java.lang.Object $r7;
        org.json.JSONArray $r1;

        r0 := @this: com.feedback.a.d;

        $r1 := @parameter0: org.json.JSONArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = class "Lcom/feedback/a/d;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        r0.<com.feedback.a.d: java.lang.String a> = $r4;

        $r5 = <com.feedback.a.e: com.feedback.a.e d>;

        r0.<com.feedback.a.d: com.feedback.a.e b> = $r5;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.feedback.a.d: java.util.List f> = $r13;

        $i0 = 0;

     label01:
        $i1 = virtualinvoke $r1.<org.json.JSONArray: int length()>();

        if $i0 < $i1 goto label02;

        $r6 = r0.<com.feedback.a.d: java.util.List f>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $r6 = r0.<com.feedback.a.d: java.util.List f>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (com.feedback.a.a) $r7;

        r0.<com.feedback.a.d: com.feedback.a.a d> = $r8;

        $r6 = r0.<com.feedback.a.d: java.util.List f>;

        $r9 = r0.<com.feedback.a.d: java.util.List f>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i0);

        $r8 = (com.feedback.a.a) $r7;

        r0.<com.feedback.a.d: com.feedback.a.a e> = $r8;

        $r8 = r0.<com.feedback.a.d: com.feedback.a.a d>;

        $r4 = $r8.<com.feedback.a.a: java.lang.String c>;

        r0.<com.feedback.a.d: java.lang.String c> = $r4;

        $r6 = r0.<com.feedback.a.d: java.util.List f>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 != 1 goto label10;

        $r6 = r0.<com.feedback.a.d: java.util.List f>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (com.feedback.a.a) $r7;

        $r2 = $r8.<com.feedback.a.a: com.feedback.a.b g>;

        $r10 = <com.feedback.a.b: com.feedback.a.b b>;

        if $r2 != $r10 goto label09;

        $r5 = <com.feedback.a.e: com.feedback.a.e b>;

        r0.<com.feedback.a.d: com.feedback.a.e b> = $r5;

        return;

     label02:
        $r14 = new com.feedback.a.a;

        $r8 = $r14;

     label03:
        $r11 = virtualinvoke $r1.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        specialinvoke $r14.<com.feedback.a.a: void <init>(org.json.JSONObject)>($r11);

     label04:
        $r10 = $r8.<com.feedback.a.a: com.feedback.a.b g>;

        $r2 = <com.feedback.a.b: com.feedback.a.b b>;

        if $r10 != $r2 goto label05;

        $r5 = <com.feedback.a.e: com.feedback.a.e c>;

        r0.<com.feedback.a.d: com.feedback.a.e b> = $r5;

     label05:
        $r6 = r0.<com.feedback.a.d: java.util.List f>;

     label06:
        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r8);

     label07:
        $i0 = $i0 + 1;

        goto label01;

     label08:
        $r12 := @caughtexception;

        virtualinvoke $r12.<org.json.JSONException: void printStackTrace()>();

        goto label07;

     label09:
        $r6 = r0.<com.feedback.a.d: java.util.List f>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (com.feedback.a.a) $r7;

        $r2 = $r8.<com.feedback.a.a: com.feedback.a.b g>;

        $r10 = <com.feedback.a.b: com.feedback.a.b a>;

        if $r2 != $r10 goto label10;

        $r5 = <com.feedback.a.e: com.feedback.a.e a>;

        r0.<com.feedback.a.d: com.feedback.a.e b> = $r5;

     label10:
        return;

        catch org.json.JSONException from label03 to label04 with label08;
        catch org.json.JSONException from label06 to label07 with label08;
    }

    public int a(com.feedback.a.d)
    {
        java.util.Date $r3, $r4;
        int $i0;
        com.feedback.a.d r0, $r1;
        com.feedback.a.a $r2;
        boolean $z0;

        r0 := @this: com.feedback.a.d;

        $r1 := @parameter0: com.feedback.a.d;

        $r2 = r0.<com.feedback.a.d: com.feedback.a.a e>;

        $r3 = $r2.<com.feedback.a.a: java.util.Date e>;

        $r2 = $r1.<com.feedback.a.d: com.feedback.a.a e>;

        $r4 = $r2.<com.feedback.a.a: java.util.Date e>;

        if $r4 == null goto label1;

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<java.util.Date: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r3.<java.util.Date: boolean after(java.util.Date)>($r4);

        if $z0 == 0 goto label3;

        $i0 = -1;

        return $i0;

     label3:
        return 1;
    }

    public com.feedback.a.a a(int)
    {
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        com.feedback.a.d r0;
        com.feedback.a.a $r3;

        r0 := @this: com.feedback.a.d;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = r0.<com.feedback.a.d: java.util.List f>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i1 + -1;

        if $i0 <= $i1 goto label2;

     label1:
        return null;

     label2:
        $r1 = r0.<com.feedback.a.d: java.util.List f>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.feedback.a.a) $r2;

        return $r3;
    }

    public void b(int)
    {
        java.util.List $r1;
        int $i0, $i1;
        com.feedback.a.d r0;

        r0 := @this: com.feedback.a.d;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label2;

        $r1 = r0.<com.feedback.a.d: java.util.List f>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i1 + -1;

        if $i0 <= $i1 goto label1;

        return;

     label1:
        $r1 = r0.<com.feedback.a.d: java.util.List f>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

     label2:
        return;
    }

    public int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.feedback.a.d r0, $r2;

        r0 := @this: com.feedback.a.d;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.feedback.a.d) $r1;

        $i0 = virtualinvoke r0.<com.feedback.a.d: int a(com.feedback.a.d)>($r2);

        return $i0;
    }
}
