public class proguard.classfile.visitor.ClassVersionFilter extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor
{
    private final proguard.classfile.visitor.ClassVisitor classVisitor;
    private final int maximumClassVersion;
    private final int minimumClassVersion;

    public void <init>(int, int, proguard.classfile.visitor.ClassVisitor)
    {
        proguard.classfile.visitor.ClassVersionFilter r0;
        proguard.classfile.visitor.ClassVisitor $r1;
        int $i0, $i1;

        r0 := @this: proguard.classfile.visitor.ClassVersionFilter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: proguard.classfile.visitor.ClassVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.visitor.ClassVersionFilter: int minimumClassVersion> = $i0;

        r0.<proguard.classfile.visitor.ClassVersionFilter: int maximumClassVersion> = $i1;

        r0.<proguard.classfile.visitor.ClassVersionFilter: proguard.classfile.visitor.ClassVisitor classVisitor> = $r1;

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.visitor.ClassVersionFilter r0;

        r0 := @this: proguard.classfile.visitor.ClassVersionFilter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.visitor.ClassVersionFilter r0;
        proguard.classfile.visitor.ClassVisitor $r2;
        int $i0, $i1;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.visitor.ClassVersionFilter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u4version>;

        $i1 = r0.<proguard.classfile.visitor.ClassVersionFilter: int minimumClassVersion>;

        if $i0 < $i1 goto label1;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u4version>;

        $i1 = r0.<proguard.classfile.visitor.ClassVersionFilter: int maximumClassVersion>;

        if $i0 > $i1 goto label1;

        $r2 = r0.<proguard.classfile.visitor.ClassVersionFilter: proguard.classfile.visitor.ClassVisitor classVisitor>;

        interfaceinvoke $r2.<proguard.classfile.visitor.ClassVisitor: void visitProgramClass(proguard.classfile.ProgramClass)>($r1);

     label1:
        return;
    }
}
