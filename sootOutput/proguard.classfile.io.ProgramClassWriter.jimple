public class proguard.classfile.io.ProgramClassWriter extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor, proguard.classfile.constant.visitor.ConstantVisitor, proguard.classfile.attribute.visitor.AttributeVisitor
{
    private final proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter attributeBodyWriter;
    private final proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter constantBodyWriter;
    private proguard.classfile.io.RuntimeDataOutput dataOutput;
    private final proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter elementValueBodyWriter;
    private final proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter stackMapFrameBodyWriter;
    private final proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter verificationTypeBodyWriter;

    public void <init>(java.io.DataOutput)
    {
        java.io.DataOutput $r1;
        proguard.classfile.io.RuntimeDataOutput $r7;
        proguard.classfile.io.ProgramClassWriter r0;
        proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter $r5;
        proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter $r6;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter $r3;
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter $r4;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter;

        $r1 := @parameter0: java.io.DataOutput;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        $r2 = new proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter;

        specialinvoke $r2.<proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter: void <init>(proguard.classfile.io.ProgramClassWriter,proguard.classfile.io.ProgramClassWriter$1)>(r0, null);

        r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter constantBodyWriter> = $r2;

        $r3 = new proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        specialinvoke $r3.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: void <init>(proguard.classfile.io.ProgramClassWriter,proguard.classfile.io.ProgramClassWriter$1)>(r0, null);

        r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter attributeBodyWriter> = $r3;

        $r4 = new proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter;

        specialinvoke $r4.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: void <init>(proguard.classfile.io.ProgramClassWriter,proguard.classfile.io.ProgramClassWriter$1)>(r0, null);

        r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter stackMapFrameBodyWriter> = $r4;

        $r5 = new proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter;

        specialinvoke $r5.<proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter: void <init>(proguard.classfile.io.ProgramClassWriter,proguard.classfile.io.ProgramClassWriter$1)>(r0, null);

        r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter verificationTypeBodyWriter> = $r5;

        $r6 = new proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter;

        specialinvoke $r6.<proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter: void <init>(proguard.classfile.io.ProgramClassWriter,proguard.classfile.io.ProgramClassWriter$1)>(r0, null);

        r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter elementValueBodyWriter> = $r6;

        $r7 = new proguard.classfile.io.RuntimeDataOutput;

        specialinvoke $r7.<proguard.classfile.io.RuntimeDataOutput: void <init>(java.io.DataOutput)>($r1);

        r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput> = $r7;

        return;
    }

    static proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)
    {
        proguard.classfile.io.RuntimeDataOutput r1;
        proguard.classfile.io.ProgramClassWriter $r0;

        $r0 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        r1 = $r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        return r1;
    }

    static proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter access$600(proguard.classfile.io.ProgramClassWriter)
    {
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter r1;
        proguard.classfile.io.ProgramClassWriter $r0;

        $r0 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        r1 = $r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter stackMapFrameBodyWriter>;

        return r1;
    }

    static proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter access$700(proguard.classfile.io.ProgramClassWriter)
    {
        proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter r1;
        proguard.classfile.io.ProgramClassWriter $r0;

        $r0 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        r1 = $r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter elementValueBodyWriter>;

        return r1;
    }

    static proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter access$800(proguard.classfile.io.ProgramClassWriter)
    {
        proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter r1;
        proguard.classfile.io.ProgramClassWriter $r0;

        $r0 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        r1 = $r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter verificationTypeBodyWriter>;

        return r1;
    }

    static proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter access$900(proguard.classfile.io.ProgramClassWriter)
    {
        proguard.classfile.io.ProgramClassWriter $r0;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r1;

        $r0 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        r1 = $r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter attributeBodyWriter>;

        return r1;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream $r6;
        proguard.classfile.io.RuntimeDataOutput $r5, $r7;
        proguard.classfile.io.ProgramClassWriter r0;
        java.io.DataOutputStream $r3;
        proguard.classfile.Clazz $r1;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter $r8;
        int $i0;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r2.<proguard.classfile.attribute.Attribute: int u2attributeNameIndex>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $r7 = new proguard.classfile.io.RuntimeDataOutput;

        $r3 = new java.io.DataOutputStream;

        specialinvoke $r3.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r6);

        specialinvoke $r7.<proguard.classfile.io.RuntimeDataOutput: void <init>(java.io.DataOutput)>($r3);

        r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput> = $r7;

        $r8 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter attributeBodyWriter>;

        virtualinvoke $r2.<proguard.classfile.attribute.Attribute: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, null, null, $r8);

        r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput> = $r5;

        $r4 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = lengthof $r4;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeInt(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void write(byte[])>($r4);

        return;
    }

    public void visitAnyConstant(proguard.classfile.Clazz, proguard.classfile.constant.Constant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.Constant $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter r0;
        proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.Constant;

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = virtualinvoke $r2.<proguard.classfile.constant.Constant: int getTag()>();

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeByte(int)>($i0);

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter constantBodyWriter>;

        virtualinvoke $r2.<proguard.classfile.constant.Constant: void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor)>($r1, $r4);

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.io.ProgramClassWriter r0;

        r0 := @this: proguard.classfile.io.ProgramClassWriter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        return;
    }

    public void visitLibraryMember(proguard.classfile.LibraryClass, proguard.classfile.LibraryMember)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.io.ProgramClassWriter r0;
        proguard.classfile.LibraryMember $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryMember;

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        int[] $r3;
        int $i0, $i1;
        proguard.classfile.io.RuntimeDataOutput $r2;
        proguard.classfile.io.ProgramClassWriter r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u4magic>;

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeInt(int)>($i0);

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u4version>;

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalMinorClassVersion(int)>($i0);

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u4version>;

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalMajorClassVersion(int)>($i0);

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2constantPoolCount>;

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void constantPoolEntriesAccept(proguard.classfile.constant.visitor.ConstantVisitor)>(r0);

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2accessFlags>;

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2thisClass>;

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2superClass>;

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2interfacesCount>;

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = $r1.<proguard.classfile.ProgramClass: int u2interfacesCount>;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $r3 = $r1.<proguard.classfile.ProgramClass: int[] u2interfaces>;

        $i1 = $r3[$i0];

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2fieldsCount>;

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void fieldsAccept(proguard.classfile.visitor.MemberVisitor)>(r0);

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2methodsCount>;

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void methodsAccept(proguard.classfile.visitor.MemberVisitor)>(r0);

        $r2 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2attributesCount>;

        virtualinvoke $r2.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void attributesAccept(proguard.classfile.attribute.visitor.AttributeVisitor)>(r0);

        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        proguard.classfile.ProgramField $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r2.<proguard.classfile.ProgramField: int u2accessFlags>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r2.<proguard.classfile.ProgramField: int u2nameIndex>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r2.<proguard.classfile.ProgramField: int u2descriptorIndex>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r2.<proguard.classfile.ProgramField: int u2attributesCount>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r2.<proguard.classfile.ProgramField: void attributesAccept(proguard.classfile.ProgramClass,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, r0);

        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.classfile.ProgramMethod $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r2.<proguard.classfile.ProgramMethod: int u2accessFlags>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r2.<proguard.classfile.ProgramMethod: int u2nameIndex>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r2.<proguard.classfile.ProgramMethod: int u2descriptorIndex>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput dataOutput>;

        $i0 = $r2.<proguard.classfile.ProgramMethod: int u2attributesCount>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r2.<proguard.classfile.ProgramMethod: void attributesAccept(proguard.classfile.ProgramClass,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, r0);

        return;
    }
}
