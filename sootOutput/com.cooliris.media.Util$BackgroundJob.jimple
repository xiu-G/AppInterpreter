class com.cooliris.media.Util$BackgroundJob extends com.cooliris.media.MonitoredActivity$LifeCycleAdapter implements java.lang.Runnable
{
    private final com.cooliris.media.MonitoredActivity mActivity;
    private final java.lang.Runnable mCleanupRunner;
    private final android.app.ProgressDialog mDialog;
    private final android.os.Handler mHandler;
    private final java.lang.Runnable mJob;

    public void <init>(com.cooliris.media.MonitoredActivity, java.lang.Runnable, android.app.ProgressDialog, android.os.Handler)
    {
        com.cooliris.media.MonitoredActivity $r1;
        com.cooliris.media.Util$BackgroundJob$1 $r5;
        com.cooliris.media.Util$BackgroundJob r0;
        android.os.Handler $r4;
        android.app.ProgressDialog $r3;
        java.lang.Runnable $r2;

        r0 := @this: com.cooliris.media.Util$BackgroundJob;

        $r1 := @parameter0: com.cooliris.media.MonitoredActivity;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 := @parameter2: android.app.ProgressDialog;

        $r4 := @parameter3: android.os.Handler;

        specialinvoke r0.<com.cooliris.media.MonitoredActivity$LifeCycleAdapter: void <init>()>();

        $r5 = new com.cooliris.media.Util$BackgroundJob$1;

        specialinvoke $r5.<com.cooliris.media.Util$BackgroundJob$1: void <init>(com.cooliris.media.Util$BackgroundJob)>(r0);

        r0.<com.cooliris.media.Util$BackgroundJob: java.lang.Runnable mCleanupRunner> = $r5;

        r0.<com.cooliris.media.Util$BackgroundJob: com.cooliris.media.MonitoredActivity mActivity> = $r1;

        r0.<com.cooliris.media.Util$BackgroundJob: android.app.ProgressDialog mDialog> = $r3;

        r0.<com.cooliris.media.Util$BackgroundJob: java.lang.Runnable mJob> = $r2;

        $r1 = r0.<com.cooliris.media.Util$BackgroundJob: com.cooliris.media.MonitoredActivity mActivity>;

        virtualinvoke $r1.<com.cooliris.media.MonitoredActivity: void addLifeCycleListener(com.cooliris.media.MonitoredActivity$LifeCycleListener)>(r0);

        r0.<com.cooliris.media.Util$BackgroundJob: android.os.Handler mHandler> = $r4;

        return;
    }

    static com.cooliris.media.MonitoredActivity access$0(com.cooliris.media.Util$BackgroundJob)
    {
        com.cooliris.media.MonitoredActivity r1;
        com.cooliris.media.Util$BackgroundJob $r0;

        $r0 := @parameter0: com.cooliris.media.Util$BackgroundJob;

        r1 = $r0.<com.cooliris.media.Util$BackgroundJob: com.cooliris.media.MonitoredActivity mActivity>;

        return r1;
    }

    static android.app.ProgressDialog access$1(com.cooliris.media.Util$BackgroundJob)
    {
        android.app.ProgressDialog r1;
        com.cooliris.media.Util$BackgroundJob $r0;

        $r0 := @parameter0: com.cooliris.media.Util$BackgroundJob;

        r1 = $r0.<com.cooliris.media.Util$BackgroundJob: android.app.ProgressDialog mDialog>;

        return r1;
    }

    public void onActivityDestroyed(com.cooliris.media.MonitoredActivity)
    {
        com.cooliris.media.MonitoredActivity $r1;
        com.cooliris.media.Util$BackgroundJob r0;
        android.os.Handler $r3;
        java.lang.Runnable $r2;

        r0 := @this: com.cooliris.media.Util$BackgroundJob;

        $r1 := @parameter0: com.cooliris.media.MonitoredActivity;

        $r2 = r0.<com.cooliris.media.Util$BackgroundJob: java.lang.Runnable mCleanupRunner>;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

        $r3 = r0.<com.cooliris.media.Util$BackgroundJob: android.os.Handler mHandler>;

        $r2 = r0.<com.cooliris.media.Util$BackgroundJob: java.lang.Runnable mCleanupRunner>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        return;
    }

    public void onActivityStarted(com.cooliris.media.MonitoredActivity)
    {
        android.app.ProgressDialog $r2;
        com.cooliris.media.MonitoredActivity $r1;
        com.cooliris.media.Util$BackgroundJob r0;

        r0 := @this: com.cooliris.media.Util$BackgroundJob;

        $r1 := @parameter0: com.cooliris.media.MonitoredActivity;

        $r2 = r0.<com.cooliris.media.Util$BackgroundJob: android.app.ProgressDialog mDialog>;

        virtualinvoke $r2.<android.app.ProgressDialog: void show()>();

        return;
    }

    public void onActivityStopped(com.cooliris.media.MonitoredActivity)
    {
        android.app.ProgressDialog $r2;
        com.cooliris.media.MonitoredActivity $r1;
        com.cooliris.media.Util$BackgroundJob r0;

        r0 := @this: com.cooliris.media.Util$BackgroundJob;

        $r1 := @parameter0: com.cooliris.media.MonitoredActivity;

        $r2 = r0.<com.cooliris.media.Util$BackgroundJob: android.app.ProgressDialog mDialog>;

        virtualinvoke $r2.<android.app.ProgressDialog: void hide()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r3;
        com.cooliris.media.Util$BackgroundJob r0;
        android.os.Handler $r2;
        java.lang.Runnable $r1;

        r0 := @this: com.cooliris.media.Util$BackgroundJob;

     label1:
        $r1 = r0.<com.cooliris.media.Util$BackgroundJob: java.lang.Runnable mJob>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

     label2:
        $r2 = r0.<com.cooliris.media.Util$BackgroundJob: android.os.Handler mHandler>;

        $r1 = r0.<com.cooliris.media.Util$BackgroundJob: java.lang.Runnable mCleanupRunner>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;

     label3:
        $r3 := @caughtexception;

        $r2 = r0.<com.cooliris.media.Util$BackgroundJob: android.os.Handler mHandler>;

        $r1 = r0.<com.cooliris.media.Util$BackgroundJob: java.lang.Runnable mCleanupRunner>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
