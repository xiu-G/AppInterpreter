public class com.yang.longrubblishclear.adapter.DataBaseAdapter extends java.lang.Object
{
    public static final java.lang.String DATABASENAME;
    public static final java.lang.String TABLENAMEAPK;
    public static final java.lang.String date;
    public static final java.lang.String id;
    public static final java.lang.String name;
    public static final java.lang.String packageName;
    public static final java.lang.String path;
    public static final java.lang.String sizeLong;
    public static final java.lang.String sizeStr;
    public static final java.lang.String typeInt;
    public static final java.lang.String typeStr;
    public static final java.lang.String versionCode;
    public static final java.lang.String versionName;
    private java.lang.String[] carriersProjection;
    private android.content.Context context;
    private com.yang.longrubblishclear.adapter.DataBaseHelper helper;
    private android.database.sqlite.SQLiteDatabase sqLiteDatabase;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.String[] $r2;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: com.yang.longrubblishclear.adapter.DataBaseHelper helper> = null;

        r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase> = null;

        $r2 = newarray (java.lang.String)[11];

        $r2[0] = "_id";

        $r2[1] = "name";

        $r2[2] = "sizeLong";

        $r2[3] = "path";

        $r2[4] = "sizeStr";

        $r2[5] = "date";

        $r2[6] = "packageName";

        $r2[7] = "versionName";

        $r2[8] = "versionCode";

        $r2[9] = "typeInt";

        $r2[10] = "typeStr";

        r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String[] carriersProjection> = $r2;

        r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.content.Context context> = $r1;

        return;
    }

    private byte[] getImageBytes(android.graphics.Bitmap)
    {
        java.lang.Throwable r2;
        byte[] $r5;
        java.io.ByteArrayOutputStream r3;
        android.graphics.Bitmap $r1;
        android.graphics.Bitmap$CompressFormat $r4;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: android.graphics.Bitmap;

        r3 = new java.io.ByteArrayOutputStream;

        specialinvoke r3.<java.io.ByteArrayOutputStream: void <init>()>();

        if $r1 == null goto label4;

        $r4 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke $r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r4, 100, r3);

        $r5 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label1:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void close()>();

     label2:
        return $r5;

     label3:
        r2 := @caughtexception;

        return $r5;

     label4:
        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private android.content.pm.PackageInfo getPackageInfo(java.lang.String)
    {
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        java.lang.String $r1;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;
        android.content.pm.PackageInfo $r5;
        java.lang.Exception r2;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.content.Context context>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, 0);

     label2:
        return $r5;

     label3:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void closeDB()
    {
        android.database.sqlite.SQLiteDatabase $r2;
        com.yang.longrubblishclear.adapter.DataBaseHelper $r1;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: com.yang.longrubblishclear.adapter.DataBaseHelper helper>;

        if $r1 == null goto label1;

        $r1 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: com.yang.longrubblishclear.adapter.DataBaseHelper helper>;

        virtualinvoke $r1.<com.yang.longrubblishclear.adapter.DataBaseHelper: void close()>();

     label1:
        $r2 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase>;

        if $r2 == null goto label2;

        $r2 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label2:
        return;
    }

    public long deleteSingleData(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r6;
        long $l1;
        android.database.sqlite.SQLiteDatabase $r3;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r5;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 != null goto label1;

        $r2 = "";

     label1:
        $r3 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase>;

        $r4 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("path");

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=?");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = $r2;

        $i0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r1, $r5, $r6);

        $l1 = (long) $i0;

        return $l1;
    }

    public int deleteTableFromCarriers(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        int $i0;
        java.lang.String $r1;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase>;

        $i0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r1, null, null);

        return $i0;
    }

    public android.database.Cursor getAllDatas(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.String[] $r2;
        java.lang.String $r1;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;
        android.database.Cursor $r3;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase>;

        $r2 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String[] carriersProjection>;

        $r3 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, null, null, null, null, null);

        return $r3;
    }

    public android.database.Cursor getInfoWithPath(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r3, r4;
        android.database.sqlite.SQLiteDatabase $r7;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r2, $r6;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;
        android.database.Cursor $r8;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("path");

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=?");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = newarray (java.lang.String)[1];

        r4[0] = $r2;

        $r7 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase>;

        $r3 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String[] carriersProjection>;

        $r8 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r1, $r3, $r6, r4, null, null, null);

        return $r8;
    }

    public android.database.Cursor getSingleDataWithPackageName(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r3, r4;
        android.database.sqlite.SQLiteDatabase $r7;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r2, $r6;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;
        android.database.Cursor $r8;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("packageName");

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=?");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = newarray (java.lang.String)[1];

        r4[0] = $r2;

        $r7 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase>;

        $r3 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String[] carriersProjection>;

        $r8 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r1, $r3, $r6, r4, null, null, null);

        return $r8;
    }

    public long insertDataToCarriers(java.lang.String, com.yang.longrubblishclear.info.DetailInfo)
    {
        com.yang.longrubblishclear.info.DetailInfo $r2;
        long $l0;
        java.lang.Integer $r6;
        android.database.sqlite.SQLiteDatabase $r7;
        java.lang.Long $r5;
        int $i1;
        java.lang.String $r1, $r4;
        android.content.ContentValues r3;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.yang.longrubblishclear.info.DetailInfo;

        if $r2 == null goto label1;

        r3 = new android.content.ContentValues;

        specialinvoke r3.<android.content.ContentValues: void <init>()>();

        $r4 = virtualinvoke $r2.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getName()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r4);

        $r4 = virtualinvoke $r2.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getPackageName()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("packageName", $r4);

        $r4 = virtualinvoke $r2.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getPath()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("path", $r4);

        $l0 = virtualinvoke $r2.<com.yang.longrubblishclear.info.DetailInfo: long getSizeLong()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("sizeLong", $r5);

        $r4 = virtualinvoke $r2.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getSizeStr()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("sizeStr", $r4);

        $r4 = virtualinvoke $r2.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getVersionName()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("versionName", $r4);

        $i1 = virtualinvoke $r2.<com.yang.longrubblishclear.info.DetailInfo: int getVersionCode()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("versionCode", $r6);

        $i1 = virtualinvoke $r2.<com.yang.longrubblishclear.info.DetailInfo: int getTypeInt()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("typeInt", $r6);

        $r4 = virtualinvoke $r2.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getTypeStr()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("typeStr", $r4);

        $r7 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase>;

        $l0 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r1, null, r3);

        return $l0;

     label1:
        return -1L;
    }

    public void openDB()
    {
        android.content.Context $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        com.yang.longrubblishclear.adapter.DataBaseHelper $r3;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r3 = new com.yang.longrubblishclear.adapter.DataBaseHelper;

        $r1 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.content.Context context>;

        specialinvoke $r3.<com.yang.longrubblishclear.adapter.DataBaseHelper: void <init>(android.content.Context)>($r1);

        r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: com.yang.longrubblishclear.adapter.DataBaseHelper helper> = $r3;

        $r3 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: com.yang.longrubblishclear.adapter.DataBaseHelper helper>;

        $r2 = virtualinvoke $r3.<com.yang.longrubblishclear.adapter.DataBaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase> = $r2;

        return;
    }

    public void updateSingleByPackageName(java.lang.String, java.lang.String)
    {
        android.content.Context $r6;
        java.lang.String[] $r10;
        android.content.pm.PackageInfo $r5;
        java.lang.Integer $r7;
        android.database.sqlite.SQLiteDatabase $r8;
        byte b3;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r11;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;
        boolean $z0;
        android.database.Cursor $r4;
        java.lang.StringBuilder $r9;
        android.content.ContentValues r3;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 == null goto label8;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.Cursor getSingleDataWithPackageName(java.lang.String,java.lang.String)>($r1, $r2);

        if $r4 == null goto label8;

        $r5 = specialinvoke r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.content.pm.PackageInfo getPackageInfo(java.lang.String)>($r2);

     label2:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label3;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return;

     label3:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("typeInt");

        interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i0);

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("versionCode");

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i0);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i1);

        if $r5 == null goto label7;

        $i2 = $r5.<android.content.pm.PackageInfo: int versionCode>;

        if $i0 <= $i2 goto label5;

        b3 = 1;

        $r6 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.content.Context context>;

        $r2 = virtualinvoke $r6.<android.content.Context: java.lang.String getString(int)>(2131230768);

     label4:
        r3 = new android.content.ContentValues;

        specialinvoke r3.<android.content.ContentValues: void <init>()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b3);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("typeInt", $r7);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("typeStr", $r2);

        $r8 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.sqlite.SQLiteDatabase sqLiteDatabase>;

        $r9 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("_id");

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=?");

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.String)[1];

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r10[0] = $r11;

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r1, r3, $r2, $r10);

        goto label2;

     label5:
        $i2 = $r5.<android.content.pm.PackageInfo: int versionCode>;

        if $i0 != $i2 goto label6;

        b3 = 0;

        $r6 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.content.Context context>;

        $r2 = virtualinvoke $r6.<android.content.Context: java.lang.String getString(int)>(2131230769);

        goto label4;

     label6:
        b3 = 3;

        $r6 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.content.Context context>;

        $r2 = virtualinvoke $r6.<android.content.Context: java.lang.String getString(int)>(2131230770);

        goto label4;

     label7:
        b3 = 2;

        $r6 = r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.content.Context context>;

        $r2 = virtualinvoke $r6.<android.content.Context: java.lang.String getString(int)>(2131230771);

        goto label4;

     label8:
        return;
    }

    public long updateSingleData(java.lang.String, com.yang.longrubblishclear.info.DetailInfo)
    {
        com.yang.longrubblishclear.info.DetailInfo $r2, r5;
        long $l0;
        int $i1;
        java.lang.String $r1, $r3;
        com.yang.longrubblishclear.adapter.DataBaseAdapter r0;
        android.database.Cursor $r4;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.adapter.DataBaseAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.yang.longrubblishclear.info.DetailInfo;

        if $r2 == null goto label6;

        $r3 = virtualinvoke $r2.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getPath()>();

        $r4 = virtualinvoke r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: android.database.Cursor getInfoWithPath(java.lang.String,java.lang.String)>($r1, $r3);

        if $r4 != null goto label1;

        $l0 = virtualinvoke r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: long insertDataToCarriers(java.lang.String,com.yang.longrubblishclear.info.DetailInfo)>($r1, $r2);

        return $l0;

     label1:
        r5 = new com.yang.longrubblishclear.info.DetailInfo;

        specialinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void <init>()>();

        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label3;

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

        $r3 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void setName(java.lang.String)>($r3);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("path");

        $r3 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void setPath(java.lang.String)>($r3);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("sizeLong");

        $l0 = interfaceinvoke $r4.<android.database.Cursor: long getLong(int)>($i1);

        virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void setSizeLong(long)>($l0);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("sizeStr");

        $r3 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void setSizeStr(java.lang.String)>($r3);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("date");

        $r3 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void setDate(java.lang.String)>($r3);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("packageName");

        $r3 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void setPackageName(java.lang.String)>($r3);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("versionName");

        $r3 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void setVersionName(java.lang.String)>($r3);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("versionCode");

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i1);

        virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void setVersionCode(int)>($i1);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("typeInt");

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>($i1);

        virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void setTypeInt(int)>($i1);

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("typeStr");

        $r3 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: void setTypeStr(java.lang.String)>($r3);

     label2:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        if r5 == null goto label4;

        $z0 = virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: boolean equalsByPackageName(com.yang.longrubblishclear.info.DetailInfo)>($r2);

        if $z0 == 0 goto label4;

        return -2L;

     label3:
        r5 = null;

        goto label2;

     label4:
        if r5 == null goto label5;

        $r3 = virtualinvoke r5.<com.yang.longrubblishclear.info.DetailInfo: java.lang.String getPath()>();

        virtualinvoke r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: long deleteSingleData(java.lang.String,java.lang.String)>($r1, $r3);

     label5:
        $l0 = virtualinvoke r0.<com.yang.longrubblishclear.adapter.DataBaseAdapter: long insertDataToCarriers(java.lang.String,com.yang.longrubblishclear.info.DetailInfo)>($r1, $r2);

        return $l0;

     label6:
        return -1L;
    }

    public static void <clinit>()
    {
        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String versionName> = "versionName";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String versionCode> = "versionCode";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String typeStr> = "typeStr";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String typeInt> = "typeInt";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String sizeStr> = "sizeStr";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String sizeLong> = "sizeLong";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String path> = "path";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String packageName> = "packageName";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String name> = "name";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String id> = "_id";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String date> = "date";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String TABLENAMEAPK> = "apk_info";

        <com.yang.longrubblishclear.adapter.DataBaseAdapter: java.lang.String DATABASENAME> = "SDCardClear";

        return;
    }
}
