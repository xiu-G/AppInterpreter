public class cn.sharesdk.framework.utils.BitmapHelper extends java.lang.Object
{

    public void <init>()
    {
        cn.sharesdk.framework.utils.BitmapHelper r0;

        r0 := @this: cn.sharesdk.framework.utils.BitmapHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.graphics.Bitmap a(android.graphics.Bitmap, int, boolean)
    {
        int[][] $r11;
        android.graphics.Bitmap$Config $r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        android.graphics.Bitmap $r0;
        java.lang.Class $r9;
        java.lang.Object $r10;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label02;

     label01:
        if $i0 >= 1 goto label03;

        return null;

     label02:
        $r1 = virtualinvoke $r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r0 = virtualinvoke $r0.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r1, 1);

        goto label01;

     label03:
        $i4 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i5 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i1 = $i4 * $i5;

        $r2 = newarray (int)[$i1];

        virtualinvoke $r0.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>($r2, 0, $i4, 0, 0, $i4, $i5);

        $i1 = -1;

        $i6 = $i4 + $i1;

        $i1 = -1;

        $i1 = $i5 + $i1;

        $i3 = $i4 * $i5;

        $i2 = $i0 + $i0;

        $i2 = $i2 + 1;

        $r3 = newarray (int)[$i3];

        $r4 = newarray (int)[$i3];

        $r5 = newarray (int)[$i3];

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        $r6 = newarray (int)[$i3];

        $i3 = $i2 + 1;

        $i3 = $i3 >> 1;

        $i3 = $i3 * $i3;

        $i7 = $i3 * 256;

        $r7 = newarray (int)[$i7];

        $i7 = 0;

     label04:
        $i8 = $i3 * 256;

        if $i7 >= $i8 goto label05;

        $i8 = $i7 / $i3;

        $r7[$i7] = $i8;

        $i7 = $i7 + 1;

        goto label04;

     label05:
        $r8 = newarray (int)[2];

        $r8[0] = $i2;

        $r8[1] = 3;

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r9, $r8);

        $r11 = (int[][]) $r10;

        $i3 = $i0 + 1;

        $i7 = 0;

        $i9 = 0;

        $i8 = 0;

     label06:
        if $i8 >= $i5 goto label14;

        $i10 = 0;

        $i12 = 0;

        $i13 = 0;

        $i14 = 0;

        $i15 = 0;

        $i16 = neg $i0;

        $i17 = 0;

        $i18 = 0;

        $i19 = 0;

        $i11 = 0;

     label07:
        if $i16 > $i0 goto label10;

        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i16, 0);

        $i20 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i20);

        $i20 = $i20 + $i9;

        $i20 = $r2[$i20];

        $i21 = $i16 + $i0;

        $r8 = $r11[$i21];

        $i21 = 16711680 & $i20;

        $i21 = $i21 >> 16;

        $r8[0] = $i21;

        $i21 = 65280;

        $i21 = $i21 & $i20;

        $i21 = $i21 >> 8;

        $r8[1] = $i21;

        $i20 = $i20 & 255;

        $r8[2] = $i20;

        $i20 = staticinvoke <java.lang.Math: int abs(int)>($i16);

        $i20 = $i3 - $i20;

        $i21 = $r8[0];

        $i21 = $i21 * $i20;

        $i19 = $i19 + $i21;

        $i21 = $r8[1];

        $i21 = $i21 * $i20;

        $i18 = $i18 + $i21;

        $i21 = $r8[2];

        $i20 = $i20 * $i21;

        $i17 = $i17 + $i20;

        if $i16 <= 0 goto label09;

        $i20 = $r8[0];

        $i12 = $i12 + $i20;

        $i20 = $r8[1];

        $i11 = $i11 + $i20;

        $i20 = $r8[2];

        $i10 = $i10 + $i20;

     label08:
        $i16 = $i16 + 1;

        goto label07;

     label09:
        $i20 = $r8[0];

        $i15 = $i15 + $i20;

        $i20 = $r8[1];

        $i14 = $i14 + $i20;

        $i20 = $r8[2];

        $i13 = $i13 + $i20;

        goto label08;

     label10:
        $i16 = $i19;

        $i19 = $i18;

        $i20 = $i17;

        $i17 = 0;

        $i18 = $i0;

     label11:
        if $i17 >= $i4 goto label13;

        $i21 = $r7[$i16];

        $r3[$i9] = $i21;

        $i21 = $r7[$i19];

        $r4[$i9] = $i21;

        $i21 = $r7[$i20];

        $r5[$i9] = $i21;

        $i16 = $i16 - $i15;

        $i19 = $i19 - $i14;

        $i20 = $i20 - $i13;

        $i21 = $i18 - $i0;

        $i21 = $i21 + $i2;

        $i21 = $i21 % $i2;

        $r8 = $r11[$i21];

        $i21 = $r8[0];

        $i15 = $i15 - $i21;

        $i21 = $r8[1];

        $i14 = $i14 - $i21;

        $i21 = $r8[2];

        $i13 = $i13 - $i21;

        if $i8 != 0 goto label12;

        $i21 = $i17 + $i0;

        $i21 = $i21 + 1;

        $i21 = staticinvoke <java.lang.Math: int min(int,int)>($i21, $i6);

        $r6[$i17] = $i21;

     label12:
        $i21 = $r6[$i17];

        $i21 = $i21 + $i7;

        $i21 = $r2[$i21];

        $i22 = 16711680 & $i21;

        $i22 = $i22 >> 16;

        $r8[0] = $i22;

        $i22 = 65280;

        $i22 = $i22 & $i21;

        $i22 = $i22 >> 8;

        $r8[1] = $i22;

        $i21 = $i21 & 255;

        $r8[2] = $i21;

        $i21 = $r8[0];

        $i12 = $i12 + $i21;

        $i21 = $r8[1];

        $i11 = $i11 + $i21;

        $i21 = $r8[2];

        $i10 = $i10 + $i21;

        $i16 = $i16 + $i12;

        $i19 = $i19 + $i11;

        $i20 = $i20 + $i10;

        $i18 = $i18 + 1;

        $i18 = $i18 % $i2;

        $i21 = $i18 % $i2;

        $r8 = $r11[$i21];

        $i21 = $r8[0];

        $i15 = $i15 + $i21;

        $i21 = $r8[1];

        $i14 = $i14 + $i21;

        $i21 = $r8[2];

        $i13 = $i13 + $i21;

        $i21 = $r8[0];

        $i12 = $i12 - $i21;

        $i21 = $r8[1];

        $i11 = $i11 - $i21;

        $i21 = $r8[2];

        $i10 = $i10 - $i21;

        $i9 = $i9 + 1;

        $i17 = $i17 + 1;

        goto label11;

     label13:
        $i7 = $i7 + $i4;

        $i8 = $i8 + 1;

        goto label06;

     label14:
        $i6 = 0;

     label15:
        if $i6 >= $i4 goto label24;

        $i12 = 0;

        $i7 = neg $i0;

        $i7 = $i7 * $i4;

        $i13 = 0;

        $i9 = 0;

        $i14 = 0;

        $i10 = 0;

        $i8 = neg $i0;

        $i18 = 0;

        $i17 = 0;

        $i19 = 0;

        $i11 = 0;

     label16:
        if $i8 > $i0 goto label20;

        $i15 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        $i16 = $i15 + $i6;

        $i15 = $i8 + $i0;

        $r8 = $r11[$i15];

        $i15 = $r3[$i16];

        $r8[0] = $i15;

        $i15 = $r4[$i16];

        $r8[1] = $i15;

        $i15 = $r5[$i16];

        $r8[2] = $i15;

        $i15 = staticinvoke <java.lang.Math: int abs(int)>($i8);

        $i20 = $i3 - $i15;

        $i15 = $r3[$i16];

        $i15 = $i15 * $i20;

        $i15 = $i15 + $i19;

        $i19 = $r4[$i16];

        $i19 = $i19 * $i20;

        $i17 = $i19 + $i17;

        $i16 = $r5[$i16];

        $i16 = $i16 * $i20;

        $i18 = $i16 + $i18;

        if $i8 <= 0 goto label19;

        $i16 = $r8[0];

        $i13 = $i13 + $i16;

        $i16 = $r8[1];

        $i11 = $i11 + $i16;

        $i16 = $r8[2];

        $i12 = $i12 + $i16;

     label17:
        if $i8 >= $i1 goto label18;

        $i7 = $i7 + $i4;

     label18:
        $i8 = $i8 + 1;

        $i19 = $i15;

        goto label16;

     label19:
        $i16 = $r8[0];

        $i10 = $i10 + $i16;

        $i16 = $r8[1];

        $i14 = $i14 + $i16;

        $i16 = $r8[2];

        $i9 = $i9 + $i16;

        goto label17;

     label20:
        $i15 = $i17;

        $i17 = $i19;

        $i7 = 0;

        $i8 = $i6;

        $i16 = $i10;

        $i10 = $i0;

     label21:
        if $i7 >= $i5 goto label23;

        $i19 = $r2[$i8];

        $i19 = -16777216 & $i19;

        $i20 = $r7[$i17];

        $i20 = $i20 << 16;

        $i19 = $i19 | $i20;

        $i20 = $r7[$i15];

        $i20 = $i20 << 8;

        $i19 = $i19 | $i20;

        $i20 = $r7[$i18];

        $i19 = $i19 | $i20;

        $r2[$i8] = $i19;

        $i17 = $i17 - $i16;

        $i15 = $i15 - $i14;

        $i18 = $i18 - $i9;

        $i19 = $i10 - $i0;

        $i19 = $i19 + $i2;

        $i19 = $i19 % $i2;

        $r8 = $r11[$i19];

        $i19 = $r8[0];

        $i16 = $i16 - $i19;

        $i19 = $r8[1];

        $i14 = $i14 - $i19;

        $i19 = $r8[2];

        $i9 = $i9 - $i19;

        if $i6 != 0 goto label22;

        $i19 = $i7 + $i3;

        $i19 = staticinvoke <java.lang.Math: int min(int,int)>($i19, $i1);

        $i19 = $i19 * $i4;

        $r6[$i7] = $i19;

     label22:
        $i19 = $r6[$i7];

        $i19 = $i19 + $i6;

        $i20 = $r3[$i19];

        $r8[0] = $i20;

        $i20 = $r4[$i19];

        $r8[1] = $i20;

        $i19 = $r5[$i19];

        $r8[2] = $i19;

        $i19 = $r8[0];

        $i13 = $i13 + $i19;

        $i19 = $r8[1];

        $i11 = $i11 + $i19;

        $i19 = $r8[2];

        $i12 = $i12 + $i19;

        $i17 = $i17 + $i13;

        $i15 = $i15 + $i11;

        $i18 = $i18 + $i12;

        $i10 = $i10 + 1;

        $i10 = $i10 % $i2;

        $r8 = $r11[$i10];

        $i19 = $r8[0];

        $i16 = $i16 + $i19;

        $i19 = $r8[1];

        $i14 = $i14 + $i19;

        $i19 = $r8[2];

        $i9 = $i9 + $i19;

        $i19 = $r8[0];

        $i13 = $i13 - $i19;

        $i19 = $r8[1];

        $i11 = $i11 - $i19;

        $i19 = $r8[2];

        $i12 = $i12 - $i19;

        $i8 = $i8 + $i4;

        $i7 = $i7 + 1;

        goto label21;

     label23:
        $i6 = $i6 + 1;

        goto label15;

     label24:
        virtualinvoke $r0.<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>($r2, 0, $i4, 0, 0, $i4, $i5);

        return $r0;
    }

    private static android.graphics.Bitmap a(java.io.InputStream, int)
    {
        android.graphics.Bitmap $r1;
        int $i0;
        android.graphics.Bitmap$Config $r3;
        java.io.InputStream $r0;
        android.graphics.BitmapFactory$Options $r2;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $r2 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r2.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r3;

        $r2.<android.graphics.BitmapFactory$Options: boolean inPurgeable> = 1;

        $r2.<android.graphics.BitmapFactory$Options: boolean inInputShareable> = 1;

        $r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i0;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r0, null, $r2);

        return $r1;
    }

    public static android.graphics.Bitmap blur(android.graphics.Bitmap, int, int)
    {
        android.graphics.Bitmap$Config $r1;
        android.graphics.Bitmap $r0, $r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.graphics.Canvas $r3;
        android.graphics.Paint $r4;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        $f0 = (float) $i2;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f0 = $f0 + 0.5F;

        $i2 = (int) $f0;

        $f0 = (float) $i3;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f0 = $f0 + 0.5F;

        $i3 = (int) $f0;

        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i2, $i3, $r1);

        $r3 = new android.graphics.Canvas;

        specialinvoke $r3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r2);

        $f0 = (float) $i1;

        $f0 = 1.0F / $f0;

        $f1 = (float) $i1;

        $f1 = 1.0F / $f1;

        virtualinvoke $r3.<android.graphics.Canvas: void scale(float,float)>($f0, $f1);

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        virtualinvoke $r4.<android.graphics.Paint: void setFlags(int)>(2);

        virtualinvoke $r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r0, 0.0F, 0.0F, $r4);

        staticinvoke <cn.sharesdk.framework.utils.BitmapHelper: android.graphics.Bitmap a(android.graphics.Bitmap,int,boolean)>($r2, $i0, 1);

        return $r2;
    }

    public static android.graphics.Bitmap captureView(android.view.View, int, int)
    {
        android.graphics.Bitmap $r2;
        int $i0, $i1;
        android.view.View $r0;
        android.graphics.Canvas $r1;
        android.graphics.Bitmap$Config $r3;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r3);

        $r1 = new android.graphics.Canvas;

        specialinvoke $r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r2);

        virtualinvoke $r0.<android.view.View: void draw(android.graphics.Canvas)>($r1);

        return $r2;
    }

    public static java.lang.String downloadBitmap(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        cn.sharesdk.framework.network.h $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = new cn.sharesdk.framework.network.h;

        specialinvoke $r2.<cn.sharesdk.framework.network.h: void <init>()>();

        $r1 = virtualinvoke $r2.<cn.sharesdk.framework.network.h: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean)>($r0, $r1, "images", 1);

        return $r1;
    }

    public static android.graphics.Bitmap getBitmap(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        android.graphics.Bitmap $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r1 = staticinvoke <cn.sharesdk.framework.utils.BitmapHelper: java.lang.String downloadBitmap(android.content.Context,java.lang.String)>($r0, $r1);

        $r2 = staticinvoke <cn.sharesdk.framework.utils.BitmapHelper: android.graphics.Bitmap getBitmap(java.lang.String)>($r1);

        return $r2;
    }

    public static android.graphics.Bitmap getBitmap(java.io.File, int)
    {
        android.graphics.Bitmap $r2;
        int $i0;
        java.io.FileInputStream $r1;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        $r2 = staticinvoke <cn.sharesdk.framework.utils.BitmapHelper: android.graphics.Bitmap a(java.io.InputStream,int)>($r1, $i0);

        virtualinvoke $r1.<java.io.FileInputStream: void close()>();

        return $r2;
    }

    public static android.graphics.Bitmap getBitmap(java.lang.String)
    {
        java.lang.String $r0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <cn.sharesdk.framework.utils.BitmapHelper: android.graphics.Bitmap getBitmap(java.lang.String,int)>($r0, 1);

        return $r1;
    }

    public static android.graphics.Bitmap getBitmap(java.lang.String, int)
    {
        android.graphics.Bitmap $r1;
        int $i0;
        java.lang.String $r0;
        java.io.File $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r0);

        $r1 = staticinvoke <cn.sharesdk.framework.utils.BitmapHelper: android.graphics.Bitmap getBitmap(java.io.File,int)>($r2, $i0);

        return $r1;
    }

    public static java.lang.String saveViewToImage(android.view.View)
    {
        int $i0, $i1;
        android.view.View $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.view.View: int getHeight()>();

        $r1 = staticinvoke <cn.sharesdk.framework.utils.BitmapHelper: java.lang.String saveViewToImage(android.view.View,int,int)>($r0, $i0, $i1);

        return $r1;
    }

    public static java.lang.String saveViewToImage(android.view.View, int, int)
    {
        android.content.Context $r2;
        java.io.FileOutputStream $r7;
        long $l2;
        java.io.File $r4;
        android.graphics.Bitmap $r1;
        int $i0, $i1;
        android.view.View $r0;
        java.lang.StringBuilder $r5;
        android.graphics.Bitmap$CompressFormat $r8;
        java.lang.String $r3, $r6;

        $r0 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = staticinvoke <cn.sharesdk.framework.utils.BitmapHelper: android.graphics.Bitmap captureView(android.view.View,int,int)>($r0, $i0, $i1);

        $r2 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        $r3 = staticinvoke <cn.sharesdk.framework.utils.R: java.lang.String getCachePath(android.content.Context,java.lang.String)>($r2, "screenshot");

        $r4 = new java.io.File;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jpg");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, $r6);

        $r7 = new java.io.FileOutputStream;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

        $r8 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke $r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r8, 100, $r7);

        virtualinvoke $r7.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

        $r3 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r3;
    }
}
