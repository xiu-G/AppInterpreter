final class com.google.gson.ReflectingFieldNavigator extends java.lang.Object
{
    private static final com.google.gson.Cache fieldsCache;
    private final com.google.gson.ExclusionStrategy exclusionStrategy;

    static void <clinit>()
    {
        com.google.gson.LruCache $r0;

        $r0 = new com.google.gson.LruCache;

        specialinvoke $r0.<com.google.gson.LruCache: void <init>(int)>(500);

        <com.google.gson.ReflectingFieldNavigator: com.google.gson.Cache fieldsCache> = $r0;

        return;
    }

    void <init>(com.google.gson.ExclusionStrategy)
    {
        java.lang.Object $r2;
        com.google.gson.ExclusionStrategy $r1;
        com.google.gson.ReflectingFieldNavigator r0;

        r0 := @this: com.google.gson.ReflectingFieldNavigator;

        $r1 := @parameter0: com.google.gson.ExclusionStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.gson.internal.$Gson$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r1 = (com.google.gson.ExclusionStrategy) $r2;

        r0.<com.google.gson.ReflectingFieldNavigator: com.google.gson.ExclusionStrategy exclusionStrategy> = $r1;

        return;
    }

    private java.util.List getAllFields(java.lang.reflect.Type, java.lang.reflect.Type)
    {
        java.util.Iterator $r8;
        com.google.gson.ReflectingFieldNavigator r0;
        java.lang.reflect.Field r3;
        com.google.gson.FieldAttributes $r11;
        java.util.ArrayList r7;
        com.google.gson.Cache $r4;
        java.lang.reflect.Field[] $r10;
        java.util.List r6;
        java.lang.reflect.Type $r1, $r2;
        int i0, i1;
        java.lang.Object $r5;
        java.lang.Class r9;
        boolean $z0;

        r0 := @this: com.google.gson.ReflectingFieldNavigator;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r4 = <com.google.gson.ReflectingFieldNavigator: com.google.gson.Cache fieldsCache>;

        $r5 = interfaceinvoke $r4.<com.google.gson.Cache: java.lang.Object getElement(java.lang.Object)>($r1);

        r6 = (java.util.List) $r5;

        if r6 != null goto label4;

        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        r6 = specialinvoke r0.<com.google.gson.ReflectingFieldNavigator: java.util.List getInheritanceHierarchy(java.lang.reflect.Type)>($r1);

        $r8 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.Class) $r5;

        $r10 = virtualinvoke r9.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        staticinvoke <java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>($r10, 1);

        i0 = lengthof $r10;

        i1 = 0;

     label2:
        if i1 >= i0 goto label1;

        r3 = $r10[i1];

        $r11 = new com.google.gson.FieldAttributes;

        specialinvoke $r11.<com.google.gson.FieldAttributes: void <init>(java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Type)>(r9, r3, $r2);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r11);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r4 = <com.google.gson.ReflectingFieldNavigator: com.google.gson.Cache fieldsCache>;

        interfaceinvoke $r4.<com.google.gson.Cache: void addElement(java.lang.Object,java.lang.Object)>($r1, r7);

        return r7;

     label4:
        return r6;
    }

    private java.util.List getInheritanceHierarchy(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r1;
        com.google.gson.ReflectingFieldNavigator r0;
        java.lang.Class $r3;
        java.util.ArrayList r2;
        boolean $z0;

        r0 := @this: com.google.gson.ReflectingFieldNavigator;

        $r1 := @parameter0: java.lang.reflect.Type;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r1);

     label1:
        if $r3 == null goto label3;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Object;");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isSynthetic()>();

        if $z0 != 0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3);

     label2:
        $r3 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        return r2;
    }

    void visitFieldsReflectively(com.google.gson.ObjectTypePair, com.google.gson.ObjectNavigator$Visitor)
    {
        com.google.gson.ObjectNavigator$Visitor $r2;
        java.util.Iterator $r7;
        com.google.gson.ReflectingFieldNavigator r0;
        com.google.gson.ObjectTypePair $r1;
        com.google.gson.FieldAttributes r9;
        java.util.List $r6;
        java.lang.reflect.Type $r3, $r5;
        java.lang.Object $r4, $r8;
        java.lang.Class $r11;
        com.google.gson.ExclusionStrategy $r10;
        boolean $z0;

        r0 := @this: com.google.gson.ReflectingFieldNavigator;

        $r1 := @parameter0: com.google.gson.ObjectTypePair;

        $r2 := @parameter1: com.google.gson.ObjectNavigator$Visitor;

        $r3 = virtualinvoke $r1.<com.google.gson.ObjectTypePair: java.lang.reflect.Type getMoreSpecificType()>();

        $r4 = virtualinvoke $r1.<com.google.gson.ObjectTypePair: java.lang.Object getObject()>();

        $r5 = virtualinvoke $r1.<com.google.gson.ObjectTypePair: java.lang.reflect.Type getType()>();

        $r6 = specialinvoke r0.<com.google.gson.ReflectingFieldNavigator: java.util.List getAllFields(java.lang.reflect.Type,java.lang.reflect.Type)>($r3, $r5);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.google.gson.FieldAttributes) $r8;

        $r10 = r0.<com.google.gson.ReflectingFieldNavigator: com.google.gson.ExclusionStrategy exclusionStrategy>;

        $z0 = interfaceinvoke $r10.<com.google.gson.ExclusionStrategy: boolean shouldSkipField(com.google.gson.FieldAttributes)>(r9);

        if $z0 != 0 goto label1;

        $r10 = r0.<com.google.gson.ReflectingFieldNavigator: com.google.gson.ExclusionStrategy exclusionStrategy>;

        $r11 = virtualinvoke r9.<com.google.gson.FieldAttributes: java.lang.Class getDeclaredClass()>();

        $z0 = interfaceinvoke $r10.<com.google.gson.ExclusionStrategy: boolean shouldSkipClass(java.lang.Class)>($r11);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r9.<com.google.gson.FieldAttributes: java.lang.reflect.Type getResolvedType()>();

        $z0 = interfaceinvoke $r2.<com.google.gson.ObjectNavigator$Visitor: boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object)>(r9, $r3, $r4);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <com.google.gson.internal.$Gson$Types: boolean isArray(java.lang.reflect.Type)>($r3);

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<com.google.gson.ObjectNavigator$Visitor: void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object)>(r9, $r3, $r4);

        goto label1;

     label2:
        interfaceinvoke $r2.<com.google.gson.ObjectNavigator$Visitor: void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object)>(r9, $r3, $r4);

        goto label1;

     label3:
        return;
    }
}
