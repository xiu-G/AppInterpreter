public class proguard.shrink.Shrinker extends java.lang.Object
{
    private final proguard.Configuration configuration;

    public void <init>(proguard.Configuration)
    {
        proguard.Configuration $r1;
        proguard.shrink.Shrinker r0;

        r0 := @this: proguard.shrink.Shrinker;

        $r1 := @parameter0: proguard.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.shrink.Shrinker: proguard.Configuration configuration> = $r1;

        return;
    }

    private boolean isFile(java.io.File)
    {
        int $i0;
        java.lang.String $r2;
        proguard.shrink.Shrinker r0;
        java.io.File $r1;

        r0 := @this: proguard.shrink.Shrinker;

        $r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public proguard.classfile.ClassPool execute(proguard.classfile.ClassPool, proguard.classfile.ClassPool) throws java.io.IOException
    {
        proguard.shrink.UsagePrinter $r22;
        proguard.shrink.UsageMarker $r7;
        proguard.classfile.attribute.visitor.AllAttributeVisitor $r11;
        proguard.shrink.Shrinker r0;
        proguard.shrink.ShortestUsageMarker $r18;
        proguard.classfile.ClassPool $r1, $r2;
        proguard.classfile.attribute.visitor.AttributeVisitor[] $r13;
        boolean $z0;
        proguard.shrink.ShortestUsagePrinter $r17;
        proguard.classfile.visitor.ClassPoolFiller $r27;
        proguard.classfile.visitor.ClassVisitor[] $r25;
        proguard.classfile.attribute.visitor.MultiAttributeVisitor $r12;
        proguard.classfile.visitor.ClassCleaner $r6;
        java.util.List $r4;
        proguard.classfile.visitor.ClassPoolVisitor $r8;
        proguard.classfile.visitor.MultiClassVisitor $r24;
        proguard.Configuration $r3;
        proguard.shrink.AnnotationUsageMarker $r15;
        proguard.shrink.InterfaceUsageMarker $r9;
        proguard.shrink.ClassShrinker $r26;
        java.io.BufferedOutputStream $r20;
        java.lang.StringBuffer $r28;
        int $i0, $i1;
        java.lang.String $r29;
        java.io.PrintStream $r16, $r23;
        proguard.shrink.UsedClassFilter $r10;
        java.io.FileOutputStream $r21;
        java.io.IOException $r5;
        proguard.shrink.InnerUsageMarker $r14;
        java.io.File $r19;

        r0 := @this: proguard.shrink.Shrinker;

        $r1 := @parameter0: proguard.classfile.ClassPool;

        $r2 := @parameter1: proguard.classfile.ClassPool;

        $r3 = r0.<proguard.shrink.Shrinker: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List keep>;

        if $r4 != null goto label1;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("You have to specify \'-keep\' options for the shrinking step.");

        throw $r5;

     label1:
        $r6 = new proguard.classfile.visitor.ClassCleaner;

        specialinvoke $r6.<proguard.classfile.visitor.ClassCleaner: void <init>()>();

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r6);

        $r6 = new proguard.classfile.visitor.ClassCleaner;

        specialinvoke $r6.<proguard.classfile.visitor.ClassCleaner: void <init>()>();

        virtualinvoke $r2.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r6);

        $r3 = r0.<proguard.shrink.Shrinker: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List whyAreYouKeeping>;

        if $r4 != null goto label6;

        $r7 = new proguard.shrink.UsageMarker;

        specialinvoke $r7.<proguard.shrink.UsageMarker: void <init>()>();

     label2:
        $r3 = r0.<proguard.shrink.Shrinker: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List keep>;

        $r8 = staticinvoke <proguard.ClassSpecificationVisitorFactory: proguard.classfile.visitor.ClassPoolVisitor createClassPoolVisitor(java.util.List,proguard.classfile.visitor.ClassVisitor,proguard.classfile.visitor.MemberVisitor,boolean,boolean,boolean)>($r4, $r7, $r7, 1, 0, 0);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void accept(proguard.classfile.visitor.ClassPoolVisitor)>($r8);

        virtualinvoke $r2.<proguard.classfile.ClassPool: void accept(proguard.classfile.visitor.ClassPoolVisitor)>($r8);

        $r9 = new proguard.shrink.InterfaceUsageMarker;

        specialinvoke $r9.<proguard.shrink.InterfaceUsageMarker: void <init>(proguard.shrink.UsageMarker)>($r7);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r9);

        $r10 = new proguard.shrink.UsedClassFilter;

        $r11 = new proguard.classfile.attribute.visitor.AllAttributeVisitor;

        $r12 = new proguard.classfile.attribute.visitor.MultiAttributeVisitor;

        $r13 = newarray (proguard.classfile.attribute.visitor.AttributeVisitor)[2];

        $r14 = new proguard.shrink.InnerUsageMarker;

        specialinvoke $r14.<proguard.shrink.InnerUsageMarker: void <init>(proguard.shrink.UsageMarker)>($r7);

        $r13[0] = $r14;

        $r15 = new proguard.shrink.AnnotationUsageMarker;

        specialinvoke $r15.<proguard.shrink.AnnotationUsageMarker: void <init>(proguard.shrink.UsageMarker)>($r7);

        $r13[1] = $r15;

        specialinvoke $r12.<proguard.classfile.attribute.visitor.MultiAttributeVisitor: void <init>(proguard.classfile.attribute.visitor.AttributeVisitor[])>($r13);

        specialinvoke $r11.<proguard.classfile.attribute.visitor.AllAttributeVisitor: void <init>(boolean,proguard.classfile.attribute.visitor.AttributeVisitor)>(1, $r12);

        specialinvoke $r10.<proguard.shrink.UsedClassFilter: void <init>(proguard.shrink.UsageMarker,proguard.classfile.visitor.ClassVisitor)>($r7, $r11);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r10);

        $r3 = r0.<proguard.shrink.Shrinker: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List whyAreYouKeeping>;

        if $r4 == null goto label3;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println()>();

        $r17 = new proguard.shrink.ShortestUsagePrinter;

        $r18 = (proguard.shrink.ShortestUsageMarker) $r7;

        $r3 = r0.<proguard.shrink.Shrinker: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean verbose>;

        specialinvoke $r17.<proguard.shrink.ShortestUsagePrinter: void <init>(proguard.shrink.ShortestUsageMarker,boolean)>($r18, $z0);

        $r3 = r0.<proguard.shrink.Shrinker: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List whyAreYouKeeping>;

        $r8 = staticinvoke <proguard.ClassSpecificationVisitorFactory: proguard.classfile.visitor.ClassPoolVisitor createClassPoolVisitor(java.util.List,proguard.classfile.visitor.ClassVisitor,proguard.classfile.visitor.MemberVisitor)>($r4, $r17, $r17);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void accept(proguard.classfile.visitor.ClassPoolVisitor)>($r8);

        virtualinvoke $r2.<proguard.classfile.ClassPool: void accept(proguard.classfile.visitor.ClassPoolVisitor)>($r8);

     label3:
        $r3 = r0.<proguard.shrink.Shrinker: proguard.Configuration configuration>;

        $r19 = $r3.<proguard.Configuration: java.io.File printUsage>;

        if $r19 == null goto label5;

        $r3 = r0.<proguard.shrink.Shrinker: proguard.Configuration configuration>;

        $r19 = $r3.<proguard.Configuration: java.io.File printUsage>;

        $z0 = specialinvoke r0.<proguard.shrink.Shrinker: boolean isFile(java.io.File)>($r19);

        if $z0 == 0 goto label7;

        $r16 = new java.io.PrintStream;

        $r20 = new java.io.BufferedOutputStream;

        $r21 = new java.io.FileOutputStream;

        $r3 = r0.<proguard.shrink.Shrinker: proguard.Configuration configuration>;

        $r19 = $r3.<proguard.Configuration: java.io.File printUsage>;

        specialinvoke $r21.<java.io.FileOutputStream: void <init>(java.io.File)>($r19);

        specialinvoke $r20.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r21);

        specialinvoke $r16.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r20);

     label4:
        $r22 = new proguard.shrink.UsagePrinter;

        specialinvoke $r22.<proguard.shrink.UsagePrinter: void <init>(proguard.shrink.UsageMarker,boolean,java.io.PrintStream)>($r7, 1, $r16);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAcceptAlphabetically(proguard.classfile.visitor.ClassVisitor)>($r22);

        $r23 = <java.lang.System: java.io.PrintStream out>;

        if $r16 == $r23 goto label5;

        virtualinvoke $r16.<java.io.PrintStream: void close()>();

     label5:
        $i0 = virtualinvoke $r1.<proguard.classfile.ClassPool: int size()>();

        $r2 = new proguard.classfile.ClassPool;

        specialinvoke $r2.<proguard.classfile.ClassPool: void <init>()>();

        $r10 = new proguard.shrink.UsedClassFilter;

        $r24 = new proguard.classfile.visitor.MultiClassVisitor;

        $r25 = newarray (proguard.classfile.visitor.ClassVisitor)[2];

        $r26 = new proguard.shrink.ClassShrinker;

        specialinvoke $r26.<proguard.shrink.ClassShrinker: void <init>(proguard.shrink.UsageMarker)>($r7);

        $r25[0] = $r26;

        $r27 = new proguard.classfile.visitor.ClassPoolFiller;

        specialinvoke $r27.<proguard.classfile.visitor.ClassPoolFiller: void <init>(proguard.classfile.ClassPool)>($r2);

        $r25[1] = $r27;

        specialinvoke $r24.<proguard.classfile.visitor.MultiClassVisitor: void <init>(proguard.classfile.visitor.ClassVisitor[])>($r25);

        specialinvoke $r10.<proguard.shrink.UsedClassFilter: void <init>(proguard.shrink.UsageMarker,proguard.classfile.visitor.ClassVisitor)>($r7, $r24);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r10);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void clear()>();

        $i1 = virtualinvoke $r2.<proguard.classfile.ClassPool: int size()>();

        if $i1 != 0 goto label8;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("The output jar is empty. Did you specify the proper \'-keep\' options?");

        throw $r5;

     label6:
        $r18 = new proguard.shrink.ShortestUsageMarker;

        specialinvoke $r18.<proguard.shrink.ShortestUsageMarker: void <init>()>();

        $r7 = $r18;

        goto label2;

     label7:
        $r16 = <java.lang.System: java.io.PrintStream out>;

        goto label4;

     label8:
        $r3 = r0.<proguard.shrink.Shrinker: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label9;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("Removing unused program classes and class elements...");

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Original number of program classes: ");

        $r28 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Final number of program classes:    ");

        $r28 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r29);

     label9:
        return $r2;
    }
}
