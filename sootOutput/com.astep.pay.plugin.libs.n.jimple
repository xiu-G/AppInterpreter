public final class com.astep.pay.plugin.libs.n extends com.astep.pay.plugin.libs.i
{
    public static java.lang.String a;
    public static java.lang.String b;
    private static final java.lang.String c;
    private static final boolean d;
    private static final boolean e;
    private android.content.Context f;
    private java.lang.Object g;
    private java.lang.Object h;
    private java.lang.String i;
    private com.astep.pay.plugin.libs.l j;
    private int k;

    static void <clinit>()
    {
        <com.astep.pay.plugin.libs.n: java.lang.String c> = "ProtocolThread";

        <com.astep.pay.plugin.libs.n: java.lang.String a> = "";

        <com.astep.pay.plugin.libs.n: java.lang.String b> = "";

        return;
    }

    public void <init>(android.content.Context, com.astep.pay.plugin.libs.l, java.lang.String, int, java.lang.Object, java.lang.Object)
    {
        com.astep.pay.plugin.libs.n r0;
        android.content.Context $r1;
        com.astep.pay.plugin.libs.l $r2;
        int $i0;
        java.lang.Object $r4, $r5;
        java.lang.String $r3;

        r0 := @this: com.astep.pay.plugin.libs.n;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.astep.pay.plugin.libs.l;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.Object;

        $r5 := @parameter5: java.lang.Object;

        specialinvoke r0.<com.astep.pay.plugin.libs.i: void <init>()>();

        r0.<com.astep.pay.plugin.libs.n: java.lang.Object g> = null;

        r0.<com.astep.pay.plugin.libs.n: android.content.Context f> = $r1;

        r0.<com.astep.pay.plugin.libs.n: java.lang.Object g> = $r4;

        r0.<com.astep.pay.plugin.libs.n: java.lang.Object h> = $r5;

        r0.<com.astep.pay.plugin.libs.n: java.lang.String i> = "http://leyifu.astep.cn:9000/versionpatch";

        r0.<com.astep.pay.plugin.libs.n: com.astep.pay.plugin.libs.l j> = $r2;

        r0.<com.astep.pay.plugin.libs.n: int k> = $i0;

        return;
    }

    private static java.lang.String a(java.lang.String)
    {
        byte[] $r1, $r3;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r4;
        java.lang.Exception $r6;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r5;

        $r0 := @parameter0: java.lang.String;

     label01:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label02:
        if $i0 > 0 goto label12;

        $r1 = null;

     label03:
        $r2 = new javax.crypto.spec.SecretKeySpec;

        $r0 = <com.astep.pay.plugin.libs.n: java.lang.String a>;

     label04:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

     label05:
        $r0 = <com.astep.pay.plugin.libs.n: java.lang.String b>;

     label06:
        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0);

     label07:
        $r0 = <com.astep.pay.plugin.libs.n: java.lang.String b>;

     label08:
        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r0);

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r2);

        $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label09:
        $r0 = new java.lang.String;

     label10:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r1);

     label11:
        return $r0;

     label12:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label13:
        $i0 = $i0 / 2;

     label14:
        $r1 = newarray (byte)[$i0];

     label15:
        $i0 = 0;

     label16:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label17:
        $i1 = $i1 / 2;

        if $i0 >= $i1 goto label03;

        $i1 = $i0 * 2;

        $i2 = $i0 * 2;

        $i2 = $i2 + 1;

     label18:
        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r5, 16);

     label19:
        $i2 = $i0 * 2;

        $i2 = $i2 + 1;

        $i3 = $i0 * 2;

        $i3 = $i3 + 2;

     label20:
        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r5, 16);

     label21:
        $i1 = $i1 * 16;

        $i1 = $i1 + $i2;

        $b4 = (byte) $i1;

     label22:
        $r1[$i0] = $b4;

     label23:
        $i0 = $i0 + 1;

        goto label16;

     label24:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label01 to label02 with label24;
        catch java.lang.Exception from label04 to label05 with label24;
        catch java.lang.Exception from label06 to label07 with label24;
        catch java.lang.Exception from label08 to label09 with label24;
        catch java.lang.Exception from label10 to label11 with label24;
        catch java.lang.Exception from label12 to label13 with label24;
        catch java.lang.Exception from label14 to label15 with label24;
        catch java.lang.Exception from label16 to label17 with label24;
        catch java.lang.Exception from label18 to label19 with label24;
        catch java.lang.Exception from label20 to label21 with label24;
        catch java.lang.Exception from label22 to label23 with label24;
    }

    private static java.lang.String a(byte[])
    {
        byte[] $r0;
        byte $b2;
        java.lang.StringBuffer $r1, $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r5;
        java.lang.String $r3;

        $r0 := @parameter0: byte[];

        $r4 = new java.lang.StringBuffer;

        $r1 = $r4;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $b2 = $r0[$i0];

        $i1 = (int) $b2;

        $i1 = $i1 >> 4;

        $i1 = $i1 & 15;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $b2 = $r0[$i0];

        $b2 = $b2 & 15;

        $i1 = (int) $b2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private static byte[] b(java.lang.String)
    {
        byte[] $r1;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 > 0 goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i0 = 0;

     label2:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 / 2;

        if $i0 >= $i1 goto label3;

        $i1 = $i0 * 2;

        $i2 = $i0 * 2;

        $i2 = $i2 + 1;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        $i2 = $i0 * 2;

        $i2 = $i2 + 1;

        $i3 = $i0 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        $i1 = $i1 * 16;

        $i1 = $i1 + $i2;

        $b4 = (byte) $i1;

        $r1[$i0] = $b4;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return $r1;
    }

    public final void run()
    {
        java.lang.Throwable $r17, $r18;
        android.content.Context $r1;
        java.util.HashMap $r9;
        com.astep.pay.plugin.libs.n r0;
        org.json.JSONException $r16;
        org.json.JSONObject $r15, $r21;
        java.lang.StringBuffer $r11, $r19;
        com.astep.pay.plugin.libs.l $r8;
        int $i0, $i1;
        java.lang.String $r10;
        android.net.NetworkInfo[] $r4;
        boolean $z0, $z1;
        android.net.ConnectivityManager $r3;
        java.lang.IllegalAccessException $r23;
        java.util.Iterator $r13;
        android.net.NetworkInfo $r5;
        java.util.Set $r12;
        android.net.NetworkInfo$State $r6, $r7;
        java.lang.IllegalArgumentException $r22;
        java.lang.Object $r2;
        java.lang.StringBuilder $r14, $r20;

        r0 := @this: com.astep.pay.plugin.libs.n;

        $z0 = 1;

        $r1 = r0.<com.astep.pay.plugin.libs.n: android.content.Context f>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r3 = (android.net.ConnectivityManager) $r2;

        if $r3 == null goto label04;

        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>();

        if $r4 == null goto label04;

        $i0 = lengthof $r4;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label04;

        $r5 = $r4[$i1];

        $r6 = virtualinvoke $r5.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r7 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r6 != $r7 goto label03;

        $z1 = 1;

     label02:
        if $z1 != 0 goto label05;

        $r8 = r0.<com.astep.pay.plugin.libs.n: com.astep.pay.plugin.libs.l j>;

        $i0 = r0.<com.astep.pay.plugin.libs.n: int k>;

        interfaceinvoke $r8.<com.astep.pay.plugin.libs.l: void a(int)>($i0);

        return;

     label03:
        $i1 = $i1 + 1;

        goto label01;

     label04:
        $z1 = 0;

        goto label02;

     label05:
        $z1 = virtualinvoke r0.<com.astep.pay.plugin.libs.n: boolean a()>();

        if $z1 != 0 goto label17;

        $r2 = r0.<com.astep.pay.plugin.libs.n: java.lang.Object g>;

        $r9 = staticinvoke <com.astep.pay.plugin.libs.m: java.util.HashMap a(java.lang.Object)>($r2);

        $r10 = r0.<com.astep.pay.plugin.libs.n: java.lang.String i>;

        $r19 = new java.lang.StringBuffer;

        $r11 = $r19;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(java.lang.String)>($r10);

        if $r9 == null goto label08;

        $r12 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r2 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.String) $r2;

        if $z0 == 0 goto label07;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("?");

        $r14 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r2 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $z0 = 0;

        goto label06;

     label07:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("&");

        $r14 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r2 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        goto label06;

     label08:
        $r10 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = staticinvoke <com.astep.pay.plugin.libs.k: java.lang.String a(java.lang.String)>($r10);

        if $r10 != null goto label09;

        $r8 = r0.<com.astep.pay.plugin.libs.n: com.astep.pay.plugin.libs.l j>;

        $i0 = r0.<com.astep.pay.plugin.libs.n: int k>;

        interfaceinvoke $r8.<com.astep.pay.plugin.libs.l: void a(int)>($i0);

        return;

     label09:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("back res");

        $r14 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = new org.json.JSONObject;

        $r15 = $r21;

     label10:
        specialinvoke $r21.<org.json.JSONObject: void <init>(java.lang.String)>($r10);

     label11:
        $r2 = r0.<com.astep.pay.plugin.libs.n: java.lang.Object h>;

     label12:
        staticinvoke <com.astep.pay.plugin.libs.m: void a(org.json.JSONObject,java.lang.Object)>($r15, $r2);

     label13:
        $z0 = virtualinvoke r0.<com.astep.pay.plugin.libs.n: boolean a()>();

        if $z0 != 0 goto label17;

        $r8 = r0.<com.astep.pay.plugin.libs.n: com.astep.pay.plugin.libs.l j>;

        if $r8 == null goto label17;

        $r8 = r0.<com.astep.pay.plugin.libs.n: com.astep.pay.plugin.libs.l j>;

        $i0 = r0.<com.astep.pay.plugin.libs.n: int k>;

        $r2 = r0.<com.astep.pay.plugin.libs.n: java.lang.Object h>;

        interfaceinvoke $r8.<com.astep.pay.plugin.libs.l: void a(int,java.lang.Object)>($i0, $r2);

        return;

     label14:
        $r16 := @caughtexception;

        $r8 = r0.<com.astep.pay.plugin.libs.n: com.astep.pay.plugin.libs.l j>;

        $i0 = r0.<com.astep.pay.plugin.libs.n: int k>;

        interfaceinvoke $r8.<com.astep.pay.plugin.libs.l: void a(int)>($i0);

        virtualinvoke $r16.<org.json.JSONException: void printStackTrace()>();

        return;

     label15:
        $r17 := @caughtexception;

        $r8 = r0.<com.astep.pay.plugin.libs.n: com.astep.pay.plugin.libs.l j>;

        $i0 = r0.<com.astep.pay.plugin.libs.n: int k>;

        interfaceinvoke $r8.<com.astep.pay.plugin.libs.l: void a(int)>($i0);

        $r22 = (java.lang.IllegalArgumentException) $r17;

        virtualinvoke $r22.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return;

     label16:
        $r18 := @caughtexception;

        $r8 = r0.<com.astep.pay.plugin.libs.n: com.astep.pay.plugin.libs.l j>;

        $i0 = r0.<com.astep.pay.plugin.libs.n: int k>;

        interfaceinvoke $r8.<com.astep.pay.plugin.libs.l: void a(int)>($i0);

        $r23 = (java.lang.IllegalAccessException) $r18;

        virtualinvoke $r23.<java.lang.IllegalAccessException: void printStackTrace()>();

     label17:
        return;

        catch org.json.JSONException from label10 to label11 with label14;
        catch java.lang.IllegalArgumentException from label12 to label13 with label15;
        catch java.lang.IllegalAccessException from label12 to label13 with label16;
    }
}
