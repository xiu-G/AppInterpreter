public final class se.runstar.provider.c extends java.lang.Object
{
    private static se.runstar.provider.c d;
    private se.runstar.provider.b a;
    private android.database.sqlite.SQLiteDatabase b;
    private final android.content.Context c;

    static void <clinit>()
    {
        <se.runstar.provider.c: se.runstar.provider.c d> = null;

        return;
    }

    private void <init>(android.content.Context)
    {
        android.content.Context $r1;
        se.runstar.provider.c r0;

        r0 := @this: se.runstar.provider.c;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<se.runstar.provider.c: android.content.Context c> = $r1;

        return;
    }

    public static se.runstar.provider.c a(android.content.Context)
    {
        android.content.Context $r0;
        se.runstar.provider.c $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = <se.runstar.provider.c: se.runstar.provider.c d>;

        if $r1 != null goto label1;

        $r1 = new se.runstar.provider.c;

        specialinvoke $r1.<se.runstar.provider.c: void <init>(android.content.Context)>($r0);

        <se.runstar.provider.c: se.runstar.provider.c d> = $r1;

        return $r1;

     label1:
        $r1 = <se.runstar.provider.c: se.runstar.provider.c d>;

        return $r1;
    }

    private int b(long)
    {
        long $l0;
        float[] $r1;
        java.lang.String[] $r2;
        byte $b2;
        int $i1;
        java.lang.String $r4;
        android.database.Cursor $r5;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        se.runstar.provider.c r0;
        float $f0, $f1;
        java.lang.StringBuilder $r3, $r6;

        r0 := @this: se.runstar.provider.c;

        $l0 := @parameter0: long;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "longitude";

        $r2[1] = "latitude";

        $r2[2] = "accuracy";

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runningworkout_id = ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<se.runstar.provider.c: android.database.Cursor a(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, $r4, null, "time");

        $f0 = 0.0F;

        $r1 = newarray (float)[1];

        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label4;

        $f0 = 0.0F;

        $d0 = 0.0;

        $d1 = 0.0;

     label1:
        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("longitude");

        $d2 = interfaceinvoke $r5.<android.database.Cursor: double getDouble(int)>($i1);

        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("latitude");

        $d3 = interfaceinvoke $r5.<android.database.Cursor: double getDouble(int)>($i1);

        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("accuracy");

        $f1 = interfaceinvoke $r5.<android.database.Cursor: float getFloat(int)>($i1);

        $b2 = $f1 cmpg 50.0F;

        $i1 = (int) $b2;

        if $i1 > 0 goto label3;

        $b2 = $d0 cmpl 0.0;

        if $b2 == 0 goto label2;

        $b2 = $d1 cmpl 0.0;

        if $b2 == 0 goto label2;

        staticinvoke <android.location.Location: void distanceBetween(double,double,double,double,float[])>($d0, $d1, $d3, $d2, $r1);

        $f1 = $r1[0];

        $f0 = $f1 + $f0;

     label2:
        $d0 = $d3;

        $d1 = $d2;

     label3:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label1;

     label4:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        $i1 = (int) $f0;

        return $i1;
    }

    public final int a(long)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        se.runstar.provider.c r0;
        int $i1;
        long $l0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: se.runstar.provider.c;

        $l0 := @parameter0: long;

        $r1 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runningworkout_id = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("locations", $r3, null);

        $r1 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("running_workouts", $r3, null);

        return $i1;
    }

    public final long a(long, android.content.ContentValues)
    {
        se.runstar.provider.c r0;
        java.lang.Long $r2;
        long $l0;
        android.content.ContentValues $r1;

        r0 := @this: se.runstar.provider.c;

        $l0 := @parameter0: long;

        $r1 := @parameter1: android.content.ContentValues;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("runningworkout_id", $r2);

        $l0 = virtualinvoke r0.<se.runstar.provider.c: long a(android.content.ContentValues)>($r1);

        return $l0;
    }

    public final long a(android.content.ContentValues)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        se.runstar.provider.c r0;
        long $l0;
        android.content.ContentValues $r1;

        r0 := @this: se.runstar.provider.c;

        $r1 := @parameter0: android.content.ContentValues;

        $r2 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $l0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("locations", null, $r1);

        return $l0;
    }

    public final android.database.Cursor a(java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r6;
        se.runstar.provider.c r0;
        java.lang.String[] $r1, $r3;
        java.lang.String $r2, $r4;
        android.database.Cursor $r5;

        r0 := @this: se.runstar.provider.c;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r4 := @parameter3: java.lang.String;

        $r6 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r5 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("locations", $r1, $r2, $r3, null, null, $r4);

        return $r5;
    }

    public final se.runstar.provider.c a()
    {
        android.content.Context $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        se.runstar.provider.c r0;
        se.runstar.provider.b $r3;

        r0 := @this: se.runstar.provider.c;

        $r3 = new se.runstar.provider.b;

        $r1 = r0.<se.runstar.provider.c: android.content.Context c>;

        specialinvoke $r3.<se.runstar.provider.b: void <init>(android.content.Context)>($r1);

        r0.<se.runstar.provider.c: se.runstar.provider.b a> = $r3;

        $r3 = r0.<se.runstar.provider.c: se.runstar.provider.b a>;

        $r2 = virtualinvoke $r3.<se.runstar.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b> = $r2;

        return r0;
    }

    public final boolean a(long, long)
    {
        se.runstar.provider.c r0;
        long $l0, $l1;
        android.database.sqlite.SQLiteDatabase $r3;
        byte $b3;
        java.lang.Long $r2;
        int $i2;
        java.lang.StringBuilder $r4;
        android.content.ContentValues $r1;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: se.runstar.provider.c;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = new android.content.ContentValues;

        specialinvoke $r1.<android.content.ContentValues: void <init>()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("local_id", $r2);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("remote_id", $r2);

        $r3 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("local_id = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("running_workouts_sync", $r1, $r5, null);

        if $i2 != 1 goto label1;

        return 1;

     label1:
        $r3 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $l1 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("running_workouts_sync", null, $r1);

        $b3 = $l1 cmp -1L;

        if $b3 == 0 goto label3;

        $z0 = 1;

     label2:
        if $z0 != 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("running workout id mapping failed: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Runstar", $r5);

        return $z0;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return $z0;
    }

    public final int b()
    {
        int $i0;
        android.database.sqlite.SQLiteDatabase $r1;
        se.runstar.provider.c r0;

        r0 := @this: se.runstar.provider.c;

        $r1 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $i0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("locations", null, null);

        return $i0;
    }

    public final int b(long, android.content.ContentValues)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        se.runstar.provider.c r0;
        int $i1;
        long $l0;
        java.lang.StringBuilder $r3;
        android.content.ContentValues $r1;
        java.lang.String $r4;

        r0 := @this: se.runstar.provider.c;

        $l0 := @parameter0: long;

        $r1 := @parameter1: android.content.ContentValues;

        $r2 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id = ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("running_workouts", $r1, $r4, null);

        return $i1;
    }

    public final long b(android.content.ContentValues)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        se.runstar.provider.c r0;
        byte $b1;
        long $l0;
        android.content.ContentValues $r1;

        r0 := @this: se.runstar.provider.c;

        $r1 := @parameter0: android.content.ContentValues;

        $r2 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $l0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("running_workouts", null, $r1);

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Runstar", "createRunningWorkout() create running workout failed");

     label1:
        return $l0;
    }

    public final android.database.Cursor b(java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r6;
        se.runstar.provider.c r0;
        java.lang.String[] $r1, $r3;
        java.lang.String $r2, $r4;
        android.database.Cursor $r5;

        r0 := @this: se.runstar.provider.c;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r4 := @parameter3: java.lang.String;

        $r6 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r5 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("running_workouts LEFT OUTER JOIN running_workouts_sync ON _id = local_id", $r1, $r2, $r3, null, null, $r4);

        return $r5;
    }

    public final int c()
    {
        int $i0;
        android.database.sqlite.SQLiteDatabase $r1;
        se.runstar.provider.c r0;

        r0 := @this: se.runstar.provider.c;

        $r1 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $i0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("running_workouts", null, null);

        return $i0;
    }

    public final android.database.Cursor c(java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r6;
        se.runstar.provider.c r0;
        java.lang.String[] $r1, $r3;
        java.lang.String $r2, $r4;
        android.database.Cursor $r5;

        r0 := @this: se.runstar.provider.c;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r4 := @parameter3: java.lang.String;

        $r6 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r5 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("running_workouts", $r1, $r2, $r3, "month", null, $r4);

        return $r5;
    }

    public final boolean c(android.content.ContentValues)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        se.runstar.provider.c r0;
        byte $b1;
        long $l0;
        android.content.ContentValues $r1;

        r0 := @this: se.runstar.provider.c;

        $r1 := @parameter0: android.content.ContentValues;

        $r2 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $l0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("running_workouts_sync", null, $r1);

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final void d()
    {
        android.content.SharedPreferences$Editor $r13;
        android.content.Context $r1;
        java.lang.Float $r12;
        java.lang.String[] $r4;
        long $l1, $l2, $l3;
        java.lang.Integer $r7;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.Long $r11;
        int $i0;
        java.lang.String $r9;
        boolean $z0, $z1;
        android.database.Cursor $r5, $r10;
        se.runstar.provider.c r0;
        android.content.SharedPreferences $r2;
        float $f0, $f1;
        java.lang.StringBuilder $r8;
        android.content.ContentValues $r6;

        r0 := @this: se.runstar.provider.c;

        $r1 = r0.<se.runstar.provider.c: android.content.Context c>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("runstar", 0);

        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("storage_recalculate", 0);

        $r3 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "_id";

        $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("running_workouts", $r4, "mode is null and pause_duration is null", null, null, null, null);

        $z1 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label2;

     label1:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $l1 = interfaceinvoke $r5.<android.database.Cursor: long getLong(int)>($i0);

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("mode", $r7);

        virtualinvoke r0.<se.runstar.provider.c: int b(long,android.content.ContentValues)>($l1, $r6);

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("pause_duration", $r7);

        virtualinvoke r0.<se.runstar.provider.c: int b(long,android.content.ContentValues)>($l1, $r6);

        $z1 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

        if $z1 != 0 goto label1;

     label2:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        $r3 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "_id";

        $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("running_workouts", $r4, "mode != 1 and distance <= 0", null, null, null, null);

        $z1 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label6;

     label3:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $l1 = interfaceinvoke $r5.<android.database.Cursor: long getLong(int)>($i0);

        $l2 = 0L;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "time";

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runningworkout_id = ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<se.runstar.provider.c: android.database.Cursor a(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r4, $r9, null, "time");

        $i0 = interfaceinvoke $r10.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label4;

        interfaceinvoke $r10.<android.database.Cursor: boolean moveToFirst()>();

        $i0 = interfaceinvoke $r10.<android.database.Cursor: int getColumnIndex(java.lang.String)>("time");

        $l2 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>($i0);

        interfaceinvoke $r10.<android.database.Cursor: boolean moveToLast()>();

        $i0 = interfaceinvoke $r10.<android.database.Cursor: int getColumnIndex(java.lang.String)>("time");

        $l3 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>($i0);

        $l2 = $l3 - $l2;

     label4:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

        $i0 = (int) $l2;

        $l2 = (long) $i0;

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("duration", $r11);

        virtualinvoke r0.<se.runstar.provider.c: int b(long,android.content.ContentValues)>($l1, $r6);

        $i0 = specialinvoke r0.<se.runstar.provider.c: int b(long)>($l1);

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("distance", $r7);

        virtualinvoke r0.<se.runstar.provider.c: int b(long,android.content.ContentValues)>($l1, $r6);

        $f0 = 0.0F;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "distance";

        $r4[1] = "duration";

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id = ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<se.runstar.provider.c: android.database.Cursor b(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r4, $r9, null, null);

        $z1 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label5;

        $i0 = interfaceinvoke $r10.<android.database.Cursor: int getColumnIndex(java.lang.String)>("distance");

        $i0 = interfaceinvoke $r10.<android.database.Cursor: int getInt(int)>($i0);

        $f0 = (float) $i0;

        $i0 = interfaceinvoke $r10.<android.database.Cursor: int getColumnIndex(java.lang.String)>("duration");

        $i0 = interfaceinvoke $r10.<android.database.Cursor: int getInt(int)>($i0);

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

     label5:
        interfaceinvoke $r10.<android.database.Cursor: void close()>();

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>("average_speed", $r12);

        virtualinvoke r0.<se.runstar.provider.c: int b(long,android.content.ContentValues)>($l1, $r6);

        $z1 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

        if $z1 != 0 goto label3;

     label6:
        if $z0 == 0 goto label7;

        $r1 = r0.<se.runstar.provider.c: android.content.Context c>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("runstar", 0);

        $r13 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r13.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("storage_recalculate", 0);

        interfaceinvoke $r13.<android.content.SharedPreferences$Editor: boolean commit()>();

     label7:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return;
    }

    public final android.database.Cursor e()
    {
        android.database.sqlite.SQLiteDatabase $r2;
        se.runstar.provider.c r0;
        java.lang.String[] $r3;
        android.database.Cursor $r1;

        r0 := @this: se.runstar.provider.c;

        $r2 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "_id";

        $r1 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("running_workouts LEFT OUTER JOIN running_workouts_sync ON _id = local_id", $r3, "(remote_id is null or remote_id = 0) and duration > 0 and (description is null or description != \'SAMPLE\')", null, null, null, null);

        return $r1;
    }

    public final void f()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        se.runstar.provider.c r0;

        r0 := @this: se.runstar.provider.c;

        $r1 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("running_workouts_sync", null, null);

        return;
    }

    public final void g()
    {
        se.runstar.provider.c r0;
        java.lang.String[] $r2;
        long $l1, $l2;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        android.database.Cursor $r3;
        boolean $z0;

        r0 := @this: se.runstar.provider.c;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "_id";

        $r2[1] = "remote_id";

        $r3 = virtualinvoke r0.<se.runstar.provider.c: android.database.Cursor b(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, null, null, null);

        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Runstar", "RUNNING WORKOUT SYNC STATUS");

     label1:
        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $l1 = interfaceinvoke $r3.<android.database.Cursor: long getLong(int)>($i0);

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("remote_id");

        $l2 = interfaceinvoke $r3.<android.database.Cursor: long getLong(int)>($i0);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" synced with ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Runstar", $r4);

        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label1;

     label2:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return;
    }

    public final android.database.Cursor h()
    {
        android.database.sqlite.SQLiteDatabase $r2;
        se.runstar.provider.c r0;
        java.lang.String[] $r3;
        android.database.Cursor $r1;

        r0 := @this: se.runstar.provider.c;

        $r2 = r0.<se.runstar.provider.c: android.database.sqlite.SQLiteDatabase b>;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "local_id";

        $r3[1] = "remote_id";

        $r1 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("running_workouts_sync", $r3, null, null, null, null, null);

        return $r1;
    }
}
