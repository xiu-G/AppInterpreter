public class proguard.io.JarReader extends java.lang.Object implements proguard.io.DataEntryReader
{
    private final proguard.io.DataEntryReader dataEntryReader;

    public void <init>(proguard.io.DataEntryReader)
    {
        proguard.io.JarReader r0;
        proguard.io.DataEntryReader $r1;

        r0 := @this: proguard.io.JarReader;

        $r1 := @parameter0: proguard.io.DataEntryReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.io.JarReader: proguard.io.DataEntryReader dataEntryReader> = $r1;

        return;
    }

    public void read(proguard.io.DataEntry) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        java.util.zip.ZipInputStream $r4;
        proguard.io.JarReader r0;
        proguard.io.ZipDataEntry $r3;
        proguard.io.DataEntry $r1;
        proguard.io.DataEntryReader $r2;
        java.util.zip.ZipEntry $r6;
        java.io.InputStream $r5;

        r0 := @this: proguard.io.JarReader;

        $r1 := @parameter0: proguard.io.DataEntry;

        $r4 = new java.util.zip.ZipInputStream;

        $r5 = interfaceinvoke $r1.<proguard.io.DataEntry: java.io.InputStream getInputStream()>();

        specialinvoke $r4.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>($r5);

     label1:
        $r6 = virtualinvoke $r4.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

     label2:
        if $r6 != null goto label3;

        interfaceinvoke $r1.<proguard.io.DataEntry: void closeInputStream()>();

        return;

     label3:
        $r2 = r0.<proguard.io.JarReader: proguard.io.DataEntryReader dataEntryReader>;

        $r3 = new proguard.io.ZipDataEntry;

        specialinvoke $r3.<proguard.io.ZipDataEntry: void <init>(proguard.io.DataEntry,java.util.zip.ZipEntry,java.util.zip.ZipInputStream)>($r1, $r6, $r4);

        interfaceinvoke $r2.<proguard.io.DataEntryReader: void read(proguard.io.DataEntry)>($r3);

     label4:
        goto label1;

     label5:
        $r7 := @caughtexception;

        interfaceinvoke $r1.<proguard.io.DataEntry: void closeInputStream()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
