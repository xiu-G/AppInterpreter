public class proguard.classfile.visitor.ExceptionHandlerConstantVisitor extends java.lang.Object implements proguard.classfile.attribute.visitor.ExceptionInfoVisitor
{
    private final proguard.classfile.constant.visitor.ConstantVisitor constantVisitor;

    public void <init>(proguard.classfile.constant.visitor.ConstantVisitor)
    {
        proguard.classfile.visitor.ExceptionHandlerConstantVisitor r0;
        proguard.classfile.constant.visitor.ConstantVisitor $r1;

        r0 := @this: proguard.classfile.visitor.ExceptionHandlerConstantVisitor;

        $r1 := @parameter0: proguard.classfile.constant.visitor.ConstantVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.visitor.ExceptionHandlerConstantVisitor: proguard.classfile.constant.visitor.ConstantVisitor constantVisitor> = $r1;

        return;
    }

    public void visitExceptionInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.ExceptionInfo)
    {
        proguard.classfile.constant.visitor.ConstantVisitor $r5;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.visitor.ExceptionHandlerConstantVisitor r0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.ExceptionInfo $r4;

        r0 := @this: proguard.classfile.visitor.ExceptionHandlerConstantVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.ExceptionInfo;

        $i0 = $r4.<proguard.classfile.attribute.ExceptionInfo: int u2catchType>;

        if $i0 == 0 goto label1;

        $r5 = r0.<proguard.classfile.visitor.ExceptionHandlerConstantVisitor: proguard.classfile.constant.visitor.ConstantVisitor constantVisitor>;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, $r5);

     label1:
        return;
    }
}
