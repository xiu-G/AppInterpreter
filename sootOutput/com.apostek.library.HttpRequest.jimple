public class com.apostek.library.HttpRequest extends java.lang.Object
{
    public static java.lang.String appid;
    public static java.lang.String platform;
    public static java.lang.String uuid;
    public static java.lang.String version;

    public void <init>()
    {
        com.apostek.library.HttpRequest r0;

        r0 := @this: com.apostek.library.HttpRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String DownloadText(java.lang.String)
    {
        java.lang.Throwable r8;
        java.io.InputStreamReader r1, $r10;
        java.lang.Exception r5, r7, r9;
        int $i0;
        char[] r4;
        java.lang.StringBuilder $r6, $r11;
        java.lang.String $r0, r3;
        java.io.UnsupportedEncodingException $r12;
        java.io.InputStream $r2;

        $r0 := @parameter0: java.lang.String;

     label01:
        $r2 = staticinvoke <com.apostek.library.HttpRequest: java.io.InputStream OpenHttpConnection(java.lang.String)>($r0);

     label02:
        $r10 = new java.io.InputStreamReader;

        r1 = $r10;

     label03:
        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r2, "UTF-8");

     label04:
        r3 = "";

        r4 = newarray (char)[2000];

     label05:
        $i0 = virtualinvoke r1.<java.io.InputStreamReader: int read(char[])>(r4);

     label06:
        if $i0 > 0 goto label12;

     label07:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label08:
        return r3;

     label09:
        r5 := @caughtexception;

     label10:
        virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();

     label11:
        return "";

     label12:
        $r0 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>(r4, 0, $i0);

     label13:
        $r11 = new java.lang.StringBuilder;

        $r6 = $r11;

     label14:
        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        r3 = $r0;

        r4 = newarray (char)[2000];

        goto label05;

     label16:
        r7 := @caughtexception;

     label17:
        virtualinvoke r7.<java.lang.Exception: void printStackTrace()>();

     label18:
        return "";

     label19:
        r8 := @caughtexception;

     label20:
        $r12 = (java.io.UnsupportedEncodingException) r8;

        virtualinvoke $r12.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label21:
        return "";

     label22:
        r9 := @caughtexception;

        return "";

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label19;
        catch java.lang.Exception from label03 to label04 with label22;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Exception from label10 to label11 with label22;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label19;
        catch java.lang.Exception from label17 to label18 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
    }

    public static java.io.InputStream OpenHttpConnection(java.lang.String) throws java.io.IOException
    {
        java.net.HttpURLConnection $r7;
        java.net.URL r3;
        java.io.IOException $r6;
        java.lang.Exception r1, r2;
        java.net.URLConnection $r5;
        int $i0;
        java.lang.String $r0;
        java.io.InputStream r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r4 = null;

        r3 = new java.net.URL;

     label01:
        specialinvoke r3.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r5 = virtualinvoke r3.<java.net.URL: java.net.URLConnection openConnection()>();

     label02:
        $z0 = $r5 instanceof java.net.HttpURLConnection;

        if $z0 != 0 goto label05;

        $r6 = new java.io.IOException;

     label03:
        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Not an HTTP connection");

        throw $r6;

     label04:
        r1 := @caughtexception;

        return null;

     label05:
        $r7 = (java.net.HttpURLConnection) $r5;

        virtualinvoke $r7.<java.net.HttpURLConnection: void setAllowUserInteraction(boolean)>(0);

        virtualinvoke $r7.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(1);

        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        virtualinvoke $r7.<java.net.HttpURLConnection: void setConnectTimeout(int)>(30000);

     label06:
        $r0 = <com.apostek.library.HttpRequest: java.lang.String appid>;

     label07:
        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("ap-appid", $r0);

     label08:
        $r0 = <com.apostek.library.HttpRequest: java.lang.String version>;

     label09:
        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("ap-version", $r0);

     label10:
        $r0 = <com.apostek.library.HttpRequest: java.lang.String platform>;

     label11:
        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("ap-platform", $r0);

     label12:
        $r0 = <com.apostek.library.HttpRequest: java.lang.String uuid>;

     label13:
        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("ap-uuid", $r0);

        virtualinvoke $r7.<java.net.HttpURLConnection: void connect()>();

        $i0 = virtualinvoke $r7.<java.net.HttpURLConnection: int getResponseCode()>();

     label14:
        if $i0 != 200 goto label16;

     label15:
        r4 = virtualinvoke $r7.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label16:
        return r4;

     label17:
        r2 := @caughtexception;

        $r6 = new java.io.IOException;

     label18:
        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Error connecting");

        throw $r6;

     label19:
        nop;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Exception from label03 to label04 with label04;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label18 to label19 with label04;
    }

    public static java.lang.String makeHttpRequest(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.apostek.library.HttpRequest: java.lang.String DownloadText(java.lang.String)>($r0);

        return $r0;
    }

    public static void setupHeaders(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        <com.apostek.library.HttpRequest: java.lang.String appid> = $r0;

        <com.apostek.library.HttpRequest: java.lang.String version> = $r1;

        <com.apostek.library.HttpRequest: java.lang.String platform> = "android";

        <com.apostek.library.HttpRequest: java.lang.String uuid> = $r3;

        return;
    }
}
