final class com.google.gson.ParameterizedTypeHandlerMap extends java.lang.Object
{
    private static final java.util.logging.Logger logger;
    private final java.util.Map map;
    private boolean modifiable;
    private final java.util.List typeHierarchyList;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/google/gson/ParameterizedTypeHandlerMap;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.gson.ParameterizedTypeHandlerMap: java.util.logging.Logger logger> = $r2;

        return;
    }

    void <init>()
    {
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.util.HashMap $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList> = $r2;

        r0.<com.google.gson.ParameterizedTypeHandlerMap: boolean modifiable> = 1;

        return;
    }

    private java.lang.Object getHandlerForTypeHierarchy(java.lang.Class)
    {
        com.google.gson.Pair r5;
        java.util.Iterator $r3;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.util.List $r2;
        java.lang.Class r1, $r6;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.gson.Pair) $r4;

        $r4 = r5.<com.google.gson.Pair: java.lang.Object first>;

        $r6 = (java.lang.Class) $r4;

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r5.<com.google.gson.Pair: java.lang.Object second>;

        return $r4;

     label2:
        return null;
    }

    private int getIndexOfAnOverriddenHandler(java.lang.Class)
    {
        com.google.gson.Pair r4;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.util.List $r2;
        int $i0;
        java.lang.Class r1, $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r2 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        r4 = (com.google.gson.Pair) $r3;

        $r3 = r4.<com.google.gson.Pair: java.lang.Object first>;

        $r5 = (java.lang.Class) $r3;

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z0 == 0 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return -1;
    }

    private int getIndexOfSpecificHandlerForTypeHierarchy(java.lang.Class)
    {
        java.lang.Throwable $r5;
        com.google.gson.Pair $r4;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.util.List $r2;
        int $i0;
        java.lang.Class r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        r1 := @parameter0: java.lang.Class;

        entermonitor r0;

     label1:
        $r2 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label2:
        if $i0 < 0 goto label6;

        $r2 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (com.google.gson.Pair) $r3;

        $r3 = $r4.<com.google.gson.Pair: java.lang.Object first>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

     label3:
        if $z0 == 0 goto label5;

     label4:
        exitmonitor r0;

        return $i0;

     label5:
        $i0 = $i0 + -1;

        goto label2;

     label6:
        $i0 = -1;

        goto label4;

     label7:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label7;
    }

    private java.lang.String typeToString(java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r1;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r3;
    }

    public com.google.gson.ParameterizedTypeHandlerMap copyOf()
    {
        java.lang.Throwable $r6;
        java.util.List $r4, $r5;
        java.util.Map $r2, $r3;
        com.google.gson.ParameterizedTypeHandlerMap r0, r1;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        entermonitor r0;

     label1:
        r1 = new com.google.gson.ParameterizedTypeHandlerMap;

        specialinvoke r1.<com.google.gson.ParameterizedTypeHandlerMap: void <init>()>();

        $r2 = r1.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map>;

        $r3 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>($r3);

        $r4 = r1.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $r5 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r5);

     label2:
        exitmonitor r0;

        return r1;

     label3:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object getHandlerFor(java.lang.reflect.Type)
    {
        java.lang.Throwable $r6;
        java.lang.reflect.Type $r1;
        java.util.Map $r2;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.lang.Object $r3, r4;
        java.lang.Class $r5;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        $r1 := @parameter0: java.lang.reflect.Type;

        entermonitor r0;

     label1:
        $r2 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = $r3;

        if $r3 != null goto label4;

        $r5 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r1);

        if $r5 == $r1 goto label2;

        r4 = virtualinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: java.lang.Object getHandlerFor(java.lang.reflect.Type)>($r5);

     label2:
        if r4 != null goto label4;

        $r3 = specialinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: java.lang.Object getHandlerForTypeHierarchy(java.lang.Class)>($r5);

     label3:
        r4 = $r3;

     label4:
        exitmonitor r0;

        return r4;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public boolean hasSpecificHandlerFor(java.lang.reflect.Type)
    {
        java.lang.Throwable $r3;
        java.lang.reflect.Type $r1;
        java.util.Map $r2;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        boolean $z0;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        $r1 := @parameter0: java.lang.reflect.Type;

        entermonitor r0;

     label1:
        $r2 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

     label2:
        exitmonitor r0;

        return $z0;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void makeUnmodifiable()
    {
        java.lang.Throwable $r1;
        com.google.gson.ParameterizedTypeHandlerMap r0;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        entermonitor r0;

     label1:
        r0.<com.google.gson.ParameterizedTypeHandlerMap: boolean modifiable> = 0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void register(com.google.gson.ParameterizedTypeHandlerMap)
    {
        java.lang.Throwable $r2;
        com.google.gson.Pair r10;
        java.lang.IllegalStateException $r11;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        com.google.gson.ParameterizedTypeHandlerMap r0, r1;
        java.util.List $r9;
        java.lang.reflect.Type $r8;
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        r1 := @parameter0: com.google.gson.ParameterizedTypeHandlerMap;

        entermonitor r0;

     label1:
        $z0 = r0.<com.google.gson.ParameterizedTypeHandlerMap: boolean modifiable>;

        if $z0 != 0 goto label3;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempted to modify an unmodifiable map.");

        throw $r11;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label3:
        $r3 = r1.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.reflect.Type) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: void register(java.lang.reflect.Type,java.lang.Object)>($r8, $r6);

        goto label4;

     label5:
        $r9 = r1.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label6:
        if $i0 < 0 goto label8;

        $r9 = r1.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $r6 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i0);

        r10 = (com.google.gson.Pair) $r6;

        virtualinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: void registerForTypeHierarchy(com.google.gson.Pair)>(r10);

     label7:
        $i0 = $i0 + -1;

        goto label6;

     label8:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label7 with label2;
    }

    public void register(java.lang.reflect.Type, java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.lang.IllegalStateException $r3;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.util.logging.Logger $r5;
        java.util.logging.Level $r6;
        java.lang.reflect.Type $r1;
        java.util.Map $r7;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        $r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.lang.Object;

        entermonitor r0;

     label1:
        $z0 = r0.<com.google.gson.ParameterizedTypeHandlerMap: boolean modifiable>;

        if $z0 != 0 goto label3;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempted to modify an unmodifiable map.");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label3:
        $z0 = virtualinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: boolean hasSpecificHandlerFor(java.lang.reflect.Type)>($r1);

        if $z0 == 0 goto label4;

        $r5 = <com.google.gson.ParameterizedTypeHandlerMap: java.util.logging.Logger logger>;

        $r6 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r5.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r6, "Overriding the existing type handler for {0}", $r1);

     label4:
        $r7 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r2);

     label5:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label5 with label2;
    }

    public void registerForTypeHierarchy(com.google.gson.Pair)
    {
        java.lang.Throwable $r4;
        com.google.gson.Pair r1;
        java.lang.IllegalStateException $r3;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.util.logging.Logger $r6;
        java.lang.IllegalArgumentException $r9;
        java.util.logging.Level $r7;
        java.util.List $r8;
        int $i0;
        java.lang.Object $r2;
        java.lang.Class $r5;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;
        boolean $z0;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        r1 := @parameter0: com.google.gson.Pair;

        entermonitor r0;

     label1:
        $z0 = r0.<com.google.gson.ParameterizedTypeHandlerMap: boolean modifiable>;

        if $z0 != 0 goto label3;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempted to modify an unmodifiable map.");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label3:
        $r2 = r1.<com.google.gson.Pair: java.lang.Object first>;

        $r5 = (java.lang.Class) $r2;

        $i0 = specialinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: int getIndexOfSpecificHandlerForTypeHierarchy(java.lang.Class)>($r5);

        if $i0 < 0 goto label4;

        $r6 = <com.google.gson.ParameterizedTypeHandlerMap: java.util.logging.Logger logger>;

        $r7 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r2 = r1.<com.google.gson.Pair: java.lang.Object first>;

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r7, "Overriding the existing type handler for {0}", $r2);

        $r8 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        interfaceinvoke $r8.<java.util.List: java.lang.Object remove(int)>($i0);

     label4:
        $r2 = r1.<com.google.gson.Pair: java.lang.Object first>;

        $r5 = (java.lang.Class) $r2;

        $i0 = specialinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: int getIndexOfAnOverriddenHandler(java.lang.Class)>($r5);

        if $i0 < 0 goto label5;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The specified type handler for type ");

        $r2 = r1.<com.google.gson.Pair: java.lang.Object first>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hides the previously registered type hierarchy handler for ");

        $r8 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $r2 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i0);

        r1 = (com.google.gson.Pair) $r2;

        $r2 = r1.<com.google.gson.Pair: java.lang.Object first>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Gson does not allow this.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label5:
        $r8 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        interfaceinvoke $r8.<java.util.List: void add(int,java.lang.Object)>(0, r1);

     label6:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label6 with label2;
    }

    public void registerForTypeHierarchy(java.lang.Class, java.lang.Object)
    {
        java.lang.Throwable $r4;
        com.google.gson.Pair r3;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.lang.Class r1;
        java.lang.Object r2;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        entermonitor r0;

     label1:
        r3 = new com.google.gson.Pair;

        specialinvoke r3.<com.google.gson.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);

        virtualinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: void registerForTypeHierarchy(com.google.gson.Pair)>(r3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void registerIfAbsent(com.google.gson.ParameterizedTypeHandlerMap)
    {
        java.lang.Throwable $r2;
        com.google.gson.Pair r10;
        java.lang.IllegalStateException $r12;
        java.util.Map $r3;
        int $i0, $i1;
        boolean $z0;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        com.google.gson.ParameterizedTypeHandlerMap r0, r1;
        java.util.List $r9;
        java.lang.reflect.Type $r8;
        java.lang.Object $r6;
        java.lang.Class $r11;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        r1 := @parameter0: com.google.gson.ParameterizedTypeHandlerMap;

        entermonitor r0;

     label1:
        $z0 = r0.<com.google.gson.ParameterizedTypeHandlerMap: boolean modifiable>;

        if $z0 != 0 goto label3;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempted to modify an unmodifiable map.");

        throw $r12;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label3:
        $r3 = r1.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r3 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map>;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 != 0 goto label4;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.reflect.Type) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: void register(java.lang.reflect.Type,java.lang.Object)>($r8, $r6);

        goto label4;

     label5:
        $r9 = r1.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label6:
        if $i0 < 0 goto label8;

        $r9 = r1.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $r6 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i0);

        r10 = (com.google.gson.Pair) $r6;

        $r6 = r10.<com.google.gson.Pair: java.lang.Object first>;

        $r11 = (java.lang.Class) $r6;

        $i1 = specialinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: int getIndexOfSpecificHandlerForTypeHierarchy(java.lang.Class)>($r11);

        if $i1 >= 0 goto label7;

        virtualinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: void registerForTypeHierarchy(com.google.gson.Pair)>(r10);

     label7:
        $i0 = $i0 + -1;

        goto label6;

     label8:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label7 with label2;
    }

    public void registerIfAbsent(java.lang.reflect.Type, java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.lang.IllegalStateException $r3;
        java.lang.reflect.Type $r1;
        java.util.Map $r5;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        $r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.lang.Object;

        entermonitor r0;

     label1:
        $z0 = r0.<com.google.gson.ParameterizedTypeHandlerMap: boolean modifiable>;

        if $z0 != 0 goto label3;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempted to modify an unmodifiable map.");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label3:
        $r5 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label4;

        virtualinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: void register(java.lang.reflect.Type,java.lang.Object)>($r1, r2);

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.String toString()
    {
        com.google.gson.Pair r5;
        java.util.Map$Entry r11;
        java.util.Iterator $r3;
        java.util.Set $r10;
        com.google.gson.ParameterizedTypeHandlerMap r0;
        java.util.List $r2;
        java.lang.reflect.Type $r6;
        java.util.Map $r9;
        java.lang.StringBuilder r1, $r8;
        java.lang.Object $r4;
        java.lang.String $r7;
        boolean z0, $z1;

        r0 := @this: com.google.gson.ParameterizedTypeHandlerMap;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{mapForTypeHierarchy:{");

        z0 = 1;

        $r2 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.List typeHierarchyList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.gson.Pair) $r4;

        if z0 == 0 goto label3;

        z0 = 0;

     label2:
        $r4 = r5.<com.google.gson.Pair: java.lang.Object first>;

        $r6 = (java.lang.reflect.Type) $r4;

        $r7 = specialinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: java.lang.String typeToString(java.lang.reflect.Type)>($r6);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4 = r5.<com.google.gson.Pair: java.lang.Object second>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("},map:{");

        z0 = 1;

        $r9 = r0.<com.google.gson.ParameterizedTypeHandlerMap: java.util.Map map>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r4;

        if z0 == 0 goto label7;

        z0 = 0;

     label6:
        $r4 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.reflect.Type) $r4;

        $r7 = specialinvoke r0.<com.google.gson.ParameterizedTypeHandlerMap: java.lang.String typeToString(java.lang.reflect.Type)>($r6);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        goto label5;

     label7:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label6;

     label8:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
