public class org.jsoup.Jsoup extends java.lang.Object
{

    private void <init>()
    {
        org.jsoup.Jsoup r0;

        r0 := @this: org.jsoup.Jsoup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String clean(java.lang.String, java.lang.String, org.jsoup.safety.Whitelist)
    {
        org.jsoup.safety.Whitelist $r2;
        org.jsoup.safety.Cleaner r3;
        org.jsoup.nodes.Document $r4;
        org.jsoup.nodes.Element $r5;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.jsoup.safety.Whitelist;

        $r4 = staticinvoke <org.jsoup.Jsoup: org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String)>($r0, $r1);

        r3 = new org.jsoup.safety.Cleaner;

        specialinvoke r3.<org.jsoup.safety.Cleaner: void <init>(org.jsoup.safety.Whitelist)>($r2);

        $r4 = virtualinvoke r3.<org.jsoup.safety.Cleaner: org.jsoup.nodes.Document clean(org.jsoup.nodes.Document)>($r4);

        $r5 = virtualinvoke $r4.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();

        $r0 = virtualinvoke $r5.<org.jsoup.nodes.Element: java.lang.String html()>();

        return $r0;
    }

    public static java.lang.String clean(java.lang.String, java.lang.String, org.jsoup.safety.Whitelist, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.safety.Whitelist $r2;
        org.jsoup.nodes.Document$OutputSettings $r3;
        org.jsoup.safety.Cleaner r4;
        org.jsoup.nodes.Document $r5;
        org.jsoup.nodes.Element $r6;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.jsoup.safety.Whitelist;

        $r3 := @parameter3: org.jsoup.nodes.Document$OutputSettings;

        $r5 = staticinvoke <org.jsoup.Jsoup: org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String)>($r0, $r1);

        r4 = new org.jsoup.safety.Cleaner;

        specialinvoke r4.<org.jsoup.safety.Cleaner: void <init>(org.jsoup.safety.Whitelist)>($r2);

        $r5 = virtualinvoke r4.<org.jsoup.safety.Cleaner: org.jsoup.nodes.Document clean(org.jsoup.nodes.Document)>($r5);

        virtualinvoke $r5.<org.jsoup.nodes.Document: org.jsoup.nodes.Document outputSettings(org.jsoup.nodes.Document$OutputSettings)>($r3);

        $r6 = virtualinvoke $r5.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();

        $r0 = virtualinvoke $r6.<org.jsoup.nodes.Element: java.lang.String html()>();

        return $r0;
    }

    public static java.lang.String clean(java.lang.String, org.jsoup.safety.Whitelist)
    {
        org.jsoup.safety.Whitelist $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.jsoup.safety.Whitelist;

        $r0 = staticinvoke <org.jsoup.Jsoup: java.lang.String clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist)>($r0, "", $r1);

        return $r0;
    }

    public static org.jsoup.Connection connect(java.lang.String)
    {
        org.jsoup.Connection $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.jsoup.helper.HttpConnection: org.jsoup.Connection connect(java.lang.String)>($r0);

        return $r1;
    }

    public static boolean isValid(java.lang.String, org.jsoup.safety.Whitelist)
    {
        org.jsoup.safety.Whitelist $r1;
        org.jsoup.safety.Cleaner r2;
        org.jsoup.nodes.Document $r3;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.jsoup.safety.Whitelist;

        $r3 = staticinvoke <org.jsoup.Jsoup: org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String)>($r0, "");

        r2 = new org.jsoup.safety.Cleaner;

        specialinvoke r2.<org.jsoup.safety.Cleaner: void <init>(org.jsoup.safety.Whitelist)>($r1);

        $z0 = virtualinvoke r2.<org.jsoup.safety.Cleaner: boolean isValid(org.jsoup.nodes.Document)>($r3);

        return $z0;
    }

    public static org.jsoup.nodes.Document parse(java.io.File, java.lang.String) throws java.io.IOException
    {
        org.jsoup.nodes.Document $r3;
        java.lang.String $r1, $r2;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document load(java.io.File,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $r3;
    }

    public static org.jsoup.nodes.Document parse(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.jsoup.nodes.Document $r3;
        java.lang.String $r1, $r2;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document load(java.io.File,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $r3;
    }

    public static org.jsoup.nodes.Document parse(java.io.InputStream, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.jsoup.nodes.Document $r3;
        java.lang.String $r1, $r2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $r3;
    }

    public static org.jsoup.nodes.Document parse(java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser) throws java.io.IOException
    {
        org.jsoup.nodes.Document $r4;
        java.lang.String $r1, $r2;
        org.jsoup.parser.Parser $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: org.jsoup.parser.Parser;

        $r4 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String,org.jsoup.parser.Parser)>($r0, $r1, $r2, $r3);

        return $r4;
    }

    public static org.jsoup.nodes.Document parse(java.lang.String)
    {
        java.lang.String $r0;
        org.jsoup.nodes.Document $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>($r0, "");

        return $r1;
    }

    public static org.jsoup.nodes.Document parse(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        org.jsoup.nodes.Document $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public static org.jsoup.nodes.Document parse(java.lang.String, java.lang.String, org.jsoup.parser.Parser)
    {
        org.jsoup.nodes.Document $r3;
        java.lang.String $r0, $r1;
        org.jsoup.parser.Parser $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.jsoup.parser.Parser;

        $r3 = virtualinvoke $r2.<org.jsoup.parser.Parser: org.jsoup.nodes.Document parseInput(java.lang.String,java.lang.String)>($r0, $r1);

        return $r3;
    }

    public static org.jsoup.nodes.Document parse(java.net.URL, int) throws java.io.IOException
    {
        java.net.URL $r0;
        org.jsoup.nodes.Document $r2;
        int $i0;
        org.jsoup.Connection $r1;

        $r0 := @parameter0: java.net.URL;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <org.jsoup.helper.HttpConnection: org.jsoup.Connection connect(java.net.URL)>($r0);

        interfaceinvoke $r1.<org.jsoup.Connection: org.jsoup.Connection timeout(int)>($i0);

        $r2 = interfaceinvoke $r1.<org.jsoup.Connection: org.jsoup.nodes.Document get()>();

        return $r2;
    }

    public static org.jsoup.nodes.Document parseBodyFragment(java.lang.String)
    {
        java.lang.String $r0;
        org.jsoup.nodes.Document $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String)>($r0, "");

        return $r1;
    }

    public static org.jsoup.nodes.Document parseBodyFragment(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        org.jsoup.nodes.Document $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String)>($r0, $r1);

        return $r2;
    }
}
