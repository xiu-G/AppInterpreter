public class b.e.g extends java.lang.Object
{
    static java.lang.Object[] e;
    static int f;
    static java.lang.Object[] g;
    static int h;
    int[] b;
    java.lang.Object[] c;
    int d;

    public void <init>()
    {
        b.e.g r0;
        java.lang.Object[] $r2;
        int[] $r1;

        r0 := @this: b.e.g;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <b.e.c: int[] a>;

        r0.<b.e.g: int[] b> = $r1;

        $r2 = <b.e.c: java.lang.Object[] c>;

        r0.<b.e.g: java.lang.Object[] c> = $r2;

        r0.<b.e.g: int d> = 0;

        return;
    }

    public void <init>(int)
    {
        java.lang.Object[] $r2;
        int[] $r1;
        int $i0;
        b.e.g r0;

        r0 := @this: b.e.g;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 != 0 goto label1;

        $r1 = <b.e.c: int[] a>;

        r0.<b.e.g: int[] b> = $r1;

        $r2 = <b.e.c: java.lang.Object[] c>;

        r0.<b.e.g: java.lang.Object[] c> = $r2;

        goto label2;

     label1:
        specialinvoke r0.<b.e.g: void a(int)>($i0);

     label2:
        r0.<b.e.g: int d> = 0;

        return;
    }

    public void <init>(b.e.g)
    {
        b.e.g r0, $r1;

        r0 := @this: b.e.g;

        $r1 := @parameter0: b.e.g;

        specialinvoke r0.<b.e.g: void <init>()>();

        if $r1 == null goto label1;

        virtualinvoke r0.<b.e.g: void j(b.e.g)>($r1);

     label1:
        return;
    }

    private void a(int)
    {
        java.lang.Throwable $r5, $r6;
        java.lang.Object[] $r1, $r3;
        b.e.g r0;
        int[] $r4;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: b.e.g;

        $i0 := @parameter0: int;

        if $i0 != 8 goto label07;

        entermonitor class "Lb/e/g;";

     label01:
        $r1 = <b.e.g: java.lang.Object[] g>;

        if $r1 == null goto label03;

        $r1 = <b.e.g: java.lang.Object[] g>;

        r0.<b.e.g: java.lang.Object[] c> = $r1;

        $r2 = $r1[0];

        $r3 = (java.lang.Object[]) $r2;

        <b.e.g: java.lang.Object[] g> = $r3;

        $r2 = $r1[1];

        $r4 = (int[]) $r2;

        r0.<b.e.g: int[] b> = $r4;

        $r1[1] = null;

        $r1[0] = null;

        $i0 = <b.e.g: int h>;

        $i0 = $i0 - 1;

        <b.e.g: int h> = $i0;

        exitmonitor class "Lb/e/g;";

     label02:
        return;

     label03:
        exitmonitor class "Lb/e/g;";

     label04:
        goto label14;

     label05:
        $r5 := @caughtexception;

        exitmonitor class "Lb/e/g;";

     label06:
        throw $r5;

     label07:
        if $i0 != 4 goto label14;

        entermonitor class "Lb/e/g;";

     label08:
        $r1 = <b.e.g: java.lang.Object[] e>;

        if $r1 == null goto label10;

        $r1 = <b.e.g: java.lang.Object[] e>;

        r0.<b.e.g: java.lang.Object[] c> = $r1;

        $r2 = $r1[0];

        $r3 = (java.lang.Object[]) $r2;

        <b.e.g: java.lang.Object[] e> = $r3;

        $r2 = $r1[1];

        $r4 = (int[]) $r2;

        r0.<b.e.g: int[] b> = $r4;

        $r1[1] = null;

        $r1[0] = null;

        $i0 = <b.e.g: int f>;

        $i0 = $i0 - 1;

        <b.e.g: int f> = $i0;

        exitmonitor class "Lb/e/g;";

     label09:
        return;

     label10:
        exitmonitor class "Lb/e/g;";

     label11:
        goto label14;

     label12:
        $r6 := @caughtexception;

        exitmonitor class "Lb/e/g;";

     label13:
        throw $r6;

     label14:
        $r4 = newarray (int)[$i0];

        r0.<b.e.g: int[] b> = $r4;

        $i0 = $i0 << 1;

        $r1 = newarray (java.lang.Object)[$i0];

        r0.<b.e.g: java.lang.Object[] c> = $r1;

        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private static int b(int[], int, int)
    {
        int[] $r1;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r0;
        java.util.ConcurrentModificationException $r2;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        $i0 = staticinvoke <b.e.c: int a(int[],int,int)>($r1, $i0, $i1);

     label2:
        return $i0;

     label3:
        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label4:
        $r0 := @caughtexception;

        goto label3;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label4;
    }

    private static void d(int[], java.lang.Object[], int)
    {
        java.lang.Throwable $r3, $r4;
        java.lang.Object[] $r0, $r2;
        int[] $r1;
        int $i0, $i1;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: java.lang.Object[];

        $i0 := @parameter2: int;

        $i1 = lengthof $r1;

        if $i1 != 8 goto label08;

        entermonitor class "Lb/e/g;";

     label01:
        $i1 = <b.e.g: int h>;

        if $i1 >= 10 goto label04;

        $r2 = <b.e.g: java.lang.Object[] g>;

        $r0[0] = $r2;

        $r0[1] = $r1;

        $i0 = $i0 << 1;

        $i0 = $i0 - 1;

     label02:
        if $i0 < 2 goto label03;

        $r0[$i0] = null;

        $i0 = $i0 + -1;

        goto label02;

     label03:
        <b.e.g: java.lang.Object[] g> = $r0;

        $i0 = <b.e.g: int h>;

        $i0 = $i0 + 1;

        <b.e.g: int h> = $i0;

     label04:
        exitmonitor class "Lb/e/g;";

     label05:
        return;

     label06:
        $r3 := @caughtexception;

        exitmonitor class "Lb/e/g;";

     label07:
        throw $r3;

     label08:
        $i1 = lengthof $r1;

        if $i1 != 4 goto label16;

        entermonitor class "Lb/e/g;";

     label09:
        $i1 = <b.e.g: int f>;

        if $i1 >= 10 goto label12;

        $r2 = <b.e.g: java.lang.Object[] e>;

        $r0[0] = $r2;

        $r0[1] = $r1;

        $i0 = $i0 << 1;

        $i0 = $i0 - 1;

     label10:
        if $i0 < 2 goto label11;

        $r0[$i0] = null;

        $i0 = $i0 + -1;

        goto label10;

     label11:
        <b.e.g: java.lang.Object[] e> = $r0;

        $i0 = <b.e.g: int f>;

        $i0 = $i0 + 1;

        <b.e.g: int f> = $i0;

     label12:
        exitmonitor class "Lb/e/g;";

     label13:
        return;

     label14:
        $r4 := @caughtexception;

        exitmonitor class "Lb/e/g;";

     label15:
        throw $r4;

     label16:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label09 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void c(int)
    {
        java.lang.Object[] $r2, $r4;
        b.e.g r0;
        int[] $r1, $r3;
        int $i0, $i1, $i2;
        java.util.ConcurrentModificationException $r5;

        r0 := @this: b.e.g;

        $i1 := @parameter0: int;

        $i0 = r0.<b.e.g: int d>;

        $r1 = r0.<b.e.g: int[] b>;

        $i2 = lengthof $r1;

        if $i2 >= $i1 goto label2;

        $r2 = r0.<b.e.g: java.lang.Object[] c>;

        specialinvoke r0.<b.e.g: void a(int)>($i1);

        $i1 = r0.<b.e.g: int d>;

        if $i1 <= 0 goto label1;

        $r3 = r0.<b.e.g: int[] b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, 0, $i0);

        $r4 = r0.<b.e.g: java.lang.Object[] c>;

        $i1 = $i0 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i1);

     label1:
        staticinvoke <b.e.g: void d(int[],java.lang.Object[],int)>($r1, $r2, $i0);

     label2:
        $i1 = r0.<b.e.g: int d>;

        if $i1 != $i0 goto label3;

        return;

     label3:
        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;
    }

    public void clear()
    {
        java.lang.Object[] $r2, $r4;
        int[] $r1, $r3;
        int $i0;
        b.e.g r0;
        java.util.ConcurrentModificationException $r5;

        r0 := @this: b.e.g;

        $i0 = r0.<b.e.g: int d>;

        if $i0 <= 0 goto label1;

        $r1 = r0.<b.e.g: int[] b>;

        $r2 = r0.<b.e.g: java.lang.Object[] c>;

        $r3 = <b.e.c: int[] a>;

        r0.<b.e.g: int[] b> = $r3;

        $r4 = <b.e.c: java.lang.Object[] c>;

        r0.<b.e.g: java.lang.Object[] c> = $r4;

        r0.<b.e.g: int d> = 0;

        staticinvoke <b.e.g: void d(int[],java.lang.Object[],int)>($r1, $r2, $i0);

     label1:
        $i0 = r0.<b.e.g: int d>;

        if $i0 > 0 goto label2;

        return;

     label2:
        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;
    }

    public boolean containsKey(java.lang.Object)
    {
        int $i0;
        b.e.g r0;
        java.lang.Object $r1;

        r0 := @this: b.e.g;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<b.e.g: int f(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean containsValue(java.lang.Object)
    {
        int $i0;
        b.e.g r0;
        java.lang.Object $r1;

        r0 := @this: b.e.g;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<b.e.g: int h(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    int e(java.lang.Object, int)
    {
        java.lang.Object[] $r3;
        b.e.g r0;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r1, $r4;
        boolean $z0;

        r0 := @this: b.e.g;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $i2 = r0.<b.e.g: int d>;

        if $i2 != 0 goto label1;

        return -1;

     label1:
        $r2 = r0.<b.e.g: int[] b>;

        $i3 = staticinvoke <b.e.g: int b(int[],int,int)>($r2, $i2, $i0);

        if $i3 >= 0 goto label2;

        return $i3;

     label2:
        $r3 = r0.<b.e.g: java.lang.Object[] c>;

        $i4 = $i3 << 1;

        $r4 = $r3[$i4];

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return $i3;

     label3:
        $i4 = $i3 + 1;

     label4:
        if $i4 >= $i2 goto label6;

        $r2 = r0.<b.e.g: int[] b>;

        $i1 = $r2[$i4];

        if $i1 != $i0 goto label6;

        $r3 = r0.<b.e.g: java.lang.Object[] c>;

        $i1 = $i4 << 1;

        $r4 = $r3[$i1];

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label5;

        return $i4;

     label5:
        $i4 = $i4 + 1;

        goto label4;

     label6:
        $i3 = $i3 + -1;

     label7:
        if $i3 < 0 goto label9;

        $r2 = r0.<b.e.g: int[] b>;

        $i2 = $r2[$i3];

        if $i2 != $i0 goto label9;

        $r3 = r0.<b.e.g: java.lang.Object[] c>;

        $i2 = $i3 << 1;

        $r4 = $r3[$i2];

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label8;

        return $i3;

     label8:
        $i3 = $i3 + -1;

        goto label7;

     label9:
        $i0 = $i4 ^ -1;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        b.e.g r0, $r6;
        java.lang.ClassCastException $r2, $r4;
        java.lang.NullPointerException $r1, $r3;
        java.util.Map $r9;
        int $i0, $i1;
        java.lang.Object $r5, $r7, $r8;
        boolean $z0;

        r0 := @this: b.e.g;

        $r5 := @parameter0: java.lang.Object;

        if r0 != $r5 goto label01;

        return 1;

     label01:
        $z0 = $r5 instanceof b.e.g;

        if $z0 == 0 goto label13;

        $r6 = (b.e.g) $r5;

        $i0 = virtualinvoke r0.<b.e.g: int size()>();

        $i1 = virtualinvoke $r6.<b.e.g: int size()>();

        if $i0 == $i1 goto label02;

        return 0;

     label02:
        $i0 = 0;

     label03:
        $i1 = r0.<b.e.g: int d>;

     label04:
        if $i0 >= $i1 goto label12;

     label05:
        $r5 = virtualinvoke r0.<b.e.g: java.lang.Object i(int)>($i0);

        $r7 = virtualinvoke r0.<b.e.g: java.lang.Object m(int)>($i0);

        $r8 = virtualinvoke $r6.<b.e.g: java.lang.Object get(java.lang.Object)>($r5);

     label06:
        if $r7 != null goto label09;

        if $r8 != null goto label30;

     label07:
        $z0 = virtualinvoke $r6.<b.e.g: boolean containsKey(java.lang.Object)>($r5);

     label08:
        if $z0 != 0 goto label11;

        return 0;

     label09:
        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

     label10:
        if $z0 != 0 goto label11;

        return 0;

     label11:
        $i0 = $i0 + 1;

        goto label03;

     label12:
        return 1;

     label13:
        $z0 = $r5 instanceof java.util.Map;

        if $z0 == 0 goto label25;

        $r9 = (java.util.Map) $r5;

        $i0 = virtualinvoke r0.<b.e.g: int size()>();

        $i1 = interfaceinvoke $r9.<java.util.Map: int size()>();

        if $i0 == $i1 goto label14;

        return 0;

     label14:
        $i0 = 0;

     label15:
        $i1 = r0.<b.e.g: int d>;

     label16:
        if $i0 >= $i1 goto label24;

     label17:
        $r5 = virtualinvoke r0.<b.e.g: java.lang.Object i(int)>($i0);

        $r7 = virtualinvoke r0.<b.e.g: java.lang.Object m(int)>($i0);

        $r8 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

     label18:
        if $r7 != null goto label21;

        if $r8 != null goto label30;

     label19:
        $z0 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

     label20:
        if $z0 != 0 goto label23;

        return 0;

     label21:
        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

     label22:
        if $z0 != 0 goto label23;

        return 0;

     label23:
        $i0 = $i0 + 1;

        goto label15;

     label24:
        return 1;

     label25:
        return 0;

     label26:
        $r1 := @caughtexception;

        return 0;

     label27:
        $r2 := @caughtexception;

        return 0;

     label28:
        $r3 := @caughtexception;

        return 0;

     label29:
        $r4 := @caughtexception;

     label30:
        return 0;

        catch java.lang.NullPointerException from label03 to label04 with label26;
        catch java.lang.NullPointerException from label05 to label06 with label26;
        catch java.lang.NullPointerException from label07 to label08 with label26;
        catch java.lang.NullPointerException from label09 to label10 with label26;
        catch java.lang.ClassCastException from label05 to label06 with label27;
        catch java.lang.ClassCastException from label07 to label08 with label27;
        catch java.lang.ClassCastException from label09 to label10 with label27;
        catch java.lang.NullPointerException from label15 to label16 with label28;
        catch java.lang.NullPointerException from label17 to label18 with label28;
        catch java.lang.NullPointerException from label19 to label20 with label28;
        catch java.lang.NullPointerException from label21 to label22 with label28;
        catch java.lang.ClassCastException from label17 to label18 with label29;
        catch java.lang.ClassCastException from label19 to label20 with label29;
        catch java.lang.ClassCastException from label21 to label22 with label29;
    }

    public int f(java.lang.Object)
    {
        int $i0;
        b.e.g r0;
        java.lang.Object $r1;

        r0 := @this: b.e.g;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $i0 = virtualinvoke r0.<b.e.g: int g()>();

        return $i0;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = virtualinvoke r0.<b.e.g: int e(java.lang.Object,int)>($r1, $i0);

        return $i0;
    }

    int g()
    {
        java.lang.Object[] $r2;
        b.e.g r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;

        r0 := @this: b.e.g;

        $i2 = r0.<b.e.g: int d>;

        if $i2 != 0 goto label1;

        return -1;

     label1:
        $r1 = r0.<b.e.g: int[] b>;

        $i1 = staticinvoke <b.e.g: int b(int[],int,int)>($r1, $i2, 0);

        if $i1 >= 0 goto label2;

        return $i1;

     label2:
        $r2 = r0.<b.e.g: java.lang.Object[] c>;

        $i3 = $i1 << 1;

        $r3 = $r2[$i3];

        if $r3 != null goto label3;

        return $i1;

     label3:
        $i3 = $i1 + 1;

     label4:
        if $i3 >= $i2 goto label6;

        $r1 = r0.<b.e.g: int[] b>;

        $i0 = $r1[$i3];

        if $i0 != 0 goto label6;

        $r2 = r0.<b.e.g: java.lang.Object[] c>;

        $i0 = $i3 << 1;

        $r3 = $r2[$i0];

        if $r3 != null goto label5;

        return $i3;

     label5:
        $i3 = $i3 + 1;

        goto label4;

     label6:
        $i1 = $i1 + -1;

     label7:
        if $i1 < 0 goto label9;

        $r1 = r0.<b.e.g: int[] b>;

        $i2 = $r1[$i1];

        if $i2 != 0 goto label9;

        $r2 = r0.<b.e.g: java.lang.Object[] c>;

        $i2 = $i1 << 1;

        $r3 = $r2[$i2];

        if $r3 != null goto label8;

        return $i1;

     label8:
        $i1 = $i1 + -1;

        goto label7;

     label9:
        $i3 = $i3 ^ -1;

        return $i3;
    }

    public java.lang.Object get(java.lang.Object)
    {
        b.e.g r0;
        java.lang.Object $r1;

        r0 := @this: b.e.g;

        $r1 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<b.e.g: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r1, null);

        return $r1;
    }

    public java.lang.Object getOrDefault(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r3;
        int $i0;
        b.e.g r0;
        java.lang.Object $r1, $r2;

        r0 := @this: b.e.g;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<b.e.g: int f(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        $r3 = r0.<b.e.g: java.lang.Object[] c>;

        $i0 = $i0 << 1;

        $i0 = $i0 + 1;

        $r1 = $r3[$i0];

        return $r1;

     label1:
        return null;
    }

    int h(java.lang.Object)
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        b.e.g r0;
        java.lang.Object $r2, $r3;
        boolean $z0;

        r0 := @this: b.e.g;

        $r2 := @parameter0: java.lang.Object;

        $i0 = r0.<b.e.g: int d>;

        $i0 = $i0 * 2;

        $r1 = r0.<b.e.g: java.lang.Object[] c>;

        if $r2 != null goto label3;

        $i1 = 1;

     label1:
        if $i1 >= $i0 goto label6;

        $r2 = $r1[$i1];

        if $r2 != null goto label2;

        $i0 = $i1 >> 1;

        return $i0;

     label2:
        $i1 = $i1 + 2;

        goto label1;

     label3:
        $i1 = 1;

     label4:
        if $i1 >= $i0 goto label6;

        $r3 = $r1[$i1];

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $i0 = $i1 >> 1;

        return $i0;

     label5:
        $i1 = $i1 + 2;

        goto label4;

     label6:
        return -1;
    }

    public int hashCode()
    {
        java.lang.Object[] $r2;
        b.e.g r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r3;

        r0 := @this: b.e.g;

        $r1 = r0.<b.e.g: int[] b>;

        $r2 = r0.<b.e.g: java.lang.Object[] c>;

        $i0 = r0.<b.e.g: int d>;

        $i3 = 1;

        $i4 = 0;

        $i5 = 0;

     label1:
        if $i4 >= $i0 goto label4;

        $r3 = $r2[$i3];

        $i1 = $r1[$i4];

        if $r3 != null goto label2;

        $i2 = 0;

        goto label3;

     label2:
        $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label3:
        $i1 = $i2 ^ $i1;

        $i5 = $i5 + $i1;

        $i4 = $i4 + 1;

        $i3 = $i3 + 2;

        goto label1;

     label4:
        return $i5;
    }

    public java.lang.Object i(int)
    {
        java.lang.Object[] $r1;
        int $i0;
        b.e.g r0;
        java.lang.Object $r2;

        r0 := @this: b.e.g;

        $i0 := @parameter0: int;

        $r1 = r0.<b.e.g: java.lang.Object[] c>;

        $i0 = $i0 << 1;

        $r2 = $r1[$i0];

        return $r2;
    }

    public boolean isEmpty()
    {
        int $i0;
        b.e.g r0;

        r0 := @this: b.e.g;

        $i0 = r0.<b.e.g: int d>;

        if $i0 > 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void j(b.e.g)
    {
        java.lang.Object[] $r4, $r5;
        b.e.g r0, $r1;
        int[] $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r6, $r7;

        r0 := @this: b.e.g;

        $r1 := @parameter0: b.e.g;

        $i0 = $r1.<b.e.g: int d>;

        $i1 = r0.<b.e.g: int d>;

        $i1 = $i1 + $i0;

        virtualinvoke r0.<b.e.g: void c(int)>($i1);

        $i1 = r0.<b.e.g: int d>;

        $i2 = 0;

        if $i1 != 0 goto label1;

        if $i0 <= 0 goto label2;

        $r2 = $r1.<b.e.g: int[] b>;

        $r3 = r0.<b.e.g: int[] b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

        $r4 = $r1.<b.e.g: java.lang.Object[] c>;

        $r5 = r0.<b.e.g: java.lang.Object[] c>;

        $i1 = $i0 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i1);

        r0.<b.e.g: int d> = $i0;

        return;

     label1:
        if $i2 >= $i0 goto label2;

        $r6 = virtualinvoke $r1.<b.e.g: java.lang.Object i(int)>($i2);

        $r7 = virtualinvoke $r1.<b.e.g: java.lang.Object m(int)>($i2);

        virtualinvoke r0.<b.e.g: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.Object k(int)
    {
        java.lang.Object[] $r1, $r5;
        b.e.g r0;
        int[] $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r2;
        java.util.ConcurrentModificationException $r6;

        r0 := @this: b.e.g;

        $i2 := @parameter0: int;

        $r1 = r0.<b.e.g: java.lang.Object[] c>;

        $i3 = $i2 << 1;

        $i0 = $i3 + 1;

        $r2 = $r1[$i0];

        $i0 = r0.<b.e.g: int d>;

        $i4 = 0;

        if $i0 > 1 goto label1;

        $r3 = r0.<b.e.g: int[] b>;

        staticinvoke <b.e.g: void d(int[],java.lang.Object[],int)>($r3, $r1, $i0);

        $r3 = <b.e.c: int[] a>;

        r0.<b.e.g: int[] b> = $r3;

        $r1 = <b.e.c: java.lang.Object[] c>;

        r0.<b.e.g: java.lang.Object[] c> = $r1;

        goto label7;

     label1:
        $i4 = $i0 + -1;

        $r3 = r0.<b.e.g: int[] b>;

        $i5 = lengthof $r3;

        $i1 = 8;

        if $i5 <= 8 goto label5;

        $i5 = lengthof $r3;

        $i5 = $i5 / 3;

        if $i0 >= $i5 goto label5;

        if $i0 <= 8 goto label2;

        $i1 = $i0 >> 1;

        $i1 = $i0 + $i1;

     label2:
        $r3 = r0.<b.e.g: int[] b>;

        $r1 = r0.<b.e.g: java.lang.Object[] c>;

        specialinvoke r0.<b.e.g: void a(int)>($i1);

        $i1 = r0.<b.e.g: int d>;

        if $i0 != $i1 goto label4;

        if $i2 <= 0 goto label3;

        $r4 = r0.<b.e.g: int[] b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i2);

        $r5 = r0.<b.e.g: java.lang.Object[] c>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r5, 0, $i3);

     label3:
        if $i2 >= $i4 goto label7;

        $i5 = $i2 + 1;

        $r4 = r0.<b.e.g: int[] b>;

        $i1 = $i4 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i5, $r4, $i2, $i1);

        $i2 = $i5 << 1;

        $r5 = r0.<b.e.g: java.lang.Object[] c>;

        $i1 = $i1 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i2, $r5, $i3, $i1);

        goto label7;

     label4:
        $r6 = new java.util.ConcurrentModificationException;

        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r6;

     label5:
        if $i2 >= $i4 goto label6;

        $r3 = r0.<b.e.g: int[] b>;

        $i5 = $i2 + 1;

        $i1 = $i4 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i5, $r3, $i2, $i1);

        $r1 = r0.<b.e.g: java.lang.Object[] c>;

        $i2 = $i5 << 1;

        $i1 = $i1 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i2, $r1, $i3, $i1);

     label6:
        $r1 = r0.<b.e.g: java.lang.Object[] c>;

        $i2 = $i4 << 1;

        $r1[$i2] = null;

        $i2 = $i2 + 1;

        $r1[$i2] = null;

     label7:
        $i2 = r0.<b.e.g: int d>;

        if $i0 != $i2 goto label8;

        r0.<b.e.g: int d> = $i4;

        return $r2;

     label8:
        $r6 = new java.util.ConcurrentModificationException;

        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r6;
    }

    public java.lang.Object l(int, java.lang.Object)
    {
        java.lang.Object[] $r2;
        int $i0;
        b.e.g r0;
        java.lang.Object $r1, $r3;

        r0 := @this: b.e.g;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $i0 = $i0 << 1;

        $i0 = $i0 + 1;

        $r2 = r0.<b.e.g: java.lang.Object[] c>;

        $r3 = $r2[$i0];

        $r2[$i0] = $r1;

        return $r3;
    }

    public java.lang.Object m(int)
    {
        java.lang.Object[] $r1;
        int $i0;
        b.e.g r0;
        java.lang.Object $r2;

        r0 := @this: b.e.g;

        $i0 := @parameter0: int;

        $r1 = r0.<b.e.g: java.lang.Object[] c>;

        $i0 = $i0 << 1;

        $i0 = $i0 + 1;

        $r2 = $r1[$i0];

        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r3, $r6;
        b.e.g r0;
        int[] $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r1, $r2;
        java.util.ConcurrentModificationException $r7;

        r0 := @this: b.e.g;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $i0 = r0.<b.e.g: int d>;

        if $r2 != null goto label01;

        $i2 = virtualinvoke r0.<b.e.g: int g()>();

        $i1 = 0;

        goto label02;

     label01:
        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i2 = virtualinvoke r0.<b.e.g: int e(java.lang.Object,int)>($r2, $i1);

     label02:
        if $i2 < 0 goto label03;

        $i0 = $i2 << 1;

        $i0 = $i0 + 1;

        $r3 = r0.<b.e.g: java.lang.Object[] c>;

        $r2 = $r3[$i0];

        $r3[$i0] = $r1;

        return $r2;

     label03:
        $i2 = $i2 ^ -1;

        $r4 = r0.<b.e.g: int[] b>;

        $i3 = lengthof $r4;

        if $i0 < $i3 goto label08;

        $i3 = 4;

        if $i0 < 8 goto label04;

        $i3 = $i0 >> 1;

        $i3 = $i3 + $i0;

        goto label05;

     label04:
        if $i0 < 4 goto label05;

        $i3 = 8;

     label05:
        $r4 = r0.<b.e.g: int[] b>;

        $r3 = r0.<b.e.g: java.lang.Object[] c>;

        specialinvoke r0.<b.e.g: void a(int)>($i3);

        $i3 = r0.<b.e.g: int d>;

        if $i0 != $i3 goto label07;

        $r5 = r0.<b.e.g: int[] b>;

        $i3 = lengthof $r5;

        if $i3 <= 0 goto label06;

        $i3 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i3);

        $r6 = r0.<b.e.g: java.lang.Object[] c>;

        $i3 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r6, 0, $i3);

     label06:
        staticinvoke <b.e.g: void d(int[],java.lang.Object[],int)>($r4, $r3, $i0);

        goto label08;

     label07:
        $r7 = new java.util.ConcurrentModificationException;

        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r7;

     label08:
        if $i2 >= $i0 goto label09;

        $r4 = r0.<b.e.g: int[] b>;

        $i4 = $i2 + 1;

        $i3 = $i0 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i2, $r4, $i4, $i3);

        $r3 = r0.<b.e.g: java.lang.Object[] c>;

        $i3 = $i2 << 1;

        $i4 = $i4 << 1;

        $i5 = r0.<b.e.g: int d>;

        $i5 = $i5 - $i2;

        $i5 = $i5 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i3, $r3, $i4, $i5);

     label09:
        $i3 = r0.<b.e.g: int d>;

        if $i0 != $i3 goto label10;

        $r4 = r0.<b.e.g: int[] b>;

        $i0 = lengthof $r4;

        if $i2 >= $i0 goto label10;

        $r4[$i2] = $i1;

        $r3 = r0.<b.e.g: java.lang.Object[] c>;

        $i0 = $i2 << 1;

        $r3[$i0] = $r2;

        $i0 = $i0 + 1;

        $r3[$i0] = $r1;

        $i0 = $i3 + 1;

        r0.<b.e.g: int d> = $i0;

        return null;

     label10:
        $r7 = new java.util.ConcurrentModificationException;

        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r7;
    }

    public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object)
    {
        b.e.g r0;
        java.lang.Object $r1, $r2, $r3;

        r0 := @this: b.e.g;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<b.e.g: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        $r1 = virtualinvoke r0.<b.e.g: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $r1;

     label1:
        return $r3;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        int $i0;
        b.e.g r0;
        java.lang.Object $r1;

        r0 := @this: b.e.g;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<b.e.g: int f(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        $r1 = virtualinvoke r0.<b.e.g: java.lang.Object k(int)>($i0);

        return $r1;

     label1:
        return null;
    }

    public boolean remove(java.lang.Object, java.lang.Object)
    {
        int $i0;
        b.e.g r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: b.e.g;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<b.e.g: int f(java.lang.Object)>($r1);

        if $i0 < 0 goto label2;

        $r1 = virtualinvoke r0.<b.e.g: java.lang.Object m(int)>($i0);

        if $r2 == $r1 goto label1;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r0.<b.e.g: java.lang.Object k(int)>($i0);

        return 1;

     label2:
        return 0;
    }

    public java.lang.Object replace(java.lang.Object, java.lang.Object)
    {
        int $i0;
        b.e.g r0;
        java.lang.Object $r1, $r2;

        r0 := @this: b.e.g;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<b.e.g: int f(java.lang.Object)>($r2);

        if $i0 < 0 goto label1;

        $r2 = virtualinvoke r0.<b.e.g: java.lang.Object l(int,java.lang.Object)>($i0, $r1);

        return $r2;

     label1:
        return null;
    }

    public boolean replace(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        int $i0;
        b.e.g r0;
        java.lang.Object $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: b.e.g;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object;

        $i0 = virtualinvoke r0.<b.e.g: int f(java.lang.Object)>($r2);

        if $i0 < 0 goto label2;

        $r2 = virtualinvoke r0.<b.e.g: java.lang.Object m(int)>($i0);

        if $r2 == $r3 goto label1;

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r0.<b.e.g: java.lang.Object l(int,java.lang.Object)>($i0, $r1);

        return 1;

     label2:
        return 0;
    }

    public int size()
    {
        int i0;
        b.e.g r0;

        r0 := @this: b.e.g;

        i0 = r0.<b.e.g: int d>;

        return i0;
    }

    public java.lang.String toString()
    {
        int $i0, $i1;
        b.e.g r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: b.e.g;

        $z0 = virtualinvoke r0.<b.e.g: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "{}";

     label1:
        $r1 = new java.lang.StringBuilder;

        $i0 = r0.<b.e.g: int d>;

        $i0 = $i0 * 28;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $i0 = 0;

     label2:
        $i1 = r0.<b.e.g: int d>;

        if $i0 >= $i1 goto label8;

        if $i0 <= 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        $r2 = virtualinvoke r0.<b.e.g: java.lang.Object i(int)>($i0);

        if $r2 == r0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(this Map)");

     label5:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r2 = virtualinvoke r0.<b.e.g: java.lang.Object m(int)>($i0);

        if $r2 == r0 goto label6;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        goto label7;

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(this Map)");

     label7:
        $i0 = $i0 + 1;

        goto label2;

     label8:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
