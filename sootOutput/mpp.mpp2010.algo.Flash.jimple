public class mpp.mpp2010.algo.Flash extends mpp.mpp2010.algo.Algo
{
    static final double[] _M;
    static final int _size;
    private float a;
    private float[] avg;
    private float avgEX;
    private float c;
    private int displayH;
    private int displayW;
    private float f;
    private float[][] imageEX;
    private float m;
    private float[] temp_max;

    static void <clinit>()
    {
        double[] $r0;

        <mpp.mpp2010.algo.Flash: int _size> = 9;

        $r0 = newarray (double)[4];

        $r0[0] = 0.09;

        $r0[1] = 0.23;

        $r0[2] = 0.46;

        $r0[3] = 0.61;

        <mpp.mpp2010.algo.Flash: double[] _M> = $r0;

        return;
    }

    public void <init>(android.graphics.Bitmap, int, int)
    {
        android.graphics.Bitmap $r1;
        mpp.mpp2010.algo.Flash r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: mpp.mpp2010.algo.Flash;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<mpp.mpp2010.algo.Algo: void <init>(android.graphics.Bitmap)>($r1);

        r0.<mpp.mpp2010.algo.Flash: float f> = 1.0F;

        r0.<mpp.mpp2010.algo.Flash: float m> = 0.462F;

        r0.<mpp.mpp2010.algo.Flash: float c> = 0.5F;

        r0.<mpp.mpp2010.algo.Flash: float a> = 0.6F;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("construct done [H=");

        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("W=");

        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Flash", $r3);

        r0.<mpp.mpp2010.algo.Flash: int displayH> = $i0;

        r0.<mpp.mpp2010.algo.Flash: int displayW> = $i1;

        return;
    }

    private float getRGB2(int, int, int)
    {
        android.graphics.Bitmap $r1;
        mpp.mpp2010.algo.Flash r0;
        int $i0, $i1, $i2, i3;
        float $f0;

        r0 := @this: mpp.mpp2010.algo.Flash;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        i3 = 0;

        if $i2 != 0 goto label2;

        $r1 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap bmp>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getPixel(int,int)>($i1, $i0);

        i3 = $i0 & 255;

     label1:
        $f0 = (float) i3;

        $f0 = $f0 / 255.0F;

        return $f0;

     label2:
        if $i2 != 1 goto label3;

        $r1 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap bmp>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getPixel(int,int)>($i1, $i0);

        $i1 = 65280;

        $i0 = $i0 & $i1;

        i3 = $i0 >> 8;

        goto label1;

     label3:
        if $i2 != 2 goto label1;

        $r1 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap bmp>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getPixel(int,int)>($i1, $i0);

        $i0 = $i0 & 16711680;

        i3 = $i0 >> 16;

        goto label1;
    }

    private float getTemp(int, int, int)
    {
        float[][] $r1;
        mpp.mpp2010.algo.Flash r0;
        float[] $r2;
        int $i0, $i1, $i2;
        float f0, $f1, $f2, $f3;
        double $d0, $d1, $d2;

        r0 := @this: mpp.mpp2010.algo.Flash;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $f1 = specialinvoke r0.<mpp.mpp2010.algo.Flash: float getRGB2(int,int,int)>($i0, $i1, $i2);

        f0 = r0.<mpp.mpp2010.algo.Flash: float c>;

        f0 = f0 * $f1;

        $f2 = r0.<mpp.mpp2010.algo.Flash: float c>;

        $f2 = 1.0F - $f2;

        $r1 = r0.<mpp.mpp2010.algo.Flash: float[][] imageEX>;

        $r2 = $r1[$i0];

        $f3 = $r2[$i1];

        $f2 = $f2 * $f3;

        f0 = f0 + $f2;

        $f2 = r0.<mpp.mpp2010.algo.Flash: float a>;

        f0 = $f2 * f0;

        $f2 = r0.<mpp.mpp2010.algo.Flash: float a>;

        $f2 = 1.0F - $f2;

        $r2 = r0.<mpp.mpp2010.algo.Flash: float[] avg>;

        $f3 = $r2[$i2];

        $f2 = $f2 * $f3;

        f0 = f0 + $f2;

        $d0 = (double) $f1;

        $f2 = r0.<mpp.mpp2010.algo.Flash: float f>;

        f0 = $f2 * f0;

        $d1 = (double) f0;

        f0 = r0.<mpp.mpp2010.algo.Flash: float m>;

        $d2 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, $d2);

        $d0 = $d0 + $d1;

        f0 = (float) $d0;

        $f1 = $f1 / f0;

        return $f1;
    }

    private android.graphics.Bitmap normalization()
    {
        mpp.mpp2010.algo.Flash r0;
        float[] $r3;
        android.graphics.Bitmap $r1, $r2;
        int i0, i1, i2, $i3, $i4, i5, i6;
        float $f0, $f1;

        r0 := @this: mpp.mpp2010.algo.Flash;

        $r1 = virtualinvoke r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap getNewBitmap()>();

        $r2 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap bmp>;

        $i3 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $r2 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap bmp>;

        $i4 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        i5 = 0;

     label1:
        if i5 < $i3 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Flash", "normalization done");

        return $r1;

     label2:
        i6 = 0;

     label3:
        if i6 < $i4 goto label4;

        i5 = i5 + 1;

        goto label1;

     label4:
        $f0 = specialinvoke r0.<mpp.mpp2010.algo.Flash: float getTemp(int,int,int)>(i5, i6, 0);

        $r3 = r0.<mpp.mpp2010.algo.Flash: float[] temp_max>;

        $f1 = $r3[0];

        $f0 = $f0 / $f1;

        $f0 = $f0 * 255.0F;

        i0 = (int) $f0;

        $f0 = specialinvoke r0.<mpp.mpp2010.algo.Flash: float getTemp(int,int,int)>(i5, i6, 1);

        $r3 = r0.<mpp.mpp2010.algo.Flash: float[] temp_max>;

        $f1 = $r3[1];

        $f0 = $f0 / $f1;

        $f0 = $f0 * 255.0F;

        i1 = (int) $f0;

        $f0 = specialinvoke r0.<mpp.mpp2010.algo.Flash: float getTemp(int,int,int)>(i5, i6, 2);

        $r3 = r0.<mpp.mpp2010.algo.Flash: float[] temp_max>;

        $f1 = $r3[2];

        $f0 = $f0 / $f1;

        $f0 = $f0 * 255.0F;

        i2 = (int) $f0;

        i1 = i1 << 8;

        i0 = i1 + i0;

        i2 = i2 << 16;

        i2 = i0 + i2;

        virtualinvoke $r1.<android.graphics.Bitmap: void setPixel(int,int,int)>(i6, i5, i2);

        i6 = i6 + 1;

        goto label3;
    }

    private void preProcess()
    {
        float[] $r6, $r7;
        int[] $r2;
        int $i0, $i1, i2, i3;
        double $d0, $d1;
        float[][] r5;
        mpp.mpp2010.algo.Flash r0;
        android.graphics.Bitmap $r1;
        float $f0, $f1, $f2, $f3;
        java.lang.Class $r3;
        java.lang.Object $r4;

        r0 := @this: mpp.mpp2010.algo.Flash;

        $r1 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap bmp>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $r1 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap bmp>;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $r2 = newarray (int)[2];

        $r2[0] = $i0;

        $r2[1] = $i1;

        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        r5 = (float[][]) $r4;

        r0.<mpp.mpp2010.algo.Flash: float[][] imageEX> = r5;

        $r6 = newarray (float)[3];

        r0.<mpp.mpp2010.algo.Flash: float[] avg> = $r6;

        r0.<mpp.mpp2010.algo.Flash: float avgEX> = 0.0F;

        i2 = 0;

     label1:
        if i2 < $i0 goto label3;

        $f0 = r0.<mpp.mpp2010.algo.Flash: float avgEX>;

        i2 = $i0 * $i1;

        $f1 = (float) i2;

        $f0 = $f0 / $f1;

        r0.<mpp.mpp2010.algo.Flash: float avgEX> = $f0;

        i2 = 0;

     label2:
        if i2 < 3 goto label6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Flash", "pre-process done");

        return;

     label3:
        i3 = 0;

     label4:
        if i3 < $i1 goto label5;

        i2 = i2 + 1;

        goto label1;

     label5:
        $f0 = specialinvoke r0.<mpp.mpp2010.algo.Flash: float getRGB2(int,int,int)>(i2, i3, 1);

        $f1 = specialinvoke r0.<mpp.mpp2010.algo.Flash: float getRGB2(int,int,int)>(i2, i3, 0);

        $f2 = specialinvoke r0.<mpp.mpp2010.algo.Flash: float getRGB2(int,int,int)>(i2, i3, 2);

        $r6 = r0.<mpp.mpp2010.algo.Flash: float[] avg>;

        $f3 = $r6[0];

        $f3 = $f3 + $f2;

        $r6[0] = $f3;

        $r6 = r0.<mpp.mpp2010.algo.Flash: float[] avg>;

        $f3 = $r6[1];

        $f3 = $f3 + $f0;

        $r6[1] = $f3;

        $r6 = r0.<mpp.mpp2010.algo.Flash: float[] avg>;

        $f3 = $r6[2];

        $f3 = $f3 + $f1;

        $r6[2] = $f3;

        r5 = r0.<mpp.mpp2010.algo.Flash: float[][] imageEX>;

        $r6 = r5[i2];

        $d0 = (double) $f1;

        $d0 = 0.0721 * $d0;

        $d1 = (double) $f0;

        $d1 = 0.7154 * $d1;

        $d0 = $d0 + $d1;

        $d1 = (double) $f2;

        $d1 = $d1 * 0.2125;

        $d0 = $d0 + $d1;

        $f0 = (float) $d0;

        $r6[i3] = $f0;

        $f0 = r0.<mpp.mpp2010.algo.Flash: float avgEX>;

        r5 = r0.<mpp.mpp2010.algo.Flash: float[][] imageEX>;

        $r6 = r5[i2];

        $f1 = $r6[i3];

        $f0 = $f0 + $f1;

        r0.<mpp.mpp2010.algo.Flash: float avgEX> = $f0;

        i3 = i3 + 1;

        goto label4;

     label6:
        $r6 = r0.<mpp.mpp2010.algo.Flash: float[] avg>;

        $f0 = $r6[i2];

        $f1 = (float) $i0;

        $f2 = (float) $i1;

        $f1 = $f1 * $f2;

        $f0 = $f0 / $f1;

        $r6[i2] = $f0;

        $r6 = r0.<mpp.mpp2010.algo.Flash: float[] avg>;

        $f0 = r0.<mpp.mpp2010.algo.Flash: float c>;

        $r7 = r0.<mpp.mpp2010.algo.Flash: float[] avg>;

        $f1 = $r7[i2];

        $f0 = $f0 * $f1;

        $f1 = r0.<mpp.mpp2010.algo.Flash: float c>;

        $f1 = 1.0F - $f1;

        $f2 = r0.<mpp.mpp2010.algo.Flash: float avgEX>;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $r6[i2] = $f0;

        i2 = i2 + 1;

        goto label2;
    }

    public void debug()
    {
        float[][] $r4;
        mpp.mpp2010.algo.Flash r0;
        float[] $r2;
        int i0, $i1;
        float $f0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;

        r0 := @this: mpp.mpp2010.algo.Flash;

        i0 = 0;

     label1:
        if i0 < 10 goto label4;

        i0 = 0;

     label2:
        if i0 < 10 goto label5;

        i0 = 0;

     label3:
        if i0 < 10 goto label6;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("avg=");

        $r2 = r0.<mpp.mpp2010.algo.Flash: float[] avg>;

        $f0 = $r2[0];

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("debug", $r3);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("avg=");

        $r2 = r0.<mpp.mpp2010.algo.Flash: float[] avg>;

        $f0 = $r2[1];

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("debug", $r3);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("avg=");

        $r2 = r0.<mpp.mpp2010.algo.Flash: float[] avg>;

        $f0 = $r2[2];

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("debug", $r3);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("avgEX=");

        $f0 = r0.<mpp.mpp2010.algo.Flash: float avgEX>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("debug", $r3);

        return;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("BLUE=");

        $i1 = virtualinvoke r0.<mpp.mpp2010.algo.Flash: int getRGB(int,int,int)>(0, i0, 0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("debug", $r3);

        i0 = i0 + 1;

        goto label1;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("BLUE/255=");

        $f0 = specialinvoke r0.<mpp.mpp2010.algo.Flash: float getRGB2(int,int,int)>(0, i0, 0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("debug", $r3);

        i0 = i0 + 1;

        goto label2;

     label6:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("imageEX=");

        $r4 = r0.<mpp.mpp2010.algo.Flash: float[][] imageEX>;

        $r2 = $r4[0];

        $f0 = $r2[i0];

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("debug", $r3);

        i0 = i0 + 1;

        goto label3;
    }

    public android.graphics.Bitmap mainProcess(float)
    {
        long l0, $l4;
        float[] $r2;
        byte $b7;
        int $i1, $i2, i3, i5, i6, $i8;
        java.lang.String $r4;
        mpp.mpp2010.algo.Flash r0;
        android.graphics.Bitmap $r1;
        float $f0, $f1;
        java.lang.StringBuilder $r3, $r5;

        r0 := @this: mpp.mpp2010.algo.Flash;

        $f0 := @parameter0: float;

        l0 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<mpp.mpp2010.algo.Flash: float m> = $f0;

        $r1 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap bmp>;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $r1 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap bmp>;

        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $r2 = newarray (float)[3];

        r0.<mpp.mpp2010.algo.Flash: float[] temp_max> = $r2;

        i3 = 0;

     label1:
        if i3 < 3 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Flash", "process done");

        $l4 = staticinvoke <java.lang.System: long nanoTime()>();

        l0 = $l4 - l0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("[DIP] time:");

        l0 = l0 / 1000000L;

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Flash", $r4);

        $r1 = specialinvoke r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap normalization()>();

        return $r1;

     label2:
        i5 = 0;

     label3:
        if i5 < $i1 goto label4;

        i3 = i3 + 1;

        goto label1;

     label4:
        i6 = 0;

     label5:
        if i6 < $i2 goto label6;

        i5 = i5 + 1;

        goto label3;

     label6:
        $f0 = specialinvoke r0.<mpp.mpp2010.algo.Flash: float getTemp(int,int,int)>(i5, i6, i3);

        $r2 = r0.<mpp.mpp2010.algo.Flash: float[] temp_max>;

        $f1 = $r2[i3];

        $b7 = $f0 cmpl $f1;

        $i8 = (int) $b7;

        if $i8 <= 0 goto label7;

        $r2 = r0.<mpp.mpp2010.algo.Flash: float[] temp_max>;

        $r2[i3] = $f0;

     label7:
        i6 = i6 + 1;

        goto label5;
    }

    public android.graphics.Bitmap[] process9_Drawable()
    {
        mpp.mpp2010.algo.Flash r0;
        android.graphics.Bitmap[] r1;
        double[] $r3;
        android.graphics.Bitmap $r2;
        int $i0, $i1;
        float $f0;
        double $d0;

        r0 := @this: mpp.mpp2010.algo.Flash;

        r1 = newarray (android.graphics.Bitmap)[9];

        $i0 = r0.<mpp.mpp2010.algo.Flash: int displayH>;

        $i0 = $i0 / 3;

        $i1 = r0.<mpp.mpp2010.algo.Flash: int displayW>;

        $i1 = $i1 / 3;

        virtualinvoke r0.<mpp.mpp2010.algo.Flash: void reSize(int,int)>($i0, $i1);

        $r2 = virtualinvoke r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap getBitmap()>();

        r1[8] = $r2;

        specialinvoke r0.<mpp.mpp2010.algo.Flash: void preProcess()>();

        $i0 = 0;

     label1:
        $r3 = <mpp.mpp2010.algo.Flash: double[] _M>;

        $i1 = lengthof $r3;

        if $i0 < $i1 goto label2;

        return r1;

     label2:
        $i1 = $i0 * 2;

        $r3 = <mpp.mpp2010.algo.Flash: double[] _M>;

        $d0 = $r3[$i0];

        $f0 = (float) $d0;

        $r2 = virtualinvoke r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap mainProcess(float)>($f0);

        r1[$i1] = $r2;

        $i1 = $i0 * 2;

        $i1 = $i1 + 1;

        $r3 = <mpp.mpp2010.algo.Flash: double[] _M>;

        $d0 = $r3[$i0];

        $f0 = (float) $d0;

        $r2 = virtualinvoke r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap mainProcess(float)>($f0);

        r1[$i1] = $r2;

        $i0 = $i0 + 1;

        goto label1;
    }

    public android.graphics.Bitmap processe1(int, java.lang.String)
    {
        mpp.mpp2010.algo.Flash r0;
        double[] $r6;
        android.graphics.Bitmap $r4, $r5;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3;
        double $d0;

        r0 := @this: mpp.mpp2010.algo.Flash;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Flash", $r3);

        $r4 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap obmp>;

        $r5 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap obmp>;

        $i1 = virtualinvoke $r5.<android.graphics.Bitmap: int getWidth()>();

        $r5 = r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap obmp>;

        $i2 = virtualinvoke $r5.<android.graphics.Bitmap: int getHeight()>();

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r4, $i1, $i2, 1);

        r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap bmp> = $r4;

        specialinvoke r0.<mpp.mpp2010.algo.Flash: void preProcess()>();

        if $i0 != 8 goto label2;

        $r4 = virtualinvoke r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap getBitmap()>();

     label1:
        virtualinvoke r0.<mpp.mpp2010.algo.Flash: void writeToFile(android.graphics.Bitmap,java.lang.String)>($r4, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r4.<android.graphics.Bitmap: int getHeight()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $i0 = virtualinvoke $r4.<android.graphics.Bitmap: int getWidth()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Flash", $r1);

        $r4 = virtualinvoke r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap getBitmap()>();

        return $r4;

     label2:
        $r6 = <mpp.mpp2010.algo.Flash: double[] _M>;

        $i0 = $i0 / 2;

        $d0 = $r6[$i0];

        $f0 = (float) $d0;

        $r4 = virtualinvoke r0.<mpp.mpp2010.algo.Flash: android.graphics.Bitmap mainProcess(float)>($f0);

        goto label1;
    }
}
