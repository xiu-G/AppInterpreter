public class org.json.CDL extends java.lang.Object
{

    public void <init>()
    {
        org.json.CDL r0;

        r0 := @this: org.json.CDL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String getValue(org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONTokener $r0;
        int $i1;
        char $c0;
        java.lang.String $r1;

        $r0 := @parameter0: org.json.JSONTokener;

     label1:
        $c0 = virtualinvoke $r0.<org.json.JSONTokener: char next()>();

        $i1 = (int) $c0;

        if $i1 > 32 goto label2;

        if $c0 != 0 goto label1;

     label2:
        $i1 = (int) $c0;

        lookupswitch($i1)
        {
            case 0: goto label4;
            case 34: goto label5;
            case 39: goto label5;
            case 44: goto label6;
            default: goto label3;
        };

     label3:
        virtualinvoke $r0.<org.json.JSONTokener: void back()>();

        $r1 = virtualinvoke $r0.<org.json.JSONTokener: java.lang.String nextTo(char)>(44);

        return $r1;

     label4:
        return null;

     label5:
        $r1 = virtualinvoke $r0.<org.json.JSONTokener: java.lang.String nextString(char)>($c0);

        return $r1;

     label6:
        virtualinvoke $r0.<org.json.JSONTokener: void back()>();

        return "";
    }

    public static org.json.JSONArray rowToJSONArray(org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONTokener $r0;
        char $c0;
        org.json.JSONException $r4;
        int $i1;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r2;
        org.json.JSONArray $r1, $r5;

        $r0 := @parameter0: org.json.JSONTokener;

        $r5 = new org.json.JSONArray;

        $r1 = $r5;

        specialinvoke $r5.<org.json.JSONArray: void <init>()>();

     label1:
        $r2 = staticinvoke <org.json.CDL: java.lang.String getValue(org.json.JSONTokener)>($r0);

        if $r2 != null goto label2;

        return null;

     label2:
        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r2);

     label3:
        $c0 = virtualinvoke $r0.<org.json.JSONTokener: char next()>();

        $i1 = (int) $c0;

        if $i1 == 44 goto label1;

        $i1 = (int) $c0;

        if $i1 == 32 goto label3;

        $i1 = (int) $c0;

        if $i1 == 10 goto label4;

        $i1 = (int) $c0;

        if $i1 == 13 goto label4;

        if $c0 == 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad character \'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (");

        $i1 = (int) $c0;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<org.json.JSONTokener: org.json.JSONException syntaxError(java.lang.String)>($r2);

        throw $r4;

     label4:
        return $r1;
    }

    public static org.json.JSONObject rowToJSONObject(org.json.JSONArray, org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONObject $r3;
        org.json.JSONTokener $r1;
        org.json.JSONArray $r0, $r2;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 := @parameter1: org.json.JSONTokener;

        $r2 = staticinvoke <org.json.CDL: org.json.JSONArray rowToJSONArray(org.json.JSONTokener)>($r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.json.JSONArray: org.json.JSONObject toJSONObject(org.json.JSONArray)>($r0);

        return $r3;

     label1:
        return null;
    }

    public static java.lang.String rowToString(org.json.JSONArray)
    {
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.json.JSONArray $r0;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label6;

        if $i0 <= 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label2:
        $r2 = virtualinvoke $r0.<org.json.JSONArray: java.lang.Object opt(int)>($i0);

        if $r2 == null goto label3;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(44);

        if $i1 < 0 goto label5;

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(34);

        if $i1 < 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        goto label3;

     label5:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label3;

     label6:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static org.json.JSONArray toJSONArray(java.lang.String) throws org.json.JSONException
    {
        org.json.JSONTokener $r2;
        java.lang.String $r0;
        org.json.JSONArray $r1;

        $r0 := @parameter0: java.lang.String;

        $r2 = new org.json.JSONTokener;

        specialinvoke $r2.<org.json.JSONTokener: void <init>(java.lang.String)>($r0);

        $r1 = staticinvoke <org.json.CDL: org.json.JSONArray toJSONArray(org.json.JSONTokener)>($r2);

        return $r1;
    }

    public static org.json.JSONArray toJSONArray(org.json.JSONArray, java.lang.String) throws org.json.JSONException
    {
        org.json.JSONTokener $r2;
        java.lang.String $r1;
        org.json.JSONArray $r0;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 := @parameter1: java.lang.String;

        $r2 = new org.json.JSONTokener;

        specialinvoke $r2.<org.json.JSONTokener: void <init>(java.lang.String)>($r1);

        $r0 = staticinvoke <org.json.CDL: org.json.JSONArray toJSONArray(org.json.JSONArray,org.json.JSONTokener)>($r0, $r2);

        return $r0;
    }

    public static org.json.JSONArray toJSONArray(org.json.JSONArray, org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONObject $r3;
        org.json.JSONTokener $r1;
        int $i0;
        org.json.JSONArray $r0, $r2;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 := @parameter1: org.json.JSONTokener;

        if $r0 == null goto label4;

        $i0 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = new org.json.JSONArray;

        specialinvoke $r2.<org.json.JSONArray: void <init>()>();

     label2:
        $r3 = staticinvoke <org.json.CDL: org.json.JSONObject rowToJSONObject(org.json.JSONArray,org.json.JSONTokener)>($r0, $r1);

        if $r3 != null goto label3;

        $i0 = virtualinvoke $r2.<org.json.JSONArray: int length()>();

        if $i0 == 0 goto label4;

        return $r2;

     label3:
        virtualinvoke $r2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r3);

        goto label2;

     label4:
        return null;
    }

    public static org.json.JSONArray toJSONArray(org.json.JSONTokener) throws org.json.JSONException
    {
        org.json.JSONTokener $r0;
        org.json.JSONArray $r1;

        $r0 := @parameter0: org.json.JSONTokener;

        $r1 = staticinvoke <org.json.CDL: org.json.JSONArray rowToJSONArray(org.json.JSONTokener)>($r0);

        $r1 = staticinvoke <org.json.CDL: org.json.JSONArray toJSONArray(org.json.JSONArray,org.json.JSONTokener)>($r1, $r0);

        return $r1;
    }

    public static java.lang.String toString(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONObject $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        org.json.JSONArray $r0, $r2;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>(0);

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray names()>();

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <org.json.CDL: java.lang.String rowToString(org.json.JSONArray)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = staticinvoke <org.json.CDL: java.lang.String toString(org.json.JSONArray,org.json.JSONArray)>($r2, $r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return null;
    }

    public static java.lang.String toString(org.json.JSONArray, org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONObject $r3;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        java.lang.String $r5;
        org.json.JSONArray $r0, $r1, $r4;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 := @parameter1: org.json.JSONArray;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label5;

        $r3 = virtualinvoke $r1.<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>($i0);

        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray toJSONArray(org.json.JSONArray)>($r0);

        $r5 = staticinvoke <org.json.CDL: java.lang.String rowToString(org.json.JSONArray)>($r4);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label4:
        $i0 = $i0 + 1;

        goto label3;

     label5:
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
