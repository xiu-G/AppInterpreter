public class com.donson.momark.util.a.e extends java.lang.Thread
{
    int a;
    com.donson.momark.util.a.a b;
    private java.lang.String c;
    private java.lang.String d;
    private int e;
    private boolean f;

    public void <init>(com.donson.momark.util.a.a)
    {
        com.donson.momark.util.a.a $r1;
        com.donson.momark.util.a.e r0;

        r0 := @this: com.donson.momark.util.a.e;

        $r1 := @parameter0: com.donson.momark.util.a.a;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<com.donson.momark.util.a.e: int a> = 0;

        r0.<com.donson.momark.util.a.e: java.lang.String c> = ".donsonmomark";

        r0.<com.donson.momark.util.a.e: boolean f> = 0;

        r0.<com.donson.momark.util.a.e: com.donson.momark.util.a.a b> = $r1;

        return;
    }

    public java.lang.Boolean a(com.donson.momark.util.a.a)
    {
        java.net.HttpURLConnection $r7;
        java.io.RandomAccessFile $r10, $r44;
        byte[] $r12;
        java.net.URL $r5, $r41;
        boolean $z0;
        java.lang.Exception $r14, $r26, $r33, $r39, $r40;
        java.lang.StringBuilder $r8, $r42;
        java.lang.Throwable $r15, $r16, $r17, $r18, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r34, $r35, $r36, $r37, $r38;
        com.donson.momark.util.a.e r0;
        long $l1;
        com.donson.momark.util.a.a $r1, $r19;
        java.net.URLConnection $r6;
        int $i0, $i2;
        java.lang.Boolean $r13;
        java.lang.String $r3, $r4;
        java.net.MalformedURLException $r46;
        java.io.IOException $r45;
        java.io.File $r9, $r43;
        java.lang.Object $r2, $r21;
        java.io.InputStream $r11;

        r0 := @this: com.donson.momark.util.a.e;

        $r1 := @parameter0: com.donson.momark.util.a.a;

        $r2 = null;

        $r3 = virtualinvoke $r1.<com.donson.momark.util.a.a: java.lang.String g()>();

        virtualinvoke r0.<com.donson.momark.util.a.e: void a()>();

     label001:
        $r4 = virtualinvoke $r1.<com.donson.momark.util.a.a: java.lang.String g()>();

     label002:
        $r41 = new java.net.URL;

     label003:
        $r5 = $r41;

     label004:
        specialinvoke $r41.<java.net.URL: void <init>(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

        $r7 = (java.net.HttpURLConnection) $r6;

     label005:
        virtualinvoke $r7.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000);

        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        $i0 = virtualinvoke $r7.<java.net.HttpURLConnection: int getContentLength()>();

        r0.<com.donson.momark.util.a.e: int e> = $i0;

     label006:
        $r42 = new java.lang.StringBuilder;

     label007:
        $r8 = $r42;

     label008:
        specialinvoke $r42.<java.lang.StringBuilder: void <init>(java.lang.String)>("/sdcard/momark/");

        $i0 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

     label009:
        $i0 = $i0 + 1;

     label010:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = r0.<com.donson.momark.util.a.e: java.lang.String c>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.donson.momark.util.a.e: java.lang.String d> = $r4;

     label011:
        $r43 = new java.io.File;

     label012:
        $r9 = $r43;

     label013:
        $r4 = r0.<com.donson.momark.util.a.e: java.lang.String d>;

        specialinvoke $r43.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();

     label014:
        if $z0 != 0 goto label016;

     label015:
        virtualinvoke $r9.<java.io.File: boolean createNewFile()>();

     label016:
        $r44 = new java.io.RandomAccessFile;

     label017:
        $r10 = $r44;

     label018:
        specialinvoke $r44.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r9, "rwd");

     label019:
        $i0 = r0.<com.donson.momark.util.a.e: int e>;

     label020:
        $l1 = (long) $i0;

     label021:
        virtualinvoke $r10.<java.io.RandomAccessFile: void setLength(long)>($l1);

        $i0 = r0.<com.donson.momark.util.a.e: int e>;

        virtualinvoke $r1.<com.donson.momark.util.a.a: void a(int)>($i0);

     label022:
        virtualinvoke $r10.<java.io.RandomAccessFile: void close()>();

     label023:
        if $r7 == null goto label025;

     label024:
        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

     label025:
        $r41 = new java.net.URL;

     label026:
        $r5 = $r41;

     label027:
        specialinvoke $r41.<java.net.URL: void <init>(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

     label028:
        $r7 = (java.net.HttpURLConnection) $r6;

     label029:
        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        virtualinvoke $r7.<java.net.HttpURLConnection: void setConnectTimeout(int)>(6000);

     label030:
        $r42 = new java.lang.StringBuilder;

     label031:
        $r8 = $r42;

     label032:
        specialinvoke $r42.<java.lang.StringBuilder: void <init>(java.lang.String)>("bytes=");

        $i0 = virtualinvoke $r1.<com.donson.momark.util.a.a: int h()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

     label033:
        $i0 = r0.<com.donson.momark.util.a.e: int e>;

     label034:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Range", $r3);

     label035:
        $r44 = new java.io.RandomAccessFile;

     label036:
        $r10 = $r44;

     label037:
        $r3 = r0.<com.donson.momark.util.a.e: java.lang.String d>;

     label038:
        specialinvoke $r44.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r3, "rwd");

        $i0 = virtualinvoke $r1.<com.donson.momark.util.a.a: int h()>();

     label039:
        $l1 = (long) $i0;

     label040:
        virtualinvoke $r10.<java.io.RandomAccessFile: void seek(long)>($l1);

        $r11 = virtualinvoke $r7.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label041:
        $r2 = $r11;

        $r12 = newarray (byte)[4096];

     label042:
        r0.<com.donson.momark.util.a.e: int a> = -1;

     label043:
        $i0 = virtualinvoke $r11.<java.io.InputStream: int read(byte[])>($r12);

     label044:
        r0.<com.donson.momark.util.a.e: int a> = $i0;

     label045:
        if $i0 <= 0 goto label048;

     label046:
        $z0 = r0.<com.donson.momark.util.a.e: boolean f>;

     label047:
        if $z0 == 0 goto label069;

     label048:
        if $r11 == null goto label050;

     label049:
        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label050:
        if $r7 == null goto label052;

     label051:
        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

     label052:
        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r13;

     label053:
        $r14 := @caughtexception;

        $r7 = null;

        $r10 = null;

     label054:
        virtualinvoke $r14.<java.lang.Exception: void printStackTrace()>();

     label055:
        if $r10 == null goto label057;

     label056:
        virtualinvoke $r10.<java.io.RandomAccessFile: void close()>();

     label057:
        if $r7 == null goto label025;

     label058:
        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

     label059:
        goto label025;

     label060:
        $r15 := @caughtexception;

        $r45 = (java.io.IOException) $r15;

        virtualinvoke $r45.<java.io.IOException: void printStackTrace()>();

        goto label025;

     label061:
        $r16 := @caughtexception;

        $r10 = null;

     label062:
        if $r10 == null goto label064;

     label063:
        virtualinvoke $r10.<java.io.RandomAccessFile: void close()>();

     label064:
        if $r2 == null goto label066;

        $r7 = (java.net.HttpURLConnection) $r2;

     label065:
        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

     label066:
        throw $r16;

     label067:
        $r17 := @caughtexception;

        $r45 = (java.io.IOException) $r17;

        virtualinvoke $r45.<java.io.IOException: void printStackTrace()>();

        goto label066;

     label068:
        $r18 := @caughtexception;

        $r45 = (java.io.IOException) $r18;

        virtualinvoke $r45.<java.io.IOException: void printStackTrace()>();

        goto label025;

     label069:
        $i0 = r0.<com.donson.momark.util.a.e: int a>;

     label070:
        virtualinvoke $r10.<java.io.RandomAccessFile: void write(byte[],int,int)>($r12, 0, $i0);

        $i0 = virtualinvoke $r1.<com.donson.momark.util.a.a: int h()>();

     label071:
        $i2 = r0.<com.donson.momark.util.a.e: int a>;

     label072:
        $i0 = $i0 + $i2;

     label073:
        virtualinvoke $r1.<com.donson.momark.util.a.a: void d(int)>($i0);

        $i0 = virtualinvoke $r1.<com.donson.momark.util.a.a: int h()>();

     label074:
        $i2 = r0.<com.donson.momark.util.a.e: int a>;

     label075:
        $i0 = $i0 + $i2;

     label076:
        staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label077:
        $r19 = r0.<com.donson.momark.util.a.e: com.donson.momark.util.a.a b>;

     label078:
        virtualinvoke $r19.<com.donson.momark.util.a.a: void j()>();

        $i0 = virtualinvoke $r1.<com.donson.momark.util.a.a: int h()>();

     label079:
        $i2 = r0.<com.donson.momark.util.a.e: int e>;

     label080:
        if $i0 != $i2 goto label043;

     label081:
        virtualinvoke r0.<com.donson.momark.util.a.e: void d()>();

     label082:
        goto label043;

     label083:
        $r20 := @caughtexception;

        $r21 = $r11;

        $r2 = $r7;

        $r22 = $r20;

     label084:
        $r46 = (java.net.MalformedURLException) $r22;

        virtualinvoke $r46.<java.net.MalformedURLException: void printStackTrace()>();

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label085:
        if $r21 == null goto label087;

        $r11 = (java.io.InputStream) $r21;

     label086:
        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label087:
        if $r2 == null goto label128;

        $r7 = (java.net.HttpURLConnection) $r2;

     label088:
        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

     label089:
        return $r13;

     label090:
        $r23 := @caughtexception;

        $r45 = (java.io.IOException) $r23;

        virtualinvoke $r45.<java.io.IOException: void printStackTrace()>();

        return $r13;

     label091:
        $r24 := @caughtexception;

        $r21 = null;

     label092:
        $r45 = (java.io.IOException) $r24;

        virtualinvoke $r45.<java.io.IOException: void printStackTrace()>();

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label093:
        if $r21 == null goto label095;

        $r11 = (java.io.InputStream) $r21;

     label094:
        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label095:
        if $r2 == null goto label128;

        $r7 = (java.net.HttpURLConnection) $r2;

     label096:
        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

     label097:
        return $r13;

     label098:
        $r25 := @caughtexception;

        $r45 = (java.io.IOException) $r25;

        virtualinvoke $r45.<java.io.IOException: void printStackTrace()>();

        return $r13;

     label099:
        $r26 := @caughtexception;

        $r7 = null;

     label100:
        virtualinvoke $r1.<com.donson.momark.util.a.a: void d(boolean)>(1);

     label101:
        if $r2 == null goto label103;

        $r11 = (java.io.InputStream) $r2;

     label102:
        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label103:
        if $r7 == null goto label052;

     label104:
        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

     label105:
        goto label052;

     label106:
        $r27 := @caughtexception;

        $r45 = (java.io.IOException) $r27;

        virtualinvoke $r45.<java.io.IOException: void printStackTrace()>();

        goto label052;

     label107:
        $r28 := @caughtexception;

        $r21 = null;

     label108:
        if $r21 == null goto label110;

        $r11 = (java.io.InputStream) $r21;

     label109:
        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label110:
        if $r2 == null goto label112;

        $r7 = (java.net.HttpURLConnection) $r2;

     label111:
        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

     label112:
        throw $r28;

     label113:
        $r29 := @caughtexception;

        $r45 = (java.io.IOException) $r29;

        virtualinvoke $r45.<java.io.IOException: void printStackTrace()>();

        goto label112;

     label114:
        $r30 := @caughtexception;

        $r45 = (java.io.IOException) $r30;

        virtualinvoke $r45.<java.io.IOException: void printStackTrace()>();

        goto label052;

     label115:
        $r31 := @caughtexception;

        $r21 = null;

        $r2 = $r7;

        $r28 = $r31;

        goto label108;

     label116:
        $r32 := @caughtexception;

        $r21 = $r2;

        $r2 = $r7;

        $r28 = $r32;

        goto label108;

     label117:
        $r28 := @caughtexception;

        goto label108;

     label118:
        $r33 := @caughtexception;

        goto label100;

     label119:
        $r34 := @caughtexception;

        $r21 = null;

        $r2 = $r7;

        $r24 = $r34;

        goto label092;

     label120:
        $r35 := @caughtexception;

        $r21 = $r11;

        $r2 = $r7;

        $r24 = $r35;

        goto label092;

     label121:
        $r22 := @caughtexception;

        $r21 = null;

        goto label084;

     label122:
        $r36 := @caughtexception;

        $r21 = null;

        $r2 = $r7;

        $r22 = $r36;

        goto label084;

     label123:
        $r37 := @caughtexception;

        $r10 = null;

        $r2 = $r7;

        $r16 = $r37;

        goto label062;

     label124:
        $r38 := @caughtexception;

        $r2 = $r7;

        $r16 = $r38;

        goto label062;

     label125:
        $r16 := @caughtexception;

        $r2 = $r7;

        goto label062;

     label126:
        $r39 := @caughtexception;

        $r10 = null;

        $r14 = $r39;

        goto label054;

     label127:
        $r40 := @caughtexception;

        $r14 = $r40;

        goto label054;

     label128:
        return $r13;

        catch java.lang.Exception from label001 to label002 with label053;
        catch java.lang.Exception from label004 to label005 with label053;
        catch java.lang.Throwable from label001 to label003 with label061;
        catch java.lang.Throwable from label004 to label005 with label061;
        catch java.lang.Exception from label005 to label006 with label126;
        catch java.lang.Exception from label008 to label009 with label126;
        catch java.lang.Exception from label010 to label011 with label126;
        catch java.lang.Exception from label013 to label014 with label126;
        catch java.lang.Exception from label015 to label016 with label126;
        catch java.lang.Exception from label018 to label019 with label126;
        catch java.lang.Throwable from label005 to label007 with label123;
        catch java.lang.Throwable from label008 to label009 with label123;
        catch java.lang.Throwable from label010 to label012 with label123;
        catch java.lang.Throwable from label013 to label014 with label123;
        catch java.lang.Throwable from label015 to label017 with label123;
        catch java.lang.Throwable from label018 to label019 with label123;
        catch java.lang.Exception from label019 to label020 with label127;
        catch java.lang.Exception from label021 to label022 with label127;
        catch java.lang.Throwable from label019 to label020 with label124;
        catch java.lang.Throwable from label021 to label022 with label124;
        catch java.io.IOException from label022 to label023 with label068;
        catch java.io.IOException from label024 to label025 with label068;
        catch java.net.MalformedURLException from label027 to label028 with label121;
        catch java.io.IOException from label027 to label028 with label091;
        catch java.lang.Exception from label027 to label029 with label099;
        catch java.lang.Throwable from label025 to label026 with label107;
        catch java.lang.Throwable from label027 to label029 with label107;
        catch java.net.MalformedURLException from label029 to label030 with label122;
        catch java.net.MalformedURLException from label032 to label033 with label122;
        catch java.net.MalformedURLException from label034 to label035 with label122;
        catch java.net.MalformedURLException from label038 to label039 with label122;
        catch java.net.MalformedURLException from label040 to label041 with label122;
        catch java.io.IOException from label029 to label030 with label119;
        catch java.io.IOException from label032 to label033 with label119;
        catch java.io.IOException from label034 to label035 with label119;
        catch java.io.IOException from label038 to label039 with label119;
        catch java.io.IOException from label040 to label041 with label119;
        catch java.lang.Exception from label029 to label030 with label118;
        catch java.lang.Exception from label032 to label035 with label118;
        catch java.lang.Exception from label037 to label039 with label118;
        catch java.lang.Exception from label040 to label041 with label118;
        catch java.lang.Throwable from label029 to label031 with label115;
        catch java.lang.Throwable from label032 to label036 with label115;
        catch java.lang.Throwable from label037 to label039 with label115;
        catch java.lang.Throwable from label040 to label041 with label115;
        catch java.net.MalformedURLException from label043 to label044 with label083;
        catch java.io.IOException from label043 to label044 with label120;
        catch java.lang.Exception from label042 to label045 with label118;
        catch java.lang.Exception from label046 to label047 with label118;
        catch java.lang.Throwable from label042 to label045 with label116;
        catch java.lang.Throwable from label046 to label047 with label116;
        catch java.io.IOException from label049 to label050 with label114;
        catch java.io.IOException from label051 to label052 with label114;
        catch java.lang.Throwable from label054 to label055 with label125;
        catch java.io.IOException from label056 to label057 with label060;
        catch java.io.IOException from label058 to label059 with label060;
        catch java.io.IOException from label063 to label064 with label067;
        catch java.io.IOException from label065 to label066 with label067;
        catch java.net.MalformedURLException from label070 to label071 with label083;
        catch java.net.MalformedURLException from label073 to label074 with label083;
        catch java.net.MalformedURLException from label076 to label077 with label083;
        catch java.net.MalformedURLException from label078 to label079 with label083;
        catch java.net.MalformedURLException from label081 to label082 with label083;
        catch java.io.IOException from label070 to label071 with label120;
        catch java.io.IOException from label073 to label074 with label120;
        catch java.io.IOException from label076 to label077 with label120;
        catch java.io.IOException from label078 to label079 with label120;
        catch java.io.IOException from label081 to label082 with label120;
        catch java.lang.Exception from label069 to label072 with label118;
        catch java.lang.Exception from label073 to label075 with label118;
        catch java.lang.Exception from label076 to label080 with label118;
        catch java.lang.Exception from label081 to label082 with label118;
        catch java.lang.Throwable from label069 to label072 with label116;
        catch java.lang.Throwable from label073 to label075 with label116;
        catch java.lang.Throwable from label076 to label080 with label116;
        catch java.lang.Throwable from label081 to label082 with label116;
        catch java.lang.Throwable from label084 to label085 with label117;
        catch java.io.IOException from label086 to label087 with label090;
        catch java.io.IOException from label088 to label089 with label090;
        catch java.lang.Throwable from label092 to label093 with label117;
        catch java.io.IOException from label094 to label095 with label098;
        catch java.io.IOException from label096 to label097 with label098;
        catch java.lang.Throwable from label100 to label101 with label116;
        catch java.io.IOException from label102 to label103 with label106;
        catch java.io.IOException from label104 to label105 with label106;
        catch java.io.IOException from label109 to label110 with label113;
        catch java.io.IOException from label111 to label112 with label113;
    }

    public void a()
    {
        com.donson.momark.util.a.a $r1;
        com.donson.momark.util.a.e r0;

        r0 := @this: com.donson.momark.util.a.e;

        $r1 = r0.<com.donson.momark.util.a.e: com.donson.momark.util.a.a b>;

        virtualinvoke $r1.<com.donson.momark.util.a.a: void d()>();

        return;
    }

    public boolean a(boolean)
    {
        com.donson.momark.util.a.e r0;
        boolean $z0;

        r0 := @this: com.donson.momark.util.a.e;

        $z0 := @parameter0: boolean;

        r0.<com.donson.momark.util.a.e: boolean f> = $z0;

        $z0 = r0.<com.donson.momark.util.a.e: boolean f>;

        return $z0;
    }

    public void d()
    {
        com.donson.momark.util.a.a $r1;
        com.donson.momark.util.a.e r0;

        r0 := @this: com.donson.momark.util.a.e;

        $r1 = r0.<com.donson.momark.util.a.e: com.donson.momark.util.a.a b>;

        virtualinvoke $r1.<com.donson.momark.util.a.a: void e()>();

        return;
    }

    public void run()
    {
        com.donson.momark.util.a.a $r1;
        com.donson.momark.util.a.e r0;

        r0 := @this: com.donson.momark.util.a.e;

        $r1 = r0.<com.donson.momark.util.a.e: com.donson.momark.util.a.a b>;

        virtualinvoke r0.<com.donson.momark.util.a.e: java.lang.Boolean a(com.donson.momark.util.a.a)>($r1);

        return;
    }
}
