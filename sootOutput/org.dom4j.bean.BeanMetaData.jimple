public class org.dom4j.bean.BeanMetaData extends java.lang.Object
{
    private static final org.dom4j.DocumentFactory DOCUMENT_FACTORY;
    protected static final java.lang.Object[] NULL_ARGS;
    private static java.util.Map singletonCache;
    private java.lang.Class beanClass;
    private java.util.Map nameMap;
    private java.beans.PropertyDescriptor[] propertyDescriptors;
    private org.dom4j.QName[] qNames;
    private java.lang.reflect.Method[] readMethods;
    private java.lang.reflect.Method[] writeMethods;

    static void <clinit>()
    {
        java.util.HashMap $r2;
        java.lang.Object[] $r1;
        org.dom4j.DocumentFactory $r0;

        $r1 = newarray (java.lang.Object)[0];

        <org.dom4j.bean.BeanMetaData: java.lang.Object[] NULL_ARGS> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <org.dom4j.bean.BeanMetaData: java.util.Map singletonCache> = $r2;

        $r0 = staticinvoke <org.dom4j.bean.BeanDocumentFactory: org.dom4j.DocumentFactory getInstance()>();

        <org.dom4j.bean.BeanMetaData: org.dom4j.DocumentFactory DOCUMENT_FACTORY> = $r0;

        return;
    }

    public void <init>(java.lang.Class)
    {
        java.lang.Throwable r2;
        java.beans.PropertyDescriptor[] $r6;
        org.dom4j.QName[] $r7;
        java.util.HashMap $r14;
        java.lang.Integer r3, $r15;
        java.lang.reflect.Method[] $r8;
        org.dom4j.DocumentFactory $r10;
        java.beans.BeanInfo $r5;
        java.util.Map $r13;
        int i0, i1;
        java.lang.String $r9;
        java.lang.reflect.Method $r12;
        java.lang.Exception $r16;
        org.dom4j.bean.BeanMetaData r0;
        java.beans.PropertyDescriptor r4;
        java.lang.Class $r1;
        org.dom4j.QName $r11;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap> = $r14;

        r0.<org.dom4j.bean.BeanMetaData: java.lang.Class beanClass> = $r1;

        if $r1 == null goto label3;

     label1:
        $r5 = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>($r1);

        $r6 = interfaceinvoke $r5.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();

     label2:
        r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors> = $r6;

     label3:
        $r6 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        if $r6 != null goto label4;

        $r6 = newarray (java.beans.PropertyDescriptor)[0];

        r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors> = $r6;

     label4:
        $r6 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        i0 = lengthof $r6;

        $r7 = newarray (org.dom4j.QName)[i0];

        r0.<org.dom4j.bean.BeanMetaData: org.dom4j.QName[] qNames> = $r7;

        $r8 = newarray (java.lang.reflect.Method)[i0];

        r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] readMethods> = $r8;

        $r8 = newarray (java.lang.reflect.Method)[i0];

        r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] writeMethods> = $r8;

        i1 = 0;

     label5:
        if i1 >= i0 goto label7;

        $r6 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        r4 = $r6[i1];

        $r9 = virtualinvoke r4.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $r10 = <org.dom4j.bean.BeanMetaData: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        $r11 = virtualinvoke $r10.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String)>($r9);

        $r7 = r0.<org.dom4j.bean.BeanMetaData: org.dom4j.QName[] qNames>;

        $r7[i1] = $r11;

        $r8 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] readMethods>;

        $r12 = virtualinvoke r4.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>();

        $r8[i1] = $r12;

        $r8 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] writeMethods>;

        $r12 = virtualinvoke r4.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        $r8[i1] = $r12;

        $r15 = new java.lang.Integer;

        r3 = $r15;

        specialinvoke $r15.<java.lang.Integer: void <init>(int)>(i1);

        $r13 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r3);

        $r13 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r3);

        i1 = i1 + 1;

        goto label5;

     label6:
        r2 := @caughtexception;

        $r16 = (java.lang.Exception) r2;

        virtualinvoke r0.<org.dom4j.bean.BeanMetaData: void handleException(java.lang.Exception)>($r16);

        goto label3;

     label7:
        return;

        catch java.beans.IntrospectionException from label1 to label2 with label6;
    }

    public static org.dom4j.bean.BeanMetaData get(java.lang.Class)
    {
        org.dom4j.bean.BeanMetaData r3;
        java.util.Map $r2;
        java.lang.Class $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Class;

        $r2 = <org.dom4j.bean.BeanMetaData: java.util.Map singletonCache>;

        $r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r3 = (org.dom4j.bean.BeanMetaData) $r1;

        if r3 != null goto label1;

        r3 = new org.dom4j.bean.BeanMetaData;

        specialinvoke r3.<org.dom4j.bean.BeanMetaData: void <init>(java.lang.Class)>($r0);

        $r2 = <org.dom4j.bean.BeanMetaData: java.util.Map singletonCache>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r3);

     label1:
        return r3;
    }

    public int attributeCount()
    {
        org.dom4j.bean.BeanMetaData r0;
        int $i0;
        java.beans.PropertyDescriptor[] $r1;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public org.dom4j.bean.BeanAttributeList createAttributeList(org.dom4j.bean.BeanElement)
    {
        org.dom4j.bean.BeanMetaData r0;
        org.dom4j.bean.BeanElement $r1;
        org.dom4j.bean.BeanAttributeList $r2;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 := @parameter0: org.dom4j.bean.BeanElement;

        $r2 = new org.dom4j.bean.BeanAttributeList;

        specialinvoke $r2.<org.dom4j.bean.BeanAttributeList: void <init>(org.dom4j.bean.BeanElement,org.dom4j.bean.BeanMetaData)>($r1, r0);

        return $r2;
    }

    public java.lang.Object getData(int, java.lang.Object)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.lang.Object[] $r5;
        int $i0;
        java.lang.Object $r1;
        java.lang.reflect.Method r3;
        java.lang.Exception r2;
        java.lang.reflect.Method[] $r4;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

     label1:
        $r4 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] readMethods>;

        r3 = $r4[$i0];

     label2:
        $r5 = <org.dom4j.bean.BeanMetaData: java.lang.Object[] NULL_ARGS>;

     label3:
        $r1 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r5);

     label4:
        return $r1;

     label5:
        r2 := @caughtexception;

        virtualinvoke r0.<org.dom4j.bean.BeanMetaData: void handleException(java.lang.Exception)>(r2);

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public int getIndex(java.lang.String)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.String $r1;
        java.lang.Integer r4;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.Integer) $r3;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return -1;
    }

    public int getIndex(org.dom4j.QName)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.util.Map $r2;
        int $i0;
        org.dom4j.QName $r1;
        java.lang.Object $r3;
        java.lang.Integer r4;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.Integer) $r3;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return -1;
    }

    public org.dom4j.QName getQName(int)
    {
        org.dom4j.bean.BeanMetaData r0;
        int $i0;
        org.dom4j.QName[] $r1;
        org.dom4j.QName $r2;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $i0 := @parameter0: int;

        $r1 = r0.<org.dom4j.bean.BeanMetaData: org.dom4j.QName[] qNames>;

        $r2 = $r1[$i0];

        return $r2;
    }

    protected void handleException(java.lang.Exception)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.lang.Exception $r1;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 := @parameter0: java.lang.Exception;

        return;
    }

    public void setData(int, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] r3;
        java.lang.Exception r4;
        java.lang.reflect.Method[] $r6;
        org.dom4j.bean.BeanMetaData r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.reflect.Method r5;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

     label1:
        $r6 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] writeMethods>;

        r5 = $r6[$i0];

     label2:
        r3 = newarray (java.lang.Object)[1];

     label3:
        r3[0] = $r2;

        virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, r3);

     label4:
        return;

     label5:
        r4 := @caughtexception;

        virtualinvoke r0.<org.dom4j.bean.BeanMetaData: void handleException(java.lang.Exception)>(r4);

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
