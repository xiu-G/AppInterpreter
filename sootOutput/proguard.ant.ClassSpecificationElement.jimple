public class proguard.ant.ClassSpecificationElement extends org.apache.tools.ant.types.DataType
{
    private static final java.lang.String ANY_CLASS_KEYWORD;
    private java.lang.String access;
    private java.lang.String 'annotation';
    private java.lang.String extendsAnnotation;
    private java.lang.String extends_;
    private java.util.List fieldSpecifications;
    private java.util.List methodSpecifications;
    private java.lang.String name;
    private java.lang.String type;

    public void <init>()
    {
        proguard.ant.ClassSpecificationElement r0;
        java.util.ArrayList $r1;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        specialinvoke r0.<org.apache.tools.ant.types.DataType: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<proguard.ant.ClassSpecificationElement: java.util.List fieldSpecifications> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<proguard.ant.ClassSpecificationElement: java.util.List methodSpecifications> = $r1;

        return;
    }

    private int requiredAccessFlags(boolean, java.lang.String, java.lang.String) throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable $r9;
        proguard.ant.ClassSpecificationElement r0;
        org.apache.tools.ant.BuildException $r8;
        short $s0, $s1;
        java.util.StringTokenizer $r3, $r6;
        java.lang.StringBuffer $r5, $r7;
        int $i2;
        java.lang.String $r1, $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r1 == null goto label17;

        $r6 = new java.util.StringTokenizer;

        $r3 = $r6;

        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, " ,");

        $s0 = 0;

     label01:
        $z1 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label09;

        $r1 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = $r1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        $z1 = $z1 ^ $z0;

        if $z1 == 0 goto label01;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $z1 == 0 goto label02;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

     label02:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("public");

        if $z1 == 0 goto label04;

        $s1 = 1;

     label03:
        if $s1 != 0 goto label08;

        $r8 = new org.apache.tools.ant.BuildException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Incorrect class access modifier [");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r1 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r1);

        $r9 = (java.lang.Throwable) $r8;

        throw $r9;

     label04:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("final");

        if $z1 == 0 goto label05;

        $s1 = 16;

        goto label03;

     label05:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("abstract");

        if $z1 == 0 goto label06;

        $s1 = 1024;

        goto label03;

     label06:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("@");

        if $z1 == 0 goto label07;

        $s1 = 8192;

        goto label03;

     label07:
        $s1 = 0;

        goto label03;

     label08:
        $s0 = $s0 | $s1;

        goto label01;

     label09:
        if $r2 == null goto label18;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        $z0 = $z1 ^ $z0;

        if $z0 == 0 goto label18;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("class");

        if $z0 == 0 goto label11;

        $s1 = 0;

     label10:
        $i2 = -1;

        if $s1 != $i2 goto label16;

        $r8 = new org.apache.tools.ant.BuildException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Incorrect class type [");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r1 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r1);

        $r9 = (java.lang.Throwable) $r8;

        throw $r9;

     label11:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("interface");

        if $z0 != 0 goto label12;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("!interface");

        if $z0 == 0 goto label13;

     label12:
        $s1 = 512;

        goto label10;

     label13:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("enum");

        if $z0 != 0 goto label14;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("!enum");

        if $z0 == 0 goto label15;

     label14:
        $s1 = 16384;

        goto label10;

     label15:
        $s1 = -1;

        goto label10;

     label16:
        $s0 = $s0 | $s1;

        return $s0;

     label17:
        $s0 = 0;

        goto label09;

     label18:
        return $s0;
    }

    public void addConfiguredConstructor(proguard.ant.MemberSpecificationElement)
    {
        java.util.List $r2;
        proguard.ant.ClassSpecificationElement r0;
        proguard.ant.MemberSpecificationElement $r1;
        java.util.ArrayList $r3;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: proguard.ant.MemberSpecificationElement;

        $r2 = r0.<proguard.ant.ClassSpecificationElement: java.util.List methodSpecifications>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<proguard.ant.ClassSpecificationElement: java.util.List methodSpecifications> = $r3;

     label1:
        $r2 = r0.<proguard.ant.ClassSpecificationElement: java.util.List methodSpecifications>;

        virtualinvoke $r1.<proguard.ant.MemberSpecificationElement: void appendTo(java.util.List,boolean,boolean)>($r2, 1, 1);

        return;
    }

    public void addConfiguredField(proguard.ant.MemberSpecificationElement)
    {
        java.util.List $r2;
        proguard.ant.ClassSpecificationElement r0;
        proguard.ant.MemberSpecificationElement $r1;
        java.util.ArrayList $r3;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: proguard.ant.MemberSpecificationElement;

        $r2 = r0.<proguard.ant.ClassSpecificationElement: java.util.List fieldSpecifications>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<proguard.ant.ClassSpecificationElement: java.util.List fieldSpecifications> = $r3;

     label1:
        $r2 = r0.<proguard.ant.ClassSpecificationElement: java.util.List fieldSpecifications>;

        virtualinvoke $r1.<proguard.ant.MemberSpecificationElement: void appendTo(java.util.List,boolean,boolean)>($r2, 0, 0);

        return;
    }

    public void addConfiguredMethod(proguard.ant.MemberSpecificationElement)
    {
        java.util.List $r2;
        proguard.ant.ClassSpecificationElement r0;
        proguard.ant.MemberSpecificationElement $r1;
        java.util.ArrayList $r3;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: proguard.ant.MemberSpecificationElement;

        $r2 = r0.<proguard.ant.ClassSpecificationElement: java.util.List methodSpecifications>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<proguard.ant.ClassSpecificationElement: java.util.List methodSpecifications> = $r3;

     label1:
        $r2 = r0.<proguard.ant.ClassSpecificationElement: java.util.List methodSpecifications>;

        virtualinvoke $r1.<proguard.ant.MemberSpecificationElement: void appendTo(java.util.List,boolean,boolean)>($r2, 1, 0);

        return;
    }

    public void appendTo(java.util.List)
    {
        proguard.ant.ClassSpecificationElement r0, $r6;
        java.util.List $r1;
        proguard.ClassSpecification $r7;
        java.lang.Class $r2, $r3;
        java.lang.Object $r5;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: java.util.List;

        $z0 = virtualinvoke r0.<proguard.ant.ClassSpecificationElement: boolean isReference()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<proguard.ant.ClassSpecificationElement: java.lang.Object getCheckedRef(java.lang.Class,java.lang.String)>($r2, $r4);

        $r6 = (proguard.ant.ClassSpecificationElement) $r5;

     label1:
        $r7 = virtualinvoke r0.<proguard.ant.ClassSpecificationElement: proguard.ClassSpecification createClassSpecification(proguard.ant.ClassSpecificationElement)>($r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;

     label2:
        $r6 = r0;

        goto label1;
    }

    protected proguard.ClassSpecification createClassSpecification(proguard.ant.ClassSpecificationElement)
    {
        proguard.ant.ClassSpecificationElement r0, $r1;
        java.util.List $r9;
        proguard.ClassSpecification $r8;
        int $i0, $i1;
        java.lang.Object $r10;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        proguard.MemberSpecification $r11;
        boolean $z0;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: proguard.ant.ClassSpecificationElement;

        $r2 = $r1.<proguard.ant.ClassSpecificationElement: java.lang.String access>;

        $r3 = $r1.<proguard.ant.ClassSpecificationElement: java.lang.String 'annotation'>;

        $r4 = $r1.<proguard.ant.ClassSpecificationElement: java.lang.String type>;

        $r5 = $r1.<proguard.ant.ClassSpecificationElement: java.lang.String name>;

        $r6 = $r1.<proguard.ant.ClassSpecificationElement: java.lang.String extendsAnnotation>;

        $r7 = $r1.<proguard.ant.ClassSpecificationElement: java.lang.String extends_>;

        if $r5 == null goto label14;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 == 0 goto label14;

        $r5 = null;

     label01:
        $r8 = new proguard.ClassSpecification;

        $i0 = specialinvoke r0.<proguard.ant.ClassSpecificationElement: int requiredAccessFlags(boolean,java.lang.String,java.lang.String)>(1, $r2, $r4);

        $i1 = specialinvoke r0.<proguard.ant.ClassSpecificationElement: int requiredAccessFlags(boolean,java.lang.String,java.lang.String)>(0, $r2, $r4);

        if $r3 == null goto label07;

        $r2 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r3);

     label02:
        if $r5 == null goto label08;

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r5);

     label03:
        if $r6 == null goto label09;

        $r6 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r6);

     label04:
        if $r7 == null goto label10;

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r7);

     label05:
        specialinvoke $r8.<proguard.ClassSpecification: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $i0, $i1, $r2, $r5, $r6, $r7);

        $i0 = 0;

     label06:
        $r9 = r0.<proguard.ant.ClassSpecificationElement: java.util.List fieldSpecifications>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i0 >= $i1 goto label11;

        $r9 = r0.<proguard.ant.ClassSpecificationElement: java.util.List fieldSpecifications>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i0);

        $r11 = (proguard.MemberSpecification) $r10;

        virtualinvoke $r8.<proguard.ClassSpecification: void addField(proguard.MemberSpecification)>($r11);

        $i0 = $i0 + 1;

        goto label06;

     label07:
        $r2 = null;

        goto label02;

     label08:
        $r5 = null;

        goto label03;

     label09:
        $r6 = null;

        goto label04;

     label10:
        $r7 = null;

        goto label05;

     label11:
        $i0 = 0;

     label12:
        $r9 = r0.<proguard.ant.ClassSpecificationElement: java.util.List methodSpecifications>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i0 >= $i1 goto label13;

        $r9 = r0.<proguard.ant.ClassSpecificationElement: java.util.List methodSpecifications>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i0);

        $r11 = (proguard.MemberSpecification) $r10;

        virtualinvoke $r8.<proguard.ClassSpecification: void addMethod(proguard.MemberSpecification)>($r11);

        $i0 = $i0 + 1;

        goto label12;

     label13:
        return $r8;

     label14:
        goto label01;
    }

    public void setAccess(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.ClassSpecificationElement r0;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassSpecificationElement: java.lang.String access> = $r1;

        return;
    }

    public void setAnnotation(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.ClassSpecificationElement r0;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassSpecificationElement: java.lang.String 'annotation'> = $r1;

        return;
    }

    public void setExtends(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.ClassSpecificationElement r0;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassSpecificationElement: java.lang.String extends_> = $r1;

        return;
    }

    public void setExtendsannotation(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.ClassSpecificationElement r0;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassSpecificationElement: java.lang.String extendsAnnotation> = $r1;

        return;
    }

    public void setImplements(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.ClassSpecificationElement r0;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassSpecificationElement: java.lang.String extends_> = $r1;

        return;
    }

    public void setName(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.ClassSpecificationElement r0;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassSpecificationElement: java.lang.String name> = $r1;

        return;
    }

    public void setType(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.ClassSpecificationElement r0;

        r0 := @this: proguard.ant.ClassSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.ClassSpecificationElement: java.lang.String type> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <proguard.ant.ClassSpecificationElement: java.lang.String ANY_CLASS_KEYWORD> = "*";

        return;
    }
}
