public class cn.ffcs.lib.bitmapfun.Utils extends java.lang.Object
{
    public static final int IO_BUFFER_SIZE;

    private void <init>()
    {
        cn.ffcs.lib.bitmapfun.Utils r0;

        r0 := @this: cn.ffcs.lib.bitmapfun.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void disableConnectionReuseIfNecessary()
    {
        boolean $z0;

        $z0 = staticinvoke <cn.ffcs.lib.bitmapfun.Utils: boolean hasHttpConnectionBug()>();

        if $z0 == 0 goto label1;

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("http.keepAlive", "false");

     label1:
        return;
    }

    public static int getBitmapSize(android.graphics.Bitmap)
    {
        int $i0, $i1;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 12 goto label1;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getByteCount()>();

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getRowBytes()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i0 * $i1;

        return $i0;
    }

    public static java.io.File getExternalCacheDir(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r5;
        java.io.File $r1, $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <cn.ffcs.lib.bitmapfun.Utils: boolean hasExternalCacheDir()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: java.io.File getExternalCacheDir()>();

        return $r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Android/data/");

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/cache/");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getPath()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r3);

        return $r1;
    }

    public static int getMemoryClass(android.content.Context)
    {
        android.content.Context $r0;
        android.app.ActivityManager $r2;
        int $i0;
        java.lang.Object $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        $r2 = (android.app.ActivityManager) $r1;

        $i0 = virtualinvoke $r2.<android.app.ActivityManager: int getMemoryClass()>();

        return $i0;
    }

    public static long getUsableSpace(java.io.File)
    {
        android.os.StatFs r1;
        int $i0;
        long $l1, $l2;
        java.lang.String $r2;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label1;

        $l1 = virtualinvoke $r0.<java.io.File: long getUsableSpace()>();

        return $l1;

     label1:
        r1 = new android.os.StatFs;

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        specialinvoke r1.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i0 = virtualinvoke r1.<android.os.StatFs: int getBlockSize()>();

        $l1 = (long) $i0;

        $i0 = virtualinvoke r1.<android.os.StatFs: int getAvailableBlocks()>();

        $l2 = (long) $i0;

        $l1 = $l1 * $l2;

        return $l1;
    }

    public static boolean hasActionBar()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasExternalCacheDir()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasFroyo()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasGingerbread()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasHoneycomb()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasHoneycombMR1()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 12 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasHttpConnectionBug()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasJellyBean()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isExternalStorageRemovable()
    {
        int $i0;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label1;

        $z0 = staticinvoke <android.os.Environment: boolean isExternalStorageRemovable()>();

        return $z0;

     label1:
        return 1;
    }

    public static void <clinit>()
    {
        <cn.ffcs.lib.bitmapfun.Utils: int IO_BUFFER_SIZE> = 8192;

        return;
    }
}
