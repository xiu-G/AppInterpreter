class com.nostra13.universalimageloader.core.ImageLoaderEngine extends java.lang.Object
{
    private final java.util.Map cacheKeysForImageAwares;
    final com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration;
    private final java.util.concurrent.atomic.AtomicBoolean networkDenied;
    private final java.lang.Object pauseLock;
    private final java.util.concurrent.atomic.AtomicBoolean paused;
    private final java.util.concurrent.atomic.AtomicBoolean slowNetwork;
    private java.util.concurrent.Executor taskDistributor;
    private java.util.concurrent.Executor taskExecutor;
    private java.util.concurrent.Executor taskExecutorForCachedImages;
    private final java.util.Map uriLocks;

    void <init>(com.nostra13.universalimageloader.core.ImageLoaderConfiguration)
    {
        java.util.concurrent.Executor $r7;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r1;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        java.util.HashMap $r2;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        java.util.Map $r3;
        java.lang.Object $r6;
        java.util.WeakHashMap $r4;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.ImageLoaderConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.Map cacheKeysForImageAwares> = $r3;

        $r4 = new java.util.WeakHashMap;

        specialinvoke $r4.<java.util.WeakHashMap: void <init>()>();

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.Map uriLocks> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean paused> = $r5;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean networkDenied> = $r5;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean slowNetwork> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.lang.Object pauseLock> = $r6;

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration> = $r1;

        $r7 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: java.util.concurrent.Executor taskExecutor>;

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutor> = $r7;

        $r7 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: java.util.concurrent.Executor taskExecutorForCachedImages>;

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutorForCachedImages> = $r7;

        $r7 = staticinvoke <com.nostra13.universalimageloader.core.DefaultConfigurationFactory: java.util.concurrent.Executor createTaskDistributor()>();

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskDistributor> = $r7;

        return;
    }

    static void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine)
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r0;

        $r0 := @parameter0: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        specialinvoke $r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: void initExecutorsIfNeed()>();

        return;
    }

    static java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine)
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r0;
        java.util.concurrent.Executor r1;

        $r0 := @parameter0: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutorForCachedImages>;

        return r1;
    }

    static java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine)
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine $r0;
        java.util.concurrent.Executor r1;

        $r0 := @parameter0: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        r1 = $r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutor>;

        return r1;
    }

    private java.util.concurrent.Executor createTaskExecutor()
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        java.util.concurrent.Executor $r1;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r2;
        int $i0, $i1;
        com.nostra13.universalimageloader.core.assist.QueueProcessingType $r3;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i0 = $r2.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int threadPoolSize>;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $i1 = $r2.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: int threadPriority>;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $r3 = $r2.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType>;

        $r1 = staticinvoke <com.nostra13.universalimageloader.core.DefaultConfigurationFactory: java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType)>($i0, $i1, $r3);

        return $r1;
    }

    private void initExecutorsIfNeed()
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        java.util.concurrent.Executor $r2;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r1;
        java.util.concurrent.ExecutorService $r3;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $z0 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: boolean customExecutor>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutor>;

        $r3 = (java.util.concurrent.ExecutorService) $r2;

        $z0 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor createTaskExecutor()>();

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutor> = $r2;

     label1:
        $r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $z0 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: boolean customExecutorForCachedImages>;

        if $z0 != 0 goto label2;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutorForCachedImages>;

        $r3 = (java.util.concurrent.ExecutorService) $r2;

        $z0 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor createTaskExecutor()>();

        r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutorForCachedImages> = $r2;

     label2:
        return;
    }

    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware)
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        com.nostra13.universalimageloader.core.imageaware.ImageAware $r1;
        java.util.Map $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.imageaware.ImageAware;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.Map cacheKeysForImageAwares>;

        $i0 = interfaceinvoke $r1.<com.nostra13.universalimageloader.core.imageaware.ImageAware: int getId()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        return;
    }

    void denyNetworkDownloads(boolean)
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean networkDenied>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>($z0);

        return;
    }

    void fireCallback(java.lang.Runnable)
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        java.lang.Runnable $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskDistributor>;

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

        return;
    }

    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware)
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        com.nostra13.universalimageloader.core.imageaware.ImageAware $r1;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r5;
        java.lang.Integer $r3;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.imageaware.ImageAware;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.Map cacheKeysForImageAwares>;

        $i0 = interfaceinvoke $r1.<com.nostra13.universalimageloader.core.imageaware.ImageAware: int getId()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String)
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        java.util.concurrent.locks.ReentrantLock $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r1;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.Map uriLocks>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.concurrent.locks.ReentrantLock) $r3;

        if $r4 != null goto label1;

        $r4 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.Map uriLocks>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label1:
        return $r4;
    }

    java.util.concurrent.atomic.AtomicBoolean getPause()
    {
        java.util.concurrent.atomic.AtomicBoolean r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean paused>;

        return r1;
    }

    java.lang.Object getPauseLock()
    {
        java.lang.Object r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.lang.Object pauseLock>;

        return r1;
    }

    void handleSlowNetwork(boolean)
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean slowNetwork>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>($z0);

        return;
    }

    boolean isNetworkDenied()
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean networkDenied>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    boolean isSlowNetwork()
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean slowNetwork>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    void pause()
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean paused>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware, java.lang.String)
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        com.nostra13.universalimageloader.core.imageaware.ImageAware $r1;
        java.util.Map $r3;
        int $i0;
        java.lang.String $r2;
        java.lang.Integer $r4;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.imageaware.ImageAware;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.Map cacheKeysForImageAwares>;

        $i0 = interfaceinvoke $r1.<com.nostra13.universalimageloader.core.imageaware.ImageAware: int getId()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r2);

        return;
    }

    void resume()
    {
        java.lang.Throwable $r4;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        java.lang.Object $r2, $r3;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.atomic.AtomicBoolean paused>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.lang.Object pauseLock>;

        entermonitor $r2;

     label1:
        $r3 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.lang.Object pauseLock>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r2;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void stop()
    {
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        java.util.concurrent.Executor $r2;
        java.util.Map $r4;
        com.nostra13.universalimageloader.core.ImageLoaderConfiguration $r1;
        java.util.concurrent.ExecutorService $r3;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $z0 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: boolean customExecutor>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutor>;

        $r3 = (java.util.concurrent.ExecutorService) $r2;

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

     label1:
        $r1 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration>;

        $z0 = $r1.<com.nostra13.universalimageloader.core.ImageLoaderConfiguration: boolean customExecutorForCachedImages>;

        if $z0 != 0 goto label2;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutorForCachedImages>;

        $r3 = (java.util.concurrent.ExecutorService) $r2;

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

     label2:
        $r4 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.Map cacheKeysForImageAwares>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        $r4 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.Map uriLocks>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        return;
    }

    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask)
    {
        com.nostra13.universalimageloader.core.LoadAndDisplayImageTask $r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        java.util.concurrent.Executor $r2;
        com.nostra13.universalimageloader.core.ImageLoaderEngine$1 $r3;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.LoadAndDisplayImageTask;

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskDistributor>;

        $r3 = new com.nostra13.universalimageloader.core.ImageLoaderEngine$1;

        specialinvoke $r3.<com.nostra13.universalimageloader.core.ImageLoaderEngine$1: void <init>(com.nostra13.universalimageloader.core.ImageLoaderEngine,com.nostra13.universalimageloader.core.LoadAndDisplayImageTask)>(r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask)
    {
        com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask $r1;
        com.nostra13.universalimageloader.core.ImageLoaderEngine r0;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.nostra13.universalimageloader.core.ImageLoaderEngine;

        $r1 := @parameter0: com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask;

        specialinvoke r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: void initExecutorsIfNeed()>();

        $r2 = r0.<com.nostra13.universalimageloader.core.ImageLoaderEngine: java.util.concurrent.Executor taskExecutorForCachedImages>;

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r1);

        return;
    }
}
