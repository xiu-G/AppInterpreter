public class com.greystripe.android.sdk.AccelerometerController extends java.lang.Object implements android.hardware.SensorEventListener
{
    private final android.hardware.SensorManager a;
    private final android.hardware.Sensor b;
    private com.greystripe.android.sdk.v c;
    private float[] d;

    public void <init>(android.content.Context, com.greystripe.android.sdk.v)
    {
        android.content.Context $r1;
        com.greystripe.android.sdk.v $r2;
        android.hardware.SensorManager $r5;
        com.greystripe.android.sdk.AccelerometerController r0;
        float[] $r3;
        java.lang.Object $r4;
        android.hardware.Sensor $r6;

        r0 := @this: com.greystripe.android.sdk.AccelerometerController;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.greystripe.android.sdk.v;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (float)[3];

        $r3[0] = 0.0F;

        $r3[1] = 0.0F;

        $r3[2] = 0.0F;

        r0.<com.greystripe.android.sdk.AccelerometerController: float[] d> = $r3;

        r0.<com.greystripe.android.sdk.AccelerometerController: com.greystripe.android.sdk.v c> = $r2;

        $r4 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("sensor");

        $r5 = (android.hardware.SensorManager) $r4;

        r0.<com.greystripe.android.sdk.AccelerometerController: android.hardware.SensorManager a> = $r5;

        $r5 = r0.<com.greystripe.android.sdk.AccelerometerController: android.hardware.SensorManager a>;

        $r6 = virtualinvoke $r5.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(1);

        r0.<com.greystripe.android.sdk.AccelerometerController: android.hardware.Sensor b> = $r6;

        return;
    }

    public float getMaximumRange()
    {
        float $f0;
        com.greystripe.android.sdk.AccelerometerController r0;
        android.hardware.Sensor $r1;

        r0 := @this: com.greystripe.android.sdk.AccelerometerController;

        $r1 = r0.<com.greystripe.android.sdk.AccelerometerController: android.hardware.Sensor b>;

        $f0 = virtualinvoke $r1.<android.hardware.Sensor: float getMaximumRange()>();

        return $f0;
    }

    public float getX()
    {
        float $f0;
        float[] $r1;
        com.greystripe.android.sdk.AccelerometerController r0;

        r0 := @this: com.greystripe.android.sdk.AccelerometerController;

        $r1 = r0.<com.greystripe.android.sdk.AccelerometerController: float[] d>;

        $f0 = $r1[0];

        return $f0;
    }

    public float getY()
    {
        float $f0;
        float[] $r1;
        com.greystripe.android.sdk.AccelerometerController r0;

        r0 := @this: com.greystripe.android.sdk.AccelerometerController;

        $r1 = r0.<com.greystripe.android.sdk.AccelerometerController: float[] d>;

        $f0 = $r1[1];

        return $f0;
    }

    public float getZ()
    {
        float $f0;
        float[] $r1;
        com.greystripe.android.sdk.AccelerometerController r0;

        r0 := @this: com.greystripe.android.sdk.AccelerometerController;

        $r1 = r0.<com.greystripe.android.sdk.AccelerometerController: float[] d>;

        $f0 = $r1[2];

        return $f0;
    }

    public void onAccuracyChanged(android.hardware.Sensor, int)
    {
        int $i0;
        com.greystripe.android.sdk.AccelerometerController r0;
        android.hardware.Sensor $r1;

        r0 := @this: com.greystripe.android.sdk.AccelerometerController;

        $r1 := @parameter0: android.hardware.Sensor;

        $i0 := @parameter1: int;

        return;
    }

    public void onSensorChanged(android.hardware.SensorEvent)
    {
        java.lang.Float $r7;
        com.greystripe.android.sdk.AccelerometerController r0;
        java.lang.Object[] $r6;
        float[] $r4;
        com.greystripe.android.sdk.v $r2;
        android.hardware.SensorEvent $r1;
        int $i0;
        float $f0;
        java.lang.Object $r5;
        android.hardware.Sensor $r3;
        java.lang.String $r8;

        r0 := @this: com.greystripe.android.sdk.AccelerometerController;

        $r1 := @parameter0: android.hardware.SensorEvent;

        $r2 = r0.<com.greystripe.android.sdk.AccelerometerController: com.greystripe.android.sdk.v c>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = $r1.<android.hardware.SensorEvent: android.hardware.Sensor sensor>;

        $i0 = virtualinvoke $r3.<android.hardware.Sensor: int getType()>();

        if $i0 != 1 goto label2;

        $r4 = $r1.<android.hardware.SensorEvent: float[] values>;

        $i0 = lengthof $r4;

        if $i0 < 3 goto label2;

        $r4 = $r1.<android.hardware.SensorEvent: float[] values>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (float[]) $r5;

        r0.<com.greystripe.android.sdk.AccelerometerController: float[] d> = $r4;

        $r2 = r0.<com.greystripe.android.sdk.AccelerometerController: com.greystripe.android.sdk.v c>;

        $r6 = newarray (java.lang.Object)[3];

        $r4 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r4[0];

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6[0] = $r7;

        $r4 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r4[1];

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6[1] = $r7;

        $r4 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r4[2];

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6[2] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("try{accelerometerDidAccelerate(%f, %f, %f);}catch(e){}", $r6);

        virtualinvoke $r2.<com.greystripe.android.sdk.v: void a(java.lang.String)>($r8);

     label2:
        return;
    }

    public void start()
    {
        android.hardware.SensorManager $r1;
        com.greystripe.android.sdk.AccelerometerController r0;
        android.hardware.Sensor $r2;

        r0 := @this: com.greystripe.android.sdk.AccelerometerController;

        $r1 = r0.<com.greystripe.android.sdk.AccelerometerController: android.hardware.SensorManager a>;

        $r2 = r0.<com.greystripe.android.sdk.AccelerometerController: android.hardware.Sensor b>;

        virtualinvoke $r1.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>(r0, $r2, 3);

        return;
    }

    public void stop()
    {
        android.hardware.SensorManager $r1;
        com.greystripe.android.sdk.AccelerometerController r0;

        r0 := @this: com.greystripe.android.sdk.AccelerometerController;

        $r1 = r0.<com.greystripe.android.sdk.AccelerometerController: android.hardware.SensorManager a>;

        virtualinvoke $r1.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>(r0);

        r0.<com.greystripe.android.sdk.AccelerometerController: com.greystripe.android.sdk.v c> = null;

        return;
    }
}
