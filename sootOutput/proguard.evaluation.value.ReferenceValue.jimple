public class proguard.evaluation.value.ReferenceValue extends proguard.evaluation.value.Category1Value
{
    private static final boolean DEBUG;
    protected final boolean mayBeNull;
    protected final proguard.classfile.Clazz referencedClass;
    protected final java.lang.String type;

    public void <init>(java.lang.String, proguard.classfile.Clazz, boolean)
    {
        proguard.evaluation.value.ReferenceValue r0;
        proguard.classfile.Clazz $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: proguard.classfile.Clazz;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<proguard.evaluation.value.Category1Value: void <init>()>();

        r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type> = $r1;

        r0.<proguard.evaluation.value.ReferenceValue: proguard.classfile.Clazz referencedClass> = $r2;

        r0.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull> = $z0;

        return;
    }

    private proguard.evaluation.value.ReferenceValue generalizeMayBeNull(boolean)
    {
        proguard.evaluation.value.ReferenceValue r0, $r3;
        proguard.classfile.Clazz $r2;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $z0 := @parameter0: boolean;

        $z1 = r0.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull>;

        if $z1 != 0 goto label1;

        if $z0 != 0 goto label2;

     label1:
        return r0;

     label2:
        $r3 = new proguard.evaluation.value.ReferenceValue;

        $r1 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        $r2 = r0.<proguard.evaluation.value.ReferenceValue: proguard.classfile.Clazz referencedClass>;

        specialinvoke $r3.<proguard.evaluation.value.ReferenceValue: void <init>(java.lang.String,proguard.classfile.Clazz,boolean)>($r1, $r2, 1);

        return $r3;
    }

    private int superClassCount(proguard.classfile.Clazz, java.util.Set)
    {
        java.util.Iterator $r3;
        java.util.Set $r1;
        proguard.evaluation.value.ReferenceValue r2;
        proguard.classfile.Clazz $r0, r5;
        int $i0;
        java.lang.Object $r4;
        boolean $z0;

        r2 := @this: proguard.evaluation.value.ReferenceValue;

        $r0 := @parameter0: proguard.classfile.Clazz;

        $r1 := @parameter1: java.util.Set;

        $i0 = 0;

        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (proguard.classfile.Clazz) $r4;

        $z0 = interfaceinvoke $r0.<proguard.classfile.Clazz: boolean extendsOrImplements(proguard.classfile.Clazz)>(r5);

        if $z0 == 0 goto label1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $i0;
    }

    public proguard.evaluation.value.IntegerValue arrayLength(proguard.evaluation.value.ValueFactory)
    {
        proguard.evaluation.value.ValueFactory $r1;
        proguard.evaluation.value.IntegerValue $r2;
        proguard.evaluation.value.ReferenceValue r0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 := @parameter0: proguard.evaluation.value.ValueFactory;

        $r2 = virtualinvoke $r1.<proguard.evaluation.value.ValueFactory: proguard.evaluation.value.IntegerValue createIntegerValue()>();

        return $r2;
    }

    public proguard.evaluation.value.Value arrayLoad(proguard.evaluation.value.IntegerValue, proguard.evaluation.value.ValueFactory)
    {
        proguard.evaluation.value.IntegerValue $r1;
        proguard.evaluation.value.ReferenceValue r0;
        proguard.classfile.Clazz $r3;
        proguard.evaluation.value.ValueFactory $r2;
        java.lang.String $r4;
        proguard.evaluation.value.Value $r5;
        boolean $z0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 := @parameter0: proguard.evaluation.value.IntegerValue;

        $r2 := @parameter1: proguard.evaluation.value.ValueFactory;

        $r4 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r4 != null goto label1;

        r0 = <proguard.evaluation.value.ValueFactory: proguard.evaluation.value.ReferenceValue REFERENCE_VALUE_NULL>;

        return r0;

     label1:
        $r4 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalArrayType(java.lang.String)>($r4);

        if $z0 != 0 goto label2;

        r0 = <proguard.evaluation.value.ValueFactory: proguard.evaluation.value.ReferenceValue REFERENCE_VALUE_JAVA_LANG_OBJECT_MAYBE_NULL>;

        return r0;

     label2:
        $r4 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(1);

        $r3 = r0.<proguard.evaluation.value.ReferenceValue: proguard.classfile.Clazz referencedClass>;

        $r5 = virtualinvoke $r2.<proguard.evaluation.value.ValueFactory: proguard.evaluation.value.Value createValue(java.lang.String,proguard.classfile.Clazz,boolean)>($r4, $r3, 1);

        return $r5;
    }

    public final int computationalType()
    {
        proguard.evaluation.value.ReferenceValue r0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        return 5;
    }

    public int equal(proguard.evaluation.value.ReferenceValue)
    {
        proguard.evaluation.value.ReferenceValue r0, $r1;
        java.lang.String $r2;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 := @parameter0: proguard.evaluation.value.ReferenceValue;

        $r2 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r2 != null goto label1;

        $r2 = $r1.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r2 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        proguard.evaluation.value.ReferenceValue r0, $r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        $r4 = (proguard.evaluation.value.ReferenceValue) $r1;

        $r5 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r5 != null goto label5;

        $r5 = $r4.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r5 != null goto label4;

        return 1;

     label4:
        return 0;

     label5:
        $z0 = r0.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull>;

        $z1 = $r4.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull>;

        if $z0 != $z1 goto label6;

        $r5 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        $r6 = $r4.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    public proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ReferenceValue)
    {
        java.util.HashSet $r4, $r5, $r14;
        proguard.classfile.Clazz $r6, $r7;
        java.lang.StringBuffer $r12, $r15;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3, $r10, $r11;
        boolean $z0, $z1;
        java.util.Iterator $r8;
        proguard.classfile.visitor.ClassCollector $r13;
        char $c4;
        java.lang.IllegalArgumentException $r16;
        proguard.evaluation.value.ReferenceValue r0, $r1;
        java.lang.Object $r9;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 := @parameter0: proguard.evaluation.value.ReferenceValue;

        $z0 = virtualinvoke r0.<proguard.evaluation.value.ReferenceValue: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label01;

        return r0;

     label01:
        $r2 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        $r3 = $r1.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r2 != null goto label03;

        if $r3 != null goto label02;

        r0 = <proguard.evaluation.value.ValueFactory: proguard.evaluation.value.ReferenceValue REFERENCE_VALUE_NULL>;

        return r0;

     label02:
        if $r2 != null goto label03;

        r0 = specialinvoke $r1.<proguard.evaluation.value.ReferenceValue: proguard.evaluation.value.ReferenceValue generalizeMayBeNull(boolean)>(1);

        return r0;

     label03:
        if $r3 != null goto label04;

        r0 = specialinvoke r0.<proguard.evaluation.value.ReferenceValue: proguard.evaluation.value.ReferenceValue generalizeMayBeNull(boolean)>(1);

        return r0;

     label04:
        $z0 = r0.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull>;

        if $z0 != 0 goto label05;

        $z0 = $r1.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull>;

        if $z0 == 0 goto label07;

     label05:
        $z0 = 1;

     label06:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label08;

        r0 = specialinvoke r0.<proguard.evaluation.value.ReferenceValue: proguard.evaluation.value.ReferenceValue generalizeMayBeNull(boolean)>($z0);

        return r0;

     label07:
        $z0 = 0;

        goto label06;

     label08:
        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalArrayTypeDimensionCount(java.lang.String)>($r2);

        $i1 = staticinvoke <proguard.classfile.util.ClassUtil: int internalArrayTypeDimensionCount(java.lang.String)>($r3);

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        if $i0 != $i1 goto label17;

        $r6 = r0.<proguard.evaluation.value.ReferenceValue: proguard.classfile.Clazz referencedClass>;

        $r7 = $r1.<proguard.evaluation.value.ReferenceValue: proguard.classfile.Clazz referencedClass>;

        if $r6 == null goto label19;

        if $r7 == null goto label19;

        $z1 = interfaceinvoke $r6.<proguard.classfile.Clazz: boolean extendsOrImplements(proguard.classfile.Clazz)>($r7);

        if $z1 == 0 goto label09;

        r0 = specialinvoke $r1.<proguard.evaluation.value.ReferenceValue: proguard.evaluation.value.ReferenceValue generalizeMayBeNull(boolean)>($z0);

        return r0;

     label09:
        $z1 = interfaceinvoke $r7.<proguard.classfile.Clazz: boolean extendsOrImplements(proguard.classfile.Clazz)>($r6);

        if $z1 == 0 goto label10;

        r0 = specialinvoke r0.<proguard.evaluation.value.ReferenceValue: proguard.evaluation.value.ReferenceValue generalizeMayBeNull(boolean)>($z0);

        return r0;

     label10:
        $r5 = new java.util.HashSet;

        $r4 = $r5;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r13 = new proguard.classfile.visitor.ClassCollector;

        specialinvoke $r13.<proguard.classfile.visitor.ClassCollector: void <init>(java.util.Set)>($r4);

        interfaceinvoke $r6.<proguard.classfile.Clazz: void hierarchyAccept(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(0, 1, 1, 0, $r13);

        $r14 = new java.util.HashSet;

        $r5 = $r14;

        specialinvoke $r14.<java.util.HashSet: void <init>()>();

        $r13 = new proguard.classfile.visitor.ClassCollector;

        specialinvoke $r13.<proguard.classfile.visitor.ClassCollector: void <init>(java.util.Set)>($r5);

        interfaceinvoke $r7.<proguard.classfile.Clazz: void hierarchyAccept(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(0, 1, 1, 0, $r13);

        interfaceinvoke $r4.<java.util.Set: boolean retainAll(java.util.Collection)>($r5);

        $r8 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $i0 = -1;

        $r6 = null;

     label11:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (proguard.classfile.Clazz) $r9;

        $i1 = specialinvoke r0.<proguard.evaluation.value.ReferenceValue: int superClassCount(proguard.classfile.Clazz,java.util.Set)>($r7, $r4);

        if $i0 < $i1 goto label12;

        if $i0 != $i1 goto label11;

        if $r6 == null goto label11;

        $r10 = interfaceinvoke $r6.<proguard.classfile.Clazz: java.lang.String getName()>();

        $r11 = interfaceinvoke $r7.<proguard.classfile.Clazz: java.lang.String getName()>();

        $i3 = virtualinvoke $r10.<java.lang.String: int compareTo(java.lang.String)>($r11);

        if $i3 <= 0 goto label11;

     label12:
        $i0 = $i1;

        $r6 = $r7;

        goto label11;

     label13:
        if $r6 != null goto label14;

        $r16 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t find common super class of [");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] and [");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r2 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r16;

     label14:
        $r1 = new proguard.evaluation.value.ReferenceValue;

        r0 = $r1;

        if $i2 != 0 goto label16;

        $r2 = interfaceinvoke $r6.<proguard.classfile.Clazz: java.lang.String getName()>();

     label15:
        specialinvoke $r1.<proguard.evaluation.value.ReferenceValue: void <init>(java.lang.String,proguard.classfile.Clazz,boolean)>($r2, $r6, $z0);

        return r0;

     label16:
        $r2 = interfaceinvoke $r6.<proguard.classfile.Clazz: java.lang.String getName()>();

        $r2 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalArrayTypeFromClassName(java.lang.String,int)>($r2, $i2);

        goto label15;

     label17:
        if $i0 <= $i1 goto label18;

        $r10 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassNameFromClassType(java.lang.String)>($r3);

        $z1 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalArrayInterfaceName(java.lang.String)>($r10);

        if $z1 == 0 goto label19;

        r0 = specialinvoke $r1.<proguard.evaluation.value.ReferenceValue: proguard.evaluation.value.ReferenceValue generalizeMayBeNull(boolean)>($z0);

        return r0;

     label18:
        if $i0 >= $i1 goto label19;

        $r10 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassNameFromClassType(java.lang.String)>($r2);

        $z1 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalArrayInterfaceName(java.lang.String)>($r10);

        if $z1 == 0 goto label19;

        r0 = specialinvoke r0.<proguard.evaluation.value.ReferenceValue: proguard.evaluation.value.ReferenceValue generalizeMayBeNull(boolean)>($z0);

        return r0;

     label19:
        if $i2 <= 0 goto label20;

        $c4 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i2);

        $z1 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalPrimitiveType(char)>($c4);

        if $z1 != 0 goto label21;

     label20:
        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        $z1 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalPrimitiveType(char)>($c4);

        if $z1 == 0 goto label22;

     label21:
        $i2 = $i2 + -1;

     label22:
        if $i2 != 0 goto label24;

        if $z0 == 0 goto label23;

        r0 = <proguard.evaluation.value.ValueFactory: proguard.evaluation.value.ReferenceValue REFERENCE_VALUE_JAVA_LANG_OBJECT_MAYBE_NULL>;

        return r0;

     label23:
        r0 = <proguard.evaluation.value.ValueFactory: proguard.evaluation.value.ReferenceValue REFERENCE_VALUE_JAVA_LANG_OBJECT_NOT_NULL>;

        return r0;

     label24:
        $r1 = new proguard.evaluation.value.ReferenceValue;

        $r2 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalArrayTypeFromClassName(java.lang.String,int)>("java/lang/Object", $i2);

        specialinvoke $r1.<proguard.evaluation.value.ReferenceValue: void <init>(java.lang.String,proguard.classfile.Clazz,boolean)>($r2, null, $z0);

        return $r1;
    }

    public final proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value)
    {
        proguard.evaluation.value.ReferenceValue r0, $r2;
        proguard.evaluation.value.Value $r1;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 := @parameter0: proguard.evaluation.value.Value;

        $r2 = virtualinvoke $r1.<proguard.evaluation.value.Value: proguard.evaluation.value.ReferenceValue referenceValue()>();

        r0 = virtualinvoke r0.<proguard.evaluation.value.ReferenceValue: proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ReferenceValue)>($r2);

        return r0;
    }

    public proguard.classfile.Clazz getReferencedClass()
    {
        proguard.evaluation.value.ReferenceValue r0;
        proguard.classfile.Clazz r1;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        r1 = r0.<proguard.evaluation.value.ReferenceValue: proguard.classfile.Clazz referencedClass>;

        return r1;
    }

    public java.lang.String getType()
    {
        proguard.evaluation.value.ReferenceValue r0;
        java.lang.String r1;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        r1 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        return r1;
    }

    public int hashCode()
    {
        proguard.evaluation.value.ReferenceValue r0;
        int $i0, $i1;
        java.lang.Class $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r2 != null goto label2;

        $i1 = 0;

     label1:
        $i0 = $i0 ^ $i1;

        return $i0;

     label2:
        $r2 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $z0 = r0.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull>;

        if $z0 == 0 goto label4;

        $z0 = 0;

     label3:
        $i1 = $i1 ^ $z0;

        goto label1;

     label4:
        $z0 = 1;

        goto label3;
    }

    public int instanceOf(java.lang.String, proguard.classfile.Clazz)
    {
        char $c3;
        proguard.evaluation.value.ReferenceValue r0;
        proguard.classfile.Clazz $r2, $r5;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r3, $r4;
        boolean $z0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: proguard.classfile.Clazz;

        $r3 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r3 != null goto label01;

        return -1;

     label01:
        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalArrayTypeDimensionCount(java.lang.String)>($r3);

        $i1 = staticinvoke <proguard.classfile.util.ClassUtil: int internalArrayTypeDimensionCount(java.lang.String)>($r1);

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i2);

        $r3 = $r4;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i2);

        if $i2 <= 0 goto label05;

        $c3 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalPrimitiveType(char)>($c3);

        if $z0 != 0 goto label02;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalPrimitiveType(char)>($c3);

        if $z0 == 0 goto label05;

     label02:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label03;

        return -1;

     label03:
        $z0 = r0.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull>;

        if $z0 == 0 goto label04;

        return 0;

     label04:
        return 1;

     label05:
        if $i0 != $i2 goto label06;

        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassNameFromClassType(java.lang.String)>($r4);

     label06:
        if $i1 != $i2 goto label07;

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassNameFromClassType(java.lang.String)>($r1);

     label07:
        if $i0 <= $i1 goto label08;

        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalArrayInterfaceName(java.lang.String)>($r1);

        if $z0 != 0 goto label08;

        return -1;

     label08:
        if $i0 >= $i1 goto label09;

        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalArrayInterfaceName(java.lang.String)>($r3);

        if $z0 != 0 goto label09;

        return -1;

     label09:
        $z0 = r0.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull>;

        if $z0 == 0 goto label10;

        return 0;

     label10:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label11;

        $r3 = "java/lang/Object";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label12;

     label11:
        return 1;

     label12:
        if $i0 <= $i1 goto label13;

        return 1;

     label13:
        if $i0 >= $i1 goto label14;

        return 0;

     label14:
        $r5 = r0.<proguard.evaluation.value.ReferenceValue: proguard.classfile.Clazz referencedClass>;

        if $r5 == null goto label15;

        if $r2 == null goto label15;

        $r5 = r0.<proguard.evaluation.value.ReferenceValue: proguard.classfile.Clazz referencedClass>;

        $z0 = interfaceinvoke $r5.<proguard.classfile.Clazz: boolean extendsOrImplements(proguard.classfile.Clazz)>($r2);

        if $z0 == 0 goto label15;

        return 1;

     label15:
        return 0;
    }

    public final java.lang.String internalType()
    {
        proguard.evaluation.value.ReferenceValue r0;
        java.lang.StringBuffer $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r1 != null goto label1;

        return "Ljava/lang/Object;";

     label1:
        $r1 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalArrayType(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r1 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        return $r1;

     label2:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        $r1 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public final int isNotNull()
    {
        int $i0;
        proguard.evaluation.value.ReferenceValue r0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $i0 = virtualinvoke r0.<proguard.evaluation.value.ReferenceValue: int isNull()>();

        $i0 = neg $i0;

        return $i0;
    }

    public int isNull()
    {
        proguard.evaluation.value.ReferenceValue r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $z0 = r0.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull>;

        if $z0 == 0 goto label2;

        return 0;

     label2:
        return -1;
    }

    public boolean isParticular()
    {
        proguard.evaluation.value.ReferenceValue r0;
        java.lang.String $r1;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public final int notEqual(proguard.evaluation.value.ReferenceValue)
    {
        int $i0;
        proguard.evaluation.value.ReferenceValue r0, $r1;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 := @parameter0: proguard.evaluation.value.ReferenceValue;

        $i0 = virtualinvoke r0.<proguard.evaluation.value.ReferenceValue: int equal(proguard.evaluation.value.ReferenceValue)>($r1);

        $i0 = neg $i0;

        return $i0;
    }

    public final proguard.evaluation.value.ReferenceValue referenceValue()
    {
        proguard.evaluation.value.ReferenceValue r0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        return r0;
    }

    public java.lang.String toString()
    {
        proguard.evaluation.value.ReferenceValue r0;
        proguard.classfile.Clazz $r3;
        java.lang.StringBuffer $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: proguard.evaluation.value.ReferenceValue;

        $r1 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r1 = r0.<proguard.evaluation.value.ReferenceValue: java.lang.String type>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = r0.<proguard.evaluation.value.ReferenceValue: proguard.classfile.Clazz referencedClass>;

        if $r3 != null goto label4;

        $r1 = "?";

     label2:
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $z0 = r0.<proguard.evaluation.value.ReferenceValue: boolean mayBeNull>;

        if $z0 == 0 goto label5;

        $r1 = "";

     label3:
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;

     label4:
        $r1 = "";

        goto label2;

     label5:
        $r1 = "!";

        goto label3;
    }
}
