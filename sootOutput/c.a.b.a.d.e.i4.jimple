final class c.a.b.a.d.e.i4 extends c.a.b.a.d.e.w2 implements c.a.b.a.d.e.q4, c.a.b.a.d.e.h6, java.util.RandomAccess
{
    private float[] c;
    private int d;

    static void <clinit>()
    {
        c.a.b.a.d.e.i4 $r0;
        float[] $r1;

        $r0 = new c.a.b.a.d.e.i4;

        $r1 = newarray (float)[0];

        specialinvoke $r0.<c.a.b.a.d.e.i4: void <init>(float[],int)>($r1, 0);

        virtualinvoke $r0.<c.a.b.a.d.e.w2: void r()>();

        return;
    }

    void <init>()
    {
        c.a.b.a.d.e.i4 r0;
        float[] $r1;

        r0 := @this: c.a.b.a.d.e.i4;

        $r1 = newarray (float)[10];

        specialinvoke r0.<c.a.b.a.d.e.i4: void <init>(float[],int)>($r1, 0);

        return;
    }

    private void <init>(float[], int)
    {
        int $i0;
        c.a.b.a.d.e.i4 r0;
        float[] $r1;

        r0 := @this: c.a.b.a.d.e.i4;

        $r1 := @parameter0: float[];

        $i0 := @parameter1: int;

        specialinvoke r0.<c.a.b.a.d.e.w2: void <init>()>();

        r0.<c.a.b.a.d.e.i4: float[] c> = $r1;

        r0.<c.a.b.a.d.e.i4: int d> = $i0;

        return;
    }

    private final void e(int)
    {
        java.lang.IndexOutOfBoundsException $r2;
        c.a.b.a.d.e.i4 r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: c.a.b.a.d.e.i4;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = r0.<c.a.b.a.d.e.i4: int d>;

        if $i0 >= $i1 goto label1;

        return;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r1 = specialinvoke r0.<c.a.b.a.d.e.i4: java.lang.String h(int)>($i0);

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    private final java.lang.String h(int)
    {
        c.a.b.a.d.e.i4 r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: c.a.b.a.d.e.i4;

        $i1 := @parameter0: int;

        $i0 = r0.<c.a.b.a.d.e.i4: int d>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(35);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Size:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public final void add(int, java.lang.Object)
    {
        java.lang.Float $r2;
        java.lang.IndexOutOfBoundsException $r5;
        c.a.b.a.d.e.i4 r0;
        float[] $r3, $r4;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.Object $r1;
        java.lang.String $r6;

        r0 := @this: c.a.b.a.d.e.i4;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (java.lang.Float) $r1;

        $f0 = virtualinvoke $r2.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<c.a.b.a.d.e.w2: void c()>();

        if $i0 < 0 goto label3;

        $i1 = r0.<c.a.b.a.d.e.i4: int d>;

        if $i0 > $i1 goto label3;

        $r3 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $i2 = lengthof $r3;

        if $i1 >= $i2 goto label1;

        $i2 = $i0 + 1;

        $i1 = $i1 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i0, $r3, $i2, $i1);

        goto label2;

     label1:
        $i1 = $i1 * 3;

        $i1 = $i1 / 2;

        $i1 = $i1 + 1;

        $r4 = newarray (float)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        $r3 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $i1 = $i0 + 1;

        $i2 = r0.<c.a.b.a.d.e.i4: int d>;

        $i2 = $i2 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i0, $r4, $i1, $i2);

        r0.<c.a.b.a.d.e.i4: float[] c> = $r4;

     label2:
        $r4 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $r4[$i0] = $f0;

        $i0 = r0.<c.a.b.a.d.e.i4: int d>;

        $i0 = $i0 + 1;

        r0.<c.a.b.a.d.e.i4: int d> = $i0;

        $i0 = r0.<java.util.AbstractList: int modCount>;

        $i0 = $i0 + 1;

        r0.<java.util.AbstractList: int modCount> = $i0;

        return;

     label3:
        $r5 = new java.lang.IndexOutOfBoundsException;

        $r6 = specialinvoke r0.<c.a.b.a.d.e.i4: java.lang.String h(int)>($i0);

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public final boolean add(java.lang.Object)
    {
        java.lang.Float $r2;
        c.a.b.a.d.e.i4 r0;
        float $f0;
        java.lang.Object $r1;

        r0 := @this: c.a.b.a.d.e.i4;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Float) $r1;

        $f0 = virtualinvoke $r2.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<c.a.b.a.d.e.i4: void d(float)>($f0);

        return 1;
    }

    public final boolean addAll(java.util.Collection)
    {
        c.a.b.a.d.e.i4 r0, $r2;
        java.util.Collection $r1;
        float[] $r3, $r4;
        int $i0, $i1, $i2;
        java.lang.OutOfMemoryError $r5;
        boolean $z0;

        r0 := @this: c.a.b.a.d.e.i4;

        $r1 := @parameter0: java.util.Collection;

        virtualinvoke r0.<c.a.b.a.d.e.w2: void c()>();

        staticinvoke <c.a.b.a.d.e.l4: java.lang.Object d(java.lang.Object)>($r1);

        $z0 = $r1 instanceof c.a.b.a.d.e.i4;

        if $z0 != 0 goto label1;

        $z0 = specialinvoke r0.<c.a.b.a.d.e.w2: boolean addAll(java.util.Collection)>($r1);

        return $z0;

     label1:
        $r2 = (c.a.b.a.d.e.i4) $r1;

        $i1 = $r2.<c.a.b.a.d.e.i4: int d>;

        if $i1 != 0 goto label2;

        return 0;

     label2:
        $i0 = r0.<c.a.b.a.d.e.i4: int d>;

        $i2 = 2147483647 - $i0;

        if $i2 < $i1 goto label4;

        $i1 = $i0 + $i1;

        $r3 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $i0 = lengthof $r3;

        if $i1 <= $i0 goto label3;

        $r3 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r3, $i1);

        r0.<c.a.b.a.d.e.i4: float[] c> = $r3;

     label3:
        $r3 = $r2.<c.a.b.a.d.e.i4: float[] c>;

        $r4 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $i0 = r0.<c.a.b.a.d.e.i4: int d>;

        $i2 = $r2.<c.a.b.a.d.e.i4: int d>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, $i0, $i2);

        r0.<c.a.b.a.d.e.i4: int d> = $i1;

        $i1 = r0.<java.util.AbstractList: int modCount>;

        $i1 = $i1 + 1;

        r0.<java.util.AbstractList: int modCount> = $i1;

        return 1;

     label4:
        $r5 = new java.lang.OutOfMemoryError;

        specialinvoke $r5.<java.lang.OutOfMemoryError: void <init>()>();

        throw $r5;
    }

    public final void d(float)
    {
        c.a.b.a.d.e.i4 r0;
        int $i0, $i1;
        float $f0;
        float[] $r1, $r2;

        r0 := @this: c.a.b.a.d.e.i4;

        $f0 := @parameter0: float;

        virtualinvoke r0.<c.a.b.a.d.e.w2: void c()>();

        $i0 = r0.<c.a.b.a.d.e.i4: int d>;

        $r1 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label1;

        $i1 = $i0 * 3;

        $i1 = $i1 / 2;

        $i1 = $i1 + 1;

        $r2 = newarray (float)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        r0.<c.a.b.a.d.e.i4: float[] c> = $r2;

     label1:
        $r1 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $i0 = r0.<c.a.b.a.d.e.i4: int d>;

        $i1 = $i0 + 1;

        r0.<c.a.b.a.d.e.i4: int d> = $i1;

        $r1[$i0] = $f0;

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        c.a.b.a.d.e.i4 r0, $r2;
        float[] $r3, $r4;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: c.a.b.a.d.e.i4;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof c.a.b.a.d.e.i4;

        if $z0 != 0 goto label2;

        $z0 = specialinvoke r0.<c.a.b.a.d.e.w2: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label2:
        $r2 = (c.a.b.a.d.e.i4) $r1;

        $i0 = r0.<c.a.b.a.d.e.i4: int d>;

        $i1 = $r2.<c.a.b.a.d.e.i4: int d>;

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $r3 = $r2.<c.a.b.a.d.e.i4: float[] c>;

        $i0 = 0;

     label4:
        $i1 = r0.<c.a.b.a.d.e.i4: int d>;

        if $i0 >= $i1 goto label6;

        $r4 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $f0 = $r4[$i0];

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $f0 = $r3[$i0];

        $i2 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        if $i1 == $i2 goto label5;

        return 0;

     label5:
        $i0 = $i0 + 1;

        goto label4;

     label6:
        return 1;
    }

    public final c.a.b.a.d.e.q4 f(int)
    {
        c.a.b.a.d.e.i4 r0, $r2;
        int $i0, $i1;
        float[] $r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: c.a.b.a.d.e.i4;

        $i0 := @parameter0: int;

        $i1 = r0.<c.a.b.a.d.e.i4: int d>;

        if $i0 < $i1 goto label1;

        $r2 = new c.a.b.a.d.e.i4;

        $r1 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $r1 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r1, $i0);

        $i0 = r0.<c.a.b.a.d.e.i4: int d>;

        specialinvoke $r2.<c.a.b.a.d.e.i4: void <init>(float[],int)>($r1, $i0);

        return $r2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public final java.lang.Object get(int)
    {
        java.lang.Float $r2;
        c.a.b.a.d.e.i4 r0;
        int $i0;
        float $f0;
        float[] $r1;

        r0 := @this: c.a.b.a.d.e.i4;

        $i0 := @parameter0: int;

        specialinvoke r0.<c.a.b.a.d.e.i4: void e(int)>($i0);

        $r1 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;
    }

    public final int hashCode()
    {
        c.a.b.a.d.e.i4 r0;
        int $i0, $i1, $i2;
        float $f0;
        float[] $r1;

        r0 := @this: c.a.b.a.d.e.i4;

        $i0 = 1;

        $i1 = 0;

     label1:
        $i2 = r0.<c.a.b.a.d.e.i4: int d>;

        if $i1 >= $i2 goto label2;

        $i2 = $i0 * 31;

        $r1 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $f0 = $r1[$i1];

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i0 = $i2 + $i0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i0;
    }

    public final java.lang.Object remove(int)
    {
        java.lang.Float $r2;
        c.a.b.a.d.e.i4 r0;
        int $i0, $i1, $i2;
        float $f0;
        float[] $r1;

        r0 := @this: c.a.b.a.d.e.i4;

        $i0 := @parameter0: int;

        virtualinvoke r0.<c.a.b.a.d.e.w2: void c()>();

        specialinvoke r0.<c.a.b.a.d.e.i4: void e(int)>($i0);

        $r1 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $f0 = $r1[$i0];

        $i1 = r0.<c.a.b.a.d.e.i4: int d>;

        $i2 = $i1 + -1;

        if $i0 >= $i2 goto label1;

        $i2 = $i0 + 1;

        $i1 = $i1 - $i0;

        $i1 = $i1 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i2, $r1, $i0, $i1);

     label1:
        $i0 = r0.<c.a.b.a.d.e.i4: int d>;

        $i0 = $i0 + -1;

        r0.<c.a.b.a.d.e.i4: int d> = $i0;

        $i0 = r0.<java.util.AbstractList: int modCount>;

        $i0 = $i0 + 1;

        r0.<java.util.AbstractList: int modCount> = $i0;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;
    }

    public final boolean remove(java.lang.Object)
    {
        java.lang.Float $r3;
        c.a.b.a.d.e.i4 r0;
        float[] $r2;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: c.a.b.a.d.e.i4;

        $r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<c.a.b.a.d.e.w2: void c()>();

        $i0 = 0;

     label1:
        $i1 = r0.<c.a.b.a.d.e.i4: int d>;

        if $i0 >= $i1 goto label3;

        $r2 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $f0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r2 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $i1 = $i0 + 1;

        $i2 = r0.<c.a.b.a.d.e.i4: int d>;

        $i2 = $i2 - $i0;

        $i2 = $i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r2, $i0, $i2);

        $i0 = r0.<c.a.b.a.d.e.i4: int d>;

        $i0 = $i0 - 1;

        r0.<c.a.b.a.d.e.i4: int d> = $i0;

        $i0 = r0.<java.util.AbstractList: int modCount>;

        $i0 = $i0 + 1;

        r0.<java.util.AbstractList: int modCount> = $i0;

        return 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected final void removeRange(int, int)
    {
        java.lang.IndexOutOfBoundsException $r2;
        c.a.b.a.d.e.i4 r0;
        int $i0, $i1, $i2;
        float[] $r1;

        r0 := @this: c.a.b.a.d.e.i4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<c.a.b.a.d.e.w2: void c()>();

        if $i1 < $i0 goto label1;

        $r1 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $i2 = r0.<c.a.b.a.d.e.i4: int d>;

        $i2 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r1, $i0, $i2);

        $i2 = r0.<c.a.b.a.d.e.i4: int d>;

        $i0 = $i1 - $i0;

        $i0 = $i2 - $i0;

        r0.<c.a.b.a.d.e.i4: int d> = $i0;

        $i0 = r0.<java.util.AbstractList: int modCount>;

        $i0 = $i0 + 1;

        r0.<java.util.AbstractList: int modCount> = $i0;

        return;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("toIndex < fromIndex");

        throw $r2;
    }

    public final java.lang.Object set(int, java.lang.Object)
    {
        java.lang.Float $r3;
        c.a.b.a.d.e.i4 r0;
        int $i0;
        float $f0, $f1;
        float[] $r1;
        java.lang.Object $r2;

        r0 := @this: c.a.b.a.d.e.i4;

        $i0 := @parameter0: int;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Float) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<c.a.b.a.d.e.w2: void c()>();

        specialinvoke r0.<c.a.b.a.d.e.i4: void e(int)>($i0);

        $r1 = r0.<c.a.b.a.d.e.i4: float[] c>;

        $f0 = $r1[$i0];

        $r1[$i0] = $f1;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r3;
    }

    public final int size()
    {
        int i0;
        c.a.b.a.d.e.i4 r0;

        r0 := @this: c.a.b.a.d.e.i4;

        i0 = r0.<c.a.b.a.d.e.i4: int d>;

        return i0;
    }
}
