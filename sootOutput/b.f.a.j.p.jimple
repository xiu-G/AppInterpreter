public class b.f.a.j.p extends b.f.a.j.f
{
    protected java.util.ArrayList k0;

    public void <init>()
    {
        b.f.a.j.p r0;
        java.util.ArrayList $r1;

        r0 := @this: b.f.a.j.p;

        specialinvoke r0.<b.f.a.j.f: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<b.f.a.j.p: java.util.ArrayList k0> = $r1;

        return;
    }

    public void F0()
    {
        java.util.ArrayList $r1;
        b.f.a.j.f $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        b.f.a.j.p r0;
        boolean $z0;

        r0 := @this: b.f.a.j.p;

        specialinvoke r0.<b.f.a.j.f: void F0()>();

        $r1 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r1 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (b.f.a.j.f) $r2;

        $i2 = virtualinvoke r0.<b.f.a.j.f: int p()>();

        $i3 = virtualinvoke r0.<b.f.a.j.f: int q()>();

        virtualinvoke $r3.<b.f.a.j.f: void n0(int,int)>($i2, $i3);

        $z0 = $r3 instanceof b.f.a.j.g;

        if $z0 != 0 goto label3;

        virtualinvoke $r3.<b.f.a.j.f: void F0()>();

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return;
    }

    public void I0(b.f.a.j.f)
    {
        b.f.a.j.f $r1, $r3;
        b.f.a.j.p r0, $r4;
        java.util.ArrayList $r2;

        r0 := @this: b.f.a.j.p;

        $r1 := @parameter0: b.f.a.j.f;

        $r2 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r1.<b.f.a.j.f: b.f.a.j.f u()>();

        if $r3 == null goto label1;

        $r3 = virtualinvoke $r1.<b.f.a.j.f: b.f.a.j.f u()>();

        $r4 = (b.f.a.j.p) $r3;

        virtualinvoke $r4.<b.f.a.j.p: void L0(b.f.a.j.f)>($r1);

     label1:
        virtualinvoke $r1.<b.f.a.j.f: void p0(b.f.a.j.f)>(r0);

        return;
    }

    public b.f.a.j.g J0()
    {
        b.f.a.j.f $r1, $r3;
        b.f.a.j.g $r2;
        b.f.a.j.p r0;
        boolean $z0;

        r0 := @this: b.f.a.j.p;

        $r1 = virtualinvoke r0.<b.f.a.j.f: b.f.a.j.f u()>();

        $z0 = r0 instanceof b.f.a.j.g;

        if $z0 == 0 goto label1;

        $r2 = (b.f.a.j.g) r0;

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r1 == null goto label4;

        $r3 = virtualinvoke $r1.<b.f.a.j.f: b.f.a.j.f u()>();

        $z0 = $r1 instanceof b.f.a.j.g;

        if $z0 == 0 goto label3;

        $r2 = (b.f.a.j.g) $r1;

     label3:
        $r1 = $r3;

        goto label2;

     label4:
        return $r2;
    }

    public void K0()
    {
        java.util.ArrayList $r1;
        b.f.a.j.f $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        b.f.a.j.p r0, $r4;
        boolean $z0;

        r0 := @this: b.f.a.j.p;

        virtualinvoke r0.<b.f.a.j.p: void F0()>();

        $r1 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r1 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (b.f.a.j.f) $r2;

        $z0 = $r3 instanceof b.f.a.j.p;

        if $z0 == 0 goto label3;

        $r4 = (b.f.a.j.p) $r3;

        virtualinvoke $r4.<b.f.a.j.p: void K0()>();

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return;
    }

    public void L0(b.f.a.j.f)
    {
        b.f.a.j.f $r1;
        b.f.a.j.p r0;
        java.util.ArrayList $r2;

        r0 := @this: b.f.a.j.p;

        $r1 := @parameter0: b.f.a.j.f;

        $r2 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        virtualinvoke $r1.<b.f.a.j.f: void p0(b.f.a.j.f)>(null);

        return;
    }

    public void M0()
    {
        b.f.a.j.p r0;
        java.util.ArrayList $r1;

        r0 := @this: b.f.a.j.p;

        $r1 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public void Q()
    {
        b.f.a.j.p r0;
        java.util.ArrayList $r1;

        r0 := @this: b.f.a.j.p;

        $r1 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<b.f.a.j.f: void Q()>();

        return;
    }

    public void T(b.f.a.c)
    {
        b.f.a.j.f $r4;
        b.f.a.c $r1;
        int $i0, $i1;
        java.lang.Object $r3;
        b.f.a.j.p r0;
        java.util.ArrayList $r2;

        r0 := @this: b.f.a.j.p;

        $r1 := @parameter0: b.f.a.c;

        specialinvoke r0.<b.f.a.j.f: void T(b.f.a.c)>($r1);

        $r2 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (b.f.a.j.f) $r3;

        virtualinvoke $r4.<b.f.a.j.f: void T(b.f.a.c)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void n0(int, int)
    {
        java.util.ArrayList $r1;
        b.f.a.j.f $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        b.f.a.j.p r0;

        r0 := @this: b.f.a.j.p;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<b.f.a.j.f: void n0(int,int)>($i0, $i1);

        $r1 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = r0.<b.f.a.j.p: java.util.ArrayList k0>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (b.f.a.j.f) $r2;

        $i2 = virtualinvoke r0.<b.f.a.j.f: int z()>();

        $i3 = virtualinvoke r0.<b.f.a.j.f: int A()>();

        virtualinvoke $r3.<b.f.a.j.f: void n0(int,int)>($i2, $i3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
}
