public class com.yang.longrubblishclear.util.ImageTools extends java.lang.Object
{

    private void <init>()
    {
        com.yang.longrubblishclear.util.ImageTools r0;

        r0 := @this: com.yang.longrubblishclear.util.ImageTools;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.http.HttpEntity connectToURL(android.content.Context, java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient r4;
        android.content.Context $r0;
        org.apache.http.params.BasicHttpParams r3;
        java.net.URL r10;
        org.apache.http.StatusLine $r6;
        int $i0;
        java.lang.String $r1, r9, $r13;
        boolean $z0;
        org.apache.http.HttpEntity $r7;
        java.lang.Exception r8, r16;
        org.apache.http.client.methods.HttpGet r2;
        org.apache.http.params.HttpParams $r15;
        org.apache.http.HttpResponse $r5;
        java.lang.StringBuilder $r14;
        org.apache.http.HttpHost r11, r12;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.yang.longrubblishclear.util.Tools: boolean isConnect(android.content.Context)>($r0);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $z0 = staticinvoke <com.yang.longrubblishclear.util.Tools: boolean isCmwap(android.content.Context)>($r0);

        if $z0 != 0 goto label12;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "%20");

        r2 = new org.apache.http.client.methods.HttpGet;

     label02:
        specialinvoke r2.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

     label03:
        r3 = new org.apache.http.params.BasicHttpParams;

     label04:
        specialinvoke r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r3, 15000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r3, 30000);

     label05:
        r4 = new org.apache.http.impl.client.DefaultHttpClient;

     label06:
        specialinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r3);

        $r5 = interfaceinvoke r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r2);

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r6.<org.apache.http.StatusLine: int getStatusCode()>();

     label07:
        if $i0 == 200 goto label08;

        return null;

     label08:
        $r7 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label09:
        return $r7;

     label10:
        r8 := @caughtexception;

        virtualinvoke r8.<java.lang.Exception: void printStackTrace()>();

     label11:
        return null;

     label12:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

     label13:
        r9 = "http://client.azrj.cn/";

        r10 = new java.net.URL;

     label14:
        specialinvoke r10.<java.net.URL: void <init>(java.lang.String)>("http://client.azrj.cn/");

     label15:
        r11 = new org.apache.http.HttpHost;

     label16:
        specialinvoke r11.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>("10.0.0.172", 80, "http");

     label17:
        r12 = new org.apache.http.HttpHost;

     label18:
        $r13 = virtualinvoke r10.<java.net.URL: java.lang.String getHost()>();

        $i0 = virtualinvoke r10.<java.net.URL: int getPort()>();

        specialinvoke r12.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r13, $i0, "http");

     label19:
        $r14 = new java.lang.StringBuilder;

     label20:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://");

        $r13 = virtualinvoke r10.<java.net.URL: java.lang.String getHost()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>($r13, "");

     label21:
        r2 = new org.apache.http.client.methods.HttpGet;

     label22:
        specialinvoke r2.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>(r9);

     label23:
        r3 = new org.apache.http.params.BasicHttpParams;

     label24:
        specialinvoke r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r3, 15000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r3, 30000);

     label25:
        r4 = new org.apache.http.impl.client.DefaultHttpClient;

     label26:
        specialinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r3);

        $r15 = interfaceinvoke r4.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r15.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", r11);

        staticinvoke <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>(r3, 0);

        interfaceinvoke r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>(r12, r2);

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "%20");

     label27:
        r10 = new java.net.URL;

     label28:
        specialinvoke r10.<java.net.URL: void <init>(java.lang.String)>($r1);

     label29:
        r11 = new org.apache.http.HttpHost;

     label30:
        specialinvoke r11.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>("10.0.0.172", 80, "http");

     label31:
        r12 = new org.apache.http.HttpHost;

     label32:
        r9 = virtualinvoke r10.<java.net.URL: java.lang.String getHost()>();

        $i0 = virtualinvoke r10.<java.net.URL: int getPort()>();

        specialinvoke r12.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>(r9, $i0, "http");

     label33:
        $r14 = new java.lang.StringBuilder;

     label34:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://");

        r9 = virtualinvoke r10.<java.net.URL: java.lang.String getHost()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        r9 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>(r9, "");

     label35:
        r2 = new org.apache.http.client.methods.HttpGet;

     label36:
        specialinvoke r2.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

     label37:
        r3 = new org.apache.http.params.BasicHttpParams;

     label38:
        specialinvoke r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r3, 15000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r3, 30000);

     label39:
        r4 = new org.apache.http.impl.client.DefaultHttpClient;

     label40:
        specialinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r3);

        $r15 = interfaceinvoke r4.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r15.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", r11);

        $r5 = interfaceinvoke r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>(r12, r2);

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r6.<org.apache.http.StatusLine: int getStatusCode()>();

     label41:
        if $i0 == 200 goto label42;

        return null;

     label42:
        $r7 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label43:
        return $r7;

     label44:
        r16 := @caughtexception;

        virtualinvoke r16.<java.lang.Exception: void printStackTrace()>();

        goto label11;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label44;
        catch java.lang.Exception from label14 to label15 with label44;
        catch java.lang.Exception from label16 to label17 with label44;
        catch java.lang.Exception from label18 to label19 with label44;
        catch java.lang.Exception from label20 to label21 with label44;
        catch java.lang.Exception from label22 to label23 with label44;
        catch java.lang.Exception from label24 to label25 with label44;
        catch java.lang.Exception from label26 to label27 with label44;
        catch java.lang.Exception from label28 to label29 with label44;
        catch java.lang.Exception from label30 to label31 with label44;
        catch java.lang.Exception from label32 to label33 with label44;
        catch java.lang.Exception from label34 to label35 with label44;
        catch java.lang.Exception from label36 to label37 with label44;
        catch java.lang.Exception from label38 to label39 with label44;
        catch java.lang.Exception from label40 to label41 with label44;
        catch java.lang.Exception from label42 to label43 with label44;
    }

    public static boolean downloadFile(android.content.Context, java.lang.String, java.io.File, java.lang.String)
    {
        java.lang.Throwable $r14, $r15, $r16, $r17;
        android.content.Context $r0;
        byte[] r3;
        long $l0;
        byte $b1;
        int $i2;
        java.lang.String $r2, $r5;
        boolean $z0;
        org.apache.http.HttpEntity $r8;
        java.io.FileOutputStream r4, r6, $r19;
        java.io.File $r1, r9, $r12, $r20;
        java.lang.Exception r13;
        java.lang.StringBuilder $r10, $r18;
        java.io.InputStream r7, $r11;

        $r0 := @parameter0: android.content.Context;

        $r5 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.io.File;

        $r2 := @parameter3: java.lang.String;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" ", "%20");

        r6 = null;

        r7 = null;

     label01:
        $r8 = staticinvoke <com.yang.longrubblishclear.util.ImageTools: org.apache.http.HttpEntity connectToURL(android.content.Context,java.lang.String)>($r0, $r5);

     label02:
        if $r8 != null goto label03;

        $r12 = new java.io.File;

        $r18 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        return 0;

     label03:
        $l0 = interfaceinvoke $r8.<org.apache.http.HttpEntity: long getContentLength()>();

     label04:
        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 > 0 goto label05;

        $r12 = new java.io.File;

        $r18 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        return 0;

     label05:
        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label06:
        if $z0 != 0 goto label08;

     label07:
        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

     label08:
        $r19 = new java.io.FileOutputStream;

     label09:
        r4 = $r19;

     label10:
        $r12 = new java.io.File;

     label11:
        r9 = $r12;

     label12:
        $r18 = new java.lang.StringBuilder;

     label13:
        $r10 = $r18;

     label14:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.io.File)>(r9);

     label15:
        $r11 = interfaceinvoke $r8.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label16:
        r7 = $r11;

        r3 = newarray (byte)[1024];

     label17:
        $i2 = virtualinvoke $r11.<java.io.InputStream: int read(byte[])>(r3);

     label18:
        if $i2 != -1 goto label33;

     label19:
        virtualinvoke r4.<java.io.FileOutputStream: void flush()>();

     label20:
        $r12 = new java.io.File;

     label21:
        r9 = $r12;

     label22:
        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r2);

     label23:
        $r20 = new java.io.File;

     label24:
        $r12 = $r20;

     label25:
        $r18 = new java.lang.StringBuilder;

     label26:
        $r10 = $r18;

     label27:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        staticinvoke <com.yang.longrubblishclear.util.ImageTools: boolean moveTo(java.io.File,java.io.File)>(r9, $r12);

     label28:
        $r12 = new java.io.File;

        $r18 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        if r4 == null goto label30;

     label29:
        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

     label30:
        if $r11 == null goto label32;

     label31:
        virtualinvoke $r11.<java.io.InputStream: void close()>();

     label32:
        return 1;

     label33:
        virtualinvoke r4.<java.io.FileOutputStream: void write(byte[],int,int)>(r3, 0, $i2);

     label34:
        goto label17;

     label35:
        r13 := @caughtexception;

        r6 = r4;

     label36:
        virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();

     label37:
        $r12 = new java.io.File;

        $r18 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        if r6 == null goto label39;

     label38:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

     label39:
        if r7 == null goto label41;

     label40:
        virtualinvoke r7.<java.io.InputStream: void close()>();

     label41:
        return 0;

     label42:
        $r14 := @caughtexception;

     label43:
        $r12 = new java.io.File;

        $r18 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r5);

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        if r6 == null goto label45;

     label44:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

     label45:
        if r7 == null goto label47;

     label46:
        virtualinvoke r7.<java.io.InputStream: void close()>();

     label47:
        throw $r14;

     label48:
        $r15 := @caughtexception;

        goto label32;

     label49:
        $r16 := @caughtexception;

        goto label47;

     label50:
        $r14 := @caughtexception;

        r6 = r4;

        goto label43;

     label51:
        $r17 := @caughtexception;

        goto label41;

     label52:
        r13 := @caughtexception;

        goto label36;

        catch java.lang.Exception from label01 to label02 with label52;
        catch java.lang.Throwable from label01 to label02 with label42;
        catch java.lang.Exception from label03 to label04 with label52;
        catch java.lang.Throwable from label03 to label04 with label42;
        catch java.lang.Exception from label05 to label06 with label52;
        catch java.lang.Exception from label07 to label08 with label52;
        catch java.lang.Exception from label14 to label15 with label52;
        catch java.lang.Throwable from label05 to label06 with label42;
        catch java.lang.Throwable from label07 to label09 with label42;
        catch java.lang.Throwable from label10 to label11 with label42;
        catch java.lang.Throwable from label12 to label13 with label42;
        catch java.lang.Throwable from label14 to label15 with label42;
        catch java.lang.Exception from label15 to label16 with label35;
        catch java.lang.Exception from label17 to label18 with label35;
        catch java.lang.Exception from label19 to label20 with label35;
        catch java.lang.Exception from label22 to label23 with label35;
        catch java.lang.Exception from label27 to label28 with label35;
        catch java.lang.Throwable from label15 to label16 with label50;
        catch java.lang.Throwable from label17 to label18 with label50;
        catch java.lang.Throwable from label19 to label21 with label50;
        catch java.lang.Throwable from label22 to label24 with label50;
        catch java.lang.Throwable from label25 to label26 with label50;
        catch java.lang.Throwable from label27 to label28 with label50;
        catch java.io.IOException from label29 to label30 with label48;
        catch java.io.IOException from label31 to label32 with label48;
        catch java.lang.Exception from label33 to label34 with label35;
        catch java.lang.Throwable from label33 to label34 with label50;
        catch java.lang.Throwable from label36 to label37 with label42;
        catch java.io.IOException from label38 to label39 with label51;
        catch java.io.IOException from label40 to label41 with label51;
        catch java.io.IOException from label44 to label45 with label49;
        catch java.io.IOException from label46 to label47 with label49;
    }

    public static android.graphics.Bitmap formBitmapOptions(java.io.InputStream, java.io.File) throws java.lang.OutOfMemoryError
    {
        java.lang.Throwable r2, r6, r7, $r8, r9;
        java.lang.IllegalStateException $r12;
        java.io.IOException $r11;
        android.graphics.Bitmap$Config $r5;
        java.io.File $r1;
        android.graphics.Bitmap $r4;
        java.io.InputStream $r0;
        android.graphics.BitmapFactory$Options r3, $r10;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.File;

     label01:
        $r10 = new android.graphics.BitmapFactory$Options;

     label02:
        r3 = $r10;

     label03:
        specialinvoke $r10.<android.graphics.BitmapFactory$Options: void <init>()>();

     label04:
        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        r3.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r5;

        r3.<android.graphics.BitmapFactory$Options: boolean inPurgeable> = 1;

        r3.<android.graphics.BitmapFactory$Options: boolean inInputShareable> = 1;

     label05:
        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r0, null, r3);

     label06:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label07:
        return $r4;

     label08:
        r6 := @caughtexception;

        $r11 = (java.io.IOException) r6;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        goto label07;

     label09:
        r2 := @caughtexception;

     label10:
        $r12 = (java.lang.IllegalStateException) r2;

        virtualinvoke $r12.<java.lang.IllegalStateException: void printStackTrace()>();

     label11:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label12:
        return null;

     label13:
        r7 := @caughtexception;

        $r11 = (java.io.IOException) r7;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        return null;

     label14:
        $r8 := @caughtexception;

     label15:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label16:
        throw $r8;

     label17:
        r9 := @caughtexception;

        $r11 = (java.io.IOException) r9;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        goto label16;

        catch java.lang.IllegalStateException from label03 to label04 with label09;
        catch java.lang.IllegalStateException from label05 to label06 with label09;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label06 with label14;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label15 to label16 with label17;
    }

    public static android.graphics.Bitmap formBtimap(java.io.InputStream) throws java.lang.OutOfMemoryError
    {
        java.lang.Throwable r1, r3, r4, $r5, r6;
        java.lang.IllegalStateException $r8;
        java.io.IOException $r7;
        android.graphics.Bitmap $r2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

     label01:
        $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r0);

     label02:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label03:
        return $r2;

     label04:
        r3 := @caughtexception;

        $r7 = (java.io.IOException) r3;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace()>();

        goto label03;

     label05:
        r1 := @caughtexception;

     label06:
        $r8 = (java.lang.IllegalStateException) r1;

        virtualinvoke $r8.<java.lang.IllegalStateException: void printStackTrace()>();

     label07:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label08:
        return null;

     label09:
        r4 := @caughtexception;

        $r7 = (java.io.IOException) r4;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace()>();

        goto label08;

     label10:
        $r5 := @caughtexception;

     label11:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label12:
        throw $r5;

     label13:
        r6 := @caughtexception;

        $r7 = (java.io.IOException) r6;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace()>();

        goto label12;

        catch java.lang.IllegalStateException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public static java.lang.String getADS_ID(android.content.Context)
    {
        java.lang.Throwable r5;
        android.content.Context $r0;
        android.os.Bundle r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        java.lang.NullPointerException r6;
        int $i0;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 128);

     label2:
        r1 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label3:
        $i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("ADS_ID");

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label4:
        return $r3;

     label5:
        r5 := @caughtexception;

        $r7 = (android.content.pm.PackageManager$NameNotFoundException) r5;

        virtualinvoke $r7.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return null;

     label6:
        r6 := @caughtexception;

        virtualinvoke r6.<java.lang.NullPointerException: void printStackTrace()>();

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
        catch java.lang.NullPointerException from label1 to label4 with label6;
    }

    public static java.lang.String getMD5Str(java.lang.String)
    {
        java.lang.Throwable r5, r7;
        java.io.PrintStream $r6;
        byte[] $r4;
        java.security.MessageDigest r2, $r3;
        short $s3;
        byte $b2;
        java.lang.StringBuffer r1, $r8;
        int i0, $i1;
        java.lang.String $r0;
        java.io.UnsupportedEncodingException $r9;

        $r0 := @parameter0: java.lang.String;

        r2 = null;

     label01:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label02:
        r2 = $r3;

     label03:
        virtualinvoke $r3.<java.security.MessageDigest: void reset()>();

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

     label04:
        $r4 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>();

        $r8 = new java.lang.StringBuffer;

        r1 = $r8;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        i0 = 0;

     label05:
        $i1 = lengthof $r4;

        if i0 < $i1 goto label08;

        $r0 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String substring(int,int)>(8, 24);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toString()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        return $r0;

     label06:
        r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("NoSuchAlgorithmException caught!");

        i0 = -1;

        staticinvoke <java.lang.System: void exit(int)>(i0);

        goto label04;

     label07:
        r7 := @caughtexception;

        $r9 = (java.io.UnsupportedEncodingException) r7;

        virtualinvoke $r9.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label04;

     label08:
        $b2 = $r4[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 != 1 goto label10;

        $r8 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $b2 = $r4[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label09:
        i0 = i0 + 1;

        goto label05;

     label10:
        $b2 = $r4[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        goto label09;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label06;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label06;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label07;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label07;
    }

    public static boolean isCmwap(android.content.Context)
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 != null goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: java.lang.String getTypeName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("WIFI");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MOBILE");

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <android.net.Proxy: java.lang.String getDefaultHost()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static boolean isConnect(android.content.Context)
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        android.net.NetworkInfo$State $r4, $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        if r2 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(0);

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r4 != $r5 goto label2;

        return 1;

     label2:
        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(1);

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r4 != $r5 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static boolean isWifiEnabled(android.content.Context)
    {
        android.content.Context $r0;
        android.net.wifi.WifiManager r2;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r2 = (android.net.wifi.WifiManager) $r1;

        $z0 = virtualinvoke r2.<android.net.wifi.WifiManager: boolean isWifiEnabled()>();

        return $z0;
    }

    public static boolean moveTo(java.io.File, java.io.File)
    {
        java.lang.Throwable r5, $r6, r7;
        byte[] r2;
        java.io.FileOutputStream r4, $r9;
        java.io.IOException $r11;
        java.io.FileInputStream r3, $r8;
        java.io.File $r0, $r1;
        java.io.FileNotFoundException $r10;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.io.File;

        $z0 = 0;

        entermonitor class "Lcom/yang/longrubblishclear/util/ImageTools;";

     label01:
        $r8 = new java.io.FileInputStream;

        r3 = $r8;

     label02:
        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label03:
        $r9 = new java.io.FileOutputStream;

        r4 = $r9;

     label04:
        specialinvoke $r9.<java.io.FileOutputStream: void <init>(java.io.File)>($r0);

     label05:
        r2 = newarray (byte)[1024];

     label06:
        $i0 = virtualinvoke r3.<java.io.FileInputStream: int read(byte[])>(r2);

     label07:
        if $i0 != -1 goto label11;

     label08:
        virtualinvoke r4.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

        virtualinvoke r3.<java.io.FileInputStream: void close()>();

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label09:
        $z0 = 1;

     label10:
        exitmonitor class "Lcom/yang/longrubblishclear/util/ImageTools;";

        return $z0;

     label11:
        virtualinvoke r4.<java.io.FileOutputStream: void write(byte[],int,int)>(r2, 0, $i0);

     label12:
        goto label06;

     label13:
        r5 := @caughtexception;

     label14:
        $r10 = (java.io.FileNotFoundException) r5;

        virtualinvoke $r10.<java.io.FileNotFoundException: void printStackTrace()>();

     label15:
        goto label10;

     label16:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/yang/longrubblishclear/util/ImageTools;";

        throw $r6;

     label17:
        r7 := @caughtexception;

     label18:
        $r11 = (java.io.IOException) r7;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

     label19:
        goto label10;

        catch java.io.FileNotFoundException from label02 to label03 with label13;
        catch java.io.FileNotFoundException from label04 to label05 with label13;
        catch java.io.FileNotFoundException from label06 to label07 with label13;
        catch java.io.FileNotFoundException from label08 to label09 with label13;
        catch java.io.IOException from label02 to label03 with label17;
        catch java.io.IOException from label04 to label05 with label17;
        catch java.io.IOException from label06 to label07 with label17;
        catch java.io.IOException from label08 to label09 with label17;
        catch java.lang.Throwable from label01 to label09 with label16;
        catch java.io.FileNotFoundException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label16;
    }

    public static java.lang.String timeFormat(long)
    {
        java.lang.Object[] $r0;
        int i1, i2, i3;
        long $l0;
        java.lang.String $r2;
        java.lang.Integer $r1;

        $l0 := @parameter0: long;

        i3 = (int) $l0;

        i1 = i3 / 1000;

        i3 = i1 % 60;

        i2 = i1 / 60;

        i2 = i2 % 60;

        i1 = i1 / 3600;

        $r0 = newarray (java.lang.Object)[3];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r0[0] = $r1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r0[1] = $r1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r0[2] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d:%02d:%02d", $r0);

        return $r2;
    }

    public static java.lang.String toString(java.io.InputStream)
    {
        java.lang.Throwable r2;
        java.io.IOException $r8;
        java.io.InputStreamReader $r5;
        java.lang.StringBuffer r1, $r7;
        java.io.BufferedReader r3, $r6;
        java.lang.String $r4;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        if $r0 != null goto label1;

        return null;

     label1:
        $r6 = new java.io.BufferedReader;

        r3 = $r6;

        $r5 = new java.io.InputStreamReader;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        $r7 = new java.lang.StringBuffer;

        r1 = $r7;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

     label2:
        $r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label3:
        if $r4 != null goto label4;

        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

     label4:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label5:
        goto label2;

     label6:
        r2 := @caughtexception;

        $r8 = (java.io.IOException) r2;

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

        return null;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public static android.graphics.Bitmap tryLoadFromFile(java.lang.String)
    {
        java.lang.Throwable r3;
        android.graphics.Bitmap $r2;
        java.lang.String $r0;
        java.io.FileInputStream r1, $r4;
        java.io.FileNotFoundException $r5;

        $r0 := @parameter0: java.lang.String;

        $r4 = new java.io.FileInputStream;

        r1 = $r4;

     label1:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

     label2:
        $r2 = staticinvoke <com.yang.longrubblishclear.util.ImageTools: android.graphics.Bitmap formBtimap(java.io.InputStream)>(r1);

     label3:
        return $r2;

     label4:
        r3 := @caughtexception;

     label5:
        $r5 = (java.io.FileNotFoundException) r3;

        virtualinvoke $r5.<java.io.FileNotFoundException: void printStackTrace()>();

        return null;

     label6:
        r3 := @caughtexception;

        goto label5;

        catch java.io.FileNotFoundException from label1 to label2 with label4;
        catch java.io.FileNotFoundException from label2 to label3 with label6;
    }
}
