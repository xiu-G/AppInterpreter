public final class org.hzl.master.utils.w extends java.lang.Object
{
    private static org.hzl.master.utils.w a;
    private static java.util.concurrent.ExecutorService b;

    static void <clinit>()
    {
        <org.hzl.master.utils.w: org.hzl.master.utils.w a> = null;

        return;
    }

    public void <init>()
    {
        org.hzl.master.utils.w r0;

        r0 := @this: org.hzl.master.utils.w;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.hzl.master.utils.w a()
    {
        java.util.concurrent.ExecutorService $r0;
        org.hzl.master.utils.w $r1;

        $r1 = <org.hzl.master.utils.w: org.hzl.master.utils.w a>;

        if $r1 != null goto label1;

        $r1 = new org.hzl.master.utils.w;

        specialinvoke $r1.<org.hzl.master.utils.w: void <init>()>();

        <org.hzl.master.utils.w: org.hzl.master.utils.w a> = $r1;

        $r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(5);

        <org.hzl.master.utils.w: java.util.concurrent.ExecutorService b> = $r0;

     label1:
        $r1 = <org.hzl.master.utils.w: org.hzl.master.utils.w a>;

        return $r1;
    }

    public static void a(java.lang.Runnable)
    {
        java.lang.Runnable $r0;
        java.util.concurrent.ExecutorService $r1;

        $r0 := @parameter0: java.lang.Runnable;

        $r1 = <org.hzl.master.utils.w: java.util.concurrent.ExecutorService b>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r0);

        return;
    }
}
