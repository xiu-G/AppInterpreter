final class com.parse.os.c extends java.util.concurrent.FutureTask
{
    final com.parse.os.ParseAsyncTask a;

    void <init>(com.parse.os.ParseAsyncTask, java.util.concurrent.Callable)
    {
        com.parse.os.c r0;
        java.util.concurrent.Callable $r2;
        com.parse.os.ParseAsyncTask $r1;

        r0 := @this: com.parse.os.c;

        $r1 := @parameter0: com.parse.os.ParseAsyncTask;

        $r2 := @parameter1: java.util.concurrent.Callable;

        r0.<com.parse.os.c: com.parse.os.ParseAsyncTask a> = $r1;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r2);

        return;
    }

    protected final void done()
    {
        java.lang.Throwable $r7, $r8, $r9, $r10;
        java.lang.Object[] $r5;
        com.parse.os.ParseAsyncTask $r4;
        com.parse.os.c r0;
        com.parse.os.e $r3;
        java.lang.RuntimeException $r12;
        com.parse.os.f $r11;
        java.util.concurrent.ExecutionException $r13;
        android.os.Message $r6;
        int $i0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.parse.os.c;

        $r1 = null;

     label1:
        $r2 = virtualinvoke r0.<com.parse.os.c: java.lang.Object get()>();

     label2:
        $r1 = $r2;

     label3:
        $r3 = staticinvoke <com.parse.os.ParseAsyncTask: com.parse.os.e access$200()>();

        $r11 = new com.parse.os.f;

        $r4 = r0.<com.parse.os.c: com.parse.os.ParseAsyncTask a>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r1;

        specialinvoke $r11.<com.parse.os.f: void <init>(com.parse.os.ParseAsyncTask,java.lang.Object[])>($r4, $r5);

        $r6 = virtualinvoke $r3.<com.parse.os.e: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r11);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

        return;

     label4:
        $r7 := @caughtexception;

        $i0 = staticinvoke <com.parse.Parse: int getLogLevel()>();

        if 5 <= $i0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("com.parse.os.ParseAsyncTask", $r7);

        goto label3;

     label5:
        $r8 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        $r13 = (java.util.concurrent.ExecutionException) $r8;

        $r7 = virtualinvoke $r13.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("An error occured while executing doInBackground()", $r7);

        throw $r12;

     label6:
        $r9 := @caughtexception;

        $r3 = staticinvoke <com.parse.os.ParseAsyncTask: com.parse.os.e access$200()>();

        $r11 = new com.parse.os.f;

        $r4 = r0.<com.parse.os.c: com.parse.os.ParseAsyncTask a>;

        specialinvoke $r11.<com.parse.os.f: void <init>(com.parse.os.ParseAsyncTask,java.lang.Object[])>($r4, null);

        $r6 = virtualinvoke $r3.<com.parse.os.e: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r11);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

        return;

     label7:
        $r10 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("An error occured while executing doInBackground()", $r10);

        throw $r12;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label5;
        catch java.util.concurrent.CancellationException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label7;
    }
}
