public class coconutlabs.game.playcurling.state.StateThrow extends coconutlabs.game.playcurling.state.GameState
{

    public void <init>()
    {
        coconutlabs.game.playcurling.state.StateThrow r0;

        r0 := @this: coconutlabs.game.playcurling.state.StateThrow;

        specialinvoke r0.<coconutlabs.game.playcurling.state.GameState: void <init>()>();

        return;
    }

    public void ChangeProcess(coconutlabs.game.playcurling.MainView$MainThread)
    {
        coconutlabs.game.playcurling.MainView$MainThread $r1;
        coconutlabs.game.playcurling.state.StateThrow r0;

        r0 := @this: coconutlabs.game.playcurling.state.StateThrow;

        $r1 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        return;
    }

    public void UpdateDisplay(coconutlabs.game.playcurling.MainView$MainThread, coconutlabs.game.playcurling.Renderer, android.graphics.Canvas)
    {
        android.content.Context $r5;
        coconutlabs.game.playcurling.CCLObject $r8, $r9;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r4;
        int $i0, $i1;
        android.graphics.Canvas $r3;
        java.lang.String $r6;
        coconutlabs.game.playcurling.Renderer $r2;
        coconutlabs.game.playcurling.MainView$MainThread $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.Paint $r7;
        coconutlabs.game.playcurling.state.StateThrow r0;

        r0 := @this: coconutlabs.game.playcurling.state.StateThrow;

        $r1 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        $r2 := @parameter1: coconutlabs.game.playcurling.Renderer;

        $r3 := @parameter2: android.graphics.Canvas;

        specialinvoke r0.<coconutlabs.game.playcurling.state.GameState: void UpdateDisplay(coconutlabs.game.playcurling.MainView$MainThread,coconutlabs.game.playcurling.Renderer,android.graphics.Canvas)>($r1, $r2, $r3);

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void adjustCam()>();

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void DrawGuideLine(android.graphics.Canvas)>($r3);

        $r4 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        $r4 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i1 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        if $i0 == $i1 goto label1;

        $r5 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.content.Context m_context>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int)>(2131230770);

        $f0 = $r2.<coconutlabs.game.playcurling.Renderer: float m_nScreenWidth>;

        $f0 = $f0 / 2.0F;

        $f1 = $r2.<coconutlabs.game.playcurling.Renderer: float m_nScreenHeight>;

        $f1 = $f1 / 3.0F;

        $f1 = $f1 - 25.0F;

        $r7 = $r2.<coconutlabs.game.playcurling.Renderer: android.graphics.Paint m_paintMsg>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r6, $f0, $f1, $r7);

        $r5 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.content.Context m_context>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int)>(2131230771);

        $f0 = $r2.<coconutlabs.game.playcurling.Renderer: float m_nScreenWidth>;

        $f0 = $f0 / 2.0F;

        $f1 = $r2.<coconutlabs.game.playcurling.Renderer: float m_nScreenHeight>;

        $f1 = $f1 / 3.0F;

        $r7 = $r2.<coconutlabs.game.playcurling.Renderer: android.graphics.Paint m_paintMsg>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r6, $f0, $f1, $r7);

        $r5 = $r1.<coconutlabs.game.playcurling.MainView$MainThread: android.content.Context m_context>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int)>(2131230772);

        $f0 = $r2.<coconutlabs.game.playcurling.Renderer: float m_nScreenWidth>;

        $f0 = $f0 / 2.0F;

        $f1 = $r2.<coconutlabs.game.playcurling.Renderer: float m_nScreenHeight>;

        $f1 = $f1 / 3.0F;

        $f1 = $f1 + 25.0F;

        $r7 = $r2.<coconutlabs.game.playcurling.Renderer: android.graphics.Paint m_paintMsg>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r6, $f0, $f1, $r7);

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: void Draw(android.graphics.Canvas,coconutlabs.game.playcurling.Renderer)>($r3, $r2);

        $i0 = $r2.<coconutlabs.game.playcurling.Renderer: int m_PushPower>;

        $i0 = $i0 - 7000;

        $f0 = (float) $i0;

        $f1 = $f0 / 4000.0F;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: int GetLeftTopX()>();

        $f0 = (float) $i0;

        $f2 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopX()>();

        $f0 = $f0 - $f2;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: int GetLeftTopY()>();

        $f2 = (float) $i0;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: int GetHeight()>();

        $f3 = (float) $i0;

        $f3 = $f3 * 0.185F;

        $f2 = $f2 + $f3;

        $f3 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f2 = $f2 - $f3;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: int GetRight()>();

        $f3 = (float) $i0;

        $f4 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopX()>();

        $f3 = $f3 - $f4;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: int GetLeftTopY()>();

        $f4 = (float) $i0;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: int GetHeight()>();

        $f5 = (float) $i0;

        $f5 = $f5 * 0.185F;

        $f4 = $f4 + $f5;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: int GetBottom()>();

        $f5 = (float) $i0;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: int GetHeight()>();

        $f6 = (float) $i0;

        $f6 = $f6 * 0.15F;

        $f5 = $f5 - $f6;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: int GetLeftTopY()>();

        $f6 = (float) $i0;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: int GetHeight()>();

        $f7 = (float) $i0;

        $f7 = $f7 * 0.185F;

        $f6 = $f6 + $f7;

        $f5 = $f5 - $f6;

        $f1 = 1.0F - $f1;

        $f1 = $f5 * $f1;

        $f1 = $f4 + $f1;

        $f4 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f1 = $f1 - $f4;

        $r7 = $r2.<coconutlabs.game.playcurling.Renderer: android.graphics.Paint PowerMask>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, $f2, $f3, $f1, $r7);

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerGauge>;

        virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: void Draw(android.graphics.Canvas,coconutlabs.game.playcurling.Renderer)>($r3, $r2);

        $i0 = <coconutlabs.game.playcurling.CCLDefine: int NeedPower>;

        $i0 = $i0 - 7000;

        $f0 = (float) $i0;

        $f1 = $f0 / 4000.0F;

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerHint>;

        $r9 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r9.<coconutlabs.game.playcurling.CCLObject: int GetPosX()>();

        $r9 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerHint>;

        $i1 = virtualinvoke $r9.<coconutlabs.game.playcurling.CCLObject: int GetWidth()>();

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $r9 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r9.<coconutlabs.game.playcurling.CCLObject: int GetLeftTopY()>();

        $f2 = (float) $i0;

        $r9 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r9.<coconutlabs.game.playcurling.CCLObject: int GetHeight()>();

        $f3 = (float) $i0;

        $f3 = $f3 * 0.185F;

        $f2 = $f2 + $f3;

        $r9 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r9.<coconutlabs.game.playcurling.CCLObject: int GetBottom()>();

        $f3 = (float) $i0;

        $r9 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r9.<coconutlabs.game.playcurling.CCLObject: int GetHeight()>();

        $f4 = (float) $i0;

        $f4 = $f4 * 0.15F;

        $f3 = $f3 - $f4;

        $r9 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r9.<coconutlabs.game.playcurling.CCLObject: int GetLeftTopY()>();

        $f4 = (float) $i0;

        $r9 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerBackGround>;

        $i0 = virtualinvoke $r9.<coconutlabs.game.playcurling.CCLObject: int GetHeight()>();

        $f5 = (float) $i0;

        $f5 = $f5 * 0.185F;

        $f4 = $f4 + $f5;

        $f3 = $f3 - $f4;

        $f1 = 1.0F - $f1;

        $f1 = $f3 * $f1;

        $f1 = $f2 + $f1;

        $f2 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f1 = $f1 - $f2;

        $r9 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objPowerHint>;

        $i0 = virtualinvoke $r9.<coconutlabs.game.playcurling.CCLObject: int GetHeight()>();

        $i0 = $i0 / 2;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: void DirectDraw(android.graphics.Canvas,float,float)>($r3, $f0, $f1);

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objDirectionArea>;

        virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: void Draw(android.graphics.Canvas,coconutlabs.game.playcurling.Renderer)>($r3, $r2);

        $r8 = $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject m_objDirectionIndicator>;

        virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: void RotateDraw(android.graphics.Canvas,coconutlabs.game.playcurling.Renderer)>($r3, $r2);

     label1:
        return;
    }

    public void UpdateLoopProcess(coconutlabs.game.playcurling.MainView$MainThread)
    {
        java.util.ArrayList $r4, $r5;
        coconutlabs.game.playcurling.CCLObject $r8, $r10;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r3;
        byte $b0;
        int $i1, $i2;
        android.view.Display $r9;
        boolean $z0;
        coconutlabs.game.playcurling.Renderer $r2;
        coconutlabs.game.playcurling.MainView$MainThread $r0;
        coconutlabs.game.playcurling.CCLStone r7;
        coconutlabs.game.playcurling.CCLArtificialIntelligence $r11;
        float $f0, $f1;
        java.lang.Object $r6;
        coconutlabs.game.playcurling.state.StateThrow r1;
        coconutlabs.game.playcurling.state.StateSweep $r12;

        r1 := @this: coconutlabs.game.playcurling.state.StateThrow;

        $r0 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: float fDist> = -1.0F;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bSweeping> = 0;

        $z0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bAutoScrolling>;

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $f0 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetCamPosY()>();

        $f1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nCamMov2EndMidPosY>;

        $b0 = $f0 cmpg $f1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label4;

        $f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_fCamMov2EndStep>;

        $f0 = $f0 * 1.08F;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_fCamMov2EndStep> = $f0;

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_fCamMov2EndStep>;

        $i1 = (int) $f0;

        $f0 = (float) $i1;

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void MoveCamY(float)>($f0);

     label1:
        $z0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean PushFlag>;

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void incrPushPower()>();

     label2:
        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void AdjustCamBoundary()>();

        $z0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bAutoScrolling>;

        if $z0 != 0 goto label8;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i1 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getPlayMode()>();

        if $i1 != 1 goto label8;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i1 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i2 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        if $i1 != $i2 goto label8;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempCurve> = 0.0F;

        $r4 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r5 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r7 = (coconutlabs.game.playcurling.CCLStone) $r6;

        $f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempCurve>;

        virtualinvoke r7.<coconutlabs.game.playcurling.CCLStone: void SetCurve(float)>($f0);

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i1 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        if $i1 != 1 goto label6;

        $f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempCurve>;

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label5;

        $i1 = <coconutlabs.game.playcurling.CCLDefine: int SpinOfP1>;

        $f0 = (float) $i1;

        $f1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempCurve>;

        $f0 = $f0 + $f1;

        $i1 = (int) $f0;

        <coconutlabs.game.playcurling.CCLDefine: int SpinOfP1> = $i1;

     label3:
        $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean CurveFlag> = 0;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempCurve> = 0.0F;

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $r8 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject GetObjectIndicator()>();

        $r9 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.Display disp>;

        $i1 = virtualinvoke $r9.<android.view.Display: int getWidth()>();

        $i1 = $i1 / 2;

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $r10 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject GetObjectIndicator()>();

        $i2 = virtualinvoke $r10.<coconutlabs.game.playcurling.CCLObject: int GetPosY()>();

        virtualinvoke $r8.<coconutlabs.game.playcurling.CCLObject: void SetPos(int,int)>($i1, $i2);

        $r4 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r5 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r7 = (coconutlabs.game.playcurling.CCLStone) $r6;

        $r11 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLArtificialIntelligence m_AI>;

        $i1 = virtualinvoke $r11.<coconutlabs.game.playcurling.CCLArtificialIntelligence: int GetEnergy()>();

        virtualinvoke r7.<coconutlabs.game.playcurling.CCLStone: void SetEnergy(int)>($i1);

        $r4 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r5 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r7 = (coconutlabs.game.playcurling.CCLStone) $r6;

        $r11 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLArtificialIntelligence m_AI>;

        $f0 = virtualinvoke $r11.<coconutlabs.game.playcurling.CCLArtificialIntelligence: float GetAzimuth()>();

        virtualinvoke r7.<coconutlabs.game.playcurling.CCLStone: void SetDirection(float)>($f0);

        $r12 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateSweep stateSweep>;

        virtualinvoke $r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeGameState(coconutlabs.game.playcurling.state.GameState)>($r12);

        return;

     label4:
        $f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_fCamMov2EndStep>;

        $f0 = $f0 / 1.05F;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_fCamMov2EndStep> = $f0;

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_fCamMov2EndStep>;

        $i1 = (int) $f0;

        $f0 = (float) $i1;

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void MoveCamY(float)>($f0);

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $f0 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetCamPosY()>();

        $f1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nCamMov2EndPosY>;

        $b0 = $f0 cmpl $f1;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nCamMov2EndPosY>;

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void SetCamPosY(float)>($f0);

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bAutoScrolling> = 0;

        goto label1;

     label5:
        $i1 = <coconutlabs.game.playcurling.CCLDefine: int SpinOfP1>;

        $f0 = (float) $i1;

        $f1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempCurve>;

        $f0 = $f0 - $f1;

        $i1 = (int) $f0;

        <coconutlabs.game.playcurling.CCLDefine: int SpinOfP1> = $i1;

        goto label3;

     label6:
        $f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempCurve>;

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label7;

        $i1 = <coconutlabs.game.playcurling.CCLDefine: int SpinOfP2>;

        $f0 = (float) $i1;

        $f1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempCurve>;

        $f0 = $f0 + $f1;

        $i1 = (int) $f0;

        <coconutlabs.game.playcurling.CCLDefine: int SpinOfP2> = $i1;

        goto label3;

     label7:
        $i1 = <coconutlabs.game.playcurling.CCLDefine: int SpinOfP2>;

        $f0 = (float) $i1;

        $f1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempCurve>;

        $f0 = $f0 - $f1;

        $i1 = (int) $f0;

        <coconutlabs.game.playcurling.CCLDefine: int SpinOfP2> = $i1;

        goto label3;

     label8:
        return;
    }

    public void UpdateTouch(coconutlabs.game.playcurling.MainView$MainThread, android.view.MotionEvent)
    {
        java.util.ArrayList $r7, $r8;
        coconutlabs.game.playcurling.CCLObject $r4;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r3;
        byte $b2;
        android.view.MotionEvent $r1;
        int $i0, $i1;
        android.view.Display $r6;
        boolean $z0;
        coconutlabs.game.playcurling.Renderer $r5;
        coconutlabs.game.playcurling.MainView$MainThread $r0;
        coconutlabs.game.playcurling.CCLAchievement $r11;
        coconutlabs.game.playcurling.CCLStone r10;
        float $f0, $f1;
        java.lang.Object $r9;
        coconutlabs.game.playcurling.state.StateThrow r2;
        coconutlabs.game.playcurling.state.StateSweep $r12;

        r2 := @this: coconutlabs.game.playcurling.state.StateThrow;

        $r0 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        $r1 := @parameter1: android.view.MotionEvent;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getPlayMode()>();

        if $i0 != 1 goto label1;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int GetCPUTurn()>();

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i1 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        if $i0 != $i1 goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label2;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i0 = (int) $f0;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosX> = $i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = (int) $f0;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosY> = $i0;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempDirection> = 0.0F;

        $r4 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.CCLObject getDeirectionIndicator()>();

        $i0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosX>;

        $i1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosY>;

        $r5 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $z0 = virtualinvoke $r4.<coconutlabs.game.playcurling.CCLObject: boolean isTouched(int,int,coconutlabs.game.playcurling.Renderer)>($i0, $i1, $r5);

        if $z0 == 0 goto label8;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean PushFlag> = 1;

        return;

     label2:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 2 goto label5;

        $z0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean PushFlag>;

        if $z0 == 0 goto label8;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $r6 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.Display disp>;

        $i0 = virtualinvoke $r6.<android.view.Display: int getWidth()>();

        $i0 = $i0 / 2;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $b2 = $f0 cmpl 100.0F;

        $i0 = (int) $b2;

        if $i0 <= 0 goto label4;

        $f0 = 100.0F;

     label3:
        $f0 = $f0 / 10.0F;

        $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempDirection> = $f0;

        $r4 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.CCLObject getDeirectionIndicator()>();

        $f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempDirection>;

        virtualinvoke $r4.<coconutlabs.game.playcurling.CCLObject: void SetRotate(float)>($f0);

        return;

     label4:
        $b2 = $f0 cmpg -100.0F;

        $i0 = (int) $b2;

        if $i0 >= 0 goto label3;

        $f0 = -100.0F;

        goto label3;

     label5:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 1 goto label8;

        $z0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean PushFlag>;

        if $z0 == 0 goto label8;

        $r7 = staticinvoke <coconutlabs.game.playcurling.MainView: java.util.ArrayList getStoneList()>();

        $r8 = staticinvoke <coconutlabs.game.playcurling.MainView: java.util.ArrayList getStoneList()>();

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r10 = (coconutlabs.game.playcurling.CCLStone) $r9;

        $r5 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $i0 = virtualinvoke $r5.<coconutlabs.game.playcurling.Renderer: int getPushPower()>();

        virtualinvoke r10.<coconutlabs.game.playcurling.CCLStone: void SetEnergy(int)>($i0);

        $r5 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $i0 = virtualinvoke $r5.<coconutlabs.game.playcurling.Renderer: int getPushPower()>();

        if $i0 <= 10000 goto label6;

        $i0 = <coconutlabs.game.playcurling.CCLDefine: int MaxPower>;

        $r5 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $i1 = virtualinvoke $r5.<coconutlabs.game.playcurling.Renderer: int getPushPower()>();

        if $i0 >= $i1 goto label6;

        $r5 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer GetRenderer()>();

        $i0 = virtualinvoke $r5.<coconutlabs.game.playcurling.Renderer: int getPushPower()>();

        <coconutlabs.game.playcurling.CCLDefine: int MaxPower> = $i0;

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        if $i0 != 1 goto label7;

        $r11 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLAchievement m_Achieves>;

        virtualinvoke $r11.<coconutlabs.game.playcurling.CCLAchievement: void AddMaxAchieve(int)>(1);

     label6:
        $r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean PushFlag> = 0;

        $r7 = staticinvoke <coconutlabs.game.playcurling.MainView: java.util.ArrayList getStoneList()>();

        $r8 = staticinvoke <coconutlabs.game.playcurling.MainView: java.util.ArrayList getStoneList()>();

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r10 = (coconutlabs.game.playcurling.CCLStone) $r9;

        $f0 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempDirection>;

        virtualinvoke r10.<coconutlabs.game.playcurling.CCLStone: void SetDirectionbyDegree(float)>($f0);

        $r4 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.CCLObject getDeirectionIndicator()>();

        virtualinvoke $r4.<coconutlabs.game.playcurling.CCLObject: void SetRotate(float)>(0.0F);

        $r12 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateSweep stateSweep>;

        virtualinvoke $r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeGameState(coconutlabs.game.playcurling.state.GameState)>($r12);

        return;

     label7:
        $r11 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLAchievement m_Achieves>;

        virtualinvoke $r11.<coconutlabs.game.playcurling.CCLAchievement: void AddMaxAchieve(int)>(2);

        goto label6;

     label8:
        return;
    }
}
