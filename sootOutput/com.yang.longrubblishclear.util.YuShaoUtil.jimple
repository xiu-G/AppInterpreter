public class com.yang.longrubblishclear.util.YuShaoUtil extends java.lang.Object
{
    public static final java.lang.String ACTION_INSTALL_SHORTCUT;
    private static final java.lang.String APP_DETAILS_CLASS_NAME;
    private static final java.lang.String APP_DETAILS_PACKAGE_NAME;
    public static final int APP_INSTALL_EXTERNAL;
    private static final java.lang.String APP_PKG_NAME_21;
    private static final java.lang.String APP_PKG_NAME_22;
    private static final int BUTTON_BLUETOOTH;
    private static final int BUTTON_BRIGHTNESS;
    private static final int BUTTON_GPS;
    private static final int BUTTON_SYNC;
    private static final int BUTTON_WIFI;
    public static int DEVICESCREENHEIGHT;
    public static int DEVICESCREENWIDTH;
    public static final java.lang.String EXTRA_SHORTCUT_DUPLICATE;
    public static final int FLAG_EXTERNAL_STORAGE;
    public static final int FLAG_FORWARD_LOCK;
    public static final int INSTALL_LOCATION_AUTO;
    public static final int INSTALL_LOCATION_PREFER_EXTERNAL;
    public static final int INSTALL_LOCATION_UNSPECIFIED;
    public static final java.lang.String KEY_BACKGROUND;
    public static final java.lang.String KEY_PROCESS;
    public static final java.lang.String KEY_UID;
    private static final java.lang.String SCHEME;
    public static final java.lang.String SCREEN_BRIGHTNESS_MODE;
    public static final int SCREEN_BRIGHTNESS_MODE_AUTOMATIC;
    public static final int SCREEN_BRIGHTNESS_MODE_MANUAL;
    private static final java.lang.String TAG;
    private static int[] deviceResolution;
    private static java.lang.reflect.Method getPackageSizeInfo;
    private static java.lang.Object iPackageManager;

    static void <clinit>()
    {
        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String TAG> = "WabaoUtil";

        <com.yang.longrubblishclear.util.YuShaoUtil: int SCREEN_BRIGHTNESS_MODE_MANUAL> = 0;

        <com.yang.longrubblishclear.util.YuShaoUtil: int SCREEN_BRIGHTNESS_MODE_AUTOMATIC> = 1;

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String SCREEN_BRIGHTNESS_MODE> = "screen_brightness_mode";

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String SCHEME> = "package";

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String KEY_UID> = "uid";

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String KEY_PROCESS> = "process";

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String KEY_BACKGROUND> = "background";

        <com.yang.longrubblishclear.util.YuShaoUtil: int INSTALL_LOCATION_UNSPECIFIED> = -1;

        <com.yang.longrubblishclear.util.YuShaoUtil: int INSTALL_LOCATION_PREFER_EXTERNAL> = 2;

        <com.yang.longrubblishclear.util.YuShaoUtil: int INSTALL_LOCATION_AUTO> = 0;

        <com.yang.longrubblishclear.util.YuShaoUtil: int FLAG_FORWARD_LOCK> = 1048576;

        <com.yang.longrubblishclear.util.YuShaoUtil: int FLAG_EXTERNAL_STORAGE> = 262144;

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String EXTRA_SHORTCUT_DUPLICATE> = "duplicate";

        <com.yang.longrubblishclear.util.YuShaoUtil: int BUTTON_WIFI> = 0;

        <com.yang.longrubblishclear.util.YuShaoUtil: int BUTTON_SYNC> = 2;

        <com.yang.longrubblishclear.util.YuShaoUtil: int BUTTON_GPS> = 3;

        <com.yang.longrubblishclear.util.YuShaoUtil: int BUTTON_BRIGHTNESS> = 1;

        <com.yang.longrubblishclear.util.YuShaoUtil: int BUTTON_BLUETOOTH> = 4;

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String APP_PKG_NAME_22> = "pkg";

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String APP_PKG_NAME_21> = "com.android.settings.ApplicationPkgName";

        <com.yang.longrubblishclear.util.YuShaoUtil: int APP_INSTALL_EXTERNAL> = 2;

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String APP_DETAILS_PACKAGE_NAME> = "com.android.settings";

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String APP_DETAILS_CLASS_NAME> = "com.android.settings.InstalledAppDetails";

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.String ACTION_INSTALL_SHORTCUT> = "com.android.launcher.action.INSTALL_SHORTCUT";

        <com.yang.longrubblishclear.util.YuShaoUtil: int DEVICESCREENWIDTH> = 0;

        <com.yang.longrubblishclear.util.YuShaoUtil: int DEVICESCREENHEIGHT> = 1;

        <com.yang.longrubblishclear.util.YuShaoUtil: int[] deviceResolution> = null;

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.Object iPackageManager> = null;

        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.reflect.Method getPackageSizeInfo> = null;

        return;
    }

    public void <init>()
    {
        com.yang.longrubblishclear.util.YuShaoUtil r0;

        r0 := @this: com.yang.longrubblishclear.util.YuShaoUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void callSettingsAppWidgetProvider(android.content.Context, int)
    {
        java.lang.Throwable r1;
        android.content.Context $r0;
        android.net.Uri $r5;
        android.app.PendingIntent$CanceledException $r9;
        android.content.Intent r2, $r7;
        android.app.PendingIntent $r6;
        int $i0;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r4;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r7 = new android.content.Intent;

        r2 = $r7;

        specialinvoke $r7.<android.content.Intent: void <init>()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.settings", "com.android.settings.widget.SettingsAppWidgetProvider");

        virtualinvoke r2.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.ALTERNATIVE");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("custom:");

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r5);

     label1:
        $r6 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r0, 0, r2, 0);

        virtualinvoke $r6.<android.app.PendingIntent: void send()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r9 = (android.app.PendingIntent$CanceledException) r1;

        virtualinvoke $r9.<android.app.PendingIntent$CanceledException: void printStackTrace()>();

        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    public static boolean canBeOnSdCard(android.content.pm.PackageManager, android.content.pm.ApplicationInfo)
    {
        android.content.pm.PackageManager $r0;
        int $i0;
        android.content.pm.ApplicationInfo $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.pm.PackageManager;

        $r1 := @parameter1: android.content.pm.ApplicationInfo;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 262144;

        if $i0 == 0 goto label2;

        $z0 = 0;

     label1:
        if $z0 == 0 goto label4;

        return 0;

     label2:
        $z0 = staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: boolean canBeOnSdCardChecker(android.content.pm.PackageManager,android.content.pm.ApplicationInfo)>($r0, $r1);

        if $z0 == 0 goto label3;

        $z0 = 0;

        goto label1;

     label3:
        $z0 = 1;

        goto label1;

     label4:
        return 1;
    }

    private static boolean canBeOnSdCardChecker(android.content.pm.PackageManager, android.content.pm.ApplicationInfo)
    {
        android.content.pm.PackageManager $r0;
        java.lang.reflect.Field $r3;
        java.lang.Integer $r5;
        android.content.pm.PackageInfo $r7;
        java.lang.Exception $r8;
        int i0, $i1;
        java.lang.Class $r2;
        java.lang.Object $r4;
        java.lang.String $r6;
        android.content.pm.ApplicationInfo $r1;

        $r0 := @parameter0: android.content.pm.PackageManager;

        $r1 := @parameter1: android.content.pm.ApplicationInfo;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 9 goto label07;

     label01:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("installLocation");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.lang.Integer) $r4;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

     label02:
        $i1 = $r1.<android.content.pm.ApplicationInfo: int flags>;

     label03:
        $i1 = $i1 & 1048576;

        if $i1 != 0 goto label13;

     label04:
        $i1 = $r1.<android.content.pm.ApplicationInfo: int flags>;

     label05:
        $i1 = $i1 & 1;

        if $i1 != 0 goto label13;

        if i0 == 2 goto label06;

        if i0 != 0 goto label09;

     label06:
        return 1;

     label07:
        $r6 = $r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r7 = virtualinvoke $r0.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r6, 8192);

        $r2 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("installLocation");

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r7);

        $r5 = (java.lang.Integer) $r4;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

     label08:
        goto label02;

     label09:
        $i1 = -1;

        if i0 != $i1 goto label13;

     label10:
        i0 = staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: int getInstallLocation()>();

     label11:
        if i0 != 2 goto label13;

        return 1;

     label12:
        $r8 := @caughtexception;

     label13:
        return 0;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label02 to label03 with label12;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public static void changeAirplanceMode(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: boolean isAirplaneModeOn(android.content.Context)>($r0);

        if $z0 == 0 goto label2;

        $z0 = 0;

     label1:
        staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: void setAirplaneMode(android.content.Context,boolean)>($r0, $z0);

        return;

     label2:
        $z0 = 1;

        goto label1;
    }

    public static void changeBackgroundDataState(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object[] $r7;
        java.lang.Class[] $r4;
        java.lang.Exception r1;
        int i0;
        java.lang.Boolean $r6;
        java.lang.Class $r2, $r3;
        java.lang.reflect.Method $r5;
        boolean $z0, $z1;

        $r0 := @parameter0: android.content.Context;

        $z0 = 0;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

     label01:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.content.ContentResolver");

     label02:
        $r4 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

     label03:
        $r4[0] = $r2;

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setMasterSyncAutomatically", $r4);

        $z1 = staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: boolean isBackgroundDataEnable(android.content.Context)>($r0);

     label04:
        if $z1 == 0 goto label09;

     label05:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

     label06:
        $r7 = newarray (java.lang.Object)[1];

     label07:
        $r7[0] = $r6;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r7);

     label08:
        return;

     label09:
        $z0 = 1;

        goto label05;

     label10:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: void callSettingsAppWidgetProvider(android.content.Context,int)>($r0, 2);

        return;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label07 to label08 with label10;
    }

    public static void changeBluetoothState(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object[] $r5;
        java.lang.Class[] $r3;
        java.lang.Exception r1;
        java.lang.Class $r2;
        java.lang.Object $r6;
        java.lang.reflect.Method $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

     label01:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.bluetooth.BluetoothAdapter");

     label02:
        $r3 = newarray (java.lang.Class)[0];

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getDefaultAdapter", $r3);

     label04:
        $r5 = newarray (java.lang.Object)[0];

     label05:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r5);

        $z0 = staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: boolean isBluetoothOn(android.content.Context)>($r0);

     label06:
        if $z0 == 0 goto label13;

     label07:
        $r2 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

     label08:
        $r3 = newarray (java.lang.Class)[0];

     label09:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("disable", $r3);

     label10:
        $r5 = newarray (java.lang.Object)[0];

     label11:
        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r5);

     label12:
        return;

     label13:
        $r2 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

     label14:
        $r3 = newarray (java.lang.Class)[0];

     label15:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("enable", $r3);

     label16:
        $r5 = newarray (java.lang.Object)[0];

     label17:
        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r5);

     label18:
        return;

     label19:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: void callSettingsAppWidgetProvider(android.content.Context,int)>($r0, 4);

        return;

        catch java.lang.Exception from label01 to label02 with label19;
        catch java.lang.Exception from label03 to label04 with label19;
        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Exception from label07 to label08 with label19;
        catch java.lang.Exception from label09 to label10 with label19;
        catch java.lang.Exception from label11 to label12 with label19;
        catch java.lang.Exception from label13 to label14 with label19;
        catch java.lang.Exception from label15 to label16 with label19;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    public static void changeGpsState(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label1;

        staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil$Settings: void gpsActivity(android.content.Context)>($r0);

        return;

     label1:
        staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: void callSettingsAppWidgetProvider(android.content.Context,int)>($r0, 3);

        return;
    }

    public static void changeRotationScreenMode(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: boolean isRotationScreen(android.content.Context)>($r0);

        if $z0 == 0 goto label2;

        $z0 = 0;

     label1:
        staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: void setRotationScreen(android.content.Context,boolean)>($r0, $z0);

        return;

     label2:
        $z0 = 1;

        goto label1;
    }

    public static void changeWifiState(android.content.Context)
    {
        android.content.Context $r0;
        android.net.wifi.WifiManager r2;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r2 = (android.net.wifi.WifiManager) $r1;

        $z0 = virtualinvoke r2.<android.net.wifi.WifiManager: boolean isWifiEnabled()>();

        if $z0 == 0 goto label2;

        $z0 = 0;

     label1:
        virtualinvoke r2.<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>($z0);

        return;

     label2:
        $z0 = 1;

        goto label1;
    }

    public static void freeStorageAndNotify(android.content.pm.PackageManager, long, android.content.pm.IPackageDataObserver)
    {
        java.lang.Object[] $r7;
        android.content.pm.PackageManager $r0;
        java.lang.Class[] $r4;
        long $l0;
        android.content.pm.IPackageDataObserver $r1;
        java.lang.Exception r2;
        java.lang.Long $r8;
        java.lang.Class $r3, $r5;
        java.lang.reflect.Method $r6;

        $r0 := @parameter0: android.content.pm.PackageManager;

        $l0 := @parameter1: long;

        $r1 := @parameter2: android.content.pm.IPackageDataObserver;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        $r4 = newarray (java.lang.Class)[2];

        $r5 = <java.lang.Long: java.lang.Class TYPE>;

     label3:
        $r4[0] = $r5;

        $r4[1] = class "Landroid/content/pm/IPackageDataObserver;";

        $r6 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("freeStorageAndNotify", $r4);

     label4:
        $r7 = newarray (java.lang.Object)[2];

     label5:
        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7[0] = $r8;

        $r7[1] = $r1;

        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r7);

     label6:
        return;

     label7:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.util.List getAutoRunApps(android.content.pm.PackageManager)
    {
        android.content.Intent r1;
        java.util.List $r2;
        android.content.pm.PackageManager $r0;

        $r0 := @parameter0: android.content.pm.PackageManager;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.BOOT_COMPLETED");

        $r2 = virtualinvoke $r0.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>(r1, 512);

        return $r2;
    }

    public static long getAvailMemory(android.app.ActivityManager)
    {
        android.app.ActivityManager $r0;
        long l0;
        android.app.ActivityManager$MemoryInfo r1;

        $r0 := @parameter0: android.app.ActivityManager;

        r1 = new android.app.ActivityManager$MemoryInfo;

        specialinvoke r1.<android.app.ActivityManager$MemoryInfo: void <init>()>();

        virtualinvoke $r0.<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>(r1);

        l0 = r1.<android.app.ActivityManager$MemoryInfo: long availMem>;

        return l0;
    }

    public static int getBrightnessMode(android.content.ContentResolver)
    {
        int $i0;
        android.content.ContentResolver $r0;

        $r0 := @parameter0: android.content.ContentResolver;

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r0, "screen_brightness_mode", 0);

        return $i0;
    }

    public static java.lang.String getFormattedKernelVersion()
    {
        java.lang.Throwable r0, $r7;
        java.util.regex.Matcher $r5;
        int $i0;
        java.lang.StringBuilder $r6;
        java.io.BufferedReader r1;
        java.io.FileReader $r2;
        java.lang.String $r3;
        java.util.regex.Pattern $r4;
        boolean $z0;

        r1 = new java.io.BufferedReader;

        $r2 = new java.io.FileReader;

     label01:
        specialinvoke $r2.<java.io.FileReader: void <init>(java.lang.String)>("/proc/version");

        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r2, 256);

     label02:
        $r3 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\w+\\s+\\w+\\s+([^\\s]+)\\s+\\(([^\\s@]+(?:@[^\\s.]+)?)[^)]*\\)\\s+\\((?:[^(]*\\([^)]*\\))?[^)]*\\)\\s+([^\\s]+)\\s+(?:PREEMPT\\s+)?(.+)");

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

     label04:
        if $z0 != 0 goto label10;

        $r6 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Regex did not match on /proc/version: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WabaoUtil", $r3);

     label06:
        return "Unavailable";

     label07:
        $r7 := @caughtexception;

     label08:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

        throw $r7;

     label09:
        r0 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WabaoUtil", "IO Exception when getting kernel version for Device Info screen", r0);

        return "Unavailable";

     label10:
        $i0 = virtualinvoke $r5.<java.util.regex.Matcher: int groupCount()>();

     label11:
        if $i0 >= 4 goto label14;

        $r6 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Regex match on /proc/version only returned ");

        $i0 = virtualinvoke $r5.<java.util.regex.Matcher: int groupCount()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" groups");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WabaoUtil", $r3);

     label13:
        return "Unavailable";

     label14:
        $r6 = new java.lang.StringBuilder;

     label15:
        $r3 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        return $r3;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.io.IOException from label08 to label09 with label09;
        catch java.io.IOException from label10 to label11 with label09;
        catch java.io.IOException from label12 to label13 with label09;
        catch java.io.IOException from label15 to label16 with label09;
    }

    private static int getInstallLocation()
    {
        java.lang.Object[] $r5;
        java.lang.Class[] $r3;
        java.lang.Integer $r6;
        java.lang.Exception r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        java.lang.reflect.Method $r4;

        $r1 = <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.Object iPackageManager>;

        if $r1 != null goto label07;

     label01:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.app.ActivityThread");

     label02:
        $r3 = newarray (java.lang.Class)[0];

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPackageManager", $r3);

     label04:
        $r5 = newarray (java.lang.Object)[0];

     label05:
        $r1 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r5);

     label06:
        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.Object iPackageManager> = $r1;

     label07:
        $r1 = <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.Object iPackageManager>;

     label08:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

     label09:
        $r3 = newarray (java.lang.Class)[0];

     label10:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getInstallLocation", $r3);

     label11:
        $r1 = <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.Object iPackageManager>;

        $r5 = newarray (java.lang.Object)[0];

     label12:
        $r1 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r5);

        $r6 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label13:
        return $i0;

     label14:
        r0 := @caughtexception;

        virtualinvoke r0.<java.lang.Exception: void printStackTrace()>();

        return 0;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public static android.content.Intent getInstalledAppDetailsIntent(java.lang.String)
    {
        int i0;
        android.net.Uri $r1;
        android.content.Intent r2;
        java.lang.String $r0, r3;

        $r0 := @parameter0: java.lang.String;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>()>();

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 9 goto label1;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.settings.APPLICATION_DETAILS_SETTINGS");

        $r1 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", $r0, null);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r1);

        return r2;

     label1:
        if i0 != 8 goto label3;

        r3 = "pkg";

     label2:
        virtualinvoke r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.VIEW");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.settings", "com.android.settings.InstalledAppDetails");

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>(r3, $r0);

        return r2;

     label3:
        r3 = "com.android.settings.ApplicationPkgName";

        goto label2;
    }

    public static android.content.Intent getLaunchIntentForPackage(android.content.pm.PackageManager, java.lang.String)
    {
        android.content.Intent $r2;
        java.lang.String $r1;
        android.content.pm.PackageManager $r0;

        $r0 := @parameter0: android.content.pm.PackageManager;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>($r1);

        return $r2;
    }

    public static boolean getMobileDataEnabled(android.net.ConnectivityManager)
    {
        java.lang.Throwable r7, r8, r9, r10, r11;
        java.lang.Object[] $r4;
        java.lang.NoSuchMethodException $r13;
        java.lang.Boolean $r6;
        java.lang.SecurityException $r12;
        java.lang.reflect.Method $r3;
        boolean $z0;
        android.net.ConnectivityManager $r0;
        java.lang.IllegalAccessException $r15;
        java.lang.Class[] $r2;
        java.lang.IllegalArgumentException $r14;
        java.lang.reflect.InvocationTargetException $r16;
        java.lang.Class $r1;
        java.lang.Object $r5;

        $r0 := @parameter0: android.net.ConnectivityManager;

     label01:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r2 = newarray (java.lang.Class)[0];

     label03:
        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getMobileDataEnabled", $r2);

     label04:
        $r4 = newarray (java.lang.Object)[0];

     label05:
        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r4);

     label06:
        $r6 = (java.lang.Boolean) $r5;

     label07:
        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

     label08:
        return $z0;

     label09:
        r7 := @caughtexception;

        $r12 = (java.lang.SecurityException) r7;

        virtualinvoke $r12.<java.lang.SecurityException: void printStackTrace()>();

     label10:
        return 0;

     label11:
        r8 := @caughtexception;

        $r13 = (java.lang.NoSuchMethodException) r8;

        virtualinvoke $r13.<java.lang.NoSuchMethodException: void printStackTrace()>();

        goto label10;

     label12:
        r9 := @caughtexception;

        $r14 = (java.lang.IllegalArgumentException) r9;

        virtualinvoke $r14.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label10;

     label13:
        r10 := @caughtexception;

        $r15 = (java.lang.IllegalAccessException) r10;

        virtualinvoke $r15.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label10;

     label14:
        r11 := @caughtexception;

        $r16 = (java.lang.reflect.InvocationTargetException) r11;

        virtualinvoke $r16.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        goto label10;

        catch java.lang.SecurityException from label01 to label02 with label09;
        catch java.lang.SecurityException from label03 to label04 with label09;
        catch java.lang.SecurityException from label05 to label06 with label09;
        catch java.lang.SecurityException from label07 to label08 with label09;
        catch java.lang.NoSuchMethodException from label01 to label02 with label11;
        catch java.lang.NoSuchMethodException from label03 to label04 with label11;
        catch java.lang.NoSuchMethodException from label05 to label06 with label11;
        catch java.lang.NoSuchMethodException from label07 to label08 with label11;
        catch java.lang.IllegalArgumentException from label01 to label02 with label12;
        catch java.lang.IllegalArgumentException from label03 to label04 with label12;
        catch java.lang.IllegalArgumentException from label05 to label06 with label12;
        catch java.lang.IllegalArgumentException from label07 to label08 with label12;
        catch java.lang.IllegalAccessException from label01 to label02 with label13;
        catch java.lang.IllegalAccessException from label03 to label04 with label13;
        catch java.lang.IllegalAccessException from label05 to label06 with label13;
        catch java.lang.IllegalAccessException from label07 to label08 with label13;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label14;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label14;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label14;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label14;
    }

    public static long getPhoneAvailMemorySize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r2;
        java.io.File $r1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getAvailableBlocks()>();

        l0 = (long) $i2;

        l0 = l0 * l1;

        return l0;
    }

    public static long getPhoneTotalMemorySize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r2;
        java.io.File $r1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l0 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockCount()>();

        l1 = (long) $i2;

        l0 = l1 * l0;

        return l0;
    }

    public static boolean getPkgInfo(android.content.Context, java.lang.String, android.content.pm.IPackageStatsObserver$Stub)
    {
        android.content.Context $r0;
        java.lang.Object[] $r8;
        android.content.pm.IPackageStatsObserver$Stub $r2;
        android.content.pm.PackageManager $r4;
        java.lang.Class[] $r7;
        java.lang.Exception r3;
        java.lang.Class $r6;
        java.lang.String $r1;
        java.lang.reflect.Method $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.pm.IPackageStatsObserver$Stub;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.reflect.Method getPackageSizeInfo>;

        if $r5 != null goto label5;

     label1:
        $r6 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        $r7 = newarray (java.lang.Class)[2];

     label3:
        $r7[0] = class "Ljava/lang/String;";

        $r7[1] = class "Landroid/content/pm/IPackageStatsObserver;";

        $r5 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPackageSizeInfo", $r7);

     label4:
        <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.reflect.Method getPackageSizeInfo> = $r5;

     label5:
        $r5 = <com.yang.longrubblishclear.util.YuShaoUtil: java.lang.reflect.Method getPackageSizeInfo>;

        $r8 = newarray (java.lang.Object)[2];

     label6:
        $r8[0] = $r1;

        $r8[1] = $r2;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r8);

     label7:
        return 1;

     label8:
        r3 := @caughtexception;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WabaoUtil", " get package information fialed");

        return 0;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static int[] getResolution(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager r4;
        android.util.DisplayMetrics r1;
        int[] $r2;
        int $i0, $i1;
        android.view.Display $r5;
        java.lang.Object $r3;

        $r0 := @parameter0: android.content.Context;

        $r2 = <com.yang.longrubblishclear.util.YuShaoUtil: int[] deviceResolution>;

        if $r2 != null goto label1;

        $r2 = newarray (int)[2];

        <com.yang.longrubblishclear.util.YuShaoUtil: int[] deviceResolution> = $r2;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r4 = (android.view.WindowManager) $r3;

        $r5 = interfaceinvoke r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r5.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        $r2 = <com.yang.longrubblishclear.util.YuShaoUtil: int[] deviceResolution>;

        $i0 = <com.yang.longrubblishclear.util.YuShaoUtil: int DEVICESCREENWIDTH>;

        $i1 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $r2[$i0] = $i1;

        $r2 = <com.yang.longrubblishclear.util.YuShaoUtil: int[] deviceResolution>;

        $i0 = <com.yang.longrubblishclear.util.YuShaoUtil: int DEVICESCREENHEIGHT>;

        $i1 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $r2[$i0] = $i1;

     label1:
        $r2 = <com.yang.longrubblishclear.util.YuShaoUtil: int[] deviceResolution>;

        return $r2;
    }

    public static long getSDCardAvailMemorySize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r1;
        java.io.File $r2;
        boolean $z0;

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        r0 = new android.os.StatFs;

        $r1 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r1);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getAvailableBlocks()>();

        l0 = (long) $i2;

        l0 = l1 * l0;

        return l0;

     label1:
        return -1L;
    }

    public static long getSDCardTotalMemorySize()
    {
        android.os.StatFs r0;
        int $i2;
        long l0, l1;
        java.lang.String $r1;
        java.io.File $r2;
        boolean $z0;

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        r0 = new android.os.StatFs;

        $r1 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        specialinvoke r0.<android.os.StatFs: void <init>(java.lang.String)>($r1);

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockSize()>();

        l0 = (long) $i2;

        $i2 = virtualinvoke r0.<android.os.StatFs: int getBlockCount()>();

        l1 = (long) $i2;

        l0 = l0 * l1;

        return l0;

     label1:
        return -1L;
    }

    public static int getScreenBrightness(android.content.ContentResolver)
    {
        int $i0;
        android.content.ContentResolver $r0;

        $r0 := @parameter0: android.content.ContentResolver;

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r0, "screen_brightness", 50);

        return $i0;
    }

    public static int getScreenOffTimeOut(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        android.content.ContentResolver $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "screen_off_timeout", 0);

        return $i0;
    }

    public static long getTotalMemory(android.content.Context)
    {
        java.lang.Throwable $r8;
        android.content.Context $r0;
        long l1;
        java.lang.String[] $r5;
        java.lang.Integer $r6;
        int $i0, $i2;
        java.lang.StringBuilder $r7;
        java.io.BufferedReader r1;
        java.io.FileReader r2;
        java.lang.String r3, $r4;

        $r0 := @parameter0: android.content.Context;

        l1 = 0L;

        r2 = new java.io.FileReader;

     label01:
        specialinvoke r2.<java.io.FileReader: void <init>(java.lang.String)>("/proc/meminfo");

     label02:
        r1 = new java.io.BufferedReader;

     label03:
        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r2, 8192);

        $r4 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

     label04:
        $i0 = lengthof $r5;

        $i2 = 0;

     label05:
        if $i2 < $i0 goto label10;

        $r4 = $r5[1];

     label06:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r4);

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label07:
        $i0 = $i0 * 1024;

        l1 = (long) $i0;

     label08:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label09:
        return l1;

     label10:
        r3 = $r5[$i2];

        $r7 = new java.lang.StringBuilder;

     label11:
        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r4, r3);

     label12:
        $i2 = $i2 + 1;

        goto label05;

     label13:
        $r8 := @caughtexception;

        return l1;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label06 to label07 with label13;
        catch java.io.IOException from label08 to label09 with label13;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public static java.lang.String getTotalMemoryStr(android.content.Context)
    {
        android.content.Context $r0;
        long $l0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $l0 = staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: long getTotalMemory(android.content.Context)>($r0);

        $r1 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>($r0, $l0);

        return $r1;
    }

    public static void installPackage(android.content.Context, java.io.File)
    {
        android.content.Context $r0;
        android.net.Uri $r3;
        android.content.Intent r2;
        java.io.File $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.io.File;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r1);

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r3, "application/vnd.android.package-archive");

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>(r2);

        return;
    }

    public static void installShortcut(android.content.Context, android.content.Intent, java.lang.String, int)
    {
        android.content.Context $r0;
        int $i0;
        android.content.Intent$ShortcutIconResource $r4;
        android.content.Intent $r1, r3;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.Intent;

        $r2 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        r3 = new android.content.Intent;

        specialinvoke r3.<android.content.Intent: void <init>(java.lang.String)>("com.android.launcher.action.INSTALL_SHORTCUT");

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.shortcut.NAME", $r2);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("duplicate", 0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.INTENT", $r1);

        $r4 = staticinvoke <android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>($r0, $i0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.ICON_RESOURCE", $r4);

        virtualinvoke $r0.<android.content.Context: void sendBroadcast(android.content.Intent)>(r3);

        return;
    }

    public static boolean isAirplaneModeOn(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        android.content.ContentResolver $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "airplane_mode_on", 0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isBackgroundDataEnable(android.content.Context)
    {
        android.net.ConnectivityManager r8;
        android.content.Context $r0;
        java.lang.Object[] $r5;
        java.lang.Class[] $r3;
        java.lang.Exception r1;
        int i0;
        java.lang.Boolean $r7;
        java.lang.Class $r2;
        java.lang.Object $r6;
        java.lang.reflect.Method $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 <= 4 goto label8;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.content.ContentResolver");

     label2:
        $r3 = newarray (java.lang.Class)[0];

     label3:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getMasterSyncAutomatically", $r3);

     label4:
        $r5 = newarray (java.lang.Object)[0];

     label5:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r5);

        $r7 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

     label6:
        return $z0;

     label7:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return 0;

     label8:
        $r6 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r8 = (android.net.ConnectivityManager) $r6;

        $z0 = virtualinvoke r8.<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>();

        return $z0;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static boolean isBluetoothOn(android.content.Context)
    {
        java.lang.Throwable r1;
        android.content.Context $r0;
        android.content.ContentResolver $r2;
        int i0, $i1;
        android.provider.Settings$SettingNotFoundException $r3;

        $r0 := @parameter0: android.content.Context;

        i0 = 0;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>($r2, "bluetooth_on");

     label2:
        i0 = $i1;

     label3:
        if i0 != 1 goto label5;

        return 1;

     label4:
        r1 := @caughtexception;

        $r3 = (android.provider.Settings$SettingNotFoundException) r1;

        virtualinvoke $r3.<android.provider.Settings$SettingNotFoundException: void printStackTrace()>();

        goto label3;

     label5:
        return 0;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label4;
    }

    public static boolean isGPSEnable(android.content.Context)
    {
        android.content.Context $r0;
        android.content.ContentResolver $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, "location_providers_allowed");

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GPS", $r2);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("gps");

        return $z0;

     label1:
        return 0;
    }

    public static boolean isPkgInstalled(android.content.pm.PackageManager, java.lang.String)
    {
        java.lang.Throwable r2;
        java.lang.String $r1;
        android.content.pm.PackageManager $r0;

        $r0 := @parameter0: android.content.pm.PackageManager;

        $r1 := @parameter1: java.lang.String;

     label1:
        virtualinvoke $r0.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, 0);

     label2:
        return 1;

     label3:
        r2 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static boolean isRotationScreen(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        android.content.ContentResolver $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "accelerometer_rotation", 0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isSystemApp(android.content.pm.ApplicationInfo)
    {
        int $i0;
        android.content.pm.ApplicationInfo $r0;

        $r0 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = $r0.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 128;

        if $i0 == 0 goto label1;

        return 0;

     label1:
        $i0 = $r0.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static boolean isWifiEnabled(android.content.Context)
    {
        android.content.Context $r0;
        android.net.wifi.WifiManager r2;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r2 = (android.net.wifi.WifiManager) $r1;

        $z0 = virtualinvoke r2.<android.net.wifi.WifiManager: boolean isWifiEnabled()>();

        return $z0;
    }

    public static void killProcess(android.app.ActivityManager, java.lang.String)
    {
        android.app.ActivityManager $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.app.ActivityManager;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke $r0.<android.app.ActivityManager: void restartPackage(java.lang.String)>($r1);

        return;
    }

    public static void setAirplaneMode(android.content.Context, boolean)
    {
        android.content.Context $r0;
        byte $b0;
        android.content.ContentResolver $r2;
        android.content.Intent r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        staticinvoke <android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r2, "airplane_mode_on", $b0);

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.AIRPLANE_MODE");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("state", $z0);

        virtualinvoke $r0.<android.content.Context: void sendBroadcast(android.content.Intent)>(r1);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }

    public static void setBrightnessMode(android.content.ContentResolver, int)
    {
        int $i0;
        android.net.Uri $r1;
        android.content.ContentResolver $r0;

        $r0 := @parameter0: android.content.ContentResolver;

        $i0 := @parameter1: int;

        staticinvoke <android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r0, "screen_brightness_mode", $i0);

        $r1 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("screen_brightness_mode");

        virtualinvoke $r0.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>($r1, null);

        return;
    }

    public static void setGPSState(android.content.Context, boolean)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.location.LocationManager r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        r2 = (android.location.LocationManager) $r1;

        virtualinvoke r2.<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>("gps", $z0);

        return;
    }

    public static void setMobileDataEnabled(android.net.ConnectivityManager, boolean)
    {
        java.lang.Throwable r7, r8, r9, r10, r11;
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException $r13;
        java.lang.Boolean $r6;
        java.lang.SecurityException $r12;
        java.lang.reflect.Method $r4;
        boolean $z0;
        android.net.ConnectivityManager $r0;
        java.lang.IllegalAccessException $r15;
        java.lang.Class[] $r3;
        java.lang.IllegalArgumentException $r14;
        java.lang.reflect.InvocationTargetException $r16;
        java.lang.Class $r1, $r2;

        $r0 := @parameter0: android.net.ConnectivityManager;

        $z0 := @parameter1: boolean;

     label01:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r3 = newarray (java.lang.Class)[1];

        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3[0] = $r1;

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setMobileDataEnabled", $r3);

     label04:
        $r5 = newarray (java.lang.Object)[1];

     label05:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

     label06:
        $r5[0] = $r6;

     label07:
        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r5);

     label08:
        return;

     label09:
        r7 := @caughtexception;

        $r12 = (java.lang.SecurityException) r7;

        virtualinvoke $r12.<java.lang.SecurityException: void printStackTrace()>();

        return;

     label10:
        r8 := @caughtexception;

        $r13 = (java.lang.NoSuchMethodException) r8;

        virtualinvoke $r13.<java.lang.NoSuchMethodException: void printStackTrace()>();

        return;

     label11:
        r9 := @caughtexception;

        $r14 = (java.lang.IllegalArgumentException) r9;

        virtualinvoke $r14.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return;

     label12:
        r10 := @caughtexception;

        $r15 = (java.lang.IllegalAccessException) r10;

        virtualinvoke $r15.<java.lang.IllegalAccessException: void printStackTrace()>();

        return;

     label13:
        r11 := @caughtexception;

        $r16 = (java.lang.reflect.InvocationTargetException) r11;

        virtualinvoke $r16.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        return;

        catch java.lang.SecurityException from label01 to label02 with label09;
        catch java.lang.SecurityException from label03 to label04 with label09;
        catch java.lang.SecurityException from label05 to label06 with label09;
        catch java.lang.SecurityException from label07 to label08 with label09;
        catch java.lang.NoSuchMethodException from label01 to label02 with label10;
        catch java.lang.NoSuchMethodException from label03 to label04 with label10;
        catch java.lang.NoSuchMethodException from label05 to label06 with label10;
        catch java.lang.NoSuchMethodException from label07 to label08 with label10;
        catch java.lang.IllegalArgumentException from label01 to label02 with label11;
        catch java.lang.IllegalArgumentException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label01 to label02 with label12;
        catch java.lang.IllegalAccessException from label03 to label04 with label12;
        catch java.lang.IllegalAccessException from label05 to label06 with label12;
        catch java.lang.IllegalAccessException from label07 to label08 with label12;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label13;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label13;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label13;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label13;
    }

    public static boolean setMobileDataEnabled(android.content.Context, boolean)
    {
        android.content.Context $r0;
        java.lang.Object[] $r7;
        java.lang.Class[] $r5;
        java.lang.Exception r1;
        android.telephony.TelephonyManager r3;
        java.lang.Object $r2;
        java.lang.Class $r4;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.lang.reflect.Method $r6;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r3 = (android.telephony.TelephonyManager) $r2;

     label01:
        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r5 = newarray (java.lang.Class)[0];

     label03:
        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getITelephony", $r5);

        virtualinvoke $r6.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label04:
        $r7 = newarray (java.lang.Object)[0];

     label05:
        $r2 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r7);

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

     label06:
        $r8 = new java.lang.StringBuilder;

        if $z0 == 0 goto label13;

        $r9 = "enable";

     label07:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DataConnectivity");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r5 = newarray (java.lang.Class)[0];

     label09:
        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r9, $r5);

     label10:
        $r7 = newarray (java.lang.Object)[0];

     label11:
        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r7);

     label12:
        return 1;

     label13:
        $r9 = "disable";

        goto label07;

     label14:
        r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("", "cannot fake telephony", r1);

        return 0;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Exception from label11 to label12 with label14;
    }

    public static void setRotationScreen(android.content.Context, boolean)
    {
        android.content.Context $r0;
        byte $b0;
        android.content.ContentResolver $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        staticinvoke <android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r1, "accelerometer_rotation", $b0);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }

    public static boolean setScreenBrightness(android.content.ContentResolver, int)
    {
        android.content.ContentResolver $r0;
        int $i0;
        android.net.Uri $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.ContentResolver;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("screen_brightness");

        $z0 = staticinvoke <android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r0, "screen_brightness", $i0);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>($r1, null);

     label1:
        return $z0;
    }

    public static void setScreenOffTimeOut(android.content.Context, int)
    {
        int $i0;
        android.content.Context $r0;
        android.content.ContentResolver $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r1, "screen_off_timeout", $i0);

        return;
    }

    public static void setWifiEnabled(android.content.Context, boolean)
    {
        android.content.Context $r0;
        android.net.wifi.WifiManager r2;
        java.lang.Object $r1;
        boolean $z0, $z1;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r2 = (android.net.wifi.WifiManager) $r1;

        $z1 = virtualinvoke r2.<android.net.wifi.WifiManager: boolean isWifiEnabled()>();

        if $z1 == $z0 goto label1;

        virtualinvoke r2.<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>($z0);

     label1:
        return;
    }

    public static void showInstalledAppDetails(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.Intent $r2;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: android.content.Intent getInstalledAppDetailsIntent(java.lang.String)>($r1);

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r2);

        return;
    }

    public static void showPowerUsageSummary(android.content.Context)
    {
        android.content.Context $r0;
        android.content.Intent r1;

        $r0 := @parameter0: android.content.Context;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW");

        virtualinvoke r1.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.settings", "com.android.settings.fuelgauge.PowerUsageSummary");

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>(r1);

        return;
    }

    public static void showRunningServiceDetails(android.content.Context, java.lang.Integer, java.lang.String, java.lang.Boolean)
    {
        android.content.Context $r0;
        int i0;
        java.lang.Boolean $r3;
        android.content.Intent r4;
        java.lang.String $r2;
        java.lang.Integer $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.Integer;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.Boolean;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        r4 = new android.content.Intent;

        specialinvoke r4.<android.content.Intent: void <init>()>();

        if i0 < 9 goto label2;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.MAIN");

        virtualinvoke r4.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        virtualinvoke r4.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.settings", "com.android.settings.RunningServices");

     label1:
        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>(r4);

        return;

     label2:
        virtualinvoke r4.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.MAIN");

        virtualinvoke r4.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        virtualinvoke r4.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.settings", "com.android.settings.RunningServices");

        goto label1;
    }

    public static boolean tryLaunchActivity(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        android.content.Intent $r3;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = staticinvoke <com.yang.longrubblishclear.util.YuShaoUtil: android.content.Intent getLaunchIntentForPackage(android.content.pm.PackageManager,java.lang.String)>($r2, $r1);

        if $r3 == null goto label1;

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r3);

        return 1;

     label1:
        return 0;
    }

    public static void unInstallPackage(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.net.Uri $r4;
        android.content.Intent r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DELETE");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("package:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r4);

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>(r2);

        return;
    }
}
