class com.nineoldandroids.animation.AnimatorSet$Node extends java.lang.Object implements java.lang.Cloneable
{
    public com.nineoldandroids.animation.Animator animation;
    public java.util.ArrayList dependencies;
    public boolean done;
    public java.util.ArrayList nodeDependencies;
    public java.util.ArrayList nodeDependents;
    public java.util.ArrayList tmpDependencies;

    public void <init>(com.nineoldandroids.animation.Animator)
    {
        com.nineoldandroids.animation.Animator $r1;
        com.nineoldandroids.animation.AnimatorSet$Node r0;

        r0 := @this: com.nineoldandroids.animation.AnimatorSet$Node;

        $r1 := @parameter0: com.nineoldandroids.animation.Animator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList dependencies> = null;

        r0.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList tmpDependencies> = null;

        r0.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList nodeDependencies> = null;

        r0.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList nodeDependents> = null;

        r0.<com.nineoldandroids.animation.AnimatorSet$Node: boolean done> = 0;

        r0.<com.nineoldandroids.animation.AnimatorSet$Node: com.nineoldandroids.animation.Animator animation> = $r1;

        return;
    }

    public void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency)
    {
        com.nineoldandroids.animation.AnimatorSet$Dependency $r1;
        com.nineoldandroids.animation.AnimatorSet$Node r0, $r3;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: com.nineoldandroids.animation.AnimatorSet$Node;

        $r1 := @parameter0: com.nineoldandroids.animation.AnimatorSet$Dependency;

        $r2 = r0.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList dependencies>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList dependencies> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList nodeDependencies> = $r2;

     label1:
        $r2 = r0.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList dependencies>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r2 = r0.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList nodeDependencies>;

        $r3 = $r1.<com.nineoldandroids.animation.AnimatorSet$Dependency: com.nineoldandroids.animation.AnimatorSet$Node node>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList nodeDependencies>;

        $r3 = $r1.<com.nineoldandroids.animation.AnimatorSet$Dependency: com.nineoldandroids.animation.AnimatorSet$Node node>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label2:
        $r3 = $r1.<com.nineoldandroids.animation.AnimatorSet$Dependency: com.nineoldandroids.animation.AnimatorSet$Node node>;

        $r2 = $r3.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList nodeDependents>;

        if $r2 != null goto label3;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList nodeDependents> = $r2;

     label3:
        $r2 = $r3.<com.nineoldandroids.animation.AnimatorSet$Node: java.util.ArrayList nodeDependents>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        return;
    }

    public com.nineoldandroids.animation.AnimatorSet$Node clone()
    {
        java.lang.Throwable $r4;
        java.lang.Object $r1;
        com.nineoldandroids.animation.Animator $r3;
        java.lang.AssertionError $r5;
        com.nineoldandroids.animation.AnimatorSet$Node r0, $r2;

        r0 := @this: com.nineoldandroids.animation.AnimatorSet$Node;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        $r2 = (com.nineoldandroids.animation.AnimatorSet$Node) $r1;

        $r3 = r0.<com.nineoldandroids.animation.AnimatorSet$Node: com.nineoldandroids.animation.Animator animation>;

     label3:
        $r3 = virtualinvoke $r3.<com.nineoldandroids.animation.Animator: com.nineoldandroids.animation.Animator clone()>();

     label4:
        $r2.<com.nineoldandroids.animation.AnimatorSet$Node: com.nineoldandroids.animation.Animator animation> = $r3;

        return $r2;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label5;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label5;
    }

    public volatile java.lang.Object clone()
    {
        com.nineoldandroids.animation.AnimatorSet$Node r0;

        r0 := @this: com.nineoldandroids.animation.AnimatorSet$Node;

        r0 = virtualinvoke r0.<com.nineoldandroids.animation.AnimatorSet$Node: com.nineoldandroids.animation.AnimatorSet$Node clone()>();

        return r0;
    }
}
