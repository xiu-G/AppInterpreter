public class org.dom4j.bean.BeanElement extends org.dom4j.tree.DefaultElement
{
    private static final org.dom4j.DocumentFactory DOCUMENT_FACTORY;
    static java.lang.Class class$org$dom4j$bean$BeanElement;
    private java.lang.Object bean;

    static void <clinit>()
    {
        org.dom4j.DocumentFactory $r0;

        $r0 = staticinvoke <org.dom4j.bean.BeanDocumentFactory: org.dom4j.DocumentFactory getInstance()>();

        <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY> = $r0;

        return;
    }

    public void <init>(java.lang.String, java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.Object $r2;
        org.dom4j.QName $r3;
        java.lang.String $r1;
        org.dom4j.DocumentFactory $r4;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r4 = <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        $r3 = virtualinvoke $r4.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String)>($r1);

        specialinvoke r0.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName,java.lang.Object)>($r3, $r2);

        return;
    }

    public void <init>(java.lang.String, org.dom4j.Namespace, java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.Namespace $r2;
        java.lang.Object $r3;
        org.dom4j.QName $r4;
        java.lang.String $r1;
        org.dom4j.DocumentFactory $r5;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.dom4j.Namespace;

        $r3 := @parameter2: java.lang.Object;

        $r5 = <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        $r4 = virtualinvoke $r5.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)>($r1, $r2);

        specialinvoke r0.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName,java.lang.Object)>($r4, $r3);

        return;
    }

    public void <init>(org.dom4j.QName)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.QName $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: org.dom4j.QName;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(org.dom4j.QName)>($r1);

        return;
    }

    public void <init>(org.dom4j.QName, java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.QName $r1;
        java.lang.Object $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.dom4j.tree.DefaultElement: void <init>(org.dom4j.QName)>($r1);

        r0.<org.dom4j.bean.BeanElement: java.lang.Object bean> = $r2;

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.String $r0;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.dom4j.bean.BeanElement");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke r1.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public org.dom4j.Element addAttribute(java.lang.String, java.lang.String)
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.String $r1, $r2;
        org.dom4j.Attribute $r3;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.Attribute attribute(java.lang.String)>($r1);

        if $r3 == null goto label1;

        interfaceinvoke $r3.<org.dom4j.Attribute: void setValue(java.lang.String)>($r2);

     label1:
        return r0;
    }

    public org.dom4j.Element addAttribute(org.dom4j.QName, java.lang.String)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.QName $r1;
        java.lang.String $r2;
        org.dom4j.Attribute $r3;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.Attribute attribute(org.dom4j.QName)>($r1);

        if $r3 == null goto label1;

        interfaceinvoke $r3.<org.dom4j.Attribute: void setValue(java.lang.String)>($r2);

     label1:
        return r0;
    }

    public org.dom4j.Attribute attribute(java.lang.String)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.bean.BeanAttributeList $r2;
        java.lang.String $r1;
        org.dom4j.Attribute $r3;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.bean.BeanAttributeList getBeanAttributeList()>();

        $r3 = virtualinvoke $r2.<org.dom4j.bean.BeanAttributeList: org.dom4j.Attribute attribute(java.lang.String)>($r1);

        return $r3;
    }

    public org.dom4j.Attribute attribute(org.dom4j.QName)
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.bean.BeanAttributeList $r2;
        org.dom4j.QName $r1;
        org.dom4j.Attribute $r3;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.bean.BeanAttributeList getBeanAttributeList()>();

        $r3 = virtualinvoke $r2.<org.dom4j.bean.BeanAttributeList: org.dom4j.Attribute attribute(org.dom4j.QName)>($r1);

        return $r3;
    }

    protected java.util.List createAttributeList()
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.bean.BeanAttributeList $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 = new org.dom4j.bean.BeanAttributeList;

        specialinvoke $r1.<org.dom4j.bean.BeanAttributeList: void <init>(org.dom4j.bean.BeanElement)>(r0);

        return $r1;
    }

    protected java.util.List createAttributeList(int)
    {
        int $i0;
        org.dom4j.bean.BeanElement r0;
        org.dom4j.bean.BeanAttributeList $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $i0 := @parameter0: int;

        $r1 = new org.dom4j.bean.BeanAttributeList;

        specialinvoke $r1.<org.dom4j.bean.BeanAttributeList: void <init>(org.dom4j.bean.BeanElement)>(r0);

        return $r1;
    }

    protected org.dom4j.bean.BeanAttributeList getBeanAttributeList()
    {
        org.dom4j.bean.BeanElement r0;
        java.util.List $r1;
        org.dom4j.bean.BeanAttributeList $r2;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 = virtualinvoke r0.<org.dom4j.bean.BeanElement: java.util.List attributeList()>();

        $r2 = (org.dom4j.bean.BeanAttributeList) $r1;

        return $r2;
    }

    public java.lang.Object getData()
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.Object r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 = r0.<org.dom4j.bean.BeanElement: java.lang.Object bean>;

        return r1;
    }

    protected org.dom4j.DocumentFactory getDocumentFactory()
    {
        org.dom4j.bean.BeanElement r0;
        org.dom4j.DocumentFactory r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        r1 = <org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        return r1;
    }

    public void setAttributes(java.util.List)
    {
        java.lang.UnsupportedOperationException $r2;
        org.dom4j.bean.BeanElement r0;
        java.util.List $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: java.util.List;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented yet.");

        throw $r2;
    }

    public void setAttributes(org.xml.sax.Attributes, org.dom4j.tree.NamespaceStack, boolean)
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.Exception r3;
        org.dom4j.DocumentFactory $r10;
        org.dom4j.tree.NamespaceStack $r2;
        org.dom4j.bean.BeanDocumentFactory $r11;
        org.xml.sax.Attributes $r1;
        int i0, $i1;
        java.lang.Class $r5, $r6;
        java.lang.Object $r8;
        java.lang.String $r4, $r9;
        java.lang.ClassLoader $r7;
        boolean $z0;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: org.xml.sax.Attributes;

        $r2 := @parameter1: org.dom4j.tree.NamespaceStack;

        $z0 := @parameter2: boolean;

        $r4 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("class");

        if $r4 == null goto label15;

        $r5 = <org.dom4j.bean.BeanElement: java.lang.Class class$org$dom4j$bean$BeanElement>;

        if $r5 != null goto label13;

     label01:
        $r5 = staticinvoke <org.dom4j.bean.BeanElement: java.lang.Class class$(java.lang.String)>("org.dom4j.bean.BeanElement");

     label02:
        $r6 = $r5;

        <org.dom4j.bean.BeanElement: java.lang.Class class$org$dom4j$bean$BeanElement> = $r5;

     label03:
        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r4, 1, $r7);

        $r8 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

        virtualinvoke r0.<org.dom4j.bean.BeanElement: void setData(java.lang.Object)>($r8);

     label04:
        i0 = 0;

     label05:
        $i1 = interfaceinvoke $r1.<org.xml.sax.Attributes: int getLength()>();

     label06:
        if i0 >= $i1 goto label16;

     label07:
        $r4 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

     label08:
        $r9 = "class";

     label09:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

     label10:
        if $z0 != 0 goto label12;

     label11:
        $r9 = interfaceinvoke $r1.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.Element addAttribute(java.lang.String,java.lang.String)>($r4, $r9);

     label12:
        i0 = i0 + 1;

        goto label05;

     label13:
        $r6 = <org.dom4j.bean.BeanElement: java.lang.Class class$org$dom4j$bean$BeanElement>;

        goto label03;

     label14:
        r3 := @caughtexception;

        $r10 = virtualinvoke r0.<org.dom4j.bean.BeanElement: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r11 = (org.dom4j.bean.BeanDocumentFactory) $r10;

        virtualinvoke $r11.<org.dom4j.bean.BeanDocumentFactory: void handleException(java.lang.Exception)>(r3);

        return;

     label15:
        specialinvoke r0.<org.dom4j.tree.DefaultElement: void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean)>($r1, $r2, 0);

     label16:
        return;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Exception from label11 to label12 with label14;
    }

    public void setData(java.lang.Object)
    {
        org.dom4j.bean.BeanElement r0;
        java.lang.Object $r1;

        r0 := @this: org.dom4j.bean.BeanElement;

        $r1 := @parameter0: java.lang.Object;

        r0.<org.dom4j.bean.BeanElement: java.lang.Object bean> = $r1;

        virtualinvoke r0.<org.dom4j.bean.BeanElement: void setAttributeList(java.util.List)>(null);

        return;
    }
}
