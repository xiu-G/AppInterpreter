public class twitter4j.TwitterStream extends twitter4j.TwitterBase implements java.io.Serializable
{
    private static final twitter4j.logging.Logger logger;
    private static final long serialVersionUID;
    private twitter4j.TwitterStream$StreamHandlingThread handler;
    private final twitter4j.http.HttpClientWrapper http;
    private int retryPerMinutes;
    private twitter4j.StatusListener statusListener;

    static void <clinit>()
    {
        twitter4j.logging.Logger $r0;

        <twitter4j.TwitterStream: long serialVersionUID> = -762817147320767897L;

        $r0 = staticinvoke <twitter4j.logging.Logger: twitter4j.logging.Logger getLogger()>();

        <twitter4j.TwitterStream: twitter4j.logging.Logger logger> = $r0;

        return;
    }

    public void <init>()
    {
        twitter4j.conf.Configuration $r2;
        twitter4j.http.HttpClientWrapper $r3;
        twitter4j.StreamingReadTimeoutConfiguration $r1;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $r2 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        specialinvoke r0.<twitter4j.TwitterBase: void <init>(twitter4j.conf.Configuration)>($r2);

        r0.<twitter4j.TwitterStream: twitter4j.TwitterStream$StreamHandlingThread handler> = null;

        r0.<twitter4j.TwitterStream: int retryPerMinutes> = 1;

        $r3 = new twitter4j.http.HttpClientWrapper;

        $r1 = new twitter4j.StreamingReadTimeoutConfiguration;

        $r2 = r0.<twitter4j.TwitterStream: twitter4j.conf.Configuration conf>;

        specialinvoke $r1.<twitter4j.StreamingReadTimeoutConfiguration: void <init>(twitter4j.conf.Configuration)>($r2);

        specialinvoke $r3.<twitter4j.http.HttpClientWrapper: void <init>(twitter4j.http.HttpClientWrapperConfiguration)>($r1);

        r0.<twitter4j.TwitterStream: twitter4j.http.HttpClientWrapper http> = $r3;

        virtualinvoke r0.<twitter4j.TwitterStream: void ensureBasicEnabled()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r2;
        twitter4j.http.HttpClientWrapper $r5;
        twitter4j.StreamingReadTimeoutConfiguration $r3;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        specialinvoke r0.<twitter4j.TwitterBase: void <init>(twitter4j.conf.Configuration,java.lang.String,java.lang.String)>($r4, $r1, $r2);

        r0.<twitter4j.TwitterStream: twitter4j.TwitterStream$StreamHandlingThread handler> = null;

        r0.<twitter4j.TwitterStream: int retryPerMinutes> = 1;

        $r5 = new twitter4j.http.HttpClientWrapper;

        $r3 = new twitter4j.StreamingReadTimeoutConfiguration;

        $r4 = r0.<twitter4j.TwitterStream: twitter4j.conf.Configuration conf>;

        specialinvoke $r3.<twitter4j.StreamingReadTimeoutConfiguration: void <init>(twitter4j.conf.Configuration)>($r4);

        specialinvoke $r5.<twitter4j.http.HttpClientWrapper: void <init>(twitter4j.http.HttpClientWrapperConfiguration)>($r3);

        r0.<twitter4j.TwitterStream: twitter4j.http.HttpClientWrapper http> = $r5;

        virtualinvoke r0.<twitter4j.TwitterStream: void ensureBasicEnabled()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, twitter4j.StatusListener)
    {
        twitter4j.conf.Configuration $r5;
        twitter4j.StatusListener $r3;
        java.lang.String $r1, $r2;
        twitter4j.http.HttpClientWrapper $r6;
        twitter4j.StreamingReadTimeoutConfiguration $r4;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.StatusListener;

        $r5 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        specialinvoke r0.<twitter4j.TwitterBase: void <init>(twitter4j.conf.Configuration,java.lang.String,java.lang.String)>($r5, $r1, $r2);

        r0.<twitter4j.TwitterStream: twitter4j.TwitterStream$StreamHandlingThread handler> = null;

        r0.<twitter4j.TwitterStream: int retryPerMinutes> = 1;

        r0.<twitter4j.TwitterStream: twitter4j.StatusListener statusListener> = $r3;

        $r6 = new twitter4j.http.HttpClientWrapper;

        $r4 = new twitter4j.StreamingReadTimeoutConfiguration;

        $r5 = r0.<twitter4j.TwitterStream: twitter4j.conf.Configuration conf>;

        specialinvoke $r4.<twitter4j.StreamingReadTimeoutConfiguration: void <init>(twitter4j.conf.Configuration)>($r5);

        specialinvoke $r6.<twitter4j.http.HttpClientWrapper: void <init>(twitter4j.http.HttpClientWrapperConfiguration)>($r4);

        r0.<twitter4j.TwitterStream: twitter4j.http.HttpClientWrapper http> = $r6;

        virtualinvoke r0.<twitter4j.TwitterStream: void ensureBasicEnabled()>();

        return;
    }

    void <init>(twitter4j.conf.Configuration, twitter4j.http.Authorization, twitter4j.StatusListener)
    {
        twitter4j.http.Authorization $r2;
        twitter4j.conf.Configuration $r1;
        twitter4j.StatusListener $r3;
        twitter4j.http.HttpClientWrapper $r5;
        twitter4j.StreamingReadTimeoutConfiguration $r4;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: twitter4j.http.Authorization;

        $r3 := @parameter2: twitter4j.StatusListener;

        specialinvoke r0.<twitter4j.TwitterBase: void <init>(twitter4j.conf.Configuration,twitter4j.http.Authorization)>($r1, $r2);

        r0.<twitter4j.TwitterStream: twitter4j.TwitterStream$StreamHandlingThread handler> = null;

        r0.<twitter4j.TwitterStream: int retryPerMinutes> = 1;

        $r5 = new twitter4j.http.HttpClientWrapper;

        $r4 = new twitter4j.StreamingReadTimeoutConfiguration;

        specialinvoke $r4.<twitter4j.StreamingReadTimeoutConfiguration: void <init>(twitter4j.conf.Configuration)>($r1);

        specialinvoke $r5.<twitter4j.http.HttpClientWrapper: void <init>(twitter4j.http.HttpClientWrapperConfiguration)>($r4);

        r0.<twitter4j.TwitterStream: twitter4j.http.HttpClientWrapper http> = $r5;

        r0.<twitter4j.TwitterStream: twitter4j.StatusListener statusListener> = $r3;

        virtualinvoke r0.<twitter4j.TwitterStream: void ensureBasicEnabled()>();

        return;
    }

    static int access$000(twitter4j.TwitterStream)
    {
        int i0;
        twitter4j.TwitterStream $r0;

        $r0 := @parameter0: twitter4j.TwitterStream;

        i0 = $r0.<twitter4j.TwitterStream: int retryPerMinutes>;

        return i0;
    }

    static twitter4j.StatusListener access$100(twitter4j.TwitterStream)
    {
        twitter4j.StatusListener r1;
        twitter4j.TwitterStream $r0;

        $r0 := @parameter0: twitter4j.TwitterStream;

        r1 = $r0.<twitter4j.TwitterStream: twitter4j.StatusListener statusListener>;

        return r1;
    }

    static twitter4j.logging.Logger access$200()
    {
        twitter4j.logging.Logger r0;

        r0 = <twitter4j.TwitterStream: twitter4j.logging.Logger logger>;

        return r0;
    }

    private void startHandler(twitter4j.TwitterStream$StreamHandlingThread) throws twitter4j.TwitterException
    {
        java.lang.Throwable $r4;
        java.lang.IllegalStateException $r3;
        twitter4j.TwitterStream$StreamHandlingThread $r1;
        twitter4j.StatusListener $r2;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $r1 := @parameter0: twitter4j.TwitterStream$StreamHandlingThread;

        entermonitor r0;

     label1:
        virtualinvoke r0.<twitter4j.TwitterStream: void cleanup()>();

        $r2 = r0.<twitter4j.TwitterStream: twitter4j.StatusListener statusListener>;

        if $r2 != null goto label3;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("StatusListener is not set.");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label3:
        r0.<twitter4j.TwitterStream: twitter4j.TwitterStream$StreamHandlingThread handler> = $r1;

        $r1 = r0.<twitter4j.TwitterStream: twitter4j.TwitterStream$StreamHandlingThread handler>;

        virtualinvoke $r1.<twitter4j.TwitterStream$StreamHandlingThread: void start()>();

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    private java.lang.String toFollowString(int[])
    {
        int[] $r1;
        java.lang.StringBuffer r2;
        int i0, i1, i2, $i3;
        java.lang.String $r3;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $r1 := @parameter0: int[];

        r2 = new java.lang.StringBuffer;

        i0 = lengthof $r1;

        i0 = i0 * 11;

        specialinvoke r2.<java.lang.StringBuffer: void <init>(int)>(i0);

        i1 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        i0 = $r1[i2];

        $i3 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        if $i3 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private java.lang.String toTrackString(java.lang.String[])
    {
        java.lang.StringBuffer r2;
        int i0, i1, $i2;
        java.lang.String[] $r1;
        java.lang.String r3;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $r1 := @parameter0: java.lang.String[];

        r2 = new java.lang.StringBuffer;

        i0 = lengthof $r1;

        i0 = i0 * 20;

        i0 = i0 * 4;

        specialinvoke r2.<java.lang.StringBuffer: void <init>(int)>(i0);

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = $r1[i1];

        $i2 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        if $i2 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        i1 = i1 + 1;

        goto label1;

     label3:
        r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return r3;
    }

    public void cleanup()
    {
        java.lang.Throwable $r2, $r3;
        twitter4j.TwitterStream$StreamHandlingThread $r1;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        entermonitor r0;

     label1:
        $r1 = r0.<twitter4j.TwitterStream: twitter4j.TwitterStream$StreamHandlingThread handler>;

     label2:
        if $r1 == null goto label5;

     label3:
        $r1 = r0.<twitter4j.TwitterStream: twitter4j.TwitterStream$StreamHandlingThread handler>;

     label4:
        virtualinvoke $r1.<twitter4j.TwitterStream$StreamHandlingThread: void close()>();

     label5:
        exitmonitor r0;

        return;

     label6:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label7:
        $r3 := @caughtexception;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.io.IOException from label4 to label5 with label7;
        catch java.lang.Throwable from label3 to label5 with label6;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        twitter4j.TwitterStream r0;
        boolean $z0;

        r0 := @this: twitter4j.TwitterStream;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<twitter4j.TwitterBase: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public void filter(int, int[], java.lang.String[]) throws twitter4j.TwitterException
    {
        java.lang.Object[] $r5;
        int[] $r1;
        int $i0;
        java.lang.String[] $r2;
        twitter4j.TwitterStream$4 $r3;
        java.lang.Integer $r4;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: int[];

        $r2 := @parameter2: java.lang.String[];

        $r3 = new twitter4j.TwitterStream$4;

        $r5 = newarray (java.lang.Object)[3];

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i0);

        $r5[0] = $r4;

        $r5[1] = $r1;

        $r5[2] = $r2;

        specialinvoke $r3.<twitter4j.TwitterStream$4: void <init>(twitter4j.TwitterStream,java.lang.Object[])>(r0, $r5);

        specialinvoke r0.<twitter4j.TwitterStream: void startHandler(twitter4j.TwitterStream$StreamHandlingThread)>($r3);

        return;
    }

    public void firehose(int) throws twitter4j.TwitterException
    {
        java.lang.Object[] $r3;
        int $i0;
        java.lang.Integer $r2;
        twitter4j.TwitterStream r0;
        twitter4j.TwitterStream$1 $r1;

        r0 := @this: twitter4j.TwitterStream;

        $i0 := @parameter0: int;

        $r1 = new twitter4j.TwitterStream$1;

        $r3 = newarray (java.lang.Object)[1];

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i0);

        $r3[0] = $r2;

        specialinvoke $r1.<twitter4j.TwitterStream$1: void <init>(twitter4j.TwitterStream,java.lang.Object[])>(r0, $r3);

        specialinvoke r0.<twitter4j.TwitterStream: void startHandler(twitter4j.TwitterStream$StreamHandlingThread)>($r1);

        return;
    }

    public twitter4j.http.Authorization getAuthorization()
    {
        twitter4j.http.Authorization $r1;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $r1 = specialinvoke r0.<twitter4j.TwitterBase: twitter4j.http.Authorization getAuthorization()>();

        return $r1;
    }

    public twitter4j.StatusStream getFilterStream(int, int[], java.lang.String[]) throws twitter4j.TwitterException
    {
        java.lang.Throwable r3;
        java.lang.Object[] $r11;
        java.lang.String[] $r2;
        twitter4j.http.HttpParameter $r14;
        java.util.ArrayList r4, $r13;
        int[] $r1;
        java.lang.StringBuffer $r8, $r15;
        twitter4j.http.HttpResponse $r12;
        int $i0;
        twitter4j.TwitterException $r17;
        java.lang.String $r6;
        twitter4j.TwitterStream r0;
        java.lang.Exception $r18;
        twitter4j.http.Authorization $r5;
        twitter4j.conf.Configuration $r9;
        twitter4j.http.HttpParameter[] $r10;
        twitter4j.StatusStream $r16;
        twitter4j.http.HttpClientWrapper $r7;

        r0 := @this: twitter4j.TwitterStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: int[];

        $r2 := @parameter2: java.lang.String[];

        virtualinvoke r0.<twitter4j.TwitterStream: void ensureBasicEnabled()>();

        $r13 = new java.util.ArrayList;

        r4 = $r13;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r14 = new twitter4j.http.HttpParameter;

        specialinvoke $r14.<twitter4j.http.HttpParameter: void <init>(java.lang.String,int)>("count", $i0);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r14);

        if $r1 == null goto label01;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label01;

        $r14 = new twitter4j.http.HttpParameter;

        $r6 = specialinvoke r0.<twitter4j.TwitterStream: java.lang.String toFollowString(int[])>($r1);

        specialinvoke $r14.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("follow", $r6);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r14);

     label01:
        if $r2 == null goto label02;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label02;

        $r14 = new twitter4j.http.HttpParameter;

        $r6 = specialinvoke r0.<twitter4j.TwitterStream: java.lang.String toTrackString(java.lang.String[])>($r2);

        specialinvoke $r14.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("track", $r6);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r14);

     label02:
        $r16 = new twitter4j.StatusStream;

        $r7 = r0.<twitter4j.TwitterStream: twitter4j.http.HttpClientWrapper http>;

        $r15 = new java.lang.StringBuffer;

        $r8 = $r15;

     label03:
        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

     label04:
        $r9 = r0.<twitter4j.TwitterStream: twitter4j.conf.Configuration conf>;

     label05:
        $r6 = interfaceinvoke $r9.<twitter4j.conf.Configuration: java.lang.String getStreamBaseURL()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/filter.json");

        $r6 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

     label06:
        $r10 = newarray (twitter4j.http.HttpParameter)[$i0];

     label07:
        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

     label08:
        $r10 = (twitter4j.http.HttpParameter[]) $r11;

        $r5 = r0.<twitter4j.TwitterStream: twitter4j.http.Authorization auth>;

     label09:
        $r12 = virtualinvoke $r7.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r10, $r5);

        specialinvoke $r16.<twitter4j.StatusStream: void <init>(twitter4j.http.HttpResponse)>($r12);

     label10:
        return $r16;

     label11:
        r3 := @caughtexception;

        $r17 = new twitter4j.TwitterException;

        $r18 = (java.lang.Exception) r3;

        specialinvoke $r17.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r18);

        throw $r17;

        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public twitter4j.StatusStream getFirehoseStream(int) throws twitter4j.TwitterException
    {
        java.lang.Throwable r1;
        twitter4j.http.HttpParameter $r11;
        java.lang.StringBuffer $r3, $r10;
        twitter4j.http.HttpResponse $r9;
        int $i0;
        twitter4j.TwitterException $r13;
        java.lang.String $r5, $r7;
        twitter4j.TwitterStream r0;
        java.lang.Exception $r14;
        twitter4j.http.Authorization $r8;
        twitter4j.conf.Configuration $r4;
        twitter4j.http.HttpParameter[] $r6;
        twitter4j.StatusStream $r12;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.TwitterStream;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.TwitterStream: void ensureBasicEnabled()>();

        $r12 = new twitter4j.StatusStream;

        $r2 = r0.<twitter4j.TwitterStream: twitter4j.http.HttpClientWrapper http>;

        $r10 = new java.lang.StringBuffer;

        $r3 = $r10;

     label1:
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

     label2:
        $r4 = r0.<twitter4j.TwitterStream: twitter4j.conf.Configuration conf>;

     label3:
        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getStreamBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/firehose.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r6 = newarray (twitter4j.http.HttpParameter)[1];

        $r11 = new twitter4j.http.HttpParameter;

     label5:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r11.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("count", $r7);

     label6:
        $r6[0] = $r11;

        $r8 = r0.<twitter4j.TwitterStream: twitter4j.http.Authorization auth>;

     label7:
        $r9 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r5, $r6, $r8);

        specialinvoke $r12.<twitter4j.StatusStream: void <init>(twitter4j.http.HttpResponse)>($r9);

     label8:
        return $r12;

     label9:
        r1 := @caughtexception;

        $r13 = new twitter4j.TwitterException;

        $r14 = (java.lang.Exception) r1;

        specialinvoke $r13.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r14);

        throw $r13;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label6 with label9;
        catch java.io.IOException from label7 to label8 with label9;
    }

    public twitter4j.StatusStream getRetweetStream() throws twitter4j.TwitterException
    {
        java.lang.Throwable r1;
        java.lang.Exception $r12;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4, $r9;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.StatusStream $r10;
        twitter4j.TwitterException $r11;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        virtualinvoke r0.<twitter4j.TwitterStream: void ensureAuthorizationEnabled()>();

        $r10 = new twitter4j.StatusStream;

        $r3 = r0.<twitter4j.TwitterStream: twitter4j.http.HttpClientWrapper http>;

        $r9 = new java.lang.StringBuffer;

        $r4 = $r9;

     label1:
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

     label2:
        $r5 = r0.<twitter4j.TwitterStream: twitter4j.conf.Configuration conf>;

     label3:
        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getStreamBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/retweet.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r7 = newarray (twitter4j.http.HttpParameter)[0];

        $r2 = r0.<twitter4j.TwitterStream: twitter4j.http.Authorization auth>;

     label5:
        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r2);

        specialinvoke $r10.<twitter4j.StatusStream: void <init>(twitter4j.http.HttpResponse)>($r8);

     label6:
        return $r10;

     label7:
        r1 := @caughtexception;

        $r11 = new twitter4j.TwitterException;

        $r12 = (java.lang.Exception) r1;

        specialinvoke $r11.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r12);

        throw $r11;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public twitter4j.StatusStream getSampleStream() throws twitter4j.TwitterException
    {
        java.lang.Throwable r1;
        java.lang.Exception $r11;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3, $r8;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.StatusStream $r9;
        twitter4j.TwitterException $r10;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        virtualinvoke r0.<twitter4j.TwitterStream: void ensureBasicEnabled()>();

        $r9 = new twitter4j.StatusStream;

        $r2 = r0.<twitter4j.TwitterStream: twitter4j.http.HttpClientWrapper http>;

        $r8 = new java.lang.StringBuffer;

        $r3 = $r8;

     label1:
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

     label2:
        $r4 = r0.<twitter4j.TwitterStream: twitter4j.conf.Configuration conf>;

     label3:
        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getStreamBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/sample.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r6 = r0.<twitter4j.TwitterStream: twitter4j.http.Authorization auth>;

     label5:
        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r9.<twitter4j.StatusStream: void <init>(twitter4j.http.HttpResponse)>($r7);

     label6:
        return $r9;

     label7:
        r1 := @caughtexception;

        $r10 = new twitter4j.TwitterException;

        $r11 = (java.lang.Exception) r1;

        specialinvoke $r10.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public int hashCode()
    {
        int $i0;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $i0 = specialinvoke r0.<twitter4j.TwitterBase: int hashCode()>();

        return $i0;
    }

    public boolean isBasicAuthEnabled()
    {
        twitter4j.TwitterStream r0;
        boolean $z0;

        r0 := @this: twitter4j.TwitterStream;

        $z0 = specialinvoke r0.<twitter4j.TwitterBase: boolean isBasicAuthEnabled()>();

        return $z0;
    }

    public void retweet() throws twitter4j.TwitterException
    {
        twitter4j.TwitterStream$2 $r1;
        java.lang.Object[] $r2;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        virtualinvoke r0.<twitter4j.TwitterStream: void ensureBasicEnabled()>();

        $r1 = new twitter4j.TwitterStream$2;

        $r2 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<twitter4j.TwitterStream$2: void <init>(twitter4j.TwitterStream,java.lang.Object[])>(r0, $r2);

        specialinvoke r0.<twitter4j.TwitterStream: void startHandler(twitter4j.TwitterStream$StreamHandlingThread)>($r1);

        return;
    }

    public void sample() throws twitter4j.TwitterException
    {
        twitter4j.TwitterStream$3 $r1;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        virtualinvoke r0.<twitter4j.TwitterStream: void ensureBasicEnabled()>();

        $r1 = new twitter4j.TwitterStream$3;

        specialinvoke $r1.<twitter4j.TwitterStream$3: void <init>(twitter4j.TwitterStream,java.lang.Object[])>(r0, null);

        specialinvoke r0.<twitter4j.TwitterStream: void startHandler(twitter4j.TwitterStream$StreamHandlingThread)>($r1);

        return;
    }

    public void setStatusListener(twitter4j.StatusListener)
    {
        twitter4j.StatusListener $r1;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $r1 := @parameter0: twitter4j.StatusListener;

        r0.<twitter4j.TwitterStream: twitter4j.StatusListener statusListener> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        twitter4j.TwitterStream r0;

        r0 := @this: twitter4j.TwitterStream;

        $r1 = specialinvoke r0.<twitter4j.TwitterBase: java.lang.String toString()>();

        return $r1;
    }
}
