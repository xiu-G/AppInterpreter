public class com.congong.app.android.doodle.utils.PictureUtil extends java.lang.Object
{
    public static final int MEDIA_TYPE_DOODLE;
    public static final int MEDIA_TYPE_PORTRAIT;

    public void <init>()
    {
        com.congong.app.android.doodle.utils.PictureUtil r0;

        r0 := @this: com.congong.app.android.doodle.utils.PictureUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String bitmapToString(java.lang.String)
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream r1;
        android.graphics.Bitmap $r2;
        android.graphics.Bitmap$CompressFormat $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.congong.app.android.doodle.utils.PictureUtil: android.graphics.Bitmap getSmallBitmap(java.lang.String)>($r0);

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke $r2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r3, 40, r1);

        $r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r4, 0);

        return $r0;
    }

    public static int calculateInSampleSize(android.graphics.BitmapFactory$Options, int, int)
    {
        int $i0, $i1, i2, i3;
        float $f0, $f1;
        android.graphics.BitmapFactory$Options $r0;

        $r0 := @parameter0: android.graphics.BitmapFactory$Options;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        i2 = $r0.<android.graphics.BitmapFactory$Options: int outHeight>;

        i3 = $r0.<android.graphics.BitmapFactory$Options: int outWidth>;

        if i2 > 800 goto label1;

        if i3 <= 480 goto label3;

     label1:
        $f0 = (float) i2;

        $f1 = (float) 800;

        $f0 = $f0 / $f1;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = (float) i3;

        $f1 = (float) 480;

        $f0 = $f0 / $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        if $i1 >= $i0 goto label2;

        return $i1;

     label2:
        return $i0;

     label3:
        return 1;
    }

    public static android.graphics.Bitmap comp(android.graphics.Bitmap)
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream r1, $r5;
        byte $b3;
        java.io.ByteArrayInputStream $r6;
        android.graphics.Bitmap $r0;
        int i0, i1, $i2, $i4;
        float $f0;
        android.graphics.Bitmap$CompressFormat $r3;
        android.graphics.BitmapFactory$Options r2, $r7;

        $r0 := @parameter0: android.graphics.Bitmap;

        $r5 = new java.io.ByteArrayOutputStream;

        r1 = $r5;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r3, 100, r1);

        $r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i2 = lengthof $r4;

        $i2 = $i2 / 1024;

        if $i2 <= 1024 goto label1;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void reset()>();

        $r3 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r3, 50, r1);

     label1:
        $r6 = new java.io.ByteArrayInputStream;

        $r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r7 = new android.graphics.BitmapFactory$Options;

        r2 = $r7;

        specialinvoke $r7.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r6, null, r2);

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        i1 = r2.<android.graphics.BitmapFactory$Options: int outWidth>;

        i0 = r2.<android.graphics.BitmapFactory$Options: int outHeight>;

        $i2 = 1;

        if i1 <= i0 goto label4;

        $f0 = (float) i1;

        $b3 = $f0 cmpl 480.0F;

        $i4 = (int) $b3;

        if $i4 <= 0 goto label4;

        $i2 = r2.<android.graphics.BitmapFactory$Options: int outWidth>;

        $f0 = (float) $i2;

        $f0 = $f0 / 480.0F;

        $i2 = (int) $f0;

     label2:
        if $i2 > 0 goto label3;

        $i2 = 1;

     label3:
        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i2;

        $r6 = new java.io.ByteArrayInputStream;

        $r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r0 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r6, null, r2);

        $r0 = staticinvoke <com.congong.app.android.doodle.utils.PictureUtil: android.graphics.Bitmap compressImage(android.graphics.Bitmap)>($r0);

        return $r0;

     label4:
        if i1 >= i0 goto label2;

        $f0 = (float) i0;

        $b3 = $f0 cmpl 800.0F;

        i0 = (int) $b3;

        if i0 <= 0 goto label2;

        $i2 = r2.<android.graphics.BitmapFactory$Options: int outHeight>;

        $f0 = (float) $i2;

        $f0 = $f0 / 800.0F;

        $i2 = (int) $f0;

        goto label2;
    }

    private static android.graphics.Bitmap compressImage(android.graphics.Bitmap)
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream r1, $r4;
        java.io.ByteArrayInputStream $r5;
        android.graphics.Bitmap $r0;
        int i0, $i1;
        android.graphics.Bitmap$CompressFormat $r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        $r4 = new java.io.ByteArrayOutputStream;

        r1 = $r4;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r2, 100, r1);

        i0 = 100;

     label1:
        $r3 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i1 = lengthof $r3;

        $i1 = $i1 / 1024;

        if $i1 > 100 goto label2;

        $r5 = new java.io.ByteArrayInputStream;

        $r3 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        $r0 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r5, null, null);

        return $r0;

     label2:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void reset()>();

        $r2 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r2, i0, r1);

        $i1 = -10;

        i0 = i0 + $i1;

        goto label1;
    }

    public static void deleteTempFile(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    public static void galleryAddPic(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.net.Uri $r4;
        android.content.Intent r3;
        java.lang.String $r1;
        java.io.File r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r3 = new android.content.Intent;

        specialinvoke r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MEDIA_SCANNER_SCAN_FILE");

        r2 = new java.io.File;

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r1);

        $r4 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r2);

        virtualinvoke r3.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r4);

        virtualinvoke $r0.<android.content.Context: void sendBroadcast(android.content.Intent)>(r3);

        return;
    }

    public static java.io.File getAlbumDir()
    {
        java.lang.String $r1;
        java.io.File r0, $r2;
        boolean $z0;

        r0 = new java.io.File;

        $r1 = <android.os.Environment: java.lang.String DIRECTORY_PICTURES>;

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>($r1);

        specialinvoke r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "waibo");

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<java.io.File: boolean mkdirs()>();

     label1:
        return r0;
    }

    public static java.lang.String getAlbumName()
    {
        return "waibo";
    }

    public static int getBitmapDegree(java.lang.String)
    {
        java.lang.Throwable r3;
        java.io.IOException $r6;
        android.media.ExifInterface r1, $r5;
        java.lang.Exception r4;
        short s0;
        int $i1;
        java.lang.String $r0, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        s0 = 0;

        if $r0 == null goto label03;

        $r2 = "";

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

     label02:
        if $z0 == 0 goto label04;

     label03:
        return 0;

     label04:
        $r5 = new android.media.ExifInterface;

        r1 = $r5;

     label05:
        specialinvoke $r5.<android.media.ExifInterface: void <init>(java.lang.String)>($r0);

        $i1 = virtualinvoke r1.<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

     label06:
        lookupswitch($i1)
        {
            case 3: goto label09;
            case 4: goto label07;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label07;
            case 8: goto label10;
            default: goto label07;
        };

     label07:
        return s0;

     label08:
        s0 = 90;

        goto label07;

     label09:
        s0 = 180;

        goto label07;

     label10:
        s0 = 270;

        goto label07;

     label11:
        r3 := @caughtexception;

        $r6 = (java.io.IOException) r3;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

        goto label07;

     label12:
        r4 := @caughtexception;

        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();

        goto label07;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
    }

    public static java.lang.String getPicUrl(long, java.lang.String, int)
    {
        int $i1;
        long $l0;
        java.lang.StringBuilder $r1;
        java.lang.String r0, $r2;
        boolean $z0;

        $l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("null");

        if $z0 == 0 goto label2;

     label1:
        return "";

     label2:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http");

        if $z0 != 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://www.congong.com/congcong/ccDownload.action?userid=");

        $r2 = <com.congong.app.android.doodle.DoodleApplication: java.lang.String USERID>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&fileName=");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&reqSrc=android&mediaType=");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r0;
    }

    public static android.graphics.Bitmap getSmallBitmap(java.lang.String)
    {
        android.graphics.Bitmap $r2;
        int $i0;
        java.lang.String $r0;
        android.graphics.BitmapFactory$Options r1;

        $r0 := @parameter0: java.lang.String;

        r1 = new android.graphics.BitmapFactory$Options;

        specialinvoke r1.<android.graphics.BitmapFactory$Options: void <init>()>();

        r1.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, r1);

        $i0 = staticinvoke <com.congong.app.android.doodle.utils.PictureUtil: int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int)>(r1, 480, 800);

        r1.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i0;

        r1.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, r1);

        return $r2;
    }

    public static int getWidth(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i3 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $i1 == 0 goto label2;

        if $i2 != 0 goto label1;

        return $i3;

     label1:
        $i0 = $i0 * $i1;

        $i0 = $i0 / $i2;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i0);

     label2:
        return $i3;
    }

    public static android.graphics.Bitmap rotateBitmapByDegree(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap $r0, r2, $r3;
        int $i0, $i1;
        float $f0;
        android.graphics.Matrix r1;
        java.lang.OutOfMemoryError $r4;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        r2 = null;

        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        $f0 = (float) $i0;

        virtualinvoke r1.<android.graphics.Matrix: boolean postRotate(float)>($f0);

     label1:
        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r0, 0, 0, $i0, $i1, r1, 1);

     label2:
        r2 = $r3;

     label3:
        if r2 != null goto label5;

        return $r0;

     label4:
        $r4 := @caughtexception;

        goto label3;

     label5:
        return r2;

        catch java.lang.OutOfMemoryError from label1 to label2 with label4;
    }

    private static java.io.File saveBitmap(android.graphics.Bitmap, int, java.lang.String)
    {
        java.lang.Throwable r7, r8;
        int $i0;
        android.graphics.Bitmap$CompressFormat $r6;
        java.lang.String $r1;
        boolean $z0;
        java.io.FileOutputStream r3, $r11;
        java.io.IOException $r13;
        java.io.File r2, $r4, $r10;
        java.io.FileNotFoundException $r12;
        android.graphics.Bitmap $r0;
        java.lang.StringBuilder $r5, $r9;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r10 = new java.io.File;

        r2 = $r10;

        $r4 = staticinvoke <com.congong.app.android.doodle.utils.PictureUtil: java.io.File getAlbumDir()>();

        $r9 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jpg");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r1);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label1:
        $r11 = new java.io.FileOutputStream;

        r3 = $r11;

     label2:
        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

     label3:
        $r6 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label4:
        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r6, $i0, r3);

        virtualinvoke r3.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label5:
        return r2;

     label6:
        r7 := @caughtexception;

        $r12 = (java.io.FileNotFoundException) r7;

        virtualinvoke $r12.<java.io.FileNotFoundException: void printStackTrace()>();

        return r2;

     label7:
        r8 := @caughtexception;

        $r13 = (java.io.IOException) r8;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        return r2;

        catch java.io.FileNotFoundException from label2 to label3 with label6;
        catch java.io.FileNotFoundException from label4 to label5 with label6;
        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label4 to label5 with label7;
    }

    public static java.io.File saveBitmap(android.graphics.Bitmap, long, int, java.lang.String)
    {
        long $l0, $l2;
        java.io.File $r3;
        byte $b3;
        android.graphics.Bitmap $r2;
        int $i1, $i4;
        java.lang.String $r0, $r4;
        android.graphics.BitmapFactory$Options r1, $r5;

        $r2 := @parameter0: android.graphics.Bitmap;

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        $r0 := @parameter3: java.lang.String;

        $r3 = staticinvoke <com.congong.app.android.doodle.utils.PictureUtil: java.io.File saveBitmap(android.graphics.Bitmap,int,java.lang.String)>($r2, $i1, $r0);

        $l2 = virtualinvoke $r3.<java.io.File: long length()>();

        $b3 = $l2 cmp $l0;

        $i4 = (int) $b3;

        if $i4 <= 0 goto label1;

        $r5 = new android.graphics.BitmapFactory$Options;

        r1 = $r5;

        specialinvoke $r5.<android.graphics.BitmapFactory$Options: void <init>()>();

        r1.<android.graphics.BitmapFactory$Options: int inSampleSize> = 2;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

        $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r4, r1);

        $i1 = $i1 / 2;

        $r3 = staticinvoke <com.congong.app.android.doodle.utils.PictureUtil: java.io.File saveBitmap(android.graphics.Bitmap,long,int,java.lang.String)>($r2, $l0, $i1, $r0);

     label1:
        return $r3;
    }

    public static void <clinit>()
    {
        <com.congong.app.android.doodle.utils.PictureUtil: int MEDIA_TYPE_PORTRAIT> = 1;

        <com.congong.app.android.doodle.utils.PictureUtil: int MEDIA_TYPE_DOODLE> = 0;

        return;
    }
}
