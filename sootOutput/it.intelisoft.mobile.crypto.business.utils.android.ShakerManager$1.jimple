class it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1 extends java.lang.Object implements android.hardware.SensorEventListener
{
    final it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0;

    void <init>(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)
    {
        it.intelisoft.mobile.crypto.business.utils.android.ShakerManager $r1;
        it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1 r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1;

        $r1 := @parameter0: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager;

        r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAccuracyChanged(android.hardware.Sensor, int)
    {
        int $i0;
        android.hardware.Sensor $r1;
        it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1 r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1;

        $r1 := @parameter0: android.hardware.Sensor;

        $i0 := @parameter1: int;

        return;
    }

    public void onSensorChanged(android.hardware.SensorEvent)
    {
        it.intelisoft.mobile.crypto.business.utils.android.ShakerManager $r4;
        java.lang.Double $r8, $r9;
        float[] $r3;
        long $l1, $l2, $l3;
        java.lang.Integer $r6, $r7;
        it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback $r5;
        android.hardware.SensorEvent $r1;
        byte $b4;
        int $i0;
        android.hardware.Sensor $r2;
        it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1 r0;
        double d0, $d1;
        float $f0, $f1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1;

        $r1 := @parameter0: android.hardware.SensorEvent;

        $r2 = $r1.<android.hardware.SensorEvent: android.hardware.Sensor sensor>;

        $i0 = virtualinvoke $r2.<android.hardware.Sensor: int getType()>();

        if $i0 != 1 goto label6;

        $r3 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r3[0];

        $r3 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f1 = $r3[0];

        $f0 = $f0 * $f1;

        $d1 = (double) $f0;

        $d1 = 0.0 + $d1;

        $r3 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r3[1];

        $r3 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f1 = $r3[1];

        $f0 = $f0 * $f1;

        d0 = (double) $f0;

        $d1 = $d1 + d0;

        $r3 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r3[2];

        $r3 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f1 = $r3[2];

        $f0 = $f0 * $f1;

        d0 = (double) $f0;

        $d1 = $d1 + d0;

        $r3 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r3[1];

        d0 = (double) $f0;

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback access$0(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        interfaceinvoke $r5.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback: void orientationChanged(double)>(d0);

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback access$0(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        if $r5 == null goto label6;

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $l2 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: long access$1(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $l2 = $l1 - $l2;

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $l3 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: long access$2(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $b4 = $l2 cmp $l3;

        $i0 = (int) $b4;

        if $i0 <= 0 goto label6;

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: void access$3(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager,long)>($r4, $l1);

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        d0 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: double access$4(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $b4 = d0 cmpg $d1;

        $i0 = (int) $b4;

        if $i0 >= 0 goto label3;

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: void access$5(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager,int)>($r4, 2);

     label1:
        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $i0 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: int access$6(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label2;
            case 2: goto label5;
            default: goto label2;
        };

     label2:
        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback access$0(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $i0 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: int access$7(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $i0 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: int access$8(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback: void shakingPercentage(java.lang.Integer,java.lang.Integer)>($r6, $r7);

        return;

     label3:
        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: void access$5(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager,int)>($r4, 0);

        goto label1;

     label4:
        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback access$0(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $d1 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: double access$4(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        interfaceinvoke $r5.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback: void shakingStatus(int,java.lang.Double,java.lang.Double,java.lang.Integer)>(0, null, $r8, null);

        goto label2;

     label5:
        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback access$0(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $d1 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: double access$4(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r4 = r0.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$1: it.intelisoft.mobile.crypto.business.utils.android.ShakerManager this$0>;

        $i0 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: int access$7(it.intelisoft.mobile.crypto.business.utils.android.ShakerManager)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback: void shakingStatus(int,java.lang.Double,java.lang.Double,java.lang.Integer)>(2, $r8, $r9, $r6);

        goto label2;

     label6:
        return;
    }
}
