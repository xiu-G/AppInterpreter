public class b.f.a.j.h extends java.lang.Object
{
    public java.util.List a;
    int b;
    int c;
    public boolean d;
    public final int[] e;
    java.util.List f;
    java.util.List g;
    java.util.HashSet h;
    java.util.HashSet i;
    java.util.List j;
    java.util.List k;

    void <init>(java.util.List)
    {
        java.util.HashSet $r4;
        java.util.List $r1;
        b.f.a.j.h r0;
        int[] $r2;
        int $i0;
        java.util.ArrayList $r3;

        r0 := @this: b.f.a.j.h;

        $r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = -1;

        r0.<b.f.a.j.h: int b> = $i0;

        $i0 = -1;

        r0.<b.f.a.j.h: int c> = $i0;

        r0.<b.f.a.j.h: boolean d> = 0;

        $r2 = newarray (int)[2];

        $i0 = -1;

        $r2[0] = $i0;

        $i0 = -1;

        $r2[1] = $i0;

        r0.<b.f.a.j.h: int[] e> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<b.f.a.j.h: java.util.List f> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<b.f.a.j.h: java.util.List g> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<b.f.a.j.h: java.util.HashSet h> = $r4;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<b.f.a.j.h: java.util.HashSet i> = $r4;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<b.f.a.j.h: java.util.List j> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<b.f.a.j.h: java.util.List k> = $r3;

        r0.<b.f.a.j.h: java.util.List a> = $r1;

        return;
    }

    void <init>(java.util.List, boolean)
    {
        java.util.HashSet $r4;
        java.util.List $r1;
        b.f.a.j.h r0;
        int[] $r2;
        int $i0;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: b.f.a.j.h;

        $r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = -1;

        r0.<b.f.a.j.h: int b> = $i0;

        $i0 = -1;

        r0.<b.f.a.j.h: int c> = $i0;

        r0.<b.f.a.j.h: boolean d> = 0;

        $r2 = newarray (int)[2];

        $i0 = -1;

        $r2[0] = $i0;

        $i0 = -1;

        $r2[1] = $i0;

        r0.<b.f.a.j.h: int[] e> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<b.f.a.j.h: java.util.List f> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<b.f.a.j.h: java.util.List g> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<b.f.a.j.h: java.util.HashSet h> = $r4;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<b.f.a.j.h: java.util.HashSet i> = $r4;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<b.f.a.j.h: java.util.List j> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<b.f.a.j.h: java.util.List k> = $r3;

        r0.<b.f.a.j.h: java.util.List a> = $r1;

        r0.<b.f.a.j.h: boolean d> = $z0;

        return;
    }

    private void e(java.util.ArrayList, b.f.a.j.f)
    {
        java.util.ArrayList $r1;
        b.f.a.j.e $r7;
        b.f.a.j.f $r2, $r5, $r8;
        b.f.a.j.h r0;
        b.f.a.j.j $r3;
        int $i0, $i1, $i2;
        b.f.a.j.f[] $r4;
        boolean $z0;
        b.f.a.j.e[] $r6;

        r0 := @this: b.f.a.j.h;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: b.f.a.j.f;

        $z0 = $r2.<b.f.a.j.f: boolean d0>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r2.<b.f.a.j.f: boolean d0> = 1;

        $z0 = virtualinvoke $r2.<b.f.a.j.f: boolean L()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $z0 = $r2 instanceof b.f.a.j.j;

        $i0 = 0;

        if $z0 == 0 goto label4;

        $r3 = (b.f.a.j.j) $r2;

        $i1 = $r3.<b.f.a.j.j: int l0>;

        $i2 = 0;

     label3:
        if $i2 >= $i1 goto label4;

        $r4 = $r3.<b.f.a.j.j: b.f.a.j.f[] k0>;

        $r5 = $r4[$i2];

        specialinvoke r0.<b.f.a.j.h: void e(java.util.ArrayList,b.f.a.j.f)>($r1, $r5);

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $r6 = $r2.<b.f.a.j.f: b.f.a.j.e[] A>;

        $i1 = lengthof $r6;

     label5:
        if $i0 >= $i1 goto label7;

        $r6 = $r2.<b.f.a.j.f: b.f.a.j.e[] A>;

        $r7 = $r6[$i0];

        $r7 = $r7.<b.f.a.j.e: b.f.a.j.e d>;

        if $r7 == null goto label6;

        $r5 = $r7.<b.f.a.j.e: b.f.a.j.f b>;

        if $r7 == null goto label6;

        $r8 = virtualinvoke $r2.<b.f.a.j.f: b.f.a.j.f u()>();

        if $r5 == $r8 goto label6;

        specialinvoke r0.<b.f.a.j.h: void e(java.util.ArrayList,b.f.a.j.f)>($r1, $r5);

     label6:
        $i0 = $i0 + 1;

        goto label5;

     label7:
        return;
    }

    private void f(b.f.a.j.f)
    {
        b.f.a.j.e$d $r4, $r5;
        b.f.a.j.e $r2;
        b.f.a.j.f $r1, $r3;
        b.f.a.j.h r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        r0 := @this: b.f.a.j.h;

        $r1 := @parameter0: b.f.a.j.f;

        $z0 = $r1.<b.f.a.j.f: boolean b0>;

        if $z0 == 0 goto label22;

        $z0 = virtualinvoke $r1.<b.f.a.j.f: boolean L()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e u>;

        $r2 = $r2.<b.f.a.j.e: b.f.a.j.e d>;

        $z0 = 0;

        if $r2 == null goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        if $z1 == 0 goto label04;

        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e u>;

        $r2 = $r2.<b.f.a.j.e: b.f.a.j.e d>;

        goto label05;

     label04:
        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e s>;

        $r2 = $r2.<b.f.a.j.e: b.f.a.j.e d>;

     label05:
        if $r2 == null goto label08;

        $r3 = $r2.<b.f.a.j.e: b.f.a.j.f b>;

        $z2 = $r3.<b.f.a.j.f: boolean c0>;

        if $z2 != 0 goto label06;

        specialinvoke r0.<b.f.a.j.h: void f(b.f.a.j.f)>($r3);

     label06:
        $r4 = $r2.<b.f.a.j.e: b.f.a.j.e$d c>;

        $r5 = <b.f.a.j.e$d: b.f.a.j.e$d e>;

        if $r4 != $r5 goto label07;

        $r3 = $r2.<b.f.a.j.e: b.f.a.j.f b>;

        $i0 = $r3.<b.f.a.j.f: int I>;

        $i1 = virtualinvoke $r3.<b.f.a.j.f: int D()>();

        $i0 = $i0 + $i1;

        goto label09;

     label07:
        $r5 = <b.f.a.j.e$d: b.f.a.j.e$d c>;

        if $r4 != $r5 goto label08;

        $r3 = $r2.<b.f.a.j.e: b.f.a.j.f b>;

        $i0 = $r3.<b.f.a.j.f: int I>;

        goto label09;

     label08:
        $i0 = 0;

     label09:
        if $z1 == 0 goto label10;

        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e u>;

        $i1 = virtualinvoke $r2.<b.f.a.j.e: int d()>();

        $i0 = $i0 - $i1;

        goto label11;

     label10:
        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e s>;

        $i1 = virtualinvoke $r2.<b.f.a.j.e: int d()>();

        $i2 = virtualinvoke $r1.<b.f.a.j.f: int D()>();

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

     label11:
        $i1 = virtualinvoke $r1.<b.f.a.j.f: int D()>();

        $i1 = $i0 - $i1;

        virtualinvoke $r1.<b.f.a.j.f: void f0(int,int)>($i1, $i0);

        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e w>;

        $r2 = $r2.<b.f.a.j.e: b.f.a.j.e d>;

        if $r2 == null goto label13;

        $r3 = $r2.<b.f.a.j.e: b.f.a.j.f b>;

        $z0 = $r3.<b.f.a.j.f: boolean c0>;

        if $z0 != 0 goto label12;

        specialinvoke r0.<b.f.a.j.h: void f(b.f.a.j.f)>($r3);

     label12:
        $r3 = $r2.<b.f.a.j.e: b.f.a.j.f b>;

        $i0 = $r3.<b.f.a.j.f: int J>;

        $i1 = $r3.<b.f.a.j.f: int Q>;

        $i0 = $i0 + $i1;

        $i1 = $r1.<b.f.a.j.f: int Q>;

        $i0 = $i0 - $i1;

        $i1 = $r1.<b.f.a.j.f: int F>;

        $i1 = $i1 + $i0;

        virtualinvoke $r1.<b.f.a.j.f: void t0(int,int)>($i0, $i1);

        $r1.<b.f.a.j.f: boolean c0> = 1;

        return;

     label13:
        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e v>;

        $r2 = $r2.<b.f.a.j.e: b.f.a.j.e d>;

        if $r2 == null goto label14;

        $z0 = 1;

     label14:
        if $z0 == 0 goto label15;

        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e v>;

        $r2 = $r2.<b.f.a.j.e: b.f.a.j.e d>;

        goto label16;

     label15:
        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e t>;

        $r2 = $r2.<b.f.a.j.e: b.f.a.j.e d>;

     label16:
        if $r2 == null goto label19;

        $r3 = $r2.<b.f.a.j.e: b.f.a.j.f b>;

        $z1 = $r3.<b.f.a.j.f: boolean c0>;

        if $z1 != 0 goto label17;

        specialinvoke r0.<b.f.a.j.h: void f(b.f.a.j.f)>($r3);

     label17:
        $r4 = $r2.<b.f.a.j.e: b.f.a.j.e$d c>;

        $r5 = <b.f.a.j.e$d: b.f.a.j.e$d f>;

        if $r4 != $r5 goto label18;

        $r3 = $r2.<b.f.a.j.e: b.f.a.j.f b>;

        $i0 = $r3.<b.f.a.j.f: int J>;

        $i1 = virtualinvoke $r3.<b.f.a.j.f: int r()>();

        $i0 = $i0 + $i1;

        goto label19;

     label18:
        $r5 = <b.f.a.j.e$d: b.f.a.j.e$d d>;

        if $r4 != $r5 goto label19;

        $r3 = $r2.<b.f.a.j.e: b.f.a.j.f b>;

        $i0 = $r3.<b.f.a.j.f: int J>;

     label19:
        if $z0 == 0 goto label20;

        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e v>;

        $i1 = virtualinvoke $r2.<b.f.a.j.e: int d()>();

        $i0 = $i0 - $i1;

        goto label21;

     label20:
        $r2 = $r1.<b.f.a.j.f: b.f.a.j.e t>;

        $i1 = virtualinvoke $r2.<b.f.a.j.e: int d()>();

        $i2 = virtualinvoke $r1.<b.f.a.j.f: int r()>();

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

     label21:
        $i1 = virtualinvoke $r1.<b.f.a.j.f: int r()>();

        $i1 = $i0 - $i1;

        virtualinvoke $r1.<b.f.a.j.f: void t0(int,int)>($i1, $i0);

        $r1.<b.f.a.j.f: boolean c0> = 1;

     label22:
        return;
    }

    void a(b.f.a.j.f, int)
    {
        java.util.HashSet $r2;
        b.f.a.j.f $r1;
        b.f.a.j.h r0;
        int $i0;

        r0 := @this: b.f.a.j.h;

        $r1 := @parameter0: b.f.a.j.f;

        $i0 := @parameter1: int;

        if $i0 != 0 goto label1;

        $r2 = r0.<b.f.a.j.h: java.util.HashSet h>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

        return;

     label1:
        if $i0 != 1 goto label2;

        $r2 = r0.<b.f.a.j.h: java.util.HashSet i>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

     label2:
        return;
    }

    public java.util.List b(int)
    {
        int $i0;
        java.util.List r1;
        b.f.a.j.h r0;

        r0 := @this: b.f.a.j.h;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        r1 = r0.<b.f.a.j.h: java.util.List f>;

        return r1;

     label1:
        if $i0 != 1 goto label2;

        r1 = r0.<b.f.a.j.h: java.util.List g>;

        return r1;

     label2:
        return null;
    }

    java.util.Set c(int)
    {
        int $i0;
        java.util.HashSet r1;
        b.f.a.j.h r0;

        r0 := @this: b.f.a.j.h;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        r1 = r0.<b.f.a.j.h: java.util.HashSet h>;

        return r1;

     label1:
        if $i0 != 1 goto label2;

        r1 = r0.<b.f.a.j.h: java.util.HashSet i>;

        return r1;

     label2:
        return null;
    }

    java.util.List d()
    {
        java.util.ArrayList $r4;
        b.f.a.j.f $r3;
        java.util.List $r1, $r5;
        b.f.a.j.h r0;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: b.f.a.j.h;

        $r1 = r0.<b.f.a.j.h: java.util.List j>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<b.f.a.j.h: java.util.List j>;

        return $r1;

     label1:
        $r1 = r0.<b.f.a.j.h: java.util.List a>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r1 = r0.<b.f.a.j.h: java.util.List a>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (b.f.a.j.f) $r2;

        $z0 = $r3.<b.f.a.j.f: boolean b0>;

        if $z0 != 0 goto label3;

        $r1 = r0.<b.f.a.j.h: java.util.List j>;

        $r4 = (java.util.ArrayList) $r1;

        specialinvoke r0.<b.f.a.j.h: void e(java.util.ArrayList,b.f.a.j.f)>($r4, $r3);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r1 = r0.<b.f.a.j.h: java.util.List k>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r1 = r0.<b.f.a.j.h: java.util.List k>;

        $r5 = r0.<b.f.a.j.h: java.util.List a>;

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r1 = r0.<b.f.a.j.h: java.util.List k>;

        $r5 = r0.<b.f.a.j.h: java.util.List j>;

        interfaceinvoke $r1.<java.util.List: boolean removeAll(java.util.Collection)>($r5);

        $r1 = r0.<b.f.a.j.h: java.util.List j>;

        return $r1;
    }

    void g()
    {
        b.f.a.j.f $r3;
        java.util.List $r1;
        b.f.a.j.h r0;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @this: b.f.a.j.h;

        $r1 = r0.<b.f.a.j.h: java.util.List k>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = r0.<b.f.a.j.h: java.util.List k>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (b.f.a.j.f) $r2;

        specialinvoke r0.<b.f.a.j.h: void f(b.f.a.j.f)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
}
