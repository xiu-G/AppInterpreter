final class twitter4j.internal.logging.JULLogger extends twitter4j.internal.logging.Logger
{
    private final java.util.logging.Logger LOGGER;

    void <init>(java.util.logging.Logger)
    {
        java.util.logging.Logger $r1;
        twitter4j.internal.logging.JULLogger r0;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r1 := @parameter0: java.util.logging.Logger;

        specialinvoke r0.<twitter4j.internal.logging.Logger: void <init>()>();

        r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER> = $r1;

        return;
    }

    public final void debug(java.lang.String)
    {
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        twitter4j.internal.logging.JULLogger r0;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        virtualinvoke $r2.<java.util.logging.Logger: void fine(java.lang.String)>($r1);

        return;
    }

    public final void debug(java.lang.String, java.lang.String)
    {
        twitter4j.internal.logging.JULLogger r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2;
        java.util.logging.Logger $r3;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void fine(java.lang.String)>($r1);

        return;
    }

    public final void error(java.lang.String)
    {
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        twitter4j.internal.logging.JULLogger r0;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        virtualinvoke $r2.<java.util.logging.Logger: void severe(java.lang.String)>($r1);

        return;
    }

    public final void error(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        twitter4j.internal.logging.JULLogger r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        java.util.logging.Logger $r3;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("Got an exception while running a task:");

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void severe(java.lang.String)>($r1);

        return;
    }

    public final void info(java.lang.String)
    {
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        twitter4j.internal.logging.JULLogger r0;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        virtualinvoke $r2.<java.util.logging.Logger: void info(java.lang.String)>($r1);

        return;
    }

    public final void info(java.lang.String, java.lang.String)
    {
        twitter4j.internal.logging.JULLogger r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2;
        java.util.logging.Logger $r3;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void info(java.lang.String)>($r1);

        return;
    }

    public final boolean isDebugEnabled()
    {
        twitter4j.internal.logging.JULLogger r0;
        java.util.logging.Logger $r2;
        java.util.logging.Level $r1;
        boolean $z0;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r2 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        $r1 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);

        return $z0;
    }

    public final boolean isErrorEnabled()
    {
        twitter4j.internal.logging.JULLogger r0;
        java.util.logging.Logger $r2;
        java.util.logging.Level $r1;
        boolean $z0;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r2 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        $r1 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);

        return $z0;
    }

    public final boolean isInfoEnabled()
    {
        twitter4j.internal.logging.JULLogger r0;
        java.util.logging.Logger $r2;
        java.util.logging.Level $r1;
        boolean $z0;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r2 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        $r1 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);

        return $z0;
    }

    public final boolean isWarnEnabled()
    {
        twitter4j.internal.logging.JULLogger r0;
        java.util.logging.Logger $r2;
        java.util.logging.Level $r1;
        boolean $z0;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r2 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        $r1 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);

        return $z0;
    }

    public final void warn(java.lang.String)
    {
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        twitter4j.internal.logging.JULLogger r0;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        virtualinvoke $r2.<java.util.logging.Logger: void warning(java.lang.String)>($r1);

        return;
    }

    public final void warn(java.lang.String, java.lang.String)
    {
        twitter4j.internal.logging.JULLogger r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2;
        java.util.logging.Logger $r3;

        r0 := @this: twitter4j.internal.logging.JULLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.internal.logging.JULLogger: java.util.logging.Logger LOGGER>;

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void warning(java.lang.String)>($r1);

        return;
    }
}
