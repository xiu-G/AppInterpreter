class net.youmi.android.dk extends java.lang.Object implements java.lang.Runnable
{
    final net.youmi.android.dj a;

    void <init>(net.youmi.android.dj)
    {
        net.youmi.android.dk r0;
        net.youmi.android.dj $r1;

        r0 := @this: net.youmi.android.dk;

        $r1 := @parameter0: net.youmi.android.dj;

        r0.<net.youmi.android.dk: net.youmi.android.dj a> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        net.youmi.android.dk r0;
        net.youmi.android.dj $r3;
        long $l1, $l3, $l6;
        byte $b4;
        int $i0, $i2, $i5;
        java.lang.String $r4;
        java.util.LinkedList $r1, $r12;
        boolean $z0;
        java.io.File $r2, $r10;
        java.lang.Exception $r7, $r8, $r9, $r11;
        java.lang.Object $r6;
        java.io.File[] $r5;

        r0 := @this: net.youmi.android.dk;

        $r10 = new java.io.File;

        $r2 = $r10;

     label01:
        $r3 = r0.<net.youmi.android.dk: net.youmi.android.dj a>;

        $r4 = staticinvoke <net.youmi.android.dj: java.lang.String a(net.youmi.android.dj)>($r3);

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label02:
        if $z0 != 0 goto label05;

     label03:
        $z0 = virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

     label04:
        if $z0 != 0 goto label05;

        return;

     label05:
        $r5 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

     label06:
        if $r5 == null goto label48;

        $r12 = new java.util.LinkedList;

        $r1 = $r12;

     label07:
        specialinvoke $r12.<java.util.LinkedList: void <init>()>();

     label08:
        $i0 = 0;

        $l1 = 0L;

     label09:
        $i2 = lengthof $r5;

     label10:
        if $i0 < $i2 goto label21;

     label11:
        $r3 = r0.<net.youmi.android.dk: net.youmi.android.dj a>;

        $l3 = staticinvoke <net.youmi.android.dj: long b(net.youmi.android.dj)>($r3);

     label12:
        $b4 = $l1 cmp $l3;

        $i0 = (int) $b4;

        if $i0 <= 0 goto label48;

     label13:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

     label14:
        if $i0 <= 0 goto label48;

     label15:
        $r6 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r2 = (java.io.File) $r6;

        $l3 = virtualinvoke $r2.<java.io.File: long length()>();

     label16:
        $l1 = $l1 - $l3;

     label17:
        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(0);

     label18:
        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label19:
        goto label11;

     label20:
        $r7 := @caughtexception;

        goto label11;

     label21:
        $r2 = $r5[$i0];

        $r3 = r0.<net.youmi.android.dk: net.youmi.android.dj a>;

        $z0 = staticinvoke <net.youmi.android.dj: boolean a(net.youmi.android.dj,java.io.File)>($r3, $r2);

     label22:
        if $z0 == 0 goto label27;

     label23:
        $z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

     label24:
        if $z0 == 0 goto label27;

     label25:
        $i0 = $i0 + 1;

        goto label09;

     label26:
        $r8 := @caughtexception;

     label27:
        $r3 = r0.<net.youmi.android.dk: net.youmi.android.dj a>;

        $l3 = staticinvoke <net.youmi.android.dj: long b(net.youmi.android.dj)>($r3);

     label28:
        $b4 = $l3 cmp -1L;

        if $b4 == 0 goto label37;

     label29:
        $r3 = r0.<net.youmi.android.dk: net.youmi.android.dj a>;

        $l3 = staticinvoke <net.youmi.android.dj: long b(net.youmi.android.dj)>($r3);

     label30:
        $b4 = $l3 cmp 0L;

        $i2 = (int) $b4;

        if $i2 <= 0 goto label37;

     label31:
        $l3 = virtualinvoke $r2.<java.io.File: long length()>();

     label32:
        $l1 = $l1 + $l3;

     label33:
        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

     label34:
        if $i2 <= 0 goto label45;

        $i2 = 0;

     label35:
        $i5 = interfaceinvoke $r1.<java.util.List: int size()>();

     label36:
        if $i2 < $i5 goto label40;

     label37:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label38:
        goto label25;

     label39:
        $r9 := @caughtexception;

        goto label25;

     label40:
        $r6 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r10 = (java.io.File) $r6;

        $l3 = virtualinvoke $r2.<java.io.File: long lastModified()>();

        $l6 = virtualinvoke $r10.<java.io.File: long lastModified()>();

     label41:
        $b4 = $l3 cmp $l6;

        $i5 = (int) $b4;

        if $i5 > 0 goto label44;

     label42:
        interfaceinvoke $r1.<java.util.List: void add(int,java.lang.Object)>($i2, $r2);

     label43:
        goto label37;

     label44:
        $i2 = $i2 + 1;

        goto label35;

     label45:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

     label46:
        goto label37;

     label47:
        $r11 := @caughtexception;

     label48:
        return;

        catch java.lang.Exception from label01 to label02 with label47;
        catch java.lang.Exception from label03 to label04 with label47;
        catch java.lang.Exception from label05 to label06 with label47;
        catch java.lang.Exception from label07 to label08 with label47;
        catch java.lang.Exception from label09 to label10 with label47;
        catch java.lang.Exception from label11 to label12 with label47;
        catch java.lang.Exception from label13 to label14 with label47;
        catch java.lang.Exception from label15 to label16 with label47;
        catch java.lang.Exception from label17 to label18 with label47;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Exception from label21 to label22 with label47;
        catch java.lang.Exception from label23 to label24 with label26;
        catch java.lang.Exception from label27 to label28 with label47;
        catch java.lang.Exception from label29 to label30 with label47;
        catch java.lang.Exception from label31 to label32 with label47;
        catch java.lang.Exception from label33 to label34 with label47;
        catch java.lang.Exception from label35 to label36 with label47;
        catch java.lang.Exception from label37 to label38 with label39;
        catch java.lang.Exception from label40 to label41 with label47;
        catch java.lang.Exception from label42 to label43 with label47;
        catch java.lang.Exception from label45 to label46 with label47;
    }
}
