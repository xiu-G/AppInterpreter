class com.exchange.View.BasePanel extends android.widget.LinearLayout
{
    public static final int BOTTOM;
    public static final int LEFT;
    public static final int RIGHT;
    private static final java.lang.String TAG;
    public static final int TOP;
    android.view.animation.TranslateAnimation animation;
    private android.view.animation.Animation$AnimationListener animationListener;
    public android.view.View blurLayout;
    public boolean isBanner;
    public boolean mAnimating;
    public android.graphics.drawable.Drawable mClosedHandle;
    public android.view.View mContent;
    private int mContentHeight;
    private int mContentWidth;
    private int mDuration;
    private android.view.GestureDetector mGestureDetector;
    private com.exchange.View.BasePanel$PanelOnGestureListener mGestureListener;
    public android.view.View mHandle;
    private android.view.animation.Interpolator mInterpolator;
    public boolean mIsShrinking;
    private boolean mLinearFlying;
    public android.graphics.drawable.Drawable mOpenedHandle;
    private int mOrientation;
    private int mPosition;
    private com.exchange.View.BasePanel$State mState;
    private float mTrackX;
    private float mTrackY;
    private float mVelocity;
    public boolean opened;
    private com.exchange.View.BasePanel$OnPanelListener panelListener;
    java.lang.Runnable startAnimation;
    public int startX;
    public int startY;
    android.view.View$OnTouchListener touchListener;

    public void <init>(android.content.Context, int, boolean)
    {
        android.content.Context $r1;
        android.view.GestureDetector $r4, $r9;
        com.exchange.View.BasePanel$PanelOnGestureListener $r2, $r8;
        com.exchange.View.BasePanel$State $r3;
        com.exchange.View.BasePanel r0;
        int $i0;
        com.exchange.View.BasePanel$1 $r5;
        com.exchange.View.BasePanel$2 $r6;
        com.exchange.View.BasePanel$3 $r7;
        boolean $z0;

        r0 := @this: com.exchange.View.BasePanel;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context)>($r1);

        r0.<com.exchange.View.BasePanel: boolean mAnimating> = 0;

        r0.<com.exchange.View.BasePanel: int startX> = -1;

        r0.<com.exchange.View.BasePanel: int startY> = -1;

        r0.<com.exchange.View.BasePanel: boolean isBanner> = 0;

        r0.<com.exchange.View.BasePanel: boolean opened> = 0;

        $r5 = new com.exchange.View.BasePanel$1;

        specialinvoke $r5.<com.exchange.View.BasePanel$1: void <init>(com.exchange.View.BasePanel)>(r0);

        r0.<com.exchange.View.BasePanel: android.view.View$OnTouchListener touchListener> = $r5;

        $r6 = new com.exchange.View.BasePanel$2;

        specialinvoke $r6.<com.exchange.View.BasePanel$2: void <init>(com.exchange.View.BasePanel)>(r0);

        r0.<com.exchange.View.BasePanel: java.lang.Runnable startAnimation> = $r6;

        $r7 = new com.exchange.View.BasePanel$3;

        specialinvoke $r7.<com.exchange.View.BasePanel$3: void <init>(com.exchange.View.BasePanel)>(r0);

        r0.<com.exchange.View.BasePanel: android.view.animation.Animation$AnimationListener animationListener> = $r7;

        r0.<com.exchange.View.BasePanel: boolean isBanner> = $z0;

        r0.<com.exchange.View.BasePanel: int mDuration> = 1000;

        virtualinvoke r0.<com.exchange.View.BasePanel: void setPosition(int,android.content.Context)>($i0, $r1);

        r0.<com.exchange.View.BasePanel: boolean mLinearFlying> = 0;

        $r3 = <com.exchange.View.BasePanel$State: com.exchange.View.BasePanel$State READY>;

        r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$State mState> = $r3;

        $r8 = new com.exchange.View.BasePanel$PanelOnGestureListener;

        specialinvoke $r8.<com.exchange.View.BasePanel$PanelOnGestureListener: void <init>(com.exchange.View.BasePanel)>(r0);

        r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$PanelOnGestureListener mGestureListener> = $r8;

        $r9 = new android.view.GestureDetector;

        $r2 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$PanelOnGestureListener mGestureListener>;

        specialinvoke $r9.<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener)>($r2);

        r0.<com.exchange.View.BasePanel: android.view.GestureDetector mGestureDetector> = $r9;

        $r4 = r0.<com.exchange.View.BasePanel: android.view.GestureDetector mGestureDetector>;

        virtualinvoke $r4.<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>(0);

        return;
    }

    static com.exchange.View.BasePanel$State access$0(com.exchange.View.BasePanel)
    {
        com.exchange.View.BasePanel$State r1;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        r1 = $r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$State mState>;

        return r1;
    }

    static int access$1(com.exchange.View.BasePanel)
    {
        int i0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        i0 = $r0.<com.exchange.View.BasePanel: int mOrientation>;

        return i0;
    }

    static float access$10(com.exchange.View.BasePanel)
    {
        float f0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        f0 = $r0.<com.exchange.View.BasePanel: float mTrackX>;

        return f0;
    }

    static int access$11(com.exchange.View.BasePanel)
    {
        int i0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        i0 = $r0.<com.exchange.View.BasePanel: int mDuration>;

        return i0;
    }

    static void access$12(com.exchange.View.BasePanel, float)
    {
        float $f0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        $f0 := @parameter1: float;

        $r0.<com.exchange.View.BasePanel: float mTrackY> = $f0;

        return;
    }

    static void access$13(com.exchange.View.BasePanel, float)
    {
        float $f0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        $f0 := @parameter1: float;

        $r0.<com.exchange.View.BasePanel: float mTrackX> = $f0;

        return;
    }

    static void access$14(com.exchange.View.BasePanel, com.exchange.View.BasePanel$State)
    {
        com.exchange.View.BasePanel$State $r1;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        $r1 := @parameter1: com.exchange.View.BasePanel$State;

        $r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$State mState> = $r1;

        return;
    }

    static void access$15(com.exchange.View.BasePanel)
    {
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        specialinvoke $r0.<com.exchange.View.BasePanel: void postProcess()>();

        return;
    }

    static android.view.animation.Animation$AnimationListener access$16(com.exchange.View.BasePanel)
    {
        com.exchange.View.BasePanel $r0;
        android.view.animation.Animation$AnimationListener r1;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        r1 = $r0.<com.exchange.View.BasePanel: android.view.animation.Animation$AnimationListener animationListener>;

        return r1;
    }

    static android.view.animation.Interpolator access$17(com.exchange.View.BasePanel)
    {
        com.exchange.View.BasePanel $r0;
        android.view.animation.Interpolator r1;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        r1 = $r0.<com.exchange.View.BasePanel: android.view.animation.Interpolator mInterpolator>;

        return r1;
    }

    static void access$18(com.exchange.View.BasePanel, float)
    {
        float $f0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        $f0 := @parameter1: float;

        $r0.<com.exchange.View.BasePanel: float mVelocity> = $f0;

        return;
    }

    static float access$19(com.exchange.View.BasePanel, float, int, int)
    {
        com.exchange.View.BasePanel $r0;
        int $i0, $i1;
        float $f0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        $f0 := @parameter1: float;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $f0 = specialinvoke $r0.<com.exchange.View.BasePanel: float ensureRange(float,int,int)>($f0, $i0, $i1);

        return $f0;
    }

    static int access$2(com.exchange.View.BasePanel)
    {
        int i0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        i0 = $r0.<com.exchange.View.BasePanel: int mPosition>;

        return i0;
    }

    static int access$3(com.exchange.View.BasePanel)
    {
        int i0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        i0 = $r0.<com.exchange.View.BasePanel: int mContentWidth>;

        return i0;
    }

    static int access$4(com.exchange.View.BasePanel)
    {
        int i0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        i0 = $r0.<com.exchange.View.BasePanel: int mContentHeight>;

        return i0;
    }

    static com.exchange.View.BasePanel$PanelOnGestureListener access$5(com.exchange.View.BasePanel)
    {
        com.exchange.View.BasePanel$PanelOnGestureListener r1;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        r1 = $r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$PanelOnGestureListener mGestureListener>;

        return r1;
    }

    static android.view.GestureDetector access$6(com.exchange.View.BasePanel)
    {
        android.view.GestureDetector r1;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        r1 = $r0.<com.exchange.View.BasePanel: android.view.GestureDetector mGestureDetector>;

        return r1;
    }

    static float access$7(com.exchange.View.BasePanel)
    {
        float f0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        f0 = $r0.<com.exchange.View.BasePanel: float mVelocity>;

        return f0;
    }

    static float access$8(com.exchange.View.BasePanel)
    {
        float f0;
        com.exchange.View.BasePanel $r0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        f0 = $r0.<com.exchange.View.BasePanel: float mTrackY>;

        return f0;
    }

    static boolean access$9(com.exchange.View.BasePanel)
    {
        com.exchange.View.BasePanel $r0;
        boolean z0;

        $r0 := @parameter0: com.exchange.View.BasePanel;

        z0 = $r0.<com.exchange.View.BasePanel: boolean mLinearFlying>;

        return z0;
    }

    private float ensureRange(float, int, int)
    {
        com.exchange.View.BasePanel r0;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: com.exchange.View.BasePanel;

        $f0 := @parameter0: float;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $f1 = (float) $i0;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        $f1 = (float) $i1;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        return $f0;
    }

    private void postProcess()
    {
        com.exchange.View.BasePanel r0;
        android.view.View $r2;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: com.exchange.View.BasePanel;

        $z0 = r0.<com.exchange.View.BasePanel: boolean isBanner>;

        if $z0 != 0 goto label1;

        $z0 = r0.<com.exchange.View.BasePanel: boolean mIsShrinking>;

        if $z0 == 0 goto label2;

        $r1 = r0.<com.exchange.View.BasePanel: android.graphics.drawable.Drawable mClosedHandle>;

        if $r1 == null goto label2;

        $r2 = r0.<com.exchange.View.BasePanel: android.view.View mHandle>;

        $r1 = r0.<com.exchange.View.BasePanel: android.graphics.drawable.Drawable mClosedHandle>;

        virtualinvoke $r2.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

     label1:
        r0.<com.exchange.View.BasePanel: boolean mAnimating> = 0;

        virtualinvoke r0.<com.exchange.View.BasePanel: void setListener()>();

        return;

     label2:
        $z0 = r0.<com.exchange.View.BasePanel: boolean mIsShrinking>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.exchange.View.BasePanel: android.graphics.drawable.Drawable mOpenedHandle>;

        if $r1 == null goto label1;

        $r2 = r0.<com.exchange.View.BasePanel: android.view.View mHandle>;

        $r1 = r0.<com.exchange.View.BasePanel: android.graphics.drawable.Drawable mOpenedHandle>;

        virtualinvoke $r2.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        goto label1;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        com.exchange.View.BasePanel$State $r2, $r3;
        com.exchange.View.BasePanel r0;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.Canvas $r1;
        boolean $z0;

        r0 := @this: com.exchange.View.BasePanel;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$State mState>;

        $r3 = <com.exchange.View.BasePanel$State: com.exchange.View.BasePanel$State ABOUT_TO_ANIMATE>;

        if $r2 != $r3 goto label4;

        $z0 = r0.<com.exchange.View.BasePanel: boolean mIsShrinking>;

        if $z0 != 0 goto label4;

        $i0 = r0.<com.exchange.View.BasePanel: int mOrientation>;

        if $i0 != 1 goto label7;

        $i0 = r0.<com.exchange.View.BasePanel: int mContentHeight>;

     label1:
        $i1 = r0.<com.exchange.View.BasePanel: int mPosition>;

        if $i1 == 2 goto label2;

        $i1 = r0.<com.exchange.View.BasePanel: int mPosition>;

        if $i1 != 0 goto label3;

     label2:
        $i0 = neg $i0;

     label3:
        $i1 = r0.<com.exchange.View.BasePanel: int mOrientation>;

        if $i1 != 1 goto label8;

        $f0 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

     label4:
        $r2 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$State mState>;

        $r3 = <com.exchange.View.BasePanel$State: com.exchange.View.BasePanel$State TRACKING>;

        if $r2 == $r3 goto label5;

        $r2 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$State mState>;

        $r3 = <com.exchange.View.BasePanel$State: com.exchange.View.BasePanel$State FLYING>;

        if $r2 != $r3 goto label6;

     label5:
        $f0 = r0.<com.exchange.View.BasePanel: float mTrackX>;

        $f1 = r0.<com.exchange.View.BasePanel: float mTrackY>;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

     label6:
        specialinvoke r0.<android.widget.LinearLayout: void dispatchDraw(android.graphics.Canvas)>($r1);

        return;

     label7:
        $i0 = r0.<com.exchange.View.BasePanel: int mContentWidth>;

        goto label1;

     label8:
        $f0 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, 0.0F);

        goto label4;
    }

    public android.view.View getContent()
    {
        android.view.View r1;
        com.exchange.View.BasePanel r0;

        r0 := @this: com.exchange.View.BasePanel;

        r1 = r0.<com.exchange.View.BasePanel: android.view.View mContent>;

        return r1;
    }

    public android.view.View getHandle()
    {
        android.view.View r1;
        com.exchange.View.BasePanel r0;

        r0 := @this: com.exchange.View.BasePanel;

        r1 = r0.<com.exchange.View.BasePanel: android.view.View mHandle>;

        return r1;
    }

    public void hideBlur()
    {
        android.view.View $r1;
        com.exchange.View.BasePanel r0;

        r0 := @this: com.exchange.View.BasePanel;

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View blurLayout>;

        if $r1 == null goto label1;

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View blurLayout>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(8);

     label1:
        return;
    }

    public boolean isFling()
    {
        com.exchange.View.BasePanel$State $r1, $r2;
        com.exchange.View.BasePanel r0;

        r0 := @this: com.exchange.View.BasePanel;

        $r2 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$State mState>;

        $r1 = <com.exchange.View.BasePanel$State: com.exchange.View.BasePanel$State FLYING>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOpen()
    {
        int $i0;
        android.view.View $r1;
        com.exchange.View.BasePanel r0;

        r0 := @this: com.exchange.View.BasePanel;

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mContent>;

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onFinishInflate()
    {
        com.exchange.View.BasePanel r0;
        int $i0;
        android.view.View $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this: com.exchange.View.BasePanel;

        specialinvoke r0.<android.widget.LinearLayout: void onFinishInflate()>();

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mHandle>;

        virtualinvoke r0.<com.exchange.View.BasePanel: void removeView(android.view.View)>($r1);

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mContent>;

        virtualinvoke r0.<com.exchange.View.BasePanel: void removeView(android.view.View)>($r1);

        $i0 = r0.<com.exchange.View.BasePanel: int mPosition>;

        if $i0 == 0 goto label1;

        $i0 = r0.<com.exchange.View.BasePanel: int mPosition>;

        if $i0 != 2 goto label4;

     label1:
        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mContent>;

        virtualinvoke r0.<com.exchange.View.BasePanel: void addView(android.view.View)>($r1);

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mHandle>;

        virtualinvoke r0.<com.exchange.View.BasePanel: void addView(android.view.View)>($r1);

     label2:
        $r2 = r0.<com.exchange.View.BasePanel: android.graphics.drawable.Drawable mClosedHandle>;

        if $r2 == null goto label3;

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mHandle>;

        $r2 = r0.<com.exchange.View.BasePanel: android.graphics.drawable.Drawable mClosedHandle>;

        virtualinvoke $r1.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r2);

     label3:
        $z0 = virtualinvoke r0.<com.exchange.View.BasePanel: boolean isOpen()>();

        if $z0 != 0 goto label5;

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mContent>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(8);

        return;

     label4:
        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mHandle>;

        virtualinvoke r0.<com.exchange.View.BasePanel: void addView(android.view.View)>($r1);

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mContent>;

        virtualinvoke r0.<com.exchange.View.BasePanel: void addView(android.view.View)>($r1);

        goto label2;

     label5:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.exchange.View.BasePanel r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.exchange.View.BasePanel;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mContent>;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        r0.<com.exchange.View.BasePanel: int mContentWidth> = $i0;

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mContent>;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        r0.<com.exchange.View.BasePanel: int mContentHeight> = $i0;

        return;
    }

    public void setInterpolator(android.view.animation.Interpolator)
    {
        com.exchange.View.BasePanel r0;
        android.view.animation.Interpolator $r1;

        r0 := @this: com.exchange.View.BasePanel;

        $r1 := @parameter0: android.view.animation.Interpolator;

        r0.<com.exchange.View.BasePanel: android.view.animation.Interpolator mInterpolator> = $r1;

        return;
    }

    public void setListener()
    {
        com.exchange.View.BasePanel$OnPanelListener $r3;
        com.exchange.View.BasePanel r0;
        com.exchange.View.BasePanel$5 $r4;
        android.view.View $r1;
        android.view.View$OnTouchListener $r2;
        boolean $z0;

        r0 := @this: com.exchange.View.BasePanel;

        $z0 = r0.<com.exchange.View.BasePanel: boolean isBanner>;

        if $z0 != 0 goto label2;

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mHandle>;

        $r2 = r0.<com.exchange.View.BasePanel: android.view.View$OnTouchListener touchListener>;

        virtualinvoke $r1.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>($r2);

        $r3 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$OnPanelListener panelListener>;

        if $r3 == null goto label5;

        $z0 = virtualinvoke r0.<com.exchange.View.BasePanel: boolean isOpen()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$OnPanelListener panelListener>;

        interfaceinvoke $r3.<com.exchange.View.BasePanel$OnPanelListener: void onPanelOpened(com.exchange.View.BasePanel,android.view.View)>(r0, null);

        return;

     label1:
        $r3 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$OnPanelListener panelListener>;

        interfaceinvoke $r3.<com.exchange.View.BasePanel$OnPanelListener: void onPanelClosed(com.exchange.View.BasePanel)>(r0);

        return;

     label2:
        $z0 = virtualinvoke r0.<com.exchange.View.BasePanel: boolean isOpen()>();

        if $z0 == 0 goto label4;

        $r3 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$OnPanelListener panelListener>;

        if $r3 == null goto label3;

        $r3 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$OnPanelListener panelListener>;

        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mHandle>;

        interfaceinvoke $r3.<com.exchange.View.BasePanel$OnPanelListener: void onPanelOpened(com.exchange.View.BasePanel,android.view.View)>(r0, $r1);

     label3:
        $r1 = r0.<com.exchange.View.BasePanel: android.view.View mHandle>;

        $r4 = new com.exchange.View.BasePanel$5;

        specialinvoke $r4.<com.exchange.View.BasePanel$5: void <init>(com.exchange.View.BasePanel)>(r0);

        virtualinvoke $r1.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r4);

        return;

     label4:
        $r3 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$OnPanelListener panelListener>;

        if $r3 == null goto label3;

        $r3 = r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$OnPanelListener panelListener>;

        interfaceinvoke $r3.<com.exchange.View.BasePanel$OnPanelListener: void onPanelClosed(com.exchange.View.BasePanel)>(r0);

        goto label3;

     label5:
        return;
    }

    public void setOnPanelListener(com.exchange.View.BasePanel$OnPanelListener)
    {
        com.exchange.View.BasePanel$OnPanelListener $r1;
        com.exchange.View.BasePanel r0;

        r0 := @this: com.exchange.View.BasePanel;

        $r1 := @parameter0: com.exchange.View.BasePanel$OnPanelListener;

        r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$OnPanelListener panelListener> = $r1;

        return;
    }

    public void setOpen(boolean, boolean)
    {
        com.exchange.View.BasePanel$State $r1;
        com.exchange.View.BasePanel r0;
        android.view.View $r2;
        java.lang.Runnable $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.exchange.View.BasePanel;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        if $z0 == 0 goto label3;

        $z2 = 0;

     label1:
        r0.<com.exchange.View.BasePanel: boolean mIsShrinking> = $z2;

        $r1 = <com.exchange.View.BasePanel$State: com.exchange.View.BasePanel$State ABOUT_TO_ANIMATE>;

        r0.<com.exchange.View.BasePanel: com.exchange.View.BasePanel$State mState> = $r1;

        $z0 = r0.<com.exchange.View.BasePanel: boolean mIsShrinking>;

        if $z0 != 0 goto label2;

        $r2 = r0.<com.exchange.View.BasePanel: android.view.View mContent>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(0);

     label2:
        $r3 = r0.<com.exchange.View.BasePanel: java.lang.Runnable startAnimation>;

        virtualinvoke r0.<com.exchange.View.BasePanel: boolean post(java.lang.Runnable)>($r3);

        return;

     label3:
        $z2 = 1;

        goto label1;
    }

    public void setPosition(int, android.content.Context)
    {
        android.content.Context $r1;
        com.exchange.View.BasePanel r0;
        byte $b1;
        int $i0;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;
        android.content.res.Resources $r2;

        r0 := @this: com.exchange.View.BasePanel;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.Context;

        r0.<com.exchange.View.BasePanel: int mPosition> = $i0;

        $i0 = r0.<com.exchange.View.BasePanel: int mPosition>;

        if $i0 == 0 goto label1;

        $i0 = r0.<com.exchange.View.BasePanel: int mPosition>;

        if $i0 != 1 goto label3;

     label1:
        $b1 = 1;

     label2:
        r0.<com.exchange.View.BasePanel: int mOrientation> = $b1;

        $i0 = r0.<com.exchange.View.BasePanel: int mOrientation>;

        virtualinvoke r0.<com.exchange.View.BasePanel: void setOrientation(int)>($i0);

        $z0 = r0.<com.exchange.View.BasePanel: boolean isBanner>;

        if $z0 == 0 goto label4;

        return;

     label3:
        $b1 = 0;

        goto label2;

     label4:
        $i0 = r0.<com.exchange.View.BasePanel: int mPosition>;

        if $i0 != 1 goto label5;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = staticinvoke <com.exchange.View.ResourceManager.DrawableMapper: int exchange_bottom_switcher_expanded_background()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        r0.<com.exchange.View.BasePanel: android.graphics.drawable.Drawable mOpenedHandle> = $r3;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = staticinvoke <com.exchange.View.ResourceManager.DrawableMapper: int exchange_bottom_switcher_collapsed_background()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        r0.<com.exchange.View.BasePanel: android.graphics.drawable.Drawable mClosedHandle> = $r3;

        return;

     label5:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = staticinvoke <com.exchange.View.ResourceManager.DrawableMapper: int exchange_top_switcher_expanded_background()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        r0.<com.exchange.View.BasePanel: android.graphics.drawable.Drawable mOpenedHandle> = $r3;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = staticinvoke <com.exchange.View.ResourceManager.DrawableMapper: int exchange_top_switcher_collapsed_background()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        r0.<com.exchange.View.BasePanel: android.graphics.drawable.Drawable mClosedHandle> = $r3;

        return;
    }

    public void showBlur()
    {
        com.exchange.View.BasePanel r0;
        com.exchange.View.BasePanel$4 $r3;
        android.view.View $r2;
        android.view.animation.AlphaAnimation r1;

        r0 := @this: com.exchange.View.BasePanel;

        $r2 = r0.<com.exchange.View.BasePanel: android.view.View blurLayout>;

        if $r2 == null goto label1;

        $r2 = r0.<com.exchange.View.BasePanel: android.view.View blurLayout>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(0);

        r1 = new android.view.animation.AlphaAnimation;

        specialinvoke r1.<android.view.animation.AlphaAnimation: void <init>(float,float)>(0.0F, 1.0F);

        virtualinvoke r1.<android.view.animation.Animation: void setDuration(long)>(300L);

        virtualinvoke r1.<android.view.animation.Animation: void setRepeatCount(int)>(0);

        $r2 = r0.<com.exchange.View.BasePanel: android.view.View blurLayout>;

        virtualinvoke $r2.<android.view.View: void setAnimation(android.view.animation.Animation)>(r1);

        virtualinvoke r1.<android.view.animation.Animation: void startNow()>();

        $r2 = r0.<com.exchange.View.BasePanel: android.view.View blurLayout>;

        $r3 = new com.exchange.View.BasePanel$4;

        specialinvoke $r3.<com.exchange.View.BasePanel$4: void <init>(com.exchange.View.BasePanel)>(r0);

        virtualinvoke $r2.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r3);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.exchange.View.BasePanel: java.lang.String TAG> = "Panel2";

        <com.exchange.View.BasePanel: int RIGHT> = 3;

        <com.exchange.View.BasePanel: int LEFT> = 2;

        <com.exchange.View.BasePanel: int BOTTOM> = 1;

        return;
    }
}
