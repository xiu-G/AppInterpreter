public class io.vov.vitamio.widget.OutlineTextView extends android.widget.TextView
{
    private int mAscent;
    private int mBorderColor;
    private float mBorderSize;
    private int mColor;
    private boolean mIncludePad;
    private float mSpacingAdd;
    private float mSpacingMult;
    private java.lang.String mText;
    private android.text.TextPaint mTextPaint;
    private android.text.TextPaint mTextPaintOutline;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        io.vov.vitamio.widget.OutlineTextView r0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context)>($r1);

        r0.<io.vov.vitamio.widget.OutlineTextView: java.lang.String mText> = "";

        r0.<io.vov.vitamio.widget.OutlineTextView: int mAscent> = 0;

        r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingMult> = 1.0F;

        r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingAdd> = 0.0F;

        r0.<io.vov.vitamio.widget.OutlineTextView: boolean mIncludePad> = 1;

        specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void initPaint()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        io.vov.vitamio.widget.OutlineTextView r0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<io.vov.vitamio.widget.OutlineTextView: java.lang.String mText> = "";

        r0.<io.vov.vitamio.widget.OutlineTextView: int mAscent> = 0;

        r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingMult> = 1.0F;

        r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingAdd> = 0.0F;

        r0.<io.vov.vitamio.widget.OutlineTextView: boolean mIncludePad> = 1;

        specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void initPaint()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        io.vov.vitamio.widget.OutlineTextView r0;
        int $i0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<io.vov.vitamio.widget.OutlineTextView: java.lang.String mText> = "";

        r0.<io.vov.vitamio.widget.OutlineTextView: int mAscent> = 0;

        r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingMult> = 1.0F;

        r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingAdd> = 0.0F;

        r0.<io.vov.vitamio.widget.OutlineTextView: boolean mIncludePad> = 1;

        specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void initPaint()>();

        return;
    }

    private void initPaint()
    {
        android.graphics.Paint$Style $r2;
        android.graphics.Typeface $r3;
        io.vov.vitamio.widget.OutlineTextView r0;
        android.text.TextPaint $r1;
        int $i0;
        float $f0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $r1 = new android.text.TextPaint;

        specialinvoke $r1.<android.text.TextPaint: void <init>()>();

        r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaint> = $r1;

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1.<android.text.TextPaint: void setAntiAlias(boolean)>(1);

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: float getTextSize()>();

        virtualinvoke $r1.<android.text.TextPaint: void setTextSize(float)>($f0);

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaint>;

        $i0 = r0.<io.vov.vitamio.widget.OutlineTextView: int mColor>;

        virtualinvoke $r1.<android.text.TextPaint: void setColor(int)>($i0);

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaint>;

        $r2 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r1.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r2);

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r1.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r3);

        $r1 = new android.text.TextPaint;

        specialinvoke $r1.<android.text.TextPaint: void <init>()>();

        r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline> = $r1;

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        virtualinvoke $r1.<android.text.TextPaint: void setAntiAlias(boolean)>(1);

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        $f0 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: float getTextSize()>();

        virtualinvoke $r1.<android.text.TextPaint: void setTextSize(float)>($f0);

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        $i0 = r0.<io.vov.vitamio.widget.OutlineTextView: int mBorderColor>;

        virtualinvoke $r1.<android.text.TextPaint: void setColor(int)>($i0);

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        $r2 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r1.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r2);

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        $r3 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r1.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r3);

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        $f0 = r0.<io.vov.vitamio.widget.OutlineTextView: float mBorderSize>;

        virtualinvoke $r1.<android.text.TextPaint: void setStrokeWidth(float)>($f0);

        return;
    }

    private int measureHeight(int)
    {
        io.vov.vitamio.widget.OutlineTextView r0;
        android.text.TextPaint $r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float ascent()>();

        $i2 = (int) $f0;

        r0.<io.vov.vitamio.widget.OutlineTextView: int mAscent> = $i2;

        if $i1 != 1073741824 goto label1;

        return $i0;

     label1:
        $i2 = r0.<io.vov.vitamio.widget.OutlineTextView: int mAscent>;

        $i2 = neg $i2;

        $f0 = (float) $i2;

        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float descent()>();

        $f0 = $f0 + $f1;

        $i2 = (int) $f0;

        $i3 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: int getPaddingTop()>();

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: int getPaddingBottom()>();

        $i2 = $i2 + $i3;

        if $i1 != -2147483648 goto label2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i0);

        return $i0;

     label2:
        return $i2;
    }

    private int measureWidth(int)
    {
        io.vov.vitamio.widget.OutlineTextView r0;
        android.text.TextPaint $r1;
        int $i0, $i1, $i2, $i3;
        float $f0;
        java.lang.String $r2;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        if $i1 != 1073741824 goto label1;

        return $i0;

     label1:
        $r1 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        $r2 = r0.<io.vov.vitamio.widget.OutlineTextView: java.lang.String mText>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float measureText(java.lang.String)>($r2);

        $i2 = (int) $f0;

        $i3 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: int getPaddingLeft()>();

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: int getPaddingRight()>();

        $i2 = $i2 + $i3;

        if $i1 != -2147483648 goto label2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i0);

        return $i0;

     label2:
        return $i2;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.text.StaticLayout r2;
        java.lang.CharSequence $r3;
        io.vov.vitamio.widget.OutlineTextView r0;
        android.text.Layout$Alignment $r5;
        android.text.TextPaint $r4;
        int $i0;
        float $f0, $f1;
        android.graphics.Canvas $r1;
        boolean $z0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $r1 := @parameter0: android.graphics.Canvas;

        r2 = new android.text.StaticLayout;

        $r3 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: java.lang.CharSequence getText()>();

        $r4 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        $i0 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: int getWidth()>();

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        $f0 = r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingMult>;

        $f1 = r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingAdd>;

        $z0 = r0.<io.vov.vitamio.widget.OutlineTextView: boolean mIncludePad>;

        specialinvoke r2.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r3, $r4, $i0, $r5, $f0, $f1, $z0);

        virtualinvoke r2.<android.text.Layout: void draw(android.graphics.Canvas)>($r1);

        r2 = new android.text.StaticLayout;

        $r3 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: java.lang.CharSequence getText()>();

        $r4 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaint>;

        $i0 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: int getWidth()>();

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        $f0 = r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingMult>;

        $f1 = r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingAdd>;

        $z0 = r0.<io.vov.vitamio.widget.OutlineTextView: boolean mIncludePad>;

        specialinvoke r2.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r3, $r4, $i0, $r5, $f0, $f1, $z0);

        virtualinvoke r2.<android.text.Layout: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    protected void onMeasure(int, int)
    {
        android.text.StaticLayout r1;
        java.lang.CharSequence $r3;
        io.vov.vitamio.widget.OutlineTextView r0;
        android.text.Layout$Alignment $r2;
        android.text.TextPaint $r4;
        int $i0, $i1, i2, $i3;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r1 = new android.text.StaticLayout;

        $r3 = virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: java.lang.CharSequence getText()>();

        $r4 = r0.<io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline>;

        i2 = specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: int measureWidth(int)>($i0);

        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        $f0 = r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingMult>;

        $f1 = r0.<io.vov.vitamio.widget.OutlineTextView: float mSpacingAdd>;

        $z0 = r0.<io.vov.vitamio.widget.OutlineTextView: boolean mIncludePad>;

        specialinvoke r1.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r3, $r4, i2, $r2, $f0, $f1, $z0);

        $f0 = r0.<io.vov.vitamio.widget.OutlineTextView: float mBorderSize>;

        $f0 = $f0 * 2.0F;

        $f0 = $f0 + 1.0F;

        i2 = (int) $f0;

        $i0 = specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: int measureWidth(int)>($i0);

        $i0 = $i0 + i2;

        $i1 = specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: int measureHeight(int)>($i1);

        $i3 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        $i1 = $i1 * $i3;

        $i1 = $i1 + i2;

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    public void setShadowLayer(float, float, float, int)
    {
        io.vov.vitamio.widget.OutlineTextView r0;
        int $i0;
        float $f0, $f1, $f2;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $i0 := @parameter3: int;

        specialinvoke r0.<android.widget.TextView: void setShadowLayer(float,float,float,int)>($f0, $f1, $f2, $i0);

        r0.<io.vov.vitamio.widget.OutlineTextView: float mBorderSize> = $f0;

        r0.<io.vov.vitamio.widget.OutlineTextView: int mBorderColor> = $i0;

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void requestLayout()>();

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void invalidate()>();

        specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void initPaint()>();

        return;
    }

    public void setText(java.lang.String)
    {
        java.lang.String $r1;
        io.vov.vitamio.widget.OutlineTextView r0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        r0.<io.vov.vitamio.widget.OutlineTextView: java.lang.String mText> = $r1;

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void requestLayout()>();

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void invalidate()>();

        return;
    }

    public void setTextColor(int)
    {
        int $i0;
        io.vov.vitamio.widget.OutlineTextView r0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void setTextColor(int)>($i0);

        r0.<io.vov.vitamio.widget.OutlineTextView: int mColor> = $i0;

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void invalidate()>();

        specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void initPaint()>();

        return;
    }

    public void setTextSize(float)
    {
        float $f0;
        io.vov.vitamio.widget.OutlineTextView r0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $f0 := @parameter0: float;

        specialinvoke r0.<android.widget.TextView: void setTextSize(float)>($f0);

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void requestLayout()>();

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void invalidate()>();

        specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void initPaint()>();

        return;
    }

    public void setTypeface(android.graphics.Typeface)
    {
        android.graphics.Typeface $r1;
        io.vov.vitamio.widget.OutlineTextView r0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $r1 := @parameter0: android.graphics.Typeface;

        specialinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r1);

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void requestLayout()>();

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void invalidate()>();

        specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void initPaint()>();

        return;
    }

    public void setTypeface(android.graphics.Typeface, int)
    {
        android.graphics.Typeface $r1;
        int $i0;
        io.vov.vitamio.widget.OutlineTextView r0;

        r0 := @this: io.vov.vitamio.widget.OutlineTextView;

        $r1 := @parameter0: android.graphics.Typeface;

        $i0 := @parameter1: int;

        specialinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>($r1, $i0);

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void requestLayout()>();

        virtualinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void invalidate()>();

        specialinvoke r0.<io.vov.vitamio.widget.OutlineTextView: void initPaint()>();

        return;
    }
}
