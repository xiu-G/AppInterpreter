public class com.gg.malixiongdikll.test.DatabaseHelper extends android.database.sqlite.SQLiteOpenHelper
{
    private static final java.lang.String CREATE_TBL;
    private static final java.lang.String DB_NAME;
    private static final java.lang.String TBL_NAME;
    private android.database.sqlite.SQLiteDatabase db;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.gg.malixiongdikll.test.DatabaseHelper r0;

        r0 := @this: com.gg.malixiongdikll.test.DatabaseHelper;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, "malixiongdikll.db", null, 2);

        return;
    }

    public void close()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.gg.malixiongdikll.test.DatabaseHelper r0;

        r0 := @this: com.gg.malixiongdikll.test.DatabaseHelper;

        $r1 = r0.<com.gg.malixiongdikll.test.DatabaseHelper: android.database.sqlite.SQLiteDatabase db>;

        if $r1 == null goto label1;

        $r1 = r0.<com.gg.malixiongdikll.test.DatabaseHelper: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label1:
        return;
    }

    public void delete(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.String[] $r3;
        com.gg.malixiongdikll.test.DatabaseHelper r0;
        java.lang.String $r1;

        r0 := @this: com.gg.malixiongdikll.test.DatabaseHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.gg.malixiongdikll.test.DatabaseHelper: android.database.sqlite.SQLiteDatabase db>;

        if $r2 == null goto label1;

        virtualinvoke r0.<com.gg.malixiongdikll.test.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label1:
        $r2 = r0.<com.gg.malixiongdikll.test.DatabaseHelper: android.database.sqlite.SQLiteDatabase db>;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r1;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("tb_malixiongdikll", "_id=?", $r3);

        return;
    }

    public long insert(int, int, int, int)
    {
        long $l4;
        java.lang.Integer $r3;
        android.database.sqlite.SQLiteDatabase $r2;
        int $i0, $i1, $i2, $i3;
        com.gg.malixiongdikll.test.DatabaseHelper r0;
        android.content.ContentValues r1;

        r0 := @this: com.gg.malixiongdikll.test.DatabaseHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r2 = virtualinvoke r0.<com.gg.malixiongdikll.test.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r1 = new android.content.ContentValues;

        specialinvoke r1.<android.content.ContentValues: void <init>()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("_id", $r3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("guanme", $r3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("jf", $r3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("tag", $r3);

        $l4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("tb_malixiongdikll", null, r1);

        return $l4;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.gg.malixiongdikll.test.DatabaseHelper r0;

        r0 := @this: com.gg.malixiongdikll.test.DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r0.<com.gg.malixiongdikll.test.DatabaseHelper: android.database.sqlite.SQLiteDatabase db> = $r1;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>(" create table if not exists tb_malixiongdikll(_id int primary key,guanme int,jf int,tag int) ");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("INSERT INTO tb_malixiongdikll (_id,guanme,jf, tag) VALUES (1,1,1,1)");

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        com.gg.malixiongdikll.test.DatabaseHelper r0;

        r0 := @this: com.gg.malixiongdikll.test.DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("drop table tb_malixiongdikll");

        virtualinvoke r0.<com.gg.malixiongdikll.test.DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1);

        return;
    }

    public android.database.Cursor select()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r2;
        com.gg.malixiongdikll.test.DatabaseHelper r0;
        android.database.Cursor $r3;

        r0 := @this: com.gg.malixiongdikll.test.DatabaseHelper;

        $r1 = virtualinvoke r0.<com.gg.malixiongdikll.test.DatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "_id";

        $r2[1] = "guanme";

        $r2[2] = "jf";

        $r2[3] = "tag";

        $r3 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("tb_malixiongdikll", $r2, null, null, null, null, "_id desc");

        return $r3;
    }

    public void update(java.lang.String, int, int, int)
    {
        java.lang.String[] $r5;
        java.lang.Integer $r4;
        android.database.sqlite.SQLiteDatabase $r3;
        int $i0, $i1, $i2;
        com.gg.malixiongdikll.test.DatabaseHelper r0;
        java.lang.String $r1;
        android.content.ContentValues r2;

        r0 := @this: com.gg.malixiongdikll.test.DatabaseHelper;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r3 = virtualinvoke r0.<com.gg.malixiongdikll.test.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r2 = new android.content.ContentValues;

        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("guanme", $r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("jf", $r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("tag", $r4);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = $r1;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("tb_malixiongdikll", r2, "_id=?", $r5);

        return;
    }

    public static void <clinit>()
    {
        <com.gg.malixiongdikll.test.DatabaseHelper: java.lang.String TBL_NAME> = "tb_malixiongdikll";

        <com.gg.malixiongdikll.test.DatabaseHelper: java.lang.String DB_NAME> = "malixiongdikll.db";

        <com.gg.malixiongdikll.test.DatabaseHelper: java.lang.String CREATE_TBL> = " create table if not exists tb_malixiongdikll(_id int primary key,guanme int,jf int,tag int) ";

        return;
    }
}
