public class org.dom4j.util.PerThreadSingleton extends java.lang.Object implements org.dom4j.util.SingletonStrategy
{
    private java.lang.ThreadLocal perThreadCache;
    private java.lang.String singletonClassName;

    public void <init>()
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName> = null;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache> = $r1;

        return;
    }

    public java.lang.Object instance()
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.ThreadLocal $r3;
        java.lang.Exception r1, $r10;
        java.lang.Thread $r6;
        java.lang.Object r2, $r4;
        java.lang.Class $r9;
        java.lang.ClassLoader $r7;
        java.lang.String $r8;
        java.lang.ref.WeakReference r5;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        r2 = null;

        $r3 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r5 = (java.lang.ref.WeakReference) $r4;

        if r5 == null goto label1;

        $r4 = virtualinvoke r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r4 != null goto label7;

     label1:
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r8 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName>;

        $r9 = virtualinvoke $r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r8);

        $r4 = virtualinvoke $r9.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        r2 = $r4;

     label3:
        $r3 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache>;

        r5 = new java.lang.ref.WeakReference;

        specialinvoke r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>(r5);

        return r2;

     label4:
        r1 := @caughtexception;

     label5:
        $r8 = r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName>;

        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r8);

        $r4 = virtualinvoke $r9.<java.lang.Class: java.lang.Object newInstance()>();

     label6:
        r2 = $r4;

        goto label3;

     label7:
        r2 = virtualinvoke r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        return r2;

     label8:
        $r10 := @caughtexception;

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label5 to label6 with label8;
    }

    public void reset()
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.ThreadLocal perThreadCache> = $r1;

        return;
    }

    public void setSingletonClassName(java.lang.String)
    {
        org.dom4j.util.PerThreadSingleton r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.util.PerThreadSingleton;

        $r1 := @parameter0: java.lang.String;

        r0.<org.dom4j.util.PerThreadSingleton: java.lang.String singletonClassName> = $r1;

        return;
    }
}
