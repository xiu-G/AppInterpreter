abstract class twitter4j.TwitterStream$StreamHandlingThread extends java.lang.Thread
{
    private static final java.lang.String NAME;
    java.lang.Object[] args;
    private boolean closed;
    private java.util.List retryHistory;
    twitter4j.StatusStream stream;
    private final twitter4j.TwitterStream this$0;

    void <init>(twitter4j.TwitterStream, java.lang.Object[])
    {
        twitter4j.TwitterStream$StreamHandlingThread r0;
        java.lang.Object[] $r2;
        int $i0;
        twitter4j.TwitterStream $r1;
        java.util.ArrayList $r3;

        r0 := @this: twitter4j.TwitterStream$StreamHandlingThread;

        $r1 := @parameter0: twitter4j.TwitterStream;

        $r2 := @parameter1: java.lang.Object[];

        r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.TwitterStream this$0> = $r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("Twitter Stream Handling Thread[initializing]");

        r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.StatusStream stream> = null;

        r0.<twitter4j.TwitterStream$StreamHandlingThread: boolean closed> = 0;

        r0.<twitter4j.TwitterStream$StreamHandlingThread: java.lang.Object[] args> = $r2;

        $r3 = new java.util.ArrayList;

        $i0 = staticinvoke <twitter4j.TwitterStream: int access$000(twitter4j.TwitterStream)>($r1);

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<twitter4j.TwitterStream$StreamHandlingThread: java.util.List retryHistory> = $r3;

        return;
    }

    private void setStatus(java.lang.String)
    {
        twitter4j.TwitterStream$StreamHandlingThread r0;
        java.lang.StringBuffer $r2;
        twitter4j.logging.Logger $r3;
        java.lang.String $r1;

        r0 := @this: twitter4j.TwitterStream$StreamHandlingThread;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Twitter Stream Handling Thread");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<twitter4j.TwitterStream$StreamHandlingThread: void setName(java.lang.String)>($r1);

        $r3 = staticinvoke <twitter4j.TwitterStream: twitter4j.logging.Logger access$200()>();

        virtualinvoke $r3.<twitter4j.logging.Logger: void debug(java.lang.String)>($r1);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r1;
        twitter4j.TwitterStream$StreamHandlingThread r0;

        r0 := @this: twitter4j.TwitterStream$StreamHandlingThread;

        entermonitor r0;

     label1:
        specialinvoke r0.<twitter4j.TwitterStream$StreamHandlingThread: void setStatus(java.lang.String)>("[disposing thread]");

        r0.<twitter4j.TwitterStream$StreamHandlingThread: boolean closed> = 1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    abstract twitter4j.StatusStream getStream() throws twitter4j.TwitterException;

    public void run()
    {
        java.lang.Throwable $r12, $r13;
        twitter4j.TwitterStream$StreamHandlingThread r0;
        long l0, $l2;
        byte $b3;
        java.lang.Long $r4, $r14;
        java.lang.StringBuffer $r11, $r15;
        int $i1, $i4;
        twitter4j.TwitterException r1;
        twitter4j.logging.Logger $r7;
        java.lang.String $r8;
        boolean $z0;
        twitter4j.TwitterStream $r5;
        twitter4j.StatusListener $r9;
        java.util.List $r2, $r10;
        twitter4j.StatusStream $r6;
        java.lang.Object $r3;

        r0 := @this: twitter4j.TwitterStream$StreamHandlingThread;

     label01:
        $z0 = r0.<twitter4j.TwitterStream$StreamHandlingThread: boolean closed>;

        if $z0 != 0 goto label43;

        $r2 = r0.<twitter4j.TwitterStream$StreamHandlingThread: java.util.List retryHistory>;

     label02:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

     label03:
        if $i1 <= 0 goto label11;

     label04:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label05:
        $r2 = r0.<twitter4j.TwitterStream$StreamHandlingThread: java.util.List retryHistory>;

     label06:
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

     label07:
        $r4 = (java.lang.Long) $r3;

     label08:
        $l2 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

     label09:
        l0 = l0 - $l2;

        $b3 = l0 cmp 60000L;

        $i1 = (int) $b3;

        if $i1 <= 0 goto label11;

        $r2 = r0.<twitter4j.TwitterStream$StreamHandlingThread: java.util.List retryHistory>;

     label10:
        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(0);

     label11:
        $r2 = r0.<twitter4j.TwitterStream$StreamHandlingThread: java.util.List retryHistory>;

     label12:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

     label13:
        $r5 = r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.TwitterStream this$0>;

     label14:
        $i4 = staticinvoke <twitter4j.TwitterStream: int access$000(twitter4j.TwitterStream)>($r5);

     label15:
        if $i1 >= $i4 goto label25;

     label16:
        specialinvoke r0.<twitter4j.TwitterStream$StreamHandlingThread: void setStatus(java.lang.String)>("[establishing connection]");

     label17:
        $z0 = r0.<twitter4j.TwitterStream$StreamHandlingThread: boolean closed>;

        if $z0 != 0 goto label38;

        $r6 = r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.StatusStream stream>;

        if $r6 != null goto label38;

        $r2 = r0.<twitter4j.TwitterStream$StreamHandlingThread: java.util.List retryHistory>;

     label18:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

     label19:
        $r5 = r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.TwitterStream this$0>;

     label20:
        $i4 = staticinvoke <twitter4j.TwitterStream: int access$000(twitter4j.TwitterStream)>($r5);

     label21:
        if $i1 >= $i4 goto label17;

        $r2 = r0.<twitter4j.TwitterStream$StreamHandlingThread: java.util.List retryHistory>;

        $r14 = new java.lang.Long;

        $r4 = $r14;

     label22:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r14.<java.lang.Long: void <init>(long)>(l0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r6 = virtualinvoke r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.StatusStream getStream()>();

     label23:
        r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.StatusStream stream> = $r6;

        goto label17;

     label24:
        r1 := @caughtexception;

        r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.StatusStream stream> = null;

        virtualinvoke r1.<twitter4j.TwitterException: void printStackTrace()>();

        $r7 = staticinvoke <twitter4j.TwitterStream: twitter4j.logging.Logger access$200()>();

        $r8 = virtualinvoke r1.<twitter4j.TwitterException: java.lang.String getMessage()>();

        virtualinvoke $r7.<twitter4j.logging.Logger: void debug(java.lang.String)>($r8);

        $r5 = r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.TwitterStream this$0>;

        $r9 = staticinvoke <twitter4j.TwitterStream: twitter4j.StatusListener access$100(twitter4j.TwitterStream)>($r5);

        interfaceinvoke $r9.<twitter4j.StatusListener: void onException(java.lang.Exception)>(r1);

        goto label01;

     label25:
        $z0 = r0.<twitter4j.TwitterStream$StreamHandlingThread: boolean closed>;

        if $z0 != 0 goto label38;

     label26:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label27:
        $r2 = r0.<twitter4j.TwitterStream$StreamHandlingThread: java.util.List retryHistory>;

        $r10 = r0.<twitter4j.TwitterStream$StreamHandlingThread: java.util.List retryHistory>;

     label28:
        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

     label29:
        $i1 = $i1 + -1;

     label30:
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

     label31:
        $r4 = (java.lang.Long) $r3;

     label32:
        $l2 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

     label33:
        l0 = l0 - $l2;

        l0 = 60000L - l0;

        $r15 = new java.lang.StringBuffer;

        $r11 = $r15;

     label34:
        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[retry limit reached. sleeping for ");

     label35:
        $l2 = l0 / 1000L;

     label36:
        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" secs]");

        $r8 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<twitter4j.TwitterStream$StreamHandlingThread: void setStatus(java.lang.String)>($r8);

     label37:
        staticinvoke <java.lang.Thread: void sleep(long)>(l0);

     label38:
        $r6 = r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.StatusStream stream>;

        if $r6 == null goto label01;

     label39:
        specialinvoke r0.<twitter4j.TwitterStream$StreamHandlingThread: void setStatus(java.lang.String)>("[receiving stream]");

     label40:
        $z0 = r0.<twitter4j.TwitterStream$StreamHandlingThread: boolean closed>;

        if $z0 != 0 goto label01;

        $r6 = r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.StatusStream stream>;

        $r5 = r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.TwitterStream this$0>;

     label41:
        $r9 = staticinvoke <twitter4j.TwitterStream: twitter4j.StatusListener access$100(twitter4j.TwitterStream)>($r5);

        virtualinvoke $r6.<twitter4j.StatusStream: void next(twitter4j.StatusListener)>($r9);

     label42:
        goto label40;

     label43:
        $r6 = r0.<twitter4j.TwitterStream$StreamHandlingThread: twitter4j.StatusStream stream>;

     label44:
        virtualinvoke $r6.<twitter4j.StatusStream: void close()>();

     label45:
        return;

     label46:
        $r12 := @caughtexception;

        goto label38;

     label47:
        $r13 := @caughtexception;

        return;

        catch twitter4j.TwitterException from label02 to label03 with label24;
        catch twitter4j.TwitterException from label04 to label05 with label24;
        catch twitter4j.TwitterException from label06 to label07 with label24;
        catch twitter4j.TwitterException from label08 to label09 with label24;
        catch twitter4j.TwitterException from label10 to label11 with label24;
        catch twitter4j.TwitterException from label12 to label13 with label24;
        catch twitter4j.TwitterException from label14 to label15 with label24;
        catch twitter4j.TwitterException from label16 to label17 with label24;
        catch twitter4j.TwitterException from label18 to label19 with label24;
        catch twitter4j.TwitterException from label20 to label21 with label24;
        catch twitter4j.TwitterException from label22 to label23 with label24;
        catch twitter4j.TwitterException from label26 to label27 with label24;
        catch twitter4j.TwitterException from label28 to label29 with label24;
        catch twitter4j.TwitterException from label30 to label31 with label24;
        catch twitter4j.TwitterException from label32 to label33 with label24;
        catch twitter4j.TwitterException from label34 to label35 with label24;
        catch twitter4j.TwitterException from label36 to label37 with label24;
        catch java.lang.InterruptedException from label37 to label38 with label46;
        catch twitter4j.TwitterException from label37 to label38 with label24;
        catch twitter4j.TwitterException from label39 to label40 with label24;
        catch twitter4j.TwitterException from label41 to label42 with label24;
        catch java.io.IOException from label44 to label45 with label47;
    }

    public static void <clinit>()
    {
        <twitter4j.TwitterStream$StreamHandlingThread: java.lang.String NAME> = "Twitter Stream Handling Thread";

        return;
    }
}
