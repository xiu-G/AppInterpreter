class cs.gson.internal.bind.TypeAdapters$25 extends cs.gson.TypeAdapter
{
    private static int[] $SWITCH_TABLE$cs$gson$stream$JsonToken;

    static int[] $SWITCH_TABLE$cs$gson$stream$JsonToken()
    {
        cs.gson.stream.JsonToken[] $r1;
        java.lang.NoSuchFieldError $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int[] $r0;
        int $i0;
        cs.gson.stream.JsonToken $r2;

        $r0 = <cs.gson.internal.bind.TypeAdapters$25: int[] $SWITCH_TABLE$cs$gson$stream$JsonToken>;

        if $r0 == null goto label01;

        return $r0;

     label01:
        $r1 = staticinvoke <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken[] values()>();

        $i0 = lengthof $r1;

        $r0 = newarray (int)[$i0];

     label02:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken BEGIN_ARRAY>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label03:
        $r0[$i0] = 1;

     label04:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken BEGIN_OBJECT>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label05:
        $r0[$i0] = 3;

     label06:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken BOOLEAN>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label07:
        $r0[$i0] = 8;

     label08:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken END_ARRAY>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label09:
        $r0[$i0] = 2;

     label10:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken END_DOCUMENT>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label11:
        $r0[$i0] = 10;

     label12:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken END_OBJECT>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label13:
        $r0[$i0] = 4;

     label14:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken NAME>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label15:
        $r0[$i0] = 5;

     label16:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken NULL>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label17:
        $r0[$i0] = 9;

     label18:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken NUMBER>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label19:
        $r0[$i0] = 7;

     label20:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken STRING>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label21:
        $r0[$i0] = 6;

     label22:
        <cs.gson.internal.bind.TypeAdapters$25: int[] $SWITCH_TABLE$cs$gson$stream$JsonToken> = $r0;

        return $r0;

     label23:
        $r3 := @caughtexception;

        goto label22;

     label24:
        $r4 := @caughtexception;

        goto label20;

     label25:
        $r5 := @caughtexception;

        goto label18;

     label26:
        $r6 := @caughtexception;

        goto label16;

     label27:
        $r7 := @caughtexception;

        goto label14;

     label28:
        $r8 := @caughtexception;

        goto label12;

     label29:
        $r9 := @caughtexception;

        goto label10;

     label30:
        $r10 := @caughtexception;

        goto label08;

     label31:
        $r11 := @caughtexception;

        goto label06;

     label32:
        $r12 := @caughtexception;

        goto label04;

        catch java.lang.NoSuchFieldError from label02 to label03 with label32;
        catch java.lang.NoSuchFieldError from label04 to label05 with label31;
        catch java.lang.NoSuchFieldError from label06 to label07 with label30;
        catch java.lang.NoSuchFieldError from label08 to label09 with label29;
        catch java.lang.NoSuchFieldError from label10 to label11 with label28;
        catch java.lang.NoSuchFieldError from label12 to label13 with label27;
        catch java.lang.NoSuchFieldError from label14 to label15 with label26;
        catch java.lang.NoSuchFieldError from label16 to label17 with label25;
        catch java.lang.NoSuchFieldError from label18 to label19 with label24;
        catch java.lang.NoSuchFieldError from label20 to label21 with label23;
    }

    void <init>()
    {
        cs.gson.internal.bind.TypeAdapters$25 r0;

        r0 := @this: cs.gson.internal.bind.TypeAdapters$25;

        specialinvoke r0.<cs.gson.TypeAdapter: void <init>()>();

        return;
    }

    public cs.gson.JsonElement read(cs.gson.stream.JsonReader) throws java.io.IOException
    {
        cs.gson.internal.bind.TypeAdapters$25 r0;
        cs.gson.JsonNull r12;
        cs.gson.stream.JsonReader $r1;
        java.lang.IllegalArgumentException $r5;
        cs.gson.JsonPrimitive r6;
        cs.gson.JsonObject r2;
        cs.gson.JsonArray r10;
        int[] $r3;
        cs.gson.JsonElement $r11;
        int $i0;
        cs.gson.internal.LazilyParsedNumber $r8;
        java.lang.Boolean $r9;
        cs.gson.stream.JsonToken $r4;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: cs.gson.internal.bind.TypeAdapters$25;

        $r1 := @parameter0: cs.gson.stream.JsonReader;

        $r3 = staticinvoke <cs.gson.internal.bind.TypeAdapters$25: int[] $SWITCH_TABLE$cs$gson$stream$JsonToken()>();

        $r4 = virtualinvoke $r1.<cs.gson.stream.JsonReader: cs.gson.stream.JsonToken peek()>();

        $i0 = virtualinvoke $r4.<cs.gson.stream.JsonToken: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label06;
            case 2: goto label01;
            case 3: goto label09;
            case 4: goto label01;
            case 5: goto label01;
            case 6: goto label02;
            case 7: goto label03;
            case 8: goto label04;
            case 9: goto label05;
            default: goto label01;
        };

     label01:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label02:
        r6 = new cs.gson.JsonPrimitive;

        $r7 = virtualinvoke $r1.<cs.gson.stream.JsonReader: java.lang.String nextString()>();

        specialinvoke r6.<cs.gson.JsonPrimitive: void <init>(java.lang.String)>($r7);

        return r6;

     label03:
        $r7 = virtualinvoke $r1.<cs.gson.stream.JsonReader: java.lang.String nextString()>();

        r6 = new cs.gson.JsonPrimitive;

        $r8 = new cs.gson.internal.LazilyParsedNumber;

        specialinvoke $r8.<cs.gson.internal.LazilyParsedNumber: void <init>(java.lang.String)>($r7);

        specialinvoke r6.<cs.gson.JsonPrimitive: void <init>(java.lang.Number)>($r8);

        return r6;

     label04:
        r6 = new cs.gson.JsonPrimitive;

        $z0 = virtualinvoke $r1.<cs.gson.stream.JsonReader: boolean nextBoolean()>();

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke r6.<cs.gson.JsonPrimitive: void <init>(java.lang.Boolean)>($r9);

        return r6;

     label05:
        virtualinvoke $r1.<cs.gson.stream.JsonReader: void nextNull()>();

        r12 = <cs.gson.JsonNull: cs.gson.JsonNull INSTANCE>;

        return r12;

     label06:
        r10 = new cs.gson.JsonArray;

        specialinvoke r10.<cs.gson.JsonArray: void <init>()>();

        virtualinvoke $r1.<cs.gson.stream.JsonReader: void beginArray()>();

     label07:
        $z0 = virtualinvoke $r1.<cs.gson.stream.JsonReader: boolean hasNext()>();

        if $z0 != 0 goto label08;

        virtualinvoke $r1.<cs.gson.stream.JsonReader: void endArray()>();

        return r10;

     label08:
        $r11 = virtualinvoke r0.<cs.gson.internal.bind.TypeAdapters$25: cs.gson.JsonElement read(cs.gson.stream.JsonReader)>($r1);

        virtualinvoke r10.<cs.gson.JsonArray: void add(cs.gson.JsonElement)>($r11);

        goto label07;

     label09:
        r2 = new cs.gson.JsonObject;

        specialinvoke r2.<cs.gson.JsonObject: void <init>()>();

        virtualinvoke $r1.<cs.gson.stream.JsonReader: void beginObject()>();

     label10:
        $z0 = virtualinvoke $r1.<cs.gson.stream.JsonReader: boolean hasNext()>();

        if $z0 != 0 goto label11;

        virtualinvoke $r1.<cs.gson.stream.JsonReader: void endObject()>();

        return r2;

     label11:
        $r7 = virtualinvoke $r1.<cs.gson.stream.JsonReader: java.lang.String nextName()>();

        $r11 = virtualinvoke r0.<cs.gson.internal.bind.TypeAdapters$25: cs.gson.JsonElement read(cs.gson.stream.JsonReader)>($r1);

        virtualinvoke r2.<cs.gson.JsonObject: void add(java.lang.String,cs.gson.JsonElement)>($r7, $r11);

        goto label10;
    }

    public volatile java.lang.Object read(cs.gson.stream.JsonReader) throws java.io.IOException
    {
        cs.gson.internal.bind.TypeAdapters$25 r0;
        cs.gson.stream.JsonReader $r1;
        cs.gson.JsonElement $r2;

        r0 := @this: cs.gson.internal.bind.TypeAdapters$25;

        $r1 := @parameter0: cs.gson.stream.JsonReader;

        $r2 = virtualinvoke r0.<cs.gson.internal.bind.TypeAdapters$25: cs.gson.JsonElement read(cs.gson.stream.JsonReader)>($r1);

        return $r2;
    }

    public void write(cs.gson.stream.JsonWriter, cs.gson.JsonElement) throws java.io.IOException
    {
        cs.gson.JsonPrimitive $r3;
        cs.gson.JsonElement $r2;
        java.lang.String $r5;
        java.lang.Number $r4;
        boolean $z0;
        cs.gson.internal.bind.TypeAdapters$25 r0;
        java.util.Map$Entry r11;
        java.util.Iterator $r7;
        java.util.Set $r10;
        java.lang.IllegalArgumentException $r12;
        cs.gson.JsonObject $r9;
        cs.gson.JsonArray $r6;
        java.lang.Object $r8;
        java.lang.StringBuilder $r13;
        java.lang.Class $r14;
        cs.gson.stream.JsonWriter $r1;

        r0 := @this: cs.gson.internal.bind.TypeAdapters$25;

        $r1 := @parameter0: cs.gson.stream.JsonWriter;

        $r2 := @parameter1: cs.gson.JsonElement;

        if $r2 == null goto label01;

        $z0 = virtualinvoke $r2.<cs.gson.JsonElement: boolean isJsonNull()>();

        if $z0 == 0 goto label02;

     label01:
        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter nullValue()>();

        return;

     label02:
        $z0 = virtualinvoke $r2.<cs.gson.JsonElement: boolean isJsonPrimitive()>();

        if $z0 == 0 goto label05;

        $r3 = virtualinvoke $r2.<cs.gson.JsonElement: cs.gson.JsonPrimitive getAsJsonPrimitive()>();

        $z0 = virtualinvoke $r3.<cs.gson.JsonPrimitive: boolean isNumber()>();

        if $z0 == 0 goto label03;

        $r4 = virtualinvoke $r3.<cs.gson.JsonPrimitive: java.lang.Number getAsNumber()>();

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter value(java.lang.Number)>($r4);

        return;

     label03:
        $z0 = virtualinvoke $r3.<cs.gson.JsonPrimitive: boolean isBoolean()>();

        if $z0 == 0 goto label04;

        $z0 = virtualinvoke $r3.<cs.gson.JsonPrimitive: boolean getAsBoolean()>();

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter value(boolean)>($z0);

        return;

     label04:
        $r5 = virtualinvoke $r3.<cs.gson.JsonPrimitive: java.lang.String getAsString()>();

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter value(java.lang.String)>($r5);

        return;

     label05:
        $z0 = virtualinvoke $r2.<cs.gson.JsonElement: boolean isJsonArray()>();

        if $z0 == 0 goto label08;

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter beginArray()>();

        $r6 = virtualinvoke $r2.<cs.gson.JsonElement: cs.gson.JsonArray getAsJsonArray()>();

        $r7 = virtualinvoke $r6.<cs.gson.JsonArray: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label07;

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter endArray()>();

        return;

     label07:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (cs.gson.JsonElement) $r8;

        virtualinvoke r0.<cs.gson.internal.bind.TypeAdapters$25: void write(cs.gson.stream.JsonWriter,cs.gson.JsonElement)>($r1, $r2);

        goto label06;

     label08:
        $z0 = virtualinvoke $r2.<cs.gson.JsonElement: boolean isJsonObject()>();

        if $z0 == 0 goto label11;

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter beginObject()>();

        $r9 = virtualinvoke $r2.<cs.gson.JsonElement: cs.gson.JsonObject getAsJsonObject()>();

        $r10 = virtualinvoke $r9.<cs.gson.JsonObject: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label10;

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter endObject()>();

        return;

     label10:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r8;

        $r8 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r8;

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter name(java.lang.String)>($r5);

        $r8 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r2 = (cs.gson.JsonElement) $r8;

        virtualinvoke r0.<cs.gson.internal.bind.TypeAdapters$25: void write(cs.gson.stream.JsonWriter,cs.gson.JsonElement)>($r1, $r2);

        goto label09;

     label11:
        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Couldn\'t write ");

        $r14 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r12;
    }

    public volatile void write(cs.gson.stream.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        cs.gson.internal.bind.TypeAdapters$25 r0;
        cs.gson.JsonElement $r3;
        java.lang.Object $r2;
        cs.gson.stream.JsonWriter $r1;

        r0 := @this: cs.gson.internal.bind.TypeAdapters$25;

        $r1 := @parameter0: cs.gson.stream.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (cs.gson.JsonElement) $r2;

        virtualinvoke r0.<cs.gson.internal.bind.TypeAdapters$25: void write(cs.gson.stream.JsonWriter,cs.gson.JsonElement)>($r1, $r3);

        return;
    }
}
