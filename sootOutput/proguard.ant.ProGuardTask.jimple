public class proguard.ant.ProGuardTask extends proguard.ant.ConfigurationTask
{

    public void <init>()
    {
        proguard.ant.ProGuardTask r0;

        r0 := @this: proguard.ant.ProGuardTask;

        specialinvoke r0.<proguard.ant.ConfigurationTask: void <init>()>();

        return;
    }

    private java.io.File optionalFile(java.io.File)
    {
        proguard.ant.ProGuardTask r0;
        java.lang.String $r2;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("no");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("off");

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("yes");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("on");

        if $z0 == 0 goto label4;

     label3:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("");

        return $r1;

     label4:
        $r1 = specialinvoke r0.<proguard.ant.ProGuardTask: java.io.File resolvedFile(java.io.File)>($r1);

        return $r1;
    }

    private java.io.File resolvedFile(java.io.File)
    {
        proguard.ant.ProGuardTask r0;
        org.apache.tools.ant.Project $r3;
        java.lang.String $r5;
        java.io.File $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isAbsolute()>();

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        $r2 = new java.io.File;

        $r3 = virtualinvoke r0.<proguard.ant.ProGuardTask: org.apache.tools.ant.Project getProject()>();

        $r4 = virtualinvoke $r3.<org.apache.tools.ant.Project: java.io.File getBaseDir()>();

        $r5 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r5);

        return $r2;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable $r4;
        proguard.ant.ProGuardTask r0;
        org.apache.tools.ant.BuildException $r6;
        java.io.IOException $r7;
        proguard.ProGuard $r2, $r5;
        proguard.Configuration $r3;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r5 = new proguard.ProGuard;

        $r2 = $r5;

        $r3 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

     label1:
        specialinvoke $r5.<proguard.ProGuard: void <init>(proguard.Configuration)>($r3);

        virtualinvoke $r2.<proguard.ProGuard: void execute()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r6 = new org.apache.tools.ant.BuildException;

        $r7 = (java.io.IOException) $r4;

        $r1 = virtualinvoke $r7.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r6.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r1);

        $r4 = (java.lang.Throwable) $r6;

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setAllowaccessmodification(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean allowAccessModification> = $z0;

        return;
    }

    public void setApplymapping(java.io.File)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = specialinvoke r0.<proguard.ant.ProGuardTask: java.io.File resolvedFile(java.io.File)>($r1);

        $r2.<proguard.Configuration: java.io.File applyMapping> = $r1;

        return;
    }

    public void setClassobfuscationdictionary(java.io.File)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = specialinvoke r0.<proguard.ant.ProGuardTask: java.io.File resolvedFile(java.io.File)>($r1);

        $r2.<proguard.Configuration: java.io.File classObfuscationDictionary> = $r1;

        return;
    }

    public void setConfiguration(java.io.File) throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable $r7, $r8;
        proguard.ant.ProGuardTask r0;
        org.apache.tools.ant.BuildException $r2, $r10;
        java.io.IOException $r11;
        java.io.File $r1;
        proguard.Configuration $r4;
        proguard.ConfigurationParser $r3, $r9;
        proguard.ParseException $r5;
        java.lang.String $r6;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r9 = new proguard.ConfigurationParser;

        $r3 = $r9;

     label01:
        specialinvoke $r9.<proguard.ConfigurationParser: void <init>(java.io.File)>($r1);

     label02:
        $r4 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

     label03:
        virtualinvoke $r3.<proguard.ConfigurationParser: void parse(proguard.Configuration)>($r4);

     label04:
        virtualinvoke $r3.<proguard.ConfigurationParser: void close()>();

     label05:
        return;

     label06:
        $r5 := @caughtexception;

     label07:
        $r10 = new org.apache.tools.ant.BuildException;

     label08:
        $r2 = $r10;

     label09:
        $r6 = virtualinvoke $r5.<proguard.ParseException: java.lang.String getMessage()>();

        specialinvoke $r10.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r2;

        throw $r7;

     label10:
        $r7 := @caughtexception;

     label11:
        virtualinvoke $r3.<proguard.ConfigurationParser: void close()>();

        throw $r7;

     label12:
        $r8 := @caughtexception;

        $r10 = new org.apache.tools.ant.BuildException;

        $r11 = (java.io.IOException) $r8;

        $r6 = virtualinvoke $r11.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r10.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r10;

        throw $r7;

        catch java.io.IOException from label01 to label02 with label12;
        catch proguard.ParseException from label03 to label04 with label06;
        catch java.lang.Throwable from label02 to label04 with label10;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.io.IOException from label11 to label12 with label12;
    }

    public void setDefaultpackage(java.lang.String)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r1);

        $r2.<proguard.Configuration: java.lang.String repackageClasses> = $r1;

        return;
    }

    public void setDump(java.io.File)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = specialinvoke r0.<proguard.ant.ProGuardTask: java.io.File optionalFile(java.io.File)>($r1);

        $r2.<proguard.Configuration: java.io.File dump> = $r1;

        return;
    }

    public void setFlattenpackagehierarchy(java.lang.String)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r1);

        $r2.<proguard.Configuration: java.lang.String flattenPackageHierarchy> = $r1;

        return;
    }

    public void setForceprocessing(boolean)
    {
        proguard.ant.ProGuardTask r0;
        proguard.Configuration $r1;
        long $l0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        if $z0 == 0 goto label2;

        $l0 = 9223372036854775807L;

     label1:
        $r1.<proguard.Configuration: long lastModified> = $l0;

        return;

     label2:
        $l0 = 0L;

        goto label1;
    }

    public void setIgnorewarnings(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean ignoreWarnings> = $z0;

        return;
    }

    public void setKeepparameternames(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean keepParameterNames> = $z0;

        return;
    }

    public void setMergeinterfacesaggressively(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean mergeInterfacesAggressively> = $z0;

        return;
    }

    public void setMicroedition(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean microEdition> = $z0;

        return;
    }

    public void setNote(boolean)
    {
        proguard.ant.ProGuardTask r0;
        proguard.Configuration $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        if $z0 == 0 goto label2;

        $r2 = null;

     label1:
        $r1.<proguard.Configuration: java.util.List note> = $r2;

        return;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        goto label1;
    }

    public void setObfuscate(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean obfuscate> = $z0;

        return;
    }

    public void setObfuscationdictionary(java.io.File)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = specialinvoke r0.<proguard.ant.ProGuardTask: java.io.File resolvedFile(java.io.File)>($r1);

        $r2.<proguard.Configuration: java.io.File obfuscationDictionary> = $r1;

        return;
    }

    public void setOptimizationpasses(int)
    {
        int $i0;
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;

        r0 := @this: proguard.ant.ProGuardTask;

        $i0 := @parameter0: int;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: int optimizationPasses> = $i0;

        return;
    }

    public void setOptimize(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean optimize> = $z0;

        return;
    }

    public void setOutjar(java.lang.String)
    {
        java.lang.Throwable $r3;
        proguard.ant.ProGuardTask r0;
        org.apache.tools.ant.BuildException $r2;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.tools.ant.BuildException;

        specialinvoke $r2.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("Use the <outjar> nested element instead of the \'outjar\' attribute");

        $r3 = (java.lang.Throwable) $r2;

        throw $r3;
    }

    public void setOverloadaggressively(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean overloadAggressively> = $z0;

        return;
    }

    public void setPackageobfuscationdictionary(java.io.File)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = specialinvoke r0.<proguard.ant.ProGuardTask: java.io.File resolvedFile(java.io.File)>($r1);

        $r2.<proguard.Configuration: java.io.File packageObfuscationDictionary> = $r1;

        return;
    }

    public void setPreverify(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean preverify> = $z0;

        return;
    }

    public void setPrintconfiguration(java.io.File)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = specialinvoke r0.<proguard.ant.ProGuardTask: java.io.File optionalFile(java.io.File)>($r1);

        $r2.<proguard.Configuration: java.io.File printConfiguration> = $r1;

        return;
    }

    public void setPrintmapping(java.io.File)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = specialinvoke r0.<proguard.ant.ProGuardTask: java.io.File optionalFile(java.io.File)>($r1);

        $r2.<proguard.Configuration: java.io.File printMapping> = $r1;

        return;
    }

    public void setPrintseeds(java.io.File)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = specialinvoke r0.<proguard.ant.ProGuardTask: java.io.File optionalFile(java.io.File)>($r1);

        $r2.<proguard.Configuration: java.io.File printSeeds> = $r1;

        return;
    }

    public void setPrintusage(java.io.File)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.io.File $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = specialinvoke r0.<proguard.ant.ProGuardTask: java.io.File optionalFile(java.io.File)>($r1);

        $r2.<proguard.Configuration: java.io.File printUsage> = $r1;

        return;
    }

    public void setRenamesourcefileattribute(java.lang.String)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r2.<proguard.Configuration: java.lang.String newSourceFileAttribute> = $r1;

        return;
    }

    public void setRepackageclasses(java.lang.String)
    {
        proguard.Configuration $r2;
        proguard.ant.ProGuardTask r0;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r1);

        $r2.<proguard.Configuration: java.lang.String repackageClasses> = $r1;

        return;
    }

    public void setShrink(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean shrink> = $z0;

        return;
    }

    public void setSkipnonpubliclibraryclasses(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean skipNonPublicLibraryClasses> = $z0;

        return;
    }

    public void setSkipnonpubliclibraryclassmembers(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean skipNonPublicLibraryClassMembers> = $z0;

        return;
    }

    public void setTarget(java.lang.String)
    {
        java.lang.Throwable $r6;
        proguard.ant.ProGuardTask r0;
        org.apache.tools.ant.BuildException $r5;
        java.lang.StringBuffer $r3, $r4;
        proguard.Configuration $r2;
        int $i0;
        java.lang.String $r1;

        r0 := @this: proguard.ant.ProGuardTask;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalClassVersion(java.lang.String)>($r1);

        $r2.<proguard.Configuration: int targetClassVersion> = $i0;

        $r2 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $i0 = $r2.<proguard.Configuration: int targetClassVersion>;

        if $i0 != 0 goto label1;

        $r5 = new org.apache.tools.ant.BuildException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported target \'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r1);

        $r6 = (java.lang.Throwable) $r5;

        throw $r6;

     label1:
        return;
    }

    public void setUsemixedcaseclassnames(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean useMixedCaseClassNames> = $z0;

        return;
    }

    public void setUseuniqueclassmembernames(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean useUniqueClassMemberNames> = $z0;

        return;
    }

    public void setVerbose(boolean)
    {
        proguard.Configuration $r1;
        proguard.ant.ProGuardTask r0;
        boolean $z0;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        $r1.<proguard.Configuration: boolean verbose> = $z0;

        return;
    }

    public void setWarn(boolean)
    {
        proguard.ant.ProGuardTask r0;
        proguard.Configuration $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: proguard.ant.ProGuardTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ant.ProGuardTask: proguard.Configuration configuration>;

        if $z0 == 0 goto label2;

        $r2 = null;

     label1:
        $r1.<proguard.Configuration: java.util.List warn> = $r2;

        return;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        goto label1;
    }
}
