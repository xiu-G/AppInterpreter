public class com.yellowbook.android2.mobile.intergrate.map.RotateView extends android.view.ViewGroup implements android.hardware.SensorEventListener
{
    private static final float SQ2;
    private float mHeading;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.yellowbook.android2.mobile.intergrate.map.RotateView r0;

        r0 := @this: com.yellowbook.android2.mobile.intergrate.map.RotateView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r1);

        r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: float mHeading> = 0.0F;

        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        int $i0;
        float $f0, $f1, $f2;
        android.graphics.Canvas $r1;
        com.yellowbook.android2.mobile.intergrate.map.RotateView r0;

        r0 := @this: com.yellowbook.android2.mobile.intergrate.map.RotateView;

        $r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke $r1.<android.graphics.Canvas: int save(int)>(1);

        $f0 = r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: float mHeading>;

        $f0 = neg $f0;

        $i0 = virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: int getWidth()>();

        $f1 = (float) $i0;

        $f1 = $f1 * 0.5F;

        $i0 = virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: int getHeight()>();

        $f2 = (float) $i0;

        $f2 = $f2 * 0.5F;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>($f0, $f1, $f2);

        specialinvoke r0.<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public void onAccuracyChanged(android.hardware.Sensor, int)
    {
        int $i0;
        com.yellowbook.android2.mobile.intergrate.map.RotateView r0;
        android.hardware.Sensor $r1;

        r0 := @this: com.yellowbook.android2.mobile.intergrate.map.RotateView;

        $r1 := @parameter0: android.hardware.Sensor;

        $i0 := @parameter1: int;

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7;
        android.view.View $r1;
        com.yellowbook.android2.mobile.intergrate.map.RotateView r0;
        boolean $z0;

        r0 := @this: com.yellowbook.android2.mobile.intergrate.map.RotateView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: int getWidth()>();

        $i1 = virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: int getHeight()>();

        $i2 = virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: int getChildCount()>();

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label2;

        $r1 = virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: android.view.View getChildAt(int)>($i3);

        $i7 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i6 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        i4 = $i0 - $i7;

        i4 = i4 / 2;

        i5 = $i1 - $i6;

        i5 = i5 / 2;

        $i7 = i4 + $i7;

        $i6 = i5 + $i6;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>(i4, i5, $i7, $i6);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        int $i0, $i1, $i2, $i3, i4;
        float $f0;
        android.view.View $r1;
        com.yellowbook.android2.mobile.intergrate.map.RotateView r0;

        r0 := @this: com.yellowbook.android2.mobile.intergrate.map.RotateView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: int getSuggestedMinimumWidth()>();

        $i2 = staticinvoke <com.yellowbook.android2.mobile.intergrate.map.RotateView: int getDefaultSize(int,int)>($i2, $i0);

        $i3 = virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: int getSuggestedMinimumHeight()>();

        $i3 = staticinvoke <com.yellowbook.android2.mobile.intergrate.map.RotateView: int getDefaultSize(int,int)>($i3, $i1);

        if $i2 <= $i3 goto label3;

        $f0 = (float) $i2;

        $f0 = $f0 * 1.4142135F;

        $i2 = (int) $f0;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);

     label1:
        $i3 = virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: int getChildCount()>();

        i4 = 0;

     label2:
        if i4 >= $i3 goto label4;

        $r1 = virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: android.view.View getChildAt(int)>(i4);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i2, $i2);

        i4 = i4 + 1;

        goto label2;

     label3:
        $f0 = (float) $i3;

        $f0 = $f0 * 1.4142135F;

        $i2 = (int) $f0;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);

        goto label1;

     label4:
        specialinvoke r0.<android.view.ViewGroup: void onMeasure(int,int)>($i0, $i1);

        return;
    }

    public void onSensorChanged(int, float[])
    {
        java.lang.Throwable $r2;
        int $i0;
        float $f0;
        float[] $r1;
        com.yellowbook.android2.mobile.intergrate.map.RotateView r0;

        r0 := @this: com.yellowbook.android2.mobile.intergrate.map.RotateView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: float[];

        entermonitor r0;

     label1:
        $f0 = $r1[0];

        r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: float mHeading> = $f0;

        virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: void invalidate()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onSensorChanged(android.hardware.SensorEvent)
    {
        java.lang.Throwable $r3;
        android.hardware.SensorEvent $r1;
        float $f0;
        float[] $r2;
        com.yellowbook.android2.mobile.intergrate.map.RotateView r0;

        r0 := @this: com.yellowbook.android2.mobile.intergrate.map.RotateView;

        $r1 := @parameter0: android.hardware.SensorEvent;

        entermonitor r0;

     label1:
        $r2 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r2[0];

        r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: float mHeading> = $f0;

        virtualinvoke r0.<com.yellowbook.android2.mobile.intergrate.map.RotateView: void invalidate()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <com.yellowbook.android2.mobile.intergrate.map.RotateView: float SQ2> = 1.4142135F;

        return;
    }
}
