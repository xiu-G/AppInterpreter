abstract class com.parse.codec.net.a extends java.lang.Object
{
    protected static final java.lang.String POSTFIX;
    protected static final java.lang.String PREFIX;
    protected static final char SEP;

    void <init>()
    {
        com.parse.codec.net.a r0;

        r0 := @this: com.parse.codec.net.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected java.lang.String decodeText(java.lang.String)
    {
        byte[] $r6;
        com.parse.codec.DecoderException $r7;
        com.parse.codec.net.a r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5, $r8;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.parse.codec.net.a;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("=?");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("?=");

        if $z0 != 0 goto label3;

     label2:
        $r7 = new com.parse.codec.DecoderException;

        specialinvoke $r7.<com.parse.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: malformed encoded content");

        throw $r7;

     label3:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = -2;

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(63, 2);

        if $i1 != $i0 goto label4;

        $r7 = new com.parse.codec.DecoderException;

        specialinvoke $r7.<com.parse.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: charset token not found");

        throw $r7;

     label4:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(2, $i1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label5;

        $r7 = new com.parse.codec.DecoderException;

        specialinvoke $r7.<com.parse.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: charset not specified");

        throw $r7;

     label5:
        $i1 = $i1 + 1;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(63, $i1);

        if $i2 != $i0 goto label6;

        $r7 = new com.parse.codec.DecoderException;

        specialinvoke $r7.<com.parse.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: encoding token not found");

        throw $r7;

     label6:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $r4 = virtualinvoke r0.<com.parse.codec.net.a: java.lang.String getEncoding()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 != 0 goto label7;

        $r7 = new com.parse.codec.DecoderException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("This codec cannot decode ");

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encoded content");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.parse.codec.DecoderException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label7:
        $i0 = $i2 + 1;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(63, $i0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r6 = staticinvoke <com.parse.codec.binary.StringUtils: byte[] getBytesUsAscii(java.lang.String)>($r1);

        $r6 = virtualinvoke r0.<com.parse.codec.net.a: byte[] doDecoding(byte[])>($r6);

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r6, $r2);

        return $r3;
    }

    protected abstract byte[] doDecoding(byte[]);

    protected abstract byte[] doEncoding(byte[]);

    protected java.lang.String encodeText(java.lang.String, java.lang.String)
    {
        com.parse.codec.net.a r0;
        byte[] $r5;
        java.lang.StringBuffer $r3;
        java.lang.String $r1, $r2, $r4;

        r0 := @this: com.parse.codec.net.a;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=?");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r4 = virtualinvoke r0.<com.parse.codec.net.a: java.lang.String getEncoding()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r2);

        $r5 = virtualinvoke r0.<com.parse.codec.net.a: byte[] doEncoding(byte[])>($r5);

        $r1 = staticinvoke <com.parse.codec.binary.StringUtils: java.lang.String newStringUsAscii(byte[])>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?=");

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    protected abstract java.lang.String getEncoding();

    public static void <clinit>()
    {
        <com.parse.codec.net.a: char SEP> = 63;

        <com.parse.codec.net.a: java.lang.String PREFIX> = "=?";

        <com.parse.codec.net.a: java.lang.String POSTFIX> = "?=";

        return;
    }
}
