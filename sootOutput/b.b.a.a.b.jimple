public class b.b.a.a.b extends b.b.a.a.c
{
    private final java.lang.Object a;
    private final java.util.concurrent.ExecutorService b;

    public void <init>()
    {
        b.b.a.a.b$a $r3;
        b.b.a.a.b r0;
        java.lang.Object $r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: b.b.a.a.b;

        specialinvoke r0.<b.b.a.a.c: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<b.b.a.a.b: java.lang.Object a> = $r2;

        $r3 = new b.b.a.a.b$a;

        specialinvoke $r3.<b.b.a.a.b$a: void <init>(b.b.a.a.b)>(r0);

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>(4, $r3);

        r0.<b.b.a.a.b: java.util.concurrent.ExecutorService b> = $r1;

        return;
    }

    public boolean a()
    {
        b.b.a.a.b r0;
        android.os.Looper $r1;
        java.lang.Thread $r2, $r3;

        r0 := @this: b.b.a.a.b;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r2 = virtualinvoke $r1.<android.os.Looper: java.lang.Thread getThread()>();

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r2 != $r3 goto label1;

        return 1;

     label1:
        return 0;
    }
}
