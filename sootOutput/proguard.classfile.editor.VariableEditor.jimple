public class proguard.classfile.editor.VariableEditor extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.attribute.visitor.AttributeVisitor
{
    private boolean[] deleted;
    private boolean modified;
    private int[] variableMap;
    private final proguard.classfile.editor.VariableRemapper variableRemapper;

    public void <init>()
    {
        proguard.classfile.editor.VariableRemapper $r3;
        proguard.classfile.editor.VariableEditor r0;
        int[] $r2;
        boolean[] $r1;

        r0 := @this: proguard.classfile.editor.VariableEditor;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        $r1 = newarray (boolean)[64];

        r0.<proguard.classfile.editor.VariableEditor: boolean[] deleted> = $r1;

        $r2 = newarray (int)[64];

        r0.<proguard.classfile.editor.VariableEditor: int[] variableMap> = $r2;

        $r3 = new proguard.classfile.editor.VariableRemapper;

        specialinvoke $r3.<proguard.classfile.editor.VariableRemapper: void <init>()>();

        r0.<proguard.classfile.editor.VariableEditor: proguard.classfile.editor.VariableRemapper variableRemapper> = $r3;

        return;
    }

    public void deleteVariable(int)
    {
        int $i0;
        boolean[] $r1;
        proguard.classfile.editor.VariableEditor r0;

        r0 := @this: proguard.classfile.editor.VariableEditor;

        $i0 := @parameter0: int;

        $r1 = r0.<proguard.classfile.editor.VariableEditor: boolean[] deleted>;

        $r1[$i0] = 1;

        r0.<proguard.classfile.editor.VariableEditor: boolean modified> = 1;

        return;
    }

    public boolean isDeleted(int)
    {
        proguard.classfile.editor.VariableEditor r0;
        int $i0;
        boolean[] $r1;
        boolean $z0;

        r0 := @this: proguard.classfile.editor.VariableEditor;

        $i0 := @parameter0: int;

        $r1 = r0.<proguard.classfile.editor.VariableEditor: boolean[] deleted>;

        $z0 = $r1[$i0];

        return $z0;
    }

    public void reset(int)
    {
        proguard.classfile.editor.VariableEditor r0;
        int $i0, $i1;
        boolean[] $r1;

        r0 := @this: proguard.classfile.editor.VariableEditor;

        $i0 := @parameter0: int;

        $r1 = r0.<proguard.classfile.editor.VariableEditor: boolean[] deleted>;

        $i1 = lengthof $r1;

        if $i1 >= $i0 goto label2;

        $r1 = newarray (boolean)[$i0];

        r0.<proguard.classfile.editor.VariableEditor: boolean[] deleted> = $r1;

     label1:
        r0.<proguard.classfile.editor.VariableEditor: boolean modified> = 0;

        return;

     label2:
        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label1;

        $r1 = r0.<proguard.classfile.editor.VariableEditor: boolean[] deleted>;

        $r1[$i1] = 0;

        $i1 = $i1 + 1;

        goto label3;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.classfile.editor.VariableEditor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.classfile.editor.VariableEditor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        return;
    }

    public void visitCodeAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute)
    {
        boolean[] $r5;
        proguard.classfile.editor.VariableRemapper $r6;
        proguard.classfile.editor.VariableEditor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int[] $r4;
        int $i0, $i1, $i2, $i3;
        proguard.classfile.Method $r2;
        boolean $z0;

        r0 := @this: proguard.classfile.editor.VariableEditor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 = 0;

        $z0 = r0.<proguard.classfile.editor.VariableEditor: boolean modified>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i1 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2maxLocals>;

        $r4 = r0.<proguard.classfile.editor.VariableEditor: int[] variableMap>;

        $i2 = lengthof $r4;

        if $i2 >= $i1 goto label2;

        $r4 = newarray (int)[$i1];

        r0.<proguard.classfile.editor.VariableEditor: int[] variableMap> = $r4;

     label2:
        $i2 = 0;

     label3:
        if $i2 >= $i1 goto label6;

        $r4 = r0.<proguard.classfile.editor.VariableEditor: int[] variableMap>;

        $r5 = r0.<proguard.classfile.editor.VariableEditor: boolean[] deleted>;

        $z0 = $r5[$i2];

        if $z0 == 0 goto label5;

        $i3 = $i0;

        $i0 = -1;

     label4:
        $r4[$i2] = $i0;

        $i2 = $i2 + 1;

        $i0 = $i3;

        goto label3;

     label5:
        $i3 = $i0 + 1;

        goto label4;

     label6:
        $r6 = r0.<proguard.classfile.editor.VariableEditor: proguard.classfile.editor.VariableRemapper variableRemapper>;

        $r4 = r0.<proguard.classfile.editor.VariableEditor: int[] variableMap>;

        virtualinvoke $r6.<proguard.classfile.editor.VariableRemapper: void setVariableMap(int[])>($r4);

        $r6 = r0.<proguard.classfile.editor.VariableEditor: proguard.classfile.editor.VariableRemapper variableRemapper>;

        virtualinvoke $r6.<proguard.classfile.editor.VariableRemapper: void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute)>($r1, $r2, $r3);

        $r3.<proguard.classfile.attribute.CodeAttribute: int u2maxLocals> = $i0;

        return;
    }
}
