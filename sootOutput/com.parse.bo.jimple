final class com.parse.bo extends com.parse.os.ParseAsyncTask
{
    final java.io.BufferedReader a;
    final com.parse.PushService b;
    final com.parse.PushService c;
    private java.io.BufferedReader d;

    void <init>(com.parse.PushService, java.io.BufferedReader, com.parse.PushService)
    {
        java.io.BufferedReader $r2;
        com.parse.bo r0;
        com.parse.PushService $r1, $r3;

        r0 := @this: com.parse.bo;

        $r1 := @parameter0: com.parse.PushService;

        $r2 := @parameter1: java.io.BufferedReader;

        $r3 := @parameter2: com.parse.PushService;

        r0.<com.parse.bo: com.parse.PushService c> = $r1;

        r0.<com.parse.bo: java.io.BufferedReader a> = $r2;

        r0.<com.parse.bo: com.parse.PushService b> = $r3;

        specialinvoke r0.<com.parse.os.ParseAsyncTask: void <init>()>();

        return;
    }

    private transient java.lang.String a()
    {
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19;
        java.net.Socket $r5;
        com.parse.bo r0;
        int $i0;
        java.lang.String $r4;
        boolean $z0;
        java.util.concurrent.Semaphore $r7;
        java.net.InetSocketAddress $r6;
        java.io.InputStreamReader $r14;
        com.parse.PushService $r2, $r8;
        java.lang.StringBuilder $r3;
        java.io.BufferedReader $r1;
        java.io.InputStream $r15;

        r0 := @this: com.parse.bo;

        $r1 = r0.<com.parse.bo: java.io.BufferedReader a>;

        if $r1 == null goto label02;

        $r1 = r0.<com.parse.bo: java.io.BufferedReader a>;

        r0.<com.parse.bo: java.io.BufferedReader d> = $r1;

     label01:
        $r2 = r0.<com.parse.bo: com.parse.PushService c>;

        $z0 = staticinvoke <com.parse.PushService: boolean access$200(com.parse.PushService)>($r2);

        if $z0 == 0 goto label36;

        return null;

     label02:
        $i0 = staticinvoke <com.parse.PushService: int access$100()>();

        if $i0 <= 0 goto label06;

        $r3 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("sleeping for ");

        $i0 = staticinvoke <com.parse.PushService: int access$100()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logI(java.lang.String,java.lang.String)>("com.parse.PushService", $r4);

        $i0 = staticinvoke <com.parse.PushService: int access$100()>();

     label04:
        $i0 = $i0 * 1000;

     label05:
        staticinvoke <com.parse.PushService: void sleep(int)>($i0);

     label06:
        $r2 = r0.<com.parse.bo: com.parse.PushService c>;

        $z0 = staticinvoke <com.parse.PushService: boolean access$200(com.parse.PushService)>($r2);

        if $z0 != 0 goto label43;

        $r2 = r0.<com.parse.bo: com.parse.PushService c>;

        staticinvoke <com.parse.PushService: void access$300(com.parse.PushService)>($r2);

        $r5 = <com.parse.PushService: java.net.Socket socket>;

        if $r5 == null goto label08;

        $r5 = <com.parse.PushService: java.net.Socket socket>;

     label07:
        virtualinvoke $r5.<java.net.Socket: void close()>();

     label08:
        $r3 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("connecting to push server at ");

        $r4 = staticinvoke <com.parse.PushService: java.lang.String access$400()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label10:
        $r2 = r0.<com.parse.bo: com.parse.PushService c>;

     label11:
        $i0 = staticinvoke <com.parse.PushService: int access$500(com.parse.PushService)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.PushService", $r4);

     label12:
        $r6 = new java.net.InetSocketAddress;

     label13:
        $r4 = staticinvoke <com.parse.PushService: java.lang.String access$400()>();

     label14:
        $r2 = r0.<com.parse.bo: com.parse.PushService c>;

     label15:
        $i0 = staticinvoke <com.parse.PushService: int access$500(com.parse.PushService)>($r2);

        specialinvoke $r6.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r4, $i0);

     label16:
        $r5 = new java.net.Socket;

     label17:
        specialinvoke $r5.<java.net.Socket: void <init>()>();

        virtualinvoke $r5.<java.net.Socket: void setKeepAlive(boolean)>(1);

     label18:
        $r7 = <com.parse.PushService: java.util.concurrent.Semaphore sleepSemaphore>;

        if $r7 != null goto label26;

     label19:
        virtualinvoke $r5.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r6, 5000);

     label20:
        $r2 = r0.<com.parse.bo: com.parse.PushService c>;

        entermonitor $r2;

     label21:
        $r8 = r0.<com.parse.bo: com.parse.PushService c>;

        $z0 = staticinvoke <com.parse.PushService: boolean access$200(com.parse.PushService)>($r8);

        if $z0 == 0 goto label30;

        exitmonitor $r2;

     label22:
        return null;

     label23:
        $r9 := @caughtexception;

        exitmonitor $r2;

        throw $r9;

     label24:
        $r10 := @caughtexception;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", "sleep interrupted", $r10);

        return null;

     label25:
        $r11 := @caughtexception;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", "error closing socket", $r11);

        goto label08;

     label26:
        virtualinvoke $r5.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r6, 50);

     label27:
        goto label20;

     label28:
        $r12 := @caughtexception;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", "unknown host", $r12);

        return null;

     label29:
        $r13 := @caughtexception;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", "could not connect to push server", $r13);

        return null;

     label30:
        <com.parse.PushService: java.net.Socket socket> = $r5;

        exitmonitor $r2;

     label31:
        $r1 = new java.io.BufferedReader;

        $r14 = new java.io.InputStreamReader;

        $r5 = <com.parse.PushService: java.net.Socket socket>;

     label32:
        $r15 = virtualinvoke $r5.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r15, "UTF-8");

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r14, 8192);

     label33:
        r0.<com.parse.bo: java.io.BufferedReader d> = $r1;

        $r2 = r0.<com.parse.bo: com.parse.PushService c>;

        $z0 = staticinvoke <com.parse.PushService: boolean access$200(com.parse.PushService)>($r2);

        if $z0 != 0 goto label43;

        $r2 = r0.<com.parse.bo: com.parse.PushService b>;

        $z0 = staticinvoke <com.parse.PushService: boolean access$600(android.content.Context)>($r2);

        if $z0 != 0 goto label01;

        return null;

     label34:
        $r16 := @caughtexception;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", "unsupported encoding", $r16);

        return null;

     label35:
        $r17 := @caughtexception;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", "could not construct reader", $r17);

        return null;

     label36:
        staticinvoke <com.parse.PushService: void resetDelay()>();

     label37:
        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.PushService", "waiting for a push");

     label38:
        $r1 = r0.<com.parse.bo: java.io.BufferedReader d>;

     label39:
        $r4 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label40:
        return $r4;

     label41:
        $r18 := @caughtexception;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", "Socket error in push service (usually just a timeout)", $r18);

        return null;

     label42:
        $r19 := @caughtexception;

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", "could not read from socket", $r19);

     label43:
        return null;

        catch java.lang.InterruptedException from label03 to label04 with label24;
        catch java.lang.InterruptedException from label05 to label06 with label24;
        catch java.io.IOException from label07 to label08 with label25;
        catch java.net.UnknownHostException from label09 to label10 with label28;
        catch java.net.UnknownHostException from label11 to label12 with label28;
        catch java.net.UnknownHostException from label13 to label14 with label28;
        catch java.net.UnknownHostException from label15 to label16 with label28;
        catch java.net.UnknownHostException from label17 to label18 with label28;
        catch java.net.UnknownHostException from label19 to label20 with label28;
        catch java.io.IOException from label09 to label10 with label29;
        catch java.io.IOException from label11 to label12 with label29;
        catch java.io.IOException from label13 to label14 with label29;
        catch java.io.IOException from label15 to label16 with label29;
        catch java.io.IOException from label17 to label18 with label29;
        catch java.io.IOException from label19 to label20 with label29;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.net.UnknownHostException from label26 to label27 with label28;
        catch java.io.IOException from label26 to label27 with label29;
        catch java.lang.Throwable from label30 to label31 with label23;
        catch java.io.UnsupportedEncodingException from label32 to label33 with label34;
        catch java.io.IOException from label32 to label33 with label35;
        catch java.net.SocketException from label37 to label38 with label41;
        catch java.net.SocketException from label39 to label40 with label41;
        catch java.io.IOException from label37 to label38 with label42;
        catch java.io.IOException from label39 to label40 with label42;
    }

    protected final java.lang.Object doInBackground(java.lang.Object[])
    {
        java.lang.Object[] $r1;
        java.lang.String $r2;
        com.parse.bo r0;

        r0 := @this: com.parse.bo;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = specialinvoke r0.<com.parse.bo: java.lang.String a()>();

        return $r2;
    }

    protected final void onPostExecute(java.lang.Object)
    {
        org.json.JSONTokener $r4;
        com.parse.bo r0;
        com.parse.PushService $r3;
        org.json.JSONException $r7;
        org.json.JSONObject $r5;
        java.lang.Object $r1;
        java.lang.StringBuilder $r8;
        java.lang.String $r2;
        java.io.BufferedReader $r6;
        boolean $z0;

        r0 := @this: com.parse.bo;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) $r1;

        $r3 = r0.<com.parse.bo: com.parse.PushService c>;

        $z0 = staticinvoke <com.parse.PushService: boolean access$200(com.parse.PushService)>($r3);

        if $z0 != 0 goto label5;

        if $r2 != null goto label1;

        $r3 = r0.<com.parse.bo: com.parse.PushService c>;

        staticinvoke <com.parse.PushService: void access$700(com.parse.PushService,java.io.BufferedReader)>($r3, null);

        return;

     label1:
        $r4 = new org.json.JSONTokener;

        specialinvoke $r4.<org.json.JSONTokener: void <init>(java.lang.String)>($r2);

        $r5 = new org.json.JSONObject;

     label2:
        specialinvoke $r5.<org.json.JSONObject: void <init>(org.json.JSONTokener)>($r4);

     label3:
        $r3 = r0.<com.parse.bo: com.parse.PushService b>;

        staticinvoke <com.parse.ap: void a(com.parse.PushService,org.json.JSONObject)>($r3, $r5);

        $r3 = r0.<com.parse.bo: com.parse.PushService c>;

        $r6 = r0.<com.parse.bo: java.io.BufferedReader d>;

        staticinvoke <com.parse.PushService: void access$700(com.parse.PushService,java.io.BufferedReader)>($r3, $r6);

        return;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("bad json: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.PushService", $r2, $r7);

        $r3 = r0.<com.parse.bo: com.parse.PushService c>;

        $r6 = r0.<com.parse.bo: java.io.BufferedReader d>;

        staticinvoke <com.parse.PushService: void access$700(com.parse.PushService,java.io.BufferedReader)>($r3, $r6);

     label5:
        return;

        catch org.json.JSONException from label2 to label3 with label4;
    }
}
