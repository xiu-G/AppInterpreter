public class com.inmobi.androidsdk.ai.controller.util.AVPlayer extends android.widget.VideoView implements android.media.MediaPlayer$OnCompletionListener, android.media.MediaPlayer$OnErrorListener, android.media.MediaPlayer$OnPreparedListener
{
    private static java.lang.String LOG_TAG;
    private static java.lang.String transientText;
    private android.media.AudioManager aManager;
    private java.lang.String contentURL;
    private boolean isReleased;
    private com.inmobi.androidsdk.ai.controller.util.AVPlayerListener listener;
    private int mutedVolume;
    private com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties;
    private android.widget.RelativeLayout transientLayout;

    static void <clinit>()
    {
        <com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String transientText> = "Loading. Please Wait..";

        <com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String LOG_TAG> = "mraid Player";

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.Object $r2;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        android.media.AudioManager $r3;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.VideoView: void <init>(android.content.Context)>($r1);

        $r1 = virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r3 = (android.media.AudioManager) $r2;

        r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.media.AudioManager aManager> = $r3;

        return;
    }

    void addTransientMessage()
    {
        android.content.Context $r5;
        android.view.ViewParent $r8;
        android.widget.RelativeLayout$LayoutParams r1, $r12;
        int $i0, $i1;
        java.lang.String $r7;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r6;
        android.view.ViewGroup r9;
        android.widget.TextView r2, $r11;
        com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties $r3;
        android.widget.RelativeLayout $r4, $r10;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r3 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties>;

        $z0 = $r3.<com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties: boolean inline>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r10 = new android.widget.RelativeLayout;

        $r5 = virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.content.Context getContext()>();

        specialinvoke $r10.<android.widget.RelativeLayout: void <init>(android.content.Context)>($r5);

        r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.widget.RelativeLayout transientLayout> = $r10;

        $r4 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.widget.RelativeLayout transientLayout>;

        $r6 = virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        virtualinvoke $r4.<android.widget.RelativeLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r6);

        $r11 = new android.widget.TextView;

        r2 = $r11;

        $r5 = virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.content.Context getContext()>();

        specialinvoke $r11.<android.widget.TextView: void <init>(android.content.Context)>($r5);

        $r7 = <com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String transientText>;

        virtualinvoke r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

        $i0 = -1;

        virtualinvoke r2.<android.widget.TextView: void setTextColor(int)>($i0);

        $r12 = new android.widget.RelativeLayout$LayoutParams;

        r1 = $r12;

        $i0 = -2;

        $i1 = -2;

        specialinvoke $r12.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        virtualinvoke r1.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(13);

        $r4 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.widget.RelativeLayout transientLayout>;

        virtualinvoke $r4.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r2, r1);

        $r8 = virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.view.ViewParent getParent()>();

        r9 = (android.view.ViewGroup) $r8;

        $r4 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.widget.RelativeLayout transientLayout>;

        virtualinvoke r9.<android.view.ViewGroup: void addView(android.view.View)>($r4);

        return;
    }

    void clearTransientMessage()
    {
        android.view.ViewParent $r1;
        android.widget.RelativeLayout $r2;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        android.view.ViewGroup r3;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.widget.RelativeLayout transientLayout>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.view.ViewParent getParent()>();

        r3 = (android.view.ViewGroup) $r1;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.widget.RelativeLayout transientLayout>;

        virtualinvoke r3.<android.view.ViewGroup: void removeView(android.view.View)>($r2);

     label1:
        return;
    }

    void displayControl()
    {
        android.content.Context $r3;
        com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties $r2;
        android.widget.MediaController r1;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties>;

        $z0 = virtualinvoke $r2.<com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties: boolean showControl()>();

        if $z0 == 0 goto label1;

        r1 = new android.widget.MediaController;

        $r3 = virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.content.Context getContext()>();

        specialinvoke r1.<android.widget.MediaController: void <init>(android.content.Context)>($r3);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void setMediaController(android.widget.MediaController)>(r1);

        virtualinvoke r1.<android.widget.MediaController: void setAnchorView(android.view.View)>(r0);

     label1:
        return;
    }

    void loadContent()
    {
        android.net.Uri $r3;
        java.lang.String $r1;
        com.inmobi.androidsdk.ai.controller.util.AVPlayerListener $r2;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String contentURL>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String contentURL> = $r1;

        $r1 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String contentURL>;

        $r1 = staticinvoke <com.inmobi.androidsdk.ai.controller.util.Utils: java.lang.String convert(java.lang.String)>($r1);

        r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String contentURL> = $r1;

        $r1 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String contentURL>;

        if $r1 != null goto label1;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.util.AVPlayerListener listener>;

        if $r2 == null goto label1;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void removeView()>();

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.util.AVPlayerListener listener>;

        interfaceinvoke $r2.<com.inmobi.androidsdk.ai.controller.util.AVPlayerListener: void onError()>();

        return;

     label1:
        $r1 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String contentURL>;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void setVideoURI(android.net.Uri)>($r3);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void displayControl()>();

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void startContent()>();

        return;
    }

    public void onCompletion(android.media.MediaPlayer)
    {
        com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties $r2;
        android.media.MediaPlayer $r1;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 := @parameter0: android.media.MediaPlayer;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties>;

        $z0 = virtualinvoke $r2.<com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties: boolean doLoop()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void start()>();

        return;

     label1:
        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties>;

        $z0 = virtualinvoke $r2.<com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties: boolean exitOnComplete()>();

        if $z0 != 0 goto label2;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties>;

        $z0 = $r2.<com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties: boolean inline>;

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void releasePlayer()>();

     label3:
        return;
    }

    public boolean onError(android.media.MediaPlayer, int, int)
    {
        android.media.MediaPlayer $r1;
        com.inmobi.androidsdk.ai.controller.util.AVPlayerListener $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r2, $r4;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 := @parameter0: android.media.MediaPlayer;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = <com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String LOG_TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Player error : ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r4);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void clearTransientMessage()>();

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void removeView()>();

        $r5 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.util.AVPlayerListener listener>;

        if $r5 == null goto label1;

        $r5 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.util.AVPlayerListener listener>;

        interfaceinvoke $r5.<com.inmobi.androidsdk.ai.controller.util.AVPlayerListener: void onError()>();

     label1:
        return 0;
    }

    public void onPrepared(android.media.MediaPlayer)
    {
        android.media.MediaPlayer $r1;
        com.inmobi.androidsdk.ai.controller.util.AVPlayerListener $r2;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 := @parameter0: android.media.MediaPlayer;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void clearTransientMessage()>();

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.util.AVPlayerListener listener>;

        if $r2 == null goto label1;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.util.AVPlayerListener listener>;

        interfaceinvoke $r2.<com.inmobi.androidsdk.ai.controller.util.AVPlayerListener: void onPrepared()>();

     label1:
        return;
    }

    public void playAudio()
    {
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void loadContent()>();

        return;
    }

    public void playVideo()
    {
        com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties $r1;
        int $i0;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        boolean $z0;
        android.media.AudioManager $r2;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties>;

        $z0 = virtualinvoke $r1.<com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties: boolean doMute()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.media.AudioManager aManager>;

        $i0 = virtualinvoke $r2.<android.media.AudioManager: int getStreamVolume(int)>(3);

        r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: int mutedVolume> = $i0;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.media.AudioManager aManager>;

        virtualinvoke $r2.<android.media.AudioManager: void setStreamVolume(int,int,int)>(3, 0, 4);

     label1:
        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void loadContent()>();

        return;
    }

    public void releasePlayer()
    {
        com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties $r1;
        com.inmobi.androidsdk.ai.controller.util.AVPlayerListener $r2;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $z0 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: boolean isReleased>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: boolean isReleased> = 1;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void stopPlayback()>();

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void removeView()>();

        $r1 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties>;

        if $r1 == null goto label2;

        $r1 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties>;

        $z0 = virtualinvoke $r1.<com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties: boolean doMute()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void unMute()>();

     label2:
        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.util.AVPlayerListener listener>;

        if $r2 == null goto label3;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.util.AVPlayerListener listener>;

        interfaceinvoke $r2.<com.inmobi.androidsdk.ai.controller.util.AVPlayerListener: void onComplete()>();

     label3:
        return;
    }

    void removeView()
    {
        android.view.ViewParent $r1;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        android.view.ViewGroup r2;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 = virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.view.ViewParent getParent()>();

        r2 = (android.view.ViewGroup) $r1;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ViewGroup: void removeView(android.view.View)>(r0);

     label1:
        return;
    }

    public void setListener(com.inmobi.androidsdk.ai.controller.util.AVPlayerListener)
    {
        com.inmobi.androidsdk.ai.controller.util.AVPlayerListener $r1;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 := @parameter0: com.inmobi.androidsdk.ai.controller.util.AVPlayerListener;

        r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.util.AVPlayerListener listener> = $r1;

        return;
    }

    public void setPlayData(com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties, java.lang.String)
    {
        java.lang.String $r2;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties $r1;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 := @parameter0: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties;

        $r2 := @parameter1: java.lang.String;

        r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: boolean isReleased> = 0;

        r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties> = $r1;

        r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: java.lang.String contentURL> = $r2;

        return;
    }

    void startContent()
    {
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        boolean $z0;
        com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties $r1;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>(r0);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>(r0);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>(r0);

        $r1 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties>;

        $z0 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties: boolean inline>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void addTransientMessage()>();

     label1:
        $r1 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties playProperties>;

        $z0 = virtualinvoke $r1.<com.inmobi.androidsdk.ai.controller.JSController$PlayerProperties: boolean isAutoPlay()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void start()>();

     label2:
        return;
    }

    void unMute()
    {
        int $i0;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer r0;
        android.media.AudioManager $r1;

        r0 := @this: com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: android.media.AudioManager aManager>;

        $i0 = r0.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: int mutedVolume>;

        virtualinvoke $r1.<android.media.AudioManager: void setStreamVolume(int,int,int)>(3, $i0, 4);

        return;
    }
}
