public class proguard.classfile.constant.Utf8Constant extends proguard.classfile.constant.Constant
{
    private static final int THREE_BYTE_CONSTANT1;
    private static final int THREE_BYTE_CONSTANT2;
    private static final int THREE_BYTE_CONSTANT3;
    private static final char THREE_BYTE_LIMIT;
    private static final int THREE_BYTE_MASK1;
    private static final int THREE_BYTE_MASK2;
    private static final int THREE_BYTE_MASK3;
    private static final int THREE_BYTE_SHIFT1;
    private static final int THREE_BYTE_SHIFT2;
    private static final int TWO_BYTE_CONSTANT1;
    private static final int TWO_BYTE_CONSTANT2;
    private static final char TWO_BYTE_LIMIT;
    private static final int TWO_BYTE_MASK1;
    private static final int TWO_BYTE_MASK2;
    private static final int TWO_BYTE_SHIFT1;
    private byte[] bytes;
    private java.lang.String string;

    public void <init>()
    {
        proguard.classfile.constant.Utf8Constant r0;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

        specialinvoke r0.<proguard.classfile.constant.Constant: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        proguard.classfile.constant.Utf8Constant r0;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<proguard.classfile.constant.Constant: void <init>()>();

        r0.<proguard.classfile.constant.Utf8Constant: byte[] bytes> = null;

        r0.<proguard.classfile.constant.Utf8Constant: java.lang.String string> = $r1;

        return;
    }

    private byte[] getByteArrayRepresentation(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        byte[] $r2;
        char $c3;
        byte $b4;
        int $i0, $i1, $i2, $i5, $i6;
        java.lang.String $r1;
        proguard.classfile.constant.Utf8Constant r0;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = 0;

        $i2 = 0;

     label01:
        if $i1 >= $i0 goto label06;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        if $c3 != 0 goto label03;

        $b4 = 2;

     label02:
        $i2 = $i2 + $b4;

        $i1 = $i1 + 1;

        goto label01;

     label03:
        $i5 = (int) $c3;

        if $i5 >= 128 goto label04;

        $b4 = 1;

        goto label02;

     label04:
        $i5 = (int) $c3;

        if $i5 >= 2048 goto label05;

        $b4 = 2;

        goto label02;

     label05:
        $b4 = 3;

        goto label02;

     label06:
        $r2 = newarray (byte)[$i2];

        $i1 = 0;

        $i2 = 0;

     label07:
        if $i1 >= $i0 goto label12;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        if $c3 != 0 goto label09;

        $i5 = $i2 + 1;

        $r2[$i2] = -64;

        $i2 = $i5 + 1;

        $r2[$i5] = -128;

     label08:
        $i1 = $i1 + 1;

        goto label07;

     label09:
        $i5 = (int) $c3;

        if $i5 >= 128 goto label10;

        $b4 = (byte) $c3;

        $r2[$i2] = $b4;

        $i2 = $i2 + 1;

        goto label08;

     label10:
        $i5 = (int) $c3;

        if $i5 >= 2048 goto label11;

        $i5 = $i2 + 1;

        $i6 = (int) $c3;

        $i6 = $i6 >>> 6;

        $i6 = $i6 & 31;

        $i6 = $i6 | 192;

        $b4 = (byte) $i6;

        $r2[$i2] = $b4;

        $i2 = $i5 + 1;

        $c3 = $c3 & 63;

        $c3 = $c3 | 128;

        $b4 = (byte) $c3;

        $r2[$i5] = $b4;

        goto label08;

     label11:
        $i5 = $i2 + 1;

        $i6 = (int) $c3;

        $i6 = $i6 >>> 12;

        $i6 = $i6 & 15;

        $i6 = $i6 | 224;

        $b4 = (byte) $i6;

        $r2[$i2] = $b4;

        $i2 = $i5 + 1;

        $i6 = (int) $c3;

        $i6 = $i6 >>> 6;

        $i6 = $i6 & 63;

        $i6 = $i6 | 128;

        $b4 = (byte) $i6;

        $r2[$i5] = $b4;

        $c3 = $c3 & 63;

        $c3 = $c3 | 128;

        $b4 = (byte) $c3;

        $r2[$i2] = $b4;

        $i2 = $i2 + 1;

        goto label08;

     label12:
        return $r2;
    }

    private java.lang.String getStringRepresentation(byte[]) throws java.io.UnsupportedEncodingException
    {
        byte[] $r1;
        short $s5, $s8;
        byte $b4;
        java.lang.StringBuffer $r4, $r6;
        int $i0, $i1, $i2, $i3, $i6;
        java.lang.String $r5, $r7;
        proguard.classfile.constant.Utf8Constant r0;
        char $c7;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        char[] $r2;
        java.io.UnsupportedEncodingException $r8;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $r2 = newarray (char)[$i0];

        $i1 = 0;

        $i2 = 0;

     label01:
        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label14;

        $i3 = $i1 + 1;

        $b4 = $r1[$i1];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i0 = $i2 + 1;

        $i1 = (int) $s5;

        if $i1 >= 192 goto label05;

        $i6 = (int) $s5;

     label02:
        $c7 = (char) $i6;

     label03:
        $r2[$i2] = $c7;

     label04:
        $i1 = $i3;

        $i2 = $i0;

        goto label01;

     label05:
        $i1 = (int) $s5;

        if $i1 >= 224 goto label08;

        $s8 = $s5 & 31;

        $i1 = (int) $s8;

        $i6 = $i1 << 6;

        $i1 = $i3 + 1;

     label06:
        $b4 = $r1[$i3];

     label07:
        $b4 = $b4 & 63;

        $i3 = (int) $b4;

        $i6 = $i3 | $i6;

        $i3 = $i1;

        goto label02;

     label08:
        $s8 = $s5 & 15;

        $i1 = (int) $s8;

        $i6 = $i1 << 12;

        $i1 = $i3 + 1;

     label09:
        $b4 = $r1[$i3];

     label10:
        $b4 = $b4 & 63;

        $i3 = (int) $b4;

        $i3 = $i3 << 6;

        $i6 = $i3 | $i6;

        $i3 = $i1 + 1;

     label11:
        $b4 = $r1[$i1];

     label12:
        $b4 = $b4 & 63;

        $i1 = (int) $b4;

        $i6 = $i6 | $i1;

        goto label02;

     label13:
        $r3 := @caughtexception;

        $r8 = new java.io.UnsupportedEncodingException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Missing UTF-8 bytes after initial byte [0x");

        $i2 = (int) $s5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] in string [");

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label14:
        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i2);

        return $r7;

        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label13;
        catch java.lang.ArrayIndexOutOfBoundsException from label06 to label07 with label13;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label13;
        catch java.lang.ArrayIndexOutOfBoundsException from label11 to label12 with label13;
    }

    private void switchToByteArrayRepresentation() throws java.io.UnsupportedEncodingException
    {
        byte[] $r1;
        java.lang.String $r2;
        proguard.classfile.constant.Utf8Constant r0;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

        $r1 = r0.<proguard.classfile.constant.Utf8Constant: byte[] bytes>;

        if $r1 != null goto label1;

        $r2 = r0.<proguard.classfile.constant.Utf8Constant: java.lang.String string>;

        $r1 = specialinvoke r0.<proguard.classfile.constant.Utf8Constant: byte[] getByteArrayRepresentation(java.lang.String)>($r2);

        r0.<proguard.classfile.constant.Utf8Constant: byte[] bytes> = $r1;

        r0.<proguard.classfile.constant.Utf8Constant: java.lang.String string> = null;

     label1:
        return;
    }

    private void switchToStringRepresentation() throws java.io.UnsupportedEncodingException
    {
        byte[] $r2;
        java.lang.String $r1;
        proguard.classfile.constant.Utf8Constant r0;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

        $r1 = r0.<proguard.classfile.constant.Utf8Constant: java.lang.String string>;

        if $r1 != null goto label1;

        $r2 = r0.<proguard.classfile.constant.Utf8Constant: byte[] bytes>;

        $r1 = specialinvoke r0.<proguard.classfile.constant.Utf8Constant: java.lang.String getStringRepresentation(byte[])>($r2);

        r0.<proguard.classfile.constant.Utf8Constant: java.lang.String string> = $r1;

        r0.<proguard.classfile.constant.Utf8Constant: byte[] bytes> = null;

     label1:
        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.constant.visitor.ConstantVisitor)
    {
        proguard.classfile.constant.Utf8Constant r0;
        proguard.classfile.constant.visitor.ConstantVisitor $r2;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.visitor.ConstantVisitor;

        interfaceinvoke $r2.<proguard.classfile.constant.visitor.ConstantVisitor: void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant)>($r1, r0);

        return;
    }

    public byte[] getBytes()
    {
        java.lang.Throwable $r2;
        byte[] r3;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;
        proguard.classfile.constant.Utf8Constant r0;
        java.io.UnsupportedEncodingException $r5;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

     label1:
        specialinvoke r0.<proguard.classfile.constant.Utf8Constant: void switchToByteArrayRepresentation()>();

     label2:
        r3 = r0.<proguard.classfile.constant.Utf8Constant: byte[] bytes>;

        return r3;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.UnsupportedEncodingException) $r2;

        $r1 = virtualinvoke $r5.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.String getString()
    {
        java.lang.Throwable $r2;
        java.lang.String $r1;
        java.lang.RuntimeException $r3;
        proguard.classfile.constant.Utf8Constant r0;
        java.io.UnsupportedEncodingException $r4;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

     label1:
        specialinvoke r0.<proguard.classfile.constant.Utf8Constant: void switchToStringRepresentation()>();

     label2:
        $r1 = r0.<proguard.classfile.constant.Utf8Constant: java.lang.String string>;

        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r4 = (java.io.UnsupportedEncodingException) $r2;

        $r1 = virtualinvoke $r4.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public int getTag()
    {
        proguard.classfile.constant.Utf8Constant r0;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

        return 1;
    }

    public void setBytes(byte[])
    {
        byte[] $r1;
        proguard.classfile.constant.Utf8Constant r0;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

        $r1 := @parameter0: byte[];

        r0.<proguard.classfile.constant.Utf8Constant: byte[] bytes> = $r1;

        r0.<proguard.classfile.constant.Utf8Constant: java.lang.String string> = null;

        return;
    }

    public void setString(java.lang.String)
    {
        java.lang.String $r1;
        proguard.classfile.constant.Utf8Constant r0;

        r0 := @this: proguard.classfile.constant.Utf8Constant;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.classfile.constant.Utf8Constant: byte[] bytes> = null;

        r0.<proguard.classfile.constant.Utf8Constant: java.lang.String string> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <proguard.classfile.constant.Utf8Constant: int TWO_BYTE_SHIFT1> = 6;

        <proguard.classfile.constant.Utf8Constant: int TWO_BYTE_MASK2> = 63;

        <proguard.classfile.constant.Utf8Constant: int TWO_BYTE_MASK1> = 31;

        <proguard.classfile.constant.Utf8Constant: char TWO_BYTE_LIMIT> = 128;

        <proguard.classfile.constant.Utf8Constant: int TWO_BYTE_CONSTANT2> = 128;

        <proguard.classfile.constant.Utf8Constant: int TWO_BYTE_CONSTANT1> = 192;

        <proguard.classfile.constant.Utf8Constant: int THREE_BYTE_SHIFT2> = 6;

        <proguard.classfile.constant.Utf8Constant: int THREE_BYTE_SHIFT1> = 12;

        <proguard.classfile.constant.Utf8Constant: int THREE_BYTE_MASK3> = 63;

        <proguard.classfile.constant.Utf8Constant: int THREE_BYTE_MASK2> = 63;

        <proguard.classfile.constant.Utf8Constant: int THREE_BYTE_MASK1> = 15;

        <proguard.classfile.constant.Utf8Constant: char THREE_BYTE_LIMIT> = 2048;

        <proguard.classfile.constant.Utf8Constant: int THREE_BYTE_CONSTANT3> = 128;

        <proguard.classfile.constant.Utf8Constant: int THREE_BYTE_CONSTANT2> = 128;

        <proguard.classfile.constant.Utf8Constant: int THREE_BYTE_CONSTANT1> = 224;

        return;
    }
}
