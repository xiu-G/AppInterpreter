public class com.altsoldev.preciousmetaltracker.db.DatabaseHelper extends com.altsoldev.preciousmetaltracker.db.DatabaseHelperCore
{
    private java.lang.String dbName;

    public void <init>(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        java.lang.String $r2;
        com.altsoldev.preciousmetaltracker.db.DatabaseHelper r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.DatabaseHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelperCore: void <init>(android.content.Context,java.lang.String)>($r1, "gspc.db");

        r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: java.lang.String dbName> = null;

        r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: java.lang.String dbName> = "gspc.db";

        return;
    }

    private boolean checkDataBase()
    {
        java.lang.Throwable r9, $r10, r11;
        android.content.Context $r2;
        android.database.sqlite.SQLiteDatabase r1, $r5;
        android.database.sqlite.SQLiteException $r14;
        com.altsoldev.preciousmetaltracker.db.DatabaseHelper r0;
        int $i0;
        java.lang.String $r3;
        android.database.Cursor r6, $r8;
        android.database.SQLException $r13;
        java.io.File $r4;
        java.lang.StringBuilder $r7, $r12;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.DatabaseHelper;

        r1 = null;

        $r2 = r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: android.content.Context myContext>;

        $r3 = r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: java.lang.String dbName>;

     label01:
        $r4 = virtualinvoke $r2.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.io.File: java.lang.String getPath()>();

        $r5 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r3, null, 0);

     label02:
        r1 = $r5;

        if $r5 == null goto label35;

        r6 = null;

     label03:
        $r12 = new java.lang.StringBuilder;

     label04:
        $r7 = $r12;

     label05:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("select DISTINCT tbl_name from sqlite_master where tbl_name = \'");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adproperties");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r3, null);

     label06:
        r6 = $r8;

        if $r8 == null goto label18;

     label07:
        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getCount()>();

     label08:
        if $i0 <= 0 goto label15;

     label09:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label10:
        if $r8 == null goto label12;

     label11:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label12:
        if $r5 == null goto label35;

     label13:
        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label14:
        return 1;

     label15:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label16:
        if $r8 == null goto label18;

     label17:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label18:
        if $r5 == null goto label20;

     label19:
        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label20:
        return 0;

     label21:
        r9 := @caughtexception;

     label22:
        $r13 = (android.database.SQLException) r9;

        virtualinvoke $r13.<android.database.SQLException: void printStackTrace()>();

     label23:
        if r6 == null goto label25;

     label24:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label25:
        if $r5 == null goto label27;

     label26:
        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label27:
        if r1 == null goto label34;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void close()>();

        return 1;

     label28:
        $r10 := @caughtexception;

        if r6 == null goto label30;

     label29:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label30:
        if $r5 == null goto label32;

     label31:
        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label32:
        throw $r10;

     label33:
        r11 := @caughtexception;

        $r14 = (android.database.sqlite.SQLiteException) r11;

        virtualinvoke $r14.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        goto label27;

     label34:
        return 0;

     label35:
        return 1;

        catch android.database.sqlite.SQLiteException from label01 to label02 with label33;
        catch android.database.SQLException from label05 to label06 with label21;
        catch android.database.SQLException from label07 to label08 with label21;
        catch android.database.SQLException from label09 to label10 with label21;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch android.database.sqlite.SQLiteException from label11 to label12 with label33;
        catch android.database.sqlite.SQLiteException from label13 to label14 with label33;
        catch android.database.SQLException from label15 to label16 with label21;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch android.database.sqlite.SQLiteException from label17 to label18 with label33;
        catch android.database.sqlite.SQLiteException from label19 to label20 with label33;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch android.database.sqlite.SQLiteException from label24 to label25 with label33;
        catch android.database.sqlite.SQLiteException from label26 to label27 with label33;
        catch android.database.sqlite.SQLiteException from label29 to label30 with label33;
        catch android.database.sqlite.SQLiteException from label31 to label33 with label33;
    }

    public void copyDataBase() throws java.io.IOException
    {
        byte[] r1;
        android.content.Context $r3;
        java.io.FileOutputStream r2;
        java.io.File $r7;
        android.content.res.AssetManager $r4;
        com.altsoldev.preciousmetaltracker.db.DatabaseHelper r0;
        int $i0;
        java.lang.String $r5;
        java.io.InputStream $r6;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.DatabaseHelper;

        $r3 = r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: android.content.Context myContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r5 = r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: java.lang.String dbName>;

        $r6 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r5);

        $r3 = r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: android.content.Context myContext>;

        $r5 = r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: java.lang.String dbName>;

        $r7 = virtualinvoke $r3.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>($r5);

        r2 = new java.io.FileOutputStream;

        specialinvoke r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r7);

        r1 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>(r1);

        if $i0 > 0 goto label2;

        virtualinvoke r2.<java.io.OutputStream: void flush()>();

        virtualinvoke r2.<java.io.OutputStream: void close()>();

        virtualinvoke $r6.<java.io.InputStream: void close()>();

        return;

     label2:
        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        goto label1;
    }

    public void createDataBase() throws java.io.IOException
    {
        java.lang.Throwable r1;
        com.altsoldev.preciousmetaltracker.db.DatabaseHelper r0;
        java.io.IOException $r2;
        boolean $z0;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.DatabaseHelper;

        $z0 = specialinvoke r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: boolean checkDataBase()>();

        if $z0 != 0 goto label4;

        virtualinvoke r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label1:
        virtualinvoke r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: void copyDataBase()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r2 = (java.io.IOException) r1;

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.altsoldev.preciousmetaltracker.db.DatabaseHelper r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelperCore: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1);

        return;
    }

    public android.database.sqlite.SQLiteDatabase openDataBase() throws android.database.SQLException
    {
        android.content.Context $r1;
        android.database.sqlite.SQLiteDatabase $r4;
        com.altsoldev.preciousmetaltracker.db.DatabaseHelper r0;
        java.lang.String $r2;
        java.io.File $r3;

        r0 := @this: com.altsoldev.preciousmetaltracker.db.DatabaseHelper;

        $r1 = r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: android.content.Context myContext>;

        $r2 = r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: java.lang.String dbName>;

        $r3 = virtualinvoke $r1.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

        $r4 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r2, null, 0);

        r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase myDataBase> = $r4;

        $r4 = r0.<com.altsoldev.preciousmetaltracker.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase myDataBase>;

        return $r4;
    }
}
