class cn.appmedia.ad.i extends android.webkit.WebViewClient
{
    final cn.appmedia.ad.AdActivity a;

    void <init>(cn.appmedia.ad.AdActivity)
    {
        cn.appmedia.ad.AdActivity $r1;
        cn.appmedia.ad.i r0;

        r0 := @this: cn.appmedia.ad.i;

        $r1 := @parameter0: cn.appmedia.ad.AdActivity;

        r0.<cn.appmedia.ad.i: cn.appmedia.ad.AdActivity a> = $r1;

        specialinvoke r0.<android.webkit.WebViewClient: void <init>()>();

        return;
    }

    public boolean shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String)
    {
        cn.appmedia.ad.AdActivity $r5;
        android.net.Uri $r4;
        android.content.Intent $r3;
        java.lang.String $r2;
        android.webkit.WebView $r1;
        cn.appmedia.ad.i r0;
        boolean $z0;

        r0 := @this: cn.appmedia.ad.i;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        if $z0 == 0 goto label1;

        $r3 = new android.content.Intent;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r2);

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r4);

        $r5 = r0.<cn.appmedia.ad.i: cn.appmedia.ad.AdActivity a>;

        virtualinvoke $r5.<cn.appmedia.ad.AdActivity: void startActivity(android.content.Intent)>($r3);

        return 1;

     label1:
        $r5 = r0.<cn.appmedia.ad.i: cn.appmedia.ad.AdActivity a>;

        $r1 = staticinvoke <cn.appmedia.ad.AdActivity: android.webkit.WebView a(cn.appmedia.ad.AdActivity)>($r5);

        virtualinvoke $r1.<android.webkit.WebView: void loadUrl(java.lang.String)>($r2);

        return 0;
    }
}
