final class se.runstar.b.n extends java.lang.Object
{
    private static final java.text.SimpleDateFormat a;
    private final android.content.Context b;
    private final se.runstar.b.e c;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;
        java.util.TimeZone $r1;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("\'backup-\'yyyy-MM-dd_HH-mm-ss\'.zip\'");

        <se.runstar.b.n: java.text.SimpleDateFormat a> = $r0;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r0.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r1);

        return;
    }

    public void <init>(android.content.Context, se.runstar.b.e)
    {
        android.content.Context $r1;
        se.runstar.b.n r0;
        se.runstar.b.e $r2;

        r0 := @this: se.runstar.b.n;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: se.runstar.b.e;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<se.runstar.b.n: android.content.Context b> = $r1;

        r0.<se.runstar.b.n: se.runstar.b.e c> = $r2;

        return;
    }

    public static boolean a(boolean)
    {
        java.io.File $r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r0 = staticinvoke <se.runstar.b.n: java.io.File b(boolean)>($z0);

        if $r0 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.util.Date[] a()
    {
        java.lang.Throwable $r8;
        java.lang.Object[] $r7;
        java.util.Date $r5;
        java.text.SimpleDateFormat $r1;
        java.lang.String[] $r3;
        java.io.File $r2;
        java.util.ArrayList $r0;
        int $i0, $i1;
        java.util.Date[] $r6;
        java.lang.String $r4;

        $r2 = staticinvoke <se.runstar.b.n: java.io.File b(boolean)>(0);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String[] list()>();

        $r0 = new java.util.ArrayList;

        $i0 = lengthof $r3;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label5;

        $r4 = $r3[$i0];

        $r1 = <se.runstar.b.n: java.text.SimpleDateFormat a>;

     label3:
        $r5 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r6 = newarray (java.util.Date)[$i0];

        $r7 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r6 = (java.util.Date[]) $r7;

        return $r6;

     label6:
        $r8 := @caughtexception;

        goto label4;

        catch java.text.ParseException from label3 to label4 with label6;
    }

    private static java.io.File b(java.util.Date)
    {
        java.util.Date $r0;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r4;
        java.io.File $r1, $r2;

        $r0 := @parameter0: java.util.Date;

        $r2 = staticinvoke <se.runstar.b.n: java.io.File b(boolean)>(0);

        $r3 = <se.runstar.b.n: java.text.SimpleDateFormat a>;

        $r4 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r0);

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r4);

        return $r1;
    }

    private static java.io.File b(boolean)
    {
        java.lang.String[] $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;
        java.io.File $r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "backups";

        $r2 = staticinvoke <se.runstar.b.e: java.lang.String a(java.lang.String[])>($r1);

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dir: ");

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Runstar", $r2);

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <se.runstar.b.e: boolean a(java.io.File)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        return null;

     label2:
        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        return $r0;

     label3:
        return null;
    }

    public final void a(java.util.Date)
    {
        se.runstar.b.d $r5;
        java.lang.Throwable $r18;
        android.content.Context $r6;
        java.io.DataInputStream $r16;
        se.runstar.b.a $r8, $r10, $r11;
        java.util.Date $r1;
        android.net.Uri $r9;
        android.content.ContentResolver $r7;
        java.util.zip.ZipFile $r12;
        java.lang.String $r4;
        java.util.zip.ZipEntry $r13;
        se.runstar.b.n r0;
        java.io.IOException $r14;
        java.io.File $r2;
        android.content.SharedPreferences $r17;
        java.lang.StringBuilder $r3;
        java.io.InputStream $r15;

        r0 := @this: se.runstar.b.n;

        $r1 := @parameter0: java.util.Date;

        $r2 = staticinvoke <se.runstar.b.n: java.io.File b(java.util.Date)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restoring from file ");

        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Runstar", $r4);

        $r5 = new se.runstar.b.d;

        specialinvoke $r5.<se.runstar.b.d: void <init>()>();

        $r6 = r0.<se.runstar.b.n: android.content.Context b>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = new se.runstar.b.a;

        $r6 = r0.<se.runstar.b.n: android.content.Context b>;

        $r9 = staticinvoke <se.runstar.provider.WorkoutContentProvider: android.net.Uri a(android.content.Context,java.lang.String)>($r6, "running_workouts");

        specialinvoke $r8.<se.runstar.b.a: void <init>(android.net.Uri,android.content.ContentResolver,byte)>($r9, $r7, 0);

        $r10 = new se.runstar.b.a;

        $r6 = r0.<se.runstar.b.n: android.content.Context b>;

        $r9 = staticinvoke <se.runstar.provider.WorkoutContentProvider: android.net.Uri a(android.content.Context,java.lang.String)>($r6, "locations");

        specialinvoke $r10.<se.runstar.b.a: void <init>(android.net.Uri,android.content.ContentResolver,byte)>($r9, $r7, 0);

        $r11 = new se.runstar.b.a;

        $r6 = r0.<se.runstar.b.n: android.content.Context b>;

        $r9 = staticinvoke <se.runstar.provider.WorkoutContentProvider: android.net.Uri a(android.content.Context,java.lang.String)>($r6, "running_workouts_sync");

        specialinvoke $r11.<se.runstar.b.a: void <init>(android.net.Uri,android.content.ContentResolver,byte)>($r9, $r7, 0);

        $r12 = new java.util.zip.ZipFile;

        specialinvoke $r12.<java.util.zip.ZipFile: void <init>(java.io.File,int)>($r2, 1);

        $r13 = virtualinvoke $r12.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>("backup.runstar.v1");

        if $r13 != null goto label1;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Invalid backup ZIP file");

        throw $r14;

     label1:
        $r15 = virtualinvoke $r12.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r13);

        $r16 = new java.io.DataInputStream;

        specialinvoke $r16.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r15);

     label2:
        $r6 = r0.<se.runstar.b.n: android.content.Context b>;

        $r9 = staticinvoke <se.runstar.provider.WorkoutContentProvider: android.net.Uri a(android.content.Context,java.lang.String)>($r6, "running_workouts");

        virtualinvoke $r7.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r9, null, null);

        $r6 = r0.<se.runstar.b.n: android.content.Context b>;

        $r9 = staticinvoke <se.runstar.provider.WorkoutContentProvider: android.net.Uri a(android.content.Context,java.lang.String)>($r6, "locations");

        virtualinvoke $r7.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r9, null, null);

        $r6 = r0.<se.runstar.b.n: android.content.Context b>;

        $r9 = staticinvoke <se.runstar.provider.WorkoutContentProvider: android.net.Uri a(android.content.Context,java.lang.String)>($r6, "running_workouts_sync");

        virtualinvoke $r7.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r9, null, null);

        virtualinvoke $r8.<se.runstar.b.a: void a(java.io.DataInputStream)>($r16);

        virtualinvoke $r10.<se.runstar.b.a: void a(java.io.DataInputStream)>($r16);

        virtualinvoke $r11.<se.runstar.b.a: void a(java.io.DataInputStream)>($r16);

        $r6 = r0.<se.runstar.b.n: android.content.Context b>;

        $r17 = virtualinvoke $r6.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("runstar", 0);

        staticinvoke <se.runstar.b.d: boolean a(java.io.DataInputStream,android.content.SharedPreferences)>($r16, $r17);

     label3:
        virtualinvoke $r15.<java.io.InputStream: void close()>();

        virtualinvoke $r12.<java.util.zip.ZipFile: void close()>();

        return;

     label4:
        $r18 := @caughtexception;

        virtualinvoke $r15.<java.io.InputStream: void close()>();

        virtualinvoke $r12.<java.util.zip.ZipFile: void close()>();

        throw $r18;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public final void b()
    {
        java.util.zip.ZipOutputStream $r4;
        se.runstar.b.d $r10;
        java.lang.Throwable $r20, $r21, $r22, $r23, $r24;
        se.runstar.b.c $r1, $r2, $r3;
        byte[] $r12;
        android.content.Context $r15;
        java.util.Date $r6;
        android.net.Uri $r17;
        java.lang.String[] $r11;
        java.io.DataOutputStream $r5;
        android.content.ContentResolver $r16;
        java.lang.String $r9;
        java.util.zip.ZipEntry $r14;
        se.runstar.b.n r0;
        android.database.Cursor $r18;
        java.io.FileOutputStream $r13;
        java.io.File $r7;
        android.content.SharedPreferences $r19;
        java.lang.StringBuilder $r8;

        r0 := @this: se.runstar.b.n;

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>()>();

        $r7 = staticinvoke <se.runstar.b.n: java.io.File b(java.util.Date)>($r6);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing backup to file ");

        $r9 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Runstar", $r9);

        $r10 = new se.runstar.b.d;

        specialinvoke $r10.<se.runstar.b.d: void <init>()>();

        $r1 = new se.runstar.b.c;

        $r11 = <se.runstar.b.g: java.lang.String[] c>;

        $r12 = <se.runstar.b.g: byte[] d>;

        specialinvoke $r1.<se.runstar.b.c: void <init>(java.lang.String[],byte[])>($r11, $r12);

        $r2 = new se.runstar.b.c;

        $r11 = <se.runstar.b.g: java.lang.String[] a>;

        $r12 = <se.runstar.b.g: byte[] b>;

        specialinvoke $r2.<se.runstar.b.c: void <init>(java.lang.String[],byte[])>($r11, $r12);

        $r3 = new se.runstar.b.c;

        $r11 = <se.runstar.b.g: java.lang.String[] e>;

        $r12 = <se.runstar.b.g: byte[] f>;

        specialinvoke $r3.<se.runstar.b.c: void <init>(java.lang.String[],byte[])>($r11, $r12);

        $r13 = new java.io.FileOutputStream;

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>($r7);

        $r4 = new java.util.zip.ZipOutputStream;

        specialinvoke $r4.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r13);

        virtualinvoke $r4.<java.util.zip.ZipOutputStream: void setLevel(int)>(8);

        $r14 = new java.util.zip.ZipEntry;

        specialinvoke $r14.<java.util.zip.ZipEntry: void <init>(java.lang.String)>("backup.runstar.v1");

        virtualinvoke $r4.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r14);

        $r5 = new java.io.DataOutputStream;

        specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r4);

     label01:
        $r15 = r0.<se.runstar.b.n: android.content.Context b>;

     label02:
        $r16 = virtualinvoke $r15.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label03:
        $r15 = r0.<se.runstar.b.n: android.content.Context b>;

     label04:
        $r17 = staticinvoke <se.runstar.provider.WorkoutContentProvider: android.net.Uri a(android.content.Context,java.lang.String)>($r15, "running_workouts");

        $r18 = virtualinvoke $r16.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r17, null, null, null, null);

     label05:
        virtualinvoke $r1.<se.runstar.b.c: void a(android.database.Cursor,java.io.DataOutputStream)>($r18, $r5);

     label06:
        interfaceinvoke $r18.<android.database.Cursor: void close()>();

     label07:
        $r15 = r0.<se.runstar.b.n: android.content.Context b>;

     label08:
        $r17 = staticinvoke <se.runstar.provider.WorkoutContentProvider: android.net.Uri a(android.content.Context,java.lang.String)>($r15, "locations");

        $r18 = virtualinvoke $r16.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r17, null, null, null, null);

     label09:
        virtualinvoke $r2.<se.runstar.b.c: void a(android.database.Cursor,java.io.DataOutputStream)>($r18, $r5);

     label10:
        interfaceinvoke $r18.<android.database.Cursor: void close()>();

     label11:
        $r15 = r0.<se.runstar.b.n: android.content.Context b>;

     label12:
        $r17 = staticinvoke <se.runstar.provider.WorkoutContentProvider: android.net.Uri a(android.content.Context,java.lang.String)>($r15, "running_workouts_sync");

        $r18 = virtualinvoke $r16.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r17, null, null, null, null);

     label13:
        virtualinvoke $r3.<se.runstar.b.c: void a(android.database.Cursor,java.io.DataOutputStream)>($r18, $r5);

     label14:
        interfaceinvoke $r18.<android.database.Cursor: void close()>();

     label15:
        $r15 = r0.<se.runstar.b.n: android.content.Context b>;

     label16:
        $r19 = virtualinvoke $r15.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("runstar", 0);

        staticinvoke <se.runstar.b.d: void a(android.content.SharedPreferences,java.io.DataOutputStream)>($r19, $r5);

     label17:
        virtualinvoke $r4.<java.util.zip.ZipOutputStream: void closeEntry()>();

        virtualinvoke $r4.<java.util.zip.ZipOutputStream: void close()>();

        return;

     label18:
        $r20 := @caughtexception;

     label19:
        interfaceinvoke $r18.<android.database.Cursor: void close()>();

        throw $r20;

     label20:
        $r21 := @caughtexception;

     label21:
        virtualinvoke $r7.<java.io.File: boolean delete()>();

        throw $r21;

     label22:
        $r22 := @caughtexception;

        virtualinvoke $r4.<java.util.zip.ZipOutputStream: void closeEntry()>();

        virtualinvoke $r4.<java.util.zip.ZipOutputStream: void close()>();

        throw $r22;

     label23:
        $r23 := @caughtexception;

     label24:
        interfaceinvoke $r18.<android.database.Cursor: void close()>();

        throw $r23;

     label25:
        $r24 := @caughtexception;

     label26:
        interfaceinvoke $r18.<android.database.Cursor: void close()>();

        throw $r24;

     label27:
        nop;

        catch java.io.IOException from label02 to label03 with label20;
        catch java.io.IOException from label04 to label05 with label20;
        catch java.lang.Throwable from label01 to label05 with label22;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.io.IOException from label06 to label07 with label20;
        catch java.io.IOException from label08 to label09 with label20;
        catch java.lang.Throwable from label06 to label09 with label22;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.io.IOException from label10 to label11 with label20;
        catch java.io.IOException from label12 to label13 with label20;
        catch java.lang.Throwable from label10 to label13 with label22;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.lang.Throwable from label14 to label17 with label22;
        catch java.io.IOException from label19 to label20 with label20;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label21 to label22 with label22;
        catch java.io.IOException from label24 to label25 with label20;
        catch java.io.IOException from label26 to label27 with label20;
        catch java.lang.Throwable from label24 to label25 with label22;
        catch java.lang.Throwable from label26 to label27 with label22;
    }
}
