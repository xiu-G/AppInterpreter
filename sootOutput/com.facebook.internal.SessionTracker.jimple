public class com.facebook.internal.SessionTracker extends java.lang.Object
{
    private final android.support.v4.content.LocalBroadcastManager broadcastManager;
    private final com.facebook.Session$StatusCallback callback;
    private boolean isTracking;
    private final android.content.BroadcastReceiver receiver;
    private com.facebook.Session session;

    public void <init>(android.content.Context, com.facebook.Session$StatusCallback)
    {
        android.content.Context $r1;
        com.facebook.Session$StatusCallback $r2;
        com.facebook.internal.SessionTracker r0;

        r0 := @this: com.facebook.internal.SessionTracker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.facebook.Session$StatusCallback;

        specialinvoke r0.<com.facebook.internal.SessionTracker: void <init>(android.content.Context,com.facebook.Session$StatusCallback,com.facebook.Session)>($r1, $r2, null);

        return;
    }

    void <init>(android.content.Context, com.facebook.Session$StatusCallback, com.facebook.Session)
    {
        android.content.Context $r1;
        com.facebook.Session$StatusCallback $r2;
        com.facebook.Session $r3;
        com.facebook.internal.SessionTracker r0;

        r0 := @this: com.facebook.internal.SessionTracker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.facebook.Session$StatusCallback;

        $r3 := @parameter2: com.facebook.Session;

        specialinvoke r0.<com.facebook.internal.SessionTracker: void <init>(android.content.Context,com.facebook.Session$StatusCallback,com.facebook.Session,boolean)>($r1, $r2, $r3, 1);

        return;
    }

    public void <init>(android.content.Context, com.facebook.Session$StatusCallback, com.facebook.Session, boolean)
    {
        android.content.Context $r1;
        com.facebook.Session$StatusCallback $r2;
        com.facebook.internal.SessionTracker r0;
        android.support.v4.content.LocalBroadcastManager $r4;
        com.facebook.Session $r3;
        com.facebook.internal.SessionTracker$CallbackWrapper $r5;
        com.facebook.internal.SessionTracker$ActiveSessionBroadcastReceiver $r6;
        boolean $z0;

        r0 := @this: com.facebook.internal.SessionTracker;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.facebook.Session$StatusCallback;

        $r3 := @parameter2: com.facebook.Session;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.facebook.internal.SessionTracker: boolean isTracking> = 0;

        $r5 = new com.facebook.internal.SessionTracker$CallbackWrapper;

        specialinvoke $r5.<com.facebook.internal.SessionTracker$CallbackWrapper: void <init>(com.facebook.internal.SessionTracker,com.facebook.Session$StatusCallback)>(r0, $r2);

        r0.<com.facebook.internal.SessionTracker: com.facebook.Session$StatusCallback callback> = $r5;

        r0.<com.facebook.internal.SessionTracker: com.facebook.Session session> = $r3;

        $r6 = new com.facebook.internal.SessionTracker$ActiveSessionBroadcastReceiver;

        specialinvoke $r6.<com.facebook.internal.SessionTracker$ActiveSessionBroadcastReceiver: void <init>(com.facebook.internal.SessionTracker,com.facebook.internal.SessionTracker$ActiveSessionBroadcastReceiver)>(r0, null);

        r0.<com.facebook.internal.SessionTracker: android.content.BroadcastReceiver receiver> = $r6;

        $r4 = staticinvoke <android.support.v4.content.LocalBroadcastManager: android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context)>($r1);

        r0.<com.facebook.internal.SessionTracker: android.support.v4.content.LocalBroadcastManager broadcastManager> = $r4;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.facebook.internal.SessionTracker: void startTracking()>();

     label1:
        return;
    }

    static com.facebook.Session$StatusCallback access$0(com.facebook.internal.SessionTracker)
    {
        com.facebook.Session$StatusCallback r1;
        com.facebook.internal.SessionTracker $r0;

        $r0 := @parameter0: com.facebook.internal.SessionTracker;

        r1 = $r0.<com.facebook.internal.SessionTracker: com.facebook.Session$StatusCallback callback>;

        return r1;
    }

    static com.facebook.Session access$1(com.facebook.internal.SessionTracker)
    {
        com.facebook.internal.SessionTracker $r0;
        com.facebook.Session r1;

        $r0 := @parameter0: com.facebook.internal.SessionTracker;

        r1 = $r0.<com.facebook.internal.SessionTracker: com.facebook.Session session>;

        return r1;
    }

    private void addBroadcastReceiver()
    {
        android.content.IntentFilter $r1;
        com.facebook.internal.SessionTracker r0;
        android.support.v4.content.LocalBroadcastManager $r3;
        android.content.BroadcastReceiver $r2;

        r0 := @this: com.facebook.internal.SessionTracker;

        $r1 = new android.content.IntentFilter;

        specialinvoke $r1.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("com.facebook.sdk.ACTIVE_SESSION_SET");

        virtualinvoke $r1.<android.content.IntentFilter: void addAction(java.lang.String)>("com.facebook.sdk.ACTIVE_SESSION_UNSET");

        $r3 = r0.<com.facebook.internal.SessionTracker: android.support.v4.content.LocalBroadcastManager broadcastManager>;

        $r2 = r0.<com.facebook.internal.SessionTracker: android.content.BroadcastReceiver receiver>;

        virtualinvoke $r3.<android.support.v4.content.LocalBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, $r1);

        return;
    }

    public com.facebook.Session getOpenSession()
    {
        com.facebook.internal.SessionTracker r0;
        com.facebook.Session $r1;
        boolean $z0;

        r0 := @this: com.facebook.internal.SessionTracker;

        $r1 = virtualinvoke r0.<com.facebook.internal.SessionTracker: com.facebook.Session getSession()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<com.facebook.Session: boolean isOpened()>();

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        return null;
    }

    public com.facebook.Session getSession()
    {
        com.facebook.internal.SessionTracker r0;
        com.facebook.Session $r1;

        r0 := @this: com.facebook.internal.SessionTracker;

        $r1 = r0.<com.facebook.internal.SessionTracker: com.facebook.Session session>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <com.facebook.Session: com.facebook.Session getActiveSession()>();

        return $r1;

     label1:
        $r1 = r0.<com.facebook.internal.SessionTracker: com.facebook.Session session>;

        return $r1;
    }

    public boolean isTracking()
    {
        com.facebook.internal.SessionTracker r0;
        boolean z0;

        r0 := @this: com.facebook.internal.SessionTracker;

        z0 = r0.<com.facebook.internal.SessionTracker: boolean isTracking>;

        return z0;
    }

    public boolean isTrackingActiveSession()
    {
        com.facebook.internal.SessionTracker r0;
        com.facebook.Session $r1;

        r0 := @this: com.facebook.internal.SessionTracker;

        $r1 = r0.<com.facebook.internal.SessionTracker: com.facebook.Session session>;

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setSession(com.facebook.Session)
    {
        com.facebook.Session$StatusCallback $r2;
        com.facebook.internal.SessionTracker r0;
        com.facebook.Session $r1;

        r0 := @this: com.facebook.internal.SessionTracker;

        $r1 := @parameter0: com.facebook.Session;

        $r1 = r0.<com.facebook.internal.SessionTracker: com.facebook.Session session>;

        if $r1 == null goto label1;

        $r1 = r0.<com.facebook.internal.SessionTracker: com.facebook.Session session>;

        $r2 = r0.<com.facebook.internal.SessionTracker: com.facebook.Session$StatusCallback callback>;

        virtualinvoke $r1.<com.facebook.Session: void removeCallback(com.facebook.Session$StatusCallback)>($r2);

        r0.<com.facebook.internal.SessionTracker: com.facebook.Session session> = null;

        specialinvoke r0.<com.facebook.internal.SessionTracker: void addBroadcastReceiver()>();

        $r1 = virtualinvoke r0.<com.facebook.internal.SessionTracker: com.facebook.Session getSession()>();

        if $r1 == null goto label1;

        $r1 = virtualinvoke r0.<com.facebook.internal.SessionTracker: com.facebook.Session getSession()>();

        $r2 = r0.<com.facebook.internal.SessionTracker: com.facebook.Session$StatusCallback callback>;

        virtualinvoke $r1.<com.facebook.Session: void addCallback(com.facebook.Session$StatusCallback)>($r2);

        return;

     label1:
        return;
    }

    public void startTracking()
    {
        com.facebook.Session$StatusCallback $r1;
        com.facebook.Session $r2;
        com.facebook.internal.SessionTracker r0;
        boolean $z0;

        r0 := @this: com.facebook.internal.SessionTracker;

        $z0 = r0.<com.facebook.internal.SessionTracker: boolean isTracking>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.facebook.internal.SessionTracker: com.facebook.Session session>;

        if $r2 != null goto label2;

        specialinvoke r0.<com.facebook.internal.SessionTracker: void addBroadcastReceiver()>();

     label2:
        $r2 = virtualinvoke r0.<com.facebook.internal.SessionTracker: com.facebook.Session getSession()>();

        if $r2 == null goto label3;

        $r2 = virtualinvoke r0.<com.facebook.internal.SessionTracker: com.facebook.Session getSession()>();

        $r1 = r0.<com.facebook.internal.SessionTracker: com.facebook.Session$StatusCallback callback>;

        virtualinvoke $r2.<com.facebook.Session: void addCallback(com.facebook.Session$StatusCallback)>($r1);

     label3:
        r0.<com.facebook.internal.SessionTracker: boolean isTracking> = 1;

        return;
    }

    public void stopTracking()
    {
        com.facebook.Session$StatusCallback $r2;
        com.facebook.Session $r1;
        com.facebook.internal.SessionTracker r0;
        android.support.v4.content.LocalBroadcastManager $r3;
        android.content.BroadcastReceiver $r4;
        boolean $z0;

        r0 := @this: com.facebook.internal.SessionTracker;

        $z0 = r0.<com.facebook.internal.SessionTracker: boolean isTracking>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<com.facebook.internal.SessionTracker: com.facebook.Session getSession()>();

        if $r1 == null goto label2;

        $r2 = r0.<com.facebook.internal.SessionTracker: com.facebook.Session$StatusCallback callback>;

        virtualinvoke $r1.<com.facebook.Session: void removeCallback(com.facebook.Session$StatusCallback)>($r2);

     label2:
        $r3 = r0.<com.facebook.internal.SessionTracker: android.support.v4.content.LocalBroadcastManager broadcastManager>;

        $r4 = r0.<com.facebook.internal.SessionTracker: android.content.BroadcastReceiver receiver>;

        virtualinvoke $r3.<android.support.v4.content.LocalBroadcastManager: void unregisterReceiver(android.content.BroadcastReceiver)>($r4);

        r0.<com.facebook.internal.SessionTracker: boolean isTracking> = 0;

        return;
    }
}
