public class com.nexage.android.sdks.GreystripeProvider extends com.nexage.android.sdkmanager.SDKProvider
{
    public static final java.lang.String LOG_LABEL;
    static java.lang.Object gssdk;
    static com.nexage.android.sdkmanager.SDKAdapterBase instance;
    private static com.nexage.android.sdkmanager.SDKListenerProtocol sdkListenerProtocol;
    protected java.lang.reflect.Constructor AdConstructor;
    protected java.lang.Class AdListenerClass;
    protected java.lang.Class AdViewClass;
    protected java.lang.reflect.Method DisplayInterstitialMethod;
    protected java.lang.reflect.Method InitializeMethod;
    protected java.lang.reflect.Method IsReadyMethod;
    protected java.lang.reflect.Method LoadAdMethod;
    protected java.lang.reflect.Method RemoveAdListenerMethod;
    protected java.lang.Class RequestManagerClass;
    protected java.lang.reflect.Method SetAdListenerMethod;

    static void <clinit>()
    {
        com.nexage.android.sdks.GreystripeProvider$1 $r0;

        <com.nexage.android.sdks.GreystripeProvider: java.lang.String LOG_LABEL> = "GreystripeProvider";

        $r0 = new com.nexage.android.sdks.GreystripeProvider$1;

        specialinvoke $r0.<com.nexage.android.sdks.GreystripeProvider$1: void <init>()>();

        <com.nexage.android.sdks.GreystripeProvider: com.nexage.android.sdkmanager.SDKListenerProtocol sdkListenerProtocol> = $r0;

        return;
    }

    public void <init>()
    {
        com.nexage.android.sdks.GreystripeProvider r0;

        r0 := @this: com.nexage.android.sdks.GreystripeProvider;

        specialinvoke r0.<com.nexage.android.sdkmanager.SDKProvider: void <init>()>();

        return;
    }

    public com.nexage.android.sdkmanager.SDKListenerProtocol getAdListenerProtocol()
    {
        com.nexage.android.sdks.GreystripeProvider r0;
        com.nexage.android.sdkmanager.SDKListenerProtocol r1;

        r0 := @this: com.nexage.android.sdks.GreystripeProvider;

        r1 = <com.nexage.android.sdks.GreystripeProvider: com.nexage.android.sdkmanager.SDKListenerProtocol sdkListenerProtocol>;

        return r1;
    }

    public com.nexage.android.sdkmanager.SDKAdapterBase getAdapter(android.content.Context, int, int, java.lang.String)
    {
        android.content.Context $r1;
        com.nexage.android.sdks.GreystripeProvider$GreystripeAdapter $r7;
        java.lang.Object[] $r9;
        com.nexage.android.sdks.GreystripeProvider r0;
        java.lang.Exception r3;
        com.nexage.android.sdkmanager.SDKAdapterBase $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.Object $r10;
        java.lang.String $r2, $r6;
        java.lang.reflect.Method $r8;

        r0 := @this: com.nexage.android.sdks.GreystripeProvider;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.lang.String;

        $r4 = <com.nexage.android.sdks.GreystripeProvider: com.nexage.android.sdkmanager.SDKAdapterBase instance>;

        if $r4 != null goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAdapter, width:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" adHeight:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nexage.android.NexageLog: void i(java.lang.String,java.lang.String)>("GreystripeProvider", $r6);

        $r7 = new com.nexage.android.sdks.GreystripeProvider$GreystripeAdapter;

        specialinvoke $r7.<com.nexage.android.sdks.GreystripeProvider$GreystripeAdapter: void <init>(com.nexage.android.sdks.GreystripeProvider,android.content.Context,int,int,java.lang.String)>(r0, $r1, $i0, $i1, $r2);

        <com.nexage.android.sdks.GreystripeProvider: com.nexage.android.sdkmanager.SDKAdapterBase instance> = $r7;

     label1:
        $r8 = r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.reflect.Method InitializeMethod>;

     label2:
        $r9 = newarray (java.lang.Object)[2];

     label3:
        $r9[0] = $r1;

        $r9[1] = $r2;

        $r10 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r9);

     label4:
        <com.nexage.android.sdks.GreystripeProvider: java.lang.Object gssdk> = $r10;

     label5:
        $r4 = <com.nexage.android.sdks.GreystripeProvider: com.nexage.android.sdkmanager.SDKAdapterBase instance>;

        return $r4;

     label6:
        r3 := @caughtexception;

        staticinvoke <com.nexage.android.NexageLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("GreystripeProvider", "GSSDK InitializeMethod:", r3);

        goto label5;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    protected java.lang.Class getBannerListenerClass()
    {
        java.lang.Class r1;
        com.nexage.android.sdks.GreystripeProvider r0;

        r0 := @this: com.nexage.android.sdks.GreystripeProvider;

        r1 = r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.Class AdListenerClass>;

        return r1;
    }

    protected java.lang.Class getInterstiatialListenerClass()
    {
        com.nexage.android.sdks.GreystripeProvider r0;

        r0 := @this: com.nexage.android.sdks.GreystripeProvider;

        return class "Lcom/nexage/android/sdkmanager/SDKListenerProtocol;";
    }

    public com.nexage.android.sdkmanager.SDKListenerProtocol getInterstitialListenerProtocol()
    {
        com.nexage.android.sdks.GreystripeProvider r0;
        com.nexage.android.sdkmanager.SDKListenerProtocol r1;

        r0 := @this: com.nexage.android.sdks.GreystripeProvider;

        r1 = <com.nexage.android.sdks.GreystripeProvider: com.nexage.android.sdkmanager.SDKListenerProtocol sdkListenerProtocol>;

        return r1;
    }

    protected void initAPI() throws java.lang.ClassNotFoundException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException
    {
        com.nexage.android.sdks.GreystripeProvider r0;
        java.lang.Class[] $r2;
        java.lang.Class $r1, $r5;
        java.lang.reflect.Method $r3;
        java.lang.reflect.Constructor $r4;

        r0 := @this: com.nexage.android.sdks.GreystripeProvider;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.greystripe.android.sdk.GSSDK");

        r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.Class RequestManagerClass> = $r1;

        $r1 = r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.Class RequestManagerClass>;

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Landroid/content/Context;";

        $r2[1] = class "Ljava/lang/String;";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("initialize", $r2);

        r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.reflect.Method InitializeMethod> = $r3;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.greystripe.android.sdk.BannerListener");

        r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.Class AdListenerClass> = $r1;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.greystripe.android.sdk.BannerView");

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Landroid/content/Context;";

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

        r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.reflect.Constructor AdConstructor> = $r4;

        $r2 = newarray (java.lang.Class)[1];

        $r5 = r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.Class AdListenerClass>;

        $r2[0] = $r5;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("addListener", $r2);

        r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.reflect.Method SetAdListenerMethod> = $r3;

        $r2 = newarray (java.lang.Class)[1];

        $r5 = r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.Class AdListenerClass>;

        $r2[0] = $r5;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("removeListener", $r2);

        r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.reflect.Method RemoveAdListenerMethod> = $r3;

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("refresh", $r2);

        r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.reflect.Method LoadAdMethod> = $r3;

        $r1 = r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.Class RequestManagerClass>;

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("isAdReady", $r2);

        r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.reflect.Method IsReadyMethod> = $r3;

        $r1 = r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.Class RequestManagerClass>;

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Landroid/app/Activity;";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("displayAd", $r2);

        r0.<com.nexage.android.sdks.GreystripeProvider: java.lang.reflect.Method DisplayInterstitialMethod> = $r3;

        return;
    }
}
