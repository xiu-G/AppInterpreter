public abstract class com.wq.utility.asynctask.MyAsyncTask extends java.lang.Object
{
    private static final java.util.concurrent.BlockingQueue a;
    private static final java.util.concurrent.ThreadFactory b;
    private static final java.util.concurrent.ThreadPoolExecutor c;
    private static final com.wq.utility.asynctask.d d;
    private static int[] h;
    private final com.wq.utility.asynctask.f e;
    private final java.util.concurrent.FutureTask f;
    private volatile com.wq.utility.asynctask.MyAsyncTask$MyStatus g;

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0;
        java.util.concurrent.ThreadPoolExecutor $r5;
        java.util.concurrent.BlockingQueue $r1;
        com.wq.utility.asynctask.a $r4;
        java.util.concurrent.ThreadFactory $r2;
        java.util.concurrent.LinkedBlockingQueue $r3;
        com.wq.utility.asynctask.d $r6;

        $r3 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(10);

        <com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.BlockingQueue a> = $r3;

        $r4 = new com.wq.utility.asynctask.a;

        specialinvoke $r4.<com.wq.utility.asynctask.a: void <init>()>();

        <com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.ThreadFactory b> = $r4;

        $r5 = new java.util.concurrent.ThreadPoolExecutor;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r1 = <com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.BlockingQueue a>;

        $r2 = <com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.ThreadFactory b>;

        specialinvoke $r5.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(5, 128, 10L, $r0, $r1, $r2);

        <com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.ThreadPoolExecutor c> = $r5;

        $r6 = new com.wq.utility.asynctask.d;

        specialinvoke $r6.<com.wq.utility.asynctask.d: void <init>(byte)>(0);

        <com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.d d> = $r6;

        return;
    }

    public void <init>()
    {
        com.wq.utility.asynctask.f $r1;
        com.wq.utility.asynctask.MyAsyncTask$MyStatus $r2;
        com.wq.utility.asynctask.MyAsyncTask r0;
        com.wq.utility.asynctask.b $r3;
        com.wq.utility.asynctask.c $r4;

        r0 := @this: com.wq.utility.asynctask.MyAsyncTask;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <com.wq.utility.asynctask.MyAsyncTask$MyStatus: com.wq.utility.asynctask.MyAsyncTask$MyStatus PENDING>;

        r0.<com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.MyAsyncTask$MyStatus g> = $r2;

        $r3 = new com.wq.utility.asynctask.b;

        specialinvoke $r3.<com.wq.utility.asynctask.b: void <init>(com.wq.utility.asynctask.MyAsyncTask)>(r0);

        r0.<com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.f e> = $r3;

        $r4 = new com.wq.utility.asynctask.c;

        $r1 = r0.<com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.f e>;

        specialinvoke $r4.<com.wq.utility.asynctask.c: void <init>(com.wq.utility.asynctask.MyAsyncTask,java.util.concurrent.Callable)>(r0, $r1);

        r0.<com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.FutureTask f> = $r4;

        return;
    }

    static void a(com.wq.utility.asynctask.MyAsyncTask)
    {
        com.wq.utility.asynctask.MyAsyncTask$MyStatus $r1;
        com.wq.utility.asynctask.MyAsyncTask $r0;

        $r0 := @parameter0: com.wq.utility.asynctask.MyAsyncTask;

        virtualinvoke $r0.<com.wq.utility.asynctask.MyAsyncTask: boolean isCancelled()>();

        $r1 = <com.wq.utility.asynctask.MyAsyncTask$MyStatus: com.wq.utility.asynctask.MyAsyncTask$MyStatus FINISHED>;

        $r0.<com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.MyAsyncTask$MyStatus g> = $r1;

        return;
    }

    protected static transient void b()
    {
        return;
    }

    protected static void c()
    {
        return;
    }

    static com.wq.utility.asynctask.d d()
    {
        com.wq.utility.asynctask.d r0;

        r0 = <com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.d d>;

        return r0;
    }

    private static int[] e()
    {
        java.lang.NoSuchFieldError $r3, $r4, $r5;
        com.wq.utility.asynctask.MyAsyncTask$MyStatus $r2;
        int[] $r0;
        int $i0;
        com.wq.utility.asynctask.MyAsyncTask$MyStatus[] $r1;

        $r0 = <com.wq.utility.asynctask.MyAsyncTask: int[] h>;

        if $r0 == null goto label01;

        return $r0;

     label01:
        $r1 = staticinvoke <com.wq.utility.asynctask.MyAsyncTask$MyStatus: com.wq.utility.asynctask.MyAsyncTask$MyStatus[] values()>();

        $i0 = lengthof $r1;

        $r0 = newarray (int)[$i0];

     label02:
        $r2 = <com.wq.utility.asynctask.MyAsyncTask$MyStatus: com.wq.utility.asynctask.MyAsyncTask$MyStatus FINISHED>;

        $i0 = virtualinvoke $r2.<com.wq.utility.asynctask.MyAsyncTask$MyStatus: int ordinal()>();

     label03:
        $r0[$i0] = 3;

     label04:
        $r2 = <com.wq.utility.asynctask.MyAsyncTask$MyStatus: com.wq.utility.asynctask.MyAsyncTask$MyStatus PENDING>;

        $i0 = virtualinvoke $r2.<com.wq.utility.asynctask.MyAsyncTask$MyStatus: int ordinal()>();

     label05:
        $r0[$i0] = 1;

     label06:
        $r2 = <com.wq.utility.asynctask.MyAsyncTask$MyStatus: com.wq.utility.asynctask.MyAsyncTask$MyStatus RUNNING>;

        $i0 = virtualinvoke $r2.<com.wq.utility.asynctask.MyAsyncTask$MyStatus: int ordinal()>();

     label07:
        $r0[$i0] = 2;

     label08:
        <com.wq.utility.asynctask.MyAsyncTask: int[] h> = $r0;

        return $r0;

     label09:
        $r3 := @caughtexception;

        goto label08;

     label10:
        $r4 := @caughtexception;

        goto label06;

     label11:
        $r5 := @caughtexception;

        goto label04;

        catch java.lang.NoSuchFieldError from label02 to label03 with label11;
        catch java.lang.NoSuchFieldError from label04 to label05 with label10;
        catch java.lang.NoSuchFieldError from label06 to label07 with label09;
    }

    protected abstract transient java.lang.Object a();

    public final boolean cancel(boolean)
    {
        java.util.concurrent.FutureTask $r1;
        com.wq.utility.asynctask.MyAsyncTask r0;
        boolean $z0;

        r0 := @this: com.wq.utility.asynctask.MyAsyncTask;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.FutureTask f>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.FutureTask: boolean cancel(boolean)>($z0);

        return $z0;
    }

    public final transient com.wq.utility.asynctask.MyAsyncTask execute(java.lang.Object[])
    {
        java.lang.IllegalStateException $r8;
        java.lang.Object[] $r1;
        com.wq.utility.asynctask.MyAsyncTask r0;
        java.util.concurrent.ThreadPoolExecutor $r6;
        java.util.concurrent.FutureTask $r7;
        com.wq.utility.asynctask.f $r5;
        com.wq.utility.asynctask.MyAsyncTask$MyStatus $r2, $r3;
        int[] $r4;
        int $i0;

        r0 := @this: com.wq.utility.asynctask.MyAsyncTask;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.MyAsyncTask$MyStatus g>;

        $r3 = <com.wq.utility.asynctask.MyAsyncTask$MyStatus: com.wq.utility.asynctask.MyAsyncTask$MyStatus PENDING>;

        if $r2 == $r3 goto label1;

        $r4 = staticinvoke <com.wq.utility.asynctask.MyAsyncTask: int[] e()>();

        $r2 = r0.<com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.MyAsyncTask$MyStatus g>;

        $i0 = virtualinvoke $r2.<com.wq.utility.asynctask.MyAsyncTask$MyStatus: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label3;
            default: goto label1;
        };

     label1:
        $r2 = <com.wq.utility.asynctask.MyAsyncTask$MyStatus: com.wq.utility.asynctask.MyAsyncTask$MyStatus RUNNING>;

        r0.<com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.MyAsyncTask$MyStatus g> = $r2;

        $r5 = r0.<com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.f e>;

        $r5.<com.wq.utility.asynctask.f: java.lang.Object[] a> = $r1;

        $r6 = <com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.ThreadPoolExecutor c>;

        $r7 = r0.<com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.FutureTask f>;

        virtualinvoke $r6.<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>($r7);

        return r0;

     label2:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot execute task: the task is already running.");

        throw $r8;

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot execute task: the task has already been executed (a task can be executed only once)");

        throw $r8;
    }

    public final java.lang.Object get()
    {
        java.util.concurrent.FutureTask $r2;
        java.lang.Object $r1;
        com.wq.utility.asynctask.MyAsyncTask r0;

        r0 := @this: com.wq.utility.asynctask.MyAsyncTask;

        $r2 = r0.<com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.FutureTask f>;

        $r1 = virtualinvoke $r2.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        return $r1;
    }

    public final java.lang.Object get(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        com.wq.utility.asynctask.MyAsyncTask r0;
        java.util.concurrent.FutureTask $r3;
        long $l0;
        java.lang.Object $r2;

        r0 := @this: com.wq.utility.asynctask.MyAsyncTask;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r3 = r0.<com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.FutureTask f>;

        $r2 = virtualinvoke $r3.<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>($l0, $r1);

        return $r2;
    }

    public final com.wq.utility.asynctask.MyAsyncTask$MyStatus getStatus()
    {
        com.wq.utility.asynctask.MyAsyncTask$MyStatus r1;
        com.wq.utility.asynctask.MyAsyncTask r0;

        r0 := @this: com.wq.utility.asynctask.MyAsyncTask;

        r1 = r0.<com.wq.utility.asynctask.MyAsyncTask: com.wq.utility.asynctask.MyAsyncTask$MyStatus g>;

        return r1;
    }

    public final boolean isCancelled()
    {
        java.util.concurrent.FutureTask $r1;
        com.wq.utility.asynctask.MyAsyncTask r0;
        boolean $z0;

        r0 := @this: com.wq.utility.asynctask.MyAsyncTask;

        $r1 = r0.<com.wq.utility.asynctask.MyAsyncTask: java.util.concurrent.FutureTask f>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.FutureTask: boolean isCancelled()>();

        return $z0;
    }
}
