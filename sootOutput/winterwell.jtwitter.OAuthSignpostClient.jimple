public class winterwell.jtwitter.OAuthSignpostClient extends winterwell.jtwitter.URLConnectionHttpClient implements winterwell.jtwitter.Twitter$IHttpClient
{
    static final boolean $assertionsDisabled;
    public static final java.lang.String JTWITTER_OAUTH_KEY;
    public static final java.lang.String JTWITTER_OAUTH_SECRET;
    private java.lang.String accessToken;
    private java.lang.String accessTokenSecret;
    private java.lang.String callbackUrl;
    private oauth.signpost.OAuthConsumer consumer;
    private java.lang.String consumerKey;
    private java.lang.String consumerSecret;
    private oauth.signpost.basic.DefaultOAuthProvider provider;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        <winterwell.jtwitter.OAuthSignpostClient: java.lang.String JTWITTER_OAUTH_SECRET> = "9FFYaWJSvQ6Yi5tctN30eN6DnXWmdw0QgJMl7V6KGI";

        <winterwell.jtwitter.OAuthSignpostClient: java.lang.String JTWITTER_OAUTH_KEY> = "Cz8ZLgitPR2jrQVaD6ncw";

        <winterwell.jtwitter.OAuthSignpostClient: boolean $assertionsDisabled> = 0;

        $r0 = class "Lwinterwell/jtwitter/OAuthSignpostClient;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <winterwell.jtwitter.OAuthSignpostClient: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2, $r3;
        java.lang.AssertionError $r4;
        winterwell.jtwitter.OAuthSignpostClient r0;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<winterwell.jtwitter.URLConnectionHttpClient: void <init>()>();

        $z0 = <winterwell.jtwitter.OAuthSignpostClient: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        if $r3 != null goto label2;

     label1:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String consumerKey> = $r1;

        r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String consumerSecret> = $r2;

        r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String callbackUrl> = $r3;

        specialinvoke r0.<winterwell.jtwitter.OAuthSignpostClient: void init()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2, $r3, $r4;
        winterwell.jtwitter.OAuthSignpostClient r0;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke r0.<winterwell.jtwitter.URLConnectionHttpClient: void <init>()>();

        r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String consumerKey> = $r1;

        r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String consumerSecret> = $r2;

        r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String accessToken> = $r3;

        r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String accessTokenSecret> = $r4;

        specialinvoke r0.<winterwell.jtwitter.OAuthSignpostClient: void init()>();

        return;
    }

    public static java.lang.String askUser(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <javax.swing.JOptionPane: java.lang.String showInputDialog(java.lang.Object)>($r0);

        return $r0;
    }

    private static java.lang.String encode(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r1);

        return $r1;
    }

    private void init()
    {
        oauth.signpost.basic.DefaultOAuthProvider $r5;
        oauth.signpost.OAuthConsumer $r4;
        java.lang.String $r2, $r3;
        winterwell.jtwitter.OAuthSignpostClient r0;
        winterwell.jtwitter.OAuthSignpostClient$2 $r1;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r1 = new winterwell.jtwitter.OAuthSignpostClient$2;

        $r2 = r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String consumerKey>;

        $r3 = r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String consumerSecret>;

        specialinvoke $r1.<winterwell.jtwitter.OAuthSignpostClient$2: void <init>(winterwell.jtwitter.OAuthSignpostClient,java.lang.String,java.lang.String)>(r0, $r2, $r3);

        r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.OAuthConsumer consumer> = $r1;

        $r2 = r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String accessToken>;

        if $r2 == null goto label1;

        $r4 = r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.OAuthConsumer consumer>;

        $r2 = r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String accessToken>;

        $r3 = r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String accessTokenSecret>;

        interfaceinvoke $r4.<oauth.signpost.OAuthConsumer: void setTokenWithSecret(java.lang.String,java.lang.String)>($r2, $r3);

     label1:
        $r5 = new oauth.signpost.basic.DefaultOAuthProvider;

        specialinvoke $r5.<oauth.signpost.basic.DefaultOAuthProvider: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http://twitter.com/oauth/request_token", "http://twitter.com/oauth/access_token", "http://twitter.com/oauth/authorize");

        r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.basic.DefaultOAuthProvider provider> = $r5;

        return;
    }

    public void authorizeDesktop()
    {
        java.lang.Throwable $r3;
        java.awt.Desktop $r2;
        winterwell.jtwitter.TwitterException $r4;
        java.net.URI $r1;
        winterwell.jtwitter.OAuthSignpostClient r0;
        java.lang.Exception $r5;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r1 = virtualinvoke r0.<winterwell.jtwitter.OAuthSignpostClient: java.net.URI authorizeUrl()>();

     label1:
        $r2 = staticinvoke <java.awt.Desktop: java.awt.Desktop getDesktop()>();

        virtualinvoke $r2.<java.awt.Desktop: void browse(java.net.URI)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new winterwell.jtwitter.TwitterException;

        $r5 = (java.lang.Exception) $r3;

        specialinvoke $r4.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r5);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.net.URI authorizeUrl()
    {
        oauth.signpost.basic.DefaultOAuthProvider $r2;
        winterwell.jtwitter.TwitterException $r6;
        oauth.signpost.OAuthConsumer $r3;
        java.lang.String $r1;
        java.net.URI $r4;
        winterwell.jtwitter.OAuthSignpostClient r0;
        java.lang.Exception $r5;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

     label1:
        $r2 = r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.basic.DefaultOAuthProvider provider>;

        $r3 = r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.OAuthConsumer consumer>;

        $r1 = r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String callbackUrl>;

        $r1 = virtualinvoke $r2.<oauth.signpost.basic.DefaultOAuthProvider: java.lang.String retrieveRequestToken(oauth.signpost.OAuthConsumer,java.lang.String)>($r3, $r1);

     label2:
        $r4 = new java.net.URI;

     label3:
        specialinvoke $r4.<java.net.URI: void <init>(java.lang.String)>($r1);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new winterwell.jtwitter.TwitterException;

        specialinvoke $r6.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public boolean canAuthenticate()
    {
        oauth.signpost.OAuthConsumer $r2;
        java.lang.String $r1;
        winterwell.jtwitter.OAuthSignpostClient r0;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r2 = r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.OAuthConsumer consumer>;

        $r1 = interfaceinvoke $r2.<oauth.signpost.OAuthConsumer: java.lang.String getToken()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String[] getAccessToken()
    {
        java.lang.String[] $r1;
        java.lang.String $r2;
        winterwell.jtwitter.OAuthSignpostClient r0;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r1 = newarray (java.lang.String)[2];

        $r2 = r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String accessToken>;

        $r1[0] = $r2;

        $r2 = r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String accessTokenSecret>;

        $r1[1] = $r2;

        return $r1;
    }

    java.lang.String getName()
    {
        java.lang.String $r1;
        winterwell.jtwitter.OAuthSignpostClient r0;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r1 = r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String name>;

        if $r1 != null goto label1;

        return "?user";

     label1:
        $r1 = r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String name>;

        return $r1;
    }

    public java.lang.String post(java.lang.String, java.util.Map, boolean) throws winterwell.jtwitter.TwitterException
    {
        java.net.HttpURLConnection $r6;
        java.lang.Throwable $r11;
        byte[] $r9;
        java.net.URL $r4, $r13;
        winterwell.jtwitter.OAuthSignpostClient r0;
        winterwell.jtwitter.TwitterException $r15;
        java.net.URLConnection $r5;
        java.util.Map $r2;
        int $i0;
        java.lang.String $r1;
        boolean $z0;
        java.io.OutputStream $r8;
        oauth.signpost.exception.OAuthException $r12;
        java.lang.Exception $r16;
        oauth.signpost.OAuthConsumer $r3;
        winterwell.jtwitter.OAuthSignpostClient$1 $r7, $r14;
        java.io.InputStream $r10;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r13 = new java.net.URL;

        $r4 = $r13;

     label01:
        specialinvoke $r13.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

     label02:
        $r6 = (java.net.HttpURLConnection) $r5;

     label03:
        virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke $r6.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded");

     label04:
        $i0 = r0.<winterwell.jtwitter.OAuthSignpostClient: int timeout>;

     label05:
        virtualinvoke $r6.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        $r1 = virtualinvoke r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String post2_getPayload(java.util.Map)>($r2);

     label06:
        if $z0 == 0 goto label10;

        $r14 = new winterwell.jtwitter.OAuthSignpostClient$1;

        $r7 = $r14;

     label07:
        specialinvoke $r14.<winterwell.jtwitter.OAuthSignpostClient$1: void <init>(winterwell.jtwitter.OAuthSignpostClient,java.net.HttpURLConnection,java.lang.String)>(r0, $r6, $r1);

     label08:
        $r3 = r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.OAuthConsumer consumer>;

     label09:
        interfaceinvoke $r3.<oauth.signpost.OAuthConsumer: oauth.signpost.http.HttpRequest sign(oauth.signpost.http.HttpRequest)>($r7);

     label10:
        $r8 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r9 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[])>($r9);

        staticinvoke <winterwell.jtwitter.OAuthSignpostClient: void close(java.io.Closeable)>($r8);

        virtualinvoke r0.<winterwell.jtwitter.OAuthSignpostClient: void processError(java.net.HttpURLConnection)>($r6);

        $r10 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r1 = staticinvoke <winterwell.jtwitter.OAuthSignpostClient: java.lang.String toString(java.io.InputStream)>($r10);

     label11:
        return $r1;

     label12:
        $r11 := @caughtexception;

        $r15 = new winterwell.jtwitter.TwitterException;

        $r16 = (java.lang.Exception) $r11;

        specialinvoke $r15.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r16);

        throw $r15;

     label13:
        $r12 := @caughtexception;

        $r15 = new winterwell.jtwitter.TwitterException;

        specialinvoke $r15.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r12);

        throw $r15;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.io.IOException from label09 to label11 with label12;
        catch oauth.signpost.exception.OAuthException from label01 to label02 with label13;
        catch oauth.signpost.exception.OAuthException from label03 to label04 with label13;
        catch oauth.signpost.exception.OAuthException from label05 to label06 with label13;
        catch oauth.signpost.exception.OAuthException from label07 to label08 with label13;
        catch oauth.signpost.exception.OAuthException from label09 to label11 with label13;
    }

    protected void setAuthentication(java.net.URLConnection, java.lang.String, java.lang.String)
    {
        oauth.signpost.exception.OAuthException $r6;
        winterwell.jtwitter.TwitterException $r4;
        java.net.URLConnection $r1;
        oauth.signpost.OAuthConsumer $r5;
        java.lang.String $r2, $r3;
        winterwell.jtwitter.OAuthSignpostClient r0;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r1 := @parameter0: java.net.URLConnection;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.OAuthConsumer consumer>;

     label1:
        interfaceinvoke $r5.<oauth.signpost.OAuthConsumer: oauth.signpost.http.HttpRequest sign(java.lang.Object)>($r1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r4 = new winterwell.jtwitter.TwitterException;

        specialinvoke $r4.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r6);

        throw $r4;

        catch oauth.signpost.exception.OAuthException from label1 to label2 with label3;
    }

    public void setAuthorizationCode(java.lang.String) throws winterwell.jtwitter.TwitterException
    {
        oauth.signpost.basic.DefaultOAuthProvider $r2;
        winterwell.jtwitter.TwitterException $r5;
        oauth.signpost.OAuthConsumer $r3;
        java.lang.String $r1;
        winterwell.jtwitter.OAuthSignpostClient r0;
        java.lang.Exception $r4;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.basic.DefaultOAuthProvider provider>;

        $r3 = r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.OAuthConsumer consumer>;

        virtualinvoke $r2.<oauth.signpost.basic.DefaultOAuthProvider: void retrieveAccessToken(oauth.signpost.OAuthConsumer,java.lang.String)>($r3, $r1);

        $r3 = r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.OAuthConsumer consumer>;

        $r1 = interfaceinvoke $r3.<oauth.signpost.OAuthConsumer: java.lang.String getToken()>();

        r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String accessToken> = $r1;

        $r3 = r0.<winterwell.jtwitter.OAuthSignpostClient: oauth.signpost.OAuthConsumer consumer>;

        $r1 = interfaceinvoke $r3.<oauth.signpost.OAuthConsumer: java.lang.String getTokenSecret()>();

        r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String accessTokenSecret> = $r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new winterwell.jtwitter.TwitterException;

        specialinvoke $r5.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setName(java.lang.String)
    {
        java.lang.String $r1;
        winterwell.jtwitter.OAuthSignpostClient r0;

        r0 := @this: winterwell.jtwitter.OAuthSignpostClient;

        $r1 := @parameter0: java.lang.String;

        r0.<winterwell.jtwitter.OAuthSignpostClient: java.lang.String name> = $r1;

        return;
    }
}
