public class hw.ats.common.ds.AdParser extends java.lang.Object
{
    private static final java.lang.String TAG;
    private java.net.URL feedUrl;

    public void <init>(java.lang.String)
    {
        java.lang.Throwable $r3;
        java.net.URL $r2;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;
        hw.ats.common.ds.AdParser r0;

        r0 := @this: hw.ats.common.ds.AdParser;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.net.URL;

     label1:
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1);

     label2:
        r0.<hw.ats.common.ds.AdParser: java.net.URL feedUrl> = $r2;

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    private java.io.InputStream getInputStream()
    {
        java.lang.Throwable $r4;
        java.net.URL $r1;
        java.net.URLConnection $r2;
        java.lang.RuntimeException $r5;
        hw.ats.common.ds.AdParser r0;
        java.io.InputStream $r3;

        r0 := @this: hw.ats.common.ds.AdParser;

        $r1 = r0.<hw.ats.common.ds.AdParser: java.net.URL feedUrl>;

     label1:
        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = virtualinvoke $r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.String textNodeValue(org.w3c.dom.Node)
    {
        java.lang.String $r2;
        hw.ats.common.ds.AdParser r0;
        org.w3c.dom.Node $r1;

        r0 := @this: hw.ats.common.ds.AdParser;

        $r1 := @parameter0: org.w3c.dom.Node;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r1 == null goto label2;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r2;

     label2:
        return null;
    }

    public java.util.List parse()
    {
        java.util.ArrayList r1;
        org.w3c.dom.Document $r6;
        org.w3c.dom.Node $r9, $r16;
        int $i0, $i1, $i2;
        java.lang.String $r10, $r11;
        hw.ats.common.ds.AdParser r0;
        boolean $z0;
        hw.ats.common.model.Ad r2;
        org.w3c.dom.NodeList $r8, $r12;
        java.lang.RuntimeException $r14;
        java.lang.Exception $r13;
        org.w3c.dom.Element $r7;
        javax.xml.parsers.DocumentBuilder $r4;
        java.lang.StringBuilder $r15;
        javax.xml.parsers.DocumentBuilderFactory $r3;
        java.io.InputStream $r5;

        r0 := @this: hw.ats.common.ds.AdParser;

        $r3 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label01:
        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r5 = specialinvoke r0.<hw.ats.common.ds.AdParser: java.io.InputStream getInputStream()>();

        $r6 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r5);

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $i0 = interfaceinvoke $r8.<org.w3c.dom.NodeList: int getLength()>();

     label02:
        if $i0 != 0 goto label03;

        return null;

     label03:
        r1 = new java.util.ArrayList;

     label04:
        specialinvoke r1.<java.util.ArrayList: void <init>()>();

     label05:
        $i0 = 0;

     label06:
        $i1 = interfaceinvoke $r8.<org.w3c.dom.NodeList: int getLength()>();

     label07:
        if $i0 < $i1 goto label08;

        return r1;

     label08:
        $r9 = interfaceinvoke $r8.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

     label09:
        $r10 = "ads";

     label10:
        $r11 = interfaceinvoke $r9.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

     label11:
        if $z0 != 0 goto label13;

     label12:
        $i0 = $i0 + 1;

        goto label06;

     label13:
        r2 = new hw.ats.common.model.Ad;

     label14:
        specialinvoke r2.<hw.ats.common.model.Ad: void <init>()>();

        $r12 = interfaceinvoke $r9.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i1 = interfaceinvoke $r12.<org.w3c.dom.NodeList: int getLength()>();

     label15:
        if $i1 != 0 goto label16;

        return null;

     label16:
        $i1 = 0;

     label17:
        $i2 = interfaceinvoke $r12.<org.w3c.dom.NodeList: int getLength()>();

     label18:
        if $i1 < $i2 goto label22;

     label19:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

     label20:
        goto label12;

     label21:
        $r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label22:
        $r9 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i1);

     label23:
        if $r9 != null goto label25;

     label24:
        $i1 = $i1 + 1;

        goto label17;

     label25:
        $r15 = new java.lang.StringBuilder;

     label26:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("citem=");

        $r10 = interfaceinvoke $r9.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdParser", $r10);

        $r16 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i1);

        $r10 = interfaceinvoke $r16.<org.w3c.dom.Node: java.lang.String getNodeName()>();

     label27:
        $r11 = "image";

     label28:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label29:
        if $z0 == 0 goto label32;

     label30:
        interfaceinvoke $r9.<org.w3c.dom.Node: void normalize()>();

        $r10 = specialinvoke r0.<hw.ats.common.ds.AdParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r9);

        r2.<hw.ats.common.model.Ad: java.lang.String image> = $r10;

     label31:
        goto label24;

     label32:
        $r11 = "url";

     label33:
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label34:
        if $z0 == 0 goto label24;

     label35:
        interfaceinvoke $r9.<org.w3c.dom.Node: void normalize()>();

        $r10 = specialinvoke r0.<hw.ats.common.ds.AdParser: java.lang.String textNodeValue(org.w3c.dom.Node)>($r9);

        r2.<hw.ats.common.model.Ad: java.lang.String url> = $r10;

     label36:
        goto label24;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label04 to label05 with label21;
        catch java.lang.Exception from label06 to label07 with label21;
        catch java.lang.Exception from label08 to label09 with label21;
        catch java.lang.Exception from label10 to label11 with label21;
        catch java.lang.Exception from label14 to label15 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Exception from label22 to label23 with label21;
        catch java.lang.Exception from label26 to label27 with label21;
        catch java.lang.Exception from label28 to label29 with label21;
        catch java.lang.Exception from label30 to label31 with label21;
        catch java.lang.Exception from label33 to label34 with label21;
        catch java.lang.Exception from label35 to label36 with label21;
    }

    public static void <clinit>()
    {
        <hw.ats.common.ds.AdParser: java.lang.String TAG> = "AdParser";

        return;
    }
}
