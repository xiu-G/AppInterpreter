public class com.ffcs.android.mc.MCCoreService extends android.app.Service
{
    public android.content.Intent ipcIntent;
    public android.os.IBinder ipcBinder_0;

    public void <init>()
    {
        com.ffcs.android.mc.MCCoreService r0;

        r0 := @this: com.ffcs.android.mc.MCCoreService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.ffcs.android.mc.MCCoreService this;
        android.content.Intent parameter0;

        this := @this: com.ffcs.android.mc.MCCoreService;

        parameter0 := @parameter0: android.content.Intent;

        parameter0 = virtualinvoke this.<com.ffcs.android.mc.MCCoreService: android.content.Intent getIntent()>();

        this.<com.ffcs.android.mc.MCCoreService: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.ffcs.android.mc.MCCoreService: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.ffcs.android.mc.MCCoreService: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.ffcs.android.mc.MCCoreService: android.os.IBinder ipcBinder_0> = parameter0;

        return parameter0;
    }

    public void onCreate()
    {
        com.ffcs.android.mc.MCCoreService r0;
        com.ffcs.android.mc.BusinessFunction $r2;
        java.lang.String $r3;
        java.lang.Exception r1;

        r0 := @this: com.ffcs.android.mc.MCCoreService;

     label1:
        $r2 = staticinvoke <com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.BusinessFunction getInstance(android.content.Context)>(r0);

        virtualinvoke $r2.<com.ffcs.android.mc.BusinessFunction: void onCreatService(android.content.Context)>(r0);

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r3 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <com.ffcs.android.mc.util.McExceptionUtil: void put(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void onDestroy()
    {
        com.ffcs.android.mc.MCCoreService r0;
        com.ffcs.android.mc.BusinessFunction $r2;
        com.ffcs.android.mc.ICoreService $r3;
        java.lang.String $r4;
        java.lang.Exception r1;

        r0 := @this: com.ffcs.android.mc.MCCoreService;

        specialinvoke r0.<android.app.Service: void onDestroy()>();

     label1:
        $r2 = staticinvoke <com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.BusinessFunction getInstance(android.content.Context)>(r0);

        $r3 = virtualinvoke $r2.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.ICoreService getCoreService()>();

        interfaceinvoke $r3.<com.ffcs.android.mc.ICoreService: void destroyService()>();

     label2:
        $r2 = staticinvoke <com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.BusinessFunction getInstance(android.content.Context)>(r0);

        virtualinvoke $r2.<com.ffcs.android.mc.BusinessFunction: void destry()>();

        return;

     label3:
        r1 := @caughtexception;

        $r4 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <com.ffcs.android.mc.util.McExceptionUtil: void put(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void onStart(android.content.Intent, int)
    {
        com.ffcs.android.mc.MCCoreService r0;
        com.ffcs.android.mc.BusinessFunction $r3;
        int $i0;
        android.content.Intent $r1;
        java.lang.String $r4;
        java.lang.Exception r2;

        r0 := @this: com.ffcs.android.mc.MCCoreService;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.ffcs.android.mc.MCCoreService: android.content.Intent getIntent()>();

        specialinvoke r0.<android.app.Service: void onStart(android.content.Intent,int)>($r1, $i0);

     label1:
        $r3 = staticinvoke <com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.BusinessFunction getInstance(android.content.Context)>(r0);

        virtualinvoke $r3.<com.ffcs.android.mc.BusinessFunction: void onStartService(android.content.Intent)>($r1);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <com.ffcs.android.mc.util.McExceptionUtil: void put(java.lang.String)>($r4);

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        com.ffcs.android.mc.MCCoreService r0;
        int $i0, $i1;
        android.content.Intent $r1;

        r0 := @this: com.ffcs.android.mc.MCCoreService;

        $r1 := @parameter0: android.content.Intent;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.ffcs.android.mc.MCCoreService: android.content.Intent getIntent()>();

        $i1 = specialinvoke r0.<android.app.Service: int onStartCommand(android.content.Intent,int,int)>($r1, 1, $i0);

        return $i1;
    }

    public android.content.Intent getIntent()
    {
        com.ffcs.android.mc.MCCoreService this;
        android.content.Intent $r0;

        this := @this: com.ffcs.android.mc.MCCoreService;

        $r0 = this.<com.ffcs.android.mc.MCCoreService: android.content.Intent ipcIntent>;

        return $r0;
    }
}
