public class com.tencent.open.utils.DataConvert extends java.lang.Object
{

    public void <init>()
    {
        com.tencent.open.utils.DataConvert r0;

        r0 := @this: com.tencent.open.utils.DataConvert;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] intToBytes2(int)
    {
        byte[] $r0;
        byte $b3;
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $r0 = newarray (byte)[4];

        $i1 = 0;

     label1:
        if $i1 >= 4 goto label2;

        $i2 = $i1 * 8;

        $i2 = 24 - $i2;

        $i2 = $i0 >> $i2;

        $b3 = (byte) $i2;

        $r0[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static int putBytes2Bytes(byte[], int, byte[], int)
    {
        byte[] $r0, $r1;
        byte $b3;
        int $i0, $i1, $i2, $i4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $i4 = 0;

     label1:
        if $i4 >= $i0 goto label2;

        $i2 = $i1 + $i4;

        $b3 = $r0[$i4];

        $r1[$i2] = $b3;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        $i0 = lengthof $r0;

        return $i0;
    }

    public static int putBytes2Bytes(byte[], byte[], int)
    {
        byte[] $r0, $r1;
        byte $b1;
        int $i0, $i2, $i3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i2 = 0;

     label1:
        $i3 = lengthof $r0;

        if $i2 >= $i3 goto label2;

        $i3 = $i0 + $i2;

        $b1 = $r0[$i2];

        $r1[$i3] = $b1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $i0 = lengthof $r0;

        return $i0;
    }

    public static int putInt2Bytes(int, byte[], int)
    {
        byte[] $r0, $r1;
        byte $b2;
        int $i0, $i1, $i3;

        $i0 := @parameter0: int;

        $r0 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $r1 = staticinvoke <com.tencent.open.utils.DataConvert: byte[] intToBytes2(int)>($i0);

        $i0 = 0;

     label1:
        $i3 = lengthof $r1;

        if $i0 >= $i3 goto label2;

        $i3 = $i1 + $i0;

        $b2 = $r1[$i0];

        $r0[$i3] = $b2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $i0 = lengthof $r1;

        return $i0;
    }

    public static int putShort2Bytes(int, byte[], int)
    {
        byte[] $r0, $r1;
        byte $b2;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $r1 = staticinvoke <com.tencent.open.utils.DataConvert: byte[] intToBytes2(int)>($i0);

        $i0 = $i1;

        $b2 = $r1[2];

        $r0[$i0] = $b2;

        $i0 = $i1 + 1;

        $b2 = $r1[3];

        $r0[$i0] = $b2;

        return 2;
    }

    public static int putString2Bytes(java.lang.String, byte[], int)
    {
        byte[] $r1, $r2;
        byte $b1;
        int $i0, $i2, $i3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $r2 = staticinvoke <com.tencent.open.utils.DataConvert: byte[] string2bytes(java.lang.String)>($r0);

        $i2 = 0;

     label1:
        $i3 = lengthof $r2;

        if $i2 >= $i3 goto label2;

        $i3 = $i0 + $i2;

        $b1 = $r2[$i2];

        $r1[$i3] = $b1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $i0 = lengthof $r2;

        return $i0;
    }

    public static byte[] string2bytes(java.lang.String)
    {
        byte[] $r3;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" ", "");

        $r0 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        $i0 = $i0 % 2;

        if $i0 != 1 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = $i1 + 1;

     label1:
        $r3 = newarray (byte)[$i1];

        $i0 = 0;

     label2:
        if $i0 >= $i1 goto label3;

        $i2 = $i0 * 2;

        $i3 = $i0 * 2;

        $i3 = $i3 + 2;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r1, 16);

        $b4 = (byte) $i2;

        $r3[$i0] = $b4;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return $r3;
    }

    public static java.lang.String toHexString(byte[])
    {
        byte[] $r0;
        short $s3;
        byte $b2;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.String $r2, $r3;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        $r4 = new java.lang.StringBuilder;

        $r1 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label4;

        $b2 = $r0[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        $r3 = $r2;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 1 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
