public final class com.google.zxing.qrcode.encoder.MaskUtil extends java.lang.Object
{

    private void <init>()
    {
        com.google.zxing.qrcode.encoder.MaskUtil r0;

        r0 := @this: com.google.zxing.qrcode.encoder.MaskUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        int $i0, $i1;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $i0 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean)>($r0, 1);

        $i1 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean)>($r0, 0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    private static int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix, boolean)
    {
        byte[] $r2;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        byte[][] $r1;
        byte $b0, $b7;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        boolean $z0;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $z0 := @parameter1: boolean;

        $b0 = -1;

        if $z0 == 0 goto label07;

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

     label01:
        if $z0 == 0 goto label08;

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

     label02:
        $r1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        $i3 = 0;

        $i4 = 0;

     label03:
        if $i3 >= $i1 goto label13;

        $i5 = 0;

        $i6 = 0;

     label04:
        if $i5 >= $i2 goto label12;

        if $z0 == 0 goto label09;

        $r2 = $r1[$i3];

        $b7 = $r2[$i5];

     label05:
        $i8 = (int) $b7;

        $i9 = (int) $b0;

        if $i8 != $i9 goto label11;

        $i6 = $i6 + 1;

        if $i6 != 5 goto label10;

        $i4 = $i4 + 3;

     label06:
        $i5 = $i5 + 1;

        goto label04;

     label07:
        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        goto label01;

     label08:
        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        goto label02;

     label09:
        $r2 = $r1[$i5];

        $b7 = $r2[$i3];

        goto label05;

     label10:
        if $i6 <= 5 goto label06;

        $i4 = $i4 + 1;

        goto label06;

     label11:
        $i6 = 1;

        $b0 = $b7;

        goto label06;

     label12:
        $i3 = $i3 + 1;

        goto label03;

     label13:
        return $i4;
    }

    public static int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        byte[] $r2;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        byte[][] $r1;
        byte $b6, $b7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = 0;

        $i3 = 0;

     label1:
        $i4 = -1;

        $i4 = $i1 + $i4;

        if $i2 >= $i4 goto label5;

        $i4 = 0;

     label2:
        $i5 = -1;

        $i5 = $i0 + $i5;

        if $i4 >= $i5 goto label4;

        $r2 = $r1[$i2];

        $b6 = $r2[$i4];

        $r2 = $r1[$i2];

        $i5 = $i4 + 1;

        $b7 = $r2[$i5];

        $i5 = (int) $b6;

        $i8 = (int) $b7;

        if $i5 != $i8 goto label3;

        $i5 = $i2 + 1;

        $r2 = $r1[$i5];

        $b7 = $r2[$i4];

        $i5 = (int) $b6;

        $i8 = (int) $b7;

        if $i5 != $i8 goto label3;

        $i5 = $i2 + 1;

        $r2 = $r1[$i5];

        $i5 = $i4 + 1;

        $b7 = $r2[$i5];

        $i5 = (int) $b6;

        $i8 = (int) $b7;

        if $i5 != $i8 goto label3;

        $i3 = $i3 + 3;

     label3:
        $i4 = $i4 + 1;

        goto label2;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        return $i3;
    }

    public static int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        byte[] $r2;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        byte[][] $r1;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = 0;

        $i3 = 0;

     label01:
        if $i2 >= $i1 goto label10;

        $i4 = 0;

     label02:
        if $i4 >= $i0 goto label09;

        $i5 = $i4 + 6;

        if $i5 >= $i0 goto label05;

        $r2 = $r1[$i2];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label05;

        $r2 = $r1[$i2];

        $i5 = $i4 + 1;

        $b6 = $r2[$i5];

        if $b6 != 0 goto label05;

        $r2 = $r1[$i2];

        $i5 = $i4 + 2;

        $b6 = $r2[$i5];

        if $b6 != 1 goto label05;

        $r2 = $r1[$i2];

        $i5 = $i4 + 3;

        $b6 = $r2[$i5];

        if $b6 != 1 goto label05;

        $r2 = $r1[$i2];

        $i5 = $i4 + 4;

        $b6 = $r2[$i5];

        if $b6 != 1 goto label05;

        $r2 = $r1[$i2];

        $i5 = $i4 + 5;

        $b6 = $r2[$i5];

        if $b6 != 0 goto label05;

        $r2 = $r1[$i2];

        $i5 = $i4 + 6;

        $b6 = $r2[$i5];

        if $b6 != 1 goto label05;

        $i5 = $i4 + 10;

        if $i5 >= $i0 goto label03;

        $r2 = $r1[$i2];

        $i5 = $i4 + 7;

        $b6 = $r2[$i5];

        if $b6 != 0 goto label03;

        $r2 = $r1[$i2];

        $i5 = $i4 + 8;

        $b6 = $r2[$i5];

        if $b6 != 0 goto label03;

        $r2 = $r1[$i2];

        $i5 = $i4 + 9;

        $b6 = $r2[$i5];

        if $b6 != 0 goto label03;

        $r2 = $r1[$i2];

        $i5 = $i4 + 10;

        $b6 = $r2[$i5];

        if $b6 == 0 goto label04;

     label03:
        $i5 = -4;

        $i5 = $i4 + $i5;

        if $i5 < 0 goto label05;

        $r2 = $r1[$i2];

        $i5 = -1;

        $i5 = $i4 + $i5;

        $b6 = $r2[$i5];

        if $b6 != 0 goto label05;

        $r2 = $r1[$i2];

        $i5 = -2;

        $i5 = $i4 + $i5;

        $b6 = $r2[$i5];

        if $b6 != 0 goto label05;

        $r2 = $r1[$i2];

        $i5 = -3;

        $i5 = $i4 + $i5;

        $b6 = $r2[$i5];

        if $b6 != 0 goto label05;

        $r2 = $r1[$i2];

        $i5 = -4;

        $i5 = $i4 + $i5;

        $b6 = $r2[$i5];

        if $b6 != 0 goto label05;

     label04:
        $i3 = $i3 + 40;

     label05:
        $i5 = $i2 + 6;

        if $i5 >= $i1 goto label08;

        $r2 = $r1[$i2];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label08;

        $i5 = $i2 + 1;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label08;

        $i5 = $i2 + 2;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label08;

        $i5 = $i2 + 3;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label08;

        $i5 = $i2 + 4;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label08;

        $i5 = $i2 + 5;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label08;

        $i5 = $i2 + 6;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 1 goto label08;

        $i5 = $i2 + 10;

        if $i5 >= $i1 goto label06;

        $i5 = $i2 + 7;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label06;

        $i5 = $i2 + 8;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label06;

        $i5 = $i2 + 9;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label06;

        $i5 = $i2 + 10;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 == 0 goto label07;

     label06:
        $i5 = -4;

        $i5 = $i2 + $i5;

        if $i5 < 0 goto label08;

        $i5 = -1;

        $i5 = $i2 + $i5;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label08;

        $i5 = -2;

        $i5 = $i2 + $i5;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label08;

        $i5 = -3;

        $i5 = $i2 + $i5;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label08;

        $i5 = -4;

        $i5 = $i2 + $i5;

        $r2 = $r1[$i5];

        $b6 = $r2[$i4];

        if $b6 != 0 goto label08;

     label07:
        $i3 = $i3 + 40;

     label08:
        $i4 = $i4 + 1;

        goto label02;

     label09:
        $i2 = $i2 + 1;

        goto label01;

     label10:
        return $i3;
    }

    public static int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        byte[] $r2;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        byte[][] $r1;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4;
        double $d0, $d1;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte[][] getArray()>();

        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label5;

        $i4 = 0;

     label2:
        if $i4 >= $i0 goto label4;

        $r2 = $r1[$i2];

        $b5 = $r2[$i4];

        if $b5 != 1 goto label3;

        $i3 = $i3 + 1;

     label3:
        $i4 = $i4 + 1;

        goto label2;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i0 = $i0 * $i1;

        $d0 = (double) $i3;

        $d1 = (double) $i0;

        $d0 = $d0 / $d1;

        $d0 = $d0 * 100.0;

        $d0 = $d0 - 50.0;

        $i3 = (int) $d0;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        $i3 = $i3 / 5;

        $i3 = $i3 * 10;

        return $i3;
    }

    public static boolean getDataMaskBit(int, int, int)
    {
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r0;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.QRCode: boolean isValidMaskPattern(int)>($i0);

        if $z0 != 0 goto label01;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid mask pattern");

        throw $r0;

     label01:
        lookupswitch($i0)
        {
            case 0: goto label03;
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            default: goto label02;
        };

     label02:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid mask pattern: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label03:
        $i0 = $i2 + $i1;

        $i0 = $i0 & 1;

     label04:
        if $i0 != 0 goto label12;

        return 1;

     label05:
        $i0 = $i2 & 1;

        goto label04;

     label06:
        $i0 = $i1 % 3;

        goto label04;

     label07:
        $i0 = $i2 + $i1;

        $i0 = $i0 % 3;

        goto label04;

     label08:
        $i0 = $i2 >>> 1;

        $i1 = $i1 / 3;

        $i0 = $i0 + $i1;

        $i0 = $i0 & 1;

        goto label04;

     label09:
        $i1 = $i2 * $i1;

        $i0 = $i1 & 1;

        $i1 = $i1 % 3;

        $i0 = $i1 + $i0;

        goto label04;

     label10:
        $i1 = $i2 * $i1;

        $i0 = $i1 & 1;

        $i1 = $i1 % 3;

        $i0 = $i1 + $i0;

        $i0 = $i0 & 1;

        goto label04;

     label11:
        $i0 = $i2 * $i1;

        $i0 = $i0 % 3;

        $i1 = $i2 + $i1;

        $i1 = $i1 & 1;

        $i0 = $i0 + $i1;

        $i0 = $i0 & 1;

        goto label04;

     label12:
        return 0;
    }
}
