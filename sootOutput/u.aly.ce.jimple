public class u.aly.ce extends java.lang.Object
{

    public void <init>()
    {
        u.aly.ce r0;

        r0 := @this: u.aly.ce;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static u.aly.cd a(java.lang.Class, int)
    {
        java.lang.Throwable $r8, $r9, $r10;
        java.lang.Object[] $r4;
        java.lang.Class[] $r1;
        java.lang.Integer $r5;
        u.aly.cd $r7;
        int $i0;
        java.lang.Class $r0, $r2;
        java.lang.Object $r6;
        java.lang.reflect.Method $r3;

        $r0 := @parameter0: java.lang.Class;

        $i0 := @parameter1: int;

        $r1 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[0] = $r2;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("findByValue", $r1);

     label2:
        $r4 = newarray (java.lang.Object)[1];

     label3:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label4:
        $r4[0] = $r5;

     label5:
        $r6 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

     label6:
        $r7 = (u.aly.cd) $r6;

        return $r7;

     label7:
        $r8 := @caughtexception;

        return null;

     label8:
        $r9 := @caughtexception;

        return null;

     label9:
        $r10 := @caughtexception;

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
        catch java.lang.IllegalAccessException from label1 to label2 with label8;
        catch java.lang.IllegalAccessException from label3 to label4 with label8;
        catch java.lang.IllegalAccessException from label5 to label6 with label8;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label9;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label9;
        catch java.lang.reflect.InvocationTargetException from label5 to label6 with label9;
    }
}
