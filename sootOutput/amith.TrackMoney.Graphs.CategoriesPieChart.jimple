public class amith.TrackMoney.Graphs.CategoriesPieChart extends amith.TrackMoney.Graphs.AbstractChart
{
    java.lang.Double totalSpent;
    java.util.Hashtable values;

    public void <init>()
    {
        java.lang.Double $r1;
        amith.TrackMoney.Graphs.CategoriesPieChart r0;
        java.util.Hashtable $r2;

        r0 := @this: amith.TrackMoney.Graphs.CategoriesPieChart;

        specialinvoke r0.<amith.TrackMoney.Graphs.AbstractChart: void <init>()>();

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.util.Hashtable values> = $r2;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.lang.Double totalSpent> = $r1;

        return;
    }

    private int[] getColors(int)
    {
        java.util.Random r2, $r3;
        int[] r1;
        amith.TrackMoney.Graphs.CategoriesPieChart r0;
        int $i0, $i1, i2, $i3;

        r0 := @this: amith.TrackMoney.Graphs.CategoriesPieChart;

        $i0 := @parameter0: int;

        r1 = newarray (int)[$i0];

        $r3 = new java.util.Random;

        r2 = $r3;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        i2 = 0;

     label1:
        if i2 < $i0 goto label2;

        return r1;

     label2:
        $i1 = virtualinvoke r2.<java.util.Random: int nextInt(int)>(16770000);

        $i3 = -1;

        $i1 = $i1 * $i3;

        r1[i2] = $i1;

        i2 = i2 + 1;

        goto label1;
    }

    public android.content.Intent execute(android.content.Context)
    {
        android.content.Context $r1;
        java.util.Enumeration $r10;
        java.lang.Double r17, $r20;
        amith.TrackMoney.dataBase.DataHelper r2;
        android.content.Intent $r13;
        java.lang.String[] $r19;
        java.lang.Integer r16;
        java.util.ArrayList $r8, r15;
        java.util.Calendar $r4;
        int[] $r11;
        int i0, $i1;
        org.achartengine.model.CategorySeries r3;
        java.lang.String $r6, $r7;
        java.util.Hashtable $r9;
        boolean $z0;
        double $d0, $d1;
        amith.TrackMoney.Graphs.CategoriesPieChart r0;
        java.lang.StringBuilder $r5, $r18;
        java.lang.Object $r14;
        org.achartengine.renderer.DefaultRenderer $r12;

        r0 := @this: amith.TrackMoney.Graphs.CategoriesPieChart;

        $r1 := @parameter0: android.content.Context;

        r2 = new amith.TrackMoney.dataBase.DataHelper;

        specialinvoke r2.<amith.TrackMoney.dataBase.DataHelper: void <init>(android.content.Context,java.lang.String)>($r1, "TRANSACTIONS");

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i1 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(1);

        i0 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(2);

        i0 = i0 + 1;

        $r5 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r6 = staticinvoke <amith.TrackMoney.Global.CGlobal: java.lang.String addZero(int)>(i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r6 = staticinvoke <amith.TrackMoney.Global.CGlobal: java.lang.String addZero(int)>(1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 00:00:00.000");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r7 = staticinvoke <amith.TrackMoney.Global.CGlobal: java.lang.String addZero(int)>(i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r7 = staticinvoke <amith.TrackMoney.Global.CGlobal: java.lang.String addZero(int)>(31);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 00:00:00.000");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r2.<amith.TrackMoney.dataBase.DataHelper: java.util.ArrayList getTransactionFor(java.lang.String,java.lang.String)>($r6, $r7);

        $i1 = 0;

     label1:
        i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i1 < i0 goto label3;

        r3 = new org.achartengine.model.CategorySeries;

        specialinvoke r3.<org.achartengine.model.CategorySeries: void <init>(java.lang.String)>("Categories");

        $i1 = 0;

        $r9 = r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.util.Hashtable values>;

        $r10 = virtualinvoke $r9.<java.util.Hashtable: java.util.Enumeration keys()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label4;

        $r11 = specialinvoke r0.<amith.TrackMoney.Graphs.CategoriesPieChart: int[] getColors(int)>($i1);

        $r12 = virtualinvoke r0.<amith.TrackMoney.Graphs.CategoriesPieChart: org.achartengine.renderer.DefaultRenderer buildCategoryRenderer(int[])>($r11);

        virtualinvoke $r12.<org.achartengine.renderer.DefaultRenderer: void setLabelsTextSize(float)>(10.0F);

        virtualinvoke $r12.<org.achartengine.renderer.DefaultRenderer: void setShowLegend(boolean)>(0);

        $r13 = staticinvoke <org.achartengine.ChartFactory: android.content.Intent getPieChartIntent(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DefaultRenderer)>($r1, r3, $r12);

        return $r13;

     label3:
        $r14 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        r15 = (java.util.ArrayList) $r14;

        virtualinvoke r0.<amith.TrackMoney.Graphs.CategoriesPieChart: void insertIntoHashTable(java.util.ArrayList)>(r15);

        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r14 = interfaceinvoke $r10.<java.util.Enumeration: java.lang.Object nextElement()>();

        r16 = (java.lang.Integer) $r14;

        $r9 = r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.util.Hashtable values>;

        $r14 = virtualinvoke $r9.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r16);

        r17 = (java.lang.Double) $r14;

        $r5 = new java.lang.StringBuilder;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = staticinvoke <amith.TrackMoney.Global.CGlobal: java.lang.String[] getCategory(java.lang.String)>($r6);

        $r6 = $r19[1];

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $d0 = virtualinvoke r17.<java.lang.Double: double doubleValue()>();

        $d0 = $d0 * 100.0;

        $r20 = r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.lang.Double totalSpent>;

        $d1 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $d0 = $d0 / $d1;

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r20 = staticinvoke <amith.TrackMoney.Global.CGlobal: java.lang.Double Round(java.lang.Double,int)>($r20, 1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%)");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $d0 = virtualinvoke r17.<java.lang.Double: double doubleValue()>();

        virtualinvoke r3.<org.achartengine.model.CategorySeries: void add(java.lang.String,double)>($r6, $d0);

        $i1 = $i1 + 1;

        goto label2;
    }

    public java.lang.String getDesc()
    {
        amith.TrackMoney.Graphs.CategoriesPieChart r0;

        r0 := @this: amith.TrackMoney.Graphs.CategoriesPieChart;

        return "Categories Graph (Pie Chart)";
    }

    public java.lang.String getName()
    {
        amith.TrackMoney.Graphs.CategoriesPieChart r0;

        r0 := @this: amith.TrackMoney.Graphs.CategoriesPieChart;

        return "Categories Graph";
    }

    public void insertIntoHashTable(java.util.ArrayList)
    {
        java.lang.Double r6;
        java.lang.Integer $r5;
        java.lang.Exception $r7;
        java.util.ArrayList r1;
        amith.TrackMoney.Graphs.CategoriesPieChart r0;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r3;
        java.util.Hashtable $r4;
        double $d0, $d1;

        r0 := @this: amith.TrackMoney.Graphs.CategoriesPieChart;

        r1 := @parameter0: java.util.ArrayList;

     label01:
        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(2);

        $r3 = (java.lang.String) $r2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $r4 = r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.util.Hashtable values>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r5);

        r6 = (java.lang.Double) $r2;

     label02:
        if r6 != null goto label08;

     label03:
        $r4 = r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.util.Hashtable values>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(3);

        $r3 = (java.lang.String) $r2;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r6);

     label04:
        r6 = r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.lang.Double totalSpent>;

        $d0 = virtualinvoke r6.<java.lang.Double: double doubleValue()>();

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(3);

        $r3 = (java.lang.String) $r2;

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

     label05:
        $d0 = $d0 + $d1;

     label06:
        r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.lang.Double totalSpent> = r6;

     label07:
        return;

     label08:
        $r4 = r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.util.Hashtable values>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r5);

        $r4 = r0.<amith.TrackMoney.Graphs.CategoriesPieChart: java.util.Hashtable values>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(3);

        $r3 = (java.lang.String) $r2;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        $d1 = virtualinvoke r6.<java.lang.Double: double doubleValue()>();

     label09:
        $d0 = $d0 + $d1;

     label10:
        r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r6);

     label11:
        goto label04;

     label12:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TrackMoney", "Parsing date failed while creating graph");

        return;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }
}
