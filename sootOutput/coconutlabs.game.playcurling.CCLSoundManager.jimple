public class coconutlabs.game.playcurling.CCLSoundManager extends java.lang.Object
{
    private boolean m_bInit;
    coconutlabs.game.playcurling.CCLDefine m_def;
    private java.util.HashMap m_mapStreamId;
    android.media.MediaPlayer m_mpBgmGame;
    android.media.MediaPlayer m_mpBgmResult;
    android.media.MediaPlayer m_mpBgmTitle;
    private int m_nSoundIdCollisionBig;
    private int m_nSoundIdCollisionMedium;
    private int m_nSoundIdCollisionSmall;
    private int m_nSoundIdSlide;
    private int m_nSoundIdSweep;
    private int m_nStreamIdSlide;
    private android.media.SoundPool m_sp;

    private void <init>()
    {
        java.util.HashMap $r1;
        coconutlabs.game.playcurling.CCLSoundManager r0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLSoundManager: boolean m_bInit> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLSoundManager: java.util.HashMap m_mapStreamId> = $r1;

        return;
    }

    void <init>(coconutlabs.game.playcurling.CCLSoundManager)
    {
        coconutlabs.game.playcurling.CCLSoundManager r0, $r1;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        $r1 := @parameter0: coconutlabs.game.playcurling.CCLSoundManager;

        specialinvoke r0.<coconutlabs.game.playcurling.CCLSoundManager: void <init>()>();

        return;
    }

    public static coconutlabs.game.playcurling.CCLSoundManager getInstance()
    {
        coconutlabs.game.playcurling.CCLSoundManager $r0;

        $r0 = staticinvoke <coconutlabs.game.playcurling.CCLSoundManager$SingletonHolder: coconutlabs.game.playcurling.CCLSoundManager access$0()>();

        return $r0;
    }

    public void BGMPause()
    {
        android.media.MediaPlayer $r1;
        coconutlabs.game.playcurling.CCLSoundManager r0;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame>;

        $z0 = virtualinvoke $r1.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame>;

        virtualinvoke $r1.<android.media.MediaPlayer: void pause()>();

     label2:
        return;
    }

    public void BGMPlay(int) throws java.lang.IllegalStateException, java.io.IOException
    {
        int $i0;
        android.media.MediaPlayer $r1;
        coconutlabs.game.playcurling.CCLSoundManager r0;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        $i0 := @parameter0: int;

        $z0 = <coconutlabs.game.playcurling.CCLDefine: boolean OPTION_MUSIC>;

        if $z0 == 0 goto label5;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmTitle>;

        if $r1 == null goto label5;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame>;

        if $r1 == null goto label5;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmResult>;

        if $r1 != null goto label1;

        return;

     label1:
        if $i0 != 0 goto label2;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmTitle>;

        $z0 = virtualinvoke $r1.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z0 != 0 goto label5;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmTitle>;

        virtualinvoke $r1.<android.media.MediaPlayer: void start()>();

        return;

     label2:
        if $i0 != 1 goto label3;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame>;

        $z0 = virtualinvoke $r1.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z0 != 0 goto label5;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame>;

        virtualinvoke $r1.<android.media.MediaPlayer: void start()>();

        return;

     label3:
        if $i0 != 2 goto label5;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmResult>;

        $z0 = virtualinvoke $r1.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmResult>;

        virtualinvoke $r1.<android.media.MediaPlayer: void stop()>();

     label4:
        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmResult>;

        virtualinvoke $r1.<android.media.MediaPlayer: void start()>();

     label5:
        return;
    }

    public void BGMStop(int)
    {
        int $i0;
        android.media.MediaPlayer $r1;
        java.lang.Exception $r2;
        coconutlabs.game.playcurling.CCLSoundManager r0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        $i0 := @parameter0: int;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmTitle>;

        if $r1 == null goto label7;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame>;

        if $r1 == null goto label7;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmResult>;

        if $r1 != null goto label1;

        return;

     label1:
        if $i0 != 0 goto label2;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmTitle>;

        virtualinvoke $r1.<android.media.MediaPlayer: void stop()>();

        return;

     label2:
        if $i0 != 1 goto label6;

     label3:
        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame>;

        virtualinvoke $r1.<android.media.MediaPlayer: void stop()>();

     label4:
        return;

     label5:
        $r2 := @caughtexception;

        return;

     label6:
        if $i0 != 2 goto label7;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmResult>;

        virtualinvoke $r1.<android.media.MediaPlayer: void stop()>();

     label7:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public int GetSoundIdCollisionBig()
    {
        int i0;
        coconutlabs.game.playcurling.CCLSoundManager r0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        i0 = r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nSoundIdCollisionBig>;

        return i0;
    }

    public int GetSoundIdCollisionMedium()
    {
        int i0;
        coconutlabs.game.playcurling.CCLSoundManager r0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        i0 = r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nSoundIdCollisionMedium>;

        return i0;
    }

    public int GetSoundIdCollisionSmall()
    {
        int i0;
        coconutlabs.game.playcurling.CCLSoundManager r0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        i0 = r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nSoundIdCollisionSmall>;

        return i0;
    }

    public int GetSoundIdSlide()
    {
        int i0;
        coconutlabs.game.playcurling.CCLSoundManager r0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        i0 = r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nSoundIdSlide>;

        return i0;
    }

    public int GetSoundIdSweep()
    {
        int i0;
        coconutlabs.game.playcurling.CCLSoundManager r0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        i0 = r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nSoundIdSweep>;

        return i0;
    }

    public void Init(android.content.Context)
    {
        java.lang.Throwable $r5;
        android.content.Context $r1;
        java.lang.IllegalStateException $r7;
        android.media.MediaPlayer $r3;
        android.media.SoundPool $r2, $r6;
        int $i0;
        coconutlabs.game.playcurling.CCLDefine $r4;
        coconutlabs.game.playcurling.CCLSoundManager r0;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        $r1 := @parameter0: android.content.Context;

        $z0 = r0.<coconutlabs.game.playcurling.CCLSoundManager: boolean m_bInit>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = new android.media.SoundPool;

        specialinvoke $r6.<android.media.SoundPool: void <init>(int,int,int)>(5, 3, 0);

        r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp> = $r6;

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        if $r2 == null goto label2;

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        $i0 = virtualinvoke $r2.<android.media.SoundPool: int load(android.content.Context,int,int)>($r1, 2131099651, 1);

        r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nSoundIdCollisionBig> = $i0;

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        $i0 = virtualinvoke $r2.<android.media.SoundPool: int load(android.content.Context,int,int)>($r1, 2131099652, 1);

        r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nSoundIdCollisionMedium> = $i0;

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        $i0 = virtualinvoke $r2.<android.media.SoundPool: int load(android.content.Context,int,int)>($r1, 2131099653, 1);

        r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nSoundIdCollisionSmall> = $i0;

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        $i0 = virtualinvoke $r2.<android.media.SoundPool: int load(android.content.Context,int,int)>($r1, 2131099654, 1);

        r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nSoundIdSlide> = $i0;

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        $i0 = virtualinvoke $r2.<android.media.SoundPool: int load(android.content.Context,int,int)>($r1, 2131099655, 1);

        r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nSoundIdSweep> = $i0;

     label2:
        $r3 = staticinvoke <android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>($r1, 2131099650);

     label3:
        r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmTitle> = $r3;

     label4:
        $r3 = staticinvoke <android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>($r1, 2131099648);

     label5:
        r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame> = $r3;

     label6:
        $r3 = staticinvoke <android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>($r1, 2131099649);

     label7:
        r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmResult> = $r3;

     label8:
        $r3 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmTitle>;

        virtualinvoke $r3.<android.media.MediaPlayer: void setLooping(boolean)>(1);

        $r3 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame>;

        virtualinvoke $r3.<android.media.MediaPlayer: void setLooping(boolean)>(1);

        $r4 = staticinvoke <coconutlabs.game.playcurling.CCLDefine: coconutlabs.game.playcurling.CCLDefine getInstance()>();

        r0.<coconutlabs.game.playcurling.CCLSoundManager: coconutlabs.game.playcurling.CCLDefine m_def> = $r4;

        r0.<coconutlabs.game.playcurling.CCLSoundManager: boolean m_bInit> = 1;

        return;

     label9:
        $r5 := @caughtexception;

        $r7 = (java.lang.IllegalStateException) $r5;

        virtualinvoke $r7.<java.lang.IllegalStateException: void printStackTrace()>();

        goto label8;

        catch java.lang.IllegalStateException from label2 to label3 with label9;
        catch java.lang.IllegalStateException from label4 to label5 with label9;
        catch java.lang.IllegalStateException from label6 to label7 with label9;
    }

    public boolean IsInit()
    {
        coconutlabs.game.playcurling.CCLSoundManager r0;
        boolean z0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        z0 = r0.<coconutlabs.game.playcurling.CCLSoundManager: boolean m_bInit>;

        return z0;
    }

    public void PlaySound(int, int)
    {
        java.util.HashMap $r2;
        java.lang.Integer $r3, $r4;
        android.media.SoundPool $r1;
        int $i0, $i1;
        coconutlabs.game.playcurling.CCLSoundManager r0;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = <coconutlabs.game.playcurling.CCLDefine: boolean OPTION_SOUND>;

        if $z0 == 0 goto label1;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        $i1 = virtualinvoke $r1.<android.media.SoundPool: int play(int,float,float,int,int,float)>($i0, 1.0F, 1.0F, 1, $i1, 1.0F);

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: java.util.HashMap m_mapStreamId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

     label1:
        return;
    }

    public void Release()
    {
        android.media.SoundPool $r1;
        int $i0;
        android.media.MediaPlayer $r2;
        coconutlabs.game.playcurling.CCLSoundManager r0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        $i0 = r0.<coconutlabs.game.playcurling.CCLSoundManager: int m_nStreamIdSlide>;

        virtualinvoke $r1.<android.media.SoundPool: void stop(int)>($i0);

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        virtualinvoke $r1.<android.media.SoundPool: void release()>();

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmTitle>;

        virtualinvoke $r2.<android.media.MediaPlayer: void reset()>();

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmGame>;

        virtualinvoke $r2.<android.media.MediaPlayer: void reset()>();

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.MediaPlayer m_mpBgmResult>;

        virtualinvoke $r2.<android.media.MediaPlayer: void reset()>();

        r0.<coconutlabs.game.playcurling.CCLSoundManager: boolean m_bInit> = 0;

        return;
    }

    public void SetVolume(int, float)
    {
        java.util.HashMap $r1;
        java.lang.Integer $r3;
        android.media.SoundPool $r2;
        int $i0, $i1;
        float $f0;
        java.lang.Object $r4;
        coconutlabs.game.playcurling.CCLSoundManager r0;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $z0 = <coconutlabs.game.playcurling.CCLDefine: boolean OPTION_SOUND>;

        if $z0 == 0 goto label1;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: java.util.HashMap m_mapStreamId>;

        $i1 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label1;

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: java.util.HashMap m_mapStreamId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r3 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<android.media.SoundPool: void setVolume(int,float,float)>($i0, $f0, $f0);

     label1:
        return;
    }

    public void Stop(int)
    {
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        android.media.SoundPool $r1;
        int $i0, $i1;
        java.lang.Object $r4;
        coconutlabs.game.playcurling.CCLSoundManager r0;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.CCLSoundManager;

        $i0 := @parameter0: int;

        $z0 = <coconutlabs.game.playcurling.CCLDefine: boolean OPTION_SOUND>;

        if $z0 == 0 goto label1;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        if $r1 == null goto label1;

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: java.util.HashMap m_mapStreamId>;

        $i1 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label1;

        $r1 = r0.<coconutlabs.game.playcurling.CCLSoundManager: android.media.SoundPool m_sp>;

        $r2 = r0.<coconutlabs.game.playcurling.CCLSoundManager: java.util.HashMap m_mapStreamId>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r3 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        virtualinvoke $r1.<android.media.SoundPool: void stop(int)>($i0);

     label1:
        return;
    }
}
