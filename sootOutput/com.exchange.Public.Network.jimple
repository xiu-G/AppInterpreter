public class com.exchange.Public.Network extends java.lang.Object
{

    public void <init>()
    {
        com.exchange.Public.Network r0;

        r0 := @this: com.exchange.Public.Network;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String convertStreamToString(java.io.InputStream)
    {
        java.lang.Throwable $r6, r7, $r8, r9, r10;
        java.io.InputStreamReader $r3;
        java.lang.StringBuilder r2, $r5;
        java.io.BufferedReader r1;
        java.lang.String $r4;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        r1 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r3, 8192);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r4 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label02:
        if $r4 != null goto label05;

     label03:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label04:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label05:
        $r5 = new java.lang.StringBuilder;

     label06:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label07:
        goto label01;

     label08:
        $r6 := @caughtexception;

     label09:
        $r4 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Caught IOException in convertStreamToString()", $r6);

     label10:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label11:
        return null;

     label12:
        r7 := @caughtexception;

        $r4 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Caught IOException in convertStreamToString()", r7);

        return null;

     label13:
        $r8 := @caughtexception;

     label14:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label15:
        throw $r8;

     label16:
        r9 := @caughtexception;

        $r4 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Caught IOException in convertStreamToString()", r9);

        return null;

     label17:
        r10 := @caughtexception;

        $r4 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Caught IOException in convertStreamToString()", r10);

        return null;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label05 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label14 to label15 with label16;
    }

    public static android.graphics.drawable.Drawable fetchImage(java.lang.String)
    {
        byte[] r1;
        java.net.URL r3, $r16;
        android.graphics.drawable.Drawable $r11;
        java.net.URLConnection $r8;
        int $i0;
        java.lang.String $r0, $r4, $r6;
        boolean $z0;
        java.io.FileOutputStream r2, $r17;
        java.io.File r5, $r14;
        java.lang.Exception $r12;
        java.lang.StackTraceElement[] $r13;
        java.lang.StringBuilder $r7, $r15;
        java.lang.Object $r9;
        java.io.InputStream r10;

        $r0 := @parameter0: java.lang.String;

     label01:
        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("/", "");

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(":", "");

     label02:
        $r14 = new java.io.File;

        r5 = $r14;

        $r6 = <com.exchange.Public.ExchangeConstants: java.lang.String IMAGE_ROOT>;

     label03:
        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r6);

        virtualinvoke r5.<java.io.File: boolean mkdirs()>();

     label04:
        $r15 = new java.lang.StringBuilder;

        $r7 = $r15;

        $r6 = <com.exchange.Public.ExchangeConstants: java.lang.String IMAGE_ROOT>;

     label05:
        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r14 = new java.io.File;

        r5 = $r14;

     label07:
        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke r5.<java.io.File: boolean exists()>();

     label08:
        if $z0 != 0 goto label18;

     label09:
        virtualinvoke r5.<java.io.File: boolean createNewFile()>();

     label10:
        $r16 = new java.net.URL;

        r3 = $r16;

     label11:
        specialinvoke $r16.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r8 = virtualinvoke r3.<java.net.URL: java.net.URLConnection openConnection()>();

        $r9 = virtualinvoke $r8.<java.net.URLConnection: java.lang.Object getContent()>();

        r10 = (java.io.InputStream) $r9;

     label12:
        $r17 = new java.io.FileOutputStream;

        r2 = $r17;

     label13:
        specialinvoke $r17.<java.io.FileOutputStream: void <init>(java.io.File)>(r5);

     label14:
        r1 = newarray (byte)[4096];

     label15:
        $i0 = virtualinvoke r10.<java.io.InputStream: int read(byte[])>(r1);

     label16:
        if $i0 != -1 goto label20;

     label17:
        virtualinvoke r2.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r10.<java.io.InputStream: void close()>();

        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label18:
        $r11 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>($r4);

     label19:
        return $r11;

     label20:
        virtualinvoke r2.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

     label21:
        goto label15;

     label22:
        $r12 := @caughtexception;

        $r0 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

        $r13 = virtualinvoke $r12.<java.lang.Exception: java.lang.StackTraceElement[] getStackTrace()>();

        $r4 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r4);

        return null;

        catch java.lang.Exception from label01 to label02 with label22;
        catch java.lang.Exception from label03 to label04 with label22;
        catch java.lang.Exception from label05 to label06 with label22;
        catch java.lang.Exception from label07 to label08 with label22;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.lang.Exception from label11 to label12 with label22;
        catch java.lang.Exception from label13 to label14 with label22;
        catch java.lang.Exception from label15 to label16 with label22;
        catch java.lang.Exception from label17 to label19 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
    }

    public static java.lang.String sendMessage(org.json.JSONObject, java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient r2;
        org.apache.http.message.BasicNameValuePair $r8;
        java.lang.Throwable $r15, $r16;
        org.apache.http.client.methods.HttpPost r3;
        org.apache.http.params.BasicHttpParams r5;
        org.apache.http.client.entity.UrlEncodedFormEntity $r9;
        org.apache.http.StatusLine $r11;
        java.util.ArrayList r4;
        org.json.JSONObject $r0;
        int $i0;
        java.lang.String $r1, $r6, $r7;
        org.apache.http.HttpEntity $r13;
        org.apache.http.HttpResponse $r10;
        java.lang.StringBuilder $r12;
        java.io.InputStream $r14;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r6 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

        $r7 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r6, $r7);

        r3 = new org.apache.http.client.methods.HttpPost;

        specialinvoke r3.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r1);

        r5 = new org.apache.http.params.BasicHttpParams;

        specialinvoke r5.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r5, 10000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r5, 20000);

        r2 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke r2.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r5);

        r4 = new java.util.ArrayList;

     label01:
        specialinvoke r4.<java.util.ArrayList: void <init>(int)>(1);

     label02:
        $r8 = new org.apache.http.message.BasicNameValuePair;

     label03:
        $r6 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("content", $r6);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r8);

     label04:
        $r9 = new org.apache.http.client.entity.UrlEncodedFormEntity;

     label05:
        specialinvoke $r9.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r4, "UTF-8");

        virtualinvoke r3.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r9);

        $r10 = interfaceinvoke r2.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r3);

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r11.<org.apache.http.StatusLine: int getStatusCode()>();

     label06:
        if $i0 != 200 goto label12;

        $r6 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

        $r12 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sent message to ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r6, $r1);

        $r13 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label08:
        if $r13 == null goto label11;

     label09:
        $r14 = interfaceinvoke $r13.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r1 = staticinvoke <com.exchange.Public.Network: java.lang.String convertStreamToString(java.io.InputStream)>($r14);

     label10:
        return $r1;

     label11:
        return null;

     label12:
        $r1 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

     label13:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, "Failed to send message.");

     label14:
        return null;

     label15:
        $r15 := @caughtexception;

        $r1 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "ClientProtocolException,Failed to send message.", $r15);

        return null;

     label16:
        $r16 := @caughtexception;

        $r1 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "IOException,Failed to send message.", $r16);

        return null;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label15;
        catch org.apache.http.client.ClientProtocolException from label03 to label04 with label15;
        catch org.apache.http.client.ClientProtocolException from label05 to label06 with label15;
        catch org.apache.http.client.ClientProtocolException from label07 to label08 with label15;
        catch org.apache.http.client.ClientProtocolException from label09 to label10 with label15;
        catch org.apache.http.client.ClientProtocolException from label13 to label14 with label15;
        catch java.io.IOException from label01 to label02 with label16;
        catch java.io.IOException from label03 to label04 with label16;
        catch java.io.IOException from label05 to label06 with label16;
        catch java.io.IOException from label07 to label08 with label16;
        catch java.io.IOException from label09 to label10 with label16;
        catch java.io.IOException from label13 to label14 with label16;
    }
}
