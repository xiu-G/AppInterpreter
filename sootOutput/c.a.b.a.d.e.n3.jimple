public abstract class c.a.b.a.d.e.n3 extends java.lang.Object
{

    private void <init>()
    {
        c.a.b.a.d.e.n3 r0;

        r0 := @this: c.a.b.a.d.e.n3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(c.a.b.a.d.e.q3)
    {
        c.a.b.a.d.e.q3 $r1;
        c.a.b.a.d.e.n3 r0;

        r0 := @this: c.a.b.a.d.e.n3;

        $r1 := @parameter0: c.a.b.a.d.e.q3;

        specialinvoke r0.<c.a.b.a.d.e.n3: void <init>()>();

        return;
    }

    public static long a(long)
    {
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 = $l0 >>> 1;

        $l0 = $l0 & 1L;

        $l0 = neg $l0;

        $l0 = $l0 ^ $l1;

        return $l0;
    }

    static c.a.b.a.d.e.n3 b(byte[], int, int, boolean)
    {
        byte[] $r0;
        int $i0, $i1;
        c.a.b.a.d.e.t4 $r2;
        c.a.b.a.d.e.p3 $r1;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r1 = new c.a.b.a.d.e.p3;

        specialinvoke $r1.<c.a.b.a.d.e.p3: void <init>(byte[],int,int,boolean,c.a.b.a.d.e.q3)>($r0, 0, $i0, 0, null);

     label1:
        virtualinvoke $r1.<c.a.b.a.d.e.p3: int d(int)>($i0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch c.a.b.a.d.e.t4 from label1 to label2 with label3;
    }

    public static int c(int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 = $i1 >>> 1;

        $i1 = $i1 & 1;

        $i1 = neg $i1;

        $i1 = $i1 ^ $i0;

        return $i1;
    }
}
