public class com.cooliris.media.CropImageView extends com.cooliris.media.ImageViewTouchBase
{
    float mLastX;
    float mLastY;
    int mMotionEdge;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.cooliris.media.CropImageView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.cooliris.media.CropImageView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    private void centerBasedOnHighlightView()
    {
        com.cooliris.media.CropImageView r0;
        float[] r1;
        byte $b1;
        int $i0;
        float f0, f1, $f2;
        android.graphics.Matrix $r2;
        double $d0;

        r0 := @this: com.cooliris.media.CropImageView;

        $i0 = virtualinvoke r0.<com.cooliris.media.CropImageView: int getWidth()>();

        f1 = (float) $i0;

        $i0 = virtualinvoke r0.<com.cooliris.media.CropImageView: int getHeight()>();

        f0 = (float) $i0;

        f1 = f1 / f1;

        f1 = f1 * 0.6F;

        f0 = f0 / f0;

        f0 = f0 * 0.6F;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>(f1, f0);

        f1 = virtualinvoke r0.<com.cooliris.media.CropImageView: float getScale()>();

        f0 = f0 * f1;

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(1.0F, f0);

        f1 = virtualinvoke r0.<com.cooliris.media.CropImageView: float getScale()>();

        f1 = f0 - f1;

        f1 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        f1 = f1 / f0;

        $d0 = (double) f1;

        $b1 = $d0 cmpl 0.1;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label1;

        r1 = newarray (float)[2];

        r1[0] = 10.0F;

        r1[1] = 10.0F;

        $r2 = virtualinvoke r0.<com.cooliris.media.CropImageView: android.graphics.Matrix getImageMatrix()>();

        virtualinvoke $r2.<android.graphics.Matrix: void mapPoints(float[])>(r1);

        f1 = r1[0];

        $f2 = r1[1];

        virtualinvoke r0.<com.cooliris.media.CropImageView: void zoomTo(float,float,float,float)>(f0, f1, $f2, 300.0F);

     label1:
        specialinvoke r0.<com.cooliris.media.CropImageView: void ensureVisible()>();

        return;
    }

    private void ensureVisible()
    {
        com.cooliris.media.CropImageView r0;

        r0 := @this: com.cooliris.media.CropImageView;

        return;
    }

    private void recomputeFocus(android.view.MotionEvent)
    {
        com.cooliris.media.CropImageView r0;
        android.view.MotionEvent $r1;

        r0 := @this: com.cooliris.media.CropImageView;

        $r1 := @parameter0: android.view.MotionEvent;

        virtualinvoke r0.<com.cooliris.media.CropImageView: void invalidate()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.cooliris.media.CropImageView r0;
        android.graphics.Canvas $r1;

        r0 := @this: com.cooliris.media.CropImageView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void onDraw(android.graphics.Canvas)>($r1);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.cooliris.media.RotateBitmap $r1;
        com.cooliris.media.CropImageView r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.cooliris.media.CropImageView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $r1 = r0.<com.cooliris.media.CropImageView: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        virtualinvoke $r1.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.cooliris.media.CropImageView r0;
        byte $b1;
        android.view.MotionEvent $r1;
        int $i0;
        float $f0;

        r0 := @this: com.cooliris.media.CropImageView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label6;
            default: goto label2;
        };

     label2:
        return 1;

     label3:
        specialinvoke r0.<com.cooliris.media.CropImageView: void centerBasedOnHighlightView()>();

        goto label1;

     label4:
        specialinvoke r0.<com.cooliris.media.CropImageView: void ensureVisible()>();

        goto label1;

     label5:
        virtualinvoke r0.<com.cooliris.media.CropImageView: void center(boolean,boolean)>(1, 1);

        return 1;

     label6:
        $f0 = virtualinvoke r0.<com.cooliris.media.CropImageView: float getScale()>();

        $b1 = $f0 cmpl 1.0F;

        if $b1 != 0 goto label7;

        virtualinvoke r0.<com.cooliris.media.CropImageView: void center(boolean,boolean)>(1, 1);

     label7:
        return 1;
    }

    protected void postTranslate(float, float)
    {
        com.cooliris.media.CropImageView r0;
        float $f0, $f1;

        r0 := @this: com.cooliris.media.CropImageView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void postTranslate(float,float)>($f0, $f1);

        return;
    }

    protected void zoomIn()
    {
        com.cooliris.media.CropImageView r0;

        r0 := @this: com.cooliris.media.CropImageView;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void zoomIn()>();

        return;
    }

    protected void zoomOut()
    {
        com.cooliris.media.CropImageView r0;

        r0 := @this: com.cooliris.media.CropImageView;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void zoomOut()>();

        return;
    }

    protected void zoomTo(float, float, float)
    {
        com.cooliris.media.CropImageView r0;
        float $f0, $f1, $f2;

        r0 := @this: com.cooliris.media.CropImageView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void zoomTo(float,float,float)>($f0, $f1, $f2);

        return;
    }
}
