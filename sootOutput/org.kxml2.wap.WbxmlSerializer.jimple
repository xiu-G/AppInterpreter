public class org.kxml2.wap.WbxmlSerializer extends java.lang.Object implements org.xmlpull.v1.XmlSerializer
{
    private int attrPage;
    java.util.Hashtable attrStartTable;
    java.util.Hashtable attrValueTable;
    java.util.Vector attributes;
    java.io.ByteArrayOutputStream buf;
    int depth;
    private java.lang.String encoding;
    private boolean headerSent;
    java.lang.String name;
    java.lang.String namespace;
    java.io.OutputStream out;
    java.lang.String pending;
    java.util.Hashtable stringTable;
    java.io.ByteArrayOutputStream stringTableBuf;
    private int tagPage;
    java.util.Hashtable tagTable;

    public void <init>()
    {
        java.util.Vector $r3;
        java.io.ByteArrayOutputStream $r2;
        org.kxml2.wap.WbxmlSerializer r0;
        java.util.Hashtable $r1;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable stringTable> = $r1;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf> = $r2;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream stringTableBuf> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.kxml2.wap.WbxmlSerializer: java.util.Vector attributes> = $r3;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable attrStartTable> = $r1;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable attrValueTable> = $r1;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable tagTable> = $r1;

        r0.<org.kxml2.wap.WbxmlSerializer: boolean headerSent> = 0;

        return;
    }

    static void writeInt(java.io.OutputStream, int) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        byte[] r1;
        short $s5;
        byte $b4;
        int i0, $i1, i2, $i3;

        $r0 := @parameter0: java.io.OutputStream;

        $i1 := @parameter1: int;

        r1 = newarray (byte)[5];

        i2 = 0;

     label1:
        i0 = i2 + 1;

        $i3 = $i1 & 127;

        $b4 = (byte) $i3;

        r1[i2] = $b4;

        $i1 = $i1 >> 7;

        if $i1 != 0 goto label4;

        $i1 = i0;

     label2:
        if $i1 <= 1 goto label3;

        $i1 = $i1 + -1;

        $b4 = r1[$i1];

        $s5 = (short) $b4;

        $s5 = $s5 | 128;

        i0 = (int) $s5;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>(i0);

        goto label2;

     label3:
        $b4 = r1[0];

        $i1 = (int) $b4;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1);

        return;

     label4:
        i2 = i0;

        goto label1;
    }

    private void writeStr(java.lang.String) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r2;
        char $c4;
        int i0, i1, $i2, $i3, i5;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.Object $r5;
        java.lang.String $r1, $r4;
        java.util.Hashtable $r3;
        boolean $z0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        i0 = 0;

        i1 = 0;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $z0 = r0.<org.kxml2.wap.WbxmlSerializer: boolean headerSent>;

        if $z0 == 0 goto label04;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStrI(java.io.OutputStream,java.lang.String)>($r2, $r1);

        return;

     label01:
        $i3 = i5 - i0;

        if $i3 <= 10 goto label03;

        if i0 <= i1 goto label10;

        $i3 = i0 + -1;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $i3 = (int) $c4;

        if $i3 != 32 goto label08;

        $r3 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable stringTable>;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i5);

        $r5 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        if $r5 != null goto label08;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(131);

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i1, i5);

        specialinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStrT(java.lang.String,boolean)>($r4, 0);

     label02:
        i1 = i5;

     label03:
        i0 = i5;

     label04:
        if i0 >= $i2 goto label11;

     label05:
        if i0 >= $i2 goto label06;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        i5 = (int) $c4;

        if i5 >= 65 goto label06;

        i0 = i0 + 1;

        goto label05;

     label06:
        i5 = i0;

     label07:
        if i5 >= $i2 goto label01;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i5);

        $i3 = (int) $c4;

        if $i3 < 65 goto label01;

        i5 = i5 + 1;

        goto label07;

     label08:
        if i0 <= i1 goto label10;

        $i3 = i0 + -1;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $i3 = (int) $c4;

        if $i3 != 32 goto label09;

        i0 = i0 + -1;

     label09:
        if i0 <= i1 goto label10;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(131);

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i1, i0);

        specialinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStrT(java.lang.String,boolean)>($r4, 0);

     label10:
        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(131);

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i5);

        specialinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStrT(java.lang.String,boolean)>($r4, 1);

        goto label02;

     label11:
        if i1 >= $i2 goto label12;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(131);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i1, $i2);

        specialinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStrT(java.lang.String,boolean)>($r1, 0);

     label12:
        return;
    }

    private final void writeStrT(java.lang.String, boolean) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r2;
        java.lang.Integer r5;
        int $i0;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.Object $r4;
        java.lang.String $r1;
        java.util.Hashtable $r3;
        boolean $z0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r3 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable stringTable>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.lang.Integer) $r4;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        if r5 != null goto label2;

        $i0 = virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: int addToStringTable(java.lang.String,boolean)>($r1, $z0);

     label1:
        staticinvoke <org.kxml2.wap.WbxmlSerializer: void writeInt(java.io.OutputStream,int)>($r2, $i0);

        return;

     label2:
        $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        goto label1;
    }

    public int addToStringTable(java.lang.String, boolean) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r2;
        java.lang.Integer $r8;
        int $i0, i1, $i3, $i4;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1, $r5;
        java.util.Hashtable $r4;
        boolean $z0, $z1;
        char $c2;
        java.io.IOException $r6;
        java.lang.StringBuilder $r3, $r7;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 = r0.<org.kxml2.wap.WbxmlSerializer: boolean headerSent>;

        if $z1 == 0 goto label1;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("stringtable sent");

        throw $r6;

     label1:
        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream stringTableBuf>;

        $i0 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: int size()>();

        i1 = $i0;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c2;

        if $i3 < 48 goto label2;

        if $z0 == 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = $i0 + 1;

     label2:
        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable stringTable>;

        $r8 = new java.lang.Integer;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r8);

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c2;

        if $i3 != 32 goto label3;

        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable stringTable>;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r8 = new java.lang.Integer;

        $i3 = $i0 + 1;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>($i3);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r8);

     label3:
        $i3 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(32);

        if $i3 <= 1 goto label4;

        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable stringTable>;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i3);

        $r8 = new java.lang.Integer;

        $i4 = $i0 + $i3;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>($i4);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r8);

        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable stringTable>;

        $i4 = $i3 + 1;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i4);

        $r8 = new java.lang.Integer;

        $i0 = $i0 + $i3;

        $i0 = $i0 + 1;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r8);

     label4:
        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream stringTableBuf>;

        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStrI(java.io.OutputStream,java.lang.String)>($r2, $r1);

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream stringTableBuf>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void flush()>();

        return i1;
    }

    public org.xmlpull.v1.XmlSerializer attribute(java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.Vector $r4;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Vector attributes>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Vector attributes>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        return r0;
    }

    public void cdsect(java.lang.String) throws java.io.IOException
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r1);

        return;
    }

    public void checkPending(boolean) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r6;
        short $s1;
        java.util.Vector $r2;
        int[] $r5;
        int $i0, i2, $i3, $i4;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.Object $r4;
        java.lang.String $r1;
        java.util.Hashtable $r3;
        boolean $z0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $z0 := @parameter0: boolean;

        $r1 = r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String pending>;

        if $r1 != null goto label01;

        return;

     label01:
        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Vector attributes>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $r3 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable tagTable>;

        $r1 = r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String pending>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (int[]) $r4;

        if $r5 != null goto label10;

        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        if $i0 != 0 goto label08;

        if $z0 == 0 goto label07;

        $s1 = 4;

     label02:
        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>($s1);

        $r1 = r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String pending>;

        specialinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStrT(java.lang.String,boolean)>($r1, 0);

     label03:
        i2 = 0;

     label04:
        if i2 >= $i0 goto label20;

        $r3 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable attrStartTable>;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Vector attributes>;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        $r5 = (int[]) $r4;

        if $r5 != null goto label16;

        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>(4);

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Vector attributes>;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r1 = (java.lang.String) $r4;

        specialinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStrT(java.lang.String,boolean)>($r1, 0);

     label05:
        $r3 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable attrValueTable>;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Vector attributes>;

        i2 = i2 + 1;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        $r5 = (int[]) $r4;

        if $r5 != null goto label18;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Vector attributes>;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r1 = (java.lang.String) $r4;

        specialinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStr(java.lang.String)>($r1);

     label06:
        i2 = i2 + 1;

        goto label04;

     label07:
        $s1 = 68;

        goto label02;

     label08:
        if $z0 == 0 goto label09;

        $s1 = 132;

        goto label02;

     label09:
        $s1 = 196;

        goto label02;

     label10:
        i2 = $r5[0];

        $i3 = r0.<org.kxml2.wap.WbxmlSerializer: int tagPage>;

        if i2 == $i3 goto label11;

        i2 = $r5[0];

        r0.<org.kxml2.wap.WbxmlSerializer: int tagPage> = i2;

        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>(0);

        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        i2 = r0.<org.kxml2.wap.WbxmlSerializer: int tagPage>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>(i2);

     label11:
        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        if $i0 != 0 goto label14;

        if $z0 == 0 goto label13;

        i2 = $r5[1];

     label12:
        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>(i2);

        goto label03;

     label13:
        i2 = $r5[1];

        i2 = i2 | 64;

        goto label12;

     label14:
        if $z0 == 0 goto label15;

        i2 = $r5[1];

        i2 = i2 | 128;

        goto label12;

     label15:
        i2 = $r5[1];

        i2 = i2 | 192;

        goto label12;

     label16:
        $i3 = $r5[0];

        $i4 = r0.<org.kxml2.wap.WbxmlSerializer: int attrPage>;

        if $i3 == $i4 goto label17;

        $i3 = $r5[0];

        r0.<org.kxml2.wap.WbxmlSerializer: int attrPage> = $i3;

        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>(0);

        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        $i3 = r0.<org.kxml2.wap.WbxmlSerializer: int attrPage>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>($i3);

     label17:
        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        $i3 = $r5[1];

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>($i3);

        goto label05;

     label18:
        $i3 = $r5[0];

        $i4 = r0.<org.kxml2.wap.WbxmlSerializer: int attrPage>;

        if $i3 == $i4 goto label19;

        $i3 = $r5[0];

        r0.<org.kxml2.wap.WbxmlSerializer: int attrPage> = $i3;

        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>(0);

        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        $i3 = r0.<org.kxml2.wap.WbxmlSerializer: int attrPage>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>($i3);

     label19:
        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        $i3 = $r5[1];

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>($i3);

        goto label06;

     label20:
        if $i0 <= 0 goto label21;

        $r6 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>(1);

     label21:
        r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String pending> = null;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Vector attributes>;

        virtualinvoke $r2.<java.util.Vector: void removeAllElements()>();

        return;
    }

    public void comment(java.lang.String)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public void docdecl(java.lang.String)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Cannot write docdecl for WBXML");

        throw $r2;
    }

    public void endDocument() throws java.io.IOException
    {
        org.kxml2.wap.WbxmlSerializer r0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: void flush()>();

        return;
    }

    public org.xmlpull.v1.XmlSerializer endTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r3;
        int $i0;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r1 = r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String pending>;

        if $r1 == null goto label2;

        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: void checkPending(boolean)>(1);

     label1:
        $i0 = r0.<org.kxml2.wap.WbxmlSerializer: int depth>;

        $i0 = $i0 + -1;

        r0.<org.kxml2.wap.WbxmlSerializer: int depth> = $i0;

        return r0;

     label2:
        $r3 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(int)>(1);

        goto label1;
    }

    public void entityRef(java.lang.String)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("EntityReference not supported for WBXML");

        throw $r2;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        byte[] $r3;
        java.io.ByteArrayOutputStream $r2;
        int $i0;
        org.kxml2.wap.WbxmlSerializer r0;
        boolean $z0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: void checkPending(boolean)>(0);

        $z0 = r0.<org.kxml2.wap.WbxmlSerializer: boolean headerSent>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.OutputStream out>;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream stringTableBuf>;

        $i0 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: int size()>();

        staticinvoke <org.kxml2.wap.WbxmlSerializer: void writeInt(java.io.OutputStream,int)>($r1, $i0);

        $r1 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.OutputStream out>;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream stringTableBuf>;

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r3);

        r0.<org.kxml2.wap.WbxmlSerializer: boolean headerSent> = 1;

     label1:
        $r1 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.OutputStream out>;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r3);

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void reset()>();

        return;
    }

    public int getDepth()
    {
        int i0;
        org.kxml2.wap.WbxmlSerializer r0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        i0 = r0.<org.kxml2.wap.WbxmlSerializer: int depth>;

        return i0;
    }

    public boolean getFeature(java.lang.String)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        return 0;
    }

    public java.lang.String getName()
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String r1;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        r1 = r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String pending>;

        return r1;
    }

    public java.lang.String getNamespace()
    {
        org.kxml2.wap.WbxmlSerializer r0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        return null;
    }

    public java.lang.String getPrefix(java.lang.String, boolean)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;
        boolean $z0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("NYI");

        throw $r2;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        return null;
    }

    public void ignorableWhitespace(java.lang.String)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    public void processingInstruction(java.lang.String)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("PI NYI");

        throw $r2;
    }

    public void setAttrStartTable(int, java.lang.String[])
    {
        java.lang.String[] $r1;
        int[] r2;
        int $i0, i1, $i2;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r3;
        java.util.Hashtable $r4;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String[];

        i1 = 0;

     label1:
        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $r3 = $r1[i1];

        if $r3 == null goto label2;

        r2 = newarray (int)[2];

        r2[0] = $i0;

        $i2 = i1 + 5;

        r2[1] = $i2;

        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable attrStartTable>;

        $r3 = $r1[i1];

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setAttrValueTable(int, java.lang.String[])
    {
        java.lang.String[] $r1;
        int[] r2;
        int $i0, i1, $i2;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r3;
        java.util.Hashtable $r4;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String[];

        i1 = 0;

     label1:
        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $r3 = $r1[i1];

        if $r3 == null goto label2;

        r2 = newarray (int)[2];

        r2[0] = $i0;

        $i2 = i1 + 133;

        r2[1] = $i2;

        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable attrValueTable>;

        $r3 = $r1[i1];

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setFeature(java.lang.String, boolean)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown feature ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public void setOutput(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        java.io.ByteArrayOutputStream $r3;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r2;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: java.lang.String;

        if $r2 != null goto label1;

        $r2 = "UTF-8";

     label1:
        r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String encoding> = $r2;

        r0.<org.kxml2.wap.WbxmlSerializer: java.io.OutputStream out> = $r1;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf> = $r3;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream stringTableBuf> = $r3;

        r0.<org.kxml2.wap.WbxmlSerializer: boolean headerSent> = 0;

        return;
    }

    public void setOutput(java.io.Writer)
    {
        java.io.Writer $r1;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.RuntimeException $r2;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.io.Writer;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Wbxml requires an OutputStream!");

        throw $r2;
    }

    public void setPrefix(java.lang.String, java.lang.String)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("NYI");

        throw $r3;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown property ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public void setTagTable(int, java.lang.String[])
    {
        java.lang.String[] $r1;
        int[] r2;
        int $i0, i1, $i2;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r3;
        java.util.Hashtable $r4;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String[];

        i1 = 0;

     label1:
        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $r3 = $r1[i1];

        if $r3 == null goto label2;

        r2 = newarray (int)[2];

        r2[0] = $i0;

        $i2 = i1 + 5;

        r2[1] = $i2;

        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.util.Hashtable tagTable>;

        $r3 = $r1[i1];

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void startDocument(java.lang.String, java.lang.Boolean) throws java.io.IOException
    {
        java.io.OutputStream $r3;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.Boolean $r2;
        java.lang.String $r1, $r4;
        java.io.UnsupportedEncodingException $r5;
        boolean $z0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Boolean;

        $r3 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>(3);

        $r3 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>(1);

        if $r1 == null goto label1;

        r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String encoding> = $r1;

     label1:
        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String encoding>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $z0 == 0 goto label2;

        $r3 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>(106);

        return;

     label2:
        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String encoding>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-1");

        if $z0 == 0 goto label3;

        $r3 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>(4);

        return;

     label3:
        $r5 = new java.io.UnsupportedEncodingException;

        specialinvoke $r5.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>($r1);

        throw $r5;
    }

    public org.xmlpull.v1.XmlSerializer startTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        int $i0;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.RuntimeException $r4;
        boolean $z0;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        $r3 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("NSP NYI");

        throw $r4;

     label1:
        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: void checkPending(boolean)>(0);

        r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String pending> = $r2;

        $i0 = r0.<org.kxml2.wap.WbxmlSerializer: int depth>;

        $i0 = $i0 + 1;

        r0.<org.kxml2.wap.WbxmlSerializer: int depth> = $i0;

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(java.lang.String) throws java.io.IOException
    {
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r1;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: void checkPending(boolean)>(0);

        specialinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStr(java.lang.String)>($r1);

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(char[], int, int) throws java.io.IOException
    {
        int $i0, $i1;
        org.kxml2.wap.WbxmlSerializer r0;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: void checkPending(boolean)>(0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        specialinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStr(java.lang.String)>($r2);

        return r0;
    }

    void writeStrI(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        byte[] $r3;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.String $r2, $r4;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.kxml2.wap.WbxmlSerializer: java.lang.String encoding>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r4);

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r3);

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(0);

        return;
    }

    public void writeWapExtension(int, java.lang.Object) throws java.io.IOException
    {
        byte[] r4;
        java.io.ByteArrayOutputStream $r2;
        int $i0;
        org.kxml2.wap.WbxmlSerializer r0;
        java.lang.Object r1;
        java.lang.String r5;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.kxml2.wap.WbxmlSerializer;

        $i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: void checkPending(boolean)>(0);

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>($i0);

        lookupswitch($i0)
        {
            case 64: goto label4;
            case 65: goto label4;
            case 66: goto label4;
            case 128: goto label5;
            case 129: goto label5;
            case 130: goto label5;
            case 192: goto label3;
            case 193: goto label3;
            case 194: goto label3;
            case 195: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        r4 = (byte[]) r1;

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        $i0 = lengthof r4;

        staticinvoke <org.kxml2.wap.WbxmlSerializer: void writeInt(java.io.OutputStream,int)>($r2, $i0);

        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r4);

     label3:
        return;

     label4:
        $r2 = r0.<org.kxml2.wap.WbxmlSerializer: java.io.ByteArrayOutputStream buf>;

        r5 = (java.lang.String) r1;

        virtualinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStrI(java.io.OutputStream,java.lang.String)>($r2, r5);

        return;

     label5:
        r5 = (java.lang.String) r1;

        specialinvoke r0.<org.kxml2.wap.WbxmlSerializer: void writeStrT(java.lang.String,boolean)>(r5, 0);

        return;
    }
}
