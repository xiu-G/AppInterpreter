public final class com.google.zxing.qrcode.encoder.MatrixUtil extends java.lang.Object
{
    private static final int[][] HORIZONTAL_SEPARATION_PATTERN;
    private static final int[][] POSITION_ADJUSTMENT_PATTERN;
    private static final int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE;
    private static final int[][] POSITION_DETECTION_PATTERN;
    private static final int[][] TYPE_INFO_COORDINATES;
    private static final int TYPE_INFO_MASK_PATTERN;
    private static final int TYPE_INFO_POLY;
    private static final int VERSION_INFO_POLY;
    private static final int[][] VERTICAL_SEPARATION_PATTERN;

    static void <clinit>()
    {
        int $i0;
        int[][] $r0;
        int[] $r1;

        <com.google.zxing.qrcode.encoder.MatrixUtil: int VERSION_INFO_POLY> = 7973;

        <com.google.zxing.qrcode.encoder.MatrixUtil: int TYPE_INFO_POLY> = 1335;

        <com.google.zxing.qrcode.encoder.MatrixUtil: int TYPE_INFO_MASK_PATTERN> = 21522;

        $r0 = newarray (int[])[7];

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 1;

        $r1[6] = 1;

        $r0[0] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 1;

        $r0[1] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 0;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 0;

        $r1[6] = 1;

        $r0[2] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 0;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 0;

        $r1[6] = 1;

        $r0[3] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 0;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 0;

        $r1[6] = 1;

        $r0[4] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 1;

        $r0[5] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 1;

        $r1[6] = 1;

        $r0[6] = $r1;

        <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_DETECTION_PATTERN> = $r0;

        $r0 = newarray (int[])[1];

        $r1 = newarray (int)[8];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 0;

        $r1[7] = 0;

        $r0[0] = $r1;

        <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] HORIZONTAL_SEPARATION_PATTERN> = $r0;

        $r0 = newarray (int[])[7];

        $r1 = newarray (int)[1];

        $r1[0] = 0;

        $r0[0] = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 0;

        $r0[1] = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 0;

        $r0[2] = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 0;

        $r0[3] = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 0;

        $r0[4] = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 0;

        $r0[5] = $r1;

        $r1 = newarray (int)[1];

        $r1[0] = 0;

        $r0[6] = $r1;

        <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] VERTICAL_SEPARATION_PATTERN> = $r0;

        $r0 = newarray (int[])[5];

        $r1 = newarray (int)[5];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r0[0] = $r1;

        $r1 = newarray (int)[5];

        $r1[0] = 1;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 1;

        $r0[1] = $r1;

        $r1 = newarray (int)[5];

        $r1[0] = 1;

        $r1[1] = 0;

        $r1[2] = 1;

        $r1[3] = 0;

        $r1[4] = 1;

        $r0[2] = $r1;

        $r1 = newarray (int)[5];

        $r1[0] = 1;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 1;

        $r0[3] = $r1;

        $r1 = newarray (int)[5];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r0[4] = $r1;

        <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_ADJUSTMENT_PATTERN> = $r0;

        $r0 = newarray (int[])[40];

        $r1 = newarray (int)[7];

        $i0 = -1;

        $r1[0] = $i0;

        $i0 = -1;

        $r1[1] = $i0;

        $i0 = -1;

        $r1[2] = $i0;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[0] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 18;

        $i0 = -1;

        $r1[2] = $i0;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[1] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 22;

        $i0 = -1;

        $r1[2] = $i0;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[2] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 26;

        $i0 = -1;

        $r1[2] = $i0;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[3] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $i0 = -1;

        $r1[2] = $i0;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[4] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 34;

        $i0 = -1;

        $r1[2] = $i0;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[5] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 22;

        $r1[2] = 38;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[6] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 24;

        $r1[2] = 42;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[7] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 26;

        $r1[2] = 46;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[8] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 28;

        $r1[2] = 50;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[9] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 54;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[10] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 32;

        $r1[2] = 58;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[11] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 34;

        $r1[2] = 62;

        $i0 = -1;

        $r1[3] = $i0;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[12] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 26;

        $r1[2] = 46;

        $r1[3] = 66;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[13] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 26;

        $r1[2] = 48;

        $r1[3] = 70;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[14] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 26;

        $r1[2] = 50;

        $r1[3] = 74;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[15] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 54;

        $r1[3] = 78;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[16] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 56;

        $r1[3] = 82;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[17] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 58;

        $r1[3] = 86;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[18] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 34;

        $r1[2] = 62;

        $r1[3] = 90;

        $i0 = -1;

        $r1[4] = $i0;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[19] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 28;

        $r1[2] = 50;

        $r1[3] = 72;

        $r1[4] = 94;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[20] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 26;

        $r1[2] = 50;

        $r1[3] = 74;

        $r1[4] = 98;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[21] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 54;

        $r1[3] = 78;

        $r1[4] = 102;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[22] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 28;

        $r1[2] = 54;

        $r1[3] = 80;

        $r1[4] = 106;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[23] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 32;

        $r1[2] = 58;

        $r1[3] = 84;

        $r1[4] = 110;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[24] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 58;

        $r1[3] = 86;

        $r1[4] = 114;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[25] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 34;

        $r1[2] = 62;

        $r1[3] = 90;

        $r1[4] = 118;

        $i0 = -1;

        $r1[5] = $i0;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[26] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 26;

        $r1[2] = 50;

        $r1[3] = 74;

        $r1[4] = 98;

        $r1[5] = 122;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[27] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 54;

        $r1[3] = 78;

        $r1[4] = 102;

        $r1[5] = 126;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[28] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 26;

        $r1[2] = 52;

        $r1[3] = 78;

        $r1[4] = 104;

        $r1[5] = 130;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[29] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 56;

        $r1[3] = 82;

        $r1[4] = 108;

        $r1[5] = 134;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[30] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 34;

        $r1[2] = 60;

        $r1[3] = 86;

        $r1[4] = 112;

        $r1[5] = 138;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[31] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 58;

        $r1[3] = 86;

        $r1[4] = 114;

        $r1[5] = 142;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[32] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 34;

        $r1[2] = 62;

        $r1[3] = 90;

        $r1[4] = 118;

        $r1[5] = 146;

        $i0 = -1;

        $r1[6] = $i0;

        $r0[33] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 54;

        $r1[3] = 78;

        $r1[4] = 102;

        $r1[5] = 126;

        $r1[6] = 150;

        $r0[34] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 24;

        $r1[2] = 50;

        $r1[3] = 76;

        $r1[4] = 102;

        $r1[5] = 128;

        $r1[6] = 154;

        $r0[35] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 28;

        $r1[2] = 54;

        $r1[3] = 80;

        $r1[4] = 106;

        $r1[5] = 132;

        $r1[6] = 158;

        $r0[36] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 32;

        $r1[2] = 58;

        $r1[3] = 84;

        $r1[4] = 110;

        $r1[5] = 136;

        $r1[6] = 162;

        $r0[37] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 26;

        $r1[2] = 54;

        $r1[3] = 82;

        $r1[4] = 110;

        $r1[5] = 138;

        $r1[6] = 166;

        $r0[38] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 6;

        $r1[1] = 30;

        $r1[2] = 58;

        $r1[3] = 86;

        $r1[4] = 114;

        $r1[5] = 142;

        $r1[6] = 170;

        $r0[39] = $r1;

        <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE> = $r0;

        $r0 = newarray (int[])[15];

        $r1 = newarray (int)[2];

        $r1[0] = 8;

        $r1[1] = 0;

        $r0[0] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 8;

        $r1[1] = 1;

        $r0[1] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 8;

        $r1[1] = 2;

        $r0[2] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 8;

        $r1[1] = 3;

        $r0[3] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 8;

        $r1[1] = 4;

        $r0[4] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 8;

        $r1[1] = 5;

        $r0[5] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 8;

        $r1[1] = 7;

        $r0[6] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 8;

        $r1[1] = 8;

        $r0[7] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 7;

        $r1[1] = 8;

        $r0[8] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 5;

        $r1[1] = 8;

        $r0[9] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 4;

        $r1[1] = 8;

        $r0[10] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 3;

        $r1[1] = 8;

        $r0[11] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 2;

        $r1[1] = 8;

        $r0[12] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 1;

        $r1[1] = 8;

        $r0[13] = $r1;

        $r1 = newarray (int)[2];

        $r1[0] = 0;

        $r1[1] = 8;

        $r0[14] = $r1;

        <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] TYPE_INFO_COORDINATES> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.zxing.qrcode.encoder.MatrixUtil r0;

        r0 := @this: com.google.zxing.qrcode.encoder.MatrixUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void buildMatrix(com.google.zxing.common.BitArray, com.google.zxing.qrcode.decoder.ErrorCorrectionLevel, int, int, com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        com.google.zxing.qrcode.encoder.ByteMatrix $r2;
        int $i0, $i1;
        com.google.zxing.common.BitArray $r0;
        com.google.zxing.qrcode.decoder.ErrorCorrectionLevel $r1;

        $r0 := @parameter0: com.google.zxing.common.BitArray;

        $r1 := @parameter1: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 := @parameter4: com.google.zxing.qrcode.encoder.ByteMatrix;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix)>($r2);

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedBasicPatterns(int,com.google.zxing.qrcode.encoder.ByteMatrix)>($i0, $r2);

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix)>($r1, $i1, $r2);

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void maybeEmbedVersionInfo(int,com.google.zxing.qrcode.encoder.ByteMatrix)>($i0, $r2);

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix)>($r0, $i1, $r2);

        return;
    }

    public static int calculateBCHCode(int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: int findMSBSet(int)>($i1);

        $i3 = -1;

        $i3 = $i2 + $i3;

        $i0 = $i0 << $i3;

     label1:
        $i3 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: int findMSBSet(int)>($i0);

        if $i3 < $i2 goto label2;

        $i3 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: int findMSBSet(int)>($i0);

        $i3 = $i3 - $i2;

        $i3 = $i1 << $i3;

        $i0 = $i0 ^ $i3;

        goto label1;

     label2:
        return $i0;
    }

    public static void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: void clear(byte)>(-1);

        return;
    }

    public static void embedBasicPatterns(int, com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        int $i0;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.zxing.qrcode.encoder.ByteMatrix;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix)>($r0);

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix)>($r0);

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void maybeEmbedPositionAdjustmentPatterns(int,com.google.zxing.qrcode.encoder.ByteMatrix)>($i0, $r0);

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix)>($r0);

        return;
    }

    private static void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        byte $b1;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        int $i0, $i2;
        com.google.zxing.WriterException $r1;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = -8;

        $i0 = $i0 + $i2;

        $b1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>(8, $i0);

        if $b1 != 0 goto label1;

        $r1 = new com.google.zxing.WriterException;

        specialinvoke $r1.<com.google.zxing.WriterException: void <init>()>();

        throw $r1;

     label1:
        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = -8;

        $i0 = $i0 + $i2;

        virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,int)>(8, $i0, 1);

        return;
    }

    public static void embedDataBits(com.google.zxing.common.BitArray, int, com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        com.google.zxing.qrcode.encoder.ByteMatrix $r1;
        com.google.zxing.WriterException $r5;
        byte $b7;
        java.lang.StringBuffer $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        java.lang.String $r3;
        boolean $z0, $z1;
        com.google.zxing.common.BitArray $r0;

        $r0 := @parameter0: com.google.zxing.common.BitArray;

        $i0 := @parameter1: int;

        $r1 := @parameter2: com.google.zxing.qrcode.encoder.ByteMatrix;

        $i2 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i3 = -1;

        $i3 = $i2 + $i3;

        $i2 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i4 = -1;

        $i4 = $i2 + $i4;

        $i2 = -1;

        $i5 = 0;

     label01:
        if $i3 <= 0 goto label12;

        if $i3 != 6 goto label13;

        $i1 = -1;

        $i3 = $i3 + $i1;

     label02:
        if $i4 < 0 goto label11;

        $i1 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        if $i4 >= $i1 goto label11;

        $i6 = 0;

     label03:
        if $i6 >= 2 goto label10;

        $i1 = $i3 - $i6;

        $b7 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>($i1, $i4);

        $i8 = (int) $b7;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: boolean isEmpty(int)>($i8);

        if $z0 != 0 goto label05;

     label04:
        $i6 = $i6 + 1;

        goto label03;

     label05:
        $i8 = virtualinvoke $r0.<com.google.zxing.common.BitArray: int getSize()>();

        if $i5 >= $i8 goto label08;

        $z0 = virtualinvoke $r0.<com.google.zxing.common.BitArray: boolean get(int)>($i5);

        $i5 = $i5 + 1;

     label06:
        $i8 = -1;

        if $i0 == $i8 goto label07;

        $z1 = staticinvoke <com.google.zxing.qrcode.encoder.MaskUtil: boolean getDataMaskBit(int,int,int)>($i0, $i1, $i4);

        if $z1 == 0 goto label07;

        if $z0 != 0 goto label09;

        $z0 = 1;

     label07:
        virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i1, $i4, $z0);

        goto label04;

     label08:
        $z0 = 0;

        goto label06;

     label09:
        $z0 = 0;

        goto label07;

     label10:
        $i4 = $i4 + $i2;

        goto label02;

     label11:
        $i2 = neg $i2;

        $i1 = -2;

        $i3 = $i3 + $i1;

        $i4 = $i4 + $i2;

        goto label01;

     label12:
        $i0 = virtualinvoke $r0.<com.google.zxing.common.BitArray: int getSize()>();

        if $i5 == $i0 goto label14;

        $r5 = new com.google.zxing.WriterException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Not all bits consumed: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        $i0 = virtualinvoke $r0.<com.google.zxing.common.BitArray: int getSize()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<com.google.zxing.WriterException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label13:
        goto label02;

     label14:
        return;
    }

    private static void embedHorizontalSeparationPattern(int, int, com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        int[][] $r1;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        com.google.zxing.WriterException $r3;
        byte $b4;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i5;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] HORIZONTAL_SEPARATION_PATTERN>;

        $r2 = $r1[0];

        $i2 = lengthof $r2;

        if $i2 != 8 goto label1;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] HORIZONTAL_SEPARATION_PATTERN>;

        $i2 = lengthof $r1;

        if $i2 == 1 goto label2;

     label1:
        $r3 = new com.google.zxing.WriterException;

        specialinvoke $r3.<com.google.zxing.WriterException: void <init>(java.lang.String)>("Bad horizontal separation pattern");

        throw $r3;

     label2:
        $i2 = 0;

     label3:
        if $i2 >= 8 goto label5;

        $i3 = $i0 + $i2;

        $b4 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>($i3, $i1);

        $i3 = (int) $b4;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: boolean isEmpty(int)>($i3);

        if $z0 != 0 goto label4;

        $r3 = new com.google.zxing.WriterException;

        specialinvoke $r3.<com.google.zxing.WriterException: void <init>()>();

        throw $r3;

     label4:
        $i3 = $i0 + $i2;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] HORIZONTAL_SEPARATION_PATTERN>;

        $r2 = $r1[0];

        $i5 = $r2[$i2];

        virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,int)>($i3, $i1, $i5);

        $i2 = $i2 + 1;

        goto label3;

     label5:
        return;
    }

    private static void embedPositionAdjustmentPattern(int, int, com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        int[][] $r1;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        com.google.zxing.WriterException $r3;
        byte $b6;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_ADJUSTMENT_PATTERN>;

        $r2 = $r1[0];

        $i2 = lengthof $r2;

        if $i2 != 5 goto label1;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_ADJUSTMENT_PATTERN>;

        $i2 = lengthof $r1;

        if $i2 == 5 goto label2;

     label1:
        $r3 = new com.google.zxing.WriterException;

        specialinvoke $r3.<com.google.zxing.WriterException: void <init>(java.lang.String)>("Bad position adjustment");

        throw $r3;

     label2:
        $i2 = 0;

     label3:
        if $i2 >= 5 goto label7;

        $i3 = 0;

     label4:
        if $i3 >= 5 goto label6;

        $i4 = $i0 + $i3;

        $i5 = $i1 + $i2;

        $b6 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>($i4, $i5);

        $i4 = (int) $b6;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: boolean isEmpty(int)>($i4);

        if $z0 != 0 goto label5;

        $r3 = new com.google.zxing.WriterException;

        specialinvoke $r3.<com.google.zxing.WriterException: void <init>()>();

        throw $r3;

     label5:
        $i4 = $i0 + $i3;

        $i5 = $i1 + $i2;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_ADJUSTMENT_PATTERN>;

        $r2 = $r1[$i2];

        $i7 = $r2[$i3];

        virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,int)>($i4, $i5, $i7);

        $i3 = $i3 + 1;

        goto label4;

     label6:
        $i2 = $i2 + 1;

        goto label3;

     label7:
        return;
    }

    private static void embedPositionDetectionPattern(int, int, com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        int[][] $r1;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        com.google.zxing.WriterException $r3;
        byte $b6;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_DETECTION_PATTERN>;

        $r2 = $r1[0];

        $i2 = lengthof $r2;

        if $i2 != 7 goto label1;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_DETECTION_PATTERN>;

        $i2 = lengthof $r1;

        if $i2 == 7 goto label2;

     label1:
        $r3 = new com.google.zxing.WriterException;

        specialinvoke $r3.<com.google.zxing.WriterException: void <init>(java.lang.String)>("Bad position detection pattern");

        throw $r3;

     label2:
        $i2 = 0;

     label3:
        if $i2 >= 7 goto label7;

        $i3 = 0;

     label4:
        if $i3 >= 7 goto label6;

        $i4 = $i0 + $i3;

        $i5 = $i1 + $i2;

        $b6 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>($i4, $i5);

        $i4 = (int) $b6;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: boolean isEmpty(int)>($i4);

        if $z0 != 0 goto label5;

        $r3 = new com.google.zxing.WriterException;

        specialinvoke $r3.<com.google.zxing.WriterException: void <init>()>();

        throw $r3;

     label5:
        $i4 = $i0 + $i3;

        $i5 = $i1 + $i2;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_DETECTION_PATTERN>;

        $r2 = $r1[$i2];

        $i7 = $r2[$i3];

        virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,int)>($i4, $i5, $i7);

        $i3 = $i3 + 1;

        goto label4;

     label6:
        $i2 = $i2 + 1;

        goto label3;

     label7:
        return;
    }

    private static void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        int[][] $r1;
        int[] $r2;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        int $i0, $i1, $i2;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_DETECTION_PATTERN>;

        $r2 = $r1[0];

        $i1 = lengthof $r2;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix)>(0, 0, $r0);

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i2 = $i2 - $i1;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix)>($i2, 0, $r0);

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i1 = $i2 - $i1;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix)>(0, $i1, $r0);

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] HORIZONTAL_SEPARATION_PATTERN>;

        $r2 = $r1[0];

        $i1 = lengthof $r2;

        $i2 = -1;

        $i2 = $i1 + $i2;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix)>(0, $i2, $r0);

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i2 = $i2 - $i1;

        $i0 = -1;

        $i0 = $i1 + $i0;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix)>($i2, $i0, $r0);

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i1 = $i2 - $i1;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix)>(0, $i1, $r0);

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] VERTICAL_SEPARATION_PATTERN>;

        $i1 = lengthof $r1;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix)>($i1, 0, $r0);

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = $i2 - $i1;

        $i0 = -1;

        $i2 = $i2 + $i0;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix)>($i2, 0, $r0);

        $i2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = $i2 - $i1;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix)>($i1, $i2, $r0);

        return;
    }

    private static void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        byte $b2;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        int $i0, $i1, $i3;
        com.google.zxing.WriterException $r1;
        boolean $z0;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $i0 = 8;

     label1:
        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i3 = -8;

        $i1 = $i1 + $i3;

        if $i0 >= $i1 goto label6;

        $i1 = $i0 + 1;

        $i1 = $i1 % 2;

        $b2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>($i0, 6);

        $i3 = (int) $b2;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: boolean isValidValue(int)>($i3);

        if $z0 != 0 goto label2;

        $r1 = new com.google.zxing.WriterException;

        specialinvoke $r1.<com.google.zxing.WriterException: void <init>()>();

        throw $r1;

     label2:
        $b2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>($i0, 6);

        $i3 = (int) $b2;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: boolean isEmpty(int)>($i3);

        if $z0 == 0 goto label3;

        virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,int)>($i0, 6, $i1);

     label3:
        $b2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>(6, $i0);

        $i3 = (int) $b2;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: boolean isValidValue(int)>($i3);

        if $z0 != 0 goto label4;

        $r1 = new com.google.zxing.WriterException;

        specialinvoke $r1.<com.google.zxing.WriterException: void <init>()>();

        throw $r1;

     label4:
        $b2 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>(6, $i0);

        $i3 = (int) $b2;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: boolean isEmpty(int)>($i3);

        if $z0 == 0 goto label5;

        virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,int)>(6, $i0, $i1);

     label5:
        $i0 = $i0 + 1;

        goto label1;

     label6:
        return;
    }

    public static void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel, int, com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        int[][] $r3;
        com.google.zxing.qrcode.encoder.ByteMatrix $r1;
        com.google.zxing.common.BitArray $r2, $r5;
        com.google.zxing.qrcode.decoder.ErrorCorrectionLevel $r0;
        int[] $r4;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;

        $i0 := @parameter1: int;

        $r1 := @parameter2: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r5 = new com.google.zxing.common.BitArray;

        $r2 = $r5;

        specialinvoke $r5.<com.google.zxing.common.BitArray: void <init>()>();

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray)>($r0, $i0, $r2);

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r2.<com.google.zxing.common.BitArray: int getSize()>();

        if $i0 >= $i1 goto label4;

        $i1 = virtualinvoke $r2.<com.google.zxing.common.BitArray: int getSize()>();

        $i2 = -1;

        $i1 = $i1 + $i2;

        $i1 = $i1 - $i0;

        $z0 = virtualinvoke $r2.<com.google.zxing.common.BitArray: boolean get(int)>($i1);

        $r3 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] TYPE_INFO_COORDINATES>;

        $r4 = $r3[$i0];

        $i1 = $r4[0];

        $r3 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] TYPE_INFO_COORDINATES>;

        $r4 = $r3[$i0];

        $i2 = $r4[1];

        virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i1, $i2, $z0);

        if $i0 >= 8 goto label3;

        $i1 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i1 = $i1 - $i0;

        $i2 = -1;

        $i1 = $i1 + $i2;

        virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i1, 8, $z0);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $i1 = virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i2 = -7;

        $i1 = $i1 + $i2;

        $i2 = -8;

        $i2 = $i0 + $i2;

        $i1 = $i1 + $i2;

        virtualinvoke $r1.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>(8, $i1, $z0);

        goto label2;

     label4:
        return;
    }

    private static void embedVerticalSeparationPattern(int, int, com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        int[][] $r1;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        com.google.zxing.WriterException $r3;
        byte $b4;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i5;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: com.google.zxing.qrcode.encoder.ByteMatrix;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] VERTICAL_SEPARATION_PATTERN>;

        $r2 = $r1[0];

        $i2 = lengthof $r2;

        if $i2 != 1 goto label1;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] VERTICAL_SEPARATION_PATTERN>;

        $i2 = lengthof $r1;

        if $i2 == 7 goto label2;

     label1:
        $r3 = new com.google.zxing.WriterException;

        specialinvoke $r3.<com.google.zxing.WriterException: void <init>(java.lang.String)>("Bad vertical separation pattern");

        throw $r3;

     label2:
        $i2 = 0;

     label3:
        if $i2 >= 7 goto label5;

        $i3 = $i1 + $i2;

        $b4 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>($i0, $i3);

        $i3 = (int) $b4;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: boolean isEmpty(int)>($i3);

        if $z0 != 0 goto label4;

        $r3 = new com.google.zxing.WriterException;

        specialinvoke $r3.<com.google.zxing.WriterException: void <init>()>();

        throw $r3;

     label4:
        $i3 = $i1 + $i2;

        $r1 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] VERTICAL_SEPARATION_PATTERN>;

        $r2 = $r1[$i2];

        $i5 = $r2[0];

        virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,int)>($i0, $i3, $i5);

        $i2 = $i2 + 1;

        goto label3;

     label5:
        return;
    }

    public static int findMSBSet(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = 0;

     label1:
        if $i0 == 0 goto label2;

        $i0 = $i0 >>> 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i1;
    }

    private static boolean isEmpty(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = -1;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isValidValue(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = -1;

        if $i0 == $i1 goto label2;

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel, int, com.google.zxing.common.BitArray) throws com.google.zxing.WriterException
    {
        com.google.zxing.common.BitArray $r1, $r3;
        com.google.zxing.WriterException $r2;
        com.google.zxing.qrcode.decoder.ErrorCorrectionLevel $r0;
        java.lang.StringBuffer $r4;
        int $i0, $i1;
        java.lang.String $r5;
        boolean $z0;

        $r0 := @parameter0: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;

        $i0 := @parameter1: int;

        $r1 := @parameter2: com.google.zxing.common.BitArray;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.QRCode: boolean isValidMaskPattern(int)>($i0);

        if $z0 != 0 goto label1;

        $r2 = new com.google.zxing.WriterException;

        specialinvoke $r2.<com.google.zxing.WriterException: void <init>(java.lang.String)>("Invalid mask pattern");

        throw $r2;

     label1:
        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: int getBits()>();

        $i1 = $i1 << 3;

        $i0 = $i1 | $i0;

        virtualinvoke $r1.<com.google.zxing.common.BitArray: void appendBits(int,int)>($i0, 5);

        $i0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: int calculateBCHCode(int,int)>($i0, 1335);

        virtualinvoke $r1.<com.google.zxing.common.BitArray: void appendBits(int,int)>($i0, 10);

        $r3 = new com.google.zxing.common.BitArray;

        specialinvoke $r3.<com.google.zxing.common.BitArray: void <init>()>();

        virtualinvoke $r3.<com.google.zxing.common.BitArray: void appendBits(int,int)>(21522, 15);

        virtualinvoke $r1.<com.google.zxing.common.BitArray: void xor(com.google.zxing.common.BitArray)>($r3);

        $i0 = virtualinvoke $r1.<com.google.zxing.common.BitArray: int getSize()>();

        if $i0 == 15 goto label2;

        $r2 = new com.google.zxing.WriterException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("should not happen but we got: ");

        $i0 = virtualinvoke $r1.<com.google.zxing.common.BitArray: int getSize()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<com.google.zxing.WriterException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label2:
        return;
    }

    public static void makeVersionInfoBits(int, com.google.zxing.common.BitArray) throws com.google.zxing.WriterException
    {
        java.lang.StringBuffer $r2;
        int $i0;
        java.lang.String $r3;
        com.google.zxing.common.BitArray $r0;
        com.google.zxing.WriterException $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.zxing.common.BitArray;

        virtualinvoke $r0.<com.google.zxing.common.BitArray: void appendBits(int,int)>($i0, 6);

        $i0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: int calculateBCHCode(int,int)>($i0, 7973);

        virtualinvoke $r0.<com.google.zxing.common.BitArray: void appendBits(int,int)>($i0, 12);

        $i0 = virtualinvoke $r0.<com.google.zxing.common.BitArray: int getSize()>();

        if $i0 == 18 goto label1;

        $r1 = new com.google.zxing.WriterException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("should not happen but we got: ");

        $i0 = virtualinvoke $r0.<com.google.zxing.common.BitArray: int getSize()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<com.google.zxing.WriterException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        return;
    }

    private static void maybeEmbedPositionAdjustmentPatterns(int, com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        int[][] $r2;
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        byte $b5;
        int[] $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.zxing.qrcode.encoder.ByteMatrix;

        if $i0 >= 2 goto label1;

        return;

     label1:
        $i1 = -1;

        $i0 = $i0 + $i1;

        $r2 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE>;

        $r1 = $r2[$i0];

        $r2 = <com.google.zxing.qrcode.encoder.MatrixUtil: int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE>;

        $r3 = $r2[$i0];

        $i0 = lengthof $r3;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label7;

        $i2 = 0;

     label3:
        if $i2 >= $i0 goto label6;

        $i3 = $r1[$i1];

        $i4 = $r1[$i2];

        $i6 = -1;

        if $i4 == $i6 goto label4;

        $i6 = -1;

        if $i3 != $i6 goto label5;

     label4:
        $i2 = $i2 + 1;

        goto label3;

     label5:
        $b5 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>($i4, $i3);

        $i6 = (int) $b5;

        $z0 = staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: boolean isEmpty(int)>($i6);

        if $z0 == 0 goto label4;

        $i6 = -2;

        $i4 = $i4 + $i6;

        $i6 = -2;

        $i3 = $i3 + $i6;

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix)>($i4, $i3, $r0);

        goto label4;

     label6:
        $i1 = $i1 + 1;

        goto label2;

     label7:
        return;
    }

    public static void maybeEmbedVersionInfo(int, com.google.zxing.qrcode.encoder.ByteMatrix) throws com.google.zxing.WriterException
    {
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        com.google.zxing.common.BitArray $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.zxing.qrcode.encoder.ByteMatrix;

        if $i0 >= 7 goto label1;

        return;

     label1:
        $r2 = new com.google.zxing.common.BitArray;

        $r1 = $r2;

        specialinvoke $r2.<com.google.zxing.common.BitArray: void <init>()>();

        staticinvoke <com.google.zxing.qrcode.encoder.MatrixUtil: void makeVersionInfoBits(int,com.google.zxing.common.BitArray)>($i0, $r1);

        $i1 = 17;

        $i0 = 0;

     label2:
        if $i0 >= 6 goto label5;

        $i2 = 0;

     label3:
        if $i2 >= 3 goto label4;

        $z0 = virtualinvoke $r1.<com.google.zxing.common.BitArray: boolean get(int)>($i1);

        $i3 = -1;

        $i1 = $i1 + $i3;

        $i3 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i4 = -11;

        $i3 = $i3 + $i4;

        $i3 = $i3 + $i2;

        virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i0, $i3, $z0);

        $i3 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        $i4 = -11;

        $i3 = $i3 + $i4;

        $i3 = $i3 + $i2;

        virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i3, $i0, $z0);

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        return;
    }
}
