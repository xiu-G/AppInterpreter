public class com.tencent.connect.auth.AuthMap extends java.lang.Object
{
    static final boolean a;
    private static int b;
    public static com.tencent.connect.auth.AuthMap sInstance;
    public final java.lang.String KEY_CHAR_LIST;
    public java.util.HashMap authMap;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        $r0 = class "Lcom/tencent/connect/auth/AuthMap;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.tencent.connect.auth.AuthMap: boolean a> = $z0;

        <com.tencent.connect.auth.AuthMap: int b> = 0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void <init>()
    {
        java.util.HashMap $r1;
        com.tencent.connect.auth.AuthMap r0;

        r0 := @this: com.tencent.connect.auth.AuthMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.tencent.connect.auth.AuthMap: java.util.HashMap authMap> = $r1;

        r0.<com.tencent.connect.auth.AuthMap: java.lang.String KEY_CHAR_LIST> = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

        return;
    }

    private java.lang.String a(java.lang.String, java.lang.String)
    {
        char $c6;
        java.lang.AssertionError $r5;
        com.tencent.connect.auth.AuthMap r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: com.tencent.connect.auth.AuthMap;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i1 = 0;

        $z0 = <com.tencent.connect.auth.AuthMap: boolean a>;

        if $z0 != 0 goto label1;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = $i2 % 2;

        if $i2 == 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r6 = new java.lang.StringBuilder;

        $r3 = $r6;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $i3 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $i4 = $i1 * 2;

        $i5 = $i1 * 2;

        $i5 = $i5 + 2;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5);

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r4, 16);

        $c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i3);

        $i5 = (int) $c6;

        $i4 = $i4 ^ $i5;

        $c6 = (char) $i4;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $i3 = $i3 + 1;

        $i3 = $i3 % $i2;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static com.tencent.connect.auth.AuthMap getInstance()
    {
        com.tencent.connect.auth.AuthMap $r0;

        $r0 = <com.tencent.connect.auth.AuthMap: com.tencent.connect.auth.AuthMap sInstance>;

        if $r0 != null goto label1;

        $r0 = new com.tencent.connect.auth.AuthMap;

        specialinvoke $r0.<com.tencent.connect.auth.AuthMap: void <init>()>();

        <com.tencent.connect.auth.AuthMap: com.tencent.connect.auth.AuthMap sInstance> = $r0;

     label1:
        $r0 = <com.tencent.connect.auth.AuthMap: com.tencent.connect.auth.AuthMap sInstance>;

        return $r0;
    }

    public static int getSerial()
    {
        int $i0;

        $i0 = <com.tencent.connect.auth.AuthMap: int b>;

        $i0 = $i0 + 1;

        <com.tencent.connect.auth.AuthMap: int b> = $i0;

        return $i0;
    }

    public java.lang.String decode(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        com.tencent.connect.auth.AuthMap r0;

        r0 := @this: com.tencent.connect.auth.AuthMap;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r1 = specialinvoke r0.<com.tencent.connect.auth.AuthMap: java.lang.String a(java.lang.String,java.lang.String)>($r1, $r2);

        return $r1;
    }

    public com.tencent.connect.auth.AuthMap$Auth get(java.lang.String)
    {
        com.tencent.connect.auth.AuthMap r0;
        com.tencent.connect.auth.AuthMap$Auth $r4;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        java.lang.String $r1;

        r0 := @this: com.tencent.connect.auth.AuthMap;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.tencent.connect.auth.AuthMap: java.util.HashMap authMap>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.tencent.connect.auth.AuthMap$Auth) $r2;

        return $r4;
    }

    public java.lang.String makeKey()
    {
        char $c4;
        com.tencent.connect.auth.AuthMap r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2, $i3;
        char[] $r3;
        java.lang.String $r2;
        double $d0, $d1;

        r0 := @this: com.tencent.connect.auth.AuthMap;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 20.0;

        $d0 = $d0 + 3.0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $r2 = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $i1 = lengthof $r3;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $d1 = staticinvoke <java.lang.Math: double random()>();

        $d0 = (double) $i1;

        $d0 = $d1 * $d0;

        $i3 = (int) $d0;

        $c4 = $r3[$i3];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public void remove(java.lang.String)
    {
        java.util.HashMap $r2;
        java.lang.String $r1;
        com.tencent.connect.auth.AuthMap r0;

        r0 := @this: com.tencent.connect.auth.AuthMap;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.tencent.connect.auth.AuthMap: java.util.HashMap authMap>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public java.lang.String set(com.tencent.connect.auth.AuthMap$Auth)
    {
        java.lang.Throwable $r5;
        com.tencent.connect.auth.AuthMap r0;
        int $i0;
        com.tencent.connect.auth.AuthMap$Auth $r1;
        java.util.HashMap $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.tencent.connect.auth.AuthMap;

        $r1 := @parameter0: com.tencent.connect.auth.AuthMap$Auth;

        $i0 = staticinvoke <com.tencent.connect.auth.AuthMap: int getSerial()>();

     label1:
        $r2 = r0.<com.tencent.connect.auth.AuthMap: java.util.HashMap authMap>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r1);

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace()>();

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
