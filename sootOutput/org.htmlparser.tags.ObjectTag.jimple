public class org.htmlparser.tags.ObjectTag extends org.htmlparser.tags.CompositeTag
{
    private static final java.lang.String[] k;
    private static final java.lang.String[] l;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "OBJECT";

        <org.htmlparser.tags.ObjectTag: java.lang.String[] k> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "BODY";

        $r0[1] = "HTML";

        <org.htmlparser.tags.ObjectTag: java.lang.String[] l> = $r0;

        return;
    }

    public void <init>()
    {
        org.htmlparser.tags.ObjectTag r0;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        specialinvoke r0.<org.htmlparser.tags.CompositeTag: void <init>()>();

        return;
    }

    public java.util.Hashtable createObjectParamsTable()
    {
        org.htmlparser.tags.ObjectTag r0;
        org.htmlparser.Node[] $r4;
        org.htmlparser.Node $r5;
        org.htmlparser.Tag $r6;
        int $i0, $i1;
        lg $r2, $r3;
        java.lang.String $r7, $r8;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: lg getChildren()>();

        if $r2 == null goto label3;

        $i0 = 0;

     label1:
        $i1 = $r2.<lg: int b>;

        if $i0 >= $i1 goto label3;

        $r3 = r0.<org.htmlparser.tags.ObjectTag: lg e>;

        $r4 = $r3.<lg: org.htmlparser.Node[] a>;

        $r5 = $r4[$i0];

        $z0 = $r5 instanceof org.htmlparser.Tag;

        if $z0 == 0 goto label2;

        $r6 = (org.htmlparser.Tag) $r5;

        $r7 = interfaceinvoke $r6.<org.htmlparser.Tag: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("PARAM");

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r6.<org.htmlparser.Tag: java.lang.String getAttribute(java.lang.String)>("NAME");

        if $r8 == null goto label2;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i1 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<org.htmlparser.Tag: java.lang.String getAttribute(java.lang.String)>("VALUE");

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public java.lang.String[] getEndTagEnders()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String[] r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        r1 = <org.htmlparser.tags.ObjectTag: java.lang.String[] l>;

        return r1;
    }

    public java.lang.String[] getIds()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String[] r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        r1 = <org.htmlparser.tags.ObjectTag: java.lang.String[] k>;

        return r1;
    }

    public java.lang.String getObjectClassId()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: java.lang.String getAttribute(java.lang.String)>("CLASSID");

        return $r1;
    }

    public java.lang.String getObjectCodeBase()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: java.lang.String getAttribute(java.lang.String)>("CODEBASE");

        return $r1;
    }

    public java.lang.String getObjectCodeType()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: java.lang.String getAttribute(java.lang.String)>("CODETYPE");

        return $r1;
    }

    public java.lang.String getObjectData()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: java.lang.String getAttribute(java.lang.String)>("DATA");

        return $r1;
    }

    public java.lang.String getObjectHeight()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: java.lang.String getAttribute(java.lang.String)>("HEIGHT");

        return $r1;
    }

    public java.util.Hashtable getObjectParams()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.util.Hashtable $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: java.util.Hashtable createObjectParamsTable()>();

        return $r1;
    }

    public java.lang.String getObjectStandby()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: java.lang.String getAttribute(java.lang.String)>("STANDBY");

        return $r1;
    }

    public java.lang.String getObjectType()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: java.lang.String getAttribute(java.lang.String)>("TYPE");

        return $r1;
    }

    public java.lang.String getObjectWidth()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: java.lang.String getAttribute(java.lang.String)>("WIDTH");

        return $r1;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.htmlparser.tags.ObjectTag r1;
        java.lang.Object $r3;
        java.lang.String $r0;
        java.util.Hashtable $r2;

        r1 := @this: org.htmlparser.tags.ObjectTag;

        $r0 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: java.util.Hashtable getObjectParams()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r3;

        return $r0;
    }

    public java.util.Enumeration getParameterNames()
    {
        org.htmlparser.tags.ObjectTag r0;
        java.util.Enumeration $r2;
        java.util.Hashtable $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: java.util.Hashtable getObjectParams()>();

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r2;
    }

    public void setObjectClassId(java.lang.String)
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.htmlparser.tags.ObjectTag: void setAttribute(java.lang.String,java.lang.String)>("CLASSID", $r1);

        return;
    }

    public void setObjectCodeBase(java.lang.String)
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.htmlparser.tags.ObjectTag: void setAttribute(java.lang.String,java.lang.String)>("CODEBASE", $r1);

        return;
    }

    public void setObjectCodeType(java.lang.String)
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.htmlparser.tags.ObjectTag: void setAttribute(java.lang.String,java.lang.String)>("CODETYPE", $r1);

        return;
    }

    public void setObjectData(java.lang.String)
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.htmlparser.tags.ObjectTag: void setAttribute(java.lang.String,java.lang.String)>("DATA", $r1);

        return;
    }

    public void setObjectHeight(java.lang.String)
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.htmlparser.tags.ObjectTag: void setAttribute(java.lang.String,java.lang.String)>("HEIGHT", $r1);

        return;
    }

    public void setObjectParams(java.util.Hashtable)
    {
        org.htmlparser.tags.ObjectTag r0;
        org.htmlparser.Node[] $r10;
        java.util.Enumeration $r4;
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.String $r6, $r7;
        java.util.Hashtable $r1;
        boolean $z0;
        kk $r8;
        org.htmlparser.nodes.TagNode $r9;
        org.htmlparser.Node $r11;
        org.htmlparser.Tag $r12;
        java.lang.Object $r5;
        lg $r3;
        org.htmlparser.nodes.TextNode $r13;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 := @parameter0: java.util.Hashtable;

        $r3 = virtualinvoke r0.<org.htmlparser.tags.ObjectTag: lg getChildren()>();

        if $r3 != null goto label3;

        $r3 = new lg;

        specialinvoke $r3.<lg: void <init>()>();

     label1:
        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = (java.lang.String) $r5;

        $r5 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r6);

        $r7 = (java.lang.String) $r5;

        $r8 = new kk;

        specialinvoke $r8.<kk: void <init>(java.lang.String,java.lang.String)>("PARAM", null);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $r8 = new kk;

        specialinvoke $r8.<kk: void <init>(java.lang.String)>(" ");

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $r8 = new kk;

        specialinvoke $r8.<kk: void <init>(java.lang.String,java.lang.String,char)>("VALUE", $r7, 34);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $r8 = new kk;

        specialinvoke $r8.<kk: void <init>(java.lang.String)>(" ");

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $r8 = new kk;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toUpperCase()>();

        specialinvoke $r8.<kk: void <init>(java.lang.String,java.lang.String,char)>("NAME", $r6, 34);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $r9 = new org.htmlparser.nodes.TagNode;

        specialinvoke $r9.<org.htmlparser.nodes.TagNode: void <init>(kr,int,int,java.util.Vector)>(null, 0, 0, $r2);

        virtualinvoke $r3.<lg: void a(org.htmlparser.Node)>($r9);

        goto label2;

     label3:
        $i0 = 0;

     label4:
        $i1 = $r3.<lg: int b>;

        if $i0 >= $i1 goto label8;

        $r10 = $r3.<lg: org.htmlparser.Node[] a>;

        $r11 = $r10[$i0];

        $z0 = $r11 instanceof org.htmlparser.Tag;

        if $z0 == 0 goto label6;

        $r12 = (org.htmlparser.Tag) $r11;

        $r6 = interfaceinvoke $r12.<org.htmlparser.Tag: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("PARAM");

        if $z0 == 0 goto label5;

        virtualinvoke $r3.<lg: org.htmlparser.Node a(int)>($i0);

        $i1 = $r3.<lg: int b>;

        if $i0 >= $i1 goto label4;

        $r10 = $r3.<lg: org.htmlparser.Node[] a>;

        $r11 = $r10[$i0];

        $z0 = $r11 instanceof org.htmlparser.nodes.TextNode;

        if $z0 == 0 goto label4;

        $r13 = (org.htmlparser.nodes.TextNode) $r11;

        $r6 = virtualinvoke $r13.<org.htmlparser.nodes.TextNode: java.lang.String getText()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

        virtualinvoke $r3.<lg: org.htmlparser.Node a(int)>($i0);

        goto label4;

     label5:
        $i0 = $i0 + 1;

        goto label4;

     label6:
        $i0 = $i0 + 1;

        goto label4;

     label7:
        virtualinvoke r0.<org.htmlparser.tags.ObjectTag: void setChildren(lg)>($r3);

        return;

     label8:
        goto label1;
    }

    public void setObjectStandby(java.lang.String)
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.htmlparser.tags.ObjectTag: void setAttribute(java.lang.String,java.lang.String)>("STANDBY", $r1);

        return;
    }

    public void setObjectType(java.lang.String)
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.htmlparser.tags.ObjectTag: void setAttribute(java.lang.String,java.lang.String)>("TYPE", $r1);

        return;
    }

    public void setObjectWidth(java.lang.String)
    {
        org.htmlparser.tags.ObjectTag r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.tags.ObjectTag;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.htmlparser.tags.ObjectTag: void setAttribute(java.lang.String,java.lang.String)>("WIDTH", $r1);

        return;
    }

    public java.lang.String toString()
    {
        ll $r5;
        org.htmlparser.tags.ObjectTag r1;
        java.util.Enumeration $r4;
        org.htmlparser.Node $r6;
        org.htmlparser.Tag $r7;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.Object $r8;
        java.lang.String $r2, $r9;
        java.util.Hashtable $r3;
        boolean $z0, $z1;

        r1 := @this: org.htmlparser.tags.ObjectTag;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(500);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Object Tag\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("**********\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ClassId = ");

        $r2 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: java.lang.String getObjectClassId()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CodeBase = ");

        $r2 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: java.lang.String getObjectCodeBase()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CodeType = ");

        $r2 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: java.lang.String getObjectCodeType()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Data = ");

        $r2 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: java.lang.String getObjectData()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Height = ");

        $r2 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: java.lang.String getObjectHeight()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Standby = ");

        $r2 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: java.lang.String getObjectStandby()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type = ");

        $r2 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: java.lang.String getObjectType()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Width = ");

        $r2 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: java.lang.String getObjectWidth()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r3 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: java.util.Hashtable getObjectParams()>();

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.util.Enumeration keys()>();

        if $r4 != null goto label5;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No Params found.\n");

     label1:
        $r5 = virtualinvoke r1.<org.htmlparser.tags.ObjectTag: ll children()>();

        $z0 = 0;

     label2:
        $z1 = interfaceinvoke $r5.<ll: boolean a()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<ll: org.htmlparser.Node b()>();

        $z1 = $r6 instanceof org.htmlparser.Tag;

        if $z1 == 0 goto label3;

        $r7 = (org.htmlparser.Tag) $r6;

        $r2 = interfaceinvoke $r7.<org.htmlparser.Tag: java.lang.String getTagName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("PARAM");

        if $z1 != 0 goto label2;

     label3:
        if $z0 != 0 goto label7;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Miscellaneous items :\n");

     label4:
        $z0 = 1;

        $r2 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        goto label2;

     label5:
        $i0 = 0;

     label6:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label1;

        $r8 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r2 = (java.lang.String) $r8;

        $r8 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        $r9 = (java.lang.String) $r8;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": Parameter name = ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", Parameter value = ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $i0 = $i0 + 1;

        goto label6;

     label7:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        goto label4;

     label8:
        if $z0 == 0 goto label9;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label9:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("End of Object Tag\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("*****************\n");

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
