class com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing extends java.lang.Object
{
    java.util.ArrayList dataNews;
    private java.lang.String dataSubTitle;
    private java.lang.String dataTitle;
    private java.lang.String dataURL;
    int foreCnt;
    final com.ssm.newsnevent.GeoToBoardingPage this$0;

    public void <init>(com.ssm.newsnevent.GeoToBoardingPage, java.util.ArrayList)
    {
        com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing r0;
        com.ssm.newsnevent.GeoToBoardingPage $r1;
        java.util.ArrayList r2;

        r0 := @this: com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing;

        $r1 := @parameter0: com.ssm.newsnevent.GeoToBoardingPage;

        r2 := @parameter1: java.util.ArrayList;

        r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: com.ssm.newsnevent.GeoToBoardingPage this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: int foreCnt> = 0;

        r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.util.ArrayList dataNews> = r2;

        return;
    }

    private java.lang.String getCDATAText(java.lang.String)
    {
        com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing;

        $r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("CDATA[");

        i0 = i0 + 6;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("]");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        return $r1;
    }

    private void getNeedMsg(java.lang.String)
    {
        com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing r0;
        java.lang.String $r1, $r3, $r4;
        com.ssm.newsnevent.BoardingInfo $r2;
        boolean $z0;
        java.util.ArrayList $r5;

        r0 := @this: com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("company");

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.lang.String getCDATAText(java.lang.String)>($r1);

        r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.lang.String dataTitle> = $r1;

        return;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("etc");

        if $z0 == 0 goto label2;

        $r1 = specialinvoke r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.lang.String getCDATAText(java.lang.String)>($r1);

        r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.lang.String dataSubTitle> = $r1;

        return;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("link");

        if $z0 == 0 goto label3;

        $r1 = specialinvoke r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.lang.String getCDATAText(java.lang.String)>($r1);

        r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.lang.String dataURL> = $r1;

        $r5 = r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.util.ArrayList dataNews>;

        $r2 = new com.ssm.newsnevent.BoardingInfo;

        $r1 = r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.lang.String dataTitle>;

        $r3 = r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.lang.String dataSubTitle>;

        $r4 = r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: java.lang.String dataURL>;

        specialinvoke $r2.<com.ssm.newsnevent.BoardingInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r3, $r4);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label3:
        return;
    }

    private void readContents(java.net.URLConnection)
    {
        java.lang.Throwable $r6, $r7;
        java.io.IOException $r10;
        java.io.InputStreamReader $r3, $r8;
        java.net.URLConnection $r1;
        com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing r0;
        java.io.BufferedReader r2, $r9;
        java.lang.String $r5;
        java.io.InputStream $r4;
        boolean $z0;

        r0 := @this: com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing;

        $r1 := @parameter0: java.net.URLConnection;

        $r9 = new java.io.BufferedReader;

        r2 = $r9;

        $r8 = new java.io.InputStreamReader;

        $r3 = $r8;

     label1:
        $r4 = virtualinvoke $r1.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r4);

        specialinvoke $r9.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3);

     label2:
        virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label3:
        $r5 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("/catalog");

     label4:
        if $z0 == 0 goto label5;

        return;

     label5:
        specialinvoke r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: void getNeedMsg(java.lang.String)>($r5);

     label6:
        goto label3;

     label7:
        $r6 := @caughtexception;

     label8:
        $r10 = (java.io.IOException) $r6;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

        return;

     label9:
        $r7 := @caughtexception;

        $r6 = $r7;

        goto label8;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label2 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    void proceed(java.net.URLConnection)
    {
        com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing r0;
        java.net.URLConnection $r1;

        r0 := @this: com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing;

        $r1 := @parameter0: java.net.URLConnection;

        specialinvoke r0.<com.ssm.newsnevent.GeoToBoardingPage$ReadLineparsing: void readContents(java.net.URLConnection)>($r1);

        return;
    }
}
