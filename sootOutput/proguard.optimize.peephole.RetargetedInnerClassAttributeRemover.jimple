public class proguard.optimize.peephole.RetargetedInnerClassAttributeRemover extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.attribute.visitor.AttributeVisitor, proguard.classfile.attribute.visitor.InnerClassesInfoVisitor, proguard.classfile.constant.visitor.ConstantVisitor
{
    private boolean retargeted;

    public void <init>()
    {
        proguard.optimize.peephole.RetargetedInnerClassAttributeRemover r0;

        r0 := @this: proguard.optimize.peephole.RetargetedInnerClassAttributeRemover;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        return;
    }

    private void checkTarget(proguard.classfile.Clazz)
    {
        proguard.optimize.peephole.RetargetedInnerClassAttributeRemover r0;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.optimize.peephole.RetargetedInnerClassAttributeRemover;

        $r1 := @parameter0: proguard.classfile.Clazz;

        if $r1 == null goto label1;

        $r1 = staticinvoke <proguard.optimize.peephole.ClassMerger: proguard.classfile.Clazz getTargetClass(proguard.classfile.Clazz)>($r1);

        if $r1 == null goto label1;

        r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: boolean retargeted> = 1;

     label1:
        return;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.optimize.peephole.RetargetedInnerClassAttributeRemover r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.optimize.peephole.RetargetedInnerClassAttributeRemover;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        return;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.constant.ClassConstant $r2;
        proguard.optimize.peephole.RetargetedInnerClassAttributeRemover r0;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.optimize.peephole.RetargetedInnerClassAttributeRemover;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r1 = $r2.<proguard.classfile.constant.ClassConstant: proguard.classfile.Clazz referencedClass>;

        specialinvoke r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: void checkTarget(proguard.classfile.Clazz)>($r1);

        return;
    }

    public void visitEnclosingMethodAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.EnclosingMethodAttribute)
    {
        proguard.classfile.attribute.EnclosingMethodAttribute $r2;
        proguard.optimize.peephole.RetargetedInnerClassAttributeRemover r0;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.optimize.peephole.RetargetedInnerClassAttributeRemover;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.EnclosingMethodAttribute;

        specialinvoke r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: void checkTarget(proguard.classfile.Clazz)>($r1);

        $r1 = $r2.<proguard.classfile.attribute.EnclosingMethodAttribute: proguard.classfile.Clazz referencedClass>;

        specialinvoke r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: void checkTarget(proguard.classfile.Clazz)>($r1);

        return;
    }

    public void visitInnerClassesAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.InnerClassesAttribute)
    {
        proguard.classfile.attribute.InnerClassesAttribute $r2;
        proguard.classfile.attribute.InnerClassesInfo[] $r3;
        proguard.optimize.peephole.RetargetedInnerClassAttributeRemover r0;
        proguard.classfile.Clazz $r1;
        int $i0, $i1, $i2;
        proguard.classfile.attribute.InnerClassesInfo $r4;
        boolean $z0;

        r0 := @this: proguard.optimize.peephole.RetargetedInnerClassAttributeRemover;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.InnerClassesAttribute;

        specialinvoke r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: void checkTarget(proguard.classfile.Clazz)>($r1);

        $z0 = r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: boolean retargeted>;

        if $z0 != 0 goto label8;

        virtualinvoke $r2.<proguard.classfile.attribute.InnerClassesAttribute: void innerClassEntriesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.InnerClassesInfoVisitor)>($r1, r0);

        $i0 = $r2.<proguard.classfile.attribute.InnerClassesAttribute: int u2classesCount>;

        $r3 = $r2.<proguard.classfile.attribute.InnerClassesAttribute: proguard.classfile.attribute.InnerClassesInfo[] classes>;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = $r3[$i1];

        r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: boolean retargeted> = 0;

        virtualinvoke $r4.<proguard.classfile.attribute.InnerClassesInfo: void outerClassConstantAccept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor)>($r1, r0);

        virtualinvoke $r4.<proguard.classfile.attribute.InnerClassesInfo: void innerClassConstantAccept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor)>($r1, r0);

        $z0 = r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: boolean retargeted>;

        if $z0 != 0 goto label2;

        $r3[$i2] = $r4;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i1 = $i2;

     label4:
        if $i1 >= $i0 goto label5;

        $r3[$i1] = null;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2.<proguard.classfile.attribute.InnerClassesAttribute: int u2classesCount> = $i2;

        if $i2 != 0 goto label7;

        $z0 = 1;

     label6:
        r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: boolean retargeted> = $z0;

        return;

     label7:
        $z0 = 0;

        goto label6;

     label8:
        return;
    }

    public void visitInnerClassesInfo(proguard.classfile.Clazz, proguard.classfile.attribute.InnerClassesInfo)
    {
        proguard.optimize.peephole.RetargetedInnerClassAttributeRemover r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.InnerClassesInfo $r2;

        r0 := @this: proguard.optimize.peephole.RetargetedInnerClassAttributeRemover;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.InnerClassesInfo;

        virtualinvoke $r2.<proguard.classfile.attribute.InnerClassesInfo: void innerClassConstantAccept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor)>($r1, r0);

        virtualinvoke $r2.<proguard.classfile.attribute.InnerClassesInfo: void outerClassConstantAccept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor)>($r1, r0);

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.attribute.Attribute[] $r2;
        proguard.classfile.ProgramClass $r1;
        proguard.optimize.peephole.RetargetedInnerClassAttributeRemover r0;
        int $i0, $i1, $i2;
        proguard.classfile.attribute.Attribute $r3;
        boolean $z0;

        r0 := @this: proguard.optimize.peephole.RetargetedInnerClassAttributeRemover;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2attributesCount>;

        $r2 = $r1.<proguard.classfile.ProgramClass: proguard.classfile.attribute.Attribute[] attributes>;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r2[$i1];

        r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: boolean retargeted> = 0;

        virtualinvoke $r3.<proguard.classfile.attribute.Attribute: void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, r0);

        $z0 = r0.<proguard.optimize.peephole.RetargetedInnerClassAttributeRemover: boolean retargeted>;

        if $z0 != 0 goto label2;

        $r2[$i2] = $r3;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i1 = $i2;

     label4:
        if $i1 >= $i0 goto label5;

        $r2[$i1] = null;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r1.<proguard.classfile.ProgramClass: int u2attributesCount> = $i2;

        return;
    }
}
