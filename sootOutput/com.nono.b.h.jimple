public final class com.nono.b.h extends java.lang.Object
{

    public static java.lang.String a(java.lang.String, java.lang.String)
    {
        byte[] $r2, $r3;
        javax.crypto.spec.SecretKeySpec $r5;
        java.lang.Integer $r4;
        javax.crypto.Cipher $r6;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <com.nono.b.h: byte[] a(byte[])>($r2);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r2 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r0 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r0, 16);

        $b4 = virtualinvoke $r4.<java.lang.Integer: byte byteValue()>();

        $r2[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, "AES");

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES");

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r5);

        $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2);

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r2);

        return $r0;
    }

    public static byte[] a(byte[])
    {
        java.security.SecureRandom $r2;
        byte[] $r0;
        int $i0;
        javax.crypto.SecretKey $r3;
        javax.crypto.KeyGenerator $r1;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES");

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label2;

        $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>("SHA1PRNG", "Crypto");

     label1:
        virtualinvoke $r2.<java.security.SecureRandom: void setSeed(byte[])>($r0);

        virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(128, $r2);

        $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r0 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>();

        return $r0;

     label2:
        $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>("SHA1PRNG");

        goto label1;
    }

    public static java.lang.String b(byte[])
    {
        byte[] $r0;
        char $c3;
        byte $b2;
        java.lang.StringBuffer $r1, $r3;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return "";

     label1:
        $r3 = new java.lang.StringBuffer;

        $r1 = $r3;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $b2 = $r0[$i0];

        $r2 = "0123456789ABCDEF";

        $i1 = (int) $b2;

        $i1 = $i1 >> 4;

        $i1 = $i1 & 15;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r2 = "0123456789ABCDEF";

        $b2 = $b2 & 15;

        $i1 = (int) $b2;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
