class com.baidu.android.common.logging.SimpleFormatter extends java.util.logging.Formatter
{
    private static java.lang.String format;
    private java.lang.Object[] args;
    java.util.Date dat;
    private java.text.MessageFormat formatter;

    static void <clinit>()
    {
        <com.baidu.android.common.logging.SimpleFormatter: java.lang.String format> = "{0,date} {0,time}";

        return;
    }

    void <init>()
    {
        java.lang.Object[] $r2;
        java.util.Date $r1;
        com.baidu.android.common.logging.SimpleFormatter r0;

        r0 := @this: com.baidu.android.common.logging.SimpleFormatter;

        specialinvoke r0.<java.util.logging.Formatter: void <init>()>();

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        r0.<com.baidu.android.common.logging.SimpleFormatter: java.util.Date dat> = $r1;

        $r2 = newarray (java.lang.Object)[1];

        r0.<com.baidu.android.common.logging.SimpleFormatter: java.lang.Object[] args> = $r2;

        return;
    }

    public java.lang.String format(java.util.logging.LogRecord)
    {
        java.lang.Throwable $r4;
        java.lang.Object[] $r11;
        java.util.Date $r10;
        long $l2;
        java.text.MessageFormat $r13;
        java.util.logging.Level $r15;
        java.lang.StringBuffer $r9, $r12;
        int $i0, $i1;
        java.lang.StackTraceElement $r2;
        java.lang.String $r3, $r6, $r8;
        boolean $z0, $z1;
        java.io.PrintWriter $r17;
        java.io.StringWriter $r16;
        java.util.logging.LogRecord $r1;
        java.lang.Exception $r18;
        com.baidu.android.common.logging.SimpleFormatter r0;
        java.lang.StackTraceElement[] $r5;
        java.lang.Class $r7;
        java.lang.StringBuilder $r14;

        r0 := @this: com.baidu.android.common.logging.SimpleFormatter;

        $r1 := @parameter0: java.util.logging.LogRecord;

        $r3 = null;

        entermonitor r0;

     label01:
        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i0 = lengthof $r5;

        $i1 = 0;

        $z0 = 0;

     label02:
        if $i1 >= $i0 goto label22;

        $r2 = $r5[$i1];

        $r6 = virtualinvoke $r2.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $r7 = class "Lcom/baidu/android/common/logging/Log;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z1 == 0 goto label04;

        $z0 = 1;

     label03:
        $i1 = $i1 + 1;

        goto label02;

     label04:
        if $z0 == 0 goto label03;

        $r3 = virtualinvoke $r2.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $r6 = virtualinvoke $r2.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $i0 = virtualinvoke $r2.<java.lang.StackTraceElement: int getLineNumber()>();

     label05:
        virtualinvoke $r1.<java.util.logging.LogRecord: void setSourceClassName(java.lang.String)>($r3);

        virtualinvoke $r1.<java.util.logging.LogRecord: void setSourceMethodName(java.lang.String)>($r6);

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = r0.<com.baidu.android.common.logging.SimpleFormatter: java.util.Date dat>;

        $l2 = virtualinvoke $r1.<java.util.logging.LogRecord: long getMillis()>();

        virtualinvoke $r10.<java.util.Date: void setTime(long)>($l2);

        $r11 = r0.<com.baidu.android.common.logging.SimpleFormatter: java.lang.Object[] args>;

        $r10 = r0.<com.baidu.android.common.logging.SimpleFormatter: java.util.Date dat>;

        $r11[0] = $r10;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = r0.<com.baidu.android.common.logging.SimpleFormatter: java.text.MessageFormat formatter>;

        if $r13 != null goto label06;

        $r13 = new java.text.MessageFormat;

        $r3 = <com.baidu.android.common.logging.SimpleFormatter: java.lang.String format>;

        specialinvoke $r13.<java.text.MessageFormat: void <init>(java.lang.String)>($r3);

        r0.<com.baidu.android.common.logging.SimpleFormatter: java.text.MessageFormat formatter> = $r13;

     label06:
        $r13 = r0.<com.baidu.android.common.logging.SimpleFormatter: java.text.MessageFormat formatter>;

        $r11 = r0.<com.baidu.android.common.logging.SimpleFormatter: java.lang.Object[] args>;

        virtualinvoke $r13.<java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition)>($r11, $r12, null);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r12);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $l2 = virtualinvoke $r1.<java.util.logging.LogRecord: long getMillis()>();

        $l2 = $l2 % 1000L;

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();

        if $r3 == null goto label16;

        $r3 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label07:
        $r3 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();

        if $r3 == null goto label08;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label08:
        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r3 = virtualinvoke r0.<com.baidu.android.common.logging.SimpleFormatter: java.lang.String formatMessage(java.util.logging.LogRecord)>($r1);

        $r15 = virtualinvoke $r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();

        $r6 = virtualinvoke $r15.<java.util.logging.Level: java.lang.String getLocalizedName()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r4 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

     label09:
        if $r4 == null goto label14;

     label10:
        $r16 = new java.io.StringWriter;

     label11:
        specialinvoke $r16.<java.io.StringWriter: void <init>()>();

     label12:
        $r17 = new java.io.PrintWriter;

     label13:
        specialinvoke $r17.<java.io.PrintWriter: void <init>(java.io.Writer)>($r16);

        $r4 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

        virtualinvoke $r4.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r17);

        virtualinvoke $r17.<java.io.PrintWriter: void close()>();

        $r3 = virtualinvoke $r16.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label14:
        $r3 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label15:
        exitmonitor r0;

        return $r3;

     label16:
        $r3 = virtualinvoke $r1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label17:
        goto label07;

     label18:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label19:
        $r18 := @caughtexception;

     label20:
        virtualinvoke $r18.<java.lang.Exception: void printStackTrace()>();

     label21:
        goto label14;

     label22:
        $i0 = 0;

        $r6 = null;

        goto label05;

        catch java.lang.Throwable from label01 to label09 with label18;
        catch java.lang.Exception from label11 to label12 with label19;
        catch java.lang.Exception from label13 to label14 with label19;
        catch java.lang.Throwable from label10 to label14 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label20 to label21 with label18;
    }
}
