public class proguard.util.FixedStringMatcher extends java.lang.Object implements proguard.util.StringMatcher
{
    private final java.lang.String fixedString;
    private final proguard.util.StringMatcher nextMatcher;

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        proguard.util.FixedStringMatcher r0;

        r0 := @this: proguard.util.FixedStringMatcher;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<proguard.util.FixedStringMatcher: void <init>(java.lang.String,proguard.util.StringMatcher)>($r1, null);

        return;
    }

    public void <init>(java.lang.String, proguard.util.StringMatcher)
    {
        java.lang.String $r1;
        proguard.util.StringMatcher $r2;
        proguard.util.FixedStringMatcher r0;

        r0 := @this: proguard.util.FixedStringMatcher;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: proguard.util.StringMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.util.FixedStringMatcher: java.lang.String fixedString> = $r1;

        r0.<proguard.util.FixedStringMatcher: proguard.util.StringMatcher nextMatcher> = $r2;

        return;
    }

    public boolean matches(java.lang.String)
    {
        proguard.util.FixedStringMatcher r0;
        int $i0;
        java.lang.String $r1, $r2;
        proguard.util.StringMatcher $r3;
        boolean $z0;

        r0 := @this: proguard.util.FixedStringMatcher;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<proguard.util.FixedStringMatcher: java.lang.String fixedString>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<proguard.util.FixedStringMatcher: proguard.util.StringMatcher nextMatcher>;

        if $r3 == null goto label1;

        $r3 = r0.<proguard.util.FixedStringMatcher: proguard.util.StringMatcher nextMatcher>;

        $r2 = r0.<proguard.util.FixedStringMatcher: java.lang.String fixedString>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = interfaceinvoke $r3.<proguard.util.StringMatcher: boolean matches(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
}
