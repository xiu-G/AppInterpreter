final class cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable extends cn.ffcs.lib.bitmapcache.WeakReferenceRunnable
{

    public void <init>(cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable)
    {
        cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable r0;
        cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable $r1;

        r0 := @this: cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable;

        $r1 := @parameter0: cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable;

        specialinvoke r0.<cn.ffcs.lib.bitmapcache.WeakReferenceRunnable: void <init>(java.lang.Object)>($r1);

        return;
    }

    public void run(cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable)
    {
        cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable r0;
        cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable $r1;

        r0 := @this: cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable;

        $r1 := @parameter0: cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable;

        staticinvoke <cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable: void access$000(cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable,boolean)>($r1, 1);

        return;
    }

    public volatile void run(java.lang.Object)
    {
        cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable r0;
        cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable $r2;
        java.lang.Object $r1;

        r0 := @this: cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable) $r1;

        virtualinvoke r0.<cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable$CheckStateRunnable: void run(cn.ffcs.lib.bitmapcache.CacheableBitmapDrawable)>($r2);

        return;
    }
}
