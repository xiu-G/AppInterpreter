public class com.thinkland.FWCup2010.net.versionCheckHelper extends java.lang.Object
{
    static final java.lang.String TAG;

    public void <init>()
    {
        com.thinkland.FWCup2010.net.versionCheckHelper r0;

        r0 := @this: com.thinkland.FWCup2010.net.versionCheckHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean checkAppVersion(java.io.InputStream, int) throws java.lang.Exception
    {
        java.lang.Throwable $r11, $r13;
        short $s3;
        org.w3c.dom.Document $r4;
        org.w3c.dom.Node $r7;
        int $i0, i1, $i2;
        java.lang.String $r8, $r10;
        org.w3c.dom.NodeList $r6;
        com.thinkland.FWCup2010.net.versionCheckHelper r0;
        java.lang.Exception $r12, $r14, $r16;
        org.xml.sax.SAXParseException $r17;
        org.w3c.dom.Element $r5;
        javax.xml.parsers.DocumentBuilder $r3;
        org.xml.sax.SAXException $r18;
        java.lang.StringBuilder $r9, $r15;
        javax.xml.parsers.DocumentBuilderFactory $r2;
        java.io.InputStream $r1;

        r0 := @this: com.thinkland.FWCup2010.net.versionCheckHelper;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

     label01:
        $r2 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r3 = virtualinvoke $r2.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r1);

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        interfaceinvoke $r5.<org.w3c.dom.Element: void normalize()>();

        $r6 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("row");

     label02:
        i1 = 0;

     label03:
        $i2 = interfaceinvoke $r6.<org.w3c.dom.NodeList: int getLength()>();

     label04:
        if i1 < $i2 goto label05;

        return 0;

     label05:
        $r7 = interfaceinvoke $r6.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        $s3 = interfaceinvoke $r7.<org.w3c.dom.Node: short getNodeType()>();

     label06:
        if $s3 != 1 goto label15;

     label07:
        $r5 = (org.w3c.dom.Element) $r7;

     label08:
        $r6 = interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("Version");

        $r7 = interfaceinvoke $r6.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label09:
        $r5 = (org.w3c.dom.Element) $r7;

     label10:
        $r6 = interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r7 = interfaceinvoke $r6.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

     label11:
        $r15 = new java.lang.StringBuilder;

        $r9 = $r15;

     label12:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("----------------- newVersion: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ssss", $r10);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label13:
        if i1 <= $i0 goto label14;

        return 1;

     label14:
        return 0;

     label15:
        i1 = i1 + 1;

        goto label03;

     label16:
        $r11 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("** matchUpdate Parsing error, line ");

        $r17 = (org.xml.sax.SAXParseException) $r11;

        $i0 = virtualinvoke $r17.<org.xml.sax.SAXParseException: int getLineNumber()>();

        $r9 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uri ");

        $r17 = (org.xml.sax.SAXParseException) $r11;

        $r8 = virtualinvoke $r17.<org.xml.sax.SAXParseException: java.lang.String getSystemId()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("versionCheckHelper", $r8);

        $r17 = (org.xml.sax.SAXParseException) $r11;

        $r8 = virtualinvoke $r17.<org.xml.sax.SAXParseException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("versionCheckHelper", $r8);

        $r14 = new java.lang.Exception;

        specialinvoke $r14.<java.lang.Exception: void <init>(java.lang.Throwable)>($r11);

        throw $r14;

     label17:
        $r13 := @caughtexception;

        $r18 = (org.xml.sax.SAXException) $r13;

        $r12 = virtualinvoke $r18.<org.xml.sax.SAXException: java.lang.Exception getException()>();

        if $r12 != null goto label19;

        $r11 = $r13;

     label18:
        $r12 = (java.lang.Exception) $r11;

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

        $r14 = new java.lang.Exception;

        specialinvoke $r14.<java.lang.Exception: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label19:
        $r11 = $r12;

        goto label18;

     label20:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

        $r16 = new java.lang.Exception;

        specialinvoke $r16.<java.lang.Exception: void <init>(java.lang.Throwable)>($r12);

        throw $r16;

        catch org.xml.sax.SAXParseException from label01 to label02 with label16;
        catch org.xml.sax.SAXParseException from label03 to label04 with label16;
        catch org.xml.sax.SAXParseException from label05 to label06 with label16;
        catch org.xml.sax.SAXParseException from label08 to label09 with label16;
        catch org.xml.sax.SAXParseException from label10 to label11 with label16;
        catch org.xml.sax.SAXParseException from label12 to label13 with label16;
        catch org.xml.sax.SAXException from label01 to label02 with label17;
        catch org.xml.sax.SAXException from label03 to label04 with label17;
        catch org.xml.sax.SAXException from label05 to label06 with label17;
        catch org.xml.sax.SAXException from label08 to label09 with label17;
        catch org.xml.sax.SAXException from label10 to label11 with label17;
        catch org.xml.sax.SAXException from label12 to label13 with label17;
        catch java.lang.Exception from label01 to label02 with label20;
        catch java.lang.Exception from label03 to label04 with label20;
        catch java.lang.Exception from label05 to label06 with label20;
        catch java.lang.Exception from label07 to label11 with label20;
        catch java.lang.Exception from label12 to label13 with label20;
    }

    public static void <clinit>()
    {
        <com.thinkland.FWCup2010.net.versionCheckHelper: java.lang.String TAG> = "versionCheckHelper";

        return;
    }
}
