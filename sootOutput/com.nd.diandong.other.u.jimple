public class com.nd.diandong.other.u extends java.lang.Object
{
    static com.nd.diandong.other.u a;
    static java.lang.String a;

    static void <clinit>()
    {
        com.nd.diandong.other.u $r0;

        <com.nd.diandong.other.u: java.lang.String a> = "ConnectionModule";

        $r0 = new com.nd.diandong.other.u;

        specialinvoke $r0.<com.nd.diandong.other.u: void <init>()>();

        <com.nd.diandong.other.u: com.nd.diandong.other.u a> = $r0;

        return;
    }

    public void <init>()
    {
        com.nd.diandong.other.u r0;

        r0 := @this: com.nd.diandong.other.u;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.nd.diandong.other.u a()
    {
        com.nd.diandong.other.u r0;

        r0 = <com.nd.diandong.other.u: com.nd.diandong.other.u a>;

        return r0;
    }

    private org.apache.http.HttpEntity b(java.lang.String, byte[])
    {
        org.apache.http.impl.client.DefaultHttpClient $r4;
        java.lang.Throwable $r11, $r17;
        byte[] $r2;
        org.apache.http.client.methods.HttpPost $r6;
        org.apache.http.params.BasicHttpParams $r3;
        org.apache.http.entity.ByteArrayEntity $r7;
        com.nd.diandong.other.H $r13;
        org.apache.http.StatusLine $r9;
        int $i0;
        com.nd.diandong.other.s $r12;
        com.nd.diandong.other.u r0;
        java.lang.String $r1;
        boolean $z0;
        org.apache.http.HttpEntity $r10;
        java.lang.Exception $r14, $r15, $r16;
        org.apache.http.params.HttpParams $r5;
        org.apache.http.HttpResponse $r8;

        r0 := @this: com.nd.diandong.other.u;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $i0 = 0;

        $r3 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r3, 30000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r3, 30000);

        $r4 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r3);

        $r5 = interfaceinvoke $r4.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r5.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.cookie-policy", "compatibility");

        $r6 = new org.apache.http.client.methods.HttpPost;

        specialinvoke $r6.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke $r6.<org.apache.http.client.methods.HttpPost: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r5.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.expect-continue", 0);

        $r5 = virtualinvoke $r6.<org.apache.http.client.methods.HttpPost: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r5.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.cookie-policy", "compatibility");

        $r7 = new org.apache.http.entity.ByteArrayEntity;

        specialinvoke $r7.<org.apache.http.entity.ByteArrayEntity: void <init>(byte[])>($r2);

        virtualinvoke $r6.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r7);

     label01:
        $r8 = interfaceinvoke $r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r6);

     label02:
        if $r8 == null goto label14;

        $r9 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r9.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 != 200 goto label13;

        $r10 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        return $r10;

     label03:
        $r11 := @caughtexception;

        $r1 = <com.nd.diandong.other.u: java.lang.String a>;

        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "ClientProtocolException:", $r11);

        $r12 = staticinvoke <com.nd.diandong.other.s: com.nd.diandong.other.s a()>();

        $z0 = virtualinvoke $r12.<com.nd.diandong.other.s: boolean c()>();

        if $z0 == 0 goto label12;

        $r13 = staticinvoke <com.nd.diandong.other.H: com.nd.diandong.other.H a()>();

        virtualinvoke $r13.<com.nd.diandong.other.H: void c()>();

        $r8 = null;

        goto label02;

     label04:
        $r8 = interfaceinvoke $r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r6);

     label05:
        $r1 = <com.nd.diandong.other.u: java.lang.String a>;

        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "SocketTimeoutException", $r17);

        goto label02;

     label06:
        $r14 := @caughtexception;

        $r1 = <com.nd.diandong.other.u: java.lang.String a>;

     label07:
        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "SocketTimeoutException Data(try again):", $r14);

     label08:
        $i0 = $i0 + 1;

     label09:
        if $i0 < 3 goto label04;

        $r8 = null;

        goto label05;

     label10:
        $r15 := @caughtexception;

        $r1 = <com.nd.diandong.other.u: java.lang.String a>;

        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "SocketTimeoutException Data(try again):", $r15);

        $r8 = null;

        goto label05;

     label11:
        $r16 := @caughtexception;

        $r1 = <com.nd.diandong.other.u: java.lang.String a>;

        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "send Data", $r16);

     label12:
        $r8 = null;

        goto label02;

     label13:
        $r9 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r9.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 != 303 goto label16;

        $r13 = staticinvoke <com.nd.diandong.other.H: com.nd.diandong.other.H a()>();

        virtualinvoke $r13.<com.nd.diandong.other.H: void c()>();

        return null;

     label14:
        $r1 = <com.nd.diandong.other.u: java.lang.String a>;

        staticinvoke <com.nd.diandong.other.h: void e(java.lang.String,java.lang.String)>($r1, "++++++ response is null.");

        return null;

     label15:
        $r17 := @caughtexception;

        goto label09;

     label16:
        return null;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label03;
        catch java.net.SocketTimeoutException from label01 to label02 with label15;
        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label10;
    }

    public org.apache.http.HttpEntity a(java.lang.String, byte[])
    {
        byte[] $r2;
        org.apache.http.HttpEntity $r3;
        com.nd.diandong.other.u r0;
        java.lang.String $r1;
        java.lang.Exception $r4;

        r0 := @this: com.nd.diandong.other.u;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        r0 = new com.nd.diandong.other.u;

        specialinvoke r0.<com.nd.diandong.other.u: void <init>()>();

     label1:
        $r3 = specialinvoke r0.<com.nd.diandong.other.u: org.apache.http.HttpEntity b(java.lang.String,byte[])>($r1, $r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r1 = <com.nd.diandong.other.u: java.lang.String a>;

        staticinvoke <com.nd.diandong.other.h: void c(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "sendRegisterDataException:", $r4);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
