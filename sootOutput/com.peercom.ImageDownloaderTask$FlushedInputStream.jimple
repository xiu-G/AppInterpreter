class com.peercom.ImageDownloaderTask$FlushedInputStream extends java.io.FilterInputStream
{

    public void <init>(java.io.InputStream)
    {
        com.peercom.ImageDownloaderTask$FlushedInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: com.peercom.ImageDownloaderTask$FlushedInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        com.peercom.ImageDownloaderTask$FlushedInputStream r0;
        long $l0, $l1, l2, l4;
        byte $b3;
        int $i5;
        java.io.InputStream $r1;

        r0 := @this: com.peercom.ImageDownloaderTask$FlushedInputStream;

        $l0 := @parameter0: long;

        l2 = 0L;

     label1:
        $b3 = l2 cmp $l0;

        $i5 = (int) $b3;

        if $i5 < 0 goto label2;

        return l2;

     label2:
        $r1 = r0.<com.peercom.ImageDownloaderTask$FlushedInputStream: java.io.InputStream in>;

        $l1 = $l0 - l2;

        $l1 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l1);

        l4 = $l1;

        $b3 = $l1 cmp 0L;

        if $b3 != 0 goto label3;

        $i5 = virtualinvoke r0.<com.peercom.ImageDownloaderTask$FlushedInputStream: int read()>();

        if $i5 < 0 goto label4;

        l4 = 1L;

     label3:
        l2 = l2 + l4;

        goto label1;

     label4:
        return l2;
    }
}
