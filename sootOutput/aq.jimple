public final class aq extends java.lang.Object implements ak
{
    aj a;
    long b;
    long c;

    public void <init>(aj)
    {
        aq r0;
        aj $r1;
        long $l0, $l1;
        java.io.IOException $r2;

        r0 := @this: aq;

        $r1 := @parameter0: aj;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<aq: aj a> = null;

        r0.<aq: long b> = 0L;

        r0.<aq: long c> = -1L;

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("dcf stream is null");

        throw $r2;

     label1:
        r0.<aq: aj a> = $r1;

        $r1 = r0.<aq: aj a>;

        $l1 = $r1.<aj: long d>;

        $l0 = $r1.<aj: long c>;

        $l0 = $l1 - $l0;

        r0.<aq: long b> = $l0;

        return;
    }

    public void <init>(java.lang.String, long, long)
    {
        aq r0;
        aj $r2;
        long $l0, $l1;
        java.lang.String $r1;

        r0 := @this: aq;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<aq: aj a> = null;

        r0.<aq: long b> = 0L;

        r0.<aq: long c> = -1L;

        $r2 = new aj;

        specialinvoke $r2.<aj: void <init>(java.lang.String,long,long)>($r1, $l0, $l1);

        r0.<aq: aj a> = $r2;

        $r2 = r0.<aq: aj a>;

        $l1 = $r2.<aj: long d>;

        $l0 = $r2.<aj: long c>;

        $l0 = $l1 - $l0;

        r0.<aq: long b> = $l0;

        return;
    }

    public final int a()
    {
        java.io.RandomAccessFile $r3;
        aj $r1;
        long $l0, $l1, $l2;
        java.io.IOException $r2;
        aq r0;
        int $i3;

        r0 := @this: aq;

        $r1 = r0.<aq: aj a>;

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("the stream was closed");

        throw $r2;

     label1:
        $l2 = r0.<aq: long b>;

        $r1 = r0.<aq: aj a>;

        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r2;

     label2:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        $l1 = virtualinvoke $r3.<java.io.RandomAccessFile: long getFilePointer()>();

        $l0 = $r1.<aj: long c>;

        $l0 = $l1 - $l0;

        $l2 = $l2 - $l0;

        $i3 = (int) $l2;

        if $i3 <= 0 goto label3;

        return $i3;

     label3:
        return 0;
    }

    public final int a(byte[], int, int)
    {
        aq r0;
        byte[] $r1;
        int $i0, $i1;
        aj $r2;
        java.io.IOException $r3;

        r0 := @this: aq;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<aq: aj a>;

        if $r2 != null goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("the stream was closed");

        throw $r3;

     label1:
        $r2 = r0.<aq: aj a>;

        $i0 = virtualinvoke $r2.<aj: int a(byte[],int,int)>($r1, $i0, $i1);

        return $i0;
    }

    public final long a(long)
    {
        java.io.RandomAccessFile $r2;
        aj $r1;
        long $l0, $l1, $l4;
        java.io.IOException $r3;
        aq r0;
        byte $b3;
        int $i2, $i5;

        r0 := @this: aq;

        $l0 := @parameter0: long;

        $r1 = r0.<aq: aj a>;

        if $r1 != null goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("the stream was closed");

        throw $r3;

     label1:
        $r1 = r0.<aq: aj a>;

        $i2 = (int) $l0;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        $l0 = virtualinvoke $r2.<java.io.RandomAccessFile: long getFilePointer()>();

        $l1 = $r1.<aj: long d>;

        $b3 = $l0 cmp $l1;

        $i5 = (int) $b3;

        if $i5 < 0 goto label3;

        $i2 = 0;

     label2:
        $l0 = (long) $i2;

        return $l0;

     label3:
        $l1 = (long) $i2;

        $l4 = $l1 + $l0;

        $l1 = $r1.<aj: long d>;

        $b3 = $l4 cmp $l1;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label4;

        $l1 = $r1.<aj: long d>;

        $l0 = $l1 - $l0;

        $i2 = (int) $l0;

     label4:
        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        $i2 = virtualinvoke $r2.<java.io.RandomAccessFile: int skipBytes(int)>($i2);

        goto label2;
    }

    public final void a(boolean)
    {
        java.io.RandomAccessFile $r2;
        aj $r1;
        long $l1, $l2;
        java.io.IOException $r3;
        aq r0;
        byte $b0;
        int $i3;
        boolean $z0;

        r0 := @this: aq;

        $z0 := @parameter0: boolean;

        $r1 = r0.<aq: aj a>;

        if $r1 != null goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("the stream was closed");

        throw $r3;

     label1:
        if $z0 == 0 goto label5;

        $r1 = r0.<aq: aj a>;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r2 != null goto label2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r3;

     label2:
        $b0 = 0L cmp 0L;

        $i3 = (int) $b0;

        if $i3 >= 0 goto label3;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("the pos is less than zero");

        throw $r3;

     label3:
        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        $l1 = $r1.<aj: long c>;

        $l1 = $l1 + 0L;

        virtualinvoke $r2.<java.io.RandomAccessFile: void seek(long)>($l1);

     label4:
        r0.<aq: long c> = -1L;

        return;

     label5:
        $l1 = r0.<aq: long c>;

        $b0 = $l1 cmp 0L;

        $i3 = (int) $b0;

        if $i3 < 0 goto label4;

        $r1 = r0.<aq: aj a>;

        $l1 = r0.<aq: long c>;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r2 != null goto label6;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r3;

     label6:
        $b0 = $l1 cmp 0L;

        $i3 = (int) $b0;

        if $i3 >= 0 goto label7;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("the pos is less than zero");

        throw $r3;

     label7:
        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        $l2 = $r1.<aj: long c>;

        $l1 = $l1 + $l2;

        virtualinvoke $r2.<java.io.RandomAccessFile: void seek(long)>($l1);

        goto label4;
    }

    public final void b()
    {
        aq r0;
        java.lang.Throwable $r3;
        java.io.RandomAccessFile $r2;
        aj $r1;
        java.io.IOException $r4;

        r0 := @this: aq;

        $r1 = r0.<aq: aj a>;

        if $r1 == null goto label3;

        $r1 = r0.<aq: aj a>;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r2 == null goto label2;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

     label1:
        virtualinvoke $r2.<java.io.RandomAccessFile: void close()>();

     label2:
        $r1.<aj: java.io.RandomAccessFile b> = null;

     label3:
        r0.<aq: aj a> = null;

        return;

     label4:
        $r3 := @caughtexception;

        $r4 = (java.io.IOException) $r3;

        virtualinvoke $r4.<java.io.IOException: void printStackTrace()>();

        goto label2;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public final void c()
    {
        java.lang.Throwable $r4;
        java.io.RandomAccessFile $r2;
        aj $r1;
        long $l0, $l1;
        java.io.IOException $r3, $r5;
        aq r0;
        byte $b2;
        int $i3;

        r0 := @this: aq;

        $r1 = r0.<aq: aj a>;

        if $r1 == null goto label6;

        $r1 = r0.<aq: aj a>;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r2 != null goto label3;

        $r5 = new java.io.IOException;

        $r3 = $r5;

     label1:
        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        return;

     label3:
        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

     label4:
        $l1 = virtualinvoke $r2.<java.io.RandomAccessFile: long getFilePointer()>();

     label5:
        $l0 = $r1.<aj: long c>;

        $l0 = $l1 - $l0;

        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 < 0 goto label6;

        $r1 = r0.<aq: aj a>;

        $l1 = $r1.<aj: long d>;

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label6;

        r0.<aq: long c> = $l0;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label2;
        catch java.io.IOException from label4 to label5 with label2;
    }

    public final boolean d()
    {
        aq r0;
        byte $b1;
        int $i2;
        long $l0;

        r0 := @this: aq;

        $l0 = r0.<aq: long c>;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final long e()
    {
        aq r0;
        long l0;

        r0 := @this: aq;

        l0 = r0.<aq: long b>;

        return l0;
    }
}
