class com.google.android.gms.tagmanager.j extends java.lang.Object
{

    public static byte[] aX(java.lang.String)
    {
        byte[] $r1;
        char $c3;
        java.lang.IllegalArgumentException $r2;
        byte $b6;
        int $i0, $i1, $i2, $i4, $i5;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i1 % 2;

        if $i2 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("purported base16 string has odd number of characters");

        throw $r2;

     label1:
        $i2 = $i1 / 2;

        $r1 = newarray (byte)[$i2];

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label5;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

        $i5 = $i2 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i5);

        $i5 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

        if $i4 == -1 goto label3;

        if $i5 != -1 goto label4;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("purported base16 string has illegal char");

        throw $r2;

     label4:
        $i0 = $i2 / 2;

        $i4 = $i4 << 4;

        $i4 = $i4 + $i5;

        $b6 = (byte) $i4;

        $r1[$i0] = $b6;

        $i2 = $i2 + 2;

        goto label2;

     label5:
        return $r1;
    }

    public static java.lang.String d(byte[])
    {
        byte[] $r0;
        short $s3;
        byte $b2;
        int $i0, $i1, $i4;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $r3 = new java.lang.StringBuilder;

        $r1 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $s3 = (short) $b2;

        $s3 = $s3 & 240;

        if $s3 != 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

     label2:
        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i4 = (int) $s3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        return $r2;
    }
}
