public class org.jsoup.select.NodeTraversor extends java.lang.Object
{
    private org.jsoup.select.NodeVisitor visitor;

    public void <init>(org.jsoup.select.NodeVisitor)
    {
        org.jsoup.select.NodeVisitor $r1;
        org.jsoup.select.NodeTraversor r0;

        r0 := @this: org.jsoup.select.NodeTraversor;

        $r1 := @parameter0: org.jsoup.select.NodeVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor> = $r1;

        return;
    }

    public void traverse(org.jsoup.nodes.Node)
    {
        org.jsoup.select.NodeVisitor $r3;
        org.jsoup.nodes.Node $r1, r2, $r4;
        int i0, $i1;
        org.jsoup.select.NodeTraversor r0;

        r0 := @this: org.jsoup.select.NodeTraversor;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        r2 = $r1;

        i0 = 0;

     label1:
        if r2 == null goto label5;

        $r3 = r0.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor>;

        interfaceinvoke $r3.<org.jsoup.select.NodeVisitor: void head(org.jsoup.nodes.Node,int)>(r2, i0);

        $i1 = virtualinvoke r2.<org.jsoup.nodes.Node: int childNodeSize()>();

        if $i1 <= 0 goto label2;

        r2 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node childNode(int)>(0);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>();

        if $r4 != null goto label3;

        if i0 <= 0 goto label3;

        $r3 = r0.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor>;

        interfaceinvoke $r3.<org.jsoup.select.NodeVisitor: void tail(org.jsoup.nodes.Node,int)>(r2, i0);

        r2 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parent()>();

        i0 = i0 + -1;

        goto label2;

     label3:
        $r3 = r0.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor>;

        interfaceinvoke $r3.<org.jsoup.select.NodeVisitor: void tail(org.jsoup.nodes.Node,int)>(r2, i0);

        if r2 != $r1 goto label4;

        return;

     label4:
        r2 = virtualinvoke r2.<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>();

        goto label1;

     label5:
        return;
    }
}
