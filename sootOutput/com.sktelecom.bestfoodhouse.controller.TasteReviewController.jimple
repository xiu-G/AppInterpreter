public class com.sktelecom.bestfoodhouse.controller.TasteReviewController extends java.lang.Object
{

    public void <init>()
    {
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int responseDeleteTasteReview(java.lang.String)
    {
        java.net.HttpURLConnection r6;
        java.lang.Throwable $r10, $r12;
        java.net.URL r2, $r14;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        java.net.URLConnection $r5;
        int $i0;
        java.lang.String $r1, $r4;
        org.xmlpull.v1.XmlPullParser $r9;
        boolean $z0;
        java.io.IOException $r16;
        org.xmlpull.v1.XmlPullParserException $r11;
        org.xmlpull.v1.XmlPullParserFactory $r8;
        java.lang.StringBuilder $r3, $r13;
        java.io.UnsupportedEncodingException $r15;
        java.io.InputStream $r7;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.String;

        $r13 = new java.lang.StringBuilder;

        $r3 = $r13;

     label01:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/tastesreviews/delete.xml?accessToken=");

     label02:
        $r4 = <com.sktelecom.bestfoodhouse.model.Global: java.lang.String accessToken>;

     label03:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&reviewCode=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r14 = new java.net.URL;

        r2 = $r14;

     label05:
        specialinvoke $r14.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>();

     label06:
        r6 = (java.net.HttpURLConnection) $r5;

     label07:
        virtualinvoke r6.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke r6.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke r6.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke r6.<java.net.HttpURLConnection: void connect()>();

        $r7 = virtualinvoke r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r8 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r9 = virtualinvoke $r8.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r7, null);

        $i0 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label08:
        if $i0 != 1 goto label09;

        return -1;

     label09:
        lookupswitch($i0)
        {
            case 2: goto label12;
            default: goto label10;
        };

     label10:
        $i0 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label11:
        goto label08;

     label12:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("response");

     label13:
        if $z0 == 0 goto label10;

     label14:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "status");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ok");

     label15:
        if $z0 == 0 goto label16;

        return 0;

     label16:
        return -1;

     label17:
        $r10 := @caughtexception;

        $r15 = (java.io.UnsupportedEncodingException) $r10;

        virtualinvoke $r15.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label18:
        $r11 := @caughtexception;

        virtualinvoke $r11.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label19:
        $r12 := @caughtexception;

        $r16 = (java.io.IOException) $r12;

        virtualinvoke $r16.<java.io.IOException: void printStackTrace()>();

        return 1003;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label17;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label17;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label17;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label17;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label17;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label17;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label18;
        catch java.io.IOException from label01 to label02 with label19;
        catch java.io.IOException from label03 to label04 with label19;
        catch java.io.IOException from label05 to label06 with label19;
        catch java.io.IOException from label07 to label08 with label19;
        catch java.io.IOException from label10 to label11 with label19;
        catch java.io.IOException from label12 to label13 with label19;
        catch java.io.IOException from label14 to label15 with label19;
    }

    public int responseDeleteTasteReviewReply(java.lang.String)
    {
        java.net.HttpURLConnection r6;
        java.lang.Throwable $r10, $r12;
        java.net.URL r2, $r14;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        java.net.URLConnection $r5;
        int $i0;
        java.lang.String $r1, $r4;
        org.xmlpull.v1.XmlPullParser $r9;
        boolean $z0;
        java.io.IOException $r16;
        org.xmlpull.v1.XmlPullParserException $r11;
        org.xmlpull.v1.XmlPullParserFactory $r8;
        java.lang.StringBuilder $r3, $r13;
        java.io.UnsupportedEncodingException $r15;
        java.io.InputStream $r7;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.String;

        $r13 = new java.lang.StringBuilder;

        $r3 = $r13;

     label01:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/reviewrecomment/delete.xml?accessToken=");

     label02:
        $r4 = <com.sktelecom.bestfoodhouse.model.Global: java.lang.String accessToken>;

     label03:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&seq=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r14 = new java.net.URL;

        r2 = $r14;

     label05:
        specialinvoke $r14.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>();

     label06:
        r6 = (java.net.HttpURLConnection) $r5;

     label07:
        virtualinvoke r6.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke r6.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke r6.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke r6.<java.net.HttpURLConnection: void connect()>();

        $r7 = virtualinvoke r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r8 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r9 = virtualinvoke $r8.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r7, null);

        $i0 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label08:
        if $i0 != 1 goto label09;

        return -1;

     label09:
        lookupswitch($i0)
        {
            case 2: goto label12;
            default: goto label10;
        };

     label10:
        $i0 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label11:
        goto label08;

     label12:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("response");

     label13:
        if $z0 == 0 goto label10;

     label14:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "status");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ok");

     label15:
        if $z0 == 0 goto label16;

        return 0;

     label16:
        return -1;

     label17:
        $r10 := @caughtexception;

        $r15 = (java.io.UnsupportedEncodingException) $r10;

        virtualinvoke $r15.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label18:
        $r11 := @caughtexception;

        virtualinvoke $r11.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label19:
        $r12 := @caughtexception;

        $r16 = (java.io.IOException) $r12;

        virtualinvoke $r16.<java.io.IOException: void printStackTrace()>();

        return 1003;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label17;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label17;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label17;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label17;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label17;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label17;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label18;
        catch java.io.IOException from label01 to label02 with label19;
        catch java.io.IOException from label03 to label04 with label19;
        catch java.io.IOException from label05 to label06 with label19;
        catch java.io.IOException from label07 to label08 with label19;
        catch java.io.IOException from label10 to label11 with label19;
        catch java.io.IOException from label12 to label13 with label19;
        catch java.io.IOException from label14 to label15 with label19;
    }

    public int responseInsertSympathy(java.lang.String, java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient r3, $r18;
        org.apache.http.message.BasicNameValuePair $r8, $r21;
        java.lang.Throwable $r15, $r17;
        org.apache.http.client.methods.HttpPost r4, $r19;
        org.apache.http.client.entity.UrlEncodedFormEntity $r9, $r22;
        java.util.ArrayList r5, $r20;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        int $i0;
        java.lang.String $r1, $r2, $r6;
        org.xmlpull.v1.XmlPullParser $r14;
        boolean $z0;
        org.apache.http.HttpEntity $r11;
        java.io.IOException $r24;
        org.xmlpull.v1.XmlPullParserException $r16;
        org.xmlpull.v1.XmlPullParserFactory $r13;
        org.apache.http.params.HttpParams $r7;
        org.apache.http.HttpResponse $r10;
        java.io.UnsupportedEncodingException $r23;
        java.io.InputStream $r12;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r18 = new org.apache.http.impl.client.DefaultHttpClient;

        r3 = $r18;

     label01:
        specialinvoke $r18.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        $r7 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r7, 10000);

        $r7 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r7, 10000);

     label02:
        $r19 = new org.apache.http.client.methods.HttpPost;

        r4 = $r19;

     label03:
        specialinvoke $r19.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/tastesagree/insert.xml");

     label04:
        $r20 = new java.util.ArrayList;

        r5 = $r20;

     label05:
        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

     label06:
        $r21 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r21;

        $r6 = <com.sktelecom.bestfoodhouse.model.Global: java.lang.String accessToken>;

     label07:
        specialinvoke $r21.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("accessToken", $r6);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label08:
        $r21 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r21;

     label09:
        specialinvoke $r21.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("reviewCode", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label10:
        $r21 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r21;

     label11:
        specialinvoke $r21.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("empathyScore", $r2);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label12:
        $r22 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        $r9 = $r22;

     label13:
        specialinvoke $r22.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r5, "UTF-8");

        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r9);

        $r10 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r4);

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r12 = interfaceinvoke $r11.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r13 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r14 = virtualinvoke $r13.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r12, null);

        $i0 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label14:
        if $i0 != 1 goto label15;

        $i0 = -1;

        return $i0;

     label15:
        lookupswitch($i0)
        {
            case 2: goto label18;
            default: goto label16;
        };

     label16:
        $i0 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: int next()>();

     label17:
        goto label14;

     label18:
        $r1 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("response");

     label19:
        if $z0 == 0 goto label16;

     label20:
        $r1 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "status");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ok");

     label21:
        if $z0 == 0 goto label22;

        return 0;

     label22:
        $i0 = -1;

        return $i0;

     label23:
        $r15 := @caughtexception;

        $r23 = (java.io.UnsupportedEncodingException) $r15;

        virtualinvoke $r23.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label24:
        $r16 := @caughtexception;

        virtualinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label25:
        $r17 := @caughtexception;

        $r24 = (java.io.IOException) $r17;

        virtualinvoke $r24.<java.io.IOException: void printStackTrace()>();

        return 1003;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label23;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label23;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label23;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label23;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label23;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label23;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label23;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label23;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label23;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label23;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label24;
        catch java.io.IOException from label01 to label02 with label25;
        catch java.io.IOException from label03 to label04 with label25;
        catch java.io.IOException from label05 to label06 with label25;
        catch java.io.IOException from label07 to label08 with label25;
        catch java.io.IOException from label09 to label10 with label25;
        catch java.io.IOException from label11 to label12 with label25;
        catch java.io.IOException from label13 to label14 with label25;
        catch java.io.IOException from label16 to label17 with label25;
        catch java.io.IOException from label18 to label19 with label25;
        catch java.io.IOException from label20 to label21 with label25;
    }

    public int responseInsertTasteReview(java.lang.String, com.sktelecom.bestfoodhouse.model.TasteReview)
    {
        org.apache.http.impl.client.DefaultHttpClient r3, $r19;
        org.apache.http.message.BasicNameValuePair $r8, $r22;
        java.lang.Throwable $r16, $r18;
        org.apache.http.client.methods.HttpPost r4, $r20;
        java.lang.Float $r9;
        org.apache.http.client.entity.UrlEncodedFormEntity $r10, $r23;
        java.util.ArrayList r5, $r21;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        int $i0;
        java.lang.String $r1, r6;
        org.xmlpull.v1.XmlPullParser $r15;
        boolean $z0;
        com.sktelecom.bestfoodhouse.model.TasteReview $r2;
        org.apache.http.HttpEntity $r12;
        java.io.IOException $r25;
        org.xmlpull.v1.XmlPullParserException $r17;
        org.xmlpull.v1.XmlPullParserFactory $r14;
        org.apache.http.params.HttpParams $r7;
        org.apache.http.HttpResponse $r11;
        java.io.UnsupportedEncodingException $r24;
        java.io.InputStream $r13;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.sktelecom.bestfoodhouse.model.TasteReview;

        if $r1 != null goto label36;

        r6 = "http://113.217.232.24/food-mater/xml/1.0/tastesreviews/insert.xml";

     label01:
        $r19 = new org.apache.http.impl.client.DefaultHttpClient;

        r3 = $r19;

     label02:
        specialinvoke $r19.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        $r7 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r7, 10000);

        $r7 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r7, 10000);

     label03:
        $r20 = new org.apache.http.client.methods.HttpPost;

        r4 = $r20;

     label04:
        specialinvoke $r20.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>(r6);

     label05:
        $r21 = new java.util.ArrayList;

        r5 = $r21;

     label06:
        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

     label07:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        r6 = <com.sktelecom.bestfoodhouse.model.Global: java.lang.String accessToken>;

     label08:
        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("accessToken", r6);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label09:
        if $r1 == null goto label11;

        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

     label10:
        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("reviewCode", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label11:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r1 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String foodCode>;

     label12:
        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("foodCode", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label13:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r9 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float tastesScore>;

     label14:
        $r1 = virtualinvoke $r9.<java.lang.Float: java.lang.String toString()>();

        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("tastesScore", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label15:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r9 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float feelScore>;

     label16:
        $r1 = virtualinvoke $r9.<java.lang.Float: java.lang.String toString()>();

        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("feelScore", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label17:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r9 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float svcScore>;

     label18:
        $r1 = virtualinvoke $r9.<java.lang.Float: java.lang.String toString()>();

        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("svcScore", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label19:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r9 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float totalScore>;

     label20:
        $r1 = virtualinvoke $r9.<java.lang.Float: java.lang.String toString()>();

        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("totalScore", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label21:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r1 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewComment>;

     label22:
        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("reviewComment", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label23:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r1 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewImg1>;

     label24:
        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("reviewImg1", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label25:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r1 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewImg2>;

     label26:
        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("reviewImg2", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label27:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r1 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewImg3>;

     label28:
        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("reviewImg3", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label29:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r1 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewImg4>;

     label30:
        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("reviewImg4", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label31:
        $r22 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r22;

        $r1 = $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewImg5>;

     label32:
        specialinvoke $r22.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("reviewImg5", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label33:
        $r23 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        $r10 = $r23;

     label34:
        specialinvoke $r23.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r5, "UTF-8");

        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r10);

        $r11 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r4);

        $r12 = interfaceinvoke $r11.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r13 = interfaceinvoke $r12.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r14 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r15 = virtualinvoke $r14.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r15.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r13, null);

        $i0 = interfaceinvoke $r15.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label35:
        if $i0 != 1 goto label37;

        return -1;

     label36:
        r6 = "http://113.217.232.24/food-mater/xml/1.0/tastesreviews/update.xml";

        goto label01;

     label37:
        lookupswitch($i0)
        {
            case 2: goto label40;
            default: goto label38;
        };

     label38:
        $i0 = interfaceinvoke $r15.<org.xmlpull.v1.XmlPullParser: int next()>();

     label39:
        goto label35;

     label40:
        $r1 = interfaceinvoke $r15.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("response");

     label41:
        if $z0 == 0 goto label38;

     label42:
        $r1 = interfaceinvoke $r15.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "status");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ok");

     label43:
        if $z0 == 0 goto label44;

        return 0;

     label44:
        return -1;

     label45:
        $r16 := @caughtexception;

        $r24 = (java.io.UnsupportedEncodingException) $r16;

        virtualinvoke $r24.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label46:
        $r17 := @caughtexception;

        virtualinvoke $r17.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label47:
        $r18 := @caughtexception;

        $r25 = (java.io.IOException) $r18;

        virtualinvoke $r25.<java.io.IOException: void printStackTrace()>();

        return 1003;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label45;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label45;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label45;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label45;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label45;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label45;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label45;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label45;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label45;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label45;
        catch java.io.UnsupportedEncodingException from label22 to label23 with label45;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label45;
        catch java.io.UnsupportedEncodingException from label26 to label27 with label45;
        catch java.io.UnsupportedEncodingException from label28 to label29 with label45;
        catch java.io.UnsupportedEncodingException from label30 to label31 with label45;
        catch java.io.UnsupportedEncodingException from label32 to label33 with label45;
        catch java.io.UnsupportedEncodingException from label34 to label35 with label45;
        catch java.io.UnsupportedEncodingException from label38 to label39 with label45;
        catch java.io.UnsupportedEncodingException from label40 to label41 with label45;
        catch java.io.UnsupportedEncodingException from label42 to label43 with label45;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label28 to label29 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label30 to label31 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label32 to label33 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label34 to label35 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label38 to label39 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label40 to label41 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label42 to label43 with label46;
        catch java.io.IOException from label02 to label03 with label47;
        catch java.io.IOException from label04 to label05 with label47;
        catch java.io.IOException from label06 to label07 with label47;
        catch java.io.IOException from label08 to label09 with label47;
        catch java.io.IOException from label10 to label11 with label47;
        catch java.io.IOException from label12 to label13 with label47;
        catch java.io.IOException from label14 to label15 with label47;
        catch java.io.IOException from label16 to label17 with label47;
        catch java.io.IOException from label18 to label19 with label47;
        catch java.io.IOException from label20 to label21 with label47;
        catch java.io.IOException from label22 to label23 with label47;
        catch java.io.IOException from label24 to label25 with label47;
        catch java.io.IOException from label26 to label27 with label47;
        catch java.io.IOException from label28 to label29 with label47;
        catch java.io.IOException from label30 to label31 with label47;
        catch java.io.IOException from label32 to label33 with label47;
        catch java.io.IOException from label34 to label35 with label47;
        catch java.io.IOException from label38 to label39 with label47;
        catch java.io.IOException from label40 to label41 with label47;
        catch java.io.IOException from label42 to label43 with label47;
    }

    public int responseInsertTasteReviewReply(java.lang.String, java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient r3, $r18;
        org.apache.http.message.BasicNameValuePair $r8, $r21;
        java.lang.Throwable $r15, $r17;
        org.apache.http.client.methods.HttpPost r4, $r19;
        org.apache.http.client.entity.UrlEncodedFormEntity $r9, $r22;
        java.util.ArrayList r5, $r20;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        int $i0;
        java.lang.String $r1, $r2, $r6;
        org.xmlpull.v1.XmlPullParser $r14;
        boolean $z0;
        org.apache.http.HttpEntity $r11;
        java.io.IOException $r24;
        org.xmlpull.v1.XmlPullParserException $r16;
        org.xmlpull.v1.XmlPullParserFactory $r13;
        org.apache.http.params.HttpParams $r7;
        org.apache.http.HttpResponse $r10;
        java.io.UnsupportedEncodingException $r23;
        java.io.InputStream $r12;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r18 = new org.apache.http.impl.client.DefaultHttpClient;

        r3 = $r18;

     label01:
        specialinvoke $r18.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        $r7 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r7, 10000);

        $r7 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r7, 10000);

     label02:
        $r19 = new org.apache.http.client.methods.HttpPost;

        r4 = $r19;

     label03:
        specialinvoke $r19.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/reviewrecomment/insert.xml");

     label04:
        $r20 = new java.util.ArrayList;

        r5 = $r20;

     label05:
        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

     label06:
        $r21 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r21;

        $r6 = <com.sktelecom.bestfoodhouse.model.Global: java.lang.String accessToken>;

     label07:
        specialinvoke $r21.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("accessToken", $r6);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label08:
        $r21 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r21;

     label09:
        specialinvoke $r21.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("recomment", $r2);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label10:
        $r21 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r21;

     label11:
        specialinvoke $r21.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("seq", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label12:
        $r22 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        $r9 = $r22;

     label13:
        specialinvoke $r22.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r5, "UTF-8");

        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r9);

        $r10 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r4);

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r12 = interfaceinvoke $r11.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r13 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r14 = virtualinvoke $r13.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r12, null);

        $i0 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label14:
        if $i0 != 1 goto label15;

        $i0 = -1;

        return $i0;

     label15:
        lookupswitch($i0)
        {
            case 2: goto label18;
            default: goto label16;
        };

     label16:
        $i0 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: int next()>();

     label17:
        goto label14;

     label18:
        $r1 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("response");

     label19:
        if $z0 == 0 goto label16;

     label20:
        $r1 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "status");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ok");

     label21:
        if $z0 == 0 goto label22;

        return 0;

     label22:
        $i0 = -1;

        return $i0;

     label23:
        $r15 := @caughtexception;

        $r23 = (java.io.UnsupportedEncodingException) $r15;

        virtualinvoke $r23.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label24:
        $r16 := @caughtexception;

        virtualinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label25:
        $r17 := @caughtexception;

        $r24 = (java.io.IOException) $r17;

        virtualinvoke $r24.<java.io.IOException: void printStackTrace()>();

        return 1003;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label23;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label23;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label23;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label23;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label23;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label23;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label23;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label23;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label23;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label23;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label24;
        catch java.io.IOException from label01 to label02 with label25;
        catch java.io.IOException from label03 to label04 with label25;
        catch java.io.IOException from label05 to label06 with label25;
        catch java.io.IOException from label07 to label08 with label25;
        catch java.io.IOException from label09 to label10 with label25;
        catch java.io.IOException from label11 to label12 with label25;
        catch java.io.IOException from label13 to label14 with label25;
        catch java.io.IOException from label16 to label17 with label25;
        catch java.io.IOException from label18 to label19 with label25;
        catch java.io.IOException from label20 to label21 with label25;
    }

    public int responseTasteReview(java.lang.String, com.sktelecom.bestfoodhouse.model.TasteReview)
    {
        java.net.HttpURLConnection r6;
        java.lang.Throwable $r10, $r12;
        java.lang.Float $r13;
        java.net.URL r3, $r15;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        java.net.URLConnection $r5;
        int $i0;
        java.lang.String $r1;
        org.xmlpull.v1.XmlPullParser $r9;
        boolean $z0;
        com.sktelecom.bestfoodhouse.model.TasteReview $r2;
        java.io.IOException $r17;
        org.xmlpull.v1.XmlPullParserException $r11;
        org.xmlpull.v1.XmlPullParserFactory $r8;
        java.lang.StringBuilder $r4, $r14;
        java.io.UnsupportedEncodingException $r16;
        java.io.InputStream $r7;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.sktelecom.bestfoodhouse.model.TasteReview;

        $r14 = new java.lang.StringBuilder;

        $r4 = $r14;

     label001:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/tastesreviews/detail.xml?reviewCode=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label002:
        $r15 = new java.net.URL;

        r3 = $r15;

     label003:
        specialinvoke $r15.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke r3.<java.net.URL: java.net.URLConnection openConnection()>();

     label004:
        r6 = (java.net.HttpURLConnection) $r5;

     label005:
        virtualinvoke r6.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke r6.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke r6.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke r6.<java.net.HttpURLConnection: void connect()>();

        $r7 = virtualinvoke r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r8 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r9 = virtualinvoke $r8.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r7, null);

        $i0 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label006:
        if $i0 != 1 goto label007;

        return -1;

     label007:
        lookupswitch($i0)
        {
            case 2: goto label010;
            default: goto label008;
        };

     label008:
        $i0 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label009:
        goto label006;

     label010:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("reviewCode");

     label011:
        if $z0 == 0 goto label015;

     label012:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label013:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewCode> = $r1;

        goto label008;

     label014:
        $r10 := @caughtexception;

        $r16 = (java.io.UnsupportedEncodingException) $r10;

        virtualinvoke $r16.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label015:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("foodCode");

     label016:
        if $z0 == 0 goto label020;

     label017:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label018:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String foodCode> = $r1;

        goto label008;

     label019:
        $r11 := @caughtexception;

        virtualinvoke $r11.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label020:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("level");

     label021:
        if $z0 == 0 goto label028;

     label022:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label023:
        if $r1 != null goto label026;

        $r1 = "";

     label024:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String level> = $r1;

        goto label008;

     label025:
        $r12 := @caughtexception;

        $r17 = (java.io.IOException) $r12;

        virtualinvoke $r17.<java.io.IOException: void printStackTrace()>();

        return 1003;

     label026:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label027:
        goto label024;

     label028:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("photoUrl");

     label029:
        if $z0 == 0 goto label035;

     label030:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label031:
        if $r1 != null goto label033;

        $r1 = "";

     label032:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String photoUrl> = $r1;

        goto label008;

     label033:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label034:
        goto label032;

     label035:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("nickName");

     label036:
        if $z0 == 0 goto label042;

     label037:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label038:
        if $r1 != null goto label040;

        $r1 = "";

     label039:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String nickName> = $r1;

        goto label008;

     label040:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label041:
        goto label039;

     label042:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("reviewComment");

     label043:
        if $z0 == 0 goto label049;

     label044:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label045:
        if $r1 != null goto label047;

        $r1 = "";

     label046:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewComment> = $r1;

        goto label008;

     label047:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label048:
        goto label046;

     label049:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("point");

     label050:
        if $z0 == 0 goto label056;

     label051:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label052:
        if $r1 != null goto label054;

        $r1 = "0";

     label053:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String point> = $r1;

        goto label008;

     label054:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label055:
        goto label053;

     label056:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("monthPoint");

     label057:
        if $z0 == 0 goto label063;

     label058:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label059:
        if $r1 != null goto label061;

        $r1 = "0";

     label060:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String monthPoint> = $r1;

        goto label008;

     label061:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label062:
        goto label060;

     label063:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("friendsCnt");

     label064:
        if $z0 == 0 goto label070;

     label065:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label066:
        if $r1 != null goto label068;

        $r1 = "0";

     label067:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String friendsCnt> = $r1;

        goto label008;

     label068:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label069:
        goto label067;

     label070:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("totalScore");

     label071:
        if $z0 == 0 goto label074;

     label072:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r1);

     label073:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float totalScore> = $r13;

        goto label008;

     label074:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("memberSeq");

     label075:
        if $z0 == 0 goto label081;

     label076:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label077:
        if $r1 != null goto label079;

        $r1 = "";

     label078:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String memberSeq> = $r1;

        goto label008;

     label079:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label080:
        goto label078;

     label081:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("reviewImg1");

     label082:
        if $z0 == 0 goto label088;

     label083:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label084:
        if $r1 != null goto label086;

        $r1 = "";

     label085:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewImg1> = $r1;

        goto label008;

     label086:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label087:
        goto label085;

     label088:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("reviewImg2");

     label089:
        if $z0 == 0 goto label095;

     label090:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label091:
        if $r1 != null goto label093;

        $r1 = "";

     label092:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewImg2> = $r1;

        goto label008;

     label093:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label094:
        goto label092;

     label095:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("reviewImg3");

     label096:
        if $z0 == 0 goto label102;

     label097:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label098:
        if $r1 != null goto label100;

        $r1 = "";

     label099:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewImg3> = $r1;

        goto label008;

     label100:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label101:
        goto label099;

     label102:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("reviewImg4");

     label103:
        if $z0 == 0 goto label109;

     label104:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label105:
        if $r1 != null goto label107;

        $r1 = "";

     label106:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewImg4> = $r1;

        goto label008;

     label107:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label108:
        goto label106;

     label109:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("reviewImg5");

     label110:
        if $z0 == 0 goto label116;

     label111:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label112:
        if $r1 != null goto label114;

        $r1 = "";

     label113:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewImg5> = $r1;

        goto label008;

     label114:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label115:
        goto label113;

     label116:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("tastesScore");

     label117:
        if $z0 == 0 goto label120;

     label118:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r1);

     label119:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float tastesScore> = $r13;

        goto label008;

     label120:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("feelScore");

     label121:
        if $z0 == 0 goto label124;

     label122:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r1);

     label123:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float feelScore> = $r13;

        goto label008;

     label124:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("svcScore");

     label125:
        if $z0 == 0 goto label128;

     label126:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r1);

     label127:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float svcScore> = $r13;

        goto label008;

     label128:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("update");

     label129:
        if $z0 == 0 goto label135;

     label130:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label131:
        if $r1 != null goto label133;

        $r1 = "";

     label132:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String update> = $r1;

        goto label008;

     label133:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label134:
        goto label132;

     label135:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("viewCnt");

     label136:
        if $z0 == 0 goto label142;

     label137:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label138:
        if $r1 != null goto label140;

        $r1 = "0";

     label139:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String viewCnt> = $r1;

        goto label008;

     label140:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label141:
        goto label139;

     label142:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("empathyScore");

     label143:
        if $z0 == 0 goto label146;

     label144:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r1);

     label145:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float empathyScore> = $r13;

        goto label008;

     label146:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("photoCnt");

     label147:
        if $z0 == 0 goto label008;

     label148:
        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label149:
        if $r1 != null goto label151;

        $r1 = "0";

     label150:
        $r2.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String photoCnt> = $r1;

        return 0;

     label151:
        $r1 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label152:
        goto label150;

        catch java.io.UnsupportedEncodingException from label001 to label002 with label014;
        catch java.io.UnsupportedEncodingException from label003 to label004 with label014;
        catch java.io.UnsupportedEncodingException from label005 to label006 with label014;
        catch java.io.UnsupportedEncodingException from label008 to label009 with label014;
        catch java.io.UnsupportedEncodingException from label010 to label011 with label014;
        catch java.io.UnsupportedEncodingException from label012 to label013 with label014;
        catch org.xmlpull.v1.XmlPullParserException from label001 to label002 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label003 to label004 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label005 to label006 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label008 to label009 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label010 to label011 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label012 to label013 with label019;
        catch java.io.IOException from label001 to label002 with label025;
        catch java.io.IOException from label003 to label004 with label025;
        catch java.io.IOException from label005 to label006 with label025;
        catch java.io.IOException from label008 to label009 with label025;
        catch java.io.IOException from label010 to label011 with label025;
        catch java.io.IOException from label012 to label013 with label025;
        catch java.io.UnsupportedEncodingException from label015 to label016 with label014;
        catch java.io.UnsupportedEncodingException from label017 to label018 with label014;
        catch org.xmlpull.v1.XmlPullParserException from label015 to label016 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label017 to label018 with label019;
        catch java.io.IOException from label015 to label016 with label025;
        catch java.io.IOException from label017 to label018 with label025;
        catch java.io.UnsupportedEncodingException from label020 to label021 with label014;
        catch java.io.UnsupportedEncodingException from label022 to label023 with label014;
        catch org.xmlpull.v1.XmlPullParserException from label020 to label021 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label022 to label023 with label019;
        catch java.io.IOException from label020 to label021 with label025;
        catch java.io.IOException from label022 to label023 with label025;
        catch java.io.UnsupportedEncodingException from label026 to label027 with label014;
        catch java.io.UnsupportedEncodingException from label028 to label029 with label014;
        catch java.io.UnsupportedEncodingException from label030 to label031 with label014;
        catch java.io.UnsupportedEncodingException from label033 to label034 with label014;
        catch java.io.UnsupportedEncodingException from label035 to label036 with label014;
        catch java.io.UnsupportedEncodingException from label037 to label038 with label014;
        catch java.io.UnsupportedEncodingException from label040 to label041 with label014;
        catch java.io.UnsupportedEncodingException from label042 to label043 with label014;
        catch java.io.UnsupportedEncodingException from label044 to label045 with label014;
        catch java.io.UnsupportedEncodingException from label047 to label048 with label014;
        catch java.io.UnsupportedEncodingException from label049 to label050 with label014;
        catch java.io.UnsupportedEncodingException from label051 to label052 with label014;
        catch java.io.UnsupportedEncodingException from label054 to label055 with label014;
        catch java.io.UnsupportedEncodingException from label056 to label057 with label014;
        catch java.io.UnsupportedEncodingException from label058 to label059 with label014;
        catch java.io.UnsupportedEncodingException from label061 to label062 with label014;
        catch java.io.UnsupportedEncodingException from label063 to label064 with label014;
        catch java.io.UnsupportedEncodingException from label065 to label066 with label014;
        catch java.io.UnsupportedEncodingException from label068 to label069 with label014;
        catch java.io.UnsupportedEncodingException from label070 to label071 with label014;
        catch java.io.UnsupportedEncodingException from label072 to label073 with label014;
        catch java.io.UnsupportedEncodingException from label074 to label075 with label014;
        catch java.io.UnsupportedEncodingException from label076 to label077 with label014;
        catch java.io.UnsupportedEncodingException from label079 to label080 with label014;
        catch java.io.UnsupportedEncodingException from label081 to label082 with label014;
        catch java.io.UnsupportedEncodingException from label083 to label084 with label014;
        catch java.io.UnsupportedEncodingException from label086 to label087 with label014;
        catch java.io.UnsupportedEncodingException from label088 to label089 with label014;
        catch java.io.UnsupportedEncodingException from label090 to label091 with label014;
        catch java.io.UnsupportedEncodingException from label093 to label094 with label014;
        catch java.io.UnsupportedEncodingException from label095 to label096 with label014;
        catch java.io.UnsupportedEncodingException from label097 to label098 with label014;
        catch java.io.UnsupportedEncodingException from label100 to label101 with label014;
        catch java.io.UnsupportedEncodingException from label102 to label103 with label014;
        catch java.io.UnsupportedEncodingException from label104 to label105 with label014;
        catch java.io.UnsupportedEncodingException from label107 to label108 with label014;
        catch java.io.UnsupportedEncodingException from label109 to label110 with label014;
        catch java.io.UnsupportedEncodingException from label111 to label112 with label014;
        catch java.io.UnsupportedEncodingException from label114 to label115 with label014;
        catch java.io.UnsupportedEncodingException from label116 to label117 with label014;
        catch java.io.UnsupportedEncodingException from label118 to label119 with label014;
        catch java.io.UnsupportedEncodingException from label120 to label121 with label014;
        catch java.io.UnsupportedEncodingException from label122 to label123 with label014;
        catch java.io.UnsupportedEncodingException from label124 to label125 with label014;
        catch java.io.UnsupportedEncodingException from label126 to label127 with label014;
        catch java.io.UnsupportedEncodingException from label128 to label129 with label014;
        catch java.io.UnsupportedEncodingException from label130 to label131 with label014;
        catch java.io.UnsupportedEncodingException from label133 to label134 with label014;
        catch java.io.UnsupportedEncodingException from label135 to label136 with label014;
        catch java.io.UnsupportedEncodingException from label137 to label138 with label014;
        catch java.io.UnsupportedEncodingException from label140 to label141 with label014;
        catch java.io.UnsupportedEncodingException from label142 to label143 with label014;
        catch java.io.UnsupportedEncodingException from label144 to label145 with label014;
        catch java.io.UnsupportedEncodingException from label146 to label147 with label014;
        catch java.io.UnsupportedEncodingException from label148 to label149 with label014;
        catch java.io.UnsupportedEncodingException from label151 to label152 with label014;
        catch org.xmlpull.v1.XmlPullParserException from label026 to label027 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label028 to label029 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label030 to label031 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label033 to label034 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label035 to label036 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label037 to label038 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label040 to label041 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label042 to label043 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label044 to label045 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label047 to label048 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label049 to label050 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label051 to label052 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label054 to label055 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label056 to label057 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label058 to label059 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label061 to label062 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label063 to label064 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label065 to label066 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label068 to label069 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label070 to label071 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label072 to label073 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label074 to label075 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label076 to label077 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label079 to label080 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label081 to label082 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label083 to label084 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label086 to label087 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label088 to label089 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label090 to label091 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label093 to label094 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label095 to label096 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label097 to label098 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label100 to label101 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label102 to label103 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label104 to label105 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label107 to label108 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label109 to label110 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label111 to label112 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label114 to label115 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label116 to label117 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label118 to label119 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label120 to label121 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label122 to label123 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label124 to label125 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label126 to label127 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label128 to label129 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label130 to label131 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label133 to label134 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label135 to label136 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label137 to label138 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label140 to label141 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label142 to label143 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label144 to label145 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label146 to label147 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label148 to label149 with label019;
        catch org.xmlpull.v1.XmlPullParserException from label151 to label152 with label019;
        catch java.io.IOException from label026 to label027 with label025;
        catch java.io.IOException from label028 to label029 with label025;
        catch java.io.IOException from label030 to label031 with label025;
        catch java.io.IOException from label033 to label034 with label025;
        catch java.io.IOException from label035 to label036 with label025;
        catch java.io.IOException from label037 to label038 with label025;
        catch java.io.IOException from label040 to label041 with label025;
        catch java.io.IOException from label042 to label043 with label025;
        catch java.io.IOException from label044 to label045 with label025;
        catch java.io.IOException from label047 to label048 with label025;
        catch java.io.IOException from label049 to label050 with label025;
        catch java.io.IOException from label051 to label052 with label025;
        catch java.io.IOException from label054 to label055 with label025;
        catch java.io.IOException from label056 to label057 with label025;
        catch java.io.IOException from label058 to label059 with label025;
        catch java.io.IOException from label061 to label062 with label025;
        catch java.io.IOException from label063 to label064 with label025;
        catch java.io.IOException from label065 to label066 with label025;
        catch java.io.IOException from label068 to label069 with label025;
        catch java.io.IOException from label070 to label071 with label025;
        catch java.io.IOException from label072 to label073 with label025;
        catch java.io.IOException from label074 to label075 with label025;
        catch java.io.IOException from label076 to label077 with label025;
        catch java.io.IOException from label079 to label080 with label025;
        catch java.io.IOException from label081 to label082 with label025;
        catch java.io.IOException from label083 to label084 with label025;
        catch java.io.IOException from label086 to label087 with label025;
        catch java.io.IOException from label088 to label089 with label025;
        catch java.io.IOException from label090 to label091 with label025;
        catch java.io.IOException from label093 to label094 with label025;
        catch java.io.IOException from label095 to label096 with label025;
        catch java.io.IOException from label097 to label098 with label025;
        catch java.io.IOException from label100 to label101 with label025;
        catch java.io.IOException from label102 to label103 with label025;
        catch java.io.IOException from label104 to label105 with label025;
        catch java.io.IOException from label107 to label108 with label025;
        catch java.io.IOException from label109 to label110 with label025;
        catch java.io.IOException from label111 to label112 with label025;
        catch java.io.IOException from label114 to label115 with label025;
        catch java.io.IOException from label116 to label117 with label025;
        catch java.io.IOException from label118 to label119 with label025;
        catch java.io.IOException from label120 to label121 with label025;
        catch java.io.IOException from label122 to label123 with label025;
        catch java.io.IOException from label124 to label125 with label025;
        catch java.io.IOException from label126 to label127 with label025;
        catch java.io.IOException from label128 to label129 with label025;
        catch java.io.IOException from label130 to label131 with label025;
        catch java.io.IOException from label133 to label134 with label025;
        catch java.io.IOException from label135 to label136 with label025;
        catch java.io.IOException from label137 to label138 with label025;
        catch java.io.IOException from label140 to label141 with label025;
        catch java.io.IOException from label142 to label143 with label025;
        catch java.io.IOException from label144 to label145 with label025;
        catch java.io.IOException from label146 to label147 with label025;
        catch java.io.IOException from label148 to label149 with label025;
        catch java.io.IOException from label151 to label152 with label025;
    }

    public int responseTasteReviewList(java.lang.Integer[], java.lang.String, java.lang.String, java.util.ArrayList)
    {
        java.net.HttpURLConnection r9;
        java.lang.Throwable $r14, $r16;
        java.lang.Float $r17;
        java.net.URL r5, $r20;
        java.lang.Integer $r13;
        java.util.ArrayList r4;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        java.net.URLConnection $r8;
        int $i0;
        java.lang.String $r2, $r3;
        org.xmlpull.v1.XmlPullParser $r12;
        boolean $z0;
        com.sktelecom.bestfoodhouse.model.TasteReview r7, $r19;
        java.io.IOException $r22;
        org.xmlpull.v1.XmlPullParserException $r15;
        org.xmlpull.v1.XmlPullParserFactory $r11;
        java.lang.StringBuilder $r6, $r18;
        java.io.UnsupportedEncodingException $r21;
        java.lang.Integer[] $r1;
        java.io.InputStream $r10;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.Integer[];

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.ArrayList;

        if $r2 != null goto label011;

        $r18 = new java.lang.StringBuilder;

        $r6 = $r18;

     label001:
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/tastesreviews/member_list.xml?accessToken=");

     label002:
        $r2 = <com.sktelecom.bestfoodhouse.model.Global: java.lang.String accessToken>;

     label003:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&currentPage=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label004:
        $r19 = new com.sktelecom.bestfoodhouse.model.TasteReview;

        r7 = $r19;

     label005:
        specialinvoke $r19.<com.sktelecom.bestfoodhouse.model.TasteReview: void <init>()>();

     label006:
        $r20 = new java.net.URL;

        r5 = $r20;

     label007:
        specialinvoke $r20.<java.net.URL: void <init>(java.lang.String)>($r2);

        $r8 = virtualinvoke r5.<java.net.URL: java.net.URLConnection openConnection()>();

     label008:
        r9 = (java.net.HttpURLConnection) $r8;

     label009:
        virtualinvoke r9.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke r9.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke r9.<java.net.HttpURLConnection: void connect()>();

        $r10 = virtualinvoke r9.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r11 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r12 = virtualinvoke $r11.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r10, null);

        $i0 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label010:
        if $i0 != 1 goto label014;

        return 0;

     label011:
        $r18 = new java.lang.StringBuilder;

        $r6 = $r18;

     label012:
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/tastesreviews/member_list.xml?seq=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&currentPage=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label013:
        goto label004;

     label014:
        lookupswitch($i0)
        {
            case 2: goto label017;
            default: goto label015;
        };

     label015:
        $i0 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

     label016:
        goto label010;

     label017:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("totalItems");

     label018:
        if $z0 == 0 goto label022;

     label019:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

     label020:
        $r1[0] = $r13;

        goto label015;

     label021:
        $r14 := @caughtexception;

        $r21 = (java.io.UnsupportedEncodingException) $r14;

        virtualinvoke $r21.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label022:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("memberSeq");

     label023:
        if $z0 == 0 goto label027;

     label024:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label025:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String memberSeq> = $r2;

        goto label015;

     label026:
        $r15 := @caughtexception;

        virtualinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label027:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("reviewCode");

     label028:
        if $z0 == 0 goto label032;

     label029:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label030:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewCode> = $r2;

        goto label015;

     label031:
        $r16 := @caughtexception;

        $r22 = (java.io.IOException) $r16;

        virtualinvoke $r22.<java.io.IOException: void printStackTrace()>();

        return 1003;

     label032:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("foodCode");

     label033:
        if $z0 == 0 goto label036;

     label034:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label035:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String foodCode> = $r2;

        goto label015;

     label036:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("recommend");

     label037:
        if $z0 == 0 goto label043;

     label038:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label039:
        if $r2 != null goto label041;

        $r2 = "0";

     label040:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String recommend> = $r2;

        goto label015;

     label041:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label042:
        goto label040;

     label043:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("tvCheck");

     label044:
        if $z0 == 0 goto label050;

     label045:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label046:
        if $r2 != null goto label048;

        $r2 = "0";

     label047:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String tvCheck> = $r2;

        goto label015;

     label048:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label049:
        goto label047;

     label050:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("level");

     label051:
        if $z0 == 0 goto label057;

     label052:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label053:
        if $r2 != null goto label055;

        $r2 = "";

     label054:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String level> = $r2;

        goto label015;

     label055:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label056:
        goto label054;

     label057:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("foodName");

     label058:
        if $z0 == 0 goto label064;

     label059:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label060:
        if $r2 != null goto label062;

        $r2 = "";

     label061:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String foodName> = $r2;

        goto label015;

     label062:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label063:
        goto label061;

     label064:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("nickName");

     label065:
        if $z0 == 0 goto label071;

     label066:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label067:
        if $r2 != null goto label069;

        $r2 = "";

     label068:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String nickName> = $r2;

        goto label015;

     label069:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label070:
        goto label068;

     label071:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("reviewComment");

     label072:
        if $z0 == 0 goto label078;

     label073:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label074:
        if $r2 != null goto label076;

        $r2 = "";

     label075:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewComment> = $r2;

        goto label015;

     label076:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label077:
        goto label075;

     label078:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("totalScore");

     label079:
        if $z0 == 0 goto label082;

     label080:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

     label081:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float totalScore> = $r17;

        goto label015;

     label082:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("tastesScore");

     label083:
        if $z0 == 0 goto label086;

     label084:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

     label085:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float tastesScore> = $r17;

        goto label015;

     label086:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("feelScore");

     label087:
        if $z0 == 0 goto label090;

     label088:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

     label089:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float feelScore> = $r17;

        goto label015;

     label090:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("svcScore");

     label091:
        if $z0 == 0 goto label094;

     label092:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

     label093:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float svcScore> = $r17;

        goto label015;

     label094:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("photoCnt");

     label095:
        if $z0 == 0 goto label101;

     label096:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label097:
        if $r2 != null goto label099;

        $r2 = "0";

     label098:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String photoCnt> = $r2;

        goto label015;

     label099:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label100:
        goto label098;

     label101:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("update");

     label102:
        if $z0 == 0 goto label108;

     label103:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label104:
        if $r2 != null goto label106;

        $r2 = "";

     label105:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String update> = $r2;

        goto label015;

     label106:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label107:
        goto label105;

     label108:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("photoUrl");

     label109:
        if $z0 == 0 goto label115;

     label110:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label111:
        if $r2 != null goto label113;

        $r2 = "";

     label112:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String photoUrl> = $r2;

        goto label015;

     label113:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label114:
        goto label112;

     label115:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("foodImg1");

     label116:
        if $z0 == 0 goto label122;

     label117:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label118:
        if $r2 != null goto label120;

        $r2 = "";

     label119:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String imageUrlFoodHouse> = $r2;

        goto label015;

     label120:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label121:
        goto label119;

     label122:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("viewCnt");

     label123:
        if $z0 == 0 goto label129;

     label124:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label125:
        if $r2 != null goto label127;

        $r2 = "0";

     label126:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String viewCnt> = $r2;

        goto label015;

     label127:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label128:
        goto label126;

     label129:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("recommentCnt");

     label130:
        if $z0 == 0 goto label136;

     label131:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label132:
        if $r2 != null goto label134;

        $r2 = "0";

     label133:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String recommentCnt> = $r2;

        goto label015;

     label134:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label135:
        goto label133;

     label136:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("empathyScore");

     label137:
        if $z0 == 0 goto label015;

     label138:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

     label139:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float empathyScore> = $r17;

     label140:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label141:
        $r19 = new com.sktelecom.bestfoodhouse.model.TasteReview;

        r7 = $r19;

     label142:
        specialinvoke $r19.<com.sktelecom.bestfoodhouse.model.TasteReview: void <init>()>();

     label143:
        goto label015;

        catch java.io.UnsupportedEncodingException from label001 to label002 with label021;
        catch java.io.UnsupportedEncodingException from label003 to label004 with label021;
        catch java.io.UnsupportedEncodingException from label005 to label006 with label021;
        catch java.io.UnsupportedEncodingException from label007 to label008 with label021;
        catch java.io.UnsupportedEncodingException from label009 to label010 with label021;
        catch java.io.UnsupportedEncodingException from label012 to label013 with label021;
        catch java.io.UnsupportedEncodingException from label015 to label016 with label021;
        catch java.io.UnsupportedEncodingException from label017 to label018 with label021;
        catch java.io.UnsupportedEncodingException from label019 to label020 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label001 to label002 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label003 to label004 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label005 to label006 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label007 to label008 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label009 to label010 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label012 to label013 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label015 to label016 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label017 to label018 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label019 to label020 with label026;
        catch java.io.IOException from label001 to label002 with label031;
        catch java.io.IOException from label003 to label004 with label031;
        catch java.io.IOException from label005 to label006 with label031;
        catch java.io.IOException from label007 to label008 with label031;
        catch java.io.IOException from label009 to label010 with label031;
        catch java.io.IOException from label012 to label013 with label031;
        catch java.io.IOException from label015 to label016 with label031;
        catch java.io.IOException from label017 to label018 with label031;
        catch java.io.IOException from label019 to label020 with label031;
        catch java.io.UnsupportedEncodingException from label022 to label023 with label021;
        catch java.io.UnsupportedEncodingException from label024 to label025 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label022 to label023 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label024 to label025 with label026;
        catch java.io.IOException from label022 to label023 with label031;
        catch java.io.IOException from label024 to label025 with label031;
        catch java.io.UnsupportedEncodingException from label027 to label028 with label021;
        catch java.io.UnsupportedEncodingException from label029 to label030 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label027 to label028 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label029 to label030 with label026;
        catch java.io.IOException from label027 to label028 with label031;
        catch java.io.IOException from label029 to label030 with label031;
        catch java.io.UnsupportedEncodingException from label032 to label033 with label021;
        catch java.io.UnsupportedEncodingException from label034 to label035 with label021;
        catch java.io.UnsupportedEncodingException from label036 to label037 with label021;
        catch java.io.UnsupportedEncodingException from label038 to label039 with label021;
        catch java.io.UnsupportedEncodingException from label041 to label042 with label021;
        catch java.io.UnsupportedEncodingException from label043 to label044 with label021;
        catch java.io.UnsupportedEncodingException from label045 to label046 with label021;
        catch java.io.UnsupportedEncodingException from label048 to label049 with label021;
        catch java.io.UnsupportedEncodingException from label050 to label051 with label021;
        catch java.io.UnsupportedEncodingException from label052 to label053 with label021;
        catch java.io.UnsupportedEncodingException from label055 to label056 with label021;
        catch java.io.UnsupportedEncodingException from label057 to label058 with label021;
        catch java.io.UnsupportedEncodingException from label059 to label060 with label021;
        catch java.io.UnsupportedEncodingException from label062 to label063 with label021;
        catch java.io.UnsupportedEncodingException from label064 to label065 with label021;
        catch java.io.UnsupportedEncodingException from label066 to label067 with label021;
        catch java.io.UnsupportedEncodingException from label069 to label070 with label021;
        catch java.io.UnsupportedEncodingException from label071 to label072 with label021;
        catch java.io.UnsupportedEncodingException from label073 to label074 with label021;
        catch java.io.UnsupportedEncodingException from label076 to label077 with label021;
        catch java.io.UnsupportedEncodingException from label078 to label079 with label021;
        catch java.io.UnsupportedEncodingException from label080 to label081 with label021;
        catch java.io.UnsupportedEncodingException from label082 to label083 with label021;
        catch java.io.UnsupportedEncodingException from label084 to label085 with label021;
        catch java.io.UnsupportedEncodingException from label086 to label087 with label021;
        catch java.io.UnsupportedEncodingException from label088 to label089 with label021;
        catch java.io.UnsupportedEncodingException from label090 to label091 with label021;
        catch java.io.UnsupportedEncodingException from label092 to label093 with label021;
        catch java.io.UnsupportedEncodingException from label094 to label095 with label021;
        catch java.io.UnsupportedEncodingException from label096 to label097 with label021;
        catch java.io.UnsupportedEncodingException from label099 to label100 with label021;
        catch java.io.UnsupportedEncodingException from label101 to label102 with label021;
        catch java.io.UnsupportedEncodingException from label103 to label104 with label021;
        catch java.io.UnsupportedEncodingException from label106 to label107 with label021;
        catch java.io.UnsupportedEncodingException from label108 to label109 with label021;
        catch java.io.UnsupportedEncodingException from label110 to label111 with label021;
        catch java.io.UnsupportedEncodingException from label113 to label114 with label021;
        catch java.io.UnsupportedEncodingException from label115 to label116 with label021;
        catch java.io.UnsupportedEncodingException from label117 to label118 with label021;
        catch java.io.UnsupportedEncodingException from label120 to label121 with label021;
        catch java.io.UnsupportedEncodingException from label122 to label123 with label021;
        catch java.io.UnsupportedEncodingException from label124 to label125 with label021;
        catch java.io.UnsupportedEncodingException from label127 to label128 with label021;
        catch java.io.UnsupportedEncodingException from label129 to label130 with label021;
        catch java.io.UnsupportedEncodingException from label131 to label132 with label021;
        catch java.io.UnsupportedEncodingException from label134 to label135 with label021;
        catch java.io.UnsupportedEncodingException from label136 to label137 with label021;
        catch java.io.UnsupportedEncodingException from label138 to label139 with label021;
        catch java.io.UnsupportedEncodingException from label140 to label141 with label021;
        catch java.io.UnsupportedEncodingException from label142 to label143 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label032 to label033 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label034 to label035 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label036 to label037 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label038 to label039 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label041 to label042 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label043 to label044 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label045 to label046 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label048 to label049 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label050 to label051 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label052 to label053 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label055 to label056 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label057 to label058 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label059 to label060 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label062 to label063 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label064 to label065 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label066 to label067 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label069 to label070 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label071 to label072 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label073 to label074 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label076 to label077 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label078 to label079 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label080 to label081 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label082 to label083 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label084 to label085 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label086 to label087 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label088 to label089 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label090 to label091 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label092 to label093 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label094 to label095 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label096 to label097 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label099 to label100 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label101 to label102 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label103 to label104 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label106 to label107 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label108 to label109 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label110 to label111 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label113 to label114 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label115 to label116 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label117 to label118 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label120 to label121 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label122 to label123 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label124 to label125 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label127 to label128 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label129 to label130 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label131 to label132 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label134 to label135 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label136 to label137 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label138 to label139 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label140 to label141 with label026;
        catch org.xmlpull.v1.XmlPullParserException from label142 to label143 with label026;
        catch java.io.IOException from label032 to label033 with label031;
        catch java.io.IOException from label034 to label035 with label031;
        catch java.io.IOException from label036 to label037 with label031;
        catch java.io.IOException from label038 to label039 with label031;
        catch java.io.IOException from label041 to label042 with label031;
        catch java.io.IOException from label043 to label044 with label031;
        catch java.io.IOException from label045 to label046 with label031;
        catch java.io.IOException from label048 to label049 with label031;
        catch java.io.IOException from label050 to label051 with label031;
        catch java.io.IOException from label052 to label053 with label031;
        catch java.io.IOException from label055 to label056 with label031;
        catch java.io.IOException from label057 to label058 with label031;
        catch java.io.IOException from label059 to label060 with label031;
        catch java.io.IOException from label062 to label063 with label031;
        catch java.io.IOException from label064 to label065 with label031;
        catch java.io.IOException from label066 to label067 with label031;
        catch java.io.IOException from label069 to label070 with label031;
        catch java.io.IOException from label071 to label072 with label031;
        catch java.io.IOException from label073 to label074 with label031;
        catch java.io.IOException from label076 to label077 with label031;
        catch java.io.IOException from label078 to label079 with label031;
        catch java.io.IOException from label080 to label081 with label031;
        catch java.io.IOException from label082 to label083 with label031;
        catch java.io.IOException from label084 to label085 with label031;
        catch java.io.IOException from label086 to label087 with label031;
        catch java.io.IOException from label088 to label089 with label031;
        catch java.io.IOException from label090 to label091 with label031;
        catch java.io.IOException from label092 to label093 with label031;
        catch java.io.IOException from label094 to label095 with label031;
        catch java.io.IOException from label096 to label097 with label031;
        catch java.io.IOException from label099 to label100 with label031;
        catch java.io.IOException from label101 to label102 with label031;
        catch java.io.IOException from label103 to label104 with label031;
        catch java.io.IOException from label106 to label107 with label031;
        catch java.io.IOException from label108 to label109 with label031;
        catch java.io.IOException from label110 to label111 with label031;
        catch java.io.IOException from label113 to label114 with label031;
        catch java.io.IOException from label115 to label116 with label031;
        catch java.io.IOException from label117 to label118 with label031;
        catch java.io.IOException from label120 to label121 with label031;
        catch java.io.IOException from label122 to label123 with label031;
        catch java.io.IOException from label124 to label125 with label031;
        catch java.io.IOException from label127 to label128 with label031;
        catch java.io.IOException from label129 to label130 with label031;
        catch java.io.IOException from label131 to label132 with label031;
        catch java.io.IOException from label134 to label135 with label031;
        catch java.io.IOException from label136 to label137 with label031;
        catch java.io.IOException from label138 to label139 with label031;
        catch java.io.IOException from label140 to label141 with label031;
        catch java.io.IOException from label142 to label143 with label031;
    }

    public int responseTasteReviewListRealTime(java.lang.Integer[], java.lang.String, java.util.ArrayList)
    {
        java.net.HttpURLConnection r8;
        java.lang.Throwable $r13, $r15;
        java.lang.Float $r16;
        java.net.URL r4, $r19;
        java.lang.Integer $r12;
        java.util.ArrayList r3;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        java.net.URLConnection $r7;
        int $i0;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r11;
        boolean $z0;
        com.sktelecom.bestfoodhouse.model.TasteReview r6, $r18;
        java.io.IOException $r21;
        org.xmlpull.v1.XmlPullParserException $r14;
        org.xmlpull.v1.XmlPullParserFactory $r10;
        java.lang.StringBuilder $r5, $r17;
        java.io.UnsupportedEncodingException $r20;
        java.lang.Integer[] $r1;
        java.io.InputStream $r9;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.Integer[];

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.ArrayList;

        $r17 = new java.lang.StringBuilder;

        $r5 = $r17;

     label001:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/tastesreviews/realtime_list.xml?currentPage=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("responseTasteReviewListRealTime", $r2);

     label002:
        $r18 = new com.sktelecom.bestfoodhouse.model.TasteReview;

        r6 = $r18;

     label003:
        specialinvoke $r18.<com.sktelecom.bestfoodhouse.model.TasteReview: void <init>()>();

     label004:
        $r19 = new java.net.URL;

        r4 = $r19;

     label005:
        specialinvoke $r19.<java.net.URL: void <init>(java.lang.String)>($r2);

        $r7 = virtualinvoke r4.<java.net.URL: java.net.URLConnection openConnection()>();

     label006:
        r8 = (java.net.HttpURLConnection) $r7;

     label007:
        virtualinvoke r8.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke r8.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke r8.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke r8.<java.net.HttpURLConnection: void connect()>();

        $r9 = virtualinvoke r8.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r10 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r11 = virtualinvoke $r10.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r9, null);

        $i0 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label008:
        if $i0 != 1 goto label009;

        return 0;

     label009:
        lookupswitch($i0)
        {
            case 2: goto label012;
            default: goto label010;
        };

     label010:
        $i0 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

     label011:
        goto label008;

     label012:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("totalItems");

     label013:
        if $z0 == 0 goto label017;

     label014:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

     label015:
        $r1[0] = $r12;

        goto label010;

     label016:
        $r13 := @caughtexception;

        $r20 = (java.io.UnsupportedEncodingException) $r13;

        virtualinvoke $r20.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label017:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("memberSeq");

     label018:
        if $z0 == 0 goto label022;

     label019:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label020:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String memberSeq> = $r2;

        goto label010;

     label021:
        $r14 := @caughtexception;

        virtualinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label022:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("reviewCode");

     label023:
        if $z0 == 0 goto label027;

     label024:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label025:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewCode> = $r2;

        goto label010;

     label026:
        $r15 := @caughtexception;

        $r21 = (java.io.IOException) $r15;

        virtualinvoke $r21.<java.io.IOException: void printStackTrace()>();

        return 1003;

     label027:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("foodCode");

     label028:
        if $z0 == 0 goto label031;

     label029:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label030:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String foodCode> = $r2;

        goto label010;

     label031:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("recommend");

     label032:
        if $z0 == 0 goto label038;

     label033:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label034:
        if $r2 != null goto label036;

        $r2 = "0";

     label035:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String recommend> = $r2;

        goto label010;

     label036:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label037:
        goto label035;

     label038:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("tvCheck");

     label039:
        if $z0 == 0 goto label045;

     label040:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label041:
        if $r2 != null goto label043;

        $r2 = "0";

     label042:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String tvCheck> = $r2;

        goto label010;

     label043:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label044:
        goto label042;

     label045:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("level");

     label046:
        if $z0 == 0 goto label052;

     label047:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label048:
        if $r2 != null goto label050;

        $r2 = "";

     label049:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String level> = $r2;

        goto label010;

     label050:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label051:
        goto label049;

     label052:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("nickName");

     label053:
        if $z0 == 0 goto label059;

     label054:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label055:
        if $r2 != null goto label057;

        $r2 = "";

     label056:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String nickName> = $r2;

        goto label010;

     label057:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label058:
        goto label056;

     label059:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("foodName");

     label060:
        if $z0 == 0 goto label066;

     label061:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label062:
        if $r2 != null goto label064;

        $r2 = "";

     label063:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String foodName> = $r2;

        goto label010;

     label064:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label065:
        goto label063;

     label066:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("foodImg1");

     label067:
        if $z0 == 0 goto label073;

     label068:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label069:
        if $r2 != null goto label071;

        $r2 = "";

     label070:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String imageUrlFoodHouse> = $r2;

        goto label010;

     label071:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label072:
        goto label070;

     label073:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("reviewComment");

     label074:
        if $z0 == 0 goto label080;

     label075:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label076:
        if $r2 != null goto label078;

        $r2 = "";

     label077:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewComment> = $r2;

        goto label010;

     label078:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label079:
        goto label077;

     label080:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("totalScore");

     label081:
        if $z0 == 0 goto label084;

     label082:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

     label083:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float totalScore> = $r16;

        goto label010;

     label084:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("tastesScore");

     label085:
        if $z0 == 0 goto label088;

     label086:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

     label087:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float tastesScore> = $r16;

        goto label010;

     label088:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("feelScore");

     label089:
        if $z0 == 0 goto label092;

     label090:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

     label091:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float feelScore> = $r16;

        goto label010;

     label092:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("svcScore");

     label093:
        if $z0 == 0 goto label096;

     label094:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

     label095:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float svcScore> = $r16;

        goto label010;

     label096:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("photoCnt");

     label097:
        if $z0 == 0 goto label103;

     label098:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label099:
        if $r2 != null goto label101;

        $r2 = "0";

     label100:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String photoCnt> = $r2;

        goto label010;

     label101:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label102:
        goto label100;

     label103:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("update");

     label104:
        if $z0 == 0 goto label110;

     label105:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label106:
        if $r2 != null goto label108;

        $r2 = "";

     label107:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String update> = $r2;

        goto label010;

     label108:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label109:
        goto label107;

     label110:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("viewCnt");

     label111:
        if $z0 == 0 goto label117;

     label112:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label113:
        if $r2 != null goto label115;

        $r2 = "0";

     label114:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String viewCnt> = $r2;

        goto label010;

     label115:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label116:
        goto label114;

     label117:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("recommentCnt");

     label118:
        if $z0 == 0 goto label124;

     label119:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label120:
        if $r2 != null goto label122;

        $r2 = "0";

     label121:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String recommentCnt> = $r2;

        goto label010;

     label122:
        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label123:
        goto label121;

     label124:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("empathyScore");

     label125:
        if $z0 == 0 goto label010;

     label126:
        interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r11.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r2);

     label127:
        r6.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float empathyScore> = $r16;

     label128:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label129:
        $r18 = new com.sktelecom.bestfoodhouse.model.TasteReview;

        r6 = $r18;

     label130:
        specialinvoke $r18.<com.sktelecom.bestfoodhouse.model.TasteReview: void <init>()>();

     label131:
        goto label010;

        catch java.io.UnsupportedEncodingException from label001 to label002 with label016;
        catch java.io.UnsupportedEncodingException from label003 to label004 with label016;
        catch java.io.UnsupportedEncodingException from label005 to label006 with label016;
        catch java.io.UnsupportedEncodingException from label007 to label008 with label016;
        catch java.io.UnsupportedEncodingException from label010 to label011 with label016;
        catch java.io.UnsupportedEncodingException from label012 to label013 with label016;
        catch java.io.UnsupportedEncodingException from label014 to label015 with label016;
        catch org.xmlpull.v1.XmlPullParserException from label001 to label002 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label003 to label004 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label005 to label006 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label007 to label008 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label010 to label011 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label012 to label013 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label014 to label015 with label021;
        catch java.io.IOException from label001 to label002 with label026;
        catch java.io.IOException from label003 to label004 with label026;
        catch java.io.IOException from label005 to label006 with label026;
        catch java.io.IOException from label007 to label008 with label026;
        catch java.io.IOException from label010 to label011 with label026;
        catch java.io.IOException from label012 to label013 with label026;
        catch java.io.IOException from label014 to label015 with label026;
        catch java.io.UnsupportedEncodingException from label017 to label018 with label016;
        catch java.io.UnsupportedEncodingException from label019 to label020 with label016;
        catch org.xmlpull.v1.XmlPullParserException from label017 to label018 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label019 to label020 with label021;
        catch java.io.IOException from label017 to label018 with label026;
        catch java.io.IOException from label019 to label020 with label026;
        catch java.io.UnsupportedEncodingException from label022 to label023 with label016;
        catch java.io.UnsupportedEncodingException from label024 to label025 with label016;
        catch org.xmlpull.v1.XmlPullParserException from label022 to label023 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label024 to label025 with label021;
        catch java.io.IOException from label022 to label023 with label026;
        catch java.io.IOException from label024 to label025 with label026;
        catch java.io.UnsupportedEncodingException from label027 to label028 with label016;
        catch java.io.UnsupportedEncodingException from label029 to label030 with label016;
        catch java.io.UnsupportedEncodingException from label031 to label032 with label016;
        catch java.io.UnsupportedEncodingException from label033 to label034 with label016;
        catch java.io.UnsupportedEncodingException from label036 to label037 with label016;
        catch java.io.UnsupportedEncodingException from label038 to label039 with label016;
        catch java.io.UnsupportedEncodingException from label040 to label041 with label016;
        catch java.io.UnsupportedEncodingException from label043 to label044 with label016;
        catch java.io.UnsupportedEncodingException from label045 to label046 with label016;
        catch java.io.UnsupportedEncodingException from label047 to label048 with label016;
        catch java.io.UnsupportedEncodingException from label050 to label051 with label016;
        catch java.io.UnsupportedEncodingException from label052 to label053 with label016;
        catch java.io.UnsupportedEncodingException from label054 to label055 with label016;
        catch java.io.UnsupportedEncodingException from label057 to label058 with label016;
        catch java.io.UnsupportedEncodingException from label059 to label060 with label016;
        catch java.io.UnsupportedEncodingException from label061 to label062 with label016;
        catch java.io.UnsupportedEncodingException from label064 to label065 with label016;
        catch java.io.UnsupportedEncodingException from label066 to label067 with label016;
        catch java.io.UnsupportedEncodingException from label068 to label069 with label016;
        catch java.io.UnsupportedEncodingException from label071 to label072 with label016;
        catch java.io.UnsupportedEncodingException from label073 to label074 with label016;
        catch java.io.UnsupportedEncodingException from label075 to label076 with label016;
        catch java.io.UnsupportedEncodingException from label078 to label079 with label016;
        catch java.io.UnsupportedEncodingException from label080 to label081 with label016;
        catch java.io.UnsupportedEncodingException from label082 to label083 with label016;
        catch java.io.UnsupportedEncodingException from label084 to label085 with label016;
        catch java.io.UnsupportedEncodingException from label086 to label087 with label016;
        catch java.io.UnsupportedEncodingException from label088 to label089 with label016;
        catch java.io.UnsupportedEncodingException from label090 to label091 with label016;
        catch java.io.UnsupportedEncodingException from label092 to label093 with label016;
        catch java.io.UnsupportedEncodingException from label094 to label095 with label016;
        catch java.io.UnsupportedEncodingException from label096 to label097 with label016;
        catch java.io.UnsupportedEncodingException from label098 to label099 with label016;
        catch java.io.UnsupportedEncodingException from label101 to label102 with label016;
        catch java.io.UnsupportedEncodingException from label103 to label104 with label016;
        catch java.io.UnsupportedEncodingException from label105 to label106 with label016;
        catch java.io.UnsupportedEncodingException from label108 to label109 with label016;
        catch java.io.UnsupportedEncodingException from label110 to label111 with label016;
        catch java.io.UnsupportedEncodingException from label112 to label113 with label016;
        catch java.io.UnsupportedEncodingException from label115 to label116 with label016;
        catch java.io.UnsupportedEncodingException from label117 to label118 with label016;
        catch java.io.UnsupportedEncodingException from label119 to label120 with label016;
        catch java.io.UnsupportedEncodingException from label122 to label123 with label016;
        catch java.io.UnsupportedEncodingException from label124 to label125 with label016;
        catch java.io.UnsupportedEncodingException from label126 to label127 with label016;
        catch java.io.UnsupportedEncodingException from label128 to label129 with label016;
        catch java.io.UnsupportedEncodingException from label130 to label131 with label016;
        catch org.xmlpull.v1.XmlPullParserException from label027 to label028 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label029 to label030 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label031 to label032 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label033 to label034 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label036 to label037 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label038 to label039 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label040 to label041 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label043 to label044 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label045 to label046 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label047 to label048 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label050 to label051 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label052 to label053 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label054 to label055 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label057 to label058 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label059 to label060 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label061 to label062 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label064 to label065 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label066 to label067 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label068 to label069 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label071 to label072 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label073 to label074 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label075 to label076 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label078 to label079 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label080 to label081 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label082 to label083 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label084 to label085 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label086 to label087 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label088 to label089 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label090 to label091 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label092 to label093 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label094 to label095 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label096 to label097 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label098 to label099 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label101 to label102 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label103 to label104 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label105 to label106 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label108 to label109 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label110 to label111 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label112 to label113 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label115 to label116 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label117 to label118 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label119 to label120 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label122 to label123 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label124 to label125 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label126 to label127 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label128 to label129 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label130 to label131 with label021;
        catch java.io.IOException from label027 to label028 with label026;
        catch java.io.IOException from label029 to label030 with label026;
        catch java.io.IOException from label031 to label032 with label026;
        catch java.io.IOException from label033 to label034 with label026;
        catch java.io.IOException from label036 to label037 with label026;
        catch java.io.IOException from label038 to label039 with label026;
        catch java.io.IOException from label040 to label041 with label026;
        catch java.io.IOException from label043 to label044 with label026;
        catch java.io.IOException from label045 to label046 with label026;
        catch java.io.IOException from label047 to label048 with label026;
        catch java.io.IOException from label050 to label051 with label026;
        catch java.io.IOException from label052 to label053 with label026;
        catch java.io.IOException from label054 to label055 with label026;
        catch java.io.IOException from label057 to label058 with label026;
        catch java.io.IOException from label059 to label060 with label026;
        catch java.io.IOException from label061 to label062 with label026;
        catch java.io.IOException from label064 to label065 with label026;
        catch java.io.IOException from label066 to label067 with label026;
        catch java.io.IOException from label068 to label069 with label026;
        catch java.io.IOException from label071 to label072 with label026;
        catch java.io.IOException from label073 to label074 with label026;
        catch java.io.IOException from label075 to label076 with label026;
        catch java.io.IOException from label078 to label079 with label026;
        catch java.io.IOException from label080 to label081 with label026;
        catch java.io.IOException from label082 to label083 with label026;
        catch java.io.IOException from label084 to label085 with label026;
        catch java.io.IOException from label086 to label087 with label026;
        catch java.io.IOException from label088 to label089 with label026;
        catch java.io.IOException from label090 to label091 with label026;
        catch java.io.IOException from label092 to label093 with label026;
        catch java.io.IOException from label094 to label095 with label026;
        catch java.io.IOException from label096 to label097 with label026;
        catch java.io.IOException from label098 to label099 with label026;
        catch java.io.IOException from label101 to label102 with label026;
        catch java.io.IOException from label103 to label104 with label026;
        catch java.io.IOException from label105 to label106 with label026;
        catch java.io.IOException from label108 to label109 with label026;
        catch java.io.IOException from label110 to label111 with label026;
        catch java.io.IOException from label112 to label113 with label026;
        catch java.io.IOException from label115 to label116 with label026;
        catch java.io.IOException from label117 to label118 with label026;
        catch java.io.IOException from label119 to label120 with label026;
        catch java.io.IOException from label122 to label123 with label026;
        catch java.io.IOException from label124 to label125 with label026;
        catch java.io.IOException from label126 to label127 with label026;
        catch java.io.IOException from label128 to label129 with label026;
        catch java.io.IOException from label130 to label131 with label026;
    }

    public int responseTasteReviewReplyList(java.lang.Integer[], java.lang.String, java.lang.String, java.util.ArrayList)
    {
        java.net.HttpURLConnection r9;
        java.lang.Throwable $r14, $r16;
        java.net.URL r5, $r19;
        java.lang.Integer $r13;
        java.util.ArrayList r4;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        java.net.URLConnection $r8;
        int $i0;
        java.lang.String $r2, $r3;
        org.xmlpull.v1.XmlPullParser $r12;
        boolean $z0;
        java.io.IOException $r21;
        org.xmlpull.v1.XmlPullParserException $r15;
        com.sktelecom.bestfoodhouse.model.TasteReviewReply r7, $r18;
        org.xmlpull.v1.XmlPullParserFactory $r11;
        java.lang.StringBuilder $r6, $r17;
        java.io.UnsupportedEncodingException $r20;
        java.lang.Integer[] $r1;
        java.io.InputStream $r10;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.Integer[];

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.ArrayList;

        $r17 = new java.lang.StringBuilder;

        $r6 = $r17;

     label01:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/reviewrecomment/list.xml?pageSize=1000&currentPage=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&seq=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r18 = new com.sktelecom.bestfoodhouse.model.TasteReviewReply;

        r7 = $r18;

     label03:
        specialinvoke $r18.<com.sktelecom.bestfoodhouse.model.TasteReviewReply: void <init>()>();

     label04:
        $r19 = new java.net.URL;

        r5 = $r19;

     label05:
        specialinvoke $r19.<java.net.URL: void <init>(java.lang.String)>($r2);

        $r8 = virtualinvoke r5.<java.net.URL: java.net.URLConnection openConnection()>();

     label06:
        r9 = (java.net.HttpURLConnection) $r8;

     label07:
        virtualinvoke r9.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke r9.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke r9.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke r9.<java.net.HttpURLConnection: void connect()>();

        $r10 = virtualinvoke r9.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r11 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r12 = virtualinvoke $r11.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r10, null);

        $i0 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label08:
        if $i0 != 1 goto label09;

        return 0;

     label09:
        lookupswitch($i0)
        {
            case 2: goto label12;
            default: goto label10;
        };

     label10:
        $i0 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

     label11:
        goto label08;

     label12:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("totalItems");

     label13:
        if $z0 == 0 goto label17;

     label14:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

     label15:
        $r1[0] = $r13;

        goto label10;

     label16:
        $r14 := @caughtexception;

        $r20 = (java.io.UnsupportedEncodingException) $r14;

        virtualinvoke $r20.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label17:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("seq");

     label18:
        if $z0 == 0 goto label22;

     label19:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

     label20:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReviewReply: java.lang.Integer seq> = $r13;

        goto label10;

     label21:
        $r15 := @caughtexception;

        virtualinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label22:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("nickName");

     label23:
        if $z0 == 0 goto label27;

     label24:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label25:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReviewReply: java.lang.String nickName> = $r2;

        goto label10;

     label26:
        $r16 := @caughtexception;

        $r21 = (java.io.IOException) $r16;

        virtualinvoke $r21.<java.io.IOException: void printStackTrace()>();

        return 1003;

     label27:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("memberSeq");

     label28:
        if $z0 == 0 goto label31;

     label29:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label30:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReviewReply: java.lang.String memberSeq> = $r2;

        goto label10;

     label31:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("recomment");

     label32:
        if $z0 == 0 goto label38;

     label33:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label34:
        if $r2 != null goto label36;

        $r2 = "";

     label35:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReviewReply: java.lang.String recomment> = $r2;

        goto label10;

     label36:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label37:
        goto label35;

     label38:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("order");

     label39:
        if $z0 == 0 goto label45;

     label40:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label41:
        if $r2 != null goto label43;

        $r2 = "";

     label42:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReviewReply: java.lang.String order> = $r2;

        goto label10;

     label43:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label44:
        goto label42;

     label45:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("photoUrl");

     label46:
        if $z0 == 0 goto label52;

     label47:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label48:
        if $r2 != null goto label50;

        $r2 = "";

     label49:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReviewReply: java.lang.String photoUrl> = $r2;

        goto label10;

     label50:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label51:
        goto label49;

     label52:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("update");

     label53:
        if $z0 == 0 goto label10;

     label54:
        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label55:
        if $r2 != null goto label61;

        $r2 = "";

     label56:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReviewReply: java.lang.String update> = $r2;

     label57:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label58:
        $r18 = new com.sktelecom.bestfoodhouse.model.TasteReviewReply;

        r7 = $r18;

     label59:
        specialinvoke $r18.<com.sktelecom.bestfoodhouse.model.TasteReviewReply: void <init>()>();

     label60:
        goto label10;

     label61:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label62:
        goto label56;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label16;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label16;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label16;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label16;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label16;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label16;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label21;
        catch java.io.IOException from label01 to label02 with label26;
        catch java.io.IOException from label03 to label04 with label26;
        catch java.io.IOException from label05 to label06 with label26;
        catch java.io.IOException from label07 to label08 with label26;
        catch java.io.IOException from label10 to label11 with label26;
        catch java.io.IOException from label12 to label13 with label26;
        catch java.io.IOException from label14 to label15 with label26;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label16;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label21;
        catch java.io.IOException from label17 to label18 with label26;
        catch java.io.IOException from label19 to label20 with label26;
        catch java.io.UnsupportedEncodingException from label22 to label23 with label16;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label21;
        catch java.io.IOException from label22 to label23 with label26;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.io.UnsupportedEncodingException from label27 to label28 with label16;
        catch java.io.UnsupportedEncodingException from label29 to label30 with label16;
        catch java.io.UnsupportedEncodingException from label31 to label32 with label16;
        catch java.io.UnsupportedEncodingException from label33 to label34 with label16;
        catch java.io.UnsupportedEncodingException from label36 to label37 with label16;
        catch java.io.UnsupportedEncodingException from label38 to label39 with label16;
        catch java.io.UnsupportedEncodingException from label40 to label41 with label16;
        catch java.io.UnsupportedEncodingException from label43 to label44 with label16;
        catch java.io.UnsupportedEncodingException from label45 to label46 with label16;
        catch java.io.UnsupportedEncodingException from label47 to label48 with label16;
        catch java.io.UnsupportedEncodingException from label50 to label51 with label16;
        catch java.io.UnsupportedEncodingException from label52 to label53 with label16;
        catch java.io.UnsupportedEncodingException from label54 to label55 with label16;
        catch java.io.UnsupportedEncodingException from label57 to label58 with label16;
        catch java.io.UnsupportedEncodingException from label59 to label60 with label16;
        catch java.io.UnsupportedEncodingException from label61 to label62 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label33 to label34 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label37 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label38 to label39 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label40 to label41 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label43 to label44 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label45 to label46 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label47 to label48 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label50 to label51 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label52 to label53 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label54 to label55 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label57 to label58 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label59 to label60 with label21;
        catch org.xmlpull.v1.XmlPullParserException from label61 to label62 with label21;
        catch java.io.IOException from label27 to label28 with label26;
        catch java.io.IOException from label29 to label30 with label26;
        catch java.io.IOException from label31 to label32 with label26;
        catch java.io.IOException from label33 to label34 with label26;
        catch java.io.IOException from label36 to label37 with label26;
        catch java.io.IOException from label38 to label39 with label26;
        catch java.io.IOException from label40 to label41 with label26;
        catch java.io.IOException from label43 to label44 with label26;
        catch java.io.IOException from label45 to label46 with label26;
        catch java.io.IOException from label47 to label48 with label26;
        catch java.io.IOException from label50 to label51 with label26;
        catch java.io.IOException from label52 to label53 with label26;
        catch java.io.IOException from label54 to label55 with label26;
        catch java.io.IOException from label57 to label58 with label26;
        catch java.io.IOException from label59 to label60 with label26;
        catch java.io.IOException from label61 to label62 with label26;
    }

    public int responseTasteReviews(java.lang.Integer[], java.lang.String, java.lang.String, java.lang.String, java.util.ArrayList)
    {
        java.net.HttpURLConnection r23;
        java.lang.Float $r13, $r14, $r15, $r16, $r29;
        java.net.URL r6, $r33;
        java.lang.Integer $r27;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        org.xmlpull.v1.XmlPullParser $r26;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r30;
        org.xmlpull.v1.XmlPullParserFactory $r25;
        java.lang.StringBuilder $r8, $r32;
        java.io.UnsupportedEncodingException $r35;
        java.lang.Integer[] $r1;
        java.lang.Throwable $r28, $r31;
        java.util.ArrayList r5;
        java.net.URLConnection $r22;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r9, r10, r11, r12, r17, r18, r19, r20, r21;
        com.sktelecom.bestfoodhouse.model.TasteReview r7, $r34;
        java.io.IOException $r36;
        java.io.InputStream $r24;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.Integer[];

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.util.ArrayList;

        $r32 = new java.lang.StringBuilder;

        $r8 = $r32;

     label001:
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/tastesreviews/list.xml?seq=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&bestSeq=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&currentPage=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("responseTasteReviews", $r9);

     label002:
        $r2 = "";

        $r3 = "";

        r10 = "";

        $r4 = "";

        r11 = "";

        r12 = "";

     label003:
        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

     label004:
        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

     label005:
        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

     label006:
        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

     label007:
        r17 = "";

        r18 = "";

        r19 = "";

        r20 = "";

        r21 = "";

     label008:
        staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

     label009:
        $r33 = new java.net.URL;

        r6 = $r33;

     label010:
        specialinvoke $r33.<java.net.URL: void <init>(java.lang.String)>($r9);

        $r22 = virtualinvoke r6.<java.net.URL: java.net.URLConnection openConnection()>();

     label011:
        r23 = (java.net.HttpURLConnection) $r22;

     label012:
        virtualinvoke r23.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke r23.<java.net.HttpURLConnection: void setConnectTimeout(int)>(10000);

        virtualinvoke r23.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke r23.<java.net.HttpURLConnection: void connect()>();

        $r24 = virtualinvoke r23.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r25 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r26 = virtualinvoke $r25.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r24, null);

        $i0 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label013:
        if $i0 != 1 goto label014;

        return 0;

     label014:
        lookupswitch($i0)
        {
            case 2: goto label017;
            default: goto label015;
        };

     label015:
        $i0 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

     label016:
        goto label013;

     label017:
        $r9 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("totalItems");

     label018:
        if $z0 == 0 goto label022;

     label019:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r9 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r9);

     label020:
        $r1[0] = $r27;

        goto label015;

     label021:
        $r28 := @caughtexception;

        $r35 = (java.io.UnsupportedEncodingException) $r28;

        virtualinvoke $r35.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label022:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("memberSeq");

     label023:
        if $z0 == 0 goto label026;

     label024:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r3 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label025:
        goto label015;

     label026:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("reviewCode");

     label027:
        if $z0 == 0 goto label030;

     label028:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r2 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label029:
        goto label015;

     label030:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("nickName");

     label031:
        if $z0 == 0 goto label034;

     label032:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r4 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label033:
        goto label015;

     label034:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("minNo");

     label035:
        if $z0 == 0 goto label038;

     label036:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        r11 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label037:
        goto label015;

     label038:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("level");

     label039:
        if $z0 == 0 goto label044;

     label040:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        r10 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label041:
        if r10 != null goto label042;

        r10 = "";

        goto label015;

     label042:
        r10 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label043:
        goto label015;

     label044:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("reviewComment");

     label045:
        if $z0 == 0 goto label050;

     label046:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        r12 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label047:
        if r12 != null goto label048;

        r12 = "";

        goto label015;

     label048:
        r12 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label049:
        goto label015;

     label050:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("totalScore");

     label051:
        if $z0 == 0 goto label054;

     label052:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r9 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r9);

     label053:
        goto label015;

     label054:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("tastesScore");

     label055:
        if $z0 == 0 goto label058;

     label056:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r9 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r9);

     label057:
        goto label015;

     label058:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("feelScore");

     label059:
        if $z0 == 0 goto label062;

     label060:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r9 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r9);

     label061:
        goto label015;

     label062:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("svcScore");

     label063:
        if $z0 == 0 goto label066;

     label064:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r9 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r9);

     label065:
        goto label015;

     label066:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("photoCnt");

     label067:
        if $z0 == 0 goto label072;

     label068:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        r17 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label069:
        if r17 != null goto label070;

        r17 = "0";

        goto label015;

     label070:
        r17 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label071:
        goto label015;

     label072:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("photoUrl");

     label073:
        if $z0 == 0 goto label078;

     label074:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        r18 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label075:
        if r18 != null goto label076;

        r18 = "";

        goto label015;

     label076:
        r18 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label077:
        goto label015;

     label078:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("update");

     label079:
        if $z0 == 0 goto label084;

     label080:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        r19 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label081:
        if r19 != null goto label082;

        r19 = "";

        goto label015;

     label082:
        r19 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label083:
        goto label015;

     label084:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("viewCnt");

     label085:
        if $z0 == 0 goto label090;

     label086:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        r20 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label087:
        if r20 != null goto label088;

        r20 = "0";

        goto label015;

     label088:
        r20 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label089:
        goto label015;

     label090:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("recommentCnt");

     label091:
        if $z0 == 0 goto label096;

     label092:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        r21 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label093:
        if r21 != null goto label094;

        r21 = "0";

        goto label015;

     label094:
        r21 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label095:
        goto label015;

     label096:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("empathyScore");

     label097:
        if $z0 == 0 goto label015;

     label098:
        interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r9 = interfaceinvoke $r26.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r29 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r9);

     label099:
        $r34 = new com.sktelecom.bestfoodhouse.model.TasteReview;

        r7 = $r34;

     label100:
        specialinvoke $r34.<com.sktelecom.bestfoodhouse.model.TasteReview: void <init>()>();

     label101:
        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String memberSeq> = $r3;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewCode> = $r2;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String level> = r10;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String nickName> = $r4;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String minNo> = r11;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String reviewComment> = r12;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float totalScore> = $r13;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float tastesScore> = $r14;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float feelScore> = $r15;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float svcScore> = $r16;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String photoCnt> = r17;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String photoUrl> = r18;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String update> = r19;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String viewCnt> = r20;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.String recommentCnt> = r21;

        r7.<com.sktelecom.bestfoodhouse.model.TasteReview: java.lang.Float empathyScore> = $r29;

     label102:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label103:
        goto label015;

     label104:
        $r30 := @caughtexception;

        virtualinvoke $r30.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label105:
        $r31 := @caughtexception;

        $r36 = (java.io.IOException) $r31;

        virtualinvoke $r36.<java.io.IOException: void printStackTrace()>();

        return 1003;

        catch java.io.UnsupportedEncodingException from label001 to label002 with label021;
        catch java.io.UnsupportedEncodingException from label003 to label004 with label021;
        catch java.io.UnsupportedEncodingException from label004 to label005 with label021;
        catch java.io.UnsupportedEncodingException from label005 to label006 with label021;
        catch java.io.UnsupportedEncodingException from label006 to label007 with label021;
        catch java.io.UnsupportedEncodingException from label008 to label009 with label021;
        catch java.io.UnsupportedEncodingException from label010 to label011 with label021;
        catch java.io.UnsupportedEncodingException from label012 to label013 with label021;
        catch java.io.UnsupportedEncodingException from label015 to label016 with label021;
        catch java.io.UnsupportedEncodingException from label017 to label018 with label021;
        catch java.io.UnsupportedEncodingException from label019 to label020 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label001 to label002 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label003 to label004 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label004 to label005 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label005 to label006 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label006 to label007 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label008 to label009 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label010 to label011 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label012 to label013 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label015 to label016 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label017 to label018 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label019 to label020 with label104;
        catch java.io.IOException from label001 to label002 with label105;
        catch java.io.IOException from label003 to label004 with label105;
        catch java.io.IOException from label004 to label005 with label105;
        catch java.io.IOException from label005 to label006 with label105;
        catch java.io.IOException from label006 to label007 with label105;
        catch java.io.IOException from label008 to label009 with label105;
        catch java.io.IOException from label010 to label011 with label105;
        catch java.io.IOException from label012 to label013 with label105;
        catch java.io.IOException from label015 to label016 with label105;
        catch java.io.IOException from label017 to label018 with label105;
        catch java.io.IOException from label019 to label020 with label105;
        catch java.io.UnsupportedEncodingException from label022 to label023 with label021;
        catch java.io.UnsupportedEncodingException from label024 to label025 with label021;
        catch java.io.UnsupportedEncodingException from label026 to label027 with label021;
        catch java.io.UnsupportedEncodingException from label028 to label029 with label021;
        catch java.io.UnsupportedEncodingException from label030 to label031 with label021;
        catch java.io.UnsupportedEncodingException from label032 to label033 with label021;
        catch java.io.UnsupportedEncodingException from label034 to label035 with label021;
        catch java.io.UnsupportedEncodingException from label036 to label037 with label021;
        catch java.io.UnsupportedEncodingException from label038 to label039 with label021;
        catch java.io.UnsupportedEncodingException from label040 to label041 with label021;
        catch java.io.UnsupportedEncodingException from label042 to label043 with label021;
        catch java.io.UnsupportedEncodingException from label044 to label045 with label021;
        catch java.io.UnsupportedEncodingException from label046 to label047 with label021;
        catch java.io.UnsupportedEncodingException from label048 to label049 with label021;
        catch java.io.UnsupportedEncodingException from label050 to label051 with label021;
        catch java.io.UnsupportedEncodingException from label052 to label053 with label021;
        catch java.io.UnsupportedEncodingException from label054 to label055 with label021;
        catch java.io.UnsupportedEncodingException from label056 to label057 with label021;
        catch java.io.UnsupportedEncodingException from label058 to label059 with label021;
        catch java.io.UnsupportedEncodingException from label060 to label061 with label021;
        catch java.io.UnsupportedEncodingException from label062 to label063 with label021;
        catch java.io.UnsupportedEncodingException from label064 to label065 with label021;
        catch java.io.UnsupportedEncodingException from label066 to label067 with label021;
        catch java.io.UnsupportedEncodingException from label068 to label069 with label021;
        catch java.io.UnsupportedEncodingException from label070 to label071 with label021;
        catch java.io.UnsupportedEncodingException from label072 to label073 with label021;
        catch java.io.UnsupportedEncodingException from label074 to label075 with label021;
        catch java.io.UnsupportedEncodingException from label076 to label077 with label021;
        catch java.io.UnsupportedEncodingException from label078 to label079 with label021;
        catch java.io.UnsupportedEncodingException from label080 to label081 with label021;
        catch java.io.UnsupportedEncodingException from label082 to label083 with label021;
        catch java.io.UnsupportedEncodingException from label084 to label085 with label021;
        catch java.io.UnsupportedEncodingException from label086 to label087 with label021;
        catch java.io.UnsupportedEncodingException from label088 to label089 with label021;
        catch java.io.UnsupportedEncodingException from label090 to label091 with label021;
        catch java.io.UnsupportedEncodingException from label092 to label093 with label021;
        catch java.io.UnsupportedEncodingException from label094 to label095 with label021;
        catch java.io.UnsupportedEncodingException from label096 to label097 with label021;
        catch java.io.UnsupportedEncodingException from label098 to label099 with label021;
        catch java.io.UnsupportedEncodingException from label100 to label101 with label021;
        catch java.io.UnsupportedEncodingException from label102 to label103 with label021;
        catch org.xmlpull.v1.XmlPullParserException from label022 to label023 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label024 to label025 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label026 to label027 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label028 to label029 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label030 to label031 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label032 to label033 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label034 to label035 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label036 to label037 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label038 to label039 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label040 to label041 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label042 to label043 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label044 to label045 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label046 to label047 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label048 to label049 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label050 to label051 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label052 to label053 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label054 to label055 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label056 to label057 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label058 to label059 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label060 to label061 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label062 to label063 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label064 to label065 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label066 to label067 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label068 to label069 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label070 to label071 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label072 to label073 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label074 to label075 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label076 to label077 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label078 to label079 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label080 to label081 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label082 to label083 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label084 to label085 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label086 to label087 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label088 to label089 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label090 to label091 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label092 to label093 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label094 to label095 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label096 to label097 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label098 to label099 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label100 to label101 with label104;
        catch org.xmlpull.v1.XmlPullParserException from label102 to label103 with label104;
        catch java.io.IOException from label022 to label023 with label105;
        catch java.io.IOException from label024 to label025 with label105;
        catch java.io.IOException from label026 to label027 with label105;
        catch java.io.IOException from label028 to label029 with label105;
        catch java.io.IOException from label030 to label031 with label105;
        catch java.io.IOException from label032 to label033 with label105;
        catch java.io.IOException from label034 to label035 with label105;
        catch java.io.IOException from label036 to label037 with label105;
        catch java.io.IOException from label038 to label039 with label105;
        catch java.io.IOException from label040 to label041 with label105;
        catch java.io.IOException from label042 to label043 with label105;
        catch java.io.IOException from label044 to label045 with label105;
        catch java.io.IOException from label046 to label047 with label105;
        catch java.io.IOException from label048 to label049 with label105;
        catch java.io.IOException from label050 to label051 with label105;
        catch java.io.IOException from label052 to label053 with label105;
        catch java.io.IOException from label054 to label055 with label105;
        catch java.io.IOException from label056 to label057 with label105;
        catch java.io.IOException from label058 to label059 with label105;
        catch java.io.IOException from label060 to label061 with label105;
        catch java.io.IOException from label062 to label063 with label105;
        catch java.io.IOException from label064 to label065 with label105;
        catch java.io.IOException from label066 to label067 with label105;
        catch java.io.IOException from label068 to label069 with label105;
        catch java.io.IOException from label070 to label071 with label105;
        catch java.io.IOException from label072 to label073 with label105;
        catch java.io.IOException from label074 to label075 with label105;
        catch java.io.IOException from label076 to label077 with label105;
        catch java.io.IOException from label078 to label079 with label105;
        catch java.io.IOException from label080 to label081 with label105;
        catch java.io.IOException from label082 to label083 with label105;
        catch java.io.IOException from label084 to label085 with label105;
        catch java.io.IOException from label086 to label087 with label105;
        catch java.io.IOException from label088 to label089 with label105;
        catch java.io.IOException from label090 to label091 with label105;
        catch java.io.IOException from label092 to label093 with label105;
        catch java.io.IOException from label094 to label095 with label105;
        catch java.io.IOException from label096 to label097 with label105;
        catch java.io.IOException from label098 to label099 with label105;
        catch java.io.IOException from label100 to label101 with label105;
        catch java.io.IOException from label102 to label103 with label105;
    }

    public int responseUpdateTasteReviewReply(java.lang.String, java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient r3, $r18;
        org.apache.http.message.BasicNameValuePair $r8, $r21;
        java.lang.Throwable $r15, $r17;
        org.apache.http.client.methods.HttpPost r4, $r19;
        org.apache.http.client.entity.UrlEncodedFormEntity $r9, $r22;
        java.util.ArrayList r5, $r20;
        com.sktelecom.bestfoodhouse.controller.TasteReviewController r0;
        int $i0;
        java.lang.String $r1, $r2, $r6;
        org.xmlpull.v1.XmlPullParser $r14;
        boolean $z0;
        org.apache.http.HttpEntity $r11;
        java.io.IOException $r24;
        org.xmlpull.v1.XmlPullParserException $r16;
        org.xmlpull.v1.XmlPullParserFactory $r13;
        org.apache.http.params.HttpParams $r7;
        org.apache.http.HttpResponse $r10;
        java.io.UnsupportedEncodingException $r23;
        java.io.InputStream $r12;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.TasteReviewController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r18 = new org.apache.http.impl.client.DefaultHttpClient;

        r3 = $r18;

     label01:
        specialinvoke $r18.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        $r7 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r7, 10000);

        $r7 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r7, 10000);

     label02:
        $r19 = new org.apache.http.client.methods.HttpPost;

        r4 = $r19;

     label03:
        specialinvoke $r19.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("http://113.217.232.24/food-mater/xml/1.0/reviewrecomment/update.xml");

     label04:
        $r20 = new java.util.ArrayList;

        r5 = $r20;

     label05:
        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

     label06:
        $r21 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r21;

        $r6 = <com.sktelecom.bestfoodhouse.model.Global: java.lang.String accessToken>;

     label07:
        specialinvoke $r21.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("accessToken", $r6);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label08:
        $r21 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r21;

     label09:
        specialinvoke $r21.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("recomment", $r2);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label10:
        $r21 = new org.apache.http.message.BasicNameValuePair;

        $r8 = $r21;

     label11:
        specialinvoke $r21.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("seq", $r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label12:
        $r22 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        $r9 = $r22;

     label13:
        specialinvoke $r22.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r5, "UTF-8");

        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r9);

        $r10 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r4);

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r12 = interfaceinvoke $r11.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r13 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r14 = virtualinvoke $r13.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r12, null);

        $i0 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label14:
        if $i0 != 1 goto label15;

        $i0 = -1;

        return $i0;

     label15:
        lookupswitch($i0)
        {
            case 2: goto label18;
            default: goto label16;
        };

     label16:
        $i0 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: int next()>();

     label17:
        goto label14;

     label18:
        $r1 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("response");

     label19:
        if $z0 == 0 goto label16;

     label20:
        $r1 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "status");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ok");

     label21:
        if $z0 == 0 goto label22;

        return 0;

     label22:
        $i0 = -1;

        return $i0;

     label23:
        $r15 := @caughtexception;

        $r23 = (java.io.UnsupportedEncodingException) $r15;

        virtualinvoke $r23.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label24:
        $r16 := @caughtexception;

        virtualinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label25:
        $r17 := @caughtexception;

        $r24 = (java.io.IOException) $r17;

        virtualinvoke $r24.<java.io.IOException: void printStackTrace()>();

        return 1003;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label23;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label23;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label23;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label23;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label23;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label23;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label23;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label23;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label23;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label23;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label24;
        catch java.io.IOException from label01 to label02 with label25;
        catch java.io.IOException from label03 to label04 with label25;
        catch java.io.IOException from label05 to label06 with label25;
        catch java.io.IOException from label07 to label08 with label25;
        catch java.io.IOException from label09 to label10 with label25;
        catch java.io.IOException from label11 to label12 with label25;
        catch java.io.IOException from label13 to label14 with label25;
        catch java.io.IOException from label16 to label17 with label25;
        catch java.io.IOException from label18 to label19 with label25;
        catch java.io.IOException from label20 to label21 with label25;
    }
}
