public class cn.qitu.db.DaoMaster extends de.greenrobot.dao.AbstractDaoMaster
{
    private static final java.lang.String CREATE_TEMP_CONTACT_PEOPLE;
    private static final java.lang.String DROP_USER;
    private static final java.lang.String INSERT_DATA;
    private static final java.lang.String INSERT_DATA2;
    public static final int SCHEMA_VERSION;
    private static cn.qitu.db.DaoMaster$DbUpdataListener dbUpdata;

    public void <init>(android.database.sqlite.SQLiteDatabase)
    {
        cn.qitu.db.DaoMaster r0;
        android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: cn.qitu.db.DaoMaster;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<de.greenrobot.dao.AbstractDaoMaster: void <init>(android.database.sqlite.SQLiteDatabase,int)>($r1, 2);

        virtualinvoke r0.<cn.qitu.db.DaoMaster: void registerDaoClass(java.lang.Class)>(class "Lcn/qitu/db/ContactPeopleDao;");

        virtualinvoke r0.<cn.qitu.db.DaoMaster: void registerDaoClass(java.lang.Class)>(class "Lcn/qitu/db/ContactPeopleNewDao;");

        virtualinvoke r0.<cn.qitu.db.DaoMaster: void registerDaoClass(java.lang.Class)>(class "Lcn/qitu/db/ContactPhoneDao;");

        virtualinvoke r0.<cn.qitu.db.DaoMaster: void registerDaoClass(java.lang.Class)>(class "Lcn/qitu/db/SmsDao;");

        virtualinvoke r0.<cn.qitu.db.DaoMaster: void registerDaoClass(java.lang.Class)>(class "Lcn/qitu/db/CallsDao;");

        return;
    }

    public static void createAllTables(android.database.sqlite.SQLiteDatabase, boolean)
    {
        android.database.sqlite.SQLiteDatabase $r0;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $z0 := @parameter1: boolean;

        staticinvoke <cn.qitu.db.ContactPeopleNewDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)>($r0, 0);

        staticinvoke <cn.qitu.db.ContactPhoneDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)>($r0, 0);

        staticinvoke <cn.qitu.db.SmsDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)>($r0, 0);

        staticinvoke <cn.qitu.db.CallsDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)>($r0, 0);

        return;
    }

    public static void dropAllTables(android.database.sqlite.SQLiteDatabase, boolean)
    {
        android.database.sqlite.SQLiteDatabase $r0;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $z0 := @parameter1: boolean;

        staticinvoke <cn.qitu.db.ContactPeopleNewDao: void dropTable(android.database.sqlite.SQLiteDatabase,boolean)>($r0, $z0);

        staticinvoke <cn.qitu.db.ContactPhoneDao: void dropTable(android.database.sqlite.SQLiteDatabase,boolean)>($r0, $z0);

        staticinvoke <cn.qitu.db.SmsDao: void dropTable(android.database.sqlite.SQLiteDatabase,boolean)>($r0, $z0);

        staticinvoke <cn.qitu.db.CallsDao: void dropTable(android.database.sqlite.SQLiteDatabase,boolean)>($r0, $z0);

        return;
    }

    public cn.qitu.db.DaoSession newSession()
    {
        android.database.sqlite.SQLiteDatabase $r2;
        de.greenrobot.dao.identityscope.IdentityScopeType $r3;
        java.util.Map $r4;
        cn.qitu.db.DaoMaster r0;
        cn.qitu.db.DaoSession $r1;

        r0 := @this: cn.qitu.db.DaoMaster;

        $r1 = new cn.qitu.db.DaoSession;

        $r2 = r0.<cn.qitu.db.DaoMaster: android.database.sqlite.SQLiteDatabase db>;

        $r3 = <de.greenrobot.dao.identityscope.IdentityScopeType: de.greenrobot.dao.identityscope.IdentityScopeType Session>;

        $r4 = r0.<cn.qitu.db.DaoMaster: java.util.Map daoConfigMap>;

        specialinvoke $r1.<cn.qitu.db.DaoSession: void <init>(android.database.sqlite.SQLiteDatabase,de.greenrobot.dao.identityscope.IdentityScopeType,java.util.Map)>($r2, $r3, $r4);

        return $r1;
    }

    public cn.qitu.db.DaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType)
    {
        de.greenrobot.dao.identityscope.IdentityScopeType $r1;
        android.database.sqlite.SQLiteDatabase $r3;
        java.util.Map $r4;
        cn.qitu.db.DaoMaster r0;
        cn.qitu.db.DaoSession $r2;

        r0 := @this: cn.qitu.db.DaoMaster;

        $r1 := @parameter0: de.greenrobot.dao.identityscope.IdentityScopeType;

        $r2 = new cn.qitu.db.DaoSession;

        $r3 = r0.<cn.qitu.db.DaoMaster: android.database.sqlite.SQLiteDatabase db>;

        $r4 = r0.<cn.qitu.db.DaoMaster: java.util.Map daoConfigMap>;

        specialinvoke $r2.<cn.qitu.db.DaoSession: void <init>(android.database.sqlite.SQLiteDatabase,de.greenrobot.dao.identityscope.IdentityScopeType,java.util.Map)>($r3, $r1, $r4);

        return $r2;
    }

    public volatile de.greenrobot.dao.AbstractDaoSession newSession()
    {
        cn.qitu.db.DaoMaster r0;
        cn.qitu.db.DaoSession $r1;

        r0 := @this: cn.qitu.db.DaoMaster;

        $r1 = virtualinvoke r0.<cn.qitu.db.DaoMaster: cn.qitu.db.DaoSession newSession()>();

        return $r1;
    }

    public volatile de.greenrobot.dao.AbstractDaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType)
    {
        cn.qitu.db.DaoMaster r0;
        de.greenrobot.dao.identityscope.IdentityScopeType $r1;
        cn.qitu.db.DaoSession $r2;

        r0 := @this: cn.qitu.db.DaoMaster;

        $r1 := @parameter0: de.greenrobot.dao.identityscope.IdentityScopeType;

        $r2 = virtualinvoke r0.<cn.qitu.db.DaoMaster: cn.qitu.db.DaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType)>($r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <cn.qitu.db.DaoMaster: int SCHEMA_VERSION> = 2;

        <cn.qitu.db.DaoMaster: java.lang.String INSERT_DATA2> = "insert into CONTACT_PHONE (ID,PHONENUMBER) select ID,PHONES_NUMBER from _temp_user";

        <cn.qitu.db.DaoMaster: java.lang.String INSERT_DATA> = "insert into CONTACT_PEOPLE_NEW(ID,DISPLAY_NAME)  select ID,DISPLAY_NAME from _temp_user";

        <cn.qitu.db.DaoMaster: java.lang.String DROP_USER> = "drop table _temp_user";

        <cn.qitu.db.DaoMaster: java.lang.String CREATE_TEMP_CONTACT_PEOPLE> = "alter table CONTACT_PEOPLE rename to _temp_user";

        return;
    }
}
