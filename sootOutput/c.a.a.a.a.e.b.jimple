public final class c.a.a.a.a.e.b extends java.lang.Object implements c.a.a.a.a.e.m
{
    private final c.a.a.a.q a;
    private c.a.a.a.a.e.n b;
    private javax.net.ssl.SSLSocketFactory c;
    private boolean d;

    public void <init>()
    {
        c.a.a.a.a $r1;
        c.a.a.a.a.e.b r0;

        r0 := @this: c.a.a.a.a.e.b;

        $r1 = new c.a.a.a.a;

        specialinvoke $r1.<c.a.a.a.a: void <init>(byte)>(0);

        specialinvoke r0.<c.a.a.a.a.e.b: void <init>(c.a.a.a.q)>($r1);

        return;
    }

    public void <init>(c.a.a.a.q)
    {
        c.a.a.a.q $r1;
        c.a.a.a.a.e.b r0;

        r0 := @this: c.a.a.a.a.e.b;

        $r1 := @parameter0: c.a.a.a.q;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<c.a.a.a.a.e.b: c.a.a.a.q a> = $r1;

        return;
    }

    private void a()
    {
        java.lang.Throwable $r1;
        c.a.a.a.a.e.b r0;

        r0 := @this: c.a.a.a.a.e.b;

        entermonitor r0;

     label1:
        r0.<c.a.a.a.a.e.b: boolean d> = 0;

        r0.<c.a.a.a.a.e.b: javax.net.ssl.SSLSocketFactory c> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private javax.net.ssl.SSLSocketFactory b()
    {
        java.lang.Throwable $r2;
        c.a.a.a.a.e.b r0;
        javax.net.ssl.SSLSocketFactory $r1;
        boolean $z0;

        r0 := @this: c.a.a.a.a.e.b;

        entermonitor r0;

     label1:
        $r1 = r0.<c.a.a.a.a.e.b: javax.net.ssl.SSLSocketFactory c>;

        if $r1 != null goto label2;

        $z0 = r0.<c.a.a.a.a.e.b: boolean d>;

        if $z0 != 0 goto label2;

        $r1 = specialinvoke r0.<c.a.a.a.a.e.b: javax.net.ssl.SSLSocketFactory c()>();

        r0.<c.a.a.a.a.e.b: javax.net.ssl.SSLSocketFactory c> = $r1;

     label2:
        $r1 = r0.<c.a.a.a.a.e.b: javax.net.ssl.SSLSocketFactory c>;

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private javax.net.ssl.SSLSocketFactory c()
    {
        java.lang.Throwable $r11;
        javax.net.ssl.SSLContext $r2;
        java.lang.Object[] $r7;
        c.a.a.a.a.e.b r0;
        c.a.a.a.q $r9;
        java.lang.Exception $r10;
        javax.net.ssl.SSLSocketFactory $r8;
        c.a.a.a.a.e.p $r3, $r12;
        javax.net.ssl.TrustManager[] $r14;
        c.a.a.a.a.e.n $r1;
        c.a.a.a.a.e.o $r6, $r13;
        java.lang.String $r5;
        java.io.InputStream $r4;

        r0 := @this: c.a.a.a.a.e.b;

        entermonitor r0;

     label01:
        r0.<c.a.a.a.a.e.b: boolean d> = 1;

     label02:
        $r1 = r0.<c.a.a.a.a.e.b: c.a.a.a.a.e.n b>;

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");

     label03:
        $r12 = new c.a.a.a.a.e.p;

        $r3 = $r12;

     label04:
        $r4 = interfaceinvoke $r1.<c.a.a.a.a.e.n: java.io.InputStream a()>();

        $r5 = interfaceinvoke $r1.<c.a.a.a.a.e.n: java.lang.String b()>();

        specialinvoke $r12.<c.a.a.a.a.e.p: void <init>(java.io.InputStream,java.lang.String)>($r4, $r5);

     label05:
        $r13 = new c.a.a.a.a.e.o;

        $r6 = $r13;

     label06:
        specialinvoke $r13.<c.a.a.a.a.e.o: void <init>(c.a.a.a.a.e.p,c.a.a.a.a.e.n)>($r3, $r1);

     label07:
        $r7 = newarray (javax.net.ssl.TrustManager)[1];

     label08:
        $r7[0] = $r6;

        $r14 = (javax.net.ssl.TrustManager[]) $r7;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, $r14, null);

        $r8 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label09:
        $r9 = r0.<c.a.a.a.a.e.b: c.a.a.a.q a>;

        interfaceinvoke $r9.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Custom SSL pinning enabled");

     label10:
        exitmonitor r0;

        return $r8;

     label11:
        $r10 := @caughtexception;

     label12:
        $r9 = r0.<c.a.a.a.a.e.b: c.a.a.a.q a>;

        interfaceinvoke $r9.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Exception while validating pinned certs", $r10);

     label13:
        $r8 = null;

        goto label10;

     label14:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label08 to label09 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label02 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public final c.a.a.a.a.e.e a(int, java.lang.String, java.util.Map)
    {
        java.net.HttpURLConnection $r8;
        javax.net.ssl.HttpsURLConnection $r9;
        c.a.a.a.a.e.e $r4;
        c.a.a.a.a.e.b r0;
        java.lang.IllegalArgumentException $r10;
        javax.net.ssl.SSLSocketFactory $r7;
        int[] $r3;
        java.util.Locale $r5;
        java.util.Map $r2;
        int $i0;
        c.a.a.a.a.e.n $r6;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: c.a.a.a.a.e.b;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.util.Map;

        $r3 = <c.a.a.a.a.e.c: int[] a>;

        $i0 = $i0 + -1;

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            default: goto label1;
        };

     label1:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported HTTP method!");

        throw $r10;

     label2:
        $r4 = staticinvoke <c.a.a.a.a.e.e: c.a.a.a.a.e.e a(java.lang.CharSequence,java.util.Map)>($r1, $r2);

     label3:
        if $r1 == null goto label8;

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("https");

        if $z0 == 0 goto label8;

        $z0 = 1;

     label4:
        if $z0 == 0 goto label9;

        $r6 = r0.<c.a.a.a.a.e.b: c.a.a.a.a.e.n b>;

        if $r6 == null goto label9;

        $r7 = specialinvoke r0.<c.a.a.a.a.e.b: javax.net.ssl.SSLSocketFactory b()>();

        if $r7 == null goto label9;

        $r8 = virtualinvoke $r4.<c.a.a.a.a.e.e: java.net.HttpURLConnection a()>();

        $r9 = (javax.net.ssl.HttpsURLConnection) $r8;

        virtualinvoke $r9.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r7);

        return $r4;

     label5:
        $r4 = staticinvoke <c.a.a.a.a.e.e: c.a.a.a.a.e.e b(java.lang.CharSequence,java.util.Map)>($r1, $r2);

        goto label3;

     label6:
        $r4 = staticinvoke <c.a.a.a.a.e.e: c.a.a.a.a.e.e a(java.lang.CharSequence)>($r1);

        goto label3;

     label7:
        $r4 = staticinvoke <c.a.a.a.a.e.e: c.a.a.a.a.e.e b(java.lang.CharSequence)>($r1);

        goto label3;

     label8:
        $z0 = 0;

        goto label4;

     label9:
        return $r4;
    }

    public final void a(c.a.a.a.a.e.n)
    {
        c.a.a.a.a.e.n $r1, $r2;
        c.a.a.a.a.e.b r0;

        r0 := @this: c.a.a.a.a.e.b;

        $r1 := @parameter0: c.a.a.a.a.e.n;

        $r2 = r0.<c.a.a.a.a.e.b: c.a.a.a.a.e.n b>;

        if $r2 == $r1 goto label1;

        r0.<c.a.a.a.a.e.b: c.a.a.a.a.e.n b> = $r1;

        specialinvoke r0.<c.a.a.a.a.e.b: void a()>();

     label1:
        return;
    }
}
