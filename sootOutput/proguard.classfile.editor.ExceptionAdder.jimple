public class proguard.classfile.editor.ExceptionAdder extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.constant.visitor.ConstantVisitor
{
    private final proguard.classfile.editor.ConstantAdder constantAdder;
    private final proguard.classfile.editor.ExceptionsAttributeEditor exceptionsAttributeEditor;

    public void <init>(proguard.classfile.ProgramClass, proguard.classfile.attribute.ExceptionsAttribute)
    {
        proguard.classfile.editor.ConstantAdder $r3;
        proguard.classfile.attribute.ExceptionsAttribute $r2;
        proguard.classfile.editor.ExceptionAdder r0;
        proguard.classfile.editor.ExceptionsAttributeEditor $r4;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.editor.ExceptionAdder;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.attribute.ExceptionsAttribute;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        $r3 = new proguard.classfile.editor.ConstantAdder;

        specialinvoke $r3.<proguard.classfile.editor.ConstantAdder: void <init>(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.editor.ExceptionAdder: proguard.classfile.editor.ConstantAdder constantAdder> = $r3;

        $r4 = new proguard.classfile.editor.ExceptionsAttributeEditor;

        specialinvoke $r4.<proguard.classfile.editor.ExceptionsAttributeEditor: void <init>(proguard.classfile.attribute.ExceptionsAttribute)>($r2);

        r0.<proguard.classfile.editor.ExceptionAdder: proguard.classfile.editor.ExceptionsAttributeEditor exceptionsAttributeEditor> = $r4;

        return;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.editor.ConstantAdder $r3;
        proguard.classfile.constant.ClassConstant $r2;
        proguard.classfile.Clazz $r1;
        proguard.classfile.editor.ExceptionAdder r0;
        int $i0;
        proguard.classfile.editor.ExceptionsAttributeEditor $r4;

        r0 := @this: proguard.classfile.editor.ExceptionAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r3 = r0.<proguard.classfile.editor.ExceptionAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        virtualinvoke $r3.<proguard.classfile.editor.ConstantAdder: void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant)>($r1, $r2);

        $r4 = r0.<proguard.classfile.editor.ExceptionAdder: proguard.classfile.editor.ExceptionsAttributeEditor exceptionsAttributeEditor>;

        $r3 = r0.<proguard.classfile.editor.ExceptionAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i0 = virtualinvoke $r3.<proguard.classfile.editor.ConstantAdder: int getConstantIndex()>();

        virtualinvoke $r4.<proguard.classfile.editor.ExceptionsAttributeEditor: void addException(int)>($i0);

        return;
    }
}
