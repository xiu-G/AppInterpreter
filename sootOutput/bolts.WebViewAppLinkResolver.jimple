public class bolts.WebViewAppLinkResolver extends java.lang.Object implements bolts.AppLinkResolver
{
    private static final java.lang.String KEY_AL_VALUE;
    private static final java.lang.String KEY_ANDROID;
    private static final java.lang.String KEY_APP_NAME;
    private static final java.lang.String KEY_CLASS;
    private static final java.lang.String KEY_PACKAGE;
    private static final java.lang.String KEY_SHOULD_FALLBACK;
    private static final java.lang.String KEY_URL;
    private static final java.lang.String KEY_WEB;
    private static final java.lang.String KEY_WEB_URL;
    private static final java.lang.String META_TAG_PREFIX;
    private static final java.lang.String PREFER_HEADER;
    private static final java.lang.String TAG_EXTRACTION_JAVASCRIPT;
    private final android.content.Context context;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        bolts.WebViewAppLinkResolver r0;

        r0 := @this: bolts.WebViewAppLinkResolver;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<bolts.WebViewAppLinkResolver: android.content.Context context> = $r1;

        return;
    }

    static java.util.Map access$000(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONArray $r0;
        java.util.Map $r1;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 = staticinvoke <bolts.WebViewAppLinkResolver: java.util.Map parseAlData(org.json.JSONArray)>($r0);

        return $r1;
    }

    static bolts.AppLink access$100(java.util.Map, android.net.Uri)
    {
        android.net.Uri $r1;
        bolts.AppLink $r2;
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <bolts.WebViewAppLinkResolver: bolts.AppLink makeAppLinkFromAlData(java.util.Map,android.net.Uri)>($r0, $r1);

        return $r2;
    }

    static android.content.Context access$200(bolts.WebViewAppLinkResolver)
    {
        android.content.Context r1;
        bolts.WebViewAppLinkResolver $r0;

        $r0 := @parameter0: bolts.WebViewAppLinkResolver;

        r1 = $r0.<bolts.WebViewAppLinkResolver: android.content.Context context>;

        return r1;
    }

    static java.lang.String access$300(java.net.URLConnection) throws java.io.IOException
    {
        java.lang.String $r1;
        java.net.URLConnection $r0;

        $r0 := @parameter0: java.net.URLConnection;

        $r1 = staticinvoke <bolts.WebViewAppLinkResolver: java.lang.String readFromConnection(java.net.URLConnection)>($r0);

        return $r1;
    }

    private static java.util.List getAlList(java.util.Map, java.lang.String)
    {
        java.util.List r3;
        java.util.Map r0;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (java.util.List) $r2;

        if r3 != null goto label1;

        r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label1:
        return r3;
    }

    private static bolts.AppLink makeAppLinkFromAlData(java.util.Map, android.net.Uri)
    {
        android.net.Uri $r1, $r12;
        java.lang.String[] $r15;
        java.util.ArrayList r3;
        java.util.Map r0, r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r11, $r13, $r14;
        boolean $z0;
        bolts.AppLink $r16;
        java.util.Iterator $r6;
        java.util.List r5, $r8, $r9, $r10;
        java.lang.Object $r4;
        bolts.AppLink$Target r2;

        r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: android.net.Uri;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("android");

        r5 = (java.util.List) $r4;

        if r5 != null goto label01;

        r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label01:
        $r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map) $r4;

        r5 = staticinvoke <bolts.WebViewAppLinkResolver: java.util.List getAlList(java.util.Map,java.lang.String)>(r7, "url");

        $r8 = staticinvoke <bolts.WebViewAppLinkResolver: java.util.List getAlList(java.util.Map,java.lang.String)>(r7, "package");

        $r9 = staticinvoke <bolts.WebViewAppLinkResolver: java.util.List getAlList(java.util.Map,java.lang.String)>(r7, "class");

        $r10 = staticinvoke <bolts.WebViewAppLinkResolver: java.util.List getAlList(java.util.Map,java.lang.String)>(r7, "app_name");

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i3 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label02;

        $i2 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i2 <= $i1 goto label08;

        $r4 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>($i1);

        r7 = (java.util.Map) $r4;

        $r4 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

     label04:
        $r11 = (java.lang.String) $r4;

        $r12 = staticinvoke <bolts.WebViewAppLinkResolver: android.net.Uri tryCreateUrl(java.lang.String)>($r11);

        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i2 <= $i1 goto label09;

        $r4 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i1);

        r7 = (java.util.Map) $r4;

        $r4 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

     label05:
        $r11 = (java.lang.String) $r4;

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i2 <= $i1 goto label10;

        $r4 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i1);

        r7 = (java.util.Map) $r4;

        $r4 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

     label06:
        $r13 = (java.lang.String) $r4;

        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i2 <= $i1 goto label11;

        $r4 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i1);

        r7 = (java.util.Map) $r4;

        $r4 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

     label07:
        $r14 = (java.lang.String) $r4;

        r2 = new bolts.AppLink$Target;

        specialinvoke r2.<bolts.AppLink$Target: void <init>(java.lang.String,java.lang.String,android.net.Uri,java.lang.String)>($r11, $r13, $r12, $r14);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        $i1 = $i1 + 1;

        goto label03;

     label08:
        $r4 = null;

        goto label04;

     label09:
        $r4 = null;

        goto label05;

     label10:
        $r4 = null;

        goto label06;

     label11:
        $r4 = null;

        goto label07;

     label12:
        $r12 = $r1;

        $r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("web");

        r5 = (java.util.List) $r4;

        if r5 == null goto label14;

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label14;

        $r4 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0);

        r0 = (java.util.Map) $r4;

        $r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("url");

        r5 = (java.util.List) $r4;

        $r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("should_fallback");

        $r8 = (java.util.List) $r4;

        if $r8 == null goto label13;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 <= 0 goto label13;

        $r4 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        r0 = (java.util.Map) $r4;

        $r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

        $r11 = (java.lang.String) $r4;

        $r15 = newarray (java.lang.String)[3];

        $r15[0] = "no";

        $r15[1] = "false";

        $r15[2] = "0";

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r15);

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>($r11);

        if $z0 == 0 goto label13;

        $r12 = null;

     label13:
        if $r12 == null goto label14;

        if r5 == null goto label14;

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label14;

        $r4 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0);

        r0 = (java.util.Map) $r4;

        $r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

        $r11 = (java.lang.String) $r4;

        $r12 = staticinvoke <bolts.WebViewAppLinkResolver: android.net.Uri tryCreateUrl(java.lang.String)>($r11);

     label14:
        $r16 = new bolts.AppLink;

        specialinvoke $r16.<bolts.AppLink: void <init>(android.net.Uri,java.util.List,android.net.Uri)>($r1, r3, $r12);

        return $r16;
    }

    private static java.util.Map parseAlData(org.json.JSONArray) throws org.json.JSONException
    {
        java.util.HashMap r1, $r8;
        java.lang.String[] $r4;
        java.util.ArrayList $r9;
        java.util.List $r10;
        org.json.JSONObject $r2;
        java.util.Map $r7;
        int i0, $i1, $i2;
        java.lang.Object r5, $r6;
        java.lang.String $r3;
        org.json.JSONArray $r0;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONArray;

        $r8 = new java.util.HashMap;

        r1 = $r8;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        i0 = 0;

     label01:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if i0 >= $i1 goto label12;

        $r2 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("property");

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r3 = $r4[0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("al");

        if $z0 != 0 goto label03;

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        r5 = r1;

        $i1 = 1;

     label04:
        $i2 = lengthof $r4;

        if $i1 >= $i2 goto label10;

        $r3 = $r4[$i1];

        $r7 = (java.util.Map) r5;

        $r6 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r6 = (java.util.List) $r6;

        if $r6 != null goto label05;

        $r9 = new java.util.ArrayList;

        $r6 = $r9;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r3 = $r4[$i1];

        $r7 = (java.util.Map) r5;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r6);

     label05:
        $r10 = (java.util.List) $r6;

        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i2 <= 0 goto label09;

        $r10 = (java.util.List) $r6;

        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i2 = $i2 + -1;

        $r10 = (java.util.List) $r6;

        r5 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i2);

        r5 = (java.util.Map) r5;

     label06:
        if r5 == null goto label07;

        $i2 = lengthof $r4;

        $i2 = $i2 + -1;

        if $i1 != $i2 goto label08;

     label07:
        $r8 = new java.util.HashMap;

        r5 = $r8;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r10 = (java.util.List) $r6;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r5);

     label08:
        $i1 = $i1 + 1;

        goto label04;

     label09:
        r5 = null;

        goto label06;

     label10:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("content");

        if $z0 == 0 goto label02;

        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean isNull(java.lang.String)>("content");

        if $z0 == 0 goto label11;

        $r7 = (java.util.Map) r5;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("value", null);

        goto label02;

     label11:
        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("content");

        $r7 = (java.util.Map) r5;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("value", $r3);

        goto label02;

     label12:
        return r1;
    }

    private static java.lang.String readFromConnection(java.net.URLConnection) throws java.io.IOException
    {
        java.net.HttpURLConnection r4;
        java.lang.Throwable $r6;
        byte[] r1;
        java.io.ByteArrayOutputStream r3, $r10;
        java.lang.String[] $r9;
        java.lang.Exception r2;
        java.net.URLConnection $r0;
        int i0, i1;
        java.lang.String $r7, r8, $r11;
        boolean $z0;
        java.io.InputStream $r5;

        $r0 := @parameter0: java.net.URLConnection;

        $z0 = $r0 instanceof java.net.HttpURLConnection;

        if $z0 == 0 goto label12;

        r4 = (java.net.HttpURLConnection) $r0;

     label01:
        $r5 = virtualinvoke $r0.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label02:
        $r10 = new java.io.ByteArrayOutputStream;

     label03:
        r3 = $r10;

     label04:
        specialinvoke $r10.<java.io.ByteArrayOutputStream: void <init>()>();

     label05:
        r1 = newarray (byte)[1024];

     label06:
        i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>(r1);

     label07:
        if i0 == -1 goto label13;

     label08:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, i0);

     label09:
        goto label06;

     label10:
        $r6 := @caughtexception;

        virtualinvoke $r5.<java.io.InputStream: void close()>();

        throw $r6;

     label11:
        r2 := @caughtexception;

        $r5 = virtualinvoke r4.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        goto label02;

     label12:
        $r5 = virtualinvoke $r0.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        goto label02;

     label13:
        $r7 = virtualinvoke $r0.<java.net.URLConnection: java.lang.String getContentEncoding()>();

     label14:
        r8 = $r7;

        if $r7 != null goto label22;

     label15:
        $r7 = virtualinvoke $r0.<java.net.URLConnection: java.lang.String getContentType()>();

        $r9 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i0 = lengthof $r9;

     label16:
        i1 = 0;

     label17:
        if i1 >= i0 goto label21;

     label18:
        $r7 = $r9[i1];

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("charset=");

     label19:
        if $z0 == 0 goto label25;

        r8 = "charset=";

     label20:
        i0 = virtualinvoke r8.<java.lang.String: int length()>();

        r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(i0);

     label21:
        if r8 != null goto label22;

        r8 = "UTF-8";

     label22:
        $r11 = new java.lang.String;

     label23:
        r1 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r11.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, r8);

     label24:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

        return $r11;

     label25:
        i1 = i1 + 1;

        goto label17;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch java.lang.Throwable from label15 to label16 with label10;
        catch java.lang.Throwable from label18 to label19 with label10;
        catch java.lang.Throwable from label20 to label21 with label10;
        catch java.lang.Throwable from label22 to label23 with label10;
        catch java.lang.Throwable from label23 to label24 with label10;
    }

    private static android.net.Uri tryCreateUrl(java.lang.String)
    {
        android.net.Uri $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r0);

        return $r1;
    }

    public bolts.Task getAppLinkFromUrlInBackground(android.net.Uri)
    {
        java.util.concurrent.Executor $r4;
        android.net.Uri $r1;
        bolts.Capture r2, r3;
        bolts.WebViewAppLinkResolver r0;
        bolts.WebViewAppLinkResolver$2 $r7;
        bolts.WebViewAppLinkResolver$3 $r5;
        bolts.Task $r6;
        bolts.WebViewAppLinkResolver$1 $r8;

        r0 := @this: bolts.WebViewAppLinkResolver;

        $r1 := @parameter0: android.net.Uri;

        r2 = new bolts.Capture;

        specialinvoke r2.<bolts.Capture: void <init>()>();

        r3 = new bolts.Capture;

        specialinvoke r3.<bolts.Capture: void <init>()>();

        $r5 = new bolts.WebViewAppLinkResolver$3;

        specialinvoke $r5.<bolts.WebViewAppLinkResolver$3: void <init>(bolts.WebViewAppLinkResolver,android.net.Uri,bolts.Capture,bolts.Capture)>(r0, $r1, r2, r3);

        $r6 = staticinvoke <bolts.Task: bolts.Task callInBackground(java.util.concurrent.Callable)>($r5);

        $r7 = new bolts.WebViewAppLinkResolver$2;

        specialinvoke $r7.<bolts.WebViewAppLinkResolver$2: void <init>(bolts.WebViewAppLinkResolver,bolts.Capture,android.net.Uri,bolts.Capture)>(r0, r3, $r1, r2);

        $r4 = <bolts.Task: java.util.concurrent.Executor UI_THREAD_EXECUTOR>;

        $r6 = virtualinvoke $r6.<bolts.Task: bolts.Task onSuccessTask(bolts.Continuation,java.util.concurrent.Executor)>($r7, $r4);

        $r8 = new bolts.WebViewAppLinkResolver$1;

        specialinvoke $r8.<bolts.WebViewAppLinkResolver$1: void <init>(bolts.WebViewAppLinkResolver,android.net.Uri)>(r0, $r1);

        $r6 = virtualinvoke $r6.<bolts.Task: bolts.Task onSuccess(bolts.Continuation)>($r8);

        return $r6;
    }

    public static void <clinit>()
    {
        <bolts.WebViewAppLinkResolver: java.lang.String TAG_EXTRACTION_JAVASCRIPT> = "javascript:boltsWebViewAppLinkResolverResult.setValue((function() {  var metaTags = document.getElementsByTagName(\'meta\');  var results = [];  for (var i = 0; i < metaTags.length; i++) {    var property = metaTags[i].getAttribute(\'property\');    if (property && property.substring(0, \'al:\'.length) === \'al:\') {      var tag = { \"property\": metaTags[i].getAttribute(\'property\') };      if (metaTags[i].hasAttribute(\'content\')) {        tag[\'content\'] = metaTags[i].getAttribute(\'content\');      }      results.push(tag);    }  }  return JSON.stringify(results);})())";

        <bolts.WebViewAppLinkResolver: java.lang.String PREFER_HEADER> = "Prefer-Html-Meta-Tags";

        <bolts.WebViewAppLinkResolver: java.lang.String META_TAG_PREFIX> = "al";

        <bolts.WebViewAppLinkResolver: java.lang.String KEY_WEB_URL> = "url";

        <bolts.WebViewAppLinkResolver: java.lang.String KEY_WEB> = "web";

        <bolts.WebViewAppLinkResolver: java.lang.String KEY_URL> = "url";

        <bolts.WebViewAppLinkResolver: java.lang.String KEY_SHOULD_FALLBACK> = "should_fallback";

        <bolts.WebViewAppLinkResolver: java.lang.String KEY_PACKAGE> = "package";

        <bolts.WebViewAppLinkResolver: java.lang.String KEY_CLASS> = "class";

        <bolts.WebViewAppLinkResolver: java.lang.String KEY_APP_NAME> = "app_name";

        <bolts.WebViewAppLinkResolver: java.lang.String KEY_ANDROID> = "android";

        <bolts.WebViewAppLinkResolver: java.lang.String KEY_AL_VALUE> = "value";

        return;
    }
}
