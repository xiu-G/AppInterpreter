class com.google.android.gms.tagmanager.cq extends java.lang.Object implements com.google.android.gms.tagmanager.o$f
{
    private final java.lang.String TM;
    private com.google.android.gms.tagmanager.bg Wi;
    private final java.util.concurrent.ExecutorService Wp;
    private final android.content.Context mContext;

    void <init>(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        com.google.android.gms.tagmanager.cq r0;
        java.lang.String $r2;
        java.util.concurrent.ExecutorService $r3;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.gms.tagmanager.cq: android.content.Context mContext> = $r1;

        r0.<com.google.android.gms.tagmanager.cq: java.lang.String TM> = $r2;

        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        r0.<com.google.android.gms.tagmanager.cq: java.util.concurrent.ExecutorService Wp> = $r3;

        return;
    }

    private com.google.android.gms.tagmanager.cr$c a(java.io.ByteArrayOutputStream)
    {
        java.lang.Throwable $r4;
        org.json.JSONException $r5;
        com.google.android.gms.tagmanager.cq r0;
        com.google.android.gms.tagmanager.cr$c $r3;
        java.io.ByteArrayOutputStream $r1;
        java.lang.String $r2;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        $r1 := @parameter0: java.io.ByteArrayOutputStream;

     label1:
        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("UTF-8");

        $r3 = staticinvoke <com.google.android.gms.tagmanager.ba: com.google.android.gms.tagmanager.cr$c br(java.lang.String)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void s(java.lang.String)>("Tried to convert binary resource to string for JSON parsing; not UTF-8 format");

        return null;

     label4:
        $r5 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("Resource is a UTF-8 encoded string but doesn\'t contain a JSON container");

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
        catch org.json.JSONException from label1 to label2 with label4;
    }

    private com.google.android.gms.tagmanager.cr$c k(byte[])
    {
        byte[] $r1;
        com.google.android.gms.tagmanager.cq r0;
        com.google.android.gms.tagmanager.cr$c $r3;
        com.google.android.gms.internal.kd $r4;
        com.google.android.gms.tagmanager.cr$g $r5;
        com.google.android.gms.internal.c$f $r2;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        $r1 := @parameter0: byte[];

     label1:
        $r2 = staticinvoke <com.google.android.gms.internal.c$f: com.google.android.gms.internal.c$f a(byte[])>($r1);

        $r3 = staticinvoke <com.google.android.gms.tagmanager.cr: com.google.android.gms.tagmanager.cr$c b(com.google.android.gms.internal.c$f)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("Resource doesn\'t contain a binary container");

        return null;

     label4:
        $r5 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("Resource doesn\'t contain a binary container");

        return null;

        catch com.google.android.gms.internal.kd from label1 to label2 with label3;
        catch com.google.android.gms.tagmanager.cr$g from label1 to label2 with label4;
    }

    public void a(com.google.android.gms.tagmanager.bg)
    {
        com.google.android.gms.tagmanager.bg $r1;
        com.google.android.gms.tagmanager.cq r0;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        $r1 := @parameter0: com.google.android.gms.tagmanager.bg;

        r0.<com.google.android.gms.tagmanager.cq: com.google.android.gms.tagmanager.bg Wi> = $r1;

        return;
    }

    public void b(com.google.android.gms.internal.jd$a)
    {
        com.google.android.gms.internal.jd$a $r1;
        com.google.android.gms.tagmanager.cq r0;
        com.google.android.gms.tagmanager.cq$2 $r3;
        java.util.concurrent.ExecutorService $r2;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        $r1 := @parameter0: com.google.android.gms.internal.jd$a;

        $r2 = r0.<com.google.android.gms.tagmanager.cq: java.util.concurrent.ExecutorService Wp>;

        $r3 = new com.google.android.gms.tagmanager.cq$2;

        specialinvoke $r3.<com.google.android.gms.tagmanager.cq$2: void <init>(com.google.android.gms.tagmanager.cq,com.google.android.gms.internal.jd$a)>(r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public com.google.android.gms.tagmanager.cr$c bP(int)
    {
        java.lang.Throwable $r9, $r10;
        android.content.Context $r3;
        byte[] $r8;
        java.io.ByteArrayOutputStream $r6;
        com.google.android.gms.tagmanager.cq r0;
        com.google.android.gms.tagmanager.cr$c $r7;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        android.content.res.Resources $r4;
        java.io.InputStream $r5;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        $i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Atttempting to load container from resource ID ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.android.gms.tagmanager.bh: void v(java.lang.String)>($r2);

        $r3 = r0.<com.google.android.gms.tagmanager.cq: android.content.Context mContext>;

     label1:
        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

     label2:
        $r6 = new java.io.ByteArrayOutputStream;

     label3:
        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <com.google.android.gms.tagmanager.cr: void b(java.io.InputStream,java.io.OutputStream)>($r5, $r6);

        $r7 = specialinvoke r0.<com.google.android.gms.tagmanager.cq: com.google.android.gms.tagmanager.cr$c a(java.io.ByteArrayOutputStream)>($r6);

     label4:
        if $r7 == null goto label5;

        return $r7;

     label5:
        $r8 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = specialinvoke r0.<com.google.android.gms.tagmanager.cq: com.google.android.gms.tagmanager.cr$c k(byte[])>($r8);

     label6:
        return $r7;

     label7:
        $r9 := @caughtexception;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading default container resource with ID ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>($r2);

        return null;

     label8:
        $r10 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("No default container resource found.");

        return null;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
        catch android.content.res.Resources$NotFoundException from label1 to label2 with label8;
        catch android.content.res.Resources$NotFoundException from label3 to label4 with label8;
        catch android.content.res.Resources$NotFoundException from label5 to label6 with label8;
    }

    boolean c(com.google.android.gms.internal.jd$a)
    {
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9, $r10;
        byte[] $r4;
        java.io.FileOutputStream $r2;
        java.io.File $r3;
        com.google.android.gms.internal.jd$a $r1;
        com.google.android.gms.tagmanager.cq r0;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        $r1 := @parameter0: com.google.android.gms.internal.jd$a;

        $r3 = virtualinvoke r0.<com.google.android.gms.tagmanager.cq: java.io.File jD()>();

        $r2 = new java.io.FileOutputStream;

     label01:
        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label02:
        $r4 = staticinvoke <com.google.android.gms.internal.ke: byte[] d(com.google.android.gms.internal.ke)>($r1);

        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>($r4);

     label03:
        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

     label04:
        return 1;

     label05:
        $r5 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void t(java.lang.String)>("Error opening resource file for writing");

        return 0;

     label06:
        $r6 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("error closing stream for writing resource to disk");

        return 1;

     label07:
        $r7 := @caughtexception;

     label08:
        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("Error writing resource to disk. Removing resource from disk.");

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label09:
        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

     label10:
        return 0;

     label11:
        $r8 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("error closing stream for writing resource to disk");

        return 0;

     label12:
        $r9 := @caughtexception;

     label13:
        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

     label14:
        throw $r9;

     label15:
        $r10 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("error closing stream for writing resource to disk");

        goto label14;

        catch java.io.FileNotFoundException from label01 to label02 with label05;
        catch java.io.IOException from label02 to label03 with label07;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.io.IOException from label03 to label04 with label06;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label13 to label14 with label15;
    }

    public void iN()
    {
        com.google.android.gms.tagmanager.cq r0;
        com.google.android.gms.tagmanager.cq$1 $r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        $r1 = r0.<com.google.android.gms.tagmanager.cq: java.util.concurrent.ExecutorService Wp>;

        $r2 = new com.google.android.gms.tagmanager.cq$1;

        specialinvoke $r2.<com.google.android.gms.tagmanager.cq$1: void <init>(com.google.android.gms.tagmanager.cq)>(r0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    void jC()
    {
        com.google.android.gms.tagmanager.ce$a $r4, $r5;
        java.lang.Throwable $r14, $r15, $r16, $r17, $r18, $r19;
        java.lang.IllegalStateException $r2;
        byte[] $r12;
        java.io.ByteArrayOutputStream $r11;
        com.google.android.gms.tagmanager.bg $r1;
        com.google.android.gms.tagmanager.cq r0;
        java.lang.String $r6, $r7;
        boolean $z0;
        com.google.android.gms.tagmanager.bg$a $r8;
        com.google.android.gms.tagmanager.ce $r3;
        java.io.FileInputStream $r9;
        java.io.File $r10;
        com.google.android.gms.internal.jd$a $r13;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        $r1 = r0.<com.google.android.gms.tagmanager.cq: com.google.android.gms.tagmanager.bg Wi>;

        if $r1 != null goto label01;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("callback must be set before execute");

        throw $r2;

     label01:
        $r1 = r0.<com.google.android.gms.tagmanager.cq: com.google.android.gms.tagmanager.bg Wi>;

        interfaceinvoke $r1.<com.google.android.gms.tagmanager.bg: void iM()>();

        staticinvoke <com.google.android.gms.tagmanager.bh: void v(java.lang.String)>("Start loading resource from disk ...");

        $r3 = staticinvoke <com.google.android.gms.tagmanager.ce: com.google.android.gms.tagmanager.ce ju()>();

        $r4 = virtualinvoke $r3.<com.google.android.gms.tagmanager.ce: com.google.android.gms.tagmanager.ce$a jv()>();

        $r5 = <com.google.android.gms.tagmanager.ce$a: com.google.android.gms.tagmanager.ce$a VX>;

        if $r4 == $r5 goto label02;

        $r3 = staticinvoke <com.google.android.gms.tagmanager.ce: com.google.android.gms.tagmanager.ce ju()>();

        $r4 = virtualinvoke $r3.<com.google.android.gms.tagmanager.ce: com.google.android.gms.tagmanager.ce$a jv()>();

        $r5 = <com.google.android.gms.tagmanager.ce$a: com.google.android.gms.tagmanager.ce$a VY>;

        if $r4 != $r5 goto label03;

     label02:
        $r6 = r0.<com.google.android.gms.tagmanager.cq: java.lang.String TM>;

        $r3 = staticinvoke <com.google.android.gms.tagmanager.ce: com.google.android.gms.tagmanager.ce ju()>();

        $r7 = virtualinvoke $r3.<com.google.android.gms.tagmanager.ce: java.lang.String getContainerId()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label03;

        $r1 = r0.<com.google.android.gms.tagmanager.cq: com.google.android.gms.tagmanager.bg Wi>;

        $r8 = <com.google.android.gms.tagmanager.bg$a: com.google.android.gms.tagmanager.bg$a VA>;

        interfaceinvoke $r1.<com.google.android.gms.tagmanager.bg: void a(com.google.android.gms.tagmanager.bg$a)>($r8);

        return;

     label03:
        $r9 = new java.io.FileInputStream;

     label04:
        $r10 = virtualinvoke r0.<com.google.android.gms.tagmanager.cq: java.io.File jD()>();

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>($r10);

     label05:
        $r11 = new java.io.ByteArrayOutputStream;

     label06:
        specialinvoke $r11.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <com.google.android.gms.tagmanager.cr: void b(java.io.InputStream,java.io.OutputStream)>($r9, $r11);

     label07:
        $r1 = r0.<com.google.android.gms.tagmanager.cq: com.google.android.gms.tagmanager.bg Wi>;

     label08:
        $r12 = virtualinvoke $r11.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r13 = staticinvoke <com.google.android.gms.internal.jd$a: com.google.android.gms.internal.jd$a l(byte[])>($r12);

        interfaceinvoke $r1.<com.google.android.gms.tagmanager.bg: void i(java.lang.Object)>($r13);

     label09:
        virtualinvoke $r9.<java.io.FileInputStream: void close()>();

     label10:
        staticinvoke <com.google.android.gms.tagmanager.bh: void v(java.lang.String)>("Load resource from disk finished.");

        return;

     label11:
        $r14 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void s(java.lang.String)>("resource not on disk");

        $r1 = r0.<com.google.android.gms.tagmanager.cq: com.google.android.gms.tagmanager.bg Wi>;

        $r8 = <com.google.android.gms.tagmanager.bg$a: com.google.android.gms.tagmanager.bg$a VA>;

        interfaceinvoke $r1.<com.google.android.gms.tagmanager.bg: void a(com.google.android.gms.tagmanager.bg$a)>($r8);

        return;

     label12:
        $r15 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("error closing stream for reading resource from disk");

        goto label10;

     label13:
        $r16 := @caughtexception;

     label14:
        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("error reading resource from disk");

        $r1 = r0.<com.google.android.gms.tagmanager.cq: com.google.android.gms.tagmanager.bg Wi>;

        $r8 = <com.google.android.gms.tagmanager.bg$a: com.google.android.gms.tagmanager.bg$a VB>;

        interfaceinvoke $r1.<com.google.android.gms.tagmanager.bg: void a(com.google.android.gms.tagmanager.bg$a)>($r8);

     label15:
        virtualinvoke $r9.<java.io.FileInputStream: void close()>();

     label16:
        goto label10;

     label17:
        $r17 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("error closing stream for reading resource from disk");

        goto label10;

     label18:
        $r18 := @caughtexception;

     label19:
        virtualinvoke $r9.<java.io.FileInputStream: void close()>();

     label20:
        throw $r18;

     label21:
        $r19 := @caughtexception;

        staticinvoke <com.google.android.gms.tagmanager.bh: void w(java.lang.String)>("error closing stream for reading resource from disk");

        goto label20;

        catch java.io.FileNotFoundException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label13;
        catch java.io.IOException from label08 to label09 with label13;
        catch java.lang.Throwable from label05 to label09 with label18;
        catch java.io.IOException from label09 to label10 with label12;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label19 to label20 with label21;
    }

    java.io.File jD()
    {
        android.content.Context $r3;
        com.google.android.gms.tagmanager.cq r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.io.File $r4, $r5;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resource_");

        $r2 = r0.<com.google.android.gms.tagmanager.cq: java.lang.String TM>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<com.google.android.gms.tagmanager.cq: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.io.File getDir(java.lang.String,int)>("google_tagmanager", 0);

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r2);

        return $r5;
    }

    public void release()
    {
        java.lang.Throwable $r2;
        com.google.android.gms.tagmanager.cq r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.google.android.gms.tagmanager.cq;

        entermonitor r0;

     label1:
        $r1 = r0.<com.google.android.gms.tagmanager.cq: java.util.concurrent.ExecutorService Wp>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void shutdown()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
