public class com.tencent.open.b.b extends android.webkit.WebView
{

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.tencent.open.b.b r0;

        r0 := @this: com.tencent.open.b.b;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context)>($r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        com.tencent.open.b.b r0;
        android.util.AttributeSet $r2;

        r0 := @this: com.tencent.open.b.b;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.tencent.open.b.b r0;

        r0 := @this: com.tencent.open.b.b;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    protected void onAttachedToWindow()
    {
        java.lang.Object[] $r5;
        android.webkit.WebSettings $r1;
        java.lang.Class[] $r3;
        java.lang.Class $r2;
        com.tencent.open.b.b r0;
        java.lang.reflect.Method $r4;
        java.lang.Exception $r6;

        r0 := @this: com.tencent.open.b.b;

        specialinvoke r0.<android.webkit.WebView: void onAttachedToWindow()>();

        $r1 = virtualinvoke r0.<com.tencent.open.b.b: android.webkit.WebSettings getSettings()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[1];

     label1:
        $r3[0] = class "Ljava/lang/String;";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("removeJavascriptInterface", $r3);

     label2:
        if $r4 == null goto label6;

        $r5 = newarray (java.lang.Object)[1];

     label3:
        $r5[0] = "searchBoxJavaBridge_";

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
