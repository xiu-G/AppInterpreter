public class b.h.j.a extends java.lang.Object implements android.text.Spannable
{
    private final android.text.Spannable b;
    private final b.h.j.a$a c;

    static void <clinit>()
    {
        return;
    }

    public b.h.j.a$a a()
    {
        b.h.j.a r0;
        b.h.j.a$a r1;

        r0 := @this: b.h.j.a;

        r1 = r0.<b.h.j.a: b.h.j.a$a c>;

        return r1;
    }

    public char charAt(int)
    {
        android.text.Spannable $r1;
        int $i1;
        b.h.j.a r0;
        char $c0;

        r0 := @this: b.h.j.a;

        $i1 := @parameter0: int;

        $r1 = r0.<b.h.j.a: android.text.Spannable b>;

        $c0 = interfaceinvoke $r1.<android.text.Spannable: char charAt(int)>($i1);

        return $c0;
    }

    public int getSpanEnd(java.lang.Object)
    {
        android.text.Spannable $r1;
        int $i0;
        b.h.j.a r0;
        java.lang.Object $r2;

        r0 := @this: b.h.j.a;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.h.j.a: android.text.Spannable b>;

        $i0 = interfaceinvoke $r1.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r2);

        return $i0;
    }

    public int getSpanFlags(java.lang.Object)
    {
        android.text.Spannable $r1;
        int $i0;
        b.h.j.a r0;
        java.lang.Object $r2;

        r0 := @this: b.h.j.a;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.h.j.a: android.text.Spannable b>;

        $i0 = interfaceinvoke $r1.<android.text.Spannable: int getSpanFlags(java.lang.Object)>($r2);

        return $i0;
    }

    public int getSpanStart(java.lang.Object)
    {
        android.text.Spannable $r1;
        int $i0;
        b.h.j.a r0;
        java.lang.Object $r2;

        r0 := @this: b.h.j.a;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.h.j.a: android.text.Spannable b>;

        $i0 = interfaceinvoke $r1.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r2);

        return $i0;
    }

    public java.lang.Object[] getSpans(int, int, java.lang.Class)
    {
        java.lang.Object[] $r3;
        android.text.Spannable $r2;
        int $i0, $i1;
        b.h.j.a r0;
        java.lang.Class $r1;

        r0 := @this: b.h.j.a;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.Class;

        $r2 = r0.<b.h.j.a: android.text.Spannable b>;

        $r3 = interfaceinvoke $r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i0, $r1);

        return $r3;
    }

    public int length()
    {
        int $i0;
        b.h.j.a r0;
        android.text.Spannable $r1;

        r0 := @this: b.h.j.a;

        $r1 = r0.<b.h.j.a: android.text.Spannable b>;

        $i0 = interfaceinvoke $r1.<android.text.Spannable: int length()>();

        return $i0;
    }

    public int nextSpanTransition(int, int, java.lang.Class)
    {
        android.text.Spannable $r2;
        int $i0, $i1;
        b.h.j.a r0;
        java.lang.Class $r1;

        r0 := @this: b.h.j.a;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.Class;

        $r2 = r0.<b.h.j.a: android.text.Spannable b>;

        $i1 = interfaceinvoke $r2.<android.text.Spannable: int nextSpanTransition(int,int,java.lang.Class)>($i1, $i0, $r1);

        return $i1;
    }

    public void removeSpan(java.lang.Object)
    {
        android.text.Spannable $r2;
        b.h.j.a r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @this: b.h.j.a;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof android.text.style.MetricAffectingSpan;

        if $z0 != 0 goto label1;

        $r2 = r0.<b.h.j.a: android.text.Spannable b>;

        interfaceinvoke $r2.<android.text.Spannable: void removeSpan(java.lang.Object)>($r1);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MetricAffectingSpan can not be removed from PrecomputedText.");

        throw $r3;
    }

    public void setSpan(java.lang.Object, int, int, int)
    {
        android.text.Spannable $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i1, $i2;
        b.h.j.a r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: b.h.j.a;

        $r1 := @parameter0: java.lang.Object;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 = $r1 instanceof android.text.style.MetricAffectingSpan;

        if $z0 != 0 goto label1;

        $r2 = r0.<b.h.j.a: android.text.Spannable b>;

        interfaceinvoke $r2.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r1, $i2, $i0, $i1);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MetricAffectingSpan can not be set to PrecomputedText.");

        throw $r3;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        java.lang.CharSequence $r2;
        android.text.Spannable $r1;
        int $i0, $i1;
        b.h.j.a r0;

        r0 := @this: b.h.j.a;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = r0.<b.h.j.a: android.text.Spannable b>;

        $r2 = interfaceinvoke $r1.<android.text.Spannable: java.lang.CharSequence subSequence(int,int)>($i1, $i0);

        return $r2;
    }

    public java.lang.String toString()
    {
        b.h.j.a r0;
        java.lang.String $r1;
        android.text.Spannable $r2;

        r0 := @this: b.h.j.a;

        $r2 = r0.<b.h.j.a: android.text.Spannable b>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }
}
