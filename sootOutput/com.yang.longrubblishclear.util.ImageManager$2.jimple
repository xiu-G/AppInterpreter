class com.yang.longrubblishclear.util.ImageManager$2 extends java.util.LinkedHashMap
{
    final com.yang.longrubblishclear.util.ImageManager this$0;

    void <init>(com.yang.longrubblishclear.util.ImageManager, int, float, boolean)
    {
        com.yang.longrubblishclear.util.ImageManager $r1;
        int $i0;
        float $f0;
        com.yang.longrubblishclear.util.ImageManager$2 r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$2;

        $r1 := @parameter0: com.yang.longrubblishclear.util.ImageManager;

        $i0 := @parameter1: int;

        $f0 := @parameter2: float;

        $z0 := @parameter3: boolean;

        r0.<com.yang.longrubblishclear.util.ImageManager$2: com.yang.longrubblishclear.util.ImageManager this$0> = $r1;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>($i0, $f0, $z0);

        return;
    }

    protected boolean removeEldestEntry(java.util.Map$Entry)
    {
        java.util.Map$Entry r1;
        java.util.concurrent.ConcurrentHashMap $r3;
        android.graphics.Bitmap $r6;
        int $i0, $i1;
        java.lang.Object $r4;
        com.yang.longrubblishclear.util.ImageManager$2 r0;
        java.lang.ref.SoftReference $r2;
        java.lang.String $r5;

        r0 := @this: com.yang.longrubblishclear.util.ImageManager$2;

        r1 := @parameter0: java.util.Map$Entry;

        $i0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ImageManager$2: int size()>();

        $i1 = staticinvoke <com.yang.longrubblishclear.util.ImageManager: int access$7()>();

        if $i0 <= $i1 goto label1;

        $r3 = staticinvoke <com.yang.longrubblishclear.util.ImageManager: java.util.concurrent.ConcurrentHashMap access$4()>();

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r4;

        $r2 = new java.lang.ref.SoftReference;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (android.graphics.Bitmap) $r4;

        specialinvoke $r2.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r6);

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r2);

        return 1;

     label1:
        return 0;
    }
}
