class b.q.g0 extends b.q.f0
{
    private static java.lang.reflect.Method i;
    private static boolean j;

    void <init>()
    {
        b.q.g0 r0;

        r0 := @this: b.q.g0;

        specialinvoke r0.<b.q.f0: void <init>()>();

        return;
    }

    private void l()
    {
        java.lang.Throwable $r5;
        b.q.g0 r0;
        java.lang.Class[] $r3;
        java.lang.Class $r2, $r4;
        java.lang.reflect.Method $r1;
        boolean $z0;

        r0 := @this: b.q.g0;

        $z0 = <b.q.g0: boolean j>;

        if $z0 != 0 goto label7;

        $r2 = class "Landroid/view/View;";

        $r3 = newarray (java.lang.Class)[4];

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[0] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[1] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[2] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[3] = $r4;

     label1:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setLeftTopRightBottom", $r3);

     label2:
        <b.q.g0: java.lang.reflect.Method i> = $r1;

     label3:
        virtualinvoke $r1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtilsApi22", "Failed to retrieve setLeftTopRightBottom method", $r5);

     label6:
        <b.q.g0: boolean j> = 1;

     label7:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }

    public void d(android.view.View, int, int, int, int)
    {
        java.lang.Throwable $r2, $r6;
        java.lang.Object[] $r4;
        b.q.g0 r0;
        java.lang.RuntimeException $r7;
        java.lang.Integer $r5;
        java.lang.reflect.InvocationTargetException $r8;
        int $i0, $i1, $i2, $i3;
        android.view.View $r3;
        java.lang.reflect.Method $r1;

        r0 := @this: b.q.g0;

        $r3 := @parameter0: android.view.View;

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        specialinvoke r0.<b.q.g0: void l()>();

        $r1 = <b.q.g0: java.lang.reflect.Method i>;

        if $r1 == null goto label13;

        $r4 = newarray (java.lang.Object)[4];

     label01:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label02:
        $r4[0] = $r5;

     label03:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

     label04:
        $r4[1] = $r5;

     label05:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label06:
        $r4[2] = $r5;

     label07:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label08:
        $r4[3] = $r5;

     label09:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r4);

     label10:
        return;

     label11:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = (java.lang.reflect.InvocationTargetException) $r6;

        $r6 = virtualinvoke $r8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label12:
        $r2 := @caughtexception;

     label13:
        return;

        catch java.lang.IllegalAccessException from label01 to label02 with label12;
        catch java.lang.IllegalAccessException from label03 to label04 with label12;
        catch java.lang.IllegalAccessException from label05 to label06 with label12;
        catch java.lang.IllegalAccessException from label07 to label08 with label12;
        catch java.lang.IllegalAccessException from label09 to label10 with label12;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label11;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label11;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label11;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label11;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label11;
    }
}
