public class proguard.obfuscate.NameAndTypeShrinker extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor
{
    private int[] constantIndexMap;
    private final proguard.classfile.editor.ConstantPoolRemapper constantPoolRemapper;

    public void <init>()
    {
        proguard.classfile.editor.ConstantPoolRemapper $r1;
        proguard.obfuscate.NameAndTypeShrinker r0;

        r0 := @this: proguard.obfuscate.NameAndTypeShrinker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new proguard.classfile.editor.ConstantPoolRemapper;

        specialinvoke $r1.<proguard.classfile.editor.ConstantPoolRemapper: void <init>()>();

        r0.<proguard.obfuscate.NameAndTypeShrinker: proguard.classfile.editor.ConstantPoolRemapper constantPoolRemapper> = $r1;

        return;
    }

    private int shrinkConstantPool(proguard.classfile.constant.Constant[], int)
    {
        proguard.classfile.constant.Constant $r3;
        proguard.obfuscate.NameAndTypeShrinker r0;
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        proguard.classfile.constant.Constant[] $r1;
        boolean $z0;

        r0 := @this: proguard.obfuscate.NameAndTypeShrinker;

        $r1 := @parameter0: proguard.classfile.constant.Constant[];

        $i0 := @parameter1: int;

        $r2 = r0.<proguard.obfuscate.NameAndTypeShrinker: int[] constantIndexMap>;

        if $r2 == null goto label01;

        $r2 = r0.<proguard.obfuscate.NameAndTypeShrinker: int[] constantIndexMap>;

        $i1 = lengthof $r2;

        if $i1 >= $i0 goto label02;

     label01:
        $r2 = newarray (int)[$i0];

        r0.<proguard.obfuscate.NameAndTypeShrinker: int[] constantIndexMap> = $r2;

     label02:
        $i2 = 1;

        $z0 = 0;

        $i1 = 1;

     label03:
        if $i2 >= $i0 goto label08;

        $r2 = r0.<proguard.obfuscate.NameAndTypeShrinker: int[] constantIndexMap>;

        $r2[$i2] = $i1;

        $r3 = $r1[$i2];

        if $r3 == null goto label05;

        $i3 = virtualinvoke $r3.<proguard.classfile.constant.Constant: int getTag()>();

        if $i3 != 12 goto label04;

        $z0 = staticinvoke <proguard.obfuscate.NameAndTypeUsageMarker: boolean isUsed(proguard.classfile.VisitorAccepter)>($r3);

        if $z0 == 0 goto label07;

     label04:
        $z0 = 1;

     label05:
        if $z0 == 0 goto label06;

        $r1[$i1] = $r3;

        $i1 = $i1 + 1;

     label06:
        $i2 = $i2 + 1;

        goto label03;

     label07:
        $z0 = 0;

        goto label05;

     label08:
        $i2 = $i1;

     label09:
        if $i2 >= $i0 goto label10;

        $r1[$i2] = null;

        $i2 = $i2 + 1;

        goto label09;

     label10:
        return $i1;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.obfuscate.NameAndTypeShrinker r0;

        r0 := @this: proguard.obfuscate.NameAndTypeShrinker;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.editor.ConstantPoolRemapper $r3;
        proguard.obfuscate.NameAndTypeShrinker r0;
        int[] $r4;
        int $i0;
        proguard.classfile.constant.Constant[] $r2;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.obfuscate.NameAndTypeShrinker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = $r1.<proguard.classfile.ProgramClass: proguard.classfile.constant.Constant[] constantPool>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2constantPoolCount>;

        $i0 = specialinvoke r0.<proguard.obfuscate.NameAndTypeShrinker: int shrinkConstantPool(proguard.classfile.constant.Constant[],int)>($r2, $i0);

        $r1.<proguard.classfile.ProgramClass: int u2constantPoolCount> = $i0;

        $r3 = r0.<proguard.obfuscate.NameAndTypeShrinker: proguard.classfile.editor.ConstantPoolRemapper constantPoolRemapper>;

        $r4 = r0.<proguard.obfuscate.NameAndTypeShrinker: int[] constantIndexMap>;

        virtualinvoke $r3.<proguard.classfile.editor.ConstantPoolRemapper: void setConstantIndexMap(int[])>($r4);

        $r3 = r0.<proguard.obfuscate.NameAndTypeShrinker: proguard.classfile.editor.ConstantPoolRemapper constantPoolRemapper>;

        virtualinvoke $r3.<proguard.classfile.editor.ConstantPoolRemapper: void visitProgramClass(proguard.classfile.ProgramClass)>($r1);

        return;
    }
}
