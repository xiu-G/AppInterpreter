public class twitter4j.auth.OAuth2Token extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.lang.String accessToken;
    private java.lang.String tokenType;

    public void <init>(java.lang.String, java.lang.String)
    {
        twitter4j.auth.OAuth2Token r0;
        java.lang.String $r1, $r2;

        r0 := @this: twitter4j.auth.OAuth2Token;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.auth.OAuth2Token: java.lang.String tokenType> = $r1;

        r0.<twitter4j.auth.OAuth2Token: java.lang.String accessToken> = $r2;

        return;
    }

    void <init>(twitter4j.internal.http.HttpResponse)
    {
        java.lang.Throwable $r4;
        twitter4j.auth.OAuth2Token r0;
        twitter4j.internal.http.HttpResponse $r1;
        twitter4j.internal.org.json.JSONObject $r2;
        java.lang.String $r3;

        r0 := @this: twitter4j.auth.OAuth2Token;

        $r1 := @parameter0: twitter4j.internal.http.HttpResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        $r3 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("token_type", $r2);

        r0.<twitter4j.auth.OAuth2Token: java.lang.String tokenType> = $r3;

     label1:
        $r3 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("access_token", $r2);

        $r3 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r3, "UTF-8");

     label2:
        r0.<twitter4j.auth.OAuth2Token: java.lang.String accessToken> = $r3;

        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.auth.OAuth2Token r0, $r2;
        java.lang.Object $r1;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: twitter4j.auth.OAuth2Token;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label6;

        $z0 = $r1 instanceof twitter4j.auth.OAuth2Token;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (twitter4j.auth.OAuth2Token) $r1;

        $r3 = r0.<twitter4j.auth.OAuth2Token: java.lang.String tokenType>;

        if $r3 == null goto label4;

        $r3 = r0.<twitter4j.auth.OAuth2Token: java.lang.String tokenType>;

        $r4 = $r2.<twitter4j.auth.OAuth2Token: java.lang.String tokenType>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

     label2:
        $r3 = r0.<twitter4j.auth.OAuth2Token: java.lang.String accessToken>;

        if $r3 == null goto label5;

        $r3 = r0.<twitter4j.auth.OAuth2Token: java.lang.String accessToken>;

        $r4 = $r2.<twitter4j.auth.OAuth2Token: java.lang.String accessToken>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

     label3:
        return 1;

     label4:
        $r3 = $r2.<twitter4j.auth.OAuth2Token: java.lang.String tokenType>;

        if $r3 == null goto label2;

        return 0;

     label5:
        $r3 = $r2.<twitter4j.auth.OAuth2Token: java.lang.String accessToken>;

        if $r3 == null goto label3;

     label6:
        return 0;
    }

    java.lang.String generateAuthorizationHeader()
    {
        java.lang.Throwable $r4;
        twitter4j.auth.OAuth2Token r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2;

        r0 := @this: twitter4j.auth.OAuth2Token;

        $r1 = "";

        $r2 = r0.<twitter4j.auth.OAuth2Token: java.lang.String accessToken>;

     label1:
        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

     label2:
        $r1 = $r2;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bearer ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label4:
        $r4 := @caughtexception;

        goto label3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public java.lang.String getAccessToken()
    {
        twitter4j.auth.OAuth2Token r0;
        java.lang.String r1;

        r0 := @this: twitter4j.auth.OAuth2Token;

        r1 = r0.<twitter4j.auth.OAuth2Token: java.lang.String accessToken>;

        return r1;
    }

    public java.lang.String getTokenType()
    {
        twitter4j.auth.OAuth2Token r0;
        java.lang.String r1;

        r0 := @this: twitter4j.auth.OAuth2Token;

        r1 = r0.<twitter4j.auth.OAuth2Token: java.lang.String tokenType>;

        return r1;
    }

    public int hashCode()
    {
        twitter4j.auth.OAuth2Token r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: twitter4j.auth.OAuth2Token;

        $i0 = 0;

        $r1 = r0.<twitter4j.auth.OAuth2Token: java.lang.String tokenType>;

        if $r1 == null goto label3;

        $r1 = r0.<twitter4j.auth.OAuth2Token: java.lang.String tokenType>;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label1:
        $i1 = $i1 * 31;

        $r1 = r0.<twitter4j.auth.OAuth2Token: java.lang.String accessToken>;

        if $r1 == null goto label2;

        $r1 = r0.<twitter4j.auth.OAuth2Token: java.lang.String accessToken>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label2:
        $i0 = $i1 + $i0;

        return $i0;

     label3:
        $i1 = 0;

        goto label1;
    }

    public java.lang.String toString()
    {
        twitter4j.auth.OAuth2Token r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: twitter4j.auth.OAuth2Token;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("OAuth2Token{tokenType=\'");

        $r2 = r0.<twitter4j.auth.OAuth2Token: java.lang.String tokenType>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", accessToken=\'");

        $r2 = r0.<twitter4j.auth.OAuth2Token: java.lang.String accessToken>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <twitter4j.auth.OAuth2Token: long serialVersionUID> = 358222644448390610L;

        return;
    }
}
