public class proguard.classfile.visitor.SimpleClassPrinter extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor
{
    private final boolean printAccessModifiers;
    private final java.io.PrintStream ps;

    public void <init>()
    {
        proguard.classfile.visitor.SimpleClassPrinter r0;

        r0 := @this: proguard.classfile.visitor.SimpleClassPrinter;

        specialinvoke r0.<proguard.classfile.visitor.SimpleClassPrinter: void <init>(boolean)>(1);

        return;
    }

    public void <init>(boolean)
    {
        proguard.classfile.visitor.SimpleClassPrinter r0;
        java.io.PrintStream $r1;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.SimpleClassPrinter;

        $z0 := @parameter0: boolean;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke r0.<proguard.classfile.visitor.SimpleClassPrinter: void <init>(boolean,java.io.PrintStream)>($z0, $r1);

        return;
    }

    public void <init>(boolean, java.io.PrintStream)
    {
        proguard.classfile.visitor.SimpleClassPrinter r0;
        java.io.PrintStream $r1;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.SimpleClassPrinter;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.io.PrintStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers> = $z0;

        r0.<proguard.classfile.visitor.SimpleClassPrinter: java.io.PrintStream ps> = $r1;

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        java.io.PrintStream $r2;
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.visitor.SimpleClassPrinter r0;
        int $i0;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.SimpleClassPrinter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 = r0.<proguard.classfile.visitor.SimpleClassPrinter: java.io.PrintStream ps>;

        $z0 = r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers>;

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r1.<proguard.classfile.LibraryClass: int getAccessFlags()>();

     label1:
        $r3 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullClassDescription(int,java.lang.String)>($i0, $r3);

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label2:
        $i0 = 0;

        goto label1;
    }

    public void visitLibraryField(proguard.classfile.LibraryClass, proguard.classfile.LibraryField)
    {
        java.io.PrintStream $r3;
        proguard.classfile.LibraryField $r2;
        proguard.classfile.visitor.SimpleClassPrinter r0;
        proguard.classfile.LibraryClass $r1;
        java.lang.StringBuffer $r4;
        int $i0;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.SimpleClassPrinter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryField;

        $r3 = r0.<proguard.classfile.visitor.SimpleClassPrinter: java.io.PrintStream ps>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $z0 = r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r1.<proguard.classfile.LibraryClass: int getAccessFlags()>();

     label1:
        $r5 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullClassDescription(int,java.lang.String)>($i0, $r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $z0 = r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers>;

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<proguard.classfile.LibraryField: int getAccessFlags()>();

     label2:
        $r5 = virtualinvoke $r2.<proguard.classfile.LibraryField: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r6 = virtualinvoke $r2.<proguard.classfile.LibraryField: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullFieldDescription(int,java.lang.String,java.lang.String)>($i0, $r5, $r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;

     label3:
        $i0 = 0;

        goto label1;

     label4:
        $i0 = 0;

        goto label2;
    }

    public void visitLibraryMethod(proguard.classfile.LibraryClass, proguard.classfile.LibraryMethod)
    {
        java.io.PrintStream $r3;
        proguard.classfile.visitor.SimpleClassPrinter r0;
        proguard.classfile.LibraryClass $r1;
        java.lang.StringBuffer $r4;
        int $i0;
        proguard.classfile.LibraryMethod $r2;
        java.lang.String $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.SimpleClassPrinter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryMethod;

        $r3 = r0.<proguard.classfile.visitor.SimpleClassPrinter: java.io.PrintStream ps>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $z0 = r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r1.<proguard.classfile.LibraryClass: int getAccessFlags()>();

     label1:
        $r5 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullClassDescription(int,java.lang.String)>($i0, $r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r5 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $z0 = r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers>;

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<proguard.classfile.LibraryMethod: int getAccessFlags()>();

     label2:
        $r6 = virtualinvoke $r2.<proguard.classfile.LibraryMethod: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r7 = virtualinvoke $r2.<proguard.classfile.LibraryMethod: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullMethodDescription(java.lang.String,int,java.lang.String,java.lang.String)>($r5, $i0, $r6, $r7);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;

     label3:
        $i0 = 0;

        goto label1;

     label4:
        $i0 = 0;

        goto label2;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        java.io.PrintStream $r2;
        proguard.classfile.visitor.SimpleClassPrinter r0;
        int $i0;
        java.lang.String $r3;
        proguard.classfile.ProgramClass $r1;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.SimpleClassPrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = r0.<proguard.classfile.visitor.SimpleClassPrinter: java.io.PrintStream ps>;

        $z0 = r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers>;

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r1.<proguard.classfile.ProgramClass: int getAccessFlags()>();

     label1:
        $r3 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullClassDescription(int,java.lang.String)>($i0, $r3);

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label2:
        $i0 = 0;

        goto label1;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        java.io.PrintStream $r3;
        proguard.classfile.visitor.SimpleClassPrinter r0;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.ProgramField $r2;
        java.lang.StringBuffer $r4;
        int $i0;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.SimpleClassPrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r3 = r0.<proguard.classfile.visitor.SimpleClassPrinter: java.io.PrintStream ps>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $z0 = r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r1.<proguard.classfile.ProgramClass: int getAccessFlags()>();

     label1:
        $r5 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullClassDescription(int,java.lang.String)>($i0, $r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $z0 = r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers>;

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<proguard.classfile.ProgramField: int getAccessFlags()>();

     label2:
        $r5 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r6 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullFieldDescription(int,java.lang.String,java.lang.String)>($i0, $r5, $r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;

     label3:
        $i0 = 0;

        goto label1;

     label4:
        $i0 = 0;

        goto label2;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        java.io.PrintStream $r3;
        proguard.classfile.visitor.SimpleClassPrinter r0;
        proguard.classfile.ProgramClass $r1;
        java.lang.StringBuffer $r4;
        proguard.classfile.ProgramMethod $r2;
        int $i0;
        java.lang.String $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.SimpleClassPrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r3 = r0.<proguard.classfile.visitor.SimpleClassPrinter: java.io.PrintStream ps>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $z0 = r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r1.<proguard.classfile.ProgramClass: int getAccessFlags()>();

     label1:
        $r5 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullClassDescription(int,java.lang.String)>($i0, $r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r5 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $z0 = r0.<proguard.classfile.visitor.SimpleClassPrinter: boolean printAccessModifiers>;

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: int getAccessFlags()>();

     label2:
        $r6 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r7 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullMethodDescription(java.lang.String,int,java.lang.String,java.lang.String)>($r5, $i0, $r6, $r7);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;

     label3:
        $i0 = 0;

        goto label1;

     label4:
        $i0 = 0;

        goto label2;
    }
}
