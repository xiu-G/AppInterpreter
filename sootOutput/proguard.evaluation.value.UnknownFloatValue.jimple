public class proguard.evaluation.value.UnknownFloatValue extends proguard.evaluation.value.FloatValue
{

    public void <init>()
    {
        proguard.evaluation.value.UnknownFloatValue r0;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        specialinvoke r0.<proguard.evaluation.value.FloatValue: void <init>()>();

        return;
    }

    public proguard.evaluation.value.FloatValue add(proguard.evaluation.value.FloatValue)
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.FloatValue $r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: proguard.evaluation.value.FloatValue;

        return r0;
    }

    public proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.FloatValue)
    {
        proguard.evaluation.value.IntegerValue r2;
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.FloatValue $r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: proguard.evaluation.value.FloatValue;

        r2 = <proguard.evaluation.value.ValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE>;

        return r2;
    }

    public proguard.evaluation.value.DoubleValue convertToDouble()
    {
        proguard.evaluation.value.DoubleValue r1;
        proguard.evaluation.value.UnknownFloatValue r0;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        r1 = <proguard.evaluation.value.ValueFactory: proguard.evaluation.value.DoubleValue DOUBLE_VALUE>;

        return r1;
    }

    public proguard.evaluation.value.IntegerValue convertToInteger()
    {
        proguard.evaluation.value.IntegerValue r1;
        proguard.evaluation.value.UnknownFloatValue r0;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        r1 = <proguard.evaluation.value.ValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE>;

        return r1;
    }

    public proguard.evaluation.value.LongValue convertToLong()
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.LongValue r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        r1 = <proguard.evaluation.value.ValueFactory: proguard.evaluation.value.LongValue LONG_VALUE>;

        return r1;
    }

    public proguard.evaluation.value.FloatValue divide(proguard.evaluation.value.FloatValue)
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.FloatValue $r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: proguard.evaluation.value.FloatValue;

        return r0;
    }

    public proguard.evaluation.value.FloatValue divideOf(proguard.evaluation.value.FloatValue)
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.FloatValue $r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: proguard.evaluation.value.FloatValue;

        return r0;
    }

    public boolean equals(java.lang.Object)
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != $r3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public proguard.evaluation.value.FloatValue generalize(proguard.evaluation.value.FloatValue)
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.FloatValue $r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: proguard.evaluation.value.FloatValue;

        return r0;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.Class $r1;
        proguard.evaluation.value.UnknownFloatValue r0;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public proguard.evaluation.value.FloatValue multiply(proguard.evaluation.value.FloatValue)
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.FloatValue $r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: proguard.evaluation.value.FloatValue;

        return r0;
    }

    public proguard.evaluation.value.FloatValue negate()
    {
        proguard.evaluation.value.UnknownFloatValue r0;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        return r0;
    }

    public proguard.evaluation.value.FloatValue remainder(proguard.evaluation.value.FloatValue)
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.FloatValue $r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: proguard.evaluation.value.FloatValue;

        return r0;
    }

    public proguard.evaluation.value.FloatValue remainderOf(proguard.evaluation.value.FloatValue)
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.FloatValue $r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: proguard.evaluation.value.FloatValue;

        return r0;
    }

    public proguard.evaluation.value.FloatValue subtract(proguard.evaluation.value.FloatValue)
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.FloatValue $r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: proguard.evaluation.value.FloatValue;

        return r0;
    }

    public proguard.evaluation.value.FloatValue subtractFrom(proguard.evaluation.value.FloatValue)
    {
        proguard.evaluation.value.UnknownFloatValue r0;
        proguard.evaluation.value.FloatValue $r1;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        $r1 := @parameter0: proguard.evaluation.value.FloatValue;

        return r0;
    }

    public java.lang.String toString()
    {
        proguard.evaluation.value.UnknownFloatValue r0;

        r0 := @this: proguard.evaluation.value.UnknownFloatValue;

        return "d";
    }
}
