public class androidx.lifecycle.j extends java.lang.Object
{
    private static java.util.Map a;
    private static java.util.Map b;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <androidx.lifecycle.j: java.util.Map a> = $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <androidx.lifecycle.j: java.util.Map b> = $r0;

        return;
    }

    private static androidx.lifecycle.c a(java.lang.reflect.Constructor, java.lang.Object)
    {
        java.lang.Throwable $r4, $r6, $r7;
        java.lang.Object[] $r2;
        androidx.lifecycle.c $r3;
        java.lang.RuntimeException $r5;
        java.lang.reflect.Constructor $r1;
        java.lang.Object $r0;

        $r1 := @parameter0: java.lang.reflect.Constructor;

        $r0 := @parameter1: java.lang.Object;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r0;

     label1:
        $r0 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r2);

     label2:
        $r3 = (androidx.lifecycle.c) $r0;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        $r6 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r5;

     label5:
        $r7 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r5;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private static java.lang.reflect.Constructor b(java.lang.Class)
    {
        java.lang.Throwable $r10;
        java.lang.Package $r2;
        java.lang.Class[] $r8;
        java.lang.RuntimeException $r11;
        java.lang.reflect.Constructor $r9;
        int $i0;
        java.lang.ClassNotFoundException $r0;
        java.lang.Class $r1, $r7;
        java.lang.StringBuilder $r6;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;

        $r1 := @parameter0: java.lang.Class;

     label01:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>();

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getCanonicalName()>();

     label02:
        $r4 = $r3;

        if $r2 == null goto label05;

     label03:
        $r5 = virtualinvoke $r2.<java.lang.Package: java.lang.String getName()>();

     label04:
        goto label06;

     label05:
        $r5 = "";

     label06:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>();

     label07:
        if $z0 != 0 goto label12;

     label08:
        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

     label09:
        $i0 = $i0 + 1;

     label10:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

     label11:
        $r4 = $r3;

     label12:
        $r3 = staticinvoke <androidx.lifecycle.j: java.lang.String c(java.lang.String)>($r4);

     label13:
        $r4 = $r3;

     label14:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>();

     label15:
        if $z0 != 0 goto label18;

        $r6 = new java.lang.StringBuilder;

     label16:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label17:
        $r4 = $r5;

     label18:
        $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r4);

     label19:
        $r8 = newarray (java.lang.Class)[1];

        $r8[0] = $r1;

     label20:
        $r9 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r8);

        $z0 = virtualinvoke $r9.<java.lang.reflect.Constructor: boolean isAccessible()>();

     label21:
        if $z0 != 0 goto label27;

     label22:
        virtualinvoke $r9.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label23:
        return $r9;

     label24:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label25:
        return null;

     label26:
        $r0 := @caughtexception;

        goto label25;

     label27:
        return $r9;

        catch java.lang.ClassNotFoundException from label01 to label02 with label26;
        catch java.lang.ClassNotFoundException from label03 to label04 with label26;
        catch java.lang.ClassNotFoundException from label06 to label07 with label26;
        catch java.lang.ClassNotFoundException from label08 to label09 with label26;
        catch java.lang.ClassNotFoundException from label10 to label11 with label26;
        catch java.lang.ClassNotFoundException from label12 to label13 with label26;
        catch java.lang.ClassNotFoundException from label14 to label15 with label26;
        catch java.lang.ClassNotFoundException from label16 to label17 with label26;
        catch java.lang.ClassNotFoundException from label18 to label19 with label26;
        catch java.lang.ClassNotFoundException from label20 to label21 with label26;
        catch java.lang.ClassNotFoundException from label22 to label23 with label26;
        catch java.lang.NoSuchMethodException from label01 to label02 with label24;
        catch java.lang.NoSuchMethodException from label03 to label04 with label24;
        catch java.lang.NoSuchMethodException from label06 to label07 with label24;
        catch java.lang.NoSuchMethodException from label08 to label09 with label24;
        catch java.lang.NoSuchMethodException from label10 to label11 with label24;
        catch java.lang.NoSuchMethodException from label12 to label13 with label24;
        catch java.lang.NoSuchMethodException from label14 to label15 with label24;
        catch java.lang.NoSuchMethodException from label16 to label17 with label24;
        catch java.lang.NoSuchMethodException from label18 to label19 with label24;
        catch java.lang.NoSuchMethodException from label20 to label21 with label24;
        catch java.lang.NoSuchMethodException from label22 to label23 with label24;
    }

    public static java.lang.String c(java.lang.String)
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "_");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_LifecycleAdapter");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    private static int d(java.lang.Class)
    {
        java.util.Map $r0;
        int $i0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        $r1 := @parameter0: java.lang.Class;

        $r0 = <androidx.lifecycle.j: java.util.Map a>;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.lang.Integer) $r2;

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $i0 = staticinvoke <androidx.lifecycle.j: int g(java.lang.Class)>($r1);

        $r0 = <androidx.lifecycle.j: java.util.Map a>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $i0;
    }

    private static boolean e(java.lang.Class)
    {
        java.lang.Class $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Class;

        if $r1 == null goto label1;

        $r0 = class "Landroidx/lifecycle/f;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    static androidx.lifecycle.e f(java.lang.Object)
    {
        androidx.lifecycle.CompositeGeneratedAdaptersObserver $r12;
        java.lang.reflect.Constructor $r8;
        androidx.lifecycle.SingleGeneratedAdapterObserver $r10;
        java.util.Map $r5;
        int $i0, $i1;
        boolean $z0, $z1;
        androidx.lifecycle.e $r3;
        androidx.lifecycle.c $r9;
        androidx.lifecycle.b $r2;
        androidx.lifecycle.ReflectiveGenericLifecycleObserver $r13;
        java.util.List $r7;
        androidx.lifecycle.c[] $r11;
        java.lang.Object $r0, $r6;
        androidx.lifecycle.FullLifecycleObserverAdapter $r1;
        java.lang.Class $r4;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof androidx.lifecycle.e;

        $z1 = $r0 instanceof androidx.lifecycle.b;

        if $z0 == 0 goto label1;

        if $z1 == 0 goto label2;

        $r1 = new androidx.lifecycle.FullLifecycleObserverAdapter;

        $r2 = (androidx.lifecycle.b) $r0;

        $r3 = (androidx.lifecycle.e) $r0;

        specialinvoke $r1.<androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.b,androidx.lifecycle.e)>($r2, $r3);

        return $r1;

     label1:
        if $z1 == 0 goto label2;

        $r1 = new androidx.lifecycle.FullLifecycleObserverAdapter;

        $r2 = (androidx.lifecycle.b) $r0;

        specialinvoke $r1.<androidx.lifecycle.FullLifecycleObserverAdapter: void <init>(androidx.lifecycle.b,androidx.lifecycle.e)>($r2, null);

        return $r1;

     label2:
        if $z0 == 0 goto label3;

        $r3 = (androidx.lifecycle.e) $r0;

        return $r3;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = staticinvoke <androidx.lifecycle.j: int d(java.lang.Class)>($r4);

        if $i0 != 2 goto label7;

        $r5 = <androidx.lifecycle.j: java.util.Map b>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r7 = (java.util.List) $r6;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i0 = 0;

        if $i1 != 1 goto label4;

        $r6 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (java.lang.reflect.Constructor) $r6;

        $r9 = staticinvoke <androidx.lifecycle.j: androidx.lifecycle.c a(java.lang.reflect.Constructor,java.lang.Object)>($r8, $r0);

        $r10 = new androidx.lifecycle.SingleGeneratedAdapterObserver;

        specialinvoke $r10.<androidx.lifecycle.SingleGeneratedAdapterObserver: void <init>(androidx.lifecycle.c)>($r9);

        return $r10;

     label4:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r11 = newarray (androidx.lifecycle.c)[$i1];

     label5:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 >= $i1 goto label6;

        $r6 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i0);

        $r8 = (java.lang.reflect.Constructor) $r6;

        $r9 = staticinvoke <androidx.lifecycle.j: androidx.lifecycle.c a(java.lang.reflect.Constructor,java.lang.Object)>($r8, $r0);

        $r11[$i0] = $r9;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        $r12 = new androidx.lifecycle.CompositeGeneratedAdaptersObserver;

        specialinvoke $r12.<androidx.lifecycle.CompositeGeneratedAdaptersObserver: void <init>(androidx.lifecycle.c[])>($r11);

        return $r12;

     label7:
        $r13 = new androidx.lifecycle.ReflectiveGenericLifecycleObserver;

        specialinvoke $r13.<androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)>($r0);

        return $r13;
    }

    private static int g(java.lang.Class)
    {
        androidx.lifecycle.a $r5;
        java.util.Collection $r9;
        java.lang.Class[] $r10;
        java.lang.reflect.Constructor $r2;
        java.util.ArrayList $r7;
        java.util.List $r4;
        java.util.Map $r3;
        int $i0, $i1, $i2;
        java.lang.Class $r0, $r6;
        java.lang.Object $r8;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        if $r1 != null goto label01;

        return 1;

     label01:
        $r2 = staticinvoke <androidx.lifecycle.j: java.lang.reflect.Constructor b(java.lang.Class)>($r0);

        if $r2 == null goto label02;

        $r3 = <androidx.lifecycle.j: java.util.Map b>;

        $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4);

        return 2;

     label02:
        $r5 = <androidx.lifecycle.a: androidx.lifecycle.a c>;

        $z0 = virtualinvoke $r5.<androidx.lifecycle.a: boolean d(java.lang.Class)>($r0);

        if $z0 == 0 goto label03;

        return 1;

     label03:
        $r6 = virtualinvoke $r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r7 = null;

        $z0 = staticinvoke <androidx.lifecycle.j: boolean e(java.lang.Class)>($r6);

        if $z0 == 0 goto label05;

        $i0 = staticinvoke <androidx.lifecycle.j: int d(java.lang.Class)>($r6);

        if $i0 != 1 goto label04;

        return 1;

     label04:
        $r7 = new java.util.ArrayList;

        $r3 = <androidx.lifecycle.j: java.util.Map b>;

        $r8 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (java.util.Collection) $r8;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

     label05:
        $r10 = virtualinvoke $r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i0 = lengthof $r10;

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label10;

        $r6 = $r10[$i1];

        $z0 = staticinvoke <androidx.lifecycle.j: boolean e(java.lang.Class)>($r6);

        if $z0 == 0 goto label09;

        $i2 = staticinvoke <androidx.lifecycle.j: int d(java.lang.Class)>($r6);

        if $i2 != 1 goto label07;

        return 1;

     label07:
        if $r7 != null goto label08;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label08:
        $r3 = <androidx.lifecycle.j: java.util.Map b>;

        $r8 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (java.util.Collection) $r8;

        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>($r9);

     label09:
        $i1 = $i1 + 1;

        goto label06;

     label10:
        if $r7 == null goto label11;

        $r3 = <androidx.lifecycle.j: java.util.Map b>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r7);

        return 2;

     label11:
        return 1;
    }
}
