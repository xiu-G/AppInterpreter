public class proguard.util.NameParser extends java.lang.Object implements proguard.util.StringParser
{

    public void <init>()
    {
        proguard.util.NameParser r0;

        r0 := @this: proguard.util.NameParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r1;
        java.lang.String[] $r0;
        proguard.util.StringMatcher $r5;
        java.lang.Exception $r6;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        java.lang.String $r3;
        proguard.util.NameParser $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

     label01:
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Regular expression [");

        $r3 = $r0[0];

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label02:
        $r4 = new proguard.util.NameParser;

     label03:
        specialinvoke $r4.<proguard.util.NameParser: void <init>()>();

        $r3 = $r0[0];

        $r5 = virtualinvoke $r4.<proguard.util.NameParser: proguard.util.StringMatcher parse(java.lang.String)>($r3);

     label04:
        $i0 = 1;

     label05:
        $i1 = lengthof $r0;

     label06:
        if $i0 >= $i1 goto label14;

     label07:
        $r3 = $r0[$i0];

     label08:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

     label09:
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("String             [");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r3);

     label10:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

     label11:
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> match = ");

        $r3 = $r0[$i0];

        $z0 = interfaceinvoke $r5.<proguard.util.StringMatcher: boolean matches(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label12:
        $i0 = $i0 + 1;

        goto label05;

     label13:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public proguard.util.StringMatcher parse(java.lang.String)
    {
        proguard.util.VariableStringMatcher $r5, $r8;
        proguard.util.FixedStringMatcher $r7;
        char $c2;
        proguard.util.StringMatcher $r2, $r4;
        proguard.util.EmptyStringMatcher $r6;
        int $i0, $i1;
        proguard.util.NameParser r0;
        java.lang.String $r1, $r3;

        r0 := @this: proguard.util.NameParser;

        $r1 := @parameter0: java.lang.String;

        $r6 = new proguard.util.EmptyStringMatcher;

        $r2 = $r6;

        specialinvoke $r6.<proguard.util.EmptyStringMatcher: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if $i1 != 42 goto label3;

        $r5 = new proguard.util.VariableStringMatcher;

        $r2 = $r5;

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = virtualinvoke r0.<proguard.util.NameParser: proguard.util.StringMatcher parse(java.lang.String)>($r3);

        specialinvoke $r5.<proguard.util.VariableStringMatcher: void <init>(char[],char[],int,int,proguard.util.StringMatcher)>(null, null, 0, 2147483647, $r4);

     label2:
        if $i0 == 0 goto label5;

        $r7 = new proguard.util.FixedStringMatcher;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        specialinvoke $r7.<proguard.util.FixedStringMatcher: void <init>(java.lang.String,proguard.util.StringMatcher)>($r1, $r2);

        return $r7;

     label3:
        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if $i1 != 63 goto label4;

        $r8 = new proguard.util.VariableStringMatcher;

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r2 = virtualinvoke r0.<proguard.util.NameParser: proguard.util.StringMatcher parse(java.lang.String)>($r3);

        specialinvoke $r8.<proguard.util.VariableStringMatcher: void <init>(char[],char[],int,int,proguard.util.StringMatcher)>(null, null, 1, 1, $r2);

        $r2 = $r8;

        goto label2;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        return $r2;
    }
}
