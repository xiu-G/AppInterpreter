final class bolts.a extends java.lang.Object
{
    static final int a;
    static final int b;
    private static final bolts.a c;
    private static final int e;
    private final java.util.concurrent.Executor d;

    static void <clinit>()
    {
        int $i0;
        bolts.a $r0;
        java.lang.Runtime $r1;

        $r0 = new bolts.a;

        specialinvoke $r0.<bolts.a: void <init>()>();

        <bolts.a: bolts.a c> = $r0;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i0 = virtualinvoke $r1.<java.lang.Runtime: int availableProcessors()>();

        <bolts.a: int e> = $i0;

        $i0 = $i0 + 1;

        <bolts.a: int a> = $i0;

        $i0 = <bolts.a: int e>;

        $i0 = $i0 * 2;

        $i0 = $i0 + 1;

        <bolts.a: int b> = $i0;

        return;
    }

    private void <init>()
    {
        bolts.a r0;
        bolts.b $r1;

        r0 := @this: bolts.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new bolts.b;

        specialinvoke $r1.<bolts.b: void <init>(byte)>(0);

        r0.<bolts.a: java.util.concurrent.Executor d> = $r1;

        return;
    }

    public static java.util.concurrent.ExecutorService a()
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ThreadPoolExecutor $r0;
        int $i0, $i1;
        java.util.concurrent.LinkedBlockingQueue $r2;

        $r0 = new java.util.concurrent.ThreadPoolExecutor;

        $i0 = <bolts.a: int a>;

        $i1 = <bolts.a: int b>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r2 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(128);

        specialinvoke $r0.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>($i0, $i1, 1L, $r1, $r2);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label1;

        virtualinvoke $r0.<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(1);

     label1:
        return $r0;
    }

    public static java.util.concurrent.Executor b()
    {
        bolts.a $r0;
        java.util.concurrent.Executor r1;

        $r0 = <bolts.a: bolts.a c>;

        r1 = $r0.<bolts.a: java.util.concurrent.Executor d>;

        return r1;
    }
}
