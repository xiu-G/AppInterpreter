final enum class org.jsoup.parser.TokeniserState$54 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        org.jsoup.parser.TokeniserState$54 r0;

        r0 := @this: org.jsoup.parser.TokeniserState$54;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>("AfterDoctypeName", 53, null);

        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.CharacterReader $r2;
        org.jsoup.parser.TokeniserState$54 r0;
        org.jsoup.parser.Tokeniser $r1;
        char[] $r5;
        org.jsoup.parser.Token$Doctype $r3;
        org.jsoup.parser.TokeniserState $r4;
        boolean $z0;

        r0 := @this: org.jsoup.parser.TokeniserState$54;

        $r1 := @parameter0: org.jsoup.parser.Tokeniser;

        $r2 := @parameter1: org.jsoup.parser.CharacterReader;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(r0);

        $r3 = $r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;

        $r3.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();

        $r4 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState Data>;

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);

        return;

     label1:
        $r5 = newarray (char)[5];

        $r5[0] = 9;

        $r5[1] = 10;

        $r5[2] = 13;

        $r5[3] = 12;

        $r5[4] = 32;

        $z0 = virtualinvoke $r2.<org.jsoup.parser.CharacterReader: boolean matchesAny(char[])>($r5);

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<org.jsoup.parser.CharacterReader: void advance()>();

        return;

     label2:
        $z0 = virtualinvoke $r2.<org.jsoup.parser.CharacterReader: boolean matches(char)>(62);

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();

        $r4 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState Data>;

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r4);

        return;

     label3:
        $z0 = virtualinvoke $r2.<org.jsoup.parser.CharacterReader: boolean matchConsumeIgnoreCase(java.lang.String)>("PUBLIC");

        if $z0 == 0 goto label4;

        $r4 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword>;

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);

        return;

     label4:
        $z0 = virtualinvoke $r2.<org.jsoup.parser.CharacterReader: boolean matchConsumeIgnoreCase(java.lang.String)>("SYSTEM");

        if $z0 == 0 goto label5;

        $r4 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword>;

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r4);

        return;

     label5:
        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);

        $r3 = $r1.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;

        $r3.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;

        $r4 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState BogusDoctype>;

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r4);

        return;
    }
}
