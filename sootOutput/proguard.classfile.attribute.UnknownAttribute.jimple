public class proguard.classfile.attribute.UnknownAttribute extends proguard.classfile.attribute.Attribute
{
    public byte[] info;
    public final int u4attributeLength;

    public void <init>(int)
    {
        int $i0;
        proguard.classfile.attribute.UnknownAttribute r0;

        r0 := @this: proguard.classfile.attribute.UnknownAttribute;

        $i0 := @parameter0: int;

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>()>();

        r0.<proguard.classfile.attribute.UnknownAttribute: int u4attributeLength> = $i0;

        return;
    }

    public void <init>(int, int, byte[])
    {
        byte[] $r1;
        int $i0, $i1;
        proguard.classfile.attribute.UnknownAttribute r0;

        r0 := @this: proguard.classfile.attribute.UnknownAttribute;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: byte[];

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>(int)>($i0);

        r0.<proguard.classfile.attribute.UnknownAttribute: int u4attributeLength> = $i1;

        r0.<proguard.classfile.attribute.UnknownAttribute: byte[] info> = $r1;

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.Field, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.visitor.AttributeVisitor $r3;
        proguard.classfile.attribute.UnknownAttribute r0;
        proguard.classfile.Field $r2;

        r0 := @this: proguard.classfile.attribute.UnknownAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        $r3 := @parameter2: proguard.classfile.attribute.visitor.AttributeVisitor;

        interfaceinvoke $r3.<proguard.classfile.attribute.visitor.AttributeVisitor: void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute)>($r1, r0);

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.visitor.AttributeVisitor $r4;
        proguard.classfile.attribute.UnknownAttribute r0;

        r0 := @this: proguard.classfile.attribute.UnknownAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.visitor.AttributeVisitor;

        interfaceinvoke $r4.<proguard.classfile.attribute.visitor.AttributeVisitor: void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute)>($r1, r0);

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.visitor.AttributeVisitor $r3;
        proguard.classfile.attribute.UnknownAttribute r0;

        r0 := @this: proguard.classfile.attribute.UnknownAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.visitor.AttributeVisitor;

        interfaceinvoke $r3.<proguard.classfile.attribute.visitor.AttributeVisitor: void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute)>($r1, r0);

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        proguard.classfile.attribute.visitor.AttributeVisitor $r2;
        proguard.classfile.attribute.UnknownAttribute r0;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.classfile.attribute.UnknownAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.visitor.AttributeVisitor;

        interfaceinvoke $r2.<proguard.classfile.attribute.visitor.AttributeVisitor: void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute)>($r1, r0);

        return;
    }
}
