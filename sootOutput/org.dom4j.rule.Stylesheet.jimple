public class org.dom4j.rule.Stylesheet extends java.lang.Object
{
    private java.lang.String modeName;
    private org.dom4j.rule.RuleManager ruleManager;

    public void <init>()
    {
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.RuleManager $r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.dom4j.rule.RuleManager;

        specialinvoke $r1.<org.dom4j.rule.RuleManager: void <init>()>();

        r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager> = $r1;

        return;
    }

    public void addRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.Rule $r1;
        org.dom4j.rule.RuleManager $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: org.dom4j.rule.Rule;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        virtualinvoke $r2.<org.dom4j.rule.RuleManager: void addRule(org.dom4j.rule.Rule)>($r1);

        return;
    }

    public void applyTemplates(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object $r1;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void applyTemplates(java.lang.Object,java.lang.String)>($r1, $r2);

        return;
    }

    public void applyTemplates(java.lang.Object, java.lang.String) throws java.lang.Exception
    {
        org.dom4j.Document r7;
        org.dom4j.rule.RuleManager $r3;
        org.dom4j.rule.Mode $r4;
        org.dom4j.Node $r6;
        org.dom4j.rule.Stylesheet r0;
        java.util.List r8;
        int i0, $i1;
        java.lang.Object $r1;
        org.dom4j.Element r5;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        $r4 = virtualinvoke $r3.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode getMode(java.lang.String)>($r2);

        $z0 = $r1 instanceof org.dom4j.Element;

        if $z0 == 0 goto label2;

        r5 = (org.dom4j.Element) $r1;

        i0 = 0;

        $i1 = interfaceinvoke r5.<org.dom4j.Element: int nodeCount()>();

     label1:
        if i0 >= $i1 goto label8;

        $r6 = interfaceinvoke r5.<org.dom4j.Element: org.dom4j.Node node(int)>(i0);

        virtualinvoke $r4.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>($r6);

        i0 = i0 + 1;

        goto label1;

     label2:
        $z0 = $r1 instanceof org.dom4j.Document;

        if $z0 == 0 goto label4;

        r7 = (org.dom4j.Document) $r1;

        i0 = 0;

        $i1 = interfaceinvoke r7.<org.dom4j.Document: int nodeCount()>();

     label3:
        if i0 >= $i1 goto label8;

        $r6 = interfaceinvoke r7.<org.dom4j.Document: org.dom4j.Node node(int)>(i0);

        virtualinvoke $r4.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>($r6);

        i0 = i0 + 1;

        goto label3;

     label4:
        $z0 = $r1 instanceof java.util.List;

        if $z0 == 0 goto label8;

        r8 = (java.util.List) $r1;

        i0 = 0;

        $i1 = interfaceinvoke r8.<java.util.List: int size()>();

     label5:
        if i0 >= $i1 goto label8;

        $r1 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i0);

        $z0 = $r1 instanceof org.dom4j.Element;

        if $z0 == 0 goto label7;

        r5 = (org.dom4j.Element) $r1;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void applyTemplates(java.lang.Object,java.lang.String)>(r5, $r2);

     label6:
        i0 = i0 + 1;

        goto label5;

     label7:
        $z0 = $r1 instanceof org.dom4j.Document;

        if $z0 == 0 goto label6;

        r7 = (org.dom4j.Document) $r1;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void applyTemplates(java.lang.Object,java.lang.String)>(r7, $r2);

        goto label6;

     label8:
        return;
    }

    public void applyTemplates(java.lang.Object, org.dom4j.XPath) throws java.lang.Exception
    {
        org.dom4j.XPath $r2;
        java.lang.Object $r1;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r3;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.dom4j.XPath;

        $r3 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)>($r1, $r2, $r3);

        return;
    }

    public void applyTemplates(java.lang.Object, org.dom4j.XPath, java.lang.String) throws java.lang.Exception
    {
        org.dom4j.rule.RuleManager $r4;
        java.util.Iterator $r7;
        org.dom4j.rule.Mode $r5;
        org.dom4j.Node r8;
        org.dom4j.rule.Stylesheet r0;
        java.util.List $r6;
        org.dom4j.XPath $r2;
        java.lang.Object $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.dom4j.XPath;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        $r5 = virtualinvoke $r4.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode getMode(java.lang.String)>($r3);

        $r6 = interfaceinvoke $r2.<org.dom4j.XPath: java.util.List selectNodes(java.lang.Object)>($r1);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.dom4j.Node) $r1;

        virtualinvoke $r5.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>(r8);

        goto label1;

     label2:
        return;
    }

    public void applyTemplates(java.lang.Object, org.jaxen.XPath) throws java.lang.Exception
    {
        java.lang.Object $r1;
        org.jaxen.XPath $r2;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r3;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.jaxen.XPath;

        $r3 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void applyTemplates(java.lang.Object,org.jaxen.XPath,java.lang.String)>($r1, $r2, $r3);

        return;
    }

    public void applyTemplates(java.lang.Object, org.jaxen.XPath, java.lang.String) throws java.lang.Exception
    {
        org.dom4j.rule.RuleManager $r4;
        java.util.Iterator $r7;
        org.dom4j.rule.Mode $r5;
        org.dom4j.Node r8;
        org.jaxen.XPath $r2;
        org.dom4j.rule.Stylesheet r0;
        java.util.List $r6;
        java.lang.Object $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.jaxen.XPath;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        $r5 = virtualinvoke $r4.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode getMode(java.lang.String)>($r3);

        $r6 = interfaceinvoke $r2.<org.jaxen.XPath: java.util.List selectNodes(java.lang.Object)>($r1);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.dom4j.Node) $r1;

        virtualinvoke $r5.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>(r8);

        goto label1;

     label2:
        return;
    }

    public void clear()
    {
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.RuleManager $r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        virtualinvoke $r1.<org.dom4j.rule.RuleManager: void clear()>();

        return;
    }

    public java.lang.String getModeName()
    {
        org.dom4j.rule.Stylesheet r0;
        java.lang.String r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        return r1;
    }

    public org.dom4j.rule.Action getValueOfAction()
    {
        org.dom4j.rule.Action $r1;
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.RuleManager $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        $r1 = virtualinvoke $r2.<org.dom4j.rule.RuleManager: org.dom4j.rule.Action getValueOfAction()>();

        return $r1;
    }

    public void removeRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.Rule $r1;
        org.dom4j.rule.RuleManager $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: org.dom4j.rule.Rule;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        virtualinvoke $r2.<org.dom4j.rule.RuleManager: void removeRule(org.dom4j.rule.Rule)>($r1);

        return;
    }

    public void run(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object $r1;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void run(java.lang.Object,java.lang.String)>($r1, $r2);

        return;
    }

    public void run(java.lang.Object, java.lang.String) throws java.lang.Exception
    {
        java.util.List r4;
        org.dom4j.Node r3;
        java.lang.Object r2;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $z0 = r2 instanceof org.dom4j.Node;

        if $z0 == 0 goto label1;

        r3 = (org.dom4j.Node) r2;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void run(org.dom4j.Node,java.lang.String)>(r3, $r1);

        return;

     label1:
        $z0 = r2 instanceof java.util.List;

        if $z0 == 0 goto label2;

        r4 = (java.util.List) r2;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void run(java.util.List,java.lang.String)>(r4, $r1);

     label2:
        return;
    }

    public void run(java.util.List) throws java.lang.Exception
    {
        java.util.List $r1;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: java.util.List;

        $r2 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void run(java.util.List,java.lang.String)>($r1, $r2);

        return;
    }

    public void run(java.util.List, java.lang.String) throws java.lang.Exception
    {
        org.dom4j.Node r4;
        org.dom4j.rule.Stylesheet r0;
        java.util.List $r1;
        int i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        i0 = 0;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label3;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $z0 = $r3 instanceof org.dom4j.Node;

        if $z0 == 0 goto label2;

        r4 = (org.dom4j.Node) $r3;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void run(org.dom4j.Node,java.lang.String)>(r4, $r2);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void run(org.dom4j.Node) throws java.lang.Exception
    {
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r2;
        org.dom4j.Node $r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: org.dom4j.Node;

        $r2 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void run(org.dom4j.Node,java.lang.String)>($r1, $r2);

        return;
    }

    public void run(org.dom4j.Node, java.lang.String) throws java.lang.Exception
    {
        org.dom4j.rule.RuleManager $r3;
        org.dom4j.Node $r1;
        org.dom4j.rule.Mode $r4;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: org.dom4j.Node;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        $r4 = virtualinvoke $r3.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode getMode(java.lang.String)>($r2);

        virtualinvoke $r4.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>($r1);

        return;
    }

    public void setModeName(java.lang.String)
    {
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: java.lang.String;

        r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName> = $r1;

        return;
    }

    public void setValueOfAction(org.dom4j.rule.Action)
    {
        org.dom4j.rule.Action $r1;
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.RuleManager $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 := @parameter0: org.dom4j.rule.Action;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        virtualinvoke $r2.<org.dom4j.rule.RuleManager: void setValueOfAction(org.dom4j.rule.Action)>($r1);

        return;
    }
}
