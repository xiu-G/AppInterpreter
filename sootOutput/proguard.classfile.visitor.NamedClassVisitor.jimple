public class proguard.classfile.visitor.NamedClassVisitor extends java.lang.Object implements proguard.classfile.visitor.ClassPoolVisitor
{
    private final proguard.classfile.visitor.ClassVisitor classVisitor;
    private final java.lang.String name;

    public void <init>(proguard.classfile.visitor.ClassVisitor, java.lang.String)
    {
        proguard.classfile.visitor.NamedClassVisitor r0;
        java.lang.String $r2;
        proguard.classfile.visitor.ClassVisitor $r1;

        r0 := @this: proguard.classfile.visitor.NamedClassVisitor;

        $r1 := @parameter0: proguard.classfile.visitor.ClassVisitor;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.visitor.NamedClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor> = $r1;

        r0.<proguard.classfile.visitor.NamedClassVisitor: java.lang.String name> = $r2;

        return;
    }

    public void visitClassPool(proguard.classfile.ClassPool)
    {
        proguard.classfile.ClassPool $r1;
        proguard.classfile.visitor.NamedClassVisitor r0;
        proguard.classfile.visitor.ClassVisitor $r3;
        java.lang.String $r2;

        r0 := @this: proguard.classfile.visitor.NamedClassVisitor;

        $r1 := @parameter0: proguard.classfile.ClassPool;

        $r2 = r0.<proguard.classfile.visitor.NamedClassVisitor: java.lang.String name>;

        $r3 = r0.<proguard.classfile.visitor.NamedClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor>;

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classAccept(java.lang.String,proguard.classfile.visitor.ClassVisitor)>($r2, $r3);

        return;
    }
}
