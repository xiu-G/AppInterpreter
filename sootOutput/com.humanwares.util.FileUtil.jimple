public class com.humanwares.util.FileUtil extends java.lang.Object
{

    public void <init>()
    {
        com.humanwares.util.FileUtil r0;

        r0 := @this: com.humanwares.util.FileUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean copyFile(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r10;
        byte[] r4;
        java.io.BufferedInputStream r2, r5, $r20;
        java.io.BufferedOutputStream r3, r6, $r22;
        int $i0;
        java.lang.String $r0, $r1;
        java.io.FileOutputStream $r8, $r21;
        java.io.FileInputStream $r7, $r19;
        java.lang.Exception $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r5 = null;

        r6 = null;

     label01:
        $r20 = new java.io.BufferedInputStream;

     label02:
        r2 = $r20;

     label03:
        $r19 = new java.io.FileInputStream;

     label04:
        $r7 = $r19;

     label05:
        specialinvoke $r19.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

        specialinvoke $r20.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r7);

     label06:
        $r22 = new java.io.BufferedOutputStream;

     label07:
        r3 = $r22;

     label08:
        $r21 = new java.io.FileOutputStream;

     label09:
        $r8 = $r21;

     label10:
        specialinvoke $r21.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

        specialinvoke $r22.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r8);

     label11:
        r4 = newarray (byte)[2048];

     label12:
        $i0 = virtualinvoke r2.<java.io.BufferedInputStream: int read(byte[])>(r4);

     label13:
        if $i0 > -1 goto label18;

     label14:
        virtualinvoke r3.<java.io.BufferedOutputStream: void flush()>();

     label15:
        virtualinvoke r2.<java.io.BufferedInputStream: void close()>();

     label16:
        virtualinvoke r3.<java.io.BufferedOutputStream: void close()>();

     label17:
        return 1;

     label18:
        virtualinvoke r3.<java.io.BufferedOutputStream: void write(byte[])>(r4);

     label19:
        goto label12;

     label20:
        $r9 := @caughtexception;

        r6 = r3;

        r5 = r2;

     label21:
        virtualinvoke r5.<java.io.BufferedInputStream: void close()>();

     label22:
        virtualinvoke r6.<java.io.BufferedOutputStream: void close()>();

     label23:
        return 0;

     label24:
        $r10 := @caughtexception;

     label25:
        virtualinvoke r5.<java.io.BufferedInputStream: void close()>();

     label26:
        virtualinvoke r6.<java.io.BufferedOutputStream: void close()>();

     label27:
        throw $r10;

     label28:
        $r11 := @caughtexception;

        goto label16;

     label29:
        $r12 := @caughtexception;

        goto label17;

     label30:
        $r13 := @caughtexception;

        goto label22;

     label31:
        $r14 := @caughtexception;

        goto label23;

     label32:
        $r15 := @caughtexception;

        goto label26;

     label33:
        $r16 := @caughtexception;

        goto label27;

     label34:
        $r10 := @caughtexception;

        r5 = r2;

        goto label25;

     label35:
        $r10 := @caughtexception;

        r6 = r3;

        r5 = r2;

        goto label25;

     label36:
        $r17 := @caughtexception;

        goto label21;

     label37:
        $r18 := @caughtexception;

        r5 = r2;

        goto label21;

        catch java.lang.Exception from label05 to label06 with label36;
        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Exception from label10 to label11 with label37;
        catch java.lang.Throwable from label06 to label07 with label34;
        catch java.lang.Throwable from label08 to label09 with label34;
        catch java.lang.Throwable from label10 to label11 with label34;
        catch java.lang.Exception from label12 to label13 with label20;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Throwable from label12 to label13 with label35;
        catch java.lang.Throwable from label14 to label15 with label35;
        catch java.lang.Exception from label15 to label16 with label28;
        catch java.lang.Exception from label16 to label17 with label29;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Throwable from label18 to label19 with label35;
        catch java.lang.Exception from label21 to label22 with label30;
        catch java.lang.Exception from label22 to label23 with label31;
        catch java.lang.Exception from label25 to label26 with label32;
        catch java.lang.Exception from label26 to label27 with label33;
    }

    public static boolean delete(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean delete()>();

        return $z0;
    }

    public static boolean fileExist(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        return $z0;
    }

    public static java.lang.String filePathOnSD(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r1, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("/sdcard/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getFileExt(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return "";

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(46);

        $i1 = -1;

        if $i0 != $i1 goto label2;

        return "";

     label2:
        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        return $r0;
    }

    public static boolean mkdir(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.io.File;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        return $z0;
    }

    public static boolean moveFile(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.File r2, r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r3 = new java.io.File;

     label1:
        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r0);

     label2:
        r2 = new java.io.File;

     label3:
        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke r3.<java.io.File: boolean renameTo(java.io.File)>(r2);

     label4:
        return 1;

     label5:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
