public class winterwell.jtwitter.TwitterTest extends junit.framework.TestCase
{
    static final boolean $assertionsDisabled;
    public static final java.lang.String TEST_PASSWORD;
    static final java.lang.String TEST_USER;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        <winterwell.jtwitter.TwitterTest: java.lang.String TEST_USER> = "jtwit";

        <winterwell.jtwitter.TwitterTest: java.lang.String TEST_PASSWORD> = "notsofast";

        <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled> = 0;

        $r0 = class "Lwinterwell/jtwitter/TwitterTest;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;

        return;
    }

    public void <init>()
    {
        winterwell.jtwitter.TwitterTest r0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Throwable r9, r10, r11;
        winterwell.jtwitter.TwitterTest r2, $r13;
        java.lang.Object[] $r7;
        java.lang.String[] $r0;
        java.lang.reflect.Method[] $r4;
        int $i0, $i1, $i2;
        java.lang.String $r5;
        java.lang.reflect.Method r1;
        boolean $z0;
        java.io.PrintStream $r8;
        java.lang.IllegalAccessException $r16;
        java.lang.Class[] $r6;
        java.lang.IllegalArgumentException $r15;
        java.lang.reflect.InvocationTargetException $r17;
        java.lang.Class $r3;
        java.lang.StringBuilder $r12, $r14;

        $r0 := @parameter0: java.lang.String[];

        $i0 = 0;

        $r13 = new winterwell.jtwitter.TwitterTest;

        r2 = $r13;

        specialinvoke $r13.<winterwell.jtwitter.TwitterTest: void <init>()>();

        $r3 = class "Lwinterwell/jtwitter/TwitterTest;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $i1 = lengthof $r4;

     label01:
        if $i0 < $i1 goto label02;

        return;

     label02:
        r1 = $r4[$i0];

        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("test");

        if $z0 == 0 goto label03;

        $r6 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r6;

        if $i2 == 0 goto label04;

     label03:
        $i0 = $i0 + 1;

        goto label01;

     label04:
        $r7 = newarray (java.lang.Object)[0];

     label05:
        virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r7);

     label06:
        $r8 = <java.lang.System: java.io.PrintStream out>;

     label07:
        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label08:
        goto label03;

     label09:
        r9 := @caughtexception;

        $r15 = (java.lang.IllegalArgumentException) r9;

        virtualinvoke $r15.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label03;

     label10:
        r10 := @caughtexception;

        $r16 = (java.lang.IllegalAccessException) r10;

        virtualinvoke $r16.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label03;

     label11:
        r11 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("TEST FAILED: ");

        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t");

        $r17 = (java.lang.reflect.InvocationTargetException) r11;

        r9 = virtualinvoke $r17.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r5);

        goto label03;

        catch java.lang.IllegalArgumentException from label05 to label06 with label09;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label11;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label11;
    }

    private java.lang.String repeat(char, int)
    {
        winterwell.jtwitter.TwitterTest r0;
        int $i1, i2;
        char $c0;
        java.lang.StringBuilder $r2;
        java.lang.String r1;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        $c0 := @parameter0: char;

        $i1 := @parameter1: int;

        r1 = "";

        i2 = 0;

     label1:
        if i2 < $i1 goto label2;

        return r1;

     label2:
        $r2 = new java.lang.StringBuilder;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label1;
    }

    public void canSend160()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        int i0;
        java.lang.StringBuilder $r3;
        java.lang.String r2;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r2 = "";

        i0 = 0;

     label1:
        if i0 < 15 goto label2;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status setStatus(java.lang.String)>(r2);

        return;

     label2:
        $r3 = new java.lang.StringBuilder;

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("23456789 ");

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;
    }

    public void dontTestFollowLag() throws java.io.IOException, java.lang.InterruptedException
    {
        java.io.PrintStream $r6;
        java.lang.Throwable r7, r9;
        winterwell.jtwitter.TwitterTest r0;
        java.util.Date $r3;
        java.io.FileWriter r2;
        long $l0;
        winterwell.jtwitter.Twitter r1;
        int i1, i2;
        winterwell.jtwitter.TwitterException$E403 r8;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        r2 = new java.io.FileWriter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("twitlag");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".txt");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.FileWriter: void <init>(java.lang.String)>($r5);

        i1 = 0;

     label01:
        if i1 < 1000 goto label02;

        virtualinvoke r2.<java.io.FileWriter: void close()>();

        return;

     label02:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Starting iteration ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label03:
        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isFollowing(java.lang.String)>("spoonmcguffin");

     label04:
        if $z0 == 0 goto label17;

        $r6 = <java.lang.System: java.io.PrintStream out>;

     label05:
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("jtwit was following Spoon");

        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User stopFollowing(java.lang.String)>("spoonmcguffin");

     label06:
        i2 = 0;

     label07:
        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isFollowing(java.lang.String)>("spoonmcguffin");

     label08:
        if $z0 != 0 goto label11;

        $r4 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Stopped following: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00ms\n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.FileWriter: void write(java.lang.String)>($r5);

     label10:
        virtualinvoke r2.<java.io.FileWriter: void flush()>();

        i1 = i1 + 1;

        goto label01;

     label11:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label12:
        i2 = i2 + 1;

        goto label07;

     label13:
        r7 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

     label14:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Couldn\'t write to file: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label15:
        goto label10;

     label16:
        r8 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("isFollower() was mistaken: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r5);

        goto label10;

     label17:
        $r6 = <java.lang.System: java.io.PrintStream out>;

     label18:
        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("jtwit was not following Spoon");

        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User follow(java.lang.String)>("spoonmcguffin");

     label19:
        i2 = 0;

     label20:
        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isFollowing(java.lang.String)>("spoonmcguffin");

     label21:
        if $z0 == 0 goto label27;

        $r4 = new java.lang.StringBuilder;

     label22:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Started following: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00ms\n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.FileWriter: void write(java.lang.String)>($r5);

     label23:
        goto label10;

     label24:
        r9 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

     label25:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Couldn\'t write to file: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label26:
        goto label10;

     label27:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label28:
        i2 = i2 + 1;

        goto label20;

        catch winterwell.jtwitter.TwitterException$E403 from label03 to label04 with label16;
        catch winterwell.jtwitter.TwitterException$E403 from label05 to label06 with label16;
        catch winterwell.jtwitter.TwitterException$E403 from label07 to label08 with label16;
        catch java.io.IOException from label09 to label10 with label13;
        catch winterwell.jtwitter.TwitterException$E403 from label09 to label10 with label16;
        catch winterwell.jtwitter.TwitterException$E403 from label11 to label12 with label16;
        catch winterwell.jtwitter.TwitterException$E403 from label14 to label15 with label16;
        catch winterwell.jtwitter.TwitterException$E403 from label18 to label19 with label16;
        catch winterwell.jtwitter.TwitterException$E403 from label20 to label21 with label16;
        catch java.io.IOException from label22 to label23 with label24;
        catch winterwell.jtwitter.TwitterException$E403 from label22 to label23 with label16;
        catch winterwell.jtwitter.TwitterException$E403 from label25 to label26 with label16;
        catch winterwell.jtwitter.TwitterException$E403 from label27 to label28 with label16;
    }

    public void testAagha()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.Twitter$Status $r2;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus(java.lang.String)>("aagha");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    public void testBulkShow()
    {
        winterwell.jtwitter.TwitterTest r0;
        java.lang.String[] $r2;
        java.lang.AssertionError $r4;
        winterwell.jtwitter.Twitter r1;
        java.util.List $r3;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r7;
        winterwell.jtwitter.Twitter$User $r6;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "winterstein";

        $r2[1] = "joehalliwell";

        $r2[2] = "annettemees";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r3 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List bulkShow(java.util.List)>($r3);

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 == 3 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

     label1:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(1);

        $r6 = (winterwell.jtwitter.Twitter$User) $r5;

        $r7 = $r6.<winterwell.jtwitter.Twitter$User: java.lang.String description>;

        if $r7 != null goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        return;
    }

    public void testBulkShowById()
    {
        winterwell.jtwitter.TwitterTest r0;
        java.lang.Long[] $r2;
        java.lang.AssertionError $r5;
        winterwell.jtwitter.Twitter r1;
        java.util.List $r4;
        java.lang.Long $r3;
        int $i0;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = newarray (java.lang.Long)[4];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(32L);

        $r2[0] = $r3;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(34L);

        $r2[1] = $r3;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(45L);

        $r2[2] = $r3;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(12435562L);

        $r2[3] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r4 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List bulkShowById(java.util.List)>($r4);

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 == 2 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

     label1:
        return;
    }

    public void testDestroyStatus() throws java.lang.InterruptedException
    {
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.Twitter$Status $r2, $r3;
        long $l0, $l1;
        java.lang.AssertionError $r4;
        winterwell.jtwitter.Twitter r1;
        byte $b2;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $l0 = virtualinvoke $r2.<winterwell.jtwitter.Twitter$Status: long getId()>();

        virtualinvoke r1.<winterwell.jtwitter.Twitter: void destroyStatus(long)>($l0);

        $r3 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $l1 = $r3.<winterwell.jtwitter.Twitter$Status: long id>;

        $l0 = $r2.<winterwell.jtwitter.Twitter$Status: long id>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("Status id should differ from that of destroyed status");

        throw $r4;

     label1:
        return;
    }

    public void testDestroyStatusBad()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.Twitter$Status $r2;
        java.lang.AssertionError $r3;
        java.lang.Exception $r4;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus(java.lang.String)>("winterstein");

     label1:
        virtualinvoke r1.<winterwell.jtwitter.Twitter: void destroyStatus(winterwell.jtwitter.Twitter$Status)>($r2);

     label2:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $r3 = new java.lang.AssertionError;

     label3:
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        $r4 := @caughtexception;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label3 to label4 with label4;
    }

    public void testFollowAndStopFollowing() throws java.lang.InterruptedException
    {
        winterwell.jtwitter.TwitterTest r0;
        long $l0;
        java.lang.AssertionError $r3;
        winterwell.jtwitter.Twitter r1;
        java.util.List $r2;
        winterwell.jtwitter.TwitterException $r5;
        winterwell.jtwitter.Twitter$User $r4;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        virtualinvoke r1.<winterwell.jtwitter.Twitter: void flush()>();

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getFriends()>();

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isFollowing(java.lang.String)>("winterstein");

        if $z0 != 0 goto label01;

        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User follow(java.lang.String)>("winterstein");

        $l0 = (long) 1000;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

     label01:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isFollowing(java.lang.String)>("winterstein");

        if $z0 != 0 goto label02;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r3;

     label02:
        $r4 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User stopFollowing(java.lang.String)>("winterstein");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        if $r4 != null goto label03;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label03:
        $l0 = (long) 1000;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label04;

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isFollowing(java.lang.String)>("winterstein");

        if $z0 == 0 goto label04;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r3;

     label04:
        $r4 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User stopFollowing(java.lang.String)>("winterstein");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label05;

        if $r4 == null goto label05;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label05:
        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User follow(java.lang.String)>("winterstein");

        $l0 = (long) 1000;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label06;

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isFollowing(java.lang.String)>("winterstein");

        if $z0 != 0 goto label06;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r3;

     label06:
        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User follow(java.lang.String)>("Alysha6822");

     label07:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label11;

        $r3 = new java.lang.AssertionError;

     label08:
        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("Trying to follow a suspended user should throw an exception");

     label09:
        throw $r3;

     label10:
        $r5 := @caughtexception;

     label11:
        return;

        catch winterwell.jtwitter.TwitterException from label06 to label07 with label10;
        catch winterwell.jtwitter.TwitterException from label08 to label09 with label10;
    }

    public void testFollowerIDs()
    {
        java.io.PrintStream $r10;
        winterwell.jtwitter.TwitterTest r0;
        java.util.Iterator $r4;
        java.lang.AssertionError $r6;
        winterwell.jtwitter.Twitter r2;
        java.util.List $r3, $r5;
        java.lang.Long r8;
        winterwell.jtwitter.TwitterException$E403 r1;
        java.lang.Object $r7;
        java.lang.StringBuilder $r11;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r2 = new winterwell.jtwitter.Twitter;

        specialinvoke r2.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r3 = virtualinvoke r2.<winterwell.jtwitter.Twitter: java.util.List getFollowerIDs()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r5 = virtualinvoke r2.<winterwell.jtwitter.Twitter: java.util.List getFollowerIDs(java.lang.String)>("jtwit");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label8;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label8;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.Long) $r7;

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

     label3:
        $r9 = virtualinvoke r8.<java.lang.Long: java.lang.String toString()>();

        $z0 = virtualinvoke r2.<winterwell.jtwitter.Twitter: boolean isFollower(java.lang.String,java.lang.String)>($r9, "jtwit");

     label4:
        if $z0 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

     label5:
        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(r8);

     label6:
        throw $r6;

     label7:
        r1 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r9);

        goto label1;

     label8:
        return;

        catch winterwell.jtwitter.TwitterException$E403 from label3 to label4 with label7;
        catch winterwell.jtwitter.TwitterException$E403 from label5 to label6 with label7;
    }

    public void testFriendIDs()
    {
        winterwell.jtwitter.TwitterTest r0;
        java.util.Iterator $r4;
        java.lang.AssertionError $r6;
        winterwell.jtwitter.Twitter r2;
        java.util.List $r3, $r5;
        java.lang.Long r8;
        winterwell.jtwitter.TwitterException$E403 r1;
        java.lang.Object $r7;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r2 = new winterwell.jtwitter.Twitter;

        specialinvoke r2.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r3 = virtualinvoke r2.<winterwell.jtwitter.Twitter: java.util.List getFriendIDs()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r5 = virtualinvoke r2.<winterwell.jtwitter.Twitter: java.util.List getFriendIDs(java.lang.String)>("jtwit");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label8;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label8;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.Long) $r7;

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

     label3:
        $r9 = virtualinvoke r8.<java.lang.Long: java.lang.String toString()>();

        $z0 = virtualinvoke r2.<winterwell.jtwitter.Twitter: boolean isFollower(java.lang.String,java.lang.String)>("jtwit", $r9);

     label4:
        if $z0 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

     label5:
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

     label6:
        throw $r6;

     label7:
        r1 := @caughtexception;

        virtualinvoke r1.<winterwell.jtwitter.TwitterException$E403: void printStackTrace()>();

        goto label1;

     label8:
        return;

        catch winterwell.jtwitter.TwitterException$E403 from label3 to label4 with label7;
        catch winterwell.jtwitter.TwitterException$E403 from label5 to label6 with label7;
    }

    public void testGetDirectMessages()
    {
        winterwell.jtwitter.Twitter$Message r6;
        winterwell.jtwitter.TwitterTest r0;
        java.util.Iterator $r3;
        java.lang.AssertionError $r4;
        winterwell.jtwitter.Twitter r1;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r5;
        winterwell.jtwitter.Twitter$User $r7, $r8;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getDirectMessages()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (winterwell.jtwitter.Twitter$Message) $r5;

        $r7 = virtualinvoke r6.<winterwell.jtwitter.Twitter$Message: winterwell.jtwitter.Twitter$User getRecipient()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r8 = new winterwell.jtwitter.Twitter$User;

        specialinvoke $r8.<winterwell.jtwitter.Twitter$User: void <init>(java.lang.String)>("jtwit");

        $z0 = virtualinvoke $r7.<winterwell.jtwitter.Twitter$User: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label3:
        return;
    }

    public void testGetDirectMessagesSent()
    {
        winterwell.jtwitter.Twitter$Message r7;
        winterwell.jtwitter.TwitterTest r0;
        java.util.Iterator $r4;
        java.lang.AssertionError $r5;
        winterwell.jtwitter.Twitter r1;
        java.util.List $r3;
        int $i0;
        java.lang.Object $r6;
        winterwell.jtwitter.Twitter$User $r2, $r8;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r3 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getDirectMessagesSent()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label3;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (winterwell.jtwitter.Twitter$Message) $r6;

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r8 = virtualinvoke r7.<winterwell.jtwitter.Twitter$Message: winterwell.jtwitter.Twitter$User getSender()>();

        $r2 = new winterwell.jtwitter.Twitter$User;

        specialinvoke $r2.<winterwell.jtwitter.Twitter$User: void <init>(java.lang.String)>("jtwit");

        $z0 = virtualinvoke $r8.<winterwell.jtwitter.Twitter$User: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label3:
        return;
    }

    public void testGetFeatured()
    {
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.Twitter$Status $r6;
        java.lang.AssertionError $r3;
        winterwell.jtwitter.Twitter r1;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r4;
        winterwell.jtwitter.Twitter$User $r5;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getFeatured()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 > 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (winterwell.jtwitter.Twitter$User) $r4;

        $r6 = $r5.<winterwell.jtwitter.Twitter$User: winterwell.jtwitter.Twitter$Status status>;

        if $r6 != null goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        return;
    }

    public void testGetFollowers()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        int $i0;
        java.lang.AssertionError $r3;
        winterwell.jtwitter.Twitter$User $r4;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getFollowers()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 > 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r4 = staticinvoke <winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User getUser(java.lang.String,java.util.List)>("winterstein", $r2);

        if $r4 != null goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        return;
    }

    public void testGetFriends()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getFriends()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    public void testGetFriendsString()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getFriends(java.lang.String)>("winterstein");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    public void testGetFriendsTimeline()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        int $i0;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getFriendsTimeline()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 > 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    public void testGetManyFollowers()
    {
        winterwell.jtwitter.TwitterTest r0;
        java.util.HashSet r1, r2;
        winterwell.jtwitter.Twitter r3;
        java.util.List $r5;
        int $i0, $i1;
        winterwell.jtwitter.Twitter$User $r4;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r3 = new winterwell.jtwitter.Twitter;

        specialinvoke r3.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        virtualinvoke r3.<winterwell.jtwitter.Twitter: void setMaxResults(int)>(10000);

        $r4 = virtualinvoke r3.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User getUser(java.lang.String)>("psychovertical");

        $i0 = $r4.<winterwell.jtwitter.Twitter$User: int followersCount>;

        if $i0 <= 10000 goto label2;

        $z0 = 1;

     label1:
        staticinvoke <winterwell.jtwitter.TwitterTest: void assertFalse(java.lang.String,boolean)>("More than 10000 followers; choose a different victim or increase the maximum results", $z0);

        r2 = new java.util.HashSet;

        $r5 = virtualinvoke r3.<winterwell.jtwitter.Twitter: java.util.List getFollowers(java.lang.String)>("psychovertical");

        specialinvoke r2.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        r1 = new java.util.HashSet;

        $r5 = virtualinvoke r3.<winterwell.jtwitter.Twitter: java.util.List getFollowerIDs(java.lang.String)>("psychovertical");

        specialinvoke r1.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        $i0 = $r4.<winterwell.jtwitter.Twitter$User: int followersCount>;

        $i1 = interfaceinvoke r2.<java.util.Set: int size()>();

        staticinvoke <winterwell.jtwitter.TwitterTest: void assertEquals(int,int)>($i0, $i1);

        $i0 = $r4.<winterwell.jtwitter.Twitter$User: int followersCount>;

        $i1 = interfaceinvoke r1.<java.util.Set: int size()>();

        staticinvoke <winterwell.jtwitter.TwitterTest: void assertEquals(int,int)>($i0, $i1);

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void testGetPublicTimeline()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        int $i0;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getPublicTimeline()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 > 5 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    public void testGetRateLimitStats() throws java.lang.InterruptedException
    {
        winterwell.jtwitter.TwitterTest r0;
        java.lang.AssertionError $r3;
        winterwell.jtwitter.Twitter r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        $r2 = new winterwell.jtwitter.Twitter;

        r1 = $r2;

        specialinvoke $r2.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $i0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: int getRateLimitStatus()>();

        if $i0 >= 1 goto label1;

        return;

     label1:
        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

        $i1 = virtualinvoke r1.<winterwell.jtwitter.Twitter: int getRateLimitStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i2 = -1;

        $i0 = $i0 + $i2;

        if $i0 == $i1 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r2 = new winterwell.jtwitter.Twitter;

        specialinvoke $r2.<winterwell.jtwitter.Twitter: void <init>()>();

        virtualinvoke $r2.<winterwell.jtwitter.Twitter: int getRateLimitStatus()>();

        return;
    }

    public void testGetReplies()
    {
        java.io.PrintStream $r8;
        winterwell.jtwitter.TwitterTest r0;
        java.util.Iterator $r7;
        winterwell.jtwitter.Twitter$Status r11;
        java.lang.AssertionError $r4;
        winterwell.jtwitter.Twitter r1;
        java.util.List $r6, $r12;
        java.util.regex.Matcher $r3;
        java.lang.StringBuilder $r9;
        java.lang.Object $r10;
        java.util.regex.Pattern $r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        $r2 = <winterwell.jtwitter.Twitter$Status: java.util.regex.Pattern AT_YOU_SIR>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("@dan hello");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("dan");

        $r2 = <winterwell.jtwitter.Twitter$Status: java.util.regex.Pattern AT_YOU_SIR>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("hello @dan");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("dan");

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r6 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getReplies()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Replies ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;

     label4:
        $r10 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (winterwell.jtwitter.Twitter$Status) $r10;

        $r12 = virtualinvoke r11.<winterwell.jtwitter.Twitter$Status: java.util.List getMentions()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $z0 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>("jtwit");

        if $z0 != 0 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>(r11);

        throw $r4;
    }

    public void testGetStatus()
    {
        java.io.PrintStream $r4;
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.Twitter$Status $r2;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.Object)>($r2);

        return;
    }

    public void testGetStatusLong()
    {
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.Twitter$Status $r2, $r3;
        long $l0;
        java.lang.AssertionError $r6;
        winterwell.jtwitter.Twitter r1;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $l0 = virtualinvoke $r2.<winterwell.jtwitter.Twitter$Status: long getId()>();

        $r3 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus(long)>($l0);

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = $r2.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $r5 = $r3.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("Fetching a status by id should yield correct text");

        throw $r6;

     label1:
        return;
    }

    public void testGetUserTimeline()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        int $i0;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getUserTimeline()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 > 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    public void testGetUserTimelineByRSSString()
    {
        java.io.PrintStream $r3;
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        java.lang.Object $r4;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getUserTimelineWithRetweets(java.lang.String)>("jtwit");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r4);

        return;
    }

    public void testGetUserTimelineString()
    {
        java.io.PrintStream $r3;
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        java.lang.Object $r4;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getUserTimeline(java.lang.String)>("anonpoetry");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r4);

        return;
    }

    public void testIdentica()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        virtualinvoke r1.<winterwell.jtwitter.Twitter: void setAPIRootUrl(java.lang.String)>("http://identi.ca/api");

        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status setStatus(java.lang.String)>("Testing jTwitter http://winterwell.com/software/jtwitter.php");

        return;
    }

    public void testIdenticaAccess()
    {
        java.io.PrintStream $r3;
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.Twitter$Status r4, $r7;
        char c0;
        java.util.Random $r2;
        java.lang.AssertionError $r8;
        winterwell.jtwitter.Twitter r1;
        int $i1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        winterwell.jtwitter.TwitterException$Timeout $r9;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        virtualinvoke r1.<winterwell.jtwitter.Twitter: void setAPIRootUrl(java.lang.String)>("http://identi.ca/api");

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        $i1 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>(48);

        $i1 = $i1 + 65;

        c0 = (char) $i1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(char)>(c0);

        r4 = null;

        $r5 = new java.lang.StringBuilder;

     label1:
        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Hello to you shiny open source people");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>($r6);

     label2:
        r4 = $r7;

     label3:
        $r7 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $z0 = virtualinvoke r4.<winterwell.jtwitter.Twitter$Status: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label5;

        $r8 = new java.lang.AssertionError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r8;

     label4:
        $r9 := @caughtexception;

        goto label3;

     label5:
        return;

        catch winterwell.jtwitter.TwitterException$Timeout from label1 to label2 with label4;
    }

    public void testIsFollower() throws java.lang.InterruptedException
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        long $l0;
        java.lang.AssertionError $r2;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isFollower(java.lang.String)>("winterstein");

        if $z0 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User stopFollowing(java.lang.String)>("winterstein");

        $l0 = (long) 5000;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isFollowing(java.lang.String)>("winterstein");

        if $z0 == 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User follow(java.lang.String)>("winterstein");

        $l0 = (long) 5000;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isFollowing(java.lang.String)>("winterstein");

        if $z0 != 0 goto label3;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label3:
        return;
    }

    public void testIsValidLogin()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isValidLogin()>();

        staticinvoke <winterwell.jtwitter.TwitterTest: void assertTrue(boolean)>($z0);

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("rumpelstiltskin", "thisisnotarealpassword");

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean isValidLogin()>();

        staticinvoke <winterwell.jtwitter.TwitterTest: void assertFalse(boolean)>($z0);

        return;
    }

    public void testManyFollowerIDs()
    {
        winterwell.jtwitter.Twitter r1, $r3;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        $r3 = new winterwell.jtwitter.Twitter;

        r1 = $r3;

        specialinvoke $r3.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $i0 = 50000;

        virtualinvoke r1.<winterwell.jtwitter.Twitter: void setMaxResults(int)>($i0);

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getFollowerIDs(java.lang.String)>("stephenfry");

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = 50000;

        if $i0 < $i1 goto label2;

        $z0 = 1;

     label1:
        staticinvoke <winterwell.jtwitter.TwitterTest: void assertTrue(boolean)>($z0);

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void testMisc()
    {
        winterwell.jtwitter.TwitterTest r0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        return;
    }

    public void testOldSearch()
    {
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.TwitterException$BadParameter r1;
        java.lang.AssertionError $r5;
        winterwell.jtwitter.Twitter r2;
        java.lang.Long $r3;
        java.lang.String $r4;
        boolean $z0, $z1;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r2 = new winterwell.jtwitter.Twitter;

     label1:
        specialinvoke r2.<winterwell.jtwitter.Twitter: void <init>()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(13415168197L);

        virtualinvoke r2.<winterwell.jtwitter.Twitter: void setSinceId(java.lang.Long)>($r3);

        virtualinvoke r2.<winterwell.jtwitter.Twitter: java.util.List search(java.lang.String)>("dinosaurs");

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r4 = virtualinvoke r1.<winterwell.jtwitter.TwitterException$BadParameter: java.lang.String getMessage()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("too old");

        $z1 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        if $z0 != 0 goto label4;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        return;

        catch winterwell.jtwitter.TwitterException$BadParameter from label1 to label2 with label3;
    }

    public void testRepetitionRetweet()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterException$Repetition $r4;
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.Twitter$Status $r2;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus(java.lang.String)>("winterstein");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status retweet(winterwell.jtwitter.Twitter$Status)>($r2);

        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status retweet(winterwell.jtwitter.Twitter$Status)>($r2);

     label2:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $r3 = new java.lang.AssertionError;

     label3:
        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

     label4:
        throw $r3;

     label5:
        $r4 := @caughtexception;

     label6:
        return;

        catch winterwell.jtwitter.TwitterException$Repetition from label1 to label2 with label5;
        catch winterwell.jtwitter.TwitterException$Repetition from label3 to label4 with label5;
    }

    public void testRepetitionSetStatus()
    {
        winterwell.jtwitter.TwitterException$Repetition $r6;
        winterwell.jtwitter.TwitterTest r0;
        java.util.Random $r2;
        java.lang.AssertionError $r5;
        winterwell.jtwitter.Twitter r1;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>(100);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("repetitive tweet ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("repetitive tweet ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>($r4);

     label2:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $r5 = new java.lang.AssertionError;

     label3:
        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

     label4:
        throw $r5;

     label5:
        $r6 := @caughtexception;

     label6:
        return;

        catch winterwell.jtwitter.TwitterException$Repetition from label1 to label2 with label5;
        catch winterwell.jtwitter.TwitterException$Repetition from label3 to label4 with label5;
    }

    public void testRetweet()
    {
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.Twitter$Status $r5, $r6;
        java.lang.String[] r2;
        java.util.Random $r3;
        java.lang.AssertionError $r8;
        winterwell.jtwitter.Twitter r1;
        int $i0;
        java.lang.StringBuilder $r9;
        java.lang.String $r4, $r7;
        winterwell.jtwitter.Twitter$User $r10;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        r2 = newarray (java.lang.String)[4];

        r2[0] = "winterstein";

        r2[1] = "joehalliwell";

        r2[2] = "spoonmcguffin";

        r2[3] = "forkmcguffin";

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $i0 = lengthof r2;

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>($i0);

        $r4 = r2[$i0];

        $r5 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status retweet(winterwell.jtwitter.Twitter$Status)>($r5);

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = $r6.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $r7 = $r5.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r8;

     label1:
        $r5 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus(java.lang.String)>("joehalliwell");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("RT @");

        $r10 = $r5.<winterwell.jtwitter.Twitter$Status: winterwell.jtwitter.Twitter$User user>;

        $r4 = $r10.<winterwell.jtwitter.Twitter$User: java.lang.String screenName>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = $r5.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>($r4);

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r4 = $r6.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $r7 = $r5.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r8;

     label2:
        return;
    }

    public void testRetweetsByMe()
    {
        winterwell.jtwitter.TwitterTest r0;
        java.util.Random $r3;
        long $l1, $l2;
        java.lang.AssertionError $r8;
        byte $b3;
        java.lang.Long $r12;
        int $i0;
        java.lang.String $r5, $r13;
        boolean $z0;
        winterwell.jtwitter.Twitter$Status $r6, $r7, $r11;
        winterwell.jtwitter.Twitter r1, r2;
        java.util.List $r9, $r10;
        java.lang.StringBuilder $r4;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("user", "password");

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(1000);

        $r4 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" strewth, what a test!");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status setStatus(java.lang.String)>($r5);

        r2 = new winterwell.jtwitter.Twitter;

        specialinvoke r2.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r7 = virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus(java.lang.String)>("spoonmcguffin");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r7.<winterwell.jtwitter.Twitter$Status: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r6 = virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status retweet(winterwell.jtwitter.Twitter$Status)>($r7);

        $r9 = virtualinvoke r2.<winterwell.jtwitter.Twitter: java.util.List getRetweetsByMe()>();

        $r10 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List getRetweetsOfMe()>();

        $r11 = virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r11 == null goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r12 = $r6.<winterwell.jtwitter.Twitter$Status: java.lang.Long inReplyToStatusId>;

        $l1 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $l2 = $r7.<winterwell.jtwitter.Twitter$Status: long id>;

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label3;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label3:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r11 = virtualinvoke $r6.<winterwell.jtwitter.Twitter$Status: winterwell.jtwitter.Twitter$Status getOriginal()>();

        $z0 = virtualinvoke $r11.<winterwell.jtwitter.Twitter$Status: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label4;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label4:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $r5 = virtualinvoke $r6.<winterwell.jtwitter.Twitter$Status: java.lang.String getText()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("RT @spoonmcguffin: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>($r13);

        if $z0 != 0 goto label5;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label5:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label6:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label7;

        $z0 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label7;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label7:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label8;

        $z0 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label8;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label8:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label9;

        $z0 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>($r7);

        if $z0 != 0 goto label9;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label9:
        return;
    }

    public void testSearch()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        int $i0;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List search(java.lang.String)>("java");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>()>();

        virtualinvoke r1.<winterwell.jtwitter.Twitter: void setMaxResults(int)>(10);

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List search(java.lang.String)>(":)");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 == 10 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>()>();

        virtualinvoke r1.<winterwell.jtwitter.Twitter: void setMaxResults(int)>(300);

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List search(java.lang.String)>(":)");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 > 100 goto label3;

        $r3 = new java.lang.AssertionError;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r3.<java.lang.AssertionError: void <init>(int)>($i0);

        throw $r3;

     label3:
        return;
    }

    public void testSearchUsers()
    {
        java.io.PrintStream $r3;
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.util.List $r2;
        java.lang.AssertionError $r4;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List searchUsers(java.lang.String)>("Nigel Griffiths");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r2);

        virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List searchUsers(java.lang.String)>("Fred near:Scotland");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        return;
    }

    public void testSendMessage()
    {
        winterwell.jtwitter.Twitter$Message $r2;
        java.io.PrintStream $r3;
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Message sendMessage(java.lang.String,java.lang.String)>("winterstein", "Please ignore this message");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public void testShow()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.lang.AssertionError $r3;
        winterwell.jtwitter.Twitter$User $r2;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User show(java.lang.String)>("jtwit");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User show(java.lang.String)>("tassosstevens");

        return;
    }

    public void testTooOld()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.lang.Long $r3;
        winterwell.jtwitter.TwitterException$E403 r2;
        java.lang.AssertionError $r4;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

     label1:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10584958134L);

        virtualinvoke r1.<winterwell.jtwitter.Twitter: void setSinceId(java.lang.Long)>($r3);

        virtualinvoke r1.<winterwell.jtwitter.Twitter: void setSearchLocation(double,double,java.lang.String)>(55.954151, -3.20277, "18km");

        virtualinvoke r1.<winterwell.jtwitter.Twitter: java.util.List search(java.lang.String)>("stuff");

     label2:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $r4 = new java.lang.AssertionError;

     label3:
        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

     label4:
        throw $r4;

     label5:
        r2 := @caughtexception;

        virtualinvoke r2.<winterwell.jtwitter.TwitterException$E403: java.lang.String getMessage()>();

     label6:
        return;

        catch winterwell.jtwitter.TwitterException$E403 from label1 to label2 with label5;
        catch winterwell.jtwitter.TwitterException$E403 from label3 to label4 with label5;
    }

    public void testUpdateStatus()
    {
        winterwell.jtwitter.TwitterTest r0;
        java.util.Date $r3;
        winterwell.jtwitter.Twitter$Status $r5, $r6;
        long $l0, $l1;
        java.lang.AssertionError $r8;
        winterwell.jtwitter.Twitter r1;
        byte $b2;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Experimenting (http://winterwell.com at ");

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        $r4 = virtualinvoke $r3.<java.util.Date: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r7 = $r6.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        $r4 = $r6.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r8;

     label1:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $l1 = $r5.<winterwell.jtwitter.Twitter$Status: long id>;

        $l0 = $r6.<winterwell.jtwitter.Twitter$Status: long id>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        return;
    }

    public void testUpdateStatusLength() throws java.lang.InterruptedException
    {
        winterwell.jtwitter.TwitterTest r0;
        java.util.Random r1, $r5;
        long $l2, $l3;
        java.lang.AssertionError $r11;
        byte $b4;
        int $i0, $i1;
        java.lang.String $r4, $r6, r7;
        boolean $z0;
        java.io.PrintStream $r8;
        winterwell.jtwitter.Twitter$Status $r9, $r10;
        char $c5;
        winterwell.jtwitter.Twitter r2;
        java.lang.StringBuilder $r3;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r2 = new winterwell.jtwitter.Twitter;

        specialinvoke r2.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        r1 = new java.util.Random;

        specialinvoke r1.<java.util.Random: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Test tweet aaaa ");

        $i0 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(1000);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        $r5 = new java.util.Random;

        specialinvoke $r5.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r5.<java.util.Random: int nextInt(int)>(1000);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

        $r3 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("help help ");

        r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = 0;

     label01:
        if $i0 < 2 goto label02;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(int)>($i0);

        $r9 = virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>(r7);

        $r10 = virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $r6 = $r10.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        r7 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z0 != 0 goto label03;

        $r11 = new java.lang.AssertionError;

        $r4 = $r10.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r11;

     label02:
        $r3 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $i1 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(1000);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label01;

     label03:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label04;

        $l2 = $r9.<winterwell.jtwitter.Twitter$Status: long id>;

        $l3 = $r10.<winterwell.jtwitter.Twitter$Status: long id>;

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label04;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label04:
        $r6 = $r4;

        $i0 = 0;

     label05:
        if $i0 < 12 goto label06;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(int)>($i0);

        $r9 = virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>($r6);

        $r10 = virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label07;

        r7 = $r10.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label07;

        $r11 = new java.lang.AssertionError;

        $r4 = $r10.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r11;

     label06:
        $r3 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $i1 = $i0 + 97;

        $c5 = (char) $i1;

        $r6 = specialinvoke r0.<winterwell.jtwitter.TwitterTest: java.lang.String repeat(char,int)>($c5, 9);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label05;

     label07:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label08;

        $l2 = $r9.<winterwell.jtwitter.Twitter$Status: long id>;

        $l3 = $r10.<winterwell.jtwitter.Twitter$Status: long id>;

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label08;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label08:
        $i0 = 0;

     label09:
        if $i0 < 13 goto label10;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(int)>($i0);

        $r9 = virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>($r4);

        $r10 = virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label11;

        $r6 = $r10.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label11;

        $r11 = new java.lang.AssertionError;

        $r4 = $r10.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r11;

     label10:
        $r3 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $i1 = $i0 + 97;

        $c5 = (char) $i1;

        $r4 = specialinvoke r0.<winterwell.jtwitter.TwitterTest: java.lang.String repeat(char,int)>($c5, 9);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label09;

     label11:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label12;

        $l2 = $r9.<winterwell.jtwitter.Twitter$Status: long id>;

        $l3 = $r10.<winterwell.jtwitter.Twitter$Status: long id>;

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label12;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label12:
        return;
    }

    public void testUpdateStatusUnicode()
    {
        winterwell.jtwitter.TwitterTest r0;
        winterwell.jtwitter.Twitter$Status $r2, $r3;
        long $l0, $l1;
        java.util.Random $r7;
        java.lang.AssertionError $r5;
        winterwell.jtwitter.Twitter r1;
        byte $b2;
        int $i3;
        java.lang.StringBuilder $r6;
        java.lang.String $r4, $r8;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>("Katten \u00e4r hemma. Hur m\u00e5r du? \u304a\u5143\u6c17\u3067\u3059\u304b");

        $r3 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = $r3.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("Katten \u00e4r hemma. Hur m\u00e5r du? \u304a\u5143\u6c17\u3067\u3059\u304b");

        if $z0 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        $r4 = $r3.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

     label1:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $l0 = $r2.<winterwell.jtwitter.Twitter$Status: long id>;

        $l1 = $r3.<winterwell.jtwitter.Twitter$Status: long id>;

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r6 = new java.lang.StringBuilder;

        $r7 = new java.util.Random;

        specialinvoke $r7.<java.util.Random: void <init>()>();

        $i3 = virtualinvoke $r7.<java.util.Random: int nextInt(int)>(1000);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \u0413\u043b\u0430\u0434\u044b\u0448 \u0412\u043b\u0430\u0434\u0438\u043c\u0438\u0440");

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status updateStatus(java.lang.String)>($r4);

        $r3 = virtualinvoke r1.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$Status getStatus()>();

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r8 = $r2.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label3;

        $r5 = new java.lang.AssertionError;

        $r4 = $r2.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

     label3:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r8 = $r3.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label4;

        $r5 = new java.lang.AssertionError;

        $r4 = $r3.<winterwell.jtwitter.Twitter$Status: java.lang.String text>;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

     label4:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $l0 = $r2.<winterwell.jtwitter.Twitter$Status: long id>;

        $l1 = $r3.<winterwell.jtwitter.Twitter$Status: long id>;

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label5;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label5:
        return;
    }

    public void testUserExists()
    {
        winterwell.jtwitter.Twitter r1;
        winterwell.jtwitter.TwitterTest r0;
        java.lang.AssertionError $r2;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.Twitter;

        specialinvoke r1.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,java.lang.String)>("jtwit", "notsofast");

        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean userExists(java.lang.String)>("spoonmcguffin");

        if $z0 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("There is a Spoon, honest");

        throw $r2;

     label1:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean userExists(java.lang.String)>("chopstickmcguffin");

        if $z0 == 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("However, there is no Chopstick");

        throw $r2;

     label2:
        $z0 = <winterwell.jtwitter.TwitterTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r1.<winterwell.jtwitter.Twitter: boolean userExists(java.lang.String)>("Alysha6822");

        if $z0 == 0 goto label3;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("Suspended users show up as nonexistent");

        throw $r2;

     label3:
        return;
    }

    public void tstFollowFollow() throws java.lang.InterruptedException
    {
        winterwell.jtwitter.Twitter r2;
        winterwell.jtwitter.TwitterTest r0;
        long $l0;
        java.lang.String $r3;
        winterwell.jtwitter.OAuthSignpostClient r1;

        r0 := @this: winterwell.jtwitter.TwitterTest;

        r1 = new winterwell.jtwitter.OAuthSignpostClient;

        specialinvoke r1.<winterwell.jtwitter.OAuthSignpostClient: void <init>(java.lang.String,java.lang.String,java.lang.String)>("Cz8ZLgitPR2jrQVaD6ncw", "9FFYaWJSvQ6Yi5tctN30eN6DnXWmdw0QgJMl7V6KGI", "oob");

        r2 = new winterwell.jtwitter.Twitter;

        specialinvoke r2.<winterwell.jtwitter.Twitter: void <init>(java.lang.String,winterwell.jtwitter.Twitter$IHttpClient)>("jtwit", r1);

        virtualinvoke r1.<winterwell.jtwitter.OAuthSignpostClient: void authorizeDesktop()>();

        $r3 = staticinvoke <winterwell.jtwitter.OAuthSignpostClient: java.lang.String askUser(java.lang.String)>("Please enter the verification PIN from Twitter");

        virtualinvoke r1.<winterwell.jtwitter.OAuthSignpostClient: void setAuthorizationCode(java.lang.String)>($r3);

        virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User follow(java.lang.String)>("winterstein");

        $l0 = (long) 2000;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

        virtualinvoke r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$User follow(java.lang.String)>("winterstein");

        return;
    }
}
