public class com.sktelecom.bestfoodhouse.controller.ImageUploadController extends java.lang.Object
{

    public void <init>()
    {
        com.sktelecom.bestfoodhouse.controller.ImageUploadController r0;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.ImageUploadController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int imageUpload(java.lang.String, java.lang.String, int, java.lang.String[])
    {
        java.lang.Throwable $r15, $r17;
        byte[] $r12;
        java.io.ByteArrayOutputStream r9, $r21;
        java.lang.String[] $r3;
        java.io.ByteArrayInputStream r6, $r22;
        int $i0, $i1;
        android.graphics.Bitmap$CompressFormat $r11;
        java.lang.String $r1, $r2;
        android.graphics.Matrix r4, $r20;
        org.xmlpull.v1.XmlPullParser $r14;
        boolean $z0;
        java.io.IOException $r25;
        org.xmlpull.v1.XmlPullParserException $r16;
        com.sktelecom.bestfoodhouse.controller.ImageUploadController r0;
        java.io.StringReader r8, $r23;
        org.xmlpull.v1.XmlPullParserFactory $r13;
        android.graphics.Bitmap $r10;
        float $f0;
        com.sktelecom.bestfoodhouse.util.HttpMultipartClient r5, $r18;
        java.io.UnsupportedEncodingException $r24;
        android.graphics.BitmapFactory$Options r7, $r19;

        r0 := @this: com.sktelecom.bestfoodhouse.controller.ImageUploadController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String[];

        $r18 = new com.sktelecom.bestfoodhouse.util.HttpMultipartClient;

        r5 = $r18;

        specialinvoke $r18.<com.sktelecom.bestfoodhouse.util.HttpMultipartClient: void <init>(java.lang.String,java.lang.String,int)>("113.217.232.24", "/food-mater/xml/1.0/tastesreviews/upload.xml", 80);

        $r2 = <java.io.File: java.lang.String separator>;

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>($r2);

        $i1 = $i1 + 1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r19 = new android.graphics.BitmapFactory$Options;

        r7 = $r19;

     label01:
        specialinvoke $r19.<android.graphics.BitmapFactory$Options: void <init>()>();

     label02:
        r7.<android.graphics.BitmapFactory$Options: int inSampleSize> = 4;

     label03:
        $r10 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r1, r7);

     label04:
        $r20 = new android.graphics.Matrix;

        r4 = $r20;

     label05:
        specialinvoke $r20.<android.graphics.Matrix: void <init>()>();

     label06:
        $f0 = (float) $i0;

     label07:
        virtualinvoke r4.<android.graphics.Matrix: void setRotate(float)>($f0);

        $i0 = virtualinvoke $r10.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r10.<android.graphics.Bitmap: int getHeight()>();

        $r10 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r10, 0, 0, $i0, $i1, r4, 0);

     label08:
        $r21 = new java.io.ByteArrayOutputStream;

        r9 = $r21;

     label09:
        specialinvoke $r21.<java.io.ByteArrayOutputStream: void <init>()>();

     label10:
        $r11 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label11:
        virtualinvoke $r10.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r11, 50, r9);

        $r12 = virtualinvoke r9.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label12:
        $r22 = new java.io.ByteArrayInputStream;

        r6 = $r22;

     label13:
        specialinvoke $r22.<java.io.ByteArrayInputStream: void <init>(byte[])>($r12);

        virtualinvoke r5.<com.sktelecom.bestfoodhouse.util.HttpMultipartClient: void setRequestMethod(java.lang.String)>("POST");

        $i0 = virtualinvoke r6.<java.io.ByteArrayInputStream: int available()>();

        virtualinvoke r5.<com.sktelecom.bestfoodhouse.util.HttpMultipartClient: void addFile(java.lang.String,java.io.InputStream,int)>($r2, r6, $i0);

        virtualinvoke r5.<com.sktelecom.bestfoodhouse.util.HttpMultipartClient: void send()>();

        virtualinvoke r5.<com.sktelecom.bestfoodhouse.util.HttpMultipartClient: void disconnect()>();

        virtualinvoke r6.<java.io.ByteArrayInputStream: void close()>();

        $r1 = virtualinvoke r5.<com.sktelecom.bestfoodhouse.util.HttpMultipartClient: java.lang.String getResponseBody()>();

        $r13 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r14 = virtualinvoke $r13.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label14:
        $r23 = new java.io.StringReader;

        r8 = $r23;

     label15:
        specialinvoke $r23.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r8);

        $i0 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label16:
        if $i0 != 1 goto label17;

        return -1;

     label17:
        lookupswitch($i0)
        {
            case 2: goto label20;
            default: goto label18;
        };

     label18:
        $i0 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: int next()>();

     label19:
        goto label16;

     label20:
        $r1 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("imageFileItem");

     label21:
        if $z0 == 0 goto label18;

     label22:
        interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r1 = interfaceinvoke $r14.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label23:
        $r3[0] = $r1;

        return 0;

     label24:
        $r15 := @caughtexception;

        $r24 = (java.io.UnsupportedEncodingException) $r15;

        virtualinvoke $r24.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return 1001;

     label25:
        $r16 := @caughtexception;

        virtualinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return 1002;

     label26:
        $r17 := @caughtexception;

        $r25 = (java.io.IOException) $r17;

        virtualinvoke $r25.<java.io.IOException: void printStackTrace()>();

        return 1003;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label24;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label24;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label24;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label24;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label24;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label24;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label24;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label24;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label24;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label24;
        catch java.io.UnsupportedEncodingException from label22 to label23 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label25;
        catch java.io.IOException from label01 to label02 with label26;
        catch java.io.IOException from label03 to label04 with label26;
        catch java.io.IOException from label05 to label06 with label26;
        catch java.io.IOException from label07 to label08 with label26;
        catch java.io.IOException from label09 to label10 with label26;
        catch java.io.IOException from label11 to label12 with label26;
        catch java.io.IOException from label13 to label14 with label26;
        catch java.io.IOException from label15 to label16 with label26;
        catch java.io.IOException from label18 to label19 with label26;
        catch java.io.IOException from label20 to label21 with label26;
        catch java.io.IOException from label22 to label23 with label26;
    }
}
