public class com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache extends java.lang.Object implements com.nostra13.universalimageloader.cache.disc.DiskCache
{
    public static final int DEFAULT_BUFFER_SIZE;
    public static final android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT;
    public static final int DEFAULT_COMPRESS_QUALITY;
    private static final java.lang.String ERROR_ARG_NEGATIVE;
    private static final java.lang.String ERROR_ARG_NULL;
    protected int bufferSize;
    protected com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache;
    protected android.graphics.Bitmap$CompressFormat compressFormat;
    protected int compressQuality;
    protected final com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator;
    private java.io.File reserveCacheDir;

    static void <clinit>()
    {
        android.graphics.Bitmap$CompressFormat $r0;

        <com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: java.lang.String ERROR_ARG_NULL> = " argument must be not null";

        <com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: java.lang.String ERROR_ARG_NEGATIVE> = " argument must be positive number";

        <com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: int DEFAULT_COMPRESS_QUALITY> = 100;

        <com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: int DEFAULT_BUFFER_SIZE> = 32768;

        $r0 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        <com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT> = $r0;

        return;
    }

    public void <init>(java.io.File, com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator, long)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator $r2;
        long $l0;
        java.io.File $r1;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator;

        $l0 := @parameter2: long;

        specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: void <init>(java.io.File,java.io.File,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,long,int)>($r1, null, $r2, $l0, 0);

        return;
    }

    public void <init>(java.io.File, java.io.File, com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator, long, int)
    {
        com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator $r3;
        long $l0;
        java.lang.IllegalArgumentException $r5;
        java.io.File $r1, $r2;
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        byte $b2;
        int $i1, $i3;
        android.graphics.Bitmap$CompressFormat $r4;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator;

        $l0 := @parameter3: long;

        $i1 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: int bufferSize> = 32768;

        $r4 = <com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT>;

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: android.graphics.Bitmap$CompressFormat compressFormat> = $r4;

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: int compressQuality> = 100;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cacheDir argument must be not null");

        throw $r5;

     label1:
        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cacheMaxSize argument must be positive number");

        throw $r5;

     label2:
        if $i1 >= 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cacheMaxFileCount argument must be positive number");

        throw $r5;

     label3:
        if $r3 != null goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fileNameGenerator argument must be not null");

        throw $r5;

     label4:
        $b2 = $l0 cmp 0L;

        if $b2 != 0 goto label5;

        $l0 = 9223372036854775807L;

     label5:
        if $i1 != 0 goto label6;

        $i1 = 2147483647;

     label6:
        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: java.io.File reserveCacheDir> = $r2;

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator> = $r3;

        specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: void initCache(java.io.File,java.io.File,long,int)>($r1, $r2, $l0, $i1);

        return;
    }

    private java.lang.String getKey(java.lang.String)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator $r2;
        java.lang.String $r1;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator>;

        $r1 = interfaceinvoke $r2.<com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator: java.lang.String generate(java.lang.String)>($r1);

        return $r1;
    }

    private void initCache(java.io.File, java.io.File, long, int)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        java.lang.Throwable $r4;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r3;
        int $i1;
        long $l0;
        java.io.File $r1, $r2;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $l0 := @parameter2: long;

        $i1 := @parameter3: int;

     label1:
        $r3 = staticinvoke <com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache open(java.io.File,int,int,long,int)>($r1, 1, 1, $l0, $i1);

     label2:
        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache> = $r3;

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r4);

        if $r2 == null goto label4;

        specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: void initCache(java.io.File,java.io.File,long,int)>($r2, null, $l0, $i1);

     label4:
        $r3 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

        if $r3 != null goto label5;

        throw $r4;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void clear()
    {
        java.lang.Throwable $r4, $r5;
        long $l0;
        java.io.File $r1, $r3;
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r2;
        int $i1;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

     label01:
        virtualinvoke $r2.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void delete()>();

     label02:
        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

     label03:
        $r3 = virtualinvoke $r2.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: java.io.File getDirectory()>();

     label04:
        $r1 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: java.io.File reserveCacheDir>;

        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

     label05:
        $l0 = virtualinvoke $r2.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: long getMaxSize()>();

     label06:
        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

     label07:
        $i1 = virtualinvoke $r2.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: int getMaxFileCount()>();

        specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: void initCache(java.io.File,java.io.File,long,int)>($r3, $r1, $l0, $i1);

     label08:
        return;

     label09:
        $r4 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r4);

        goto label02;

     label10:
        $r5 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r5);

        return;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label07 to label08 with label10;
    }

    public void close()
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        java.lang.Throwable $r2;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r1;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r1 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

     label1:
        virtualinvoke $r1.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: void close()>();

     label2:
        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache> = null;

        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r2);

        goto label2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.io.File get(java.lang.String)
    {
        java.lang.Throwable $r6, $r7, $r8;
        java.io.File $r2;
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot $r4, $r5;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r3;
        java.lang.String $r1;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = null;

     label01:
        $r3 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

     label02:
        $r1 = specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: java.lang.String getKey(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot get(java.lang.String)>($r1);

     label03:
        $r5 = $r4;

        if $r4 != null goto label05;

     label04:
        if $r4 == null goto label15;

        virtualinvoke $r4.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>();

        return $r2;

     label05:
        $r2 = virtualinvoke $r4.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: java.io.File getFile(int)>(0);

     label06:
        goto label04;

     label07:
        $r6 := @caughtexception;

        $r5 = null;

     label08:
        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r6);

     label09:
        if $r5 == null goto label16;

        virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>();

        return null;

     label10:
        $r7 := @caughtexception;

        $r5 = null;

        $r8 = $r7;

     label11:
        if $r5 == null goto label12;

        virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot: void close()>();

     label12:
        throw $r8;

     label13:
        $r8 := @caughtexception;

        goto label11;

     label14:
        $r6 := @caughtexception;

        goto label08;

     label15:
        return $r2;

     label16:
        return null;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
    }

    public java.io.File getDirectory()
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r2;
        java.io.File $r1;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

        $r1 = virtualinvoke $r2.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: java.io.File getDirectory()>();

        return $r1;
    }

    public boolean remove(java.lang.String)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        java.lang.Throwable $r3;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

     label1:
        $r1 = specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: java.lang.String getKey(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: boolean remove(java.lang.String)>($r1);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.L: void e(java.lang.Throwable)>($r3);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean save(java.lang.String, android.graphics.Bitmap)
    {
        java.io.OutputStream $r6;
        java.lang.Throwable $r8;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor $r4;
        java.io.BufferedOutputStream $r5;
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r3;
        android.graphics.Bitmap $r2;
        int $i0;
        android.graphics.Bitmap$CompressFormat $r7;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r3 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

        $r1 = specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: java.lang.String getKey(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String)>($r1);

        if $r4 != null goto label1;

        return 0;

     label1:
        $r5 = new java.io.BufferedOutputStream;

        $r6 = virtualinvoke $r4.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>(0);

        $i0 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: int bufferSize>;

        specialinvoke $r5.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r6, $i0);

     label2:
        $r7 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: android.graphics.Bitmap$CompressFormat compressFormat>;

        $i0 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: int compressQuality>;

        $z0 = virtualinvoke $r2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r7, $i0, $r5);

     label3:
        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>($r5);

        if $z0 == 0 goto label5;

        virtualinvoke $r4.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: void commit()>();

        return $z0;

     label4:
        $r8 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>($r5);

        throw $r8;

     label5:
        virtualinvoke $r4.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: void abort()>();

        return $z0;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean save(java.lang.String, java.io.InputStream, com.nostra13.universalimageloader.utils.IoUtils$CopyListener)
    {
        java.io.OutputStream $r7;
        java.lang.Throwable $r8;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor $r5;
        com.nostra13.universalimageloader.utils.IoUtils$CopyListener $r3;
        java.io.BufferedOutputStream $r6;
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r4;
        int $i0;
        java.lang.String $r1;
        java.io.InputStream $r2;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.InputStream;

        $r3 := @parameter2: com.nostra13.universalimageloader.utils.IoUtils$CopyListener;

        $r4 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache>;

        $r1 = specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: java.lang.String getKey(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String)>($r1);

        if $r5 != null goto label1;

        return 0;

     label1:
        $r6 = new java.io.BufferedOutputStream;

        $r7 = virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>(0);

        $i0 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: int bufferSize>;

        specialinvoke $r6.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r7, $i0);

     label2:
        $i0 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: int bufferSize>;

        $z0 = staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int)>($r2, $r6, $r3, $i0);

     label3:
        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>($r6);

        if $z0 == 0 goto label4;

        virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: void commit()>();

        return $z0;

     label4:
        virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: void abort()>();

        return $z0;

     label5:
        $r8 := @caughtexception;

        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void closeSilently(java.io.Closeable)>($r6);

        virtualinvoke $r5.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor: void abort()>();

        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public void setBufferSize(int)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        int $i0;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $i0 := @parameter0: int;

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: int bufferSize> = $i0;

        return;
    }

    public void setCompressFormat(android.graphics.Bitmap$CompressFormat)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        android.graphics.Bitmap$CompressFormat $r1;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $r1 := @parameter0: android.graphics.Bitmap$CompressFormat;

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: android.graphics.Bitmap$CompressFormat compressFormat> = $r1;

        return;
    }

    public void setCompressQuality(int)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache r0;
        int $i0;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache;

        $i0 := @parameter0: int;

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache: int compressQuality> = $i0;

        return;
    }
}
