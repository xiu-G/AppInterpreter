public class b.e.a extends b.e.g implements java.util.Map
{
    b.e.f i;

    public void <init>()
    {
        b.e.a r0;

        r0 := @this: b.e.a;

        specialinvoke r0.<b.e.g: void <init>()>();

        return;
    }

    public void <init>(int)
    {
        int $i0;
        b.e.a r0;

        r0 := @this: b.e.a;

        $i0 := @parameter0: int;

        specialinvoke r0.<b.e.g: void <init>(int)>($i0);

        return;
    }

    public void <init>(b.e.g)
    {
        b.e.g $r1;
        b.e.a r0;

        r0 := @this: b.e.a;

        $r1 := @parameter0: b.e.g;

        specialinvoke r0.<b.e.g: void <init>(b.e.g)>($r1);

        return;
    }

    private b.e.f n()
    {
        b.e.f $r1;
        b.e.a$a $r2;
        b.e.a r0;

        r0 := @this: b.e.a;

        $r1 = r0.<b.e.a: b.e.f i>;

        if $r1 != null goto label1;

        $r2 = new b.e.a$a;

        specialinvoke $r2.<b.e.a$a: void <init>(b.e.a)>(r0);

        r0.<b.e.a: b.e.f i> = $r2;

     label1:
        $r1 = r0.<b.e.a: b.e.f i>;

        return $r1;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r2;
        b.e.f $r1;
        b.e.a r0;

        r0 := @this: b.e.a;

        $r1 = specialinvoke r0.<b.e.a: b.e.f n()>();

        $r2 = virtualinvoke $r1.<b.e.f: java.util.Set l()>();

        return $r2;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r2;
        b.e.f $r1;
        b.e.a r0;

        r0 := @this: b.e.a;

        $r1 = specialinvoke r0.<b.e.a: b.e.f n()>();

        $r2 = virtualinvoke $r1.<b.e.f: java.util.Set m()>();

        return $r2;
    }

    public boolean o(java.util.Collection)
    {
        b.e.a r0;
        boolean $z0;
        java.util.Collection $r1;

        r0 := @this: b.e.a;

        $r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <b.e.f: boolean p(java.util.Map,java.util.Collection)>(r0, $r1);

        return $z0;
    }

    public void putAll(java.util.Map)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        b.e.a r0;
        java.util.Map $r1;
        int $i0, $i1;
        java.lang.Object $r4, $r6;
        boolean $z0;

        r0 := @this: b.e.a;

        $r1 := @parameter0: java.util.Map;

        $i0 = r0.<b.e.g: int d>;

        $i1 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $i0 = $i0 + $i1;

        virtualinvoke r0.<b.e.g: void c(int)>($i0);

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<b.e.g: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        goto label1;

     label2:
        return;
    }

    public java.util.Collection values()
    {
        b.e.f $r1;
        b.e.a r0;
        java.util.Collection $r2;

        r0 := @this: b.e.a;

        $r1 = specialinvoke r0.<b.e.a: b.e.f n()>();

        $r2 = virtualinvoke $r1.<b.e.f: java.util.Collection n()>();

        return $r2;
    }
}
