public class vStudio.Android.Camera360.Tools.CollectionTools extends java.lang.Object
{
    public static java.lang.String[] DEAFULT_INAVALID;
    public static int NOT_FINDED;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "";

        <vStudio.Android.Camera360.Tools.CollectionTools: java.lang.String[] DEAFULT_INAVALID> = $r0;

        <vStudio.Android.Camera360.Tools.CollectionTools: int NOT_FINDED> = -1;

        return;
    }

    public void <init>()
    {
        vStudio.Android.Camera360.Tools.CollectionTools r0;

        r0 := @this: vStudio.Android.Camera360.Tools.CollectionTools;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.LinkedList asLinkedList(java.lang.String[])
    {
        int $i0, $i1;
        java.lang.String[] $r0;
        java.lang.String r2;
        java.util.LinkedList r1;

        $r0 := @parameter0: java.lang.String[];

        r1 = new java.util.LinkedList;

        specialinvoke r1.<java.util.LinkedList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return r1;

     label2:
        r2 = $r0[$i1];

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);

        $i1 = $i1 + 1;

        goto label1;
    }

    public static android.graphics.Point getBestSize(java.util.List, int, int)
    {
        java.util.Iterator $r2;
        android.graphics.Point r5;
        vStudio.Android.Camera360.Tools.CollectionTools$c $r3;
        java.util.List r1;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        java.util.LinkedList r0;
        boolean $z0;

        r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r0 = new java.util.LinkedList;

        specialinvoke r0.<java.util.LinkedList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $i2 = virtualinvoke r0.<java.util.LinkedList: int size()>();

        if $i2 <= 0 goto label3;

        $r3 = new vStudio.Android.Camera360.Tools.CollectionTools$c;

        specialinvoke $r3.<vStudio.Android.Camera360.Tools.CollectionTools$c: void <init>(int,int)>($i0, $i1);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r3);

        $r4 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object getFirst()>();

        r5 = (android.graphics.Point) $r4;

        return r5;

     label2:
        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.graphics.Point) $r4;

        $z0 = staticinvoke <vStudio.Android.Camera360.Tools.CollectionTools: boolean isSame(android.graphics.Point,int,int)>(r5, $i0, $i1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<java.util.LinkedList: boolean add(java.lang.Object)>(r5);

        goto label1;

     label3:
        return null;
    }

    private static boolean is(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isAvalid(java.lang.String[], java.lang.String, java.lang.String[])
    {
        int $i0;
        java.lang.String[] $r0, $r2;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        $i0 = staticinvoke <vStudio.Android.Camera360.Tools.CollectionTools: int search(java.lang.String[],java.lang.String)>($r2, $r1);

        if $i0 >= 0 goto label1;

        $i0 = staticinvoke <vStudio.Android.Camera360.Tools.CollectionTools: int search(java.lang.String[],java.lang.String)>($r0, $r1);

        if $i0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isAvalid(java.lang.String[][], java.lang.String, java.lang.String[])
    {
        int i0, $i1;
        java.lang.String[] $r2, $r3;
        java.lang.String $r1;
        java.lang.String[][] $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[][];

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 < $i1 goto label2;

        return 1;

     label2:
        $r3 = $r0[i0];

        $z0 = staticinvoke <vStudio.Android.Camera360.Tools.CollectionTools: boolean isAvalid(java.lang.String[],java.lang.String,java.lang.String[])>($r3, $r1, $r2);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i0 = i0 + 1;

        goto label1;
    }

    static boolean isAvlied(android.graphics.Point, int, int)
    {
        int $i0, $i1;
        android.graphics.Point $r0;

        $r0 := @parameter0: android.graphics.Point;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return 0;
    }

    static boolean isSame(android.graphics.Point, int, int)
    {
        byte $b2;
        int $i0, $i1;
        float f0, f1, $f2;
        android.graphics.Point $r0;

        $r0 := @parameter0: android.graphics.Point;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        f0 = (float) $i0;

        f0 = f0 * 1.0F;

        f1 = (float) $i1;

        f1 = f1 * 1.0F;

        f0 = f0 / f1;

        $i0 = $r0.<android.graphics.Point: int x>;

        f1 = (float) $i0;

        f1 = f1 * 1.0F;

        $i0 = $r0.<android.graphics.Point: int y>;

        $f2 = (float) $i0;

        $f2 = $f2 * 1.0F;

        f1 = f1 / $f2;

        $b2 = f0 cmpl f1;

        $i0 = (int) $b2;

        if $i0 <= 0 goto label2;

        f0 = f1 / f0;

     label1:
        $b2 = f0 cmpl 0.95F;

        $i0 = (int) $b2;

        if $i0 <= 0 goto label3;

        return 1;

     label2:
        f0 = f0 / f1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean noRepeatStack(java.util.ArrayList, java.lang.String)
    {
        java.lang.String $r1;
        java.util.ArrayList r0;
        boolean $z0;

        r0 := @parameter0: java.util.ArrayList;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <vStudio.Android.Camera360.Tools.CollectionTools: boolean noRepeatStack(java.util.ArrayList,java.lang.String,int)>(r0, $r1, 10);

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r0);

        return $z0;
    }

    public static boolean noRepeatStack(java.util.ArrayList, java.lang.String, int)
    {
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1, $r2;
        java.util.ArrayList r0;
        boolean $z0;

        r0 := @parameter0: java.util.ArrayList;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label3;

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return 1;

     label3:
        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r2 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label6;

     label4:
        $z0 = virtualinvoke r0.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        if $z0 != 0 goto label4;

        virtualinvoke r0.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r1);

     label5:
        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if $i1 <= 10 goto label7;

        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        $i1 = $i1 - 1;

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        goto label5;

     label6:
        return 0;

     label7:
        return 1;
    }

    public static org.json.JSONArray remove(int, org.json.JSONArray)
    {
        java.lang.ArrayIndexOutOfBoundsException $r2;
        org.json.JSONException $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        java.lang.StackTraceElement $r5;
        org.json.JSONArray $r0, r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: org.json.JSONArray;

        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 < $i1 goto label1;

        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>($i0);

        throw $r2;

     label1:
        r1 = new org.json.JSONArray;

        specialinvoke r1.<org.json.JSONArray: void <init>()>();

        $i1 = 0;

     label2:
        $i2 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i1 < $i2 goto label3;

        return r1;

     label3:
        if $i0 == $i1 goto label5;

     label4:
        $r3 = virtualinvoke $r0.<org.json.JSONArray: java.lang.Object get(int)>($i1);

        virtualinvoke r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r3);

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

        $r5 = staticinvoke <vStudio.Android.GPhoto.MyLog: java.lang.StackTraceElement getTraceInfo()>();

        staticinvoke <vStudio.Android.GPhoto.MyLog: void i(java.lang.Exception,java.lang.StackTraceElement)>($r4, $r5);

        goto label5;

        catch org.json.JSONException from label4 to label5 with label6;
    }

    public static int search(java.lang.String[], java.lang.String)
    {
        int i0, $i1;
        java.lang.String[] $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        if $r0 != null goto label2;

     label1:
        i0 = <vStudio.Android.Camera360.Tools.CollectionTools: int NOT_FINDED>;

        return i0;

     label2:
        i0 = 0;

     label3:
        $i1 = lengthof $r0;

        if i0 < $i1 goto label4;

        i0 = <vStudio.Android.Camera360.Tools.CollectionTools: int NOT_FINDED>;

        return i0;

     label4:
        $r2 = $r0[i0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

        return i0;

     label5:
        i0 = i0 + 1;

        goto label3;
    }

    public static int searchAuto(java.lang.String[], java.lang.String)
    {
        int $i0;
        java.lang.String[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <vStudio.Android.Camera360.Tools.CollectionTools: int search(java.lang.String[],java.lang.String)>($r0, $r1);

        if $i0 >= 0 goto label1;

        $i0 = staticinvoke <vStudio.Android.Camera360.Tools.CollectionTools: int searchNumber(java.lang.String[],java.lang.String)>($r0, $r1);

     label1:
        return $i0;
    }

    public static int searchNumber(java.lang.String[], java.lang.String)
    {
        byte $b2;
        int i0, $i1;
        float $f0, $f1;
        java.lang.String[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        if $r0 != null goto label2;

     label1:
        i0 = <vStudio.Android.Camera360.Tools.CollectionTools: int NOT_FINDED>;

        return i0;

     label2:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

        i0 = 0;

     label3:
        $i1 = lengthof $r0;

        if i0 < $i1 goto label4;

        i0 = <vStudio.Android.Camera360.Tools.CollectionTools: int NOT_FINDED>;

        return i0;

     label4:
        $r1 = $r0[i0];

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

        $b2 = $f0 cmpl $f1;

        if $b2 != 0 goto label5;

        return i0;

     label5:
        i0 = i0 + 1;

        goto label3;
    }

    public static java.util.ArrayList sortBy(java.util.ArrayList, java.lang.String)
    {
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.String $r1, r5;
        java.util.LinkedList r2;
        java.util.ArrayList r0;
        boolean $z0;

        r0 := @parameter0: java.util.ArrayList;

        $r1 := @parameter1: java.lang.String;

        r2 = new java.util.LinkedList;

        specialinvoke r2.<java.util.LinkedList: void <init>()>();

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        r0 = new java.util.ArrayList;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r2.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label5;

        return r0;

     label3:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z0 = staticinvoke <vStudio.Android.Camera360.Tools.CollectionTools: boolean is(java.lang.String,java.lang.String)>(r5, $r1);

        if $z0 == 0 goto label4;

        virtualinvoke r2.<java.util.LinkedList: void addFirst(java.lang.Object)>(r5);

        goto label1;

     label4:
        virtualinvoke r2.<java.util.LinkedList: void addLast(java.lang.Object)>(r5);

        goto label1;

     label5:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r4;

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label2;
    }

    public static java.util.ArrayList sortMapBy(java.util.ArrayList, java.lang.String, java.lang.String)
    {
        java.util.Iterator $r4;
        java.util.HashMap r6;
        java.util.ArrayList r0;
        java.lang.Object $r5;
        java.lang.String $r1, $r2, $r7;
        java.util.LinkedList r3;
        boolean $z0;

        r0 := @parameter0: java.util.ArrayList;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r3 = new java.util.LinkedList;

        specialinvoke r3.<java.util.LinkedList: void <init>()>();

        $r4 = virtualinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        r0 = new java.util.ArrayList;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r3.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label5;

        return r0;

     label3:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.HashMap) $r5;

        $r5 = virtualinvoke r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $z0 = staticinvoke <vStudio.Android.Camera360.Tools.CollectionTools: boolean is(java.lang.String,java.lang.String)>($r7, $r1);

        if $z0 == 0 goto label4;

        virtualinvoke r3.<java.util.LinkedList: void addFirst(java.lang.Object)>(r6);

        goto label1;

     label4:
        virtualinvoke r3.<java.util.LinkedList: void addLast(java.lang.Object)>(r6);

        goto label1;

     label5:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.HashMap) $r5;

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label2;
    }

    public static java.util.ArrayList toArrayList(java.lang.String)
    {
        org.json.JSONException $r3;
        java.lang.StackTraceElement $r4;
        java.lang.String $r0;
        org.json.JSONArray $r1;
        java.util.ArrayList $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new org.json.JSONArray;

     label1:
        specialinvoke $r1.<org.json.JSONArray: void <init>(java.lang.String)>($r0);

        $r2 = staticinvoke <vStudio.Android.Camera360.Tools.CollectionTools: java.util.ArrayList toArrayList(org.json.JSONArray)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<org.json.JSONException: void printStackTrace()>();

        $r4 = staticinvoke <vStudio.Android.GPhoto.MyLog: java.lang.StackTraceElement getTraceInfo()>();

        staticinvoke <vStudio.Android.GPhoto.MyLog: void i(java.lang.Exception,java.lang.StackTraceElement)>($r3, $r4);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static java.util.ArrayList toArrayList(org.json.JSONArray)
    {
        org.json.JSONException $r3;
        int i0, $i1;
        java.lang.String $r2;
        org.json.JSONArray $r0;
        java.util.ArrayList r1;

        $r0 := @parameter0: org.json.JSONArray;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if i0 < $i1 goto label2;

        return r1;

     label2:
        $r2 = virtualinvoke $r0.<org.json.JSONArray: java.lang.String getString(int)>(i0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r3 := @caughtexception;

        virtualinvoke $r3.<org.json.JSONException: void printStackTrace()>();

        goto label3;

        catch org.json.JSONException from label2 to label3 with label4;
    }
}
