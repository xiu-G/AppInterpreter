final class twitter4j.DirectMessageJSONImpl extends twitter4j.TwitterResponseImpl implements twitter4j.DirectMessage, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.Date createdAt;
    private int id;
    private twitter4j.User recipient;
    private int recipientId;
    private java.lang.String recipientScreenName;
    private twitter4j.User sender;
    private int senderId;
    private java.lang.String senderScreenName;
    private java.lang.String text;

    void <init>(twitter4j.http.HttpResponse) throws twitter4j.TwitterException
    {
        twitter4j.org.json.JSONObject $r2;
        twitter4j.DirectMessageJSONImpl r0;
        twitter4j.http.HttpResponse $r1;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        $r1 := @parameter0: twitter4j.http.HttpResponse;

        specialinvoke r0.<twitter4j.TwitterResponseImpl: void <init>(twitter4j.http.HttpResponse)>($r1);

        $r2 = virtualinvoke $r1.<twitter4j.http.HttpResponse: twitter4j.org.json.JSONObject asJSONObject()>();

        specialinvoke r0.<twitter4j.DirectMessageJSONImpl: void init(twitter4j.org.json.JSONObject)>($r2);

        return;
    }

    void <init>(twitter4j.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.org.json.JSONObject $r1;
        twitter4j.DirectMessageJSONImpl r0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        $r1 := @parameter0: twitter4j.org.json.JSONObject;

        specialinvoke r0.<twitter4j.TwitterResponseImpl: void <init>()>();

        specialinvoke r0.<twitter4j.DirectMessageJSONImpl: void init(twitter4j.org.json.JSONObject)>($r1);

        return;
    }

    static twitter4j.ResponseList createDirectMessageList(twitter4j.http.HttpResponse) throws twitter4j.TwitterException
    {
        twitter4j.DirectMessageJSONImpl $r5;
        twitter4j.org.json.JSONArray $r4;
        twitter4j.org.json.JSONObject $r6;
        twitter4j.http.HttpResponse $r0;
        int $i0, i1;
        twitter4j.org.json.JSONException r2;
        twitter4j.TwitterException r3;
        twitter4j.ResponseList r1;

        $r0 := @parameter0: twitter4j.http.HttpResponse;

     label01:
        $r4 = virtualinvoke $r0.<twitter4j.http.HttpResponse: twitter4j.org.json.JSONArray asJSONArray()>();

        $i0 = virtualinvoke $r4.<twitter4j.org.json.JSONArray: int length()>();

     label02:
        r1 = new twitter4j.ResponseList;

     label03:
        specialinvoke r1.<twitter4j.ResponseList: void <init>(int,twitter4j.http.HttpResponse)>($i0, $r0);

     label04:
        i1 = 0;

     label05:
        if i1 >= $i0 goto label10;

        $r5 = new twitter4j.DirectMessageJSONImpl;

     label06:
        $r6 = virtualinvoke $r4.<twitter4j.org.json.JSONArray: twitter4j.org.json.JSONObject getJSONObject(int)>(i1);

        specialinvoke $r5.<twitter4j.DirectMessageJSONImpl: void <init>(twitter4j.org.json.JSONObject)>($r6);

        virtualinvoke r1.<twitter4j.ResponseList: boolean add(java.lang.Object)>($r5);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        r2 := @caughtexception;

        r3 = new twitter4j.TwitterException;

        specialinvoke r3.<twitter4j.TwitterException: void <init>(java.lang.Exception)>(r2);

        throw r3;

     label09:
        r3 := @caughtexception;

        throw r3;

     label10:
        return r1;

        catch twitter4j.org.json.JSONException from label01 to label02 with label08;
        catch twitter4j.org.json.JSONException from label03 to label04 with label08;
        catch twitter4j.org.json.JSONException from label06 to label07 with label08;
        catch twitter4j.TwitterException from label01 to label02 with label09;
        catch twitter4j.TwitterException from label03 to label04 with label09;
        catch twitter4j.TwitterException from label06 to label07 with label09;
    }

    private void init(twitter4j.org.json.JSONObject) throws twitter4j.TwitterException
    {
        twitter4j.DirectMessageJSONImpl r0;
        java.util.Date $r4;
        twitter4j.UserJSONImpl $r5;
        twitter4j.org.json.JSONObject $r1, $r6;
        int $i0;
        twitter4j.org.json.JSONException r2;
        twitter4j.TwitterException $r7;
        java.lang.String $r3;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        $r1 := @parameter0: twitter4j.org.json.JSONObject;

        $i0 = staticinvoke <twitter4j.ParseUtil: int getInt(java.lang.String,twitter4j.org.json.JSONObject)>("id", $r1);

        r0.<twitter4j.DirectMessageJSONImpl: int id> = $i0;

        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getUnescapedString(java.lang.String,twitter4j.org.json.JSONObject)>("text", $r1);

        r0.<twitter4j.DirectMessageJSONImpl: java.lang.String text> = $r3;

        $i0 = staticinvoke <twitter4j.ParseUtil: int getInt(java.lang.String,twitter4j.org.json.JSONObject)>("sender_id", $r1);

        r0.<twitter4j.DirectMessageJSONImpl: int senderId> = $i0;

        $i0 = staticinvoke <twitter4j.ParseUtil: int getInt(java.lang.String,twitter4j.org.json.JSONObject)>("recipient_id", $r1);

        r0.<twitter4j.DirectMessageJSONImpl: int recipientId> = $i0;

        $r4 = staticinvoke <twitter4j.ParseUtil: java.util.Date getDate(java.lang.String,twitter4j.org.json.JSONObject)>("created_at", $r1);

        r0.<twitter4j.DirectMessageJSONImpl: java.util.Date createdAt> = $r4;

        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getUnescapedString(java.lang.String,twitter4j.org.json.JSONObject)>("sender_screen_name", $r1);

        r0.<twitter4j.DirectMessageJSONImpl: java.lang.String senderScreenName> = $r3;

        $r3 = staticinvoke <twitter4j.ParseUtil: java.lang.String getUnescapedString(java.lang.String,twitter4j.org.json.JSONObject)>("recipient_screen_name", $r1);

        r0.<twitter4j.DirectMessageJSONImpl: java.lang.String recipientScreenName> = $r3;

        $r5 = new twitter4j.UserJSONImpl;

     label1:
        $r6 = virtualinvoke $r1.<twitter4j.org.json.JSONObject: twitter4j.org.json.JSONObject getJSONObject(java.lang.String)>("sender");

        specialinvoke $r5.<twitter4j.UserJSONImpl: void <init>(twitter4j.org.json.JSONObject)>($r6);

     label2:
        r0.<twitter4j.DirectMessageJSONImpl: twitter4j.User sender> = $r5;

        $r5 = new twitter4j.UserJSONImpl;

     label3:
        $r1 = virtualinvoke $r1.<twitter4j.org.json.JSONObject: twitter4j.org.json.JSONObject getJSONObject(java.lang.String)>("recipient");

        specialinvoke $r5.<twitter4j.UserJSONImpl: void <init>(twitter4j.org.json.JSONObject)>($r1);

     label4:
        r0.<twitter4j.DirectMessageJSONImpl: twitter4j.User recipient> = $r5;

        return;

     label5:
        r2 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>(r2);

        throw $r7;

        catch twitter4j.org.json.JSONException from label1 to label2 with label5;
        catch twitter4j.org.json.JSONException from label3 to label4 with label5;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.DirectMessageJSONImpl r0;
        int $i0, $i1;
        twitter4j.DirectMessage r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 == r1 goto label3;

        $z0 = r1 instanceof twitter4j.DirectMessage;

        if $z0 == 0 goto label2;

        r2 = (twitter4j.DirectMessage) r1;

        $i1 = interfaceinvoke r2.<twitter4j.DirectMessage: int getId()>();

        $i0 = r0.<twitter4j.DirectMessageJSONImpl: int id>;

        if $i1 == $i0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public java.util.Date getCreatedAt()
    {
        twitter4j.DirectMessageJSONImpl r0;
        java.util.Date r1;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        r1 = r0.<twitter4j.DirectMessageJSONImpl: java.util.Date createdAt>;

        return r1;
    }

    public int getId()
    {
        int i0;
        twitter4j.DirectMessageJSONImpl r0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        i0 = r0.<twitter4j.DirectMessageJSONImpl: int id>;

        return i0;
    }

    public twitter4j.User getRecipient()
    {
        twitter4j.User r1;
        twitter4j.DirectMessageJSONImpl r0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        r1 = r0.<twitter4j.DirectMessageJSONImpl: twitter4j.User recipient>;

        return r1;
    }

    public int getRecipientId()
    {
        int i0;
        twitter4j.DirectMessageJSONImpl r0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        i0 = r0.<twitter4j.DirectMessageJSONImpl: int recipientId>;

        return i0;
    }

    public java.lang.String getRecipientScreenName()
    {
        java.lang.String r1;
        twitter4j.DirectMessageJSONImpl r0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        r1 = r0.<twitter4j.DirectMessageJSONImpl: java.lang.String recipientScreenName>;

        return r1;
    }

    public twitter4j.User getSender()
    {
        twitter4j.User r1;
        twitter4j.DirectMessageJSONImpl r0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        r1 = r0.<twitter4j.DirectMessageJSONImpl: twitter4j.User sender>;

        return r1;
    }

    public int getSenderId()
    {
        int i0;
        twitter4j.DirectMessageJSONImpl r0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        i0 = r0.<twitter4j.DirectMessageJSONImpl: int senderId>;

        return i0;
    }

    public java.lang.String getSenderScreenName()
    {
        java.lang.String r1;
        twitter4j.DirectMessageJSONImpl r0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        r1 = r0.<twitter4j.DirectMessageJSONImpl: java.lang.String senderScreenName>;

        return r1;
    }

    public java.lang.String getText()
    {
        java.lang.String r1;
        twitter4j.DirectMessageJSONImpl r0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        r1 = r0.<twitter4j.DirectMessageJSONImpl: java.lang.String text>;

        return r1;
    }

    public int hashCode()
    {
        int i0;
        twitter4j.DirectMessageJSONImpl r0;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        i0 = r0.<twitter4j.DirectMessageJSONImpl: int id>;

        return i0;
    }

    public java.lang.String toString()
    {
        twitter4j.DirectMessageJSONImpl r0;
        java.lang.StringBuffer $r1;
        java.util.Date $r3;
        int $i0;
        twitter4j.User $r4;
        java.lang.String $r2;

        r0 := @this: twitter4j.DirectMessageJSONImpl;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DirectMessageJSONImpl{id=");

        $i0 = r0.<twitter4j.DirectMessageJSONImpl: int id>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", text=\'");

        $r2 = r0.<twitter4j.DirectMessageJSONImpl: java.lang.String text>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", sender_id=");

        $i0 = r0.<twitter4j.DirectMessageJSONImpl: int senderId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", recipient_id=");

        $i0 = r0.<twitter4j.DirectMessageJSONImpl: int recipientId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", created_at=");

        $r3 = r0.<twitter4j.DirectMessageJSONImpl: java.util.Date createdAt>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", sender_screen_name=\'");

        $r2 = r0.<twitter4j.DirectMessageJSONImpl: java.lang.String senderScreenName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", recipient_screen_name=\'");

        $r2 = r0.<twitter4j.DirectMessageJSONImpl: java.lang.String recipientScreenName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", sender=");

        $r4 = r0.<twitter4j.DirectMessageJSONImpl: twitter4j.User sender>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", recipient=");

        $r4 = r0.<twitter4j.DirectMessageJSONImpl: twitter4j.User recipient>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <twitter4j.DirectMessageJSONImpl: long serialVersionUID> = -3253021825891789737L;

        return;
    }
}
