public final class com.kingroot.sdk.util.p extends java.lang.Object
{

    private static void a(java.lang.StringBuffer, byte)
    {
        byte $b0;
        java.lang.StringBuffer $r0;
        int $i1;
        char $c2;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.StringBuffer;

        $b0 := @parameter1: byte;

        $r1 = "0123456789ABCDEF";

        $i1 = (int) $b0;

        $i1 = $i1 >> 4;

        $i1 = $i1 & 15;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r1 = "0123456789ABCDEF";

        $b0 = $b0 & 15;

        $i1 = (int) $b0;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        return;
    }

    public static java.lang.String ab(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return "";

     label1:
        return $r0;
    }

    public static byte[] ac(java.lang.String)
    {
        byte[] $r1;
        java.lang.Integer $r3;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r2, 16);

        $b4 = virtualinvoke $r3.<java.lang.Integer: byte byteValue()>();

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static java.lang.String b(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Throwable;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<java.lang.Throwable: java.lang.String toString()>();

        $r0 = virtualinvoke $r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r0 == null goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_cause_");

        $r1 = virtualinvoke $r0.<java.lang.Throwable: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        return "";

     label2:
        return $r1;
    }

    public static java.lang.String c(byte[])
    {
        byte[] $r0;
        byte $b2;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return "";

     label1:
        $r1 = new java.lang.StringBuffer;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $b2 = $r0[$i0];

        staticinvoke <com.kingroot.sdk.util.p: void a(java.lang.StringBuffer,byte)>($r1, $b2);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String j(byte[])
    {
        byte[] $r0;
        short $s3;
        byte $b2;
        java.lang.StringBuffer $r1, $r3;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $r3 = new java.lang.StringBuffer;

        $r1 = $r3;

        $i0 = lengthof $r0;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $b2 = $r0[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 >= 2 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(0);

     label2:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String n(java.lang.String, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>($r1);

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;

     label1:
        return null;
    }
}
