public class net.sourceforge.blowfishj.BlowfishInputStream extends java.io.InputStream
{
    net.sourceforge.blowfishj.BlowfishCBC m_bfc;
    byte[] m_buf;
    java.io.PushbackInputStream m_is;
    int m_nBufCount;
    int m_nBufPos;

    public void <init>(java.lang.String, java.io.InputStream) throws java.io.IOException
    {
        byte[] r3;
        char $c2;
        byte $b3;
        net.sourceforge.blowfishj.BlowfishInputStream r0;
        int $i0, i1;
        java.lang.String $r1;
        java.io.InputStream $r2;

        r0 := @this: net.sourceforge.blowfishj.BlowfishInputStream;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        r3 = newarray (byte)[$i0];

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        $c2 = $c2 & 255;

        $b3 = (byte) $c2;

        r3[i1] = $b3;

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishInputStream: void init(byte[],int,int,java.io.InputStream)>(r3, 0, $i0, $r2);

        return;
    }

    public void <init>(byte[], int, int, java.io.InputStream) throws java.io.IOException
    {
        byte[] $r1;
        net.sourceforge.blowfishj.BlowfishInputStream r0;
        int $i0, $i1;
        java.io.InputStream $r2;

        r0 := @this: net.sourceforge.blowfishj.BlowfishInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishInputStream: void init(byte[],int,int,java.io.InputStream)>($r1, $i0, $i1, $r2);

        return;
    }

    public void close() throws java.io.IOException
    {
        net.sourceforge.blowfishj.BlowfishInputStream r0;
        java.io.PushbackInputStream $r1;

        r0 := @this: net.sourceforge.blowfishj.BlowfishInputStream;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: java.io.PushbackInputStream m_is>;

        virtualinvoke $r1.<java.io.PushbackInputStream: void close()>();

        return;
    }

    void fillBuffer() throws java.io.IOException
    {
        byte[] $r1, $r4, $r5;
        java.io.PushbackInputStream $r2;
        java.io.IOException $r6;
        byte $b3, $b4, $b5;
        net.sourceforge.blowfishj.BlowfishCBC $r3;
        net.sourceforge.blowfishj.BlowfishInputStream r0;
        int $i0, i1, $i2, $i6;

        r0 := @this: net.sourceforge.blowfishj.BlowfishInputStream;

        $i0 = 0;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        i1 = lengthof $r1;

     label01:
        if $i0 >= i1 goto label03;

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: java.io.PushbackInputStream m_is>;

        $i2 = virtualinvoke $r2.<java.io.PushbackInputStream: int read()>();

        $i6 = -1;

        if $i6 != $i2 goto label02;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("truncated stream, unexpected end");

        throw $r6;

     label02:
        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label01;

     label03:
        $r3 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: net.sourceforge.blowfishj.BlowfishCBC m_bfc>;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $r4 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $r5 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $i0 = lengthof $r5;

        virtualinvoke $r3.<net.sourceforge.blowfishj.BlowfishCBC: int decrypt(byte[],int,byte[],int,int)>($r1, 0, $r4, 0, $i0);

        $r2 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: java.io.PushbackInputStream m_is>;

        $i0 = virtualinvoke $r2.<java.io.PushbackInputStream: int read()>();

        i1 = -1;

        if i1 != $i0 goto label10;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $r4 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $i0 = lengthof $r4;

        $i0 = $i0 - 1;

        $b3 = $r1[$i0];

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $i0 = lengthof $r1;

        i1 = (int) $b3;

        if i1 > $i0 goto label04;

        $i0 = (int) $b3;

        if $i0 >= 0 goto label05;

     label04:
        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("unknown padding value detected");

        throw $r6;

     label05:
        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $i0 = lengthof $r1;

        i1 = (int) $b3;

        $i0 = $i0 - i1;

        r0.<net.sourceforge.blowfishj.BlowfishInputStream: int m_nBufCount> = $i0;

        $i0 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: int m_nBufCount>;

     label06:
        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        i1 = lengthof $r1;

        if $i0 >= i1 goto label08;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $b4 = $r1[$i0];

        $b5 = $b3;

        i1 = (int) $b4;

        $i2 = (int) $b5;

        if i1 == $i2 goto label07;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("invalid padding data detected");

        throw $r6;

     label07:
        $i0 = $i0 + 1;

        goto label06;

     label08:
        $r3 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: net.sourceforge.blowfishj.BlowfishCBC m_bfc>;

        virtualinvoke $r3.<net.sourceforge.blowfishj.BlowfishCBC: void cleanUp()>();

        r0.<net.sourceforge.blowfishj.BlowfishInputStream: net.sourceforge.blowfishj.BlowfishCBC m_bfc> = null;

     label09:
        r0.<net.sourceforge.blowfishj.BlowfishInputStream: int m_nBufPos> = 0;

        return;

     label10:
        $r2 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: java.io.PushbackInputStream m_is>;

        virtualinvoke $r2.<java.io.PushbackInputStream: void unread(int)>($i0);

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $i0 = lengthof $r1;

        r0.<net.sourceforge.blowfishj.BlowfishInputStream: int m_nBufCount> = $i0;

        goto label09;
    }

    void init(byte[], int, int, java.io.InputStream) throws java.io.IOException
    {
        byte[] $r1;
        java.io.BufferedInputStream $r6;
        java.io.PushbackInputStream $r4, $r7;
        net.sourceforge.blowfishj.SHA1 r3, $r8;
        byte $b3;
        int $i0, $i1, $i2, $i4;
        java.io.IOException $r10;
        net.sourceforge.blowfishj.BlowfishCBC $r5, $r9;
        net.sourceforge.blowfishj.BlowfishInputStream r0;
        java.io.InputStream $r2;

        r0 := @this: net.sourceforge.blowfishj.BlowfishInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.io.InputStream;

        r0.<net.sourceforge.blowfishj.BlowfishInputStream: int m_nBufCount> = 0;

        r0.<net.sourceforge.blowfishj.BlowfishInputStream: int m_nBufPos> = 0;

        $r7 = new java.io.PushbackInputStream;

        $r6 = new java.io.BufferedInputStream;

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2);

        specialinvoke $r7.<java.io.PushbackInputStream: void <init>(java.io.InputStream)>($r6);

        r0.<net.sourceforge.blowfishj.BlowfishInputStream: java.io.PushbackInputStream m_is> = $r7;

        $r8 = new net.sourceforge.blowfishj.SHA1;

        r3 = $r8;

        specialinvoke $r8.<net.sourceforge.blowfishj.SHA1: void <init>()>();

        virtualinvoke r3.<net.sourceforge.blowfishj.SHA1: void update(byte[],int,int)>($r1, $i0, $i1);

        virtualinvoke r3.<net.sourceforge.blowfishj.SHA1: void finalize()>();

        $r1 = virtualinvoke r3.<net.sourceforge.blowfishj.SHA1: byte[] getDigest()>();

        $r9 = new net.sourceforge.blowfishj.BlowfishCBC;

        $i0 = lengthof $r1;

        specialinvoke $r9.<net.sourceforge.blowfishj.BlowfishCBC: void <init>(byte[],int,int,long)>($r1, 0, $i0, 0L);

        r0.<net.sourceforge.blowfishj.BlowfishInputStream: net.sourceforge.blowfishj.BlowfishCBC m_bfc> = $r9;

        $r1 = newarray (byte)[8];

        r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf> = $r1;

        $i1 = 0;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $i0 = lengthof $r1;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: java.io.PushbackInputStream m_is>;

        $i2 = virtualinvoke $r4.<java.io.PushbackInputStream: int read()>();

        $i4 = -1;

        if $i4 != $i2 goto label2;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("truncated stream, IV is missing");

        throw $r10;

     label2:
        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $b3 = (byte) $i2;

        $r1[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r5 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: net.sourceforge.blowfishj.BlowfishCBC m_bfc>;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        virtualinvoke $r5.<net.sourceforge.blowfishj.BlowfishCBC: void setCBCIV(byte[],int)>($r1, 0);

        return;
    }

    public int read() throws java.io.IOException
    {
        byte[] $r2;
        short $s3;
        net.sourceforge.blowfishj.BlowfishCBC $r1;
        byte $b2;
        net.sourceforge.blowfishj.BlowfishInputStream r0;
        int $i0, $i1;

        r0 := @this: net.sourceforge.blowfishj.BlowfishInputStream;

     label1:
        $i0 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: int m_nBufCount>;

        $i1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: int m_nBufPos>;

        if $i0 > $i1 goto label3;

        $r1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: net.sourceforge.blowfishj.BlowfishCBC m_bfc>;

        if $r1 != null goto label2;

        $i0 = -1;

        return $i0;

     label2:
        virtualinvoke r0.<net.sourceforge.blowfishj.BlowfishInputStream: void fillBuffer()>();

        goto label1;

     label3:
        $r2 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: byte[] m_buf>;

        $i1 = r0.<net.sourceforge.blowfishj.BlowfishInputStream: int m_nBufPos>;

        $i0 = $i1 + 1;

        r0.<net.sourceforge.blowfishj.BlowfishInputStream: int m_nBufPos> = $i0;

        $b2 = $r2[$i1];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i0 = (int) $s3;

        return $i0;
    }
}
