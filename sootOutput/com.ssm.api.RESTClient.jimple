public class com.ssm.api.RESTClient extends java.lang.Object
{
    private static int[] $SWITCH_TABLE$com$ssm$api$APIMatrix$RequestMethod;
    private java.util.ArrayList headers;
    private java.lang.String message;
    private java.util.ArrayList params;
    private java.lang.String response;
    private int responseCode;
    private java.lang.String url;

    static int[] $SWITCH_TABLE$com$ssm$api$APIMatrix$RequestMethod()
    {
        com.ssm.api.APIMatrix$RequestMethod $r2;
        java.lang.NoSuchFieldError $r3, $r4, $r5, $r6;
        com.ssm.api.APIMatrix$RequestMethod[] $r1;
        int[] $r0;
        int $i0;

        $r0 = <com.ssm.api.RESTClient: int[] $SWITCH_TABLE$com$ssm$api$APIMatrix$RequestMethod>;

        if $r0 == null goto label01;

        return $r0;

     label01:
        $r1 = staticinvoke <com.ssm.api.APIMatrix$RequestMethod: com.ssm.api.APIMatrix$RequestMethod[] values()>();

        $i0 = lengthof $r1;

        $r0 = newarray (int)[$i0];

     label02:
        $r2 = <com.ssm.api.APIMatrix$RequestMethod: com.ssm.api.APIMatrix$RequestMethod DELETE>;

        $i0 = virtualinvoke $r2.<com.ssm.api.APIMatrix$RequestMethod: int ordinal()>();

     label03:
        $r0[$i0] = 4;

     label04:
        $r2 = <com.ssm.api.APIMatrix$RequestMethod: com.ssm.api.APIMatrix$RequestMethod GET>;

        $i0 = virtualinvoke $r2.<com.ssm.api.APIMatrix$RequestMethod: int ordinal()>();

     label05:
        $r0[$i0] = 1;

     label06:
        $r2 = <com.ssm.api.APIMatrix$RequestMethod: com.ssm.api.APIMatrix$RequestMethod POST>;

        $i0 = virtualinvoke $r2.<com.ssm.api.APIMatrix$RequestMethod: int ordinal()>();

     label07:
        $r0[$i0] = 2;

     label08:
        $r2 = <com.ssm.api.APIMatrix$RequestMethod: com.ssm.api.APIMatrix$RequestMethod PUT>;

        $i0 = virtualinvoke $r2.<com.ssm.api.APIMatrix$RequestMethod: int ordinal()>();

     label09:
        $r0[$i0] = 3;

     label10:
        <com.ssm.api.RESTClient: int[] $SWITCH_TABLE$com$ssm$api$APIMatrix$RequestMethod> = $r0;

        return $r0;

     label11:
        $r3 := @caughtexception;

        goto label10;

     label12:
        $r4 := @caughtexception;

        goto label08;

     label13:
        $r5 := @caughtexception;

        goto label06;

     label14:
        $r6 := @caughtexception;

        goto label04;

        catch java.lang.NoSuchFieldError from label02 to label03 with label14;
        catch java.lang.NoSuchFieldError from label04 to label05 with label13;
        catch java.lang.NoSuchFieldError from label06 to label07 with label12;
        catch java.lang.NoSuchFieldError from label08 to label09 with label11;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        com.ssm.api.RESTClient r0;
        java.util.ArrayList $r2;

        r0 := @this: com.ssm.api.RESTClient;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ssm.api.RESTClient: java.lang.String url> = "http://211.238.12.50/asiana/update.json";

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.ssm.api.RESTClient: java.util.ArrayList params> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.ssm.api.RESTClient: java.util.ArrayList headers> = $r2;

        return;
    }

    private static java.lang.String convertStreamToString(java.io.InputStream)
    {
        java.lang.Throwable $r5, r6, $r7, r8, r9;
        java.io.IOException $r13;
        java.io.InputStreamReader $r10;
        java.lang.StringBuilder r2, $r4, $r12;
        java.io.BufferedReader r1, $r11;
        java.lang.String $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r11 = new java.io.BufferedReader;

        r1 = $r11;

        $r10 = new java.io.InputStreamReader;

        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r10);

        $r4 = new java.lang.StringBuilder;

        r2 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r3 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label02:
        if $r3 != null goto label05;

     label03:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label04:
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label05:
        $r12 = new java.lang.StringBuilder;

     label06:
        $r4 = $r12;

     label07:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label08:
        goto label01;

     label09:
        $r5 := @caughtexception;

     label10:
        $r13 = (java.io.IOException) $r5;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

     label11:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label12:
        goto label04;

     label13:
        r6 := @caughtexception;

        $r13 = (java.io.IOException) r6;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        goto label04;

     label14:
        $r7 := @caughtexception;

     label15:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label16:
        throw $r7;

     label17:
        r8 := @caughtexception;

        $r13 = (java.io.IOException) r8;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        goto label16;

     label18:
        r9 := @caughtexception;

        $r13 = (java.io.IOException) r9;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        goto label04;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label18;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label15 to label16 with label17;
    }

    private void executeRequest(org.apache.http.client.methods.HttpUriRequest, java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient r3, $r11;
        java.lang.Throwable $r9, $r10;
        org.apache.http.client.ClientProtocolException $r12;
        org.apache.http.conn.ClientConnectionManager $r8;
        org.apache.http.HttpEntity $r6;
        java.io.IOException $r13;
        org.apache.http.client.methods.HttpUriRequest $r1;
        org.apache.http.StatusLine $r5;
        int $i0;
        org.apache.http.HttpResponse $r4;
        java.lang.String $r2;
        com.ssm.api.RESTClient r0;
        java.io.InputStream $r7;

        r0 := @this: com.ssm.api.RESTClient;

        $r1 := @parameter0: org.apache.http.client.methods.HttpUriRequest;

        $r2 := @parameter1: java.lang.String;

        $r11 = new org.apache.http.impl.client.DefaultHttpClient;

        r3 = $r11;

        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

     label01:
        $r4 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r1);

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r5.<org.apache.http.StatusLine: int getStatusCode()>();

     label02:
        r0.<com.ssm.api.RESTClient: int responseCode> = $i0;

     label03:
        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r2 = interfaceinvoke $r5.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

     label04:
        r0.<com.ssm.api.RESTClient: java.lang.String message> = $r2;

     label05:
        $r6 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label06:
        if $r6 == null goto label10;

     label07:
        $r7 = interfaceinvoke $r6.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r2 = staticinvoke <com.ssm.api.RESTClient: java.lang.String convertStreamToString(java.io.InputStream)>($r7);

     label08:
        r0.<com.ssm.api.RESTClient: java.lang.String response> = $r2;

     label09:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label10:
        $r8 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r8.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        return;

     label11:
        $r9 := @caughtexception;

        $r8 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r8.<org.apache.http.conn.ClientConnectionManager: void closeExpiredConnections()>();

        $r8 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r8.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        $r12 = (org.apache.http.client.ClientProtocolException) $r9;

        virtualinvoke $r12.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();

        goto label10;

     label12:
        $r10 := @caughtexception;

        $r8 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r8.<org.apache.http.conn.ClientConnectionManager: void closeExpiredConnections()>();

        $r8 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r8.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        $r13 = (java.io.IOException) $r10;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        goto label10;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label11;
        catch org.apache.http.client.ClientProtocolException from label03 to label04 with label11;
        catch org.apache.http.client.ClientProtocolException from label05 to label06 with label11;
        catch org.apache.http.client.ClientProtocolException from label07 to label08 with label11;
        catch org.apache.http.client.ClientProtocolException from label09 to label10 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.io.IOException from label09 to label10 with label12;
    }

    public void AddHeader(java.lang.String, java.lang.String)
    {
        org.apache.http.message.BasicNameValuePair $r4;
        java.lang.String $r1, $r2;
        com.ssm.api.RESTClient r0;
        java.util.ArrayList $r3;

        r0 := @this: com.ssm.api.RESTClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.ssm.api.RESTClient: java.util.ArrayList headers>;

        $r4 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r4.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void AddParam(java.lang.String, java.lang.String)
    {
        org.apache.http.message.BasicNameValuePair $r4;
        java.lang.String $r1, $r2;
        com.ssm.api.RESTClient r0;
        java.util.ArrayList $r3;

        r0 := @this: com.ssm.api.RESTClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $r4 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r4.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void Execute(com.ssm.api.APIMatrix$RequestMethod) throws java.lang.Exception
    {
        org.apache.http.client.methods.HttpPost r12;
        byte[] $r15;
        com.ssm.api.APIMatrix$RequestMethod $r1;
        org.apache.http.entity.ByteArrayEntity $r14;
        java.util.ArrayList $r4;
        org.apache.http.client.methods.HttpDelete r17;
        org.json.JSONObject r13;
        int[] $r2;
        int $i0;
        java.lang.String $r8, $r11;
        com.ssm.api.RESTClient r0;
        boolean $z0;
        java.util.Iterator $r10;
        org.apache.http.client.methods.HttpPut r16;
        org.apache.http.client.methods.HttpGet r9;
        java.lang.StringBuilder r3, $r5;
        java.lang.Object $r6;
        org.apache.http.NameValuePair $r7;

        r0 := @this: com.ssm.api.RESTClient;

        $r1 := @parameter0: com.ssm.api.APIMatrix$RequestMethod;

        $r2 = staticinvoke <com.ssm.api.RESTClient: int[] $SWITCH_TABLE$com$ssm$api$APIMatrix$RequestMethod()>();

        $i0 = virtualinvoke $r1.<com.ssm.api.APIMatrix$RequestMethod: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label09;
            case 3: goto label13;
            case 4: goto label17;
            default: goto label01;
        };

     label01:
        return;

     label02:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label03;

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label05;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("/");

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r7 = (org.apache.http.NameValuePair) $r6;

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, "UTF-8");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label03:
        r9 = new org.apache.http.client.methods.HttpGet;

        $r5 = new java.lang.StringBuilder;

        $r8 = r0.<com.ssm.api.RESTClient: java.lang.String url>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r8);

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList headers>;

        $r10 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label08;

        $r8 = r0.<com.ssm.api.RESTClient: java.lang.String url>;

        specialinvoke r0.<com.ssm.api.RESTClient: void executeRequest(org.apache.http.client.methods.HttpUriRequest,java.lang.String)>(r9, $r8);

        return;

     label05:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $r10 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r6 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.http.NameValuePair) $r6;

        $r5 = new java.lang.StringBuilder;

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, "UTF-8");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke r3.<java.lang.StringBuilder: int length()>();

        if $i0 <= 1 goto label07;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("&");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label06;

     label07:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label06;

     label08:
        $r6 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.http.NameValuePair) $r6;

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r11 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke r9.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>($r8, $r11);

        goto label04;

     label09:
        r12 = new org.apache.http.client.methods.HttpPost;

        $r8 = r0.<com.ssm.api.RESTClient: java.lang.String url>;

        specialinvoke r12.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r8);

        virtualinvoke r12.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("User-Agent", "ASIHTTPRequest");

        virtualinvoke r12.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("Content-Type", "application/json");

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label11;

        r13 = new org.json.JSONObject;

        specialinvoke r13.<org.json.JSONObject: void <init>()>();

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $r10 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label12;

        if r13 == null goto label11;

        $i0 = virtualinvoke r13.<org.json.JSONObject: int length()>();

        if $i0 <= 0 goto label11;

        $r14 = new org.apache.http.entity.ByteArrayEntity;

        $r8 = virtualinvoke r13.<org.json.JSONObject: java.lang.String toString()>();

        $r15 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8");

        specialinvoke $r14.<org.apache.http.entity.ByteArrayEntity: void <init>(byte[])>($r15);

        virtualinvoke r12.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r14);

     label11:
        $r8 = r0.<com.ssm.api.RESTClient: java.lang.String url>;

        specialinvoke r0.<com.ssm.api.RESTClient: void executeRequest(org.apache.http.client.methods.HttpUriRequest,java.lang.String)>(r12, $r8);

        return;

     label12:
        $r6 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.http.NameValuePair) $r6;

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r11 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke r13.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r8, $r11);

        goto label10;

     label13:
        r16 = new org.apache.http.client.methods.HttpPut;

        $r8 = r0.<com.ssm.api.RESTClient: java.lang.String url>;

        specialinvoke r16.<org.apache.http.client.methods.HttpPut: void <init>(java.lang.String)>($r8);

        virtualinvoke r16.<org.apache.http.client.methods.HttpPut: void setHeader(java.lang.String,java.lang.String)>("User-Agent", "ASIHTTPRequest");

        virtualinvoke r16.<org.apache.http.client.methods.HttpPut: void setHeader(java.lang.String,java.lang.String)>("Content-Type", "application/json");

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label24;

        r13 = new org.json.JSONObject;

        specialinvoke r13.<org.json.JSONObject: void <init>()>();

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $r10 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label16;

        if r13 == null goto label15;

        $i0 = virtualinvoke r13.<org.json.JSONObject: int length()>();

        if $i0 <= 0 goto label15;

        $r14 = new org.apache.http.entity.ByteArrayEntity;

        $r8 = virtualinvoke r13.<org.json.JSONObject: java.lang.String toString()>();

        $r15 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8");

        specialinvoke $r14.<org.apache.http.entity.ByteArrayEntity: void <init>(byte[])>($r15);

        virtualinvoke r16.<org.apache.http.client.methods.HttpPut: void setEntity(org.apache.http.HttpEntity)>($r14);

     label15:
        $r8 = r0.<com.ssm.api.RESTClient: java.lang.String url>;

        specialinvoke r0.<com.ssm.api.RESTClient: void executeRequest(org.apache.http.client.methods.HttpUriRequest,java.lang.String)>(r16, $r8);

        return;

     label16:
        $r6 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.http.NameValuePair) $r6;

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r11 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke r13.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r8, $r11);

        goto label14;

     label17:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label18;

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label20;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("/");

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r7 = (org.apache.http.NameValuePair) $r6;

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        $r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, "UTF-8");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label18:
        r17 = new org.apache.http.client.methods.HttpDelete;

        $r5 = new java.lang.StringBuilder;

        $r8 = r0.<com.ssm.api.RESTClient: java.lang.String url>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<org.apache.http.client.methods.HttpDelete: void <init>(java.lang.String)>($r8);

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList headers>;

        $r10 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label19:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label23;

        $r8 = r0.<com.ssm.api.RESTClient: java.lang.String url>;

        specialinvoke r0.<com.ssm.api.RESTClient: void executeRequest(org.apache.http.client.methods.HttpUriRequest,java.lang.String)>(r17, $r8);

        return;

     label20:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r4 = r0.<com.ssm.api.RESTClient: java.util.ArrayList params>;

        $r10 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label21:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r6 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.http.NameValuePair) $r6;

        $r5 = new java.lang.StringBuilder;

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        $r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, "UTF-8");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke r3.<java.lang.StringBuilder: int length()>();

        if $i0 <= 1 goto label22;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("&");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label21;

     label22:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label21;

     label23:
        $r6 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.http.NameValuePair) $r6;

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r11 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke r17.<org.apache.http.client.methods.HttpDelete: void addHeader(java.lang.String,java.lang.String)>($r8, $r11);

        goto label19;

     label24:
        return;
    }

    public java.lang.String getErrorMessage()
    {
        java.lang.String r1;
        com.ssm.api.RESTClient r0;

        r0 := @this: com.ssm.api.RESTClient;

        r1 = r0.<com.ssm.api.RESTClient: java.lang.String message>;

        return r1;
    }

    public java.lang.String getResponse()
    {
        java.lang.String r1;
        com.ssm.api.RESTClient r0;

        r0 := @this: com.ssm.api.RESTClient;

        r1 = r0.<com.ssm.api.RESTClient: java.lang.String response>;

        return r1;
    }

    public int getResponseCode()
    {
        int i0;
        com.ssm.api.RESTClient r0;

        r0 := @this: com.ssm.api.RESTClient;

        i0 = r0.<com.ssm.api.RESTClient: int responseCode>;

        return i0;
    }
}
