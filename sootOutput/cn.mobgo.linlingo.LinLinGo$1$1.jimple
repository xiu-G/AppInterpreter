class cn.mobgo.linlingo.LinLinGo$1$1 extends java.lang.Object implements java.lang.Runnable
{
    final cn.mobgo.linlingo.LinLinGo$1 this$1;
    final java.lang.String val$newVersion;

    void <init>(cn.mobgo.linlingo.LinLinGo$1, java.lang.String)
    {
        java.lang.String $r2;
        cn.mobgo.linlingo.LinLinGo$1$1 r0;
        cn.mobgo.linlingo.LinLinGo$1 $r1;

        r0 := @this: cn.mobgo.linlingo.LinLinGo$1$1;

        $r1 := @parameter0: cn.mobgo.linlingo.LinLinGo$1;

        $r2 := @parameter1: java.lang.String;

        r0.<cn.mobgo.linlingo.LinLinGo$1$1: cn.mobgo.linlingo.LinLinGo$1 this$1> = $r1;

        r0.<cn.mobgo.linlingo.LinLinGo$1$1: java.lang.String val$newVersion> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r7;
        android.content.pm.PackageManager $r4;
        cn.mobgo.linlingo.LinLinGo$1$1 r0;
        android.content.pm.PackageInfo $r5;
        cn.mobgo.linlingo.LinLinGo$1 $r2;
        int $i0;
        java.lang.String r1, $r6;
        cn.mobgo.linlingo.LinLinGo $r3;
        boolean $z0;

        r0 := @this: cn.mobgo.linlingo.LinLinGo$1$1;

        $r2 = r0.<cn.mobgo.linlingo.LinLinGo$1$1: cn.mobgo.linlingo.LinLinGo$1 this$1>;

        $r3 = $r2.<cn.mobgo.linlingo.LinLinGo$1: cn.mobgo.linlingo.LinLinGo this$0>;

     label01:
        r1 = staticinvoke <cn.mobgo.linlingo.LinLinGo: java.lang.String access$000(cn.mobgo.linlingo.LinLinGo)>($r3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

     label02:
        if $z0 != 0 goto label16;

        $r2 = r0.<cn.mobgo.linlingo.LinLinGo$1$1: cn.mobgo.linlingo.LinLinGo$1 this$1>;

        $r3 = $r2.<cn.mobgo.linlingo.LinLinGo$1: cn.mobgo.linlingo.LinLinGo this$0>;

     label03:
        r1 = staticinvoke <cn.mobgo.linlingo.LinLinGo: java.lang.String access$100(cn.mobgo.linlingo.LinLinGo)>($r3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

     label04:
        if $z0 != 0 goto label16;

        r1 = r0.<cn.mobgo.linlingo.LinLinGo$1$1: java.lang.String val$newVersion>;

     label05:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

     label06:
        if $z0 != 0 goto label16;

        $r2 = r0.<cn.mobgo.linlingo.LinLinGo$1$1: cn.mobgo.linlingo.LinLinGo$1 this$1>;

        $r3 = $r2.<cn.mobgo.linlingo.LinLinGo$1: cn.mobgo.linlingo.LinLinGo this$0>;

     label07:
        $r4 = virtualinvoke $r3.<cn.mobgo.linlingo.LinLinGo: android.content.pm.PackageManager getPackageManager()>();

     label08:
        $r2 = r0.<cn.mobgo.linlingo.LinLinGo$1$1: cn.mobgo.linlingo.LinLinGo$1 this$1>;

        $r3 = $r2.<cn.mobgo.linlingo.LinLinGo$1: cn.mobgo.linlingo.LinLinGo this$0>;

     label09:
        r1 = virtualinvoke $r3.<cn.mobgo.linlingo.LinLinGo: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 0);

     label10:
        r1 = $r5.<android.content.pm.PackageInfo: java.lang.String versionName>;

        $r6 = r0.<cn.mobgo.linlingo.LinLinGo$1$1: java.lang.String val$newVersion>;

     label11:
        $i0 = staticinvoke <cn.mobgo.linlingo.util.Utilities: int compareVersion(java.lang.String,java.lang.String)>($r6, r1);

     label12:
        if $i0 <= 0 goto label16;

        $r2 = r0.<cn.mobgo.linlingo.LinLinGo$1$1: cn.mobgo.linlingo.LinLinGo$1 this$1>;

        $r3 = $r2.<cn.mobgo.linlingo.LinLinGo$1: cn.mobgo.linlingo.LinLinGo this$0>;

     label13:
        virtualinvoke $r3.<cn.mobgo.linlingo.LinLinGo: void showDialog(int)>(2);

     label14:
        return;

     label15:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LinLinGo", "Can\'t find musicgo package");

     label16:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label15;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label15;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label15;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label15;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label15;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label15;
        catch android.content.pm.PackageManager$NameNotFoundException from label13 to label14 with label15;
    }
}
