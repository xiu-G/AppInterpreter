public final class cn.qitu.rushrom.a.d extends java.lang.Object
{
    private static char[] a;

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <cn.qitu.rushrom.a.d: char[] a> = $r0;

        return;
    }

    public static android.graphics.Bitmap a(android.graphics.drawable.Drawable)
    {
        android.graphics.Bitmap $r2;
        int $i0, $i1, $i2;
        android.graphics.Canvas $r3;
        android.graphics.drawable.Drawable $r0;
        android.graphics.Bitmap$Config $r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i2 == -1 goto label2;

        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label1:
        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        $r3 = new android.graphics.Canvas;

        specialinvoke $r3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r2);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r3);

        return $r2;

     label2:
        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        goto label1;
    }

    public static java.io.File a()
    {
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        java.io.File $r0, $r2;
        boolean $z0;

        $r0 = null;

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

     label1:
        if $r0 == null goto label2;

        $r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String toString()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/7toRushRom");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label3;

        virtualinvoke $r2.<java.io.File: boolean mkdir()>();

        return $r2;

     label2:
        return $r0;

     label3:
        return $r2;
    }

    public static java.lang.String a(android.content.Context)
    {
        android.content.Context $r0;
        android.telephony.TelephonyManager $r2;
        java.lang.Object $r1;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        return $r3;
    }

    public static byte[] a(android.graphics.Bitmap)
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream $r3;
        android.graphics.Bitmap $r0;
        android.graphics.Bitmap$CompressFormat $r1;

        $r0 := @parameter0: android.graphics.Bitmap;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r1, 100, $r3);

        $r2 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    public static byte b()
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static boolean b(android.content.Context)
    {
        android.content.Context $r0;
        android.app.AppOpsManager $r2;
        java.lang.Object[] $r11;
        java.lang.Integer $r12;
        int $i0, $i1;
        java.lang.String $r5;
        java.lang.reflect.Method $r10;
        java.lang.Class[] $r8;
        java.lang.reflect.Field $r6, $r7;
        java.lang.Exception $r13;
        java.lang.Object $r1;
        java.lang.Class $r4, $r9;
        android.content.pm.ApplicationInfo $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r2 = (android.app.AppOpsManager) $r1;

     label01:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r5);

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mService");

        $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("OP_WRITE_SMS");

        virtualinvoke $r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        virtualinvoke $r7.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r1 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r5);

     label02:
        $r8 = newarray (java.lang.Class)[4];

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

     label03:
        $r8[0] = $r9;

     label04:
        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

     label05:
        $r8[1] = $r9;

        $r8[2] = class "Ljava/lang/String;";

     label06:
        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

     label07:
        $r8[3] = $r9;

        $r10 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setMode", $r8);

        virtualinvoke $r10.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label08:
        $r11 = newarray (java.lang.Object)[4];

     label09:
        $i1 = virtualinvoke $r7.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r2);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r11[0] = $r12;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r11[1] = $r12;

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r11[2] = $r5;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r11[3] = $r12;

        virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r11);

     label10:
        return 1;

     label11:
        $r13 := @caughtexception;

        virtualinvoke $r13.<java.lang.Exception: void printStackTrace()>();

        return 0;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static java.lang.String c()
    {
        long $l0, $l4;
        java.util.List $r0;
        long[] $r1, $r4;
        byte $b3;
        int $i1, $i2;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 = staticinvoke <cn.qitu.rushrom.a.d: java.util.List e()>();

        $r1 = staticinvoke <cn.qitu.rushrom.a.f: long[] a()>();

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 < $i2 goto label2;

        return null;

     label2:
        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (java.lang.String) $r2;

        if $r3 == null goto label4;

        $r4 = staticinvoke <cn.qitu.rushrom.a.f: long[] a(java.lang.String)>($r3);

        $l0 = $r4[0];

        $b3 = $l0 cmp 0L;

        if $b3 == 0 goto label3;

        $l4 = $r4[0];

        $l0 = $r1[0];

        $b3 = $l4 cmp $l0;

        if $b3 == 0 goto label4;

     label3:
        $l0 = $r4[0];

        $b3 = $l0 cmp 0L;

        if $b3 != 0 goto label5;

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        return $r3;
    }

    public static long[] d()
    {
        android.os.StatFs $r0;
        long[] $r1;
        int $i0;
        long $l1, $l2;
        java.lang.String $r3;
        java.io.File $r2;

        $r1 = newarray (long)[2];

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r0 = new android.os.StatFs;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r0.<android.os.StatFs: void <init>(java.lang.String)>($r3);

        $i0 = virtualinvoke $r0.<android.os.StatFs: int getBlockSize()>();

        $l1 = (long) $i0;

        $i0 = virtualinvoke $r0.<android.os.StatFs: int getBlockCount()>();

        $l2 = (long) $i0;

        $l1 = $l2 * $l1;

        $r1[0] = $l1;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r0 = new android.os.StatFs;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r0.<android.os.StatFs: void <init>(java.lang.String)>($r3);

        $i0 = virtualinvoke $r0.<android.os.StatFs: int getBlockSize()>();

        $l1 = (long) $i0;

        $i0 = virtualinvoke $r0.<android.os.StatFs: int getAvailableBlocks()>();

        $l2 = (long) $i0;

        $l1 = $l2 * $l1;

        $r1[1] = $l1;

        return $r1;
    }

    private static java.util.List e()
    {
        java.lang.Throwable $r11;
        java.lang.String[] $r8;
        java.util.ArrayList $r0, $r12;
        int $i0;
        java.lang.String $r2, $r10;
        boolean $z0;
        java.lang.Process $r5;
        java.lang.Runtime $r4;
        java.io.IOException $r16;
        java.io.InputStreamReader $r7, $r13;
        java.io.File $r3, $r9, $r15;
        java.io.BufferedReader $r1, $r14;
        java.io.InputStream $r6;

        $r12 = new java.util.ArrayList;

        $r0 = $r12;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $r3 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("unmounted");

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke $r3.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke $r3.<java.io.File: boolean canWrite()>();

        if $z0 == 0 goto label01;

        $r2 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

     label01:
        $r4 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r5 = virtualinvoke $r4.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>("mount");

        $r6 = virtualinvoke $r5.<java.lang.Process: java.io.InputStream getInputStream()>();

     label02:
        $r13 = new java.io.InputStreamReader;

        $r7 = $r13;

     label03:
        specialinvoke $r13.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

     label04:
        $r14 = new java.io.BufferedReader;

        $r1 = $r14;

     label05:
        specialinvoke $r14.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

     label06:
        $r2 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label07:
        if $r2 != null goto label08;

        return $r0;

     label08:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("fat");

     label09:
        if $z0 != 0 goto label14;

     label10:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("fuse");

     label11:
        if $z0 != 0 goto label14;

     label12:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("storage");

     label13:
        if $z0 == 0 goto label06;

     label14:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("secure");

     label15:
        if $z0 != 0 goto label06;

     label16:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("asec");

     label17:
        if $z0 != 0 goto label06;

     label18:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("firmware");

     label19:
        if $z0 != 0 goto label06;

     label20:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("shell");

     label21:
        if $z0 != 0 goto label06;

     label22:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("obb");

     label23:
        if $z0 != 0 goto label06;

     label24:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("legacy");

     label25:
        if $z0 != 0 goto label06;

     label26:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("data");

     label27:
        if $z0 != 0 goto label06;

     label28:
        $r8 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

     label29:
        $i0 = lengthof $r8;

        if 1 >= $i0 goto label06;

        $r2 = $r8[1];

     label30:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("on");

     label31:
        if $z0 == 0 goto label32;

        $r2 = $r8[2];

     label32:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

     label33:
        if $z0 == 0 goto label06;

     label34:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("data");

     label35:
        if $z0 != 0 goto label06;

     label36:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Data");

     label37:
        if $z0 != 0 goto label06;

        $r15 = new java.io.File;

        $r9 = $r15;

     label38:
        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r9.<java.io.File: boolean exists()>();

     label39:
        if $z0 == 0 goto label06;

     label40:
        $z0 = virtualinvoke $r9.<java.io.File: boolean isDirectory()>();

     label41:
        if $z0 == 0 goto label06;

     label42:
        $z0 = virtualinvoke $r9.<java.io.File: boolean canWrite()>();

     label43:
        if $z0 == 0 goto label06;

     label44:
        $r10 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label45:
        if $z0 != 0 goto label06;

     label46:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

     label47:
        goto label06;

     label48:
        $r11 := @caughtexception;

        $r16 = (java.io.IOException) $r11;

        virtualinvoke $r16.<java.io.IOException: void printStackTrace()>();

        return $r0;

        catch java.io.IOException from label01 to label02 with label48;
        catch java.io.IOException from label03 to label04 with label48;
        catch java.io.IOException from label05 to label07 with label48;
        catch java.io.IOException from label08 to label09 with label48;
        catch java.io.IOException from label10 to label11 with label48;
        catch java.io.IOException from label12 to label13 with label48;
        catch java.io.IOException from label14 to label15 with label48;
        catch java.io.IOException from label16 to label17 with label48;
        catch java.io.IOException from label18 to label19 with label48;
        catch java.io.IOException from label20 to label21 with label48;
        catch java.io.IOException from label22 to label23 with label48;
        catch java.io.IOException from label24 to label25 with label48;
        catch java.io.IOException from label26 to label27 with label48;
        catch java.io.IOException from label28 to label29 with label48;
        catch java.io.IOException from label30 to label31 with label48;
        catch java.io.IOException from label32 to label33 with label48;
        catch java.io.IOException from label34 to label35 with label48;
        catch java.io.IOException from label36 to label37 with label48;
        catch java.io.IOException from label38 to label39 with label48;
        catch java.io.IOException from label40 to label41 with label48;
        catch java.io.IOException from label42 to label43 with label48;
        catch java.io.IOException from label44 to label45 with label48;
        catch java.io.IOException from label46 to label47 with label48;
    }
}
