public class cn.hi321.browser.model.DbAdapter extends java.lang.Object
{
    public static final java.lang.String ADBLOCK_ROWID;
    public static final java.lang.String ADBLOCK_URL;
    private static final java.lang.String ADBLOCK_WHITELIST_DATABASE_CREATE;
    private static final java.lang.String ADBLOCK_WHITELIST_DATABASE_TABLE;
    private static final java.lang.String DATABASE_NAME;
    private static final int DATABASE_VERSION;
    private static final java.lang.String MOBILE_VIEW_DATABASE_CREATE;
    private static final java.lang.String MOBILE_VIEW_DATABASE_TABLE;
    public static final java.lang.String MOBILE_VIEW_URL_ROWID;
    public static final java.lang.String MOBILE_VIEW_URL_URL;
    private static final java.lang.String TAG;
    protected boolean mAdBlockListNeedPopulate;
    private final android.content.Context mContext;
    private android.database.sqlite.SQLiteDatabase mDb;
    private cn.hi321.browser.model.DbAdapter$DatabaseHelper mDbHelper;

    public void <init>(android.content.Context)
    {
        cn.hi321.browser.model.DbAdapter r0;
        android.content.Context $r1;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cn.hi321.browser.model.DbAdapter: boolean mAdBlockListNeedPopulate> = 0;

        r0.<cn.hi321.browser.model.DbAdapter: android.content.Context mContext> = $r1;

        return;
    }

    static android.content.Context access$0(cn.hi321.browser.model.DbAdapter)
    {
        cn.hi321.browser.model.DbAdapter $r0;
        android.content.Context r1;

        $r0 := @parameter0: cn.hi321.browser.model.DbAdapter;

        r1 = $r0.<cn.hi321.browser.model.DbAdapter: android.content.Context mContext>;

        return r1;
    }

    private void populateDefaultWhiteList()
    {
        cn.hi321.browser.model.DbAdapter r0;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        virtualinvoke r0.<cn.hi321.browser.model.DbAdapter: void insertInWhiteList(java.lang.String)>("google.com/reader");

        return;
    }

    public void clearMobileViewUrlList()
    {
        cn.hi321.browser.model.DbAdapter r0;
        android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $r1 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM MOBILE_VIEW_URL;");

        return;
    }

    public void clearWhiteList()
    {
        cn.hi321.browser.model.DbAdapter r0;
        android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $r1 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM ADBLOCK_WHITELIST;");

        return;
    }

    public void close()
    {
        cn.hi321.browser.model.DbAdapter r0;
        cn.hi321.browser.model.DbAdapter$DatabaseHelper $r1;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $r1 = r0.<cn.hi321.browser.model.DbAdapter: cn.hi321.browser.model.DbAdapter$DatabaseHelper mDbHelper>;

        virtualinvoke $r1.<cn.hi321.browser.model.DbAdapter$DatabaseHelper: void close()>();

        return;
    }

    public void deleteFromMobileViewUrlList(long)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        cn.hi321.browser.model.DbAdapter r0;
        long $l0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $l0 := @parameter0: long;

        $r1 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("DELETE FROM MOBILE_VIEW_URL WHERE _id = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r3);

        return;
    }

    public void deleteFromWhiteList(long)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        cn.hi321.browser.model.DbAdapter r0;
        long $l0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $l0 := @parameter0: long;

        $r1 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("DELETE FROM ADBLOCK_WHITELIST WHERE _id = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r3);

        return;
    }

    public android.database.sqlite.SQLiteDatabase getDatabase()
    {
        cn.hi321.browser.model.DbAdapter r0;
        android.database.sqlite.SQLiteDatabase r1;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        r1 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        return r1;
    }

    public android.database.Cursor getMobileViewUrlCursor()
    {
        android.database.sqlite.SQLiteDatabase $r2;
        cn.hi321.browser.model.DbAdapter r0;
        java.lang.String[] $r3;
        android.database.Cursor $r1;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $r2 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "_id";

        $r3[1] = "url";

        $r1 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("MOBILE_VIEW_URL", $r3, null, null, null, null, null);

        return $r1;
    }

    public java.lang.String getMobileViewUrlItemById(long)
    {
        long $l0;
        java.lang.String[] $r2;
        android.database.sqlite.SQLiteDatabase $r1;
        cn.hi321.browser.model.DbAdapter r0;
        int $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        android.database.Cursor $r5;
        boolean $z0;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $l0 := @parameter0: long;

        $r1 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "_id";

        $r2[1] = "url";

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(1, "MOBILE_VIEW_URL", $r2, $r4, null, null, null, null, null);

        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label1;

        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("url");

        $r4 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>($i1);

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return $r4;

     label1:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return null;
    }

    public java.util.List getMobileViewUrlList()
    {
        cn.hi321.browser.model.DbAdapter r0;
        int $i0;
        java.lang.String $r3;
        java.util.ArrayList r1;
        android.database.Cursor $r2;
        boolean $z0;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r0.<cn.hi321.browser.model.DbAdapter: android.database.Cursor getMobileViewUrlCursor()>();

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label2;

     label1:
        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("url");

        $r3 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label1;

     label2:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return r1;
    }

    public java.util.List getWhiteList()
    {
        cn.hi321.browser.model.DbAdapter r0;
        int $i0;
        java.lang.String $r3;
        java.util.ArrayList r1;
        android.database.Cursor $r2;
        boolean $z0;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r0.<cn.hi321.browser.model.DbAdapter: android.database.Cursor getWhiteListCursor()>();

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label2;

     label1:
        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("url");

        $r3 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>($i0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label1;

     label2:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return r1;
    }

    public android.database.Cursor getWhiteListCursor()
    {
        android.database.sqlite.SQLiteDatabase $r2;
        cn.hi321.browser.model.DbAdapter r0;
        java.lang.String[] $r3;
        android.database.Cursor $r1;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $r2 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "_id";

        $r3[1] = "url";

        $r1 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("ADBLOCK_WHITELIST", $r3, null, null, null, null, null);

        return $r1;
    }

    public java.lang.String getWhiteListItemById(long)
    {
        long $l0;
        java.lang.String[] $r2;
        android.database.sqlite.SQLiteDatabase $r1;
        cn.hi321.browser.model.DbAdapter r0;
        int $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        android.database.Cursor $r5;
        boolean $z0;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $l0 := @parameter0: long;

        $r1 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "_id";

        $r2[1] = "url";

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(1, "ADBLOCK_WHITELIST", $r2, $r4, null, null, null, null, null);

        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label1;

        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("url");

        $r4 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>($i1);

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return $r4;

     label1:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return null;
    }

    public void insertInMobileViewUrlList(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r3;
        cn.hi321.browser.model.DbAdapter r0;
        java.lang.String $r1;
        android.content.ContentValues r2;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $r1 := @parameter0: java.lang.String;

        r2 = new android.content.ContentValues;

        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("url", $r1);

        $r3 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("MOBILE_VIEW_URL", null, r2);

        return;
    }

    public void insertInWhiteList(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r3;
        cn.hi321.browser.model.DbAdapter r0;
        java.lang.String $r1;
        android.content.ContentValues r2;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $r1 := @parameter0: java.lang.String;

        r2 = new android.content.ContentValues;

        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("url", $r1);

        $r3 = r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("ADBLOCK_WHITELIST", null, r2);

        return;
    }

    public cn.hi321.browser.model.DbAdapter open()
    {
        android.content.Context $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        cn.hi321.browser.model.DbAdapter r0;
        cn.hi321.browser.model.DbAdapter$DatabaseHelper $r3;
        boolean $z0;

        r0 := @this: cn.hi321.browser.model.DbAdapter;

        $r3 = new cn.hi321.browser.model.DbAdapter$DatabaseHelper;

        $r1 = r0.<cn.hi321.browser.model.DbAdapter: android.content.Context mContext>;

        specialinvoke $r3.<cn.hi321.browser.model.DbAdapter$DatabaseHelper: void <init>(android.content.Context,cn.hi321.browser.model.DbAdapter)>($r1, r0);

        r0.<cn.hi321.browser.model.DbAdapter: cn.hi321.browser.model.DbAdapter$DatabaseHelper mDbHelper> = $r3;

        $r3 = r0.<cn.hi321.browser.model.DbAdapter: cn.hi321.browser.model.DbAdapter$DatabaseHelper mDbHelper>;

        $r2 = virtualinvoke $r3.<cn.hi321.browser.model.DbAdapter$DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<cn.hi321.browser.model.DbAdapter: android.database.sqlite.SQLiteDatabase mDb> = $r2;

        $z0 = r0.<cn.hi321.browser.model.DbAdapter: boolean mAdBlockListNeedPopulate>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<cn.hi321.browser.model.DbAdapter: void populateDefaultWhiteList()>();

        r0.<cn.hi321.browser.model.DbAdapter: boolean mAdBlockListNeedPopulate> = 0;

     label1:
        return r0;
    }

    public static void <clinit>()
    {
        <cn.hi321.browser.model.DbAdapter: java.lang.String TAG> = "DbAdapter";

        <cn.hi321.browser.model.DbAdapter: java.lang.String MOBILE_VIEW_URL_URL> = "url";

        <cn.hi321.browser.model.DbAdapter: java.lang.String MOBILE_VIEW_URL_ROWID> = "_id";

        <cn.hi321.browser.model.DbAdapter: java.lang.String MOBILE_VIEW_DATABASE_TABLE> = "MOBILE_VIEW_URL";

        <cn.hi321.browser.model.DbAdapter: java.lang.String MOBILE_VIEW_DATABASE_CREATE> = "CREATE TABLE MOBILE_VIEW_URL (_id INTEGER PRIMARY KEY AUTOINCREMENT, url TEXT NOT NULL);";

        <cn.hi321.browser.model.DbAdapter: int DATABASE_VERSION> = 6;

        <cn.hi321.browser.model.DbAdapter: java.lang.String DATABASE_NAME> = "ZIRCO";

        <cn.hi321.browser.model.DbAdapter: java.lang.String ADBLOCK_WHITELIST_DATABASE_TABLE> = "ADBLOCK_WHITELIST";

        <cn.hi321.browser.model.DbAdapter: java.lang.String ADBLOCK_WHITELIST_DATABASE_CREATE> = "CREATE TABLE ADBLOCK_WHITELIST (_id INTEGER PRIMARY KEY AUTOINCREMENT, url TEXT NOT NULL);";

        <cn.hi321.browser.model.DbAdapter: java.lang.String ADBLOCK_URL> = "url";

        <cn.hi321.browser.model.DbAdapter: java.lang.String ADBLOCK_ROWID> = "_id";

        return;
    }
}
