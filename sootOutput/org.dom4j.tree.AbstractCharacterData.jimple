public abstract class org.dom4j.tree.AbstractCharacterData extends org.dom4j.tree.AbstractNode implements org.dom4j.CharacterData
{

    public void <init>()
    {
        org.dom4j.tree.AbstractCharacterData r0;

        r0 := @this: org.dom4j.tree.AbstractCharacterData;

        specialinvoke r0.<org.dom4j.tree.AbstractNode: void <init>()>();

        return;
    }

    public void appendText(java.lang.String)
    {
        java.lang.StringBuffer $r2;
        org.dom4j.tree.AbstractCharacterData r0;
        java.lang.String $r1, $r3;

        r0 := @this: org.dom4j.tree.AbstractCharacterData;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<org.dom4j.tree.AbstractCharacterData: java.lang.String getText()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.dom4j.tree.AbstractCharacterData: void setText(java.lang.String)>($r1);

        return;
    }

    public java.lang.String getPath(org.dom4j.Element)
    {
        java.lang.StringBuffer $r3;
        org.dom4j.tree.AbstractCharacterData r0;
        org.dom4j.Element $r1, $r2;
        java.lang.String $r4;

        r0 := @this: org.dom4j.tree.AbstractCharacterData;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 = virtualinvoke r0.<org.dom4j.tree.AbstractCharacterData: org.dom4j.Element getParent()>();

        if $r2 == null goto label1;

        if $r2 == $r1 goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = interfaceinvoke $r2.<org.dom4j.Element: java.lang.String getPath(org.dom4j.Element)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/text()");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

     label1:
        return "text()";
    }

    public java.lang.String getUniquePath(org.dom4j.Element)
    {
        java.lang.StringBuffer $r3;
        org.dom4j.tree.AbstractCharacterData r0;
        org.dom4j.Element $r1, $r2;
        java.lang.String $r4;

        r0 := @this: org.dom4j.tree.AbstractCharacterData;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 = virtualinvoke r0.<org.dom4j.tree.AbstractCharacterData: org.dom4j.Element getParent()>();

        if $r2 == null goto label1;

        if $r2 == $r1 goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = interfaceinvoke $r2.<org.dom4j.Element: java.lang.String getUniquePath(org.dom4j.Element)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/text()");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

     label1:
        return "text()";
    }
}
