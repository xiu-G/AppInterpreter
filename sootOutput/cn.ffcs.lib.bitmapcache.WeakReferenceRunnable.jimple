abstract class cn.ffcs.lib.bitmapcache.WeakReferenceRunnable extends java.lang.Object implements java.lang.Runnable
{
    private final java.lang.ref.WeakReference mObjectRef;

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.ref.WeakReference $r2;
        cn.ffcs.lib.bitmapcache.WeakReferenceRunnable r0;

        r0 := @this: cn.ffcs.lib.bitmapcache.WeakReferenceRunnable;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<cn.ffcs.lib.bitmapcache.WeakReferenceRunnable: java.lang.ref.WeakReference mObjectRef> = $r2;

        return;
    }

    public final void run()
    {
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r1;
        cn.ffcs.lib.bitmapcache.WeakReferenceRunnable r0;

        r0 := @this: cn.ffcs.lib.bitmapcache.WeakReferenceRunnable;

        $r1 = r0.<cn.ffcs.lib.bitmapcache.WeakReferenceRunnable: java.lang.ref.WeakReference mObjectRef>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r2 == null goto label1;

        virtualinvoke r0.<cn.ffcs.lib.bitmapcache.WeakReferenceRunnable: void run(java.lang.Object)>($r2);

     label1:
        return;
    }

    public abstract void run(java.lang.Object);
}
