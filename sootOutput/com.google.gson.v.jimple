final class com.google.gson.v extends java.lang.Object
{
    private static final java.util.regex.Pattern a;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(^[a-zA-Z][a-zA-Z0-9\\ \\$_\\-]*$)|(^[\\$_][a-zA-Z][a-zA-Z0-9\\ \\$_\\-]*$)");

        <com.google.gson.v: java.util.regex.Pattern a> = $r0;

        return;
    }

    void <init>()
    {
        com.google.gson.v r0;

        r0 := @this: com.google.gson.v;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.IllegalArgumentException $r5;
        java.util.regex.Matcher $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r0, $r1, $r2;
        java.util.regex.Pattern $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <com.google.gson.at: void a(java.lang.Object)>($r0);

        $r1 = "";

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        staticinvoke <com.google.gson.at: void a(boolean)>($z0);

        $r3 = <com.google.gson.v: java.util.regex.Pattern a>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid JSON field name.");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r5;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return $r0;
    }
}
