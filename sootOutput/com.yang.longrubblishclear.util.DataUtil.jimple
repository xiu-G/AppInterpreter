public class com.yang.longrubblishclear.util.DataUtil extends java.lang.Object
{
    private static final int GETCACHESIZE;
    private static final int GETCACHESIZECOMPLETED;
    private android.content.Context context;
    private java.util.HashMap numberMap;
    private java.util.HashMap photoMap;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        java.util.HashMap $r2;
        com.yang.longrubblishclear.util.DataUtil r0;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.yang.longrubblishclear.util.DataUtil: android.content.Context context> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.yang.longrubblishclear.util.DataUtil: java.util.HashMap numberMap> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.yang.longrubblishclear.util.DataUtil: java.util.HashMap photoMap> = $r2;

        return;
    }

    private void cachePhoto(android.content.ContentResolver, java.lang.String)
    {
        java.lang.Throwable r4;
        android.net.Uri $r9;
        java.lang.String[] $r3, $r10;
        java.util.HashMap $r5;
        long $l0;
        byte $b1;
        android.content.ContentResolver $r1;
        java.lang.Long r7, $r13, $r14;
        com.yang.longrubblishclear.util.DataUtil r0;
        int $i2;
        java.lang.String $r2;
        java.lang.ref.WeakReference r8, $r16;
        android.database.Cursor $r11;
        boolean $z0;
        java.io.IOException $r17;
        android.graphics.Bitmap r12;
        java.lang.Object $r6;
        java.io.InputStream $r15;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r1 := @parameter0: android.content.ContentResolver;

        $r2 := @parameter1: java.lang.String;

        $r5 = r0.<com.yang.longrubblishclear.util.DataUtil: java.util.HashMap numberMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r7 = (java.lang.Long) $r6;

        if r7 == null goto label2;

        $l0 = virtualinvoke r7.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 > 0 goto label1;

        return;

     label1:
        $r5 = r0.<com.yang.longrubblishclear.util.DataUtil: java.util.HashMap photoMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (java.lang.ref.WeakReference) $r6;

        if r8 == null goto label2;

        $r6 = virtualinvoke r8.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r6 != null goto label9;

     label2:
        $r9 = <android.provider.ContactsContract$CommonDataKinds$Phone: android.net.Uri CONTENT_URI>;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = "contact_id";

        $r10[1] = "photo_id";

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r2;

        $r11 = virtualinvoke $r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r10, "data1=?", $r3, null);

        if $r11 == null goto label4;

        r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        r12 = null;

     label3:
        $z0 = interfaceinvoke $r11.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label5;

        $r5 = r0.<com.yang.longrubblishclear.util.DataUtil: java.util.HashMap numberMap>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r7);

        $r5 = r0.<com.yang.longrubblishclear.util.DataUtil: java.util.HashMap photoMap>;

        $r16 = new java.lang.ref.WeakReference;

        specialinvoke $r16.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r12);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r16);

     label4:
        interfaceinvoke $r11.<android.database.Cursor: void close()>();

        return;

     label5:
        $l0 = interfaceinvoke $r11.<android.database.Cursor: long getLong(int)>(0);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l0 = interfaceinvoke $r11.<android.database.Cursor: long getLong(int)>(1);

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r7 = $r14;

        $l0 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label3;

        $r9 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $l0 = virtualinvoke $r13.<java.lang.Long: long longValue()>();

        $r9 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r9, $l0);

        $r15 = staticinvoke <android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>($r1, $r9);

        r12 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r15);

     label6:
        virtualinvoke $r15.<java.io.InputStream: void close()>();

     label7:
        goto label3;

     label8:
        r4 := @caughtexception;

        $r17 = (java.io.IOException) r4;

        virtualinvoke $r17.<java.io.IOException: void printStackTrace()>();

        goto label3;

     label9:
        return;

        catch java.io.IOException from label6 to label7 with label8;
    }

    public boolean ExistSDCard()
    {
        java.lang.String $r1;
        com.yang.longrubblishclear.util.DataUtil r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String formateFileSize(long)
    {
        android.content.Context $r2;
        com.yang.longrubblishclear.util.DataUtil r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $l0 := @parameter0: long;

        $r2 = r0.<com.yang.longrubblishclear.util.DataUtil: android.content.Context context>;

        $r1 = staticinvoke <android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>($r2, $l0);

        return $r1;
    }

    public void getCacheSize(android.content.Context, android.os.Handler)
    {
        android.content.Context $r1;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageInfo $r6;
        java.util.List $r4;
        com.yang.longrubblishclear.util.DataUtil r0;
        android.os.Handler $r2;
        int i0, $i1, $i2;
        java.lang.Object $r5;
        android.content.pm.ApplicationInfo $r7;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.os.Handler;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(0);

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i0 < $i1 goto label2;

        return;

     label2:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i2 = -1;

        $i1 = $i1 + $i2;

        if i0 != $i1 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r6 = (android.content.pm.PackageInfo) $r5;

        $r7 = $r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = -1;

        virtualinvoke r0.<com.yang.longrubblishclear.util.DataUtil: void getPkgInfo(android.content.Context,android.content.pm.ApplicationInfo,int,android.os.Handler)>($r1, $r7, $i1, $r2);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r6 = (android.content.pm.PackageInfo) $r5;

        $r7 = $r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        virtualinvoke r0.<com.yang.longrubblishclear.util.DataUtil: void getPkgInfo(android.content.Context,android.content.pm.ApplicationInfo,int,android.os.Handler)>($r1, $r7, i0, $r2);

        goto label3;
    }

    public long getPhoneAvailMemorySize()
    {
        android.os.StatFs r1;
        com.yang.longrubblishclear.util.DataUtil r0;
        int $i2;
        long l0, l1;
        java.lang.String $r3;
        java.io.File $r2;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        r1 = new android.os.StatFs;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        specialinvoke r1.<android.os.StatFs: void <init>(java.lang.String)>($r3);

        $i2 = virtualinvoke r1.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i2;

        $i2 = virtualinvoke r1.<android.os.StatFs: int getAvailableBlocks()>();

        l0 = (long) $i2;

        l0 = l0 * l1;

        return l0;
    }

    public long getPhoneTotalMemorySize()
    {
        android.os.StatFs r1;
        com.yang.longrubblishclear.util.DataUtil r0;
        int $i2;
        long l0, l1;
        java.lang.String $r3;
        java.io.File $r2;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        r1 = new android.os.StatFs;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        specialinvoke r1.<android.os.StatFs: void <init>(java.lang.String)>($r3);

        $i2 = virtualinvoke r1.<android.os.StatFs: int getBlockSize()>();

        l0 = (long) $i2;

        $i2 = virtualinvoke r1.<android.os.StatFs: int getBlockCount()>();

        l1 = (long) $i2;

        l0 = l1 * l0;

        return l0;
    }

    public android.graphics.Bitmap getPhoto(android.content.ContentResolver, java.lang.String)
    {
        java.util.HashMap $r3;
        android.content.ContentResolver $r1;
        java.lang.Long r5;
        com.yang.longrubblishclear.util.DataUtil r0;
        android.graphics.Bitmap $r7;
        java.lang.Object $r4;
        java.lang.String $r2;
        java.lang.ref.WeakReference r6;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r1 := @parameter0: android.content.ContentResolver;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.yang.longrubblishclear.util.DataUtil: void cachePhoto(android.content.ContentResolver,java.lang.String)>($r1, $r2);

        $r3 = r0.<com.yang.longrubblishclear.util.DataUtil: java.util.HashMap numberMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.Long) $r4;

        $r3 = r0.<com.yang.longrubblishclear.util.DataUtil: java.util.HashMap photoMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (java.lang.ref.WeakReference) $r4;

        if r6 == null goto label1;

        $r4 = virtualinvoke r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (android.graphics.Bitmap) $r4;

        return $r7;

     label1:
        return null;
    }

    public android.graphics.Bitmap getPhotoFromCache(java.lang.String)
    {
        java.lang.Long r4;
        com.yang.longrubblishclear.util.DataUtil r0;
        android.graphics.Bitmap $r6;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        java.lang.ref.WeakReference r5;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.yang.longrubblishclear.util.DataUtil: java.util.HashMap numberMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.Long) $r3;

        $r2 = r0.<com.yang.longrubblishclear.util.DataUtil: java.util.HashMap photoMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.lang.ref.WeakReference) $r3;

        if r5 == null goto label1;

        $r3 = virtualinvoke r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (android.graphics.Bitmap) $r3;

        return $r6;

     label1:
        return null;
    }

    public void getPkgInfo(android.content.Context, android.content.pm.ApplicationInfo, int, android.os.Handler)
    {
        android.content.Context $r1;
        java.lang.Object[] $r11;
        java.lang.CharSequence $r7;
        android.content.pm.PackageManager $r6;
        java.lang.Class[] $r9;
        java.lang.Exception r4;
        com.yang.longrubblishclear.util.DataUtil r0;
        android.os.Handler $r3;
        int $i0;
        java.lang.Class $r8;
        java.lang.String r5;
        com.yang.longrubblishclear.util.DataUtil$1 $r12;
        android.content.pm.ApplicationInfo $r2;
        java.lang.reflect.Method $r10;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.pm.ApplicationInfo;

        $i0 := @parameter2: int;

        $r3 := @parameter3: android.os.Handler;

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r6);

        r5 = (java.lang.String) $r7;

        r5 = $r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label1:
        $r8 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        $r9 = newarray (java.lang.Class)[2];

     label3:
        $r9[0] = class "Ljava/lang/String;";

        $r9[1] = class "Landroid/content/pm/IPackageStatsObserver;";

        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPackageSizeInfo", $r9);

     label4:
        $r11 = newarray (java.lang.Object)[2];

     label5:
        r5 = $r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r11[0] = r5;

     label6:
        $r12 = new com.yang.longrubblishclear.util.DataUtil$1;

     label7:
        specialinvoke $r12.<com.yang.longrubblishclear.util.DataUtil$1: void <init>(com.yang.longrubblishclear.util.DataUtil,int,android.os.Handler)>(r0, $i0, $r3);

        $r11[1] = $r12;

        virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r11);

     label8:
        return;

     label9:
        r4 := @caughtexception;

        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public long getSDAllSize()
    {
        android.os.StatFs r1;
        com.yang.longrubblishclear.util.DataUtil r0;
        int $i2;
        long l0, l1;
        java.lang.String $r3;
        java.io.File $r2;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        r1 = new android.os.StatFs;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        specialinvoke r1.<android.os.StatFs: void <init>(java.lang.String)>($r3);

        $i2 = virtualinvoke r1.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i2;

        $i2 = virtualinvoke r1.<android.os.StatFs: int getBlockCount()>();

        l0 = (long) $i2;

        l0 = l0 * l1;

        return l0;
    }

    public long getSDFreeSize()
    {
        android.os.StatFs r1;
        com.yang.longrubblishclear.util.DataUtil r0;
        int $i2;
        long l0, l1;
        java.lang.String $r3;
        java.io.File $r2;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        r1 = new android.os.StatFs;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        specialinvoke r1.<android.os.StatFs: void <init>(java.lang.String)>($r3);

        $i2 = virtualinvoke r1.<android.os.StatFs: int getBlockSize()>();

        l0 = (long) $i2;

        $i2 = virtualinvoke r1.<android.os.StatFs: int getAvailableBlocks()>();

        l1 = (long) $i2;

        l0 = l1 * l0;

        return l0;
    }

    public java.lang.String time2String(long)
    {
        com.yang.longrubblishclear.util.DataUtil r0;
        java.text.SimpleDateFormat r2;
        long $l0;
        java.lang.String $r3;
        java.sql.Date r1;

        r0 := @this: com.yang.longrubblishclear.util.DataUtil;

        $l0 := @parameter0: long;

        r2 = new java.text.SimpleDateFormat;

        specialinvoke r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        r1 = new java.sql.Date;

        specialinvoke r1.<java.sql.Date: void <init>(long)>($l0);

        $r3 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r1);

        return $r3;
    }

    public static void <clinit>()
    {
        <com.yang.longrubblishclear.util.DataUtil: int GETCACHESIZECOMPLETED> = 3;

        <com.yang.longrubblishclear.util.DataUtil: int GETCACHESIZE> = 2;

        return;
    }
}
