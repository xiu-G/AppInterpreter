abstract class twitter4j.TwitterOAuthSupportBase extends twitter4j.TwitterBase implements twitter4j.http.HttpResponseListener, twitter4j.http.OAuthSupport, java.io.Serializable
{
    private static final long serialVersionUID;
    protected transient twitter4j.http.HttpClientWrapper http;
    protected twitter4j.RateLimitStatusListener rateLimitStatusListener;

    void <init>(twitter4j.conf.Configuration)
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.TwitterOAuthSupportBase r0;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        specialinvoke r0.<twitter4j.TwitterBase: void <init>(twitter4j.conf.Configuration)>($r1);

        r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener> = null;

        specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: void init()>();

        return;
    }

    void <init>(twitter4j.conf.Configuration, java.lang.String, java.lang.String)
    {
        twitter4j.conf.Configuration $r1;
        java.lang.String $r2, $r3;
        twitter4j.TwitterOAuthSupportBase r0;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<twitter4j.TwitterBase: void <init>(twitter4j.conf.Configuration,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener> = null;

        specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: void init()>();

        return;
    }

    void <init>(twitter4j.conf.Configuration, twitter4j.http.Authorization)
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.http.Authorization $r2;
        twitter4j.TwitterOAuthSupportBase r0;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: twitter4j.http.Authorization;

        specialinvoke r0.<twitter4j.TwitterBase: void <init>(twitter4j.conf.Configuration,twitter4j.http.Authorization)>($r1, $r2);

        r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener> = null;

        specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: void init()>();

        return;
    }

    private void init()
    {
        twitter4j.http.Authorization $r3;
        twitter4j.http.OAuthAuthorization r1;
        twitter4j.http.AccessToken $r6;
        twitter4j.conf.Configuration $r2;
        java.lang.String $r4, $r5;
        twitter4j.TwitterOAuthSupportBase r0;
        twitter4j.http.HttpClientWrapper $r7;
        boolean $z0;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $r3 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.http.Authorization auth>;

        $z0 = $r3 instanceof twitter4j.http.NullAuthorization;

        if $z0 == 0 goto label2;

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r2.<twitter4j.conf.Configuration: java.lang.String getOAuthConsumerKey()>();

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r2.<twitter4j.conf.Configuration: java.lang.String getOAuthConsumerSecret()>();

        if $r4 == null goto label2;

        if $r5 == null goto label2;

        r1 = new twitter4j.http.OAuthAuthorization;

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.conf.Configuration conf>;

        specialinvoke r1.<twitter4j.http.OAuthAuthorization: void <init>(twitter4j.conf.Configuration,java.lang.String,java.lang.String)>($r2, $r4, $r5);

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r2.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessToken()>();

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r2.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessTokenSecret()>();

        if $r4 == null goto label1;

        if $r5 == null goto label1;

        $r6 = new twitter4j.http.AccessToken;

        specialinvoke $r6.<twitter4j.http.AccessToken: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

        virtualinvoke r1.<twitter4j.http.OAuthAuthorization: void setOAuthAccessToken(twitter4j.http.AccessToken)>($r6);

     label1:
        r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.http.Authorization auth> = r1;

     label2:
        $r7 = new twitter4j.http.HttpClientWrapper;

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.conf.Configuration conf>;

        specialinvoke $r7.<twitter4j.http.HttpClientWrapper: void <init>(twitter4j.http.HttpClientWrapperConfiguration)>($r2);

        r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.http.HttpClientWrapper http> = $r7;

        $r7 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.http.HttpClientWrapper http>;

        virtualinvoke $r7.<twitter4j.http.HttpClientWrapper: void setHttpResponseListener(twitter4j.http.HttpResponseListener)>(r0);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        twitter4j.RateLimitStatusListener $r4;
        java.io.ObjectInputStream $r1;
        twitter4j.conf.Configuration $r2;
        java.lang.Object $r3;
        twitter4j.TwitterOAuthSupportBase r0;
        twitter4j.http.HttpClientWrapper $r5;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r4 = (twitter4j.RateLimitStatusListener) $r3;

        r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener> = $r4;

        $r5 = new twitter4j.http.HttpClientWrapper;

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.conf.Configuration conf>;

        specialinvoke $r5.<twitter4j.http.HttpClientWrapper: void <init>(twitter4j.http.HttpClientWrapperConfiguration)>($r2);

        r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.http.HttpClientWrapper http> = $r5;

        $r5 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.http.HttpClientWrapper http>;

        virtualinvoke $r5.<twitter4j.http.HttpClientWrapper: void setHttpResponseListener(twitter4j.http.HttpResponseListener)>(r0);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        twitter4j.RateLimitStatusListener $r2;
        java.io.ObjectOutputStream $r1;
        twitter4j.TwitterOAuthSupportBase r0;
        boolean $z0;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        $z0 = $r2 instanceof java.io.Serializable;

        if $z0 == 0 goto label1;

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;

     label1:
        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.RateLimitStatusListener $r2, $r4;
        java.lang.Object $r1;
        twitter4j.TwitterOAuthSupportBase r0, r3;
        boolean $z0;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof twitter4j.TwitterOAuthSupportBase;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $z0 = specialinvoke r0.<twitter4j.TwitterBase: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r3 = (twitter4j.TwitterOAuthSupportBase) $r1;

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        if $r2 == null goto label5;

        $r4 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        $r2 = r3.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label6;

     label4:
        return 0;

     label5:
        $r2 = r3.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        if $r2 != null goto label4;

     label6:
        return 1;
    }

    public abstract twitter4j.http.AccessToken getOAuthAccessToken() throws twitter4j.TwitterException;

    public abstract twitter4j.http.AccessToken getOAuthAccessToken(java.lang.String) throws twitter4j.TwitterException;

    public abstract twitter4j.http.AccessToken getOAuthAccessToken(java.lang.String, java.lang.String) throws twitter4j.TwitterException;

    public abstract twitter4j.http.AccessToken getOAuthAccessToken(java.lang.String, java.lang.String, java.lang.String) throws twitter4j.TwitterException;

    public abstract twitter4j.http.AccessToken getOAuthAccessToken(twitter4j.http.RequestToken) throws twitter4j.TwitterException;

    public abstract twitter4j.http.AccessToken getOAuthAccessToken(twitter4j.http.RequestToken, java.lang.String) throws twitter4j.TwitterException;

    public abstract twitter4j.http.RequestToken getOAuthRequestToken() throws twitter4j.TwitterException;

    public abstract twitter4j.http.RequestToken getOAuthRequestToken(java.lang.String) throws twitter4j.TwitterException;

    public int hashCode()
    {
        twitter4j.RateLimitStatusListener $r1;
        int $i0, $i1;
        twitter4j.TwitterOAuthSupportBase r0;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $i0 = specialinvoke r0.<twitter4j.TwitterBase: int hashCode()>();

        $i0 = $i0 * 31;

        $r1 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        if $r1 == null goto label2;

        $r1 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

     label1:
        $i0 = $i0 + $i1;

        return $i0;

     label2:
        $i1 = 0;

        goto label1;
    }

    public void httpResponseReceived(twitter4j.http.HttpResponseEvent)
    {
        twitter4j.RateLimitStatusEvent r5;
        twitter4j.http.HttpResponseEvent $r1;
        twitter4j.http.HttpResponse $r3;
        twitter4j.RateLimitStatusListener $r2;
        int $i0;
        twitter4j.RateLimitStatus $r4;
        twitter4j.TwitterOAuthSupportBase r0;
        boolean $z0;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $r1 := @parameter0: twitter4j.http.HttpResponseEvent;

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        if $r2 == null goto label3;

        $r3 = virtualinvoke $r1.<twitter4j.http.HttpResponseEvent: twitter4j.http.HttpResponse getResponse()>();

        $r4 = staticinvoke <twitter4j.RateLimitStatusJSONImpl: twitter4j.RateLimitStatus createFromResponseHeader(twitter4j.http.HttpResponse)>($r3);

        if $r4 == null goto label3;

        r5 = new twitter4j.RateLimitStatusEvent;

        $z0 = virtualinvoke $r1.<twitter4j.http.HttpResponseEvent: boolean isAuthenticated()>();

        specialinvoke r5.<twitter4j.RateLimitStatusEvent: void <init>(java.lang.Object,twitter4j.RateLimitStatus,boolean)>(r0, $r4, $z0);

        $i0 = virtualinvoke $r3.<twitter4j.http.HttpResponse: int getStatusCode()>();

        if $i0 == 420 goto label1;

        $i0 = virtualinvoke $r3.<twitter4j.http.HttpResponse: int getStatusCode()>();

        if $i0 != 503 goto label2;

     label1:
        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        interfaceinvoke $r2.<twitter4j.RateLimitStatusListener: void onRateLimitStatus(twitter4j.RateLimitStatusEvent)>(r5);

        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        interfaceinvoke $r2.<twitter4j.RateLimitStatusListener: void onRateLimitReached(twitter4j.RateLimitStatusEvent)>(r5);

        return;

     label2:
        $r2 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener>;

        interfaceinvoke $r2.<twitter4j.RateLimitStatusListener: void onRateLimitStatus(twitter4j.RateLimitStatusEvent)>(r5);

     label3:
        return;
    }

    public boolean isOAuthEnabled()
    {
        twitter4j.http.Authorization $r1;
        twitter4j.TwitterOAuthSupportBase r0;
        boolean $z0;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $r1 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.http.Authorization auth>;

        $z0 = $r1 instanceof twitter4j.http.OAuthAuthorization;

        if $z0 == 0 goto label1;

        $r1 = r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.http.Authorization auth>;

        $z0 = interfaceinvoke $r1.<twitter4j.http.Authorization: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract void setOAuthAccessToken(java.lang.String, java.lang.String);

    public abstract void setOAuthAccessToken(twitter4j.http.AccessToken);

    public abstract void setOAuthConsumer(java.lang.String, java.lang.String);

    public void setRateLimitStatusListener(twitter4j.RateLimitStatusListener)
    {
        twitter4j.TwitterOAuthSupportBase r0;
        twitter4j.RateLimitStatusListener $r1;

        r0 := @this: twitter4j.TwitterOAuthSupportBase;

        $r1 := @parameter0: twitter4j.RateLimitStatusListener;

        r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.RateLimitStatusListener rateLimitStatusListener> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <twitter4j.TwitterOAuthSupportBase: long serialVersionUID> = 6960663978976449394L;

        return;
    }
}
