public class io.vov.utils.CPU extends java.lang.Object
{
    public static final int FEATURE_ARM_NEON;
    public static final int FEATURE_ARM_V5TE;
    public static final int FEATURE_ARM_V6;
    public static final int FEATURE_ARM_V7A;
    public static final int FEATURE_ARM_VFP;
    public static final int FEATURE_ARM_VFPV3;
    private static int cachedFeature;
    private static java.lang.String cachedFeatureString;
    private static final java.util.Map cpuinfo;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <io.vov.utils.CPU: int FEATURE_ARM_VFPV3> = 16;

        <io.vov.utils.CPU: int FEATURE_ARM_VFP> = 4;

        <io.vov.utils.CPU: int FEATURE_ARM_V7A> = 8;

        <io.vov.utils.CPU: int FEATURE_ARM_V6> = 2;

        <io.vov.utils.CPU: int FEATURE_ARM_V5TE> = 1;

        <io.vov.utils.CPU: int FEATURE_ARM_NEON> = 32;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <io.vov.utils.CPU: java.util.Map cpuinfo> = $r0;

        <io.vov.utils.CPU: int cachedFeature> = -1;

        <io.vov.utils.CPU: java.lang.String cachedFeatureString> = null;

        return;
    }

    public void <init>()
    {
        io.vov.utils.CPU r0;

        r0 := @this: io.vov.utils.CPU;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int getCachedFeature()
    {
        java.lang.Object[] $r2;
        java.lang.StringBuffer r0;
        int $i0;
        java.lang.String $r1;

        $r1 = <io.vov.utils.CPU: java.lang.String cachedFeatureString>;

        if $r1 != null goto label7;

        r0 = new java.lang.StringBuffer;

        specialinvoke r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 & 1;

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V5TE ");

     label1:
        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 & 2;

        if $i0 <= 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V6 ");

     label2:
        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 & 4;

        if $i0 <= 0 goto label3;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VFP ");

     label3:
        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 & 8;

        if $i0 <= 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V7A ");

     label4:
        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 & 16;

        if $i0 <= 0 goto label5;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VFPV3 ");

     label5:
        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 & 32;

        if $i0 <= 0 goto label6;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NEON ");

     label6:
        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        <io.vov.utils.CPU: java.lang.String cachedFeatureString> = $r1;

     label7:
        $r2 = newarray (java.lang.Object)[1];

        $r1 = <io.vov.utils.CPU: java.lang.String cachedFeatureString>;

        $r2[0] = $r1;

        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>("GET CPU FATURE: %s", $r2);

        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        return $i0;
    }

    public static int getFeature()
    {
        java.lang.Throwable r1, r15, $r16, r17, r18;
        java.lang.Object[] $r10;
        java.lang.String[] $r13;
        java.lang.Integer $r11;
        java.util.Map $r2;
        int $i0;
        java.lang.String $r6, $r12;
        boolean $z0, z1, $z2;
        java.util.Iterator $r8;
        java.util.Set $r7;
        java.io.File $r5;
        java.lang.Exception r14;
        java.lang.Object $r9;
        java.io.BufferedReader r0, r3;
        java.io.FileReader $r4;

        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        if $i0 <= 0 goto label01;

        $i0 = staticinvoke <io.vov.utils.CPU: int getCachedFeature()>();

        return $i0;

     label01:
        <io.vov.utils.CPU: int cachedFeature> = 1;

        $r2 = <io.vov.utils.CPU: java.util.Map cpuinfo>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label07;

        r3 = null;

     label02:
        r0 = new java.io.BufferedReader;

        $r4 = new java.io.FileReader;

        $r5 = new java.io.File;

     label03:
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>("/proc/cpuinfo");

        specialinvoke $r4.<java.io.FileReader: void <init>(java.io.File)>($r5);

        specialinvoke r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

     label04:
        $r6 = virtualinvoke r0.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if $r6 != null goto label25;

        if r0 == null goto label07;

     label06:
        virtualinvoke r0.<java.io.BufferedReader: void close()>();

     label07:
        $r2 = <io.vov.utils.CPU: java.util.Map cpuinfo>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label24;

        $r2 = <io.vov.utils.CPU: java.util.Map cpuinfo>;

        $r7 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label49;

        $z0 = 0;

        z1 = 0;

        $r2 = <io.vov.utils.CPU: java.util.Map cpuinfo>;

        $r9 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("CPU architecture");

        $r6 = (java.lang.String) $r9;

        if $r6 == null goto label15;

     label09:
        $i0 = staticinvoke <io.vov.utils.StringUtils: int convertToInt(java.lang.String)>($r6);

     label10:
        $r10 = newarray (java.lang.Object)[1];

     label11:
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label12:
        $r10[0] = $r11;

     label13:
        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>("CPU architecture: %s", $r10);

     label14:
        if $i0 < 7 goto label50;

        $z0 = 1;

        z1 = 1;

     label15:
        $r2 = <io.vov.utils.CPU: java.util.Map cpuinfo>;

        $r9 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("Processor");

        $r6 = (java.lang.String) $r9;

        if $r6 == null goto label16;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("(v7l)");

        if $z2 != 0 goto label17;

     label16:
        $z2 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("ARMv7");

        if $z2 == 0 goto label18;

     label17:
        $z0 = 1;

        z1 = 1;

     label18:
        if $r6 == null goto label19;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("(v6l)");

        if $z2 != 0 goto label20;

     label19:
        $z2 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("ARMv6");

        if $z2 == 0 goto label21;

     label20:
        $z0 = 1;

        z1 = 0;

     label21:
        if $z0 == 0 goto label22;

        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 | 2;

        <io.vov.utils.CPU: int cachedFeature> = $i0;

     label22:
        if z1 == 0 goto label23;

        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 | 8;

        <io.vov.utils.CPU: int cachedFeature> = $i0;

     label23:
        $r2 = <io.vov.utils.CPU: java.util.Map cpuinfo>;

        $r9 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("Features");

        $r6 = (java.lang.String) $r9;

        if $r6 == null goto label24;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("neon");

        if $z0 == 0 goto label52;

        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 | 52;

        <io.vov.utils.CPU: int cachedFeature> = $i0;

     label24:
        $i0 = staticinvoke <io.vov.utils.CPU: int getCachedFeature()>();

        return $i0;

     label25:
        $r10 = newarray (java.lang.Object)[0];

     label26:
        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>($r6, $r10);

        $r12 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("");

     label27:
        if $z0 != 0 goto label04;

     label28:
        $r13 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

     label29:
        $i0 = lengthof $r13;

     label30:
        if $i0 <= 1 goto label04;

     label31:
        $r2 = <io.vov.utils.CPU: java.util.Map cpuinfo>;

     label32:
        $r6 = $r13[0];

     label33:
        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

     label34:
        $r12 = $r13[1];

     label35:
        $r12 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r12);

     label36:
        goto label04;

     label37:
        r14 := @caughtexception;

        r3 = r0;

     label38:
        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("getCPUFeature", r14);

     label39:
        if r3 == null goto label07;

     label40:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label41:
        goto label07;

     label42:
        r15 := @caughtexception;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("getCPUFeature", r15);

        goto label07;

     label43:
        $r16 := @caughtexception;

     label44:
        if r3 == null goto label46;

     label45:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label46:
        throw $r16;

     label47:
        r17 := @caughtexception;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("getCPUFeature", r17);

        goto label46;

     label48:
        r18 := @caughtexception;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("getCPUFeature", r18);

        goto label07;

     label49:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r9;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r6;

        $r2 = <io.vov.utils.CPU: java.util.Map cpuinfo>;

        $r9 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r10[1] = $r9;

        staticinvoke <io.vov.utils.Log: void d(java.lang.String,java.lang.Object[])>("%s:%s", $r10);

        goto label08;

     label50:
        if $i0 < 6 goto label15;

        $z0 = 1;

        z1 = 0;

        goto label15;

     label51:
        r1 := @caughtexception;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("getCPUFeature", r1);

        goto label15;

     label52:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("vfpv3");

        if $z0 == 0 goto label53;

        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 | 20;

        <io.vov.utils.CPU: int cachedFeature> = $i0;

        goto label24;

     label53:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("vfp");

        if $z0 == 0 goto label24;

        $i0 = <io.vov.utils.CPU: int cachedFeature>;

        $i0 = $i0 | 4;

        <io.vov.utils.CPU: int cachedFeature> = $i0;

        goto label24;

     label54:
        $r16 := @caughtexception;

        r3 = r0;

        goto label44;

     label55:
        r14 := @caughtexception;

        goto label38;

        catch java.lang.Exception from label03 to label04 with label55;
        catch java.lang.Throwable from label02 to label04 with label43;
        catch java.lang.Exception from label04 to label05 with label37;
        catch java.lang.Throwable from label04 to label05 with label54;
        catch java.io.IOException from label06 to label07 with label48;
        catch java.lang.NumberFormatException from label09 to label10 with label51;
        catch java.lang.NumberFormatException from label11 to label12 with label51;
        catch java.lang.NumberFormatException from label13 to label14 with label51;
        catch java.lang.Exception from label26 to label27 with label37;
        catch java.lang.Exception from label28 to label30 with label37;
        catch java.lang.Exception from label32 to label36 with label37;
        catch java.lang.Throwable from label25 to label27 with label54;
        catch java.lang.Throwable from label28 to label29 with label54;
        catch java.lang.Throwable from label31 to label32 with label54;
        catch java.lang.Throwable from label33 to label34 with label54;
        catch java.lang.Throwable from label35 to label36 with label54;
        catch java.lang.Throwable from label38 to label39 with label43;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.io.IOException from label45 to label46 with label47;
    }

    public static java.lang.String getFeatureString()
    {
        java.lang.String r0;

        staticinvoke <io.vov.utils.CPU: int getFeature()>();

        r0 = <io.vov.utils.CPU: java.lang.String cachedFeatureString>;

        return r0;
    }

    public static boolean isDroidXDroid2()
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 = <android.os.Build: java.lang.String MODEL>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DROIDX");

        if $z0 != 0 goto label1;

        $r0 = <android.os.Build: java.lang.String MODEL>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DROID2");

        if $z0 != 0 goto label1;

        $r0 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("shadow");

        if $z0 != 0 goto label1;

        $r0 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("droid2");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }
}
