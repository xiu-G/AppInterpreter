class proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.instruction.visitor.InstructionVisitor
{
    private final proguard.optimize.evaluation.EvaluationShrinker this$0;

    private void <init>(proguard.optimize.evaluation.EvaluationShrinker)
    {
        proguard.optimize.evaluation.EvaluationShrinker $r1;
        proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker r0;

        r0 := @this: proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker;

        $r1 := @parameter0: proguard.optimize.evaluation.EvaluationShrinker;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0> = $r1;

        return;
    }

    void <init>(proguard.optimize.evaluation.EvaluationShrinker, proguard.optimize.evaluation.EvaluationShrinker$1)
    {
        proguard.optimize.evaluation.EvaluationShrinker $r1;
        proguard.optimize.evaluation.EvaluationShrinker$1 $r2;
        proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker r0;

        r0 := @this: proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker;

        $r1 := @parameter0: proguard.optimize.evaluation.EvaluationShrinker;

        $r2 := @parameter1: proguard.optimize.evaluation.EvaluationShrinker$1;

        specialinvoke r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: void <init>(proguard.optimize.evaluation.EvaluationShrinker)>($r1);

        return;
    }

    public void visitAnyInstruction(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.instruction.Instruction)
    {
        proguard.optimize.evaluation.EvaluationShrinker $r5;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.instruction.Instruction $r4;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker r0;

        r0 := @this: proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.instruction.Instruction;

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$700(proguard.optimize.evaluation.EvaluationShrinker,proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction)>($r5, $r1, $i0, $r4);

        return;
    }

    public void visitBranchInstruction(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.instruction.BranchInstruction)
    {
        proguard.optimize.evaluation.EvaluationShrinker $r5;
        proguard.classfile.instruction.BranchInstruction $r4;
        byte $b1;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i2;
        proguard.classfile.Method $r2;
        proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker r0;

        r0 := @this: proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.instruction.BranchInstruction;

        $b1 = $r4.<proguard.classfile.instruction.BranchInstruction: byte opcode>;

        $i2 = (int) $b1;

        if $i2 == -88 goto label1;

        $b1 = $r4.<proguard.classfile.instruction.BranchInstruction: byte opcode>;

        $i2 = (int) $b1;

        if $i2 != -55 goto label2;

     label1:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$1100(proguard.optimize.evaluation.EvaluationShrinker,int,int)>($r5, $i0, 0);

        return;

     label2:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$700(proguard.optimize.evaluation.EvaluationShrinker,proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction)>($r5, $r1, $i0, $r4);

        return;
    }

    public void visitConstantInstruction(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.instruction.ConstantInstruction)
    {
        proguard.optimize.evaluation.EvaluationShrinker $r5;
        byte $b1;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i2;
        proguard.classfile.instruction.ConstantInstruction $r4;
        proguard.classfile.Method $r2;
        proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker r0;

        r0 := @this: proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.instruction.ConstantInstruction;

        $b1 = $r4.<proguard.classfile.instruction.ConstantInstruction: byte opcode>;

        $i2 = (int) $b1;

        if $i2 != -69 goto label1;

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$1000(proguard.optimize.evaluation.EvaluationShrinker,int)>($r5, $i0);

     label1:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$700(proguard.optimize.evaluation.EvaluationShrinker,proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction)>($r5, $r1, $i0, $r4);

        return;
    }

    public void visitSimpleInstruction(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.instruction.SimpleInstruction)
    {
        proguard.optimize.evaluation.EvaluationShrinker $r5;
        proguard.classfile.instruction.SimpleInstruction $r4;
        byte $b1;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i2;
        proguard.classfile.Method $r2;
        proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker r0;

        r0 := @this: proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.instruction.SimpleInstruction;

        $b1 = $r4.<proguard.classfile.instruction.SimpleInstruction: byte opcode>;

        $i2 = (int) $b1;

        lookupswitch($i2)
        {
            case 89: goto label2;
            case 90: goto label3;
            case 91: goto label4;
            case 92: goto label5;
            case 93: goto label6;
            case 94: goto label7;
            case 95: goto label8;
            default: goto label1;
        };

     label1:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$700(proguard.optimize.evaluation.EvaluationShrinker,proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction)>($r5, $r1, $i0, $r4);

        return;

     label2:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 0, 0);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 1, 0);

        return;

     label3:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 0, 0);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 1, 1);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 2, 0);

        return;

     label4:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 0, 0);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 1, 1);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 2, 2);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 3, 0);

        return;

     label5:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 0, 0);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 1, 1);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 2, 0);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 3, 1);

        return;

     label6:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 0, 0);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 1, 1);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 2, 2);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 3, 0);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 4, 1);

        return;

     label7:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 0, 0);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 1, 1);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 2, 2);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 3, 3);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 4, 0);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 5, 1);

        return;

     label8:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 0, 1);

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int)>($r5, $i0, 1, 0);

        return;
    }

    public void visitVariableInstruction(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.instruction.VariableInstruction)
    {
        proguard.optimize.evaluation.EvaluationShrinker $r5;
        proguard.classfile.instruction.VariableInstruction $r4;
        byte $b1;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i2;
        proguard.classfile.Method $r2;
        proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker r0;

        r0 := @this: proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.instruction.VariableInstruction;

        $b1 = $r4.<proguard.classfile.instruction.VariableInstruction: byte opcode>;

        $i2 = (int) $b1;

        if $i2 >= 54 goto label1;

        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        $i2 = $r4.<proguard.classfile.instruction.VariableInstruction: int variableIndex>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$900(proguard.optimize.evaluation.EvaluationShrinker,int,int)>($r5, $i0, $i2);

        return;

     label1:
        $r5 = r0.<proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker: proguard.optimize.evaluation.EvaluationShrinker this$0>;

        staticinvoke <proguard.optimize.evaluation.EvaluationShrinker: void access$700(proguard.optimize.evaluation.EvaluationShrinker,proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction)>($r5, $r1, $i0, $r4);

        return;
    }
}
