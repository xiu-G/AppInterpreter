public class com.rsm.insurance.irl.remote.JSONHelper extends java.lang.Object
{
    private static final java.lang.String CLAIMS;
    private static final java.lang.String DAMAGETYPES;
    private static final java.lang.String NEWCLAIM;
    private static final java.lang.String ONECLICKRENEW;
    private static final java.lang.String POLICY;
    private static final java.lang.String QUICKQUOTE;
    private static final java.lang.String REGNEWCLAIM;
    private static final java.lang.String REGNEWCLAIMDATA;
    private static final java.lang.String RENEWPOLICY;
    private static final java.lang.String WSURL;

    public void <init>()
    {
        com.rsm.insurance.irl.remote.JSONHelper r0;

        r0 := @this: com.rsm.insurance.irl.remote.JSONHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.ArrayList claimsService(java.lang.String)
    {
        org.apache.http.HttpEntity $r5;
        com.rsm.insurance.irl.model.JsonData $r6;
        java.lang.Exception $r7;
        java.util.ArrayList r2;
        org.apache.http.HttpResponse $r4;
        java.lang.StringBuilder $r3;
        java.lang.String $r0;
        org.json.JSONArray r1;

        $r0 := @parameter0: java.lang.String;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://rubystar.org/ws/testapp/index.php/JSONService/getClaims?phone=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r4 = staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: org.apache.http.HttpResponse doPost(java.lang.String)>($r0);

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r0 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r5);

     label2:
        if $r0 == null goto label8;

        r1 = new org.json.JSONArray;

     label3:
        specialinvoke r1.<org.json.JSONArray: void <init>(java.lang.String)>($r0);

        staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: void parseClaims(org.json.JSONArray,java.util.ArrayList)>(r1, r2);

     label4:
        $r6 = <com.rsm.insurance.irl.data.AppImpl: com.rsm.insurance.irl.model.JsonData jsonData>;

     label5:
        virtualinvoke $r6.<com.rsm.insurance.irl.model.JsonData: void setClaims(java.lang.String)>($r0);

     label6:
        return r2;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label8:
        return r2;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private static org.apache.http.HttpResponse doPost(java.lang.String) throws org.apache.http.client.ClientProtocolException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultHttpClient r1;
        org.apache.http.client.methods.HttpPost r2;
        org.apache.http.HttpResponse $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        r1 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke r1.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        r2 = new org.apache.http.client.methods.HttpPost;

        specialinvoke r2.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r0);

        $r3 = interfaceinvoke r1.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r2);

        return $r3;
    }

    public static java.lang.String getQuickQuote(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.http.HttpEntity $r7;
        java.lang.Exception $r8;
        org.json.JSONObject r1;
        org.apache.http.HttpResponse $r6;
        java.lang.StringBuilder r2, $r5;
        java.lang.String $r0, $r3, $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r4 := @parameter2: java.lang.String;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

     label01:
        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r3, "utf-8");

        $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "utf-8");

     label02:
        $r5 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://rubystar.org/ws/testapp/index.php/JSONService/getQuote?phone=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&make=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&model=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: org.apache.http.HttpResponse doPost(java.lang.String)>($r0);

        $r7 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r0 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r7);

     label04:
        if $r0 == null goto label10;

        r1 = new org.json.JSONObject;

     label05:
        specialinvoke r1.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label06:
        if r1 == null goto label10;

     label07:
        $r0 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("quote");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label08:
        if $z0 != 0 goto label10;

     label09:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Premium is Estimated at\n \u20ac");

        $r0 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("quote");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nReference Number is\n");

        $r0 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("ref_number");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nPlease Note This When Contacting for Final Premium...");

     label10:
        $r0 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label11:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        goto label10;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static java.lang.String getResponseText(java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient r1;
        org.apache.http.client.methods.HttpPost r2;
        org.apache.http.HttpEntity $r5;
        org.apache.http.HttpResponse $r4;
        java.lang.StringBuilder $r3;
        java.lang.String $r0;
        java.lang.Exception $r6;

        $r0 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://rubystar.org/ws/testapp/index.php/JSONService/getInsuranceTypes?type=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = new org.apache.http.client.methods.HttpPost;

     label1:
        specialinvoke r2.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r0);

     label2:
        r1 = new org.apache.http.impl.client.DefaultHttpClient;

     label3:
        specialinvoke r1.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        $r4 = interfaceinvoke r1.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r2);

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r0 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r5);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $r0 = staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String unquote(java.lang.String)>($r0);

     label4:
        return $r0;

     label5:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String newClaimService(java.lang.String, java.lang.String[], java.lang.String[])
    {
        java.lang.String[] $r1, $r2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        $r2 := @parameter2: java.lang.String[];

        $r0 = staticinvoke <com.rsm.insurance.irl.remote.HttpUtils: java.lang.String sendJson(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>("http://rubystar.org/ws/testapp/index.php/JSONService/setNewClaim", $r0, $r1, $r2);

        return $r0;
    }

    public static void parseClaims(org.json.JSONArray, java.util.ArrayList) throws org.json.JSONException
    {
        java.util.ArrayList r1;
        org.json.JSONObject $r3;
        com.rsm.insurance.irl.model.ClaimData r2;
        int i0, $i1;
        java.lang.String $r4, r5;
        org.json.JSONArray $r0;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONArray;

        r1 := @parameter1: java.util.ArrayList;

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if i0 < $i1 goto label2;

        return;

     label2:
        r2 = new com.rsm.insurance.irl.model.ClaimData;

        specialinvoke r2.<com.rsm.insurance.irl.model.ClaimData: void <init>()>();

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("number");

        r5 = $r4;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("null");

        if $z0 == 0 goto label4;

        r5 = " ";

     label3:
        virtualinvoke r2.<com.rsm.insurance.irl.model.ClaimData: void setNumber(java.lang.String)>(r5);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("claim_number");

        virtualinvoke r2.<com.rsm.insurance.irl.model.ClaimData: void setClaim_number(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("claim_nature");

        virtualinvoke r2.<com.rsm.insurance.irl.model.ClaimData: void setClaim_nature(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("date_filed");

        virtualinvoke r2.<com.rsm.insurance.irl.model.ClaimData: void setDate_filed(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("current_status");

        virtualinvoke r2.<com.rsm.insurance.irl.model.ClaimData: void setCurrent_status(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("claim_nature");

        virtualinvoke r2.<com.rsm.insurance.irl.model.ClaimData: void setClaim_nature(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("updated");

        virtualinvoke r2.<com.rsm.insurance.irl.model.ClaimData: void setUpdated(java.lang.String)>($r4);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        i0 = i0 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        r5 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("number");

        goto label3;
    }

    public static void parsePolicy(org.json.JSONArray, java.util.ArrayList) throws org.json.JSONException
    {
        java.util.ArrayList r1;
        com.rsm.insurance.irl.model.PolicyData r2;
        org.json.JSONObject $r3;
        int i0, $i1;
        java.lang.String $r4, r5;
        org.json.JSONArray $r0;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONArray;

        r1 := @parameter1: java.util.ArrayList;

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if i0 < $i1 goto label2;

        return;

     label2:
        r2 = new com.rsm.insurance.irl.model.PolicyData;

        specialinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void <init>()>();

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("number");

        r5 = $r4;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("null");

        if $z0 == 0 goto label4;

        r5 = " ";

     label3:
        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setNumber(java.lang.String)>(r5);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("active_claims");

        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setActiveClaims(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("address");

        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setAddress(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("building_cover");

        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setBuildingCover(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("cover_type");

        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setCoverType(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("renewal_date");

        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setNextRenuval(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("bonus");

        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setNoClaimsBonus(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("premium");

        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setPremium(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("reg_number");

        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setRegNumber(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("type");

        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setType(java.lang.String)>($r4);

        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("contents_cover");

        virtualinvoke r2.<com.rsm.insurance.irl.model.PolicyData: void setContentsCover(java.lang.String)>($r4);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        i0 = i0 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke $r0.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        r5 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("number");

        goto label3;
    }

    public static java.util.ArrayList policyRenewalService(java.lang.String)
    {
        org.apache.http.HttpEntity $r5;
        com.rsm.insurance.irl.model.JsonData $r6;
        java.lang.Exception $r7;
        java.util.ArrayList r2;
        org.apache.http.HttpResponse $r4;
        java.lang.StringBuilder $r3;
        java.lang.String $r0;
        org.json.JSONArray r1;

        $r0 := @parameter0: java.lang.String;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://rubystar.org/ws/testapp/index.php/JSONService/getRenewPolicies?phone=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r4 = staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: org.apache.http.HttpResponse doPost(java.lang.String)>($r0);

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r0 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r5);

     label2:
        if $r0 == null goto label8;

        r1 = new org.json.JSONArray;

     label3:
        specialinvoke r1.<org.json.JSONArray: void <init>(java.lang.String)>($r0);

        staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: void parsePolicy(org.json.JSONArray,java.util.ArrayList)>(r1, r2);

     label4:
        $r6 = <com.rsm.insurance.irl.data.AppImpl: com.rsm.insurance.irl.model.JsonData jsonData>;

     label5:
        virtualinvoke $r6.<com.rsm.insurance.irl.model.JsonData: void setPolicyRenewals(java.lang.String)>($r0);

     label6:
        return r2;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label8:
        return r2;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.String policyRenewalUpdate(java.lang.String, java.lang.String)
    {
        org.apache.http.HttpEntity $r6;
        java.lang.Exception $r7;
        org.json.JSONObject r2;
        org.apache.http.HttpResponse $r5;
        java.lang.StringBuilder r3, $r4;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        $r4 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://rubystar.org/ws/testapp/index.php/JSONService/renewPolicy?phone=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&number=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: org.apache.http.HttpResponse doPost(java.lang.String)>($r0);

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r0 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r6);

     label2:
        if $r0 == null goto label8;

        r2 = new org.json.JSONObject;

     label3:
        specialinvoke r2.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label4:
        if r2 == null goto label8;

     label5:
        $r0 = virtualinvoke r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("quote");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label6:
        if $z0 != 0 goto label8;

     label7:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Premium is Estimated at\n \u20ac");

        $r0 = virtualinvoke r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("quote");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nReference Number is\n");

        $r0 = virtualinvoke r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("ref_number");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nPlease Note This When Contacting for Final Premium...");

     label8:
        $r0 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label9:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        goto label8;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public static java.util.ArrayList policyService(java.lang.String)
    {
        org.apache.http.HttpEntity $r5;
        com.rsm.insurance.irl.model.JsonData $r6;
        java.lang.Exception $r7;
        java.util.ArrayList r2;
        org.apache.http.HttpResponse $r4;
        java.lang.StringBuilder $r3;
        java.lang.String $r0;
        org.json.JSONArray r1;

        $r0 := @parameter0: java.lang.String;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://rubystar.org/ws/testapp/index.php/JSONService/getPolicy?phone=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r4 = staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: org.apache.http.HttpResponse doPost(java.lang.String)>($r0);

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r0 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r5);

     label2:
        if $r0 == null goto label8;

        r1 = new org.json.JSONArray;

     label3:
        specialinvoke r1.<org.json.JSONArray: void <init>(java.lang.String)>($r0);

        staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: void parsePolicy(org.json.JSONArray,java.util.ArrayList)>(r1, r2);

     label4:
        $r6 = <com.rsm.insurance.irl.data.AppImpl: com.rsm.insurance.irl.model.JsonData jsonData>;

     label5:
        virtualinvoke $r6.<com.rsm.insurance.irl.model.JsonData: void setPolicys(java.lang.String)>($r0);

     label6:
        return r2;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label8:
        return r2;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.String regNewClaimDataService(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r5, $r6;
        org.apache.http.client.ClientProtocolException $r8;
        org.apache.http.HttpEntity $r4;
        java.io.IOException $r9;
        org.apache.http.HttpResponse $r3;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://rubystar.org/ws/testapp/index.php/JSONService/regNewClaimData?claim_id=");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&data=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r3 = staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: org.apache.http.HttpResponse doPost(java.lang.String)>($r0);

        $r4 = interfaceinvoke $r3.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r0 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r4);

     label2:
        return $r0;

     label3:
        $r5 := @caughtexception;

        $r8 = (org.apache.http.client.ClientProtocolException) $r5;

        virtualinvoke $r8.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();

     label4:
        return "";

     label5:
        $r6 := @caughtexception;

        $r9 = (java.io.IOException) $r6;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

        goto label4;

        catch org.apache.http.client.ClientProtocolException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label5;
    }

    public static java.lang.String regNewClaimService(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r6, $r7;
        org.apache.http.client.ClientProtocolException $r9;
        org.apache.http.HttpEntity $r5;
        java.io.IOException $r10;
        org.apache.http.HttpResponse $r4;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r0, $r1, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "utf-8");

     label2:
        $r8 = new java.lang.StringBuilder;

        $r3 = $r8;

     label3:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://rubystar.org/ws/testapp/index.php/JSONService/regNewClaim?phone=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&number=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&info=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: org.apache.http.HttpResponse doPost(java.lang.String)>($r0);

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r0 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r5);

     label4:
        return $r0;

     label5:
        $r6 := @caughtexception;

        $r9 = (org.apache.http.client.ClientProtocolException) $r6;

        virtualinvoke $r9.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();

     label6:
        return "";

     label7:
        $r7 := @caughtexception;

        $r10 = (java.io.IOException) $r7;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

        goto label6;

        catch org.apache.http.client.ClientProtocolException from label1 to label2 with label5;
        catch org.apache.http.client.ClientProtocolException from label3 to label4 with label5;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
    }

    public static java.lang.String renewPolicyService(java.lang.String)
    {
        java.lang.Throwable $r4, $r5;
        org.apache.http.client.ClientProtocolException $r7;
        org.apache.http.HttpEntity $r3;
        java.io.IOException $r8;
        org.apache.http.HttpResponse $r2;
        java.lang.StringBuilder $r1, $r6;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://rubystar.org/ws/testapp/index.php/JSONService/renewPolicy?policy=");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r2 = staticinvoke <com.rsm.insurance.irl.remote.JSONHelper: org.apache.http.HttpResponse doPost(java.lang.String)>($r0);

        $r3 = interfaceinvoke $r2.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r0 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r3);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r7 = (org.apache.http.client.ClientProtocolException) $r4;

        virtualinvoke $r7.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();

     label4:
        return "Error";

     label5:
        $r5 := @caughtexception;

        $r8 = (java.io.IOException) $r5;

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

        goto label4;

        catch org.apache.http.client.ClientProtocolException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label5;
    }

    public static java.lang.String unquote(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label4;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z0 != 0 goto label3;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("]");

        if $z0 != 0 goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label4;

     label3:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label4:
        return r0;
    }

    public static void <clinit>()
    {
        <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String WSURL> = "http://rubystar.org/ws/testapp/index.php/JSONService/";

        <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String RENEWPOLICY> = "getRenewPolicies";

        <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String REGNEWCLAIMDATA> = "regNewClaimData";

        <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String REGNEWCLAIM> = "regNewClaim";

        <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String QUICKQUOTE> = "getQuote";

        <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String POLICY> = "getPolicy";

        <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String ONECLICKRENEW> = "renewPolicy";

        <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String NEWCLAIM> = "setNewClaim";

        <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String DAMAGETYPES> = "getInsuranceTypes";

        <com.rsm.insurance.irl.remote.JSONHelper: java.lang.String CLAIMS> = "getClaims";

        return;
    }
}
