public class com.tencent.open.a.c extends java.lang.Object implements java.lang.Iterable
{
    private java.util.concurrent.ConcurrentLinkedQueue a;
    private java.util.concurrent.atomic.AtomicInteger b;

    public void <init>()
    {
        com.tencent.open.a.c r0;
        java.util.concurrent.atomic.AtomicInteger $r2;
        java.util.concurrent.ConcurrentLinkedQueue $r1;

        r0 := @this: com.tencent.open.a.c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.tencent.open.a.c: java.util.concurrent.ConcurrentLinkedQueue a> = null;

        r0.<com.tencent.open.a.c: java.util.concurrent.atomic.AtomicInteger b> = null;

        $r1 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r1.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<com.tencent.open.a.c: java.util.concurrent.ConcurrentLinkedQueue a> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.tencent.open.a.c: java.util.concurrent.atomic.AtomicInteger b> = $r2;

        return;
    }

    public int a()
    {
        int $i0;
        com.tencent.open.a.c r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: com.tencent.open.a.c;

        $r1 = r0.<com.tencent.open.a.c: java.util.concurrent.atomic.AtomicInteger b>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public int a(java.lang.String)
    {
        java.util.concurrent.atomic.AtomicInteger $r3;
        int $i0;
        com.tencent.open.a.c r0;
        java.lang.String $r1;
        java.util.concurrent.ConcurrentLinkedQueue $r2;

        r0 := @this: com.tencent.open.a.c;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = r0.<com.tencent.open.a.c: java.util.concurrent.ConcurrentLinkedQueue a>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>($r1);

        $r3 = r0.<com.tencent.open.a.c: java.util.concurrent.atomic.AtomicInteger b>;

        $i0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i0);

        return $i0;
    }

    public void a(java.io.Writer, char[]) throws java.io.IOException
    {
        java.util.Iterator $r3;
        com.tencent.open.a.c r0;
        java.io.Writer $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        char[] $r2;
        java.lang.Object $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.tencent.open.a.c;

        $r1 := @parameter0: java.io.Writer;

        $r2 := @parameter1: char[];

        if $r1 == null goto label9;

        if $r2 == null goto label9;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i0 = lengthof $r2;

        $r3 = virtualinvoke r0.<com.tencent.open.a.c: java.util.Iterator iterator()>();

        $i2 = 0;

        $i3 = $i0;

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $i4 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i5 = 0;

     label3:
        if $i4 <= 0 goto label2;

        if $i3 <= $i4 goto label5;

        $i6 = $i4;

     label4:
        $i1 = $i5 + $i6;

        virtualinvoke $r5.<java.lang.String: void getChars(int,int,char[],int)>($i5, $i1, $r2, $i2);

        $i3 = $i3 - $i6;

        $i2 = $i2 + $i6;

        $i4 = $i4 - $i6;

        $i1 = $i6 + $i5;

        if $i3 != 0 goto label8;

        virtualinvoke $r1.<java.io.Writer: void write(char[],int,int)>($r2, 0, $i0);

        $i2 = 0;

        $i3 = $i0;

        $i5 = $i1;

        goto label3;

     label5:
        $i6 = $i3;

        goto label4;

     label6:
        if $i2 <= 0 goto label7;

        virtualinvoke $r1.<java.io.Writer: void write(char[],int,int)>($r2, 0, $i2);

     label7:
        virtualinvoke $r1.<java.io.Writer: void flush()>();

        return;

     label8:
        $i5 = $i1;

        goto label3;

     label9:
        return;
    }

    public void b()
    {
        com.tencent.open.a.c r0;
        java.util.concurrent.atomic.AtomicInteger $r2;
        java.util.concurrent.ConcurrentLinkedQueue $r1;

        r0 := @this: com.tencent.open.a.c;

        $r1 = r0.<com.tencent.open.a.c: java.util.concurrent.ConcurrentLinkedQueue a>;

        virtualinvoke $r1.<java.util.concurrent.ConcurrentLinkedQueue: void clear()>();

        $r2 = r0.<com.tencent.open.a.c: java.util.concurrent.atomic.AtomicInteger b>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        return;
    }

    public java.util.Iterator iterator()
    {
        com.tencent.open.a.c r0;
        java.util.Iterator $r1;
        java.util.concurrent.ConcurrentLinkedQueue $r2;

        r0 := @this: com.tencent.open.a.c;

        $r2 = r0.<com.tencent.open.a.c: java.util.concurrent.ConcurrentLinkedQueue a>;

        $r1 = virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

        return $r1;
    }
}
