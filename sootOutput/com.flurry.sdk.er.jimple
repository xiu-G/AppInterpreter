public class com.flurry.sdk.er extends java.security.MessageDigest
{
    private java.util.zip.CRC32 a;

    public void <init>()
    {
        java.util.zip.CRC32 $r1;
        com.flurry.sdk.er r0;

        r0 := @this: com.flurry.sdk.er;

        specialinvoke r0.<java.security.MessageDigest: void <init>(java.lang.String)>("CRC");

        $r1 = new java.util.zip.CRC32;

        specialinvoke $r1.<java.util.zip.CRC32: void <init>()>();

        r0.<com.flurry.sdk.er: java.util.zip.CRC32 a> = $r1;

        return;
    }

    public byte[] a()
    {
        byte[] $r1;
        com.flurry.sdk.er r0;

        r0 := @this: com.flurry.sdk.er;

        $r1 = virtualinvoke r0.<com.flurry.sdk.er: byte[] engineDigest()>();

        return $r1;
    }

    public int b()
    {
        byte[] $r1;
        com.flurry.sdk.er r0;
        int $i0;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.flurry.sdk.er;

        $r1 = virtualinvoke r0.<com.flurry.sdk.er: byte[] engineDigest()>();

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r1);

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt()>();

        return $i0;
    }

    protected byte[] engineDigest()
    {
        byte[] $r2;
        byte $b3;
        com.flurry.sdk.er r0;
        int $i2;
        java.util.zip.CRC32 $r1;
        long $l0, $l1;

        r0 := @this: com.flurry.sdk.er;

        $r1 = r0.<com.flurry.sdk.er: java.util.zip.CRC32 a>;

        $l0 = virtualinvoke $r1.<java.util.zip.CRC32: long getValue()>();

        $r2 = newarray (byte)[4];

        $l1 = -16777216L & $l0;

        $l1 = $l1 >> 24;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        $r2[0] = $b3;

        $l1 = 16711680L & $l0;

        $l1 = $l1 >> 16;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        $r2[1] = $b3;

        $l1 = 65280L & $l0;

        $l1 = $l1 >> 8;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        $r2[2] = $b3;

        $l0 = $l0 & 255L;

        $l0 = $l0 >> 0;

        $i2 = (int) $l0;

        $b3 = (byte) $i2;

        $r2[3] = $b3;

        return $r2;
    }

    protected void engineReset()
    {
        java.util.zip.CRC32 $r1;
        com.flurry.sdk.er r0;

        r0 := @this: com.flurry.sdk.er;

        $r1 = r0.<com.flurry.sdk.er: java.util.zip.CRC32 a>;

        virtualinvoke $r1.<java.util.zip.CRC32: void reset()>();

        return;
    }

    protected void engineUpdate(byte)
    {
        byte $b0;
        com.flurry.sdk.er r0;
        int $i1;
        java.util.zip.CRC32 $r1;

        r0 := @this: com.flurry.sdk.er;

        $b0 := @parameter0: byte;

        $r1 = r0.<com.flurry.sdk.er: java.util.zip.CRC32 a>;

        $i1 = (int) $b0;

        virtualinvoke $r1.<java.util.zip.CRC32: void update(int)>($i1);

        return;
    }

    protected void engineUpdate(byte[], int, int)
    {
        byte[] $r1;
        com.flurry.sdk.er r0;
        int $i0, $i1;
        java.util.zip.CRC32 $r2;

        r0 := @this: com.flurry.sdk.er;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.flurry.sdk.er: java.util.zip.CRC32 a>;

        virtualinvoke $r2.<java.util.zip.CRC32: void update(byte[],int,int)>($r1, $i0, $i1);

        return;
    }
}
