public class io.vov.utils.StringUtils extends java.lang.Object
{

    public void <init>()
    {
        io.vov.utils.StringUtils r0;

        r0 := @this: io.vov.utils.StringUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int convertToInt(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.Throwable r1;
        char $c2;
        java.lang.NumberFormatException $r2;
        int i0, $i1, $i3;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        i0 = 0;

     label01:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i0 < $i1 goto label07;

     label02:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label03:
        if $i1 > 0 goto label08;

     label04:
        if $i1 <= i0 goto label10;

     label05:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label06:
        return i0;

     label07:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z0 != 0 goto label02;

        i0 = i0 + 1;

        goto label01;

     label08:
        $i3 = $i1 + -1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z0 != 0 goto label04;

        $i1 = $i1 + -1;

        goto label03;

     label09:
        r1 := @caughtexception;

        staticinvoke <io.vov.utils.Log: void e(java.lang.String,java.lang.Throwable)>("convertToInt", r1);

        $r2 = new java.lang.NumberFormatException;

        specialinvoke $r2.<java.lang.NumberFormatException: void <init>()>();

        throw $r2;

     label10:
        $r2 = new java.lang.NumberFormatException;

        specialinvoke $r2.<java.lang.NumberFormatException: void <init>()>();

        throw $r2;

        catch java.lang.NumberFormatException from label05 to label06 with label09;
    }

    public static java.lang.String fixLastSlash(java.lang.String)
    {
        int $i0;
        char $c1;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label2;

        $r0 = "/";

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 2 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        if $i0 != 47 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r0;

     label2:
        $r2 = new java.lang.StringBuilder;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label3:
        return $r0;
    }

    public static java.lang.String generateTime(long)
    {
        java.lang.Object[] $r0;
        int i1, i2, i3;
        long $l0;
        java.lang.String $r2;
        java.lang.Integer $r1;

        $l0 := @parameter0: long;

        $l0 = $l0 / 1000L;

        i1 = (int) $l0;

        i3 = i1 % 60;

        i2 = i1 / 60;

        i2 = i2 % 60;

        i1 = i1 / 3600;

        if i1 <= 0 goto label1;

        $r0 = newarray (java.lang.Object)[3];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r0[0] = $r1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r0[1] = $r1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r0[2] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d:%02d:%02d", $r0);

        return $r2;

     label1:
        $r0 = newarray (java.lang.Object)[2];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r0[0] = $r1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r0[1] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d:%02d", $r0);

        return $r2;
    }

    public static boolean isBlank(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }
}
