public abstract enum class com.google.mygson.FieldNamingPolicy extends java.lang.Enum implements com.google.mygson.FieldNamingStrategy
{
    private static final com.google.mygson.FieldNamingPolicy[] $VALUES;
    public static final enum com.google.mygson.FieldNamingPolicy IDENTITY;
    public static final enum com.google.mygson.FieldNamingPolicy LOWER_CASE_WITH_DASHES;
    public static final enum com.google.mygson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES;
    public static final enum com.google.mygson.FieldNamingPolicy UPPER_CAMEL_CASE;
    public static final enum com.google.mygson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES;

    static void <clinit>()
    {
        com.google.mygson.FieldNamingPolicy$1 $r0;
        com.google.mygson.FieldNamingPolicy[] $r5;
        com.google.mygson.FieldNamingPolicy$2 $r1;
        com.google.mygson.FieldNamingPolicy $r6;
        com.google.mygson.FieldNamingPolicy$3 $r2;
        com.google.mygson.FieldNamingPolicy$4 $r3;
        com.google.mygson.FieldNamingPolicy$5 $r4;

        $r0 = new com.google.mygson.FieldNamingPolicy$1;

        specialinvoke $r0.<com.google.mygson.FieldNamingPolicy$1: void <init>(java.lang.String,int)>("IDENTITY", 0);

        <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy IDENTITY> = $r0;

        $r1 = new com.google.mygson.FieldNamingPolicy$2;

        specialinvoke $r1.<com.google.mygson.FieldNamingPolicy$2: void <init>(java.lang.String,int)>("UPPER_CAMEL_CASE", 1);

        <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy UPPER_CAMEL_CASE> = $r1;

        $r2 = new com.google.mygson.FieldNamingPolicy$3;

        specialinvoke $r2.<com.google.mygson.FieldNamingPolicy$3: void <init>(java.lang.String,int)>("UPPER_CAMEL_CASE_WITH_SPACES", 2);

        <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES> = $r2;

        $r3 = new com.google.mygson.FieldNamingPolicy$4;

        specialinvoke $r3.<com.google.mygson.FieldNamingPolicy$4: void <init>(java.lang.String,int)>("LOWER_CASE_WITH_UNDERSCORES", 3);

        <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES> = $r3;

        $r4 = new com.google.mygson.FieldNamingPolicy$5;

        specialinvoke $r4.<com.google.mygson.FieldNamingPolicy$5: void <init>(java.lang.String,int)>("LOWER_CASE_WITH_DASHES", 4);

        <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy LOWER_CASE_WITH_DASHES> = $r4;

        $r5 = newarray (com.google.mygson.FieldNamingPolicy)[5];

        $r6 = <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy IDENTITY>;

        $r5[0] = $r6;

        $r6 = <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy UPPER_CAMEL_CASE>;

        $r5[1] = $r6;

        $r6 = <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES>;

        $r5[2] = $r6;

        $r6 = <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES>;

        $r5[3] = $r6;

        $r6 = <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy LOWER_CASE_WITH_DASHES>;

        $r5[4] = $r6;

        <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy[] $VALUES> = $r5;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        com.google.mygson.FieldNamingPolicy r0;
        java.lang.String $r1;

        r0 := @this: com.google.mygson.FieldNamingPolicy;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    void <init>(java.lang.String, int, com.google.mygson.FieldNamingPolicy$1)
    {
        com.google.mygson.FieldNamingPolicy$1 $r2;
        com.google.mygson.FieldNamingPolicy r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.google.mygson.FieldNamingPolicy;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: com.google.mygson.FieldNamingPolicy$1;

        specialinvoke r0.<com.google.mygson.FieldNamingPolicy: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    static java.lang.String access$100(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.google.mygson.FieldNamingPolicy: java.lang.String upperCaseFirstLetter(java.lang.String)>($r0);

        return $r0;
    }

    static java.lang.String access$200(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <com.google.mygson.FieldNamingPolicy: java.lang.String separateCamelCase(java.lang.String,java.lang.String)>($r0, $r1);

        return $r0;
    }

    private static java.lang.String modifyString(char, java.lang.String, int)
    {
        int $i1, $i2;
        char $c0;
        java.lang.StringBuilder $r1;
        java.lang.String $r0;

        $c0 := @parameter0: char;

        $r0 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label1:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        return $r0;
    }

    private static java.lang.String separateCamelCase(java.lang.String, java.lang.String)
    {
        int i0, $i1;
        java.lang.StringBuilder r2;
        char $c2;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i0 >= $i1 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c2);

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i1 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        i0 = i0 + 1;

        goto label1;

     label3:
        $r0 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    private static java.lang.String upperCaseFirstLetter(java.lang.String)
    {
        int i0, $i2;
        java.lang.StringBuilder r0, $r2;
        char $c1;
        java.lang.String r1;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        r0 = $r2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i0 = 0;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i2 + -1;

        if i0 >= $i2 goto label2;

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c1);

        if $z0 == 0 goto label3;

     label2:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 != $i2 goto label4;

        r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return r1;

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        i0 = i0 + 1;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        goto label1;

     label4:
        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c1);

        if $z0 != 0 goto label5;

        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        i0 = i0 + 1;

        r1 = staticinvoke <com.google.mygson.FieldNamingPolicy: java.lang.String modifyString(char,java.lang.String,int)>($c1, r1, i0);

        r0 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return r1;
    }

    public static com.google.mygson.FieldNamingPolicy valueOf(java.lang.String)
    {
        java.lang.String $r0;
        com.google.mygson.FieldNamingPolicy $r2;
        java.lang.Enum $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/mygson/FieldNamingPolicy;", $r0);

        $r2 = (com.google.mygson.FieldNamingPolicy) $r1;

        return $r2;
    }

    public static com.google.mygson.FieldNamingPolicy[] values()
    {
        java.lang.Object $r0;
        com.google.mygson.FieldNamingPolicy[] $r1;

        $r1 = <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.google.mygson.FieldNamingPolicy[]) $r0;

        return $r1;
    }
}
