public class cn.trinea.android.common.util.HttpUtils extends java.lang.Object
{
    public static final java.lang.String EQUAL_SIGN;
    private static final java.text.SimpleDateFormat GMT_FORMAT;
    public static final java.lang.String PARAMETERS_SEPARATOR;
    public static final java.lang.String PATHS_SEPARATOR;
    public static final java.lang.String URL_AND_PARA_SEPARATOR;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;
        java.util.Locale $r1;

        <cn.trinea.android.common.util.HttpUtils: java.lang.String URL_AND_PARA_SEPARATOR> = "?";

        <cn.trinea.android.common.util.HttpUtils: java.lang.String PATHS_SEPARATOR> = "/";

        <cn.trinea.android.common.util.HttpUtils: java.lang.String PARAMETERS_SEPARATOR> = "&";

        <cn.trinea.android.common.util.HttpUtils: java.lang.String EQUAL_SIGN> = "=";

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("EEE, d MMM yyyy HH:mm:ss z", $r1);

        <cn.trinea.android.common.util.HttpUtils: java.text.SimpleDateFormat GMT_FORMAT> = $r0;

        return;
    }

    public void <init>()
    {
        cn.trinea.android.common.util.HttpUtils r0;

        r0 := @this: cn.trinea.android.common.util.HttpUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String appendParaToUrl(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r1, $r2;
        boolean $z0;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("?");

        if $z0 != 0 goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

     label2:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        goto label2;
    }

    public static java.lang.String getUrlWithParas(java.lang.String, java.util.Map)
    {
        java.util.Map $r0;
        java.lang.StringBuilder $r2, $r3;
        java.lang.String $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.util.Map;

        $r2 = new java.lang.StringBuilder;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r1 = "";

     label1:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r1 = staticinvoke <cn.trinea.android.common.util.HttpUtils: java.lang.String joinParas(java.util.Map)>($r0);

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label2:
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String getUrlWithValueEncodeParas(java.lang.String, java.util.Map)
    {
        java.util.Map $r0;
        java.lang.StringBuilder $r2, $r3;
        java.lang.String $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.util.Map;

        $r2 = new java.lang.StringBuilder;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r1 = "";

     label1:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r1 = staticinvoke <cn.trinea.android.common.util.HttpUtils: java.lang.String joinParasWithEncodedValue(java.util.Map)>($r0);

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label2:
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static cn.trinea.android.common.entity.HttpResponse httpGet(cn.trinea.android.common.entity.HttpRequest)
    {
        java.net.HttpURLConnection $r1, $r6;
        java.lang.Throwable $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        java.net.URL $r2, $r23;
        cn.trinea.android.common.entity.HttpRequest $r0;
        java.net.URLConnection $r5;
        java.lang.String $r3;
        java.net.MalformedURLException $r28;
        java.io.IOException $r27;
        java.io.InputStreamReader $r8, $r25;
        cn.trinea.android.common.entity.HttpResponse $r4, $r24;
        java.lang.StringBuilder $r10, $r11;
        java.io.BufferedReader $r7, $r26;
        java.io.InputStream $r9;

        $r0 := @parameter0: cn.trinea.android.common.entity.HttpRequest;

        $r1 = null;

        if $r0 != null goto label01;

        return null;

     label01:
        $r23 = new java.net.URL;

     label02:
        $r2 = $r23;

     label03:
        $r3 = virtualinvoke $r0.<cn.trinea.android.common.entity.HttpRequest: java.lang.String getUrl()>();

        specialinvoke $r23.<java.net.URL: void <init>(java.lang.String)>($r3);

     label04:
        $r24 = new cn.trinea.android.common.entity.HttpResponse;

     label05:
        $r4 = $r24;

     label06:
        $r3 = virtualinvoke $r0.<cn.trinea.android.common.entity.HttpRequest: java.lang.String getUrl()>();

        specialinvoke $r24.<cn.trinea.android.common.entity.HttpResponse: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

     label07:
        $r6 = (java.net.HttpURLConnection) $r5;

     label08:
        staticinvoke <cn.trinea.android.common.util.HttpUtils: void setURLConnection(cn.trinea.android.common.entity.HttpRequest,java.net.HttpURLConnection)>($r0, $r6);

     label09:
        $r26 = new java.io.BufferedReader;

     label10:
        $r7 = $r26;

     label11:
        $r25 = new java.io.InputStreamReader;

     label12:
        $r8 = $r25;

     label13:
        $r9 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r25.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

        specialinvoke $r26.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

     label14:
        $r11 = new java.lang.StringBuilder;

     label15:
        $r10 = $r11;

     label16:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

     label17:
        $r3 = virtualinvoke $r7.<java.io.BufferedReader: java.lang.String readLine()>();

     label18:
        if $r3 != null goto label23;

     label19:
        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<cn.trinea.android.common.entity.HttpResponse: void setResponseBody(java.lang.String)>($r3);

        staticinvoke <cn.trinea.android.common.util.HttpUtils: void setHttpResponse(java.net.HttpURLConnection,cn.trinea.android.common.entity.HttpResponse)>($r6, $r4);

     label20:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label21:
        if $r6 == null goto label22;

        virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>();

     label22:
        return $r4;

     label23:
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label24:
        goto label17;

     label25:
        $r12 := @caughtexception;

        $r1 = $r6;

        $r13 = $r12;

     label26:
        $r27 = (java.io.IOException) $r13;

     label27:
        virtualinvoke $r27.<java.io.IOException: void printStackTrace()>();

     label28:
        if $r7 == null goto label30;

     label29:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label30:
        if $r1 == null goto label31;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

     label31:
        return null;

     label32:
        $r14 := @caughtexception;

        $r27 = (java.io.IOException) $r14;

        virtualinvoke $r27.<java.io.IOException: void printStackTrace()>();

        goto label21;

     label33:
        $r15 := @caughtexception;

        $r1 = null;

        $r7 = null;

     label34:
        $r28 = (java.net.MalformedURLException) $r15;

        virtualinvoke $r28.<java.net.MalformedURLException: void printStackTrace()>();

     label35:
        if $r7 == null goto label37;

     label36:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label37:
        if $r1 == null goto label31;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

        goto label31;

     label38:
        $r16 := @caughtexception;

        $r27 = (java.io.IOException) $r16;

        virtualinvoke $r27.<java.io.IOException: void printStackTrace()>();

        goto label37;

     label39:
        $r17 := @caughtexception;

        $r7 = null;

     label40:
        if $r7 == null goto label42;

     label41:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label42:
        if $r1 == null goto label43;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

     label43:
        throw $r17;

     label44:
        $r18 := @caughtexception;

        $r27 = (java.io.IOException) $r18;

        virtualinvoke $r27.<java.io.IOException: void printStackTrace()>();

        goto label42;

     label45:
        $r19 := @caughtexception;

        $r27 = (java.io.IOException) $r19;

        virtualinvoke $r27.<java.io.IOException: void printStackTrace()>();

        goto label30;

     label46:
        $r20 := @caughtexception;

        $r7 = null;

        $r1 = $r6;

        $r17 = $r20;

        goto label40;

     label47:
        $r21 := @caughtexception;

        $r1 = $r6;

        $r17 = $r21;

        goto label40;

     label48:
        $r17 := @caughtexception;

        goto label40;

     label49:
        $r15 := @caughtexception;

        goto label34;

     label50:
        $r13 := @caughtexception;

        $r1 = null;

        $r7 = null;

        goto label26;

     label51:
        $r22 := @caughtexception;

        $r7 = null;

        $r13 = $r22;

        $r1 = $r6;

        goto label26;

        catch java.net.MalformedURLException from label03 to label04 with label33;
        catch java.lang.Throwable from label01 to label02 with label39;
        catch java.lang.Throwable from label03 to label04 with label39;
        catch java.io.IOException from label06 to label07 with label50;
        catch java.lang.Throwable from label04 to label05 with label39;
        catch java.lang.Throwable from label06 to label08 with label39;
        catch java.io.IOException from label08 to label09 with label51;
        catch java.io.IOException from label13 to label14 with label51;
        catch java.lang.Throwable from label08 to label10 with label46;
        catch java.lang.Throwable from label11 to label12 with label46;
        catch java.lang.Throwable from label13 to label14 with label46;
        catch java.io.IOException from label16 to label18 with label25;
        catch java.io.IOException from label19 to label20 with label25;
        catch java.lang.Throwable from label14 to label15 with label47;
        catch java.lang.Throwable from label16 to label18 with label47;
        catch java.lang.Throwable from label19 to label20 with label47;
        catch java.io.IOException from label20 to label21 with label32;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.lang.Throwable from label23 to label24 with label47;
        catch java.net.MalformedURLException from label27 to label28 with label49;
        catch java.lang.Throwable from label26 to label28 with label48;
        catch java.io.IOException from label29 to label30 with label45;
        catch java.lang.Throwable from label34 to label35 with label48;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.io.IOException from label41 to label42 with label44;
    }

    public static cn.trinea.android.common.entity.HttpResponse httpGet(java.lang.String)
    {
        cn.trinea.android.common.entity.HttpResponse $r1;
        java.lang.String $r0;
        cn.trinea.android.common.entity.HttpRequest $r2;

        $r0 := @parameter0: java.lang.String;

        $r2 = new cn.trinea.android.common.entity.HttpRequest;

        specialinvoke $r2.<cn.trinea.android.common.entity.HttpRequest: void <init>(java.lang.String)>($r0);

        $r1 = staticinvoke <cn.trinea.android.common.util.HttpUtils: cn.trinea.android.common.entity.HttpResponse httpGet(cn.trinea.android.common.entity.HttpRequest)>($r2);

        return $r1;
    }

    public static void httpGet(cn.trinea.android.common.entity.HttpRequest, cn.trinea.android.common.util.HttpUtils$HttpListener)
    {
        cn.trinea.android.common.entity.HttpRequest[] $r3;
        cn.trinea.android.common.entity.HttpRequest $r0;
        cn.trinea.android.common.util.HttpUtils$HttpRequestAsyncTask $r2;
        cn.trinea.android.common.util.HttpUtils$HttpListener $r1;

        $r0 := @parameter0: cn.trinea.android.common.entity.HttpRequest;

        $r1 := @parameter1: cn.trinea.android.common.util.HttpUtils$HttpListener;

        $r2 = new cn.trinea.android.common.util.HttpUtils$HttpRequestAsyncTask;

        specialinvoke $r2.<cn.trinea.android.common.util.HttpUtils$HttpRequestAsyncTask: void <init>(cn.trinea.android.common.util.HttpUtils$HttpListener)>($r1);

        $r3 = newarray (cn.trinea.android.common.entity.HttpRequest)[1];

        $r3[0] = $r0;

        virtualinvoke $r2.<cn.trinea.android.common.util.HttpUtils$HttpRequestAsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        return;
    }

    public static void httpGet(java.lang.String, cn.trinea.android.common.util.HttpUtils$HttpListener)
    {
        cn.trinea.android.common.util.HttpUtils$HttpListener $r1;
        java.lang.String[] $r3;
        java.lang.String $r0;
        cn.trinea.android.common.util.HttpUtils$HttpStringAsyncTask $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: cn.trinea.android.common.util.HttpUtils$HttpListener;

        $r2 = new cn.trinea.android.common.util.HttpUtils$HttpStringAsyncTask;

        specialinvoke $r2.<cn.trinea.android.common.util.HttpUtils$HttpStringAsyncTask: void <init>(cn.trinea.android.common.util.HttpUtils$HttpListener)>($r1);

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r0;

        virtualinvoke $r2.<cn.trinea.android.common.util.HttpUtils$HttpStringAsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        return;
    }

    public static java.lang.String httpGetString(cn.trinea.android.common.entity.HttpRequest)
    {
        cn.trinea.android.common.entity.HttpResponse $r1;
        java.lang.String $r2;
        cn.trinea.android.common.entity.HttpRequest $r0;

        $r0 := @parameter0: cn.trinea.android.common.entity.HttpRequest;

        $r1 = staticinvoke <cn.trinea.android.common.util.HttpUtils: cn.trinea.android.common.entity.HttpResponse httpGet(cn.trinea.android.common.entity.HttpRequest)>($r0);

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<cn.trinea.android.common.entity.HttpResponse: java.lang.String getResponseBody()>();

        return $r2;
    }

    public static java.lang.String httpGetString(java.lang.String)
    {
        cn.trinea.android.common.entity.HttpResponse $r2;
        java.lang.String $r0;
        cn.trinea.android.common.entity.HttpRequest $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new cn.trinea.android.common.entity.HttpRequest;

        specialinvoke $r1.<cn.trinea.android.common.entity.HttpRequest: void <init>(java.lang.String)>($r0);

        $r2 = staticinvoke <cn.trinea.android.common.util.HttpUtils: cn.trinea.android.common.entity.HttpResponse httpGet(cn.trinea.android.common.entity.HttpRequest)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r0 = virtualinvoke $r2.<cn.trinea.android.common.entity.HttpResponse: java.lang.String getResponseBody()>();

        return $r0;
    }

    public static cn.trinea.android.common.entity.HttpResponse httpPost(cn.trinea.android.common.entity.HttpRequest)
    {
        java.net.HttpURLConnection $r1, $r6;
        byte[] $r8;
        java.net.URL $r2, $r25;
        cn.trinea.android.common.entity.HttpRequest $r0;
        boolean $z0;
        cn.trinea.android.common.entity.HttpResponse $r4, $r26;
        java.lang.StringBuilder $r12, $r13;
        java.lang.Throwable $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        java.net.URLConnection $r5;
        java.lang.String $r3;
        java.io.OutputStream $r7;
        java.net.MalformedURLException $r30;
        java.io.IOException $r29;
        java.io.InputStreamReader $r10, $r27;
        java.io.BufferedReader $r9, $r28;
        java.io.InputStream $r11;

        $r0 := @parameter0: cn.trinea.android.common.entity.HttpRequest;

        $r1 = null;

        if $r0 != null goto label01;

        return null;

     label01:
        $r25 = new java.net.URL;

     label02:
        $r2 = $r25;

     label03:
        $r3 = virtualinvoke $r0.<cn.trinea.android.common.entity.HttpRequest: java.lang.String getUrl()>();

        specialinvoke $r25.<java.net.URL: void <init>(java.lang.String)>($r3);

     label04:
        $r26 = new cn.trinea.android.common.entity.HttpResponse;

     label05:
        $r4 = $r26;

     label06:
        $r3 = virtualinvoke $r0.<cn.trinea.android.common.entity.HttpRequest: java.lang.String getUrl()>();

        specialinvoke $r26.<cn.trinea.android.common.entity.HttpResponse: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

     label07:
        $r6 = (java.net.HttpURLConnection) $r5;

     label08:
        staticinvoke <cn.trinea.android.common.util.HttpUtils: void setURLConnection(cn.trinea.android.common.entity.HttpRequest,java.net.HttpURLConnection)>($r0, $r6);

        virtualinvoke $r6.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke $r6.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r3 = virtualinvoke $r0.<cn.trinea.android.common.entity.HttpRequest: java.lang.String getParas()>();

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r3);

     label09:
        if $z0 != 0 goto label11;

     label10:
        $r7 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r8 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r8);

     label11:
        $r28 = new java.io.BufferedReader;

     label12:
        $r9 = $r28;

     label13:
        $r27 = new java.io.InputStreamReader;

     label14:
        $r10 = $r27;

     label15:
        $r11 = virtualinvoke $r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r27.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11);

        specialinvoke $r28.<java.io.BufferedReader: void <init>(java.io.Reader)>($r10);

     label16:
        $r13 = new java.lang.StringBuilder;

     label17:
        $r12 = $r13;

     label18:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

     label19:
        $r3 = virtualinvoke $r9.<java.io.BufferedReader: java.lang.String readLine()>();

     label20:
        if $r3 != null goto label25;

     label21:
        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<cn.trinea.android.common.entity.HttpResponse: void setResponseBody(java.lang.String)>($r3);

        staticinvoke <cn.trinea.android.common.util.HttpUtils: void setHttpResponse(java.net.HttpURLConnection,cn.trinea.android.common.entity.HttpResponse)>($r6, $r4);

     label22:
        virtualinvoke $r9.<java.io.BufferedReader: void close()>();

     label23:
        if $r6 == null goto label24;

        virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>();

     label24:
        return $r4;

     label25:
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label26:
        goto label19;

     label27:
        $r14 := @caughtexception;

        $r1 = $r6;

        $r15 = $r14;

     label28:
        $r29 = (java.io.IOException) $r15;

     label29:
        virtualinvoke $r29.<java.io.IOException: void printStackTrace()>();

     label30:
        if $r9 == null goto label32;

     label31:
        virtualinvoke $r9.<java.io.BufferedReader: void close()>();

     label32:
        if $r1 == null goto label33;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

     label33:
        return null;

     label34:
        $r16 := @caughtexception;

        $r29 = (java.io.IOException) $r16;

        virtualinvoke $r29.<java.io.IOException: void printStackTrace()>();

        goto label23;

     label35:
        $r17 := @caughtexception;

        $r1 = null;

        $r9 = null;

     label36:
        $r30 = (java.net.MalformedURLException) $r17;

        virtualinvoke $r30.<java.net.MalformedURLException: void printStackTrace()>();

     label37:
        if $r9 == null goto label39;

     label38:
        virtualinvoke $r9.<java.io.BufferedReader: void close()>();

     label39:
        if $r1 == null goto label33;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

        goto label33;

     label40:
        $r18 := @caughtexception;

        $r29 = (java.io.IOException) $r18;

        virtualinvoke $r29.<java.io.IOException: void printStackTrace()>();

        goto label39;

     label41:
        $r19 := @caughtexception;

        $r9 = null;

     label42:
        if $r9 == null goto label44;

     label43:
        virtualinvoke $r9.<java.io.BufferedReader: void close()>();

     label44:
        if $r1 == null goto label45;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

     label45:
        throw $r19;

     label46:
        $r20 := @caughtexception;

        $r29 = (java.io.IOException) $r20;

        virtualinvoke $r29.<java.io.IOException: void printStackTrace()>();

        goto label44;

     label47:
        $r21 := @caughtexception;

        $r29 = (java.io.IOException) $r21;

        virtualinvoke $r29.<java.io.IOException: void printStackTrace()>();

        goto label32;

     label48:
        $r22 := @caughtexception;

        $r9 = null;

        $r1 = $r6;

        $r19 = $r22;

        goto label42;

     label49:
        $r23 := @caughtexception;

        $r1 = $r6;

        $r19 = $r23;

        goto label42;

     label50:
        $r19 := @caughtexception;

        goto label42;

     label51:
        $r17 := @caughtexception;

        goto label36;

     label52:
        $r15 := @caughtexception;

        $r1 = null;

        $r9 = null;

        goto label28;

     label53:
        $r24 := @caughtexception;

        $r9 = null;

        $r15 = $r24;

        $r1 = $r6;

        goto label28;

        catch java.net.MalformedURLException from label03 to label04 with label35;
        catch java.lang.Throwable from label01 to label02 with label41;
        catch java.lang.Throwable from label03 to label04 with label41;
        catch java.io.IOException from label06 to label07 with label52;
        catch java.lang.Throwable from label04 to label05 with label41;
        catch java.lang.Throwable from label06 to label08 with label41;
        catch java.io.IOException from label08 to label09 with label53;
        catch java.io.IOException from label10 to label11 with label53;
        catch java.io.IOException from label15 to label16 with label53;
        catch java.lang.Throwable from label08 to label09 with label48;
        catch java.lang.Throwable from label10 to label12 with label48;
        catch java.lang.Throwable from label13 to label14 with label48;
        catch java.lang.Throwable from label15 to label16 with label48;
        catch java.io.IOException from label18 to label20 with label27;
        catch java.io.IOException from label21 to label22 with label27;
        catch java.lang.Throwable from label16 to label17 with label49;
        catch java.lang.Throwable from label18 to label20 with label49;
        catch java.lang.Throwable from label21 to label22 with label49;
        catch java.io.IOException from label22 to label23 with label34;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.lang.Throwable from label25 to label26 with label49;
        catch java.net.MalformedURLException from label29 to label30 with label51;
        catch java.lang.Throwable from label28 to label30 with label50;
        catch java.io.IOException from label31 to label32 with label47;
        catch java.lang.Throwable from label36 to label37 with label50;
        catch java.io.IOException from label38 to label39 with label40;
        catch java.io.IOException from label43 to label44 with label46;
    }

    public static cn.trinea.android.common.entity.HttpResponse httpPost(java.lang.String)
    {
        cn.trinea.android.common.entity.HttpResponse $r1;
        java.lang.String $r0;
        cn.trinea.android.common.entity.HttpRequest $r2;

        $r0 := @parameter0: java.lang.String;

        $r2 = new cn.trinea.android.common.entity.HttpRequest;

        specialinvoke $r2.<cn.trinea.android.common.entity.HttpRequest: void <init>(java.lang.String)>($r0);

        $r1 = staticinvoke <cn.trinea.android.common.util.HttpUtils: cn.trinea.android.common.entity.HttpResponse httpPost(cn.trinea.android.common.entity.HttpRequest)>($r2);

        return $r1;
    }

    public static java.lang.String httpPostString(java.lang.String)
    {
        cn.trinea.android.common.entity.HttpResponse $r2;
        java.lang.String $r0;
        cn.trinea.android.common.entity.HttpRequest $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new cn.trinea.android.common.entity.HttpRequest;

        specialinvoke $r1.<cn.trinea.android.common.entity.HttpRequest: void <init>(java.lang.String)>($r0);

        $r2 = staticinvoke <cn.trinea.android.common.util.HttpUtils: cn.trinea.android.common.entity.HttpResponse httpPost(cn.trinea.android.common.entity.HttpRequest)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r0 = virtualinvoke $r2.<cn.trinea.android.common.entity.HttpResponse: java.lang.String getResponseBody()>();

        return $r0;
    }

    public static java.lang.String httpPostString(java.lang.String, java.util.Map)
    {
        cn.trinea.android.common.entity.HttpResponse $r3;
        cn.trinea.android.common.entity.HttpRequest $r2;
        java.util.Map $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        $r2 = new cn.trinea.android.common.entity.HttpRequest;

        specialinvoke $r2.<cn.trinea.android.common.entity.HttpRequest: void <init>(java.lang.String,java.util.Map)>($r0, $r1);

        $r3 = staticinvoke <cn.trinea.android.common.util.HttpUtils: cn.trinea.android.common.entity.HttpResponse httpPost(cn.trinea.android.common.entity.HttpRequest)>($r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r0 = virtualinvoke $r3.<cn.trinea.android.common.entity.HttpResponse: java.lang.String getResponseBody()>();

        return $r0;
    }

    public static java.lang.String joinParas(java.util.Map)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map $r0;
        int $i0;
        java.lang.StringBuilder $r1, $r7;
        java.lang.Object $r5;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        if $r0 == null goto label1;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label4:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.lang.String) $r5;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        goto label3;
    }

    public static java.lang.String joinParasWithEncodedValue(java.util.Map)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.lang.Exception $r8;
        java.util.Map $r0;
        int $i0;
        java.lang.StringBuilder $r1, $r7;
        java.lang.Object $r5;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        if $r0 == null goto label3;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 <= 0 goto label3;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

     label2:
        if $z0 != 0 goto label4;

     label3:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label4:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.lang.String) $r5;

        $r4 = staticinvoke <cn.trinea.android.common.util.StringUtils: java.lang.String utf8Encode(java.lang.String)>($r4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

     label5:
        if $z0 == 0 goto label1;

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label7:
        goto label1;

     label8:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        goto label3;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static long parseGmtTime(java.lang.String)
    {
        java.util.Date $r2;
        java.text.SimpleDateFormat $r1;
        long $l0;
        java.lang.String $r0;
        java.lang.Exception $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = <cn.trinea.android.common.util.HttpUtils: java.text.SimpleDateFormat GMT_FORMAT>;

     label1:
        $r2 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return -1L;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void setHttpResponse(java.net.HttpURLConnection, cn.trinea.android.common.entity.HttpResponse)
    {
        java.net.HttpURLConnection $r0;
        java.lang.Throwable $r3;
        cn.trinea.android.common.entity.HttpResponse $r1;
        int $i0;
        long $l1;
        java.lang.String $r2;

        $r0 := @parameter0: java.net.HttpURLConnection;

        $r1 := @parameter1: cn.trinea.android.common.entity.HttpResponse;

        if $r1 == null goto label4;

        if $r0 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r0.<java.net.HttpURLConnection: int getResponseCode()>();

        virtualinvoke $r1.<cn.trinea.android.common.entity.HttpResponse: void setResponseCode(int)>($i0);

     label2:
        $r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Expires");

        virtualinvoke $r1.<cn.trinea.android.common.entity.HttpResponse: void setResponseHeader(java.lang.String,java.lang.String)>("expires", $r2);

        $r2 = virtualinvoke $r0.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Cache-Control");

        virtualinvoke $r1.<cn.trinea.android.common.entity.HttpResponse: void setResponseHeader(java.lang.String,java.lang.String)>("cache-control", $r2);

        $l1 = virtualinvoke $r1.<cn.trinea.android.common.entity.HttpResponse: long getExpiresInMillis()>();

        virtualinvoke $r1.<cn.trinea.android.common.entity.HttpResponse: void setExpiredTime(long)>($l1);

        return;

     label3:
        $r3 := @caughtexception;

        $i0 = -1;

        virtualinvoke $r1.<cn.trinea.android.common.entity.HttpResponse: void setResponseCode(int)>($i0);

        goto label2;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void setURLConnection(cn.trinea.android.common.entity.HttpRequest, java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r1;
        cn.trinea.android.common.entity.HttpRequest $r0;
        java.util.Map $r2;
        int $i0;

        $r0 := @parameter0: cn.trinea.android.common.entity.HttpRequest;

        $r1 := @parameter1: java.net.HttpURLConnection;

        if $r0 == null goto label3;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r0.<cn.trinea.android.common.entity.HttpRequest: java.util.Map getRequestProperties()>();

        staticinvoke <cn.trinea.android.common.util.HttpUtils: void setURLConnection(java.util.Map,java.net.HttpURLConnection)>($r2, $r1);

        $i0 = virtualinvoke $r0.<cn.trinea.android.common.entity.HttpRequest: int getConnectTimeout()>();

        if $i0 < 0 goto label2;

        $i0 = virtualinvoke $r0.<cn.trinea.android.common.entity.HttpRequest: int getConnectTimeout()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

     label2:
        $i0 = virtualinvoke $r0.<cn.trinea.android.common.entity.HttpRequest: int getReadTimeout()>();

        if $i0 < 0 goto label3;

        $i0 = virtualinvoke $r0.<cn.trinea.android.common.entity.HttpRequest: int getReadTimeout()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

     label3:
        return;
    }

    public static void setURLConnection(java.util.Map, java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r1;
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map $r0;
        java.lang.Object $r4;
        java.lang.String $r6, $r7;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.net.HttpURLConnection;

        $z0 = staticinvoke <cn.trinea.android.common.util.MapUtils: boolean isEmpty(java.util.Map)>($r0);

        if $z0 != 0 goto label3;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r6);

        if $z0 != 0 goto label2;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r4;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r6, $r7);

        goto label2;

     label3:
        return;
    }
}
