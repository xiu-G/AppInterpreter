public final class js extends java.io.FilterOutputStream
{
    protected static final byte[] c;
    protected static final byte[] d;
    protected static final byte[] e;
    protected static final byte[] f;
    private static final byte[] p;
    private static final byte[] q;
    private static final byte[] u;
    protected java.util.zip.Deflater a;
    protected byte[] b;
    private org.apache.tools.zip.ZipEntry g;
    private java.lang.String h;
    private java.util.Vector i;
    private java.util.zip.CRC32 j;
    private long k;
    private long l;
    private long m;
    private long n;
    private long o;
    private java.util.Hashtable r;
    private java.lang.String s;
    private java.io.RandomAccessFile t;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[2];

        $r0[0] = 0;

        $r0[1] = 0;

        <js: byte[] p> = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 0;

        <js: byte[] q> = $r0;

        $r0 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>(67324752L);

        <js: byte[] c> = $r0;

        $r0 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>(134695760L);

        <js: byte[] d> = $r0;

        $r0 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>(33639248L);

        <js: byte[] e> = $r0;

        $r0 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>(101010256L);

        <js: byte[] f> = $r0;

        $r0 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>(8448L);

        <js: byte[] u> = $r0;

        return;
    }

    private byte[] a(java.lang.String)
    {
        java.lang.Throwable $r4;
        byte[] $r3;
        java.util.zip.ZipException $r5;
        js r0;
        java.lang.String $r1, $r2;
        java.io.UnsupportedEncodingException $r6;

        r0 := @this: js;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<js: java.lang.String s>;

        if $r2 != null goto label1;

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        return $r3;

     label1:
        $r2 = r0.<js: java.lang.String s>;

     label2:
        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r2);

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.util.zip.ZipException;

        $r6 = (java.io.UnsupportedEncodingException) $r4;

        $r1 = virtualinvoke $r6.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.util.zip.ZipException: void <init>(java.lang.String)>($r1);

        throw $r5;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public final void close()
    {
        byte[] $r4, $r5, $r12, $r14;
        java.io.RandomAccessFile $r6;
        java.util.Date $r10;
        js r0;
        long $l0, $l2, $l7;
        java.util.Vector $r8;
        byte $b6;
        int $i1, $i3, $i4, $i5;
        java.lang.String $r11, $r13;
        java.util.Hashtable $r15;
        boolean $z0;
        java.io.OutputStream $r7;
        java.util.zip.ZipException $r16;
        java.util.zip.Deflater $r3;
        org.apache.tools.zip.ZipEntry $r1;
        java.util.zip.CRC32 $r2;
        java.lang.Object $r9;
        java.lang.StringBuilder $r17;

        r0 := @this: js;

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        if $r1 == null goto label12;

        $r2 = r0.<js: java.util.zip.CRC32 j>;

        $l0 = virtualinvoke $r2.<java.util.zip.CRC32: long getValue()>();

        $r2 = r0.<js: java.util.zip.CRC32 j>;

        virtualinvoke $r2.<java.util.zip.CRC32: void reset()>();

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $i1 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: int getMethod()>();

        if $i1 != 8 goto label37;

        $r3 = r0.<js: java.util.zip.Deflater a>;

        virtualinvoke $r3.<java.util.zip.Deflater: void finish()>();

     label01:
        $r3 = r0.<js: java.util.zip.Deflater a>;

        $z0 = virtualinvoke $r3.<java.util.zip.Deflater: boolean finished()>();

        if $z0 != 0 goto label03;

        $r3 = r0.<js: java.util.zip.Deflater a>;

        $r4 = r0.<js: byte[] b>;

        $r5 = r0.<js: byte[] b>;

        $i1 = lengthof $r5;

        $i1 = virtualinvoke $r3.<java.util.zip.Deflater: int deflate(byte[],int,int)>($r4, 0, $i1);

        if $i1 <= 0 goto label01;

        $r4 = r0.<js: byte[] b>;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label02;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

        goto label01;

     label02:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label01;

     label03:
        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $r3 = r0.<js: java.util.zip.Deflater a>;

        $i1 = virtualinvoke $r3.<java.util.zip.Deflater: int getTotalIn()>();

        if $i1 >= 0 goto label35;

        $l2 = (long) $i1;

        $l2 = 4294967296L + $l2;

     label04:
        virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: void setSize(long)>($l2);

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $r3 = r0.<js: java.util.zip.Deflater a>;

        $i1 = virtualinvoke $r3.<java.util.zip.Deflater: int getTotalOut()>();

        if $i1 >= 0 goto label36;

        $l2 = (long) $i1;

        $l2 = 4294967296L + $l2;

     label05:
        virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: void setCompressedSize(long)>($l2);

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: void setCrc(long)>($l0);

        $r3 = r0.<js: java.util.zip.Deflater a>;

        virtualinvoke $r3.<java.util.zip.Deflater: void reset()>();

        $l0 = r0.<js: long k>;

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l2 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getCompressedSize()>();

        $l0 = $l0 + $l2;

        r0.<js: long k> = $l0;

     label06:
        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label10;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        $l0 = virtualinvoke $r6.<java.io.RandomAccessFile: long getFilePointer()>();

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        $l2 = r0.<js: long m>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void seek(long)>($l2);

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l2 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getCrc()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l2);

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label40;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label07:
        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l2 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getCompressedSize()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l2);

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label41;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label08:
        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l2 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getSize()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l2);

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label42;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label09:
        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void seek(long)>($l0);

     label10:
        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $i1 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: int getMethod()>();

        if $i1 != 8 goto label11;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label43;

     label11:
        r0.<js: org.apache.tools.zip.ZipEntry g> = null;

     label12:
        $l0 = r0.<js: long k>;

        r0.<js: long n> = $l0;

        $r8 = r0.<js: java.util.Vector i>;

        $i1 = virtualinvoke $r8.<java.util.Vector: int size()>();

        $i3 = 0;

     label13:
        if $i3 >= $i1 goto label76;

        $r8 = r0.<js: java.util.Vector i>;

        $r9 = virtualinvoke $r8.<java.util.Vector: java.lang.Object elementAt(int)>($i3);

        $r1 = (org.apache.tools.zip.ZipEntry) $r9;

        $r4 = <js: byte[] e>;

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label52;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label14:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 4L;

        r0.<js: long k> = $l0;

        $i4 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: int getPlatform()>();

        $i4 = $i4 << 8;

        $i4 = $i4 | 20;

        $r4 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>($i4);

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label53;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label15:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 2L;

        r0.<js: long k> = $l0;

        $i4 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: int getMethod()>();

        if $i4 != 8 goto label56;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 != null goto label56;

        $r4 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>(20);

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label54;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label16:
        $r4 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>(8);

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label55;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label17:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 4L;

        r0.<js: long k> = $l0;

        $i4 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: int getMethod()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>($i4);

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label60;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label18:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 2L;

        r0.<js: long k> = $l0;

        $l0 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getTime()>();

        $r10 = new java.util.Date;

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l0);

        $i4 = virtualinvoke $r10.<java.util.Date: int getYear()>();

        $i5 = $i4 + 1900;

        if $i5 >= 1980 goto label61;

        $r4 = <js: byte[] u>;

     label19:
        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label62;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label20:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 4L;

        r0.<js: long k> = $l0;

        $l0 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getCrc()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l0);

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label63;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label21:
        $l0 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getCompressedSize()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l0);

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label64;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label22:
        $l0 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getSize()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l0);

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label65;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label23:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 12L;

        r0.<js: long k> = $l0;

        $r11 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: java.lang.String getName()>();

        $r4 = specialinvoke r0.<js: byte[] a(java.lang.String)>($r11);

        $i4 = lengthof $r4;

        $r5 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>($i4);

        $i4 = lengthof $r5;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label66;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r5, 0, $i4);

     label24:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 2L;

        r0.<js: long k> = $l0;

        $r5 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: byte[] getCentralDirectoryExtra()>();

        $i4 = lengthof $r5;

        $r12 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>($i4);

        $i4 = lengthof $r12;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label67;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r12, 0, $i4);

     label25:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 2L;

        r0.<js: long k> = $l0;

        $r11 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: java.lang.String getComment()>();

        $r13 = $r11;

        if $r11 != null goto label26;

        $r13 = "";

     label26:
        $r12 = specialinvoke r0.<js: byte[] a(java.lang.String)>($r13);

        $i4 = lengthof $r12;

        $r14 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>($i4);

        $i4 = lengthof $r14;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label68;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r14, 0, $i4);

     label27:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 2L;

        r0.<js: long k> = $l0;

        $r14 = <js: byte[] p>;

        $i4 = lengthof $r14;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label69;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r14, 0, $i4);

     label28:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 2L;

        r0.<js: long k> = $l0;

        $i4 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: int getInternalAttributes()>();

        $r14 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>($i4);

        $i4 = lengthof $r14;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label70;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r14, 0, $i4);

     label29:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 2L;

        r0.<js: long k> = $l0;

        $l0 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getExternalAttributes()>();

        $r14 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l0);

        $i4 = lengthof $r14;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label71;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r14, 0, $i4);

     label30:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 4L;

        r0.<js: long k> = $l0;

        $r15 = r0.<js: java.util.Hashtable r>;

        $r9 = virtualinvoke $r15.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r14 = (byte[]) $r9;

        $i4 = lengthof $r14;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label72;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r14, 0, $i4);

     label31:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 4L;

        r0.<js: long k> = $l0;

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label73;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label32:
        $l0 = r0.<js: long k>;

        $i4 = lengthof $r4;

        $l2 = (long) $i4;

        $l0 = $l0 + $l2;

        r0.<js: long k> = $l0;

        $i4 = lengthof $r5;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label74;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r5, 0, $i4);

     label33:
        $l0 = r0.<js: long k>;

        $i4 = lengthof $r5;

        $l2 = (long) $i4;

        $l0 = $l2 + $l0;

        r0.<js: long k> = $l0;

        $i4 = lengthof $r12;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label75;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r12, 0, $i4);

     label34:
        $l0 = r0.<js: long k>;

        $i4 = lengthof $r12;

        $l2 = (long) $i4;

        $l0 = $l0 + $l2;

        r0.<js: long k> = $l0;

        $i3 = $i3 + 1;

        goto label13;

     label35:
        $l2 = (long) $i1;

        goto label04;

     label36:
        $l2 = (long) $i1;

        goto label05;

     label37:
        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 != null goto label39;

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l2 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getCrc()>();

        $b6 = $l2 cmp $l0;

        if $b6 == 0 goto label38;

        $r16 = new java.util.zip.ZipException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad CRC checksum for entry ");

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $r11 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: java.lang.String getName()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l2 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getCrc()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of ");

        $r11 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.util.zip.ZipException: void <init>(java.lang.String)>($r11);

        throw $r16;

     label38:
        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l0 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getSize()>();

        $l2 = r0.<js: long k>;

        $l7 = r0.<js: long l>;

        $l2 = $l2 - $l7;

        $b6 = $l0 cmp $l2;

        if $b6 == 0 goto label06;

        $r16 = new java.util.zip.ZipException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad size for entry ");

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $r11 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: java.lang.String getName()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l0 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getSize()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of ");

        $l0 = r0.<js: long k>;

        $l2 = r0.<js: long l>;

        $l0 = $l0 - $l2;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r11 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.util.zip.ZipException: void <init>(java.lang.String)>($r11);

        throw $r16;

     label39:
        $l2 = r0.<js: long k>;

        $l7 = r0.<js: long l>;

        $l2 = $l2 - $l7;

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: void setSize(long)>($l2);

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: void setCompressedSize(long)>($l2);

        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: void setCrc(long)>($l0);

        goto label06;

     label40:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label07;

     label41:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label08;

     label42:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label09;

     label43:
        $r4 = <js: byte[] d>;

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label48;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label44:
        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l0 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getCrc()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l0);

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label49;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label45:
        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l0 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getCompressedSize()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l0);

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label50;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label46:
        $r1 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $l0 = virtualinvoke $r1.<org.apache.tools.zip.ZipEntry: long getSize()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l0);

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label51;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label47:
        $l0 = r0.<js: long k>;

        $l0 = $l0 + 16L;

        r0.<js: long k> = $l0;

        goto label11;

     label48:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label44;

     label49:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label45;

     label50:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label46;

     label51:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label47;

     label52:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label14;

     label53:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label15;

     label54:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label16;

     label55:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label17;

     label56:
        $r4 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>(10);

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label58;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

     label57:
        $r4 = <js: byte[] p>;

        $i4 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label59;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i4);

        goto label17;

     label58:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label57;

     label59:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label17;

     label60:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label18;

     label61:
        $i4 = virtualinvoke $r10.<java.util.Date: int getMonth()>();

        $i4 = $i4 + 1;

        $i5 = $i5 - 1980;

        $i5 = $i5 << 25;

        $i4 = $i4 << 21;

        $i4 = $i5 | $i4;

        $i5 = virtualinvoke $r10.<java.util.Date: int getDate()>();

        $i5 = $i5 << 16;

        $i4 = $i4 | $i5;

        $i5 = virtualinvoke $r10.<java.util.Date: int getHours()>();

        $i5 = $i5 << 11;

        $i4 = $i4 | $i5;

        $i5 = virtualinvoke $r10.<java.util.Date: int getMinutes()>();

        $i5 = $i5 << 5;

        $i4 = $i4 | $i5;

        $i5 = virtualinvoke $r10.<java.util.Date: int getSeconds()>();

        $i5 = $i5 >> 1;

        $i4 = $i4 | $i5;

        $l0 = (long) $i4;

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l0);

        goto label19;

     label62:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label20;

     label63:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label21;

     label64:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label22;

     label65:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label23;

     label66:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i4);

        goto label24;

     label67:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r12, 0, $i4);

        goto label25;

     label68:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r14, 0, $i4);

        goto label27;

     label69:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r14, 0, $i4);

        goto label28;

     label70:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r14, 0, $i4);

        goto label29;

     label71:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r14, 0, $i4);

        goto label30;

     label72:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r14, 0, $i4);

        goto label31;

     label73:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i4);

        goto label32;

     label74:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i4);

        goto label33;

     label75:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r12, 0, $i4);

        goto label34;

     label76:
        $l0 = r0.<js: long k>;

        $l2 = r0.<js: long n>;

        $l0 = $l0 - $l2;

        r0.<js: long o> = $l0;

        $r4 = <js: byte[] f>;

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label87;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label77:
        $r4 = <js: byte[] p>;

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label88;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label78:
        $r4 = <js: byte[] p>;

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label89;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label79:
        $r8 = r0.<js: java.util.Vector i>;

        $i1 = virtualinvoke $r8.<java.util.Vector: int size()>();

        $r4 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>($i1);

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label90;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label80:
        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label91;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label81:
        $l0 = r0.<js: long o>;

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l0);

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label92;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label82:
        $l0 = r0.<js: long n>;

        $r4 = staticinvoke <org.apache.tools.zip.ZipLong: byte[] getBytes(long)>($l0);

        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label93;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label83:
        $r11 = r0.<js: java.lang.String h>;

        $r4 = specialinvoke r0.<js: byte[] a(java.lang.String)>($r11);

        $i1 = lengthof $r4;

        $r5 = staticinvoke <org.apache.tools.zip.ZipShort: byte[] getBytes(int)>($i1);

        $i1 = lengthof $r5;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label94;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r5, 0, $i1);

     label84:
        $i1 = lengthof $r4;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label95;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i1);

     label85:
        $r15 = r0.<js: java.util.Hashtable r>;

        virtualinvoke $r15.<java.util.Hashtable: void clear()>();

        $r8 = r0.<js: java.util.Vector i>;

        virtualinvoke $r8.<java.util.Vector: void removeAllElements()>();

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label86;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void close()>();

     label86:
        $r7 = r0.<js: java.io.OutputStream out>;

        if $r7 == null goto label96;

        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void close()>();

        return;

     label87:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label77;

     label88:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label78;

     label89:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label79;

     label90:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label80;

     label91:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label81;

     label92:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label82;

     label93:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label83;

     label94:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i1);

        goto label84;

     label95:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i1);

        goto label85;

     label96:
        return;
    }

    public final void flush()
    {
        java.io.OutputStream $r1;
        js r0;

        r0 := @this: js;

        $r1 = r0.<js: java.io.OutputStream out>;

        if $r1 == null goto label1;

        $r1 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

     label1:
        return;
    }

    public final void write(int)
    {
        byte[] $r1;
        byte $b1;
        int $i0;
        js r0;

        r0 := @this: js;

        $i0 := @parameter0: int;

        $r1 = newarray (byte)[1];

        $b1 = (byte) $i0;

        $r1[0] = $b1;

        virtualinvoke r0.<js: void write(byte[],int,int)>($r1, 0, 1);

        return;
    }

    public final void write(byte[], int, int)
    {
        java.io.OutputStream $r7;
        byte[] $r1, $r4, $r5;
        java.io.RandomAccessFile $r6;
        js r0;
        long $l3, $l4;
        java.util.zip.Deflater $r3;
        org.apache.tools.zip.ZipEntry $r2;
        int $i0, $i1, $i2;
        java.util.zip.CRC32 $r8;
        boolean $z0;

        r0 := @this: js;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<js: org.apache.tools.zip.ZipEntry g>;

        $i2 = virtualinvoke $r2.<org.apache.tools.zip.ZipEntry: int getMethod()>();

        if $i2 != 8 goto label3;

        if $i1 <= 0 goto label5;

        $r3 = r0.<js: java.util.zip.Deflater a>;

        $z0 = virtualinvoke $r3.<java.util.zip.Deflater: boolean finished()>();

        if $z0 != 0 goto label5;

        $r3 = r0.<js: java.util.zip.Deflater a>;

        virtualinvoke $r3.<java.util.zip.Deflater: void setInput(byte[],int,int)>($r1, $i0, $i1);

     label1:
        $r3 = r0.<js: java.util.zip.Deflater a>;

        $z0 = virtualinvoke $r3.<java.util.zip.Deflater: boolean needsInput()>();

        if $z0 != 0 goto label5;

        $r3 = r0.<js: java.util.zip.Deflater a>;

        $r4 = r0.<js: byte[] b>;

        $r5 = r0.<js: byte[] b>;

        $i2 = lengthof $r5;

        $i2 = virtualinvoke $r3.<java.util.zip.Deflater: int deflate(byte[],int,int)>($r4, 0, $i2);

        if $i2 <= 0 goto label1;

        $r4 = r0.<js: byte[] b>;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label2;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r4, 0, $i2);

        goto label1;

     label2:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i2);

        goto label1;

     label3:
        $r6 = r0.<js: java.io.RandomAccessFile t>;

        if $r6 == null goto label6;

        $r6 = r0.<js: java.io.RandomAccessFile t>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void write(byte[],int,int)>($r1, $i0, $i1);

     label4:
        $l3 = r0.<js: long k>;

        $l4 = (long) $i1;

        $l3 = $l3 + $l4;

        r0.<js: long k> = $l3;

     label5:
        $r8 = r0.<js: java.util.zip.CRC32 j>;

        virtualinvoke $r8.<java.util.zip.CRC32: void update(byte[],int,int)>($r1, $i0, $i1);

        return;

     label6:
        $r7 = r0.<js: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

        goto label4;
    }
}
