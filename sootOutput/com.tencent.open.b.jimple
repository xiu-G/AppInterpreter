public class com.tencent.open.b extends android.os.AsyncTask
{
    private static final java.text.SimpleDateFormat a;
    private com.tencent.open.b$a b;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;
        java.util.Locale $r1;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale CHINA>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd-HHmmss", $r1);

        <com.tencent.open.b: java.text.SimpleDateFormat a> = $r0;

        return;
    }

    public void <init>(com.tencent.open.b$a)
    {
        com.tencent.open.b r0;
        com.tencent.open.b$a $r1;

        r0 := @this: com.tencent.open.b;

        $r1 := @parameter0: com.tencent.open.b$a;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<com.tencent.open.b: com.tencent.open.b$a b> = $r1;

        return;
    }

    private int a(android.graphics.BitmapFactory$Options, int, int)
    {
        com.tencent.open.b r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.graphics.BitmapFactory$Options $r1;

        r0 := @this: com.tencent.open.b;

        $r1 := @parameter0: android.graphics.BitmapFactory$Options;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $r1.<android.graphics.BitmapFactory$Options: int outHeight>;

        $i3 = $r1.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i2 > $i1 goto label1;

        if $i3 <= $i0 goto label3;

     label1:
        $f0 = (float) $i2;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = (float) $i3;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        if $i1 >= $i0 goto label2;

        return $i1;

     label2:
        return $i0;

     label3:
        return 1;
    }

    private android.graphics.Bitmap a(android.graphics.Bitmap)
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream $r2;
        com.tencent.open.b r0;
        java.io.ByteArrayInputStream $r5;
        android.graphics.Bitmap $r1;
        int $i0, $i1;
        android.graphics.Bitmap$CompressFormat $r3;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        android.graphics.BitmapFactory$Options $r6;

        r0 := @this: com.tencent.open.b;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 = 1;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke $r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r3, 100, $r2);

        $r4 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i1 = lengthof $r4;

        $i1 = $i1 / 1024;

        if $i1 <= 1024 goto label1;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void reset()>();

        $r3 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke $r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r3, 50, $r2);

     label1:
        $r5 = new java.io.ByteArrayInputStream;

        $r4 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r6 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r6.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r6.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r5, null, $r6);

        $r6.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $i1 = specialinvoke r0.<com.tencent.open.b: int a(android.graphics.BitmapFactory$Options,int,int)>($r6, 320, 320);

        if $i1 > 0 goto label3;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("comp be=");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tencent.open.a.b: void c(java.lang.String,java.lang.String)>("comp", $r8);

        $r6.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i0;

        $r5 = new java.io.ByteArrayInputStream;

        $r4 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r5, null, $r6);

        return $r1;

     label3:
        $i0 = $i1;

        goto label2;
    }

    private java.lang.String a(long)
    {
        java.util.Date $r3;
        com.tencent.open.b r0;
        java.text.SimpleDateFormat $r1;
        long $l0;
        java.lang.String $r2;

        r0 := @this: com.tencent.open.b;

        $l0 := @parameter0: long;

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l0);

        $r1 = <com.tencent.open.b: java.text.SimpleDateFormat a>;

        $r2 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r3);

        return $r2;
    }

    public static void a(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1;
        java.lang.Exception $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label6;

        $r1 = new java.io.File;

     label1:
        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label2:
        if $z0 == 0 goto label6;

     label3:
        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label4:
        return;

     label5:
        $r2 := @caughtexception;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static boolean a()
    {
        java.lang.String $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/mnt/sdcard-ext");

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    private java.lang.String b()
    {
        com.tencent.open.b r0;
        java.lang.String $r1;
        java.io.File $r2;
        boolean $z0;

        r0 := @this: com.tencent.open.b;

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r1 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r1;

     label1:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>("/mnt/sdcard-ext");

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        return "/mnt/sdcard-ext";

     label2:
        return ".";
    }

    private java.lang.String b(android.graphics.Bitmap)
    {
        java.lang.Throwable $r11, $r12, $r13, $r14;
        com.tencent.open.b r0;
        long $l0;
        android.graphics.Bitmap$CompressFormat $r9;
        java.lang.String $r2, $r5, $r6;
        boolean $z0;
        java.io.FileOutputStream $r3, $r8;
        java.io.File $r7;
        java.lang.Exception $r10, $r15;
        android.graphics.Bitmap $r1;
        java.lang.StringBuilder $r4;

        r0 := @this: com.tencent.open.b;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r3 = null;

     label01:
        $r4 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = specialinvoke r0.<com.tencent.open.b: java.lang.String a(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r4 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = specialinvoke r0.<com.tencent.open.b: java.lang.String b()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label05:
        $r6 = <java.io.File: java.lang.String separator>;

     label06:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".AppCenterWebBuffer");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r4 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label09:
        $r2 = <java.io.File: java.lang.String separator>;

     label10:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r7 = new java.io.File;

     label12:
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r6);

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

     label13:
        if $z0 != 0 goto label16;

     label14:
        $z0 = virtualinvoke $r7.<java.io.File: boolean mkdirs()>();

     label15:
        if $z0 != 0 goto label16;

     label16:
        $r7 = new java.io.File;

     label17:
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

     label18:
        if $z0 == 0 goto label20;

     label19:
        virtualinvoke $r7.<java.io.File: boolean delete()>();

     label20:
        virtualinvoke $r7.<java.io.File: boolean createNewFile()>();

     label21:
        $r8 = new java.io.FileOutputStream;

     label22:
        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>($r7);

     label23:
        $r9 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

     label24:
        virtualinvoke $r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r9, 100, $r8);

        virtualinvoke $r8.<java.io.FileOutputStream: void flush()>();

     label25:
        if $r8 == null goto label41;

     label26:
        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

     label27:
        return $r5;

     label28:
        $r10 := @caughtexception;

     label29:
        if $r3 == null goto label42;

     label30:
        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

     label31:
        return "";

     label32:
        $r11 := @caughtexception;

        return "";

     label33:
        $r12 := @caughtexception;

     label34:
        if $r3 == null goto label36;

     label35:
        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

     label36:
        throw $r12;

     label37:
        $r13 := @caughtexception;

        return $r5;

     label38:
        $r14 := @caughtexception;

        goto label36;

     label39:
        $r12 := @caughtexception;

        $r3 = $r8;

        goto label34;

     label40:
        $r15 := @caughtexception;

        $r3 = $r8;

        goto label29;

     label41:
        return $r5;

     label42:
        return "";

        catch java.lang.Exception from label02 to label03 with label28;
        catch java.lang.Exception from label04 to label05 with label28;
        catch java.lang.Exception from label06 to label07 with label28;
        catch java.lang.Exception from label08 to label09 with label28;
        catch java.lang.Exception from label10 to label11 with label28;
        catch java.lang.Exception from label12 to label13 with label28;
        catch java.lang.Exception from label14 to label15 with label28;
        catch java.lang.Exception from label17 to label18 with label28;
        catch java.lang.Exception from label19 to label21 with label28;
        catch java.lang.Exception from label22 to label23 with label28;
        catch java.lang.Throwable from label01 to label13 with label33;
        catch java.lang.Throwable from label14 to label15 with label33;
        catch java.lang.Throwable from label16 to label18 with label33;
        catch java.lang.Throwable from label19 to label23 with label33;
        catch java.lang.Exception from label24 to label25 with label40;
        catch java.lang.Throwable from label23 to label25 with label39;
        catch java.io.IOException from label26 to label27 with label37;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label35 to label36 with label38;
    }

    protected transient java.util.HashMap a(android.graphics.Bitmap[])
    {
        android.graphics.Bitmap[] $r1;
        com.tencent.open.b r0;
        java.util.HashMap $r2;
        java.lang.Integer $r6;
        java.lang.Exception $r7;
        android.graphics.Bitmap $r3, $r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.tencent.open.b;

        $r1 := @parameter0: android.graphics.Bitmap[];

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

     label01:
        $r3 = $r1[0];

     label02:
        if $r3 == null goto label14;

     label03:
        $i0 = virtualinvoke $r3.<android.graphics.Bitmap: int getWidth()>();

     label04:
        if $i0 > 320 goto label07;

     label05:
        $i0 = virtualinvoke $r3.<android.graphics.Bitmap: int getHeight()>();

     label06:
        if $i0 <= 320 goto label11;

     label07:
        $r4 = specialinvoke r0.<com.tencent.open.b: android.graphics.Bitmap a(android.graphics.Bitmap)>($r3);

        $r5 = specialinvoke r0.<com.tencent.open.b: java.lang.String b(android.graphics.Bitmap)>($r4);

     label08:
        virtualinvoke $r4.<android.graphics.Bitmap: void recycle()>();

     label09:
        virtualinvoke $r3.<android.graphics.Bitmap: void recycle()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ResultType", $r6);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ResultValue", $r5);

     label10:
        return $r2;

     label11:
        $r5 = specialinvoke r0.<com.tencent.open.b: java.lang.String b(android.graphics.Bitmap)>($r3);

     label12:
        goto label09;

     label13:
        $r7 := @caughtexception;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ResultType", $r6);

        $r5 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ResultValue", $r5);

     label14:
        return $r2;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label08 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    protected void a(java.util.HashMap)
    {
        com.tencent.open.b$a $r4;
        int $i0;
        com.tencent.open.b r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.String $r5;
        java.lang.Integer $r3;

        r0 := @this: com.tencent.open.b;

        $r1 := @parameter0: java.util.HashMap;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ResultType");

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        if $i0 != 1 goto label2;

        $r4 = r0.<com.tencent.open.b: com.tencent.open.b$a b>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ResultValue");

        $r5 = (java.lang.String) $r2;

        interfaceinvoke $r4.<com.tencent.open.b$a: void a(java.lang.String)>($r5);

     label1:
        specialinvoke r0.<android.os.AsyncTask: void onPostExecute(java.lang.Object)>($r1);

        return;

     label2:
        $r4 = r0.<com.tencent.open.b: com.tencent.open.b$a b>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ResultValue");

        $r5 = (java.lang.String) $r2;

        interfaceinvoke $r4.<com.tencent.open.b$a: void b(java.lang.String)>($r5);

        goto label1;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        java.lang.Object[] $r2;
        android.graphics.Bitmap[] $r3;
        com.tencent.open.b r0;
        java.util.HashMap $r1;

        r0 := @this: com.tencent.open.b;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (android.graphics.Bitmap[]) $r2;

        $r1 = virtualinvoke r0.<com.tencent.open.b: java.util.HashMap a(android.graphics.Bitmap[])>($r3);

        return $r1;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.tencent.open.b r0;
        java.lang.Object $r1;
        java.util.HashMap $r2;

        r0 := @this: com.tencent.open.b;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.HashMap) $r1;

        virtualinvoke r0.<com.tencent.open.b: void a(java.util.HashMap)>($r2);

        return;
    }
}
