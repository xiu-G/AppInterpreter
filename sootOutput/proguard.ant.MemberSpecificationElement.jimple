public class proguard.ant.MemberSpecificationElement extends org.apache.tools.ant.types.DataType
{
    private java.lang.String access;
    private java.lang.String 'annotation';
    private java.lang.String name;
    private java.lang.String parameters;
    private java.lang.String type;

    public void <init>()
    {
        proguard.ant.MemberSpecificationElement r0;

        r0 := @this: proguard.ant.MemberSpecificationElement;

        specialinvoke r0.<org.apache.tools.ant.types.DataType: void <init>()>();

        return;
    }

    private int requiredAccessFlags(boolean, java.lang.String) throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable $r8;
        org.apache.tools.ant.BuildException $r7;
        proguard.ant.MemberSpecificationElement r0;
        short $s0, $s1;
        java.util.StringTokenizer $r2, $r5;
        java.lang.StringBuffer $r4, $r6;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;

        r0 := @this: proguard.ant.MemberSpecificationElement;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label17;

        $r5 = new java.util.StringTokenizer;

        $r2 = $r5;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, " ,");

        $s0 = 0;

     label01:
        $z1 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label16;

        $r1 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r3 = $r1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        $z1 = $z1 ^ $z0;

        if $z1 == 0 goto label01;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $z1 == 0 goto label02;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

     label02:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("public");

        if $z1 == 0 goto label04;

        $s1 = 1;

     label03:
        if $s1 != 0 goto label15;

        $r7 = new org.apache.tools.ant.BuildException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Incorrect class member access modifier [");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r1);

        $r8 = (java.lang.Throwable) $r7;

        throw $r8;

     label04:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("private");

        if $z1 == 0 goto label05;

        $s1 = 2;

        goto label03;

     label05:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("protected");

        if $z1 == 0 goto label06;

        $s1 = 4;

        goto label03;

     label06:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("static");

        if $z1 == 0 goto label07;

        $s1 = 8;

        goto label03;

     label07:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("final");

        if $z1 == 0 goto label08;

        $s1 = 16;

        goto label03;

     label08:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("synchronized");

        if $z1 == 0 goto label09;

        $s1 = 32;

        goto label03;

     label09:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("volatile");

        if $z1 == 0 goto label10;

        $s1 = 64;

        goto label03;

     label10:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("transient");

        if $z1 == 0 goto label11;

        $s1 = 128;

        goto label03;

     label11:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("native");

        if $z1 == 0 goto label12;

        $s1 = 256;

        goto label03;

     label12:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("abstract");

        if $z1 == 0 goto label13;

        $s1 = 1024;

        goto label03;

     label13:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("strictfp");

        if $z1 == 0 goto label14;

        $s1 = 2048;

        goto label03;

     label14:
        $s1 = 0;

        goto label03;

     label15:
        $s0 = $s0 | $s1;

        goto label01;

     label16:
        return $s0;

     label17:
        return 0;
    }

    public void appendTo(java.util.List, boolean, boolean)
    {
        java.lang.Throwable $r16;
        java.lang.StringBuffer $r11, $r13;
        int $i0, $i1;
        java.lang.String $r4, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2;
        org.apache.tools.ant.BuildException $r14;
        proguard.ant.MemberSpecificationElement r0, $r6;
        java.util.List $r1, $r12;
        java.lang.Class $r2, $r3;
        java.lang.Object $r5;
        proguard.MemberSpecification $r15;

        r0 := @this: proguard.ant.MemberSpecificationElement;

        $r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 = virtualinvoke r0.<proguard.ant.MemberSpecificationElement: boolean isReference()>();

        if $z2 == 0 goto label03;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<proguard.ant.MemberSpecificationElement: java.lang.Object getCheckedRef(java.lang.Class,java.lang.String)>($r2, $r4);

        $r6 = (proguard.ant.MemberSpecificationElement) $r5;

     label01:
        $r4 = $r6.<proguard.ant.MemberSpecificationElement: java.lang.String access>;

        $r7 = $r6.<proguard.ant.MemberSpecificationElement: java.lang.String type>;

        $r8 = $r6.<proguard.ant.MemberSpecificationElement: java.lang.String 'annotation'>;

        $r9 = $r6.<proguard.ant.MemberSpecificationElement: java.lang.String name>;

        $r10 = $r6.<proguard.ant.MemberSpecificationElement: java.lang.String parameters>;

        if $r8 == null goto label02;

        $r8 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r8);

     label02:
        if $z0 == 0 goto label13;

        if $z1 == 0 goto label08;

        if $r7 == null goto label04;

        $r14 = new org.apache.tools.ant.BuildException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type attribute not allowed in constructor specification [");

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r4 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r4);

        $r16 = (java.lang.Throwable) $r14;

        throw $r16;

     label03:
        $r6 = r0;

        goto label01;

     label04:
        if $r10 == null goto label05;

        $r7 = "void";

     label05:
        $r9 = "<init>";

     label06:
        $r12 = staticinvoke <proguard.util.ListUtil: java.util.List commaSeparatedList(java.lang.String)>($r10);

        if $r10 == null goto label14;

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalMethodDescriptor(java.lang.String,java.util.List)>($r7, $r12);

     label07:
        $r15 = new proguard.MemberSpecification;

        $i0 = specialinvoke r0.<proguard.ant.MemberSpecificationElement: int requiredAccessFlags(boolean,java.lang.String)>(1, $r4);

        $i1 = specialinvoke r0.<proguard.ant.MemberSpecificationElement: int requiredAccessFlags(boolean,java.lang.String)>(0, $r4);

        specialinvoke $r15.<proguard.MemberSpecification: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>($i0, $i1, $r8, $r9, $r7);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r15);

        return;

     label08:
        if $r7 == null goto label11;

        $z0 = 1;

     label09:
        if $r10 == null goto label12;

        $z1 = 1;

     label10:
        $z0 = $z0 ^ $z1;

        if $z0 == 0 goto label06;

        $r14 = new org.apache.tools.ant.BuildException;

        specialinvoke $r14.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("Type and parameters attributes must always be present in combination in method specification");

        $r16 = (java.lang.Throwable) $r14;

        throw $r16;

     label11:
        $z0 = 0;

        goto label09;

     label12:
        $z1 = 0;

        goto label10;

     label13:
        if $r10 == null goto label06;

        $r14 = new org.apache.tools.ant.BuildException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Parameters attribute not allowed in field specification [");

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r4 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r4);

        $r16 = (java.lang.Throwable) $r14;

        throw $r16;

     label14:
        if $r7 == null goto label15;

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r7);

        goto label07;

     label15:
        $r7 = null;

        goto label07;
    }

    public void setAccess(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.MemberSpecificationElement r0;

        r0 := @this: proguard.ant.MemberSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.MemberSpecificationElement: java.lang.String access> = $r1;

        return;
    }

    public void setAnnotation(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.MemberSpecificationElement r0;

        r0 := @this: proguard.ant.MemberSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.MemberSpecificationElement: java.lang.String 'annotation'> = $r1;

        return;
    }

    public void setName(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.MemberSpecificationElement r0;

        r0 := @this: proguard.ant.MemberSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.MemberSpecificationElement: java.lang.String name> = $r1;

        return;
    }

    public void setParam(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.MemberSpecificationElement r0;

        r0 := @this: proguard.ant.MemberSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.MemberSpecificationElement: java.lang.String parameters> = $r1;

        return;
    }

    public void setParameters(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.MemberSpecificationElement r0;

        r0 := @this: proguard.ant.MemberSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.MemberSpecificationElement: java.lang.String parameters> = $r1;

        return;
    }

    public void setType(java.lang.String)
    {
        java.lang.String $r1;
        proguard.ant.MemberSpecificationElement r0;

        r0 := @this: proguard.ant.MemberSpecificationElement;

        $r1 := @parameter0: java.lang.String;

        r0.<proguard.ant.MemberSpecificationElement: java.lang.String type> = $r1;

        return;
    }
}
