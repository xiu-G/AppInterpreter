abstract class com.cooliris.media.ImageViewTouchBase extends android.widget.ImageView
{
    static final float SCALE_RATE;
    private static final java.lang.String TAG;
    protected android.graphics.Matrix mBaseMatrix;
    protected final com.cooliris.media.RotateBitmap mBitmapDisplayed;
    private final android.graphics.Matrix mDisplayMatrix;
    protected android.os.Handler mHandler;
    protected int mLastXTouchPos;
    protected int mLastYTouchPos;
    private final float[] mMatrixValues;
    float mMaxZoom;
    private java.lang.Runnable mOnLayoutRunnable;
    private com.cooliris.media.ImageViewTouchBase$Recycler mRecycler;
    protected android.graphics.Matrix mSuppMatrix;
    int mThisHeight;
    int mThisWidth;

    public void <init>(android.content.Context)
    {
        com.cooliris.media.RotateBitmap $r4;
        com.cooliris.media.ImageViewTouchBase r0;
        android.content.Context $r1;
        android.os.Handler $r5;
        int $i0;
        float[] $r2;
        android.graphics.Matrix $r3;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mBaseMatrix> = $r3;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix> = $r3;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mDisplayMatrix> = $r3;

        $r2 = newarray (float)[9];

        r0.<com.cooliris.media.ImageViewTouchBase: float[] mMatrixValues> = $r2;

        $r4 = new com.cooliris.media.RotateBitmap;

        specialinvoke $r4.<com.cooliris.media.RotateBitmap: void <init>(android.graphics.Bitmap)>(null);

        r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed> = $r4;

        $i0 = -1;

        r0.<com.cooliris.media.ImageViewTouchBase: int mThisWidth> = $i0;

        $i0 = -1;

        r0.<com.cooliris.media.ImageViewTouchBase: int mThisHeight> = $i0;

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        r0.<com.cooliris.media.ImageViewTouchBase: android.os.Handler mHandler> = $r5;

        r0.<com.cooliris.media.ImageViewTouchBase: java.lang.Runnable mOnLayoutRunnable> = null;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        float[] $r3;
        com.cooliris.media.RotateBitmap $r5;
        com.cooliris.media.ImageViewTouchBase r0;
        android.util.AttributeSet $r2;
        android.os.Handler $r6;
        int $i0;
        android.graphics.Matrix $r4;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mBaseMatrix> = $r4;

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix> = $r4;

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mDisplayMatrix> = $r4;

        $r3 = newarray (float)[9];

        r0.<com.cooliris.media.ImageViewTouchBase: float[] mMatrixValues> = $r3;

        $r5 = new com.cooliris.media.RotateBitmap;

        specialinvoke $r5.<com.cooliris.media.RotateBitmap: void <init>(android.graphics.Bitmap)>(null);

        r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed> = $r5;

        $i0 = -1;

        r0.<com.cooliris.media.ImageViewTouchBase: int mThisWidth> = $i0;

        $i0 = -1;

        r0.<com.cooliris.media.ImageViewTouchBase: int mThisHeight> = $i0;

        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>()>();

        r0.<com.cooliris.media.ImageViewTouchBase: android.os.Handler mHandler> = $r6;

        r0.<com.cooliris.media.ImageViewTouchBase: java.lang.Runnable mOnLayoutRunnable> = null;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void init()>();

        return;
    }

    private void getProperBaseMatrix(com.cooliris.media.RotateBitmap, android.graphics.Matrix)
    {
        com.cooliris.media.RotateBitmap $r1;
        com.cooliris.media.ImageViewTouchBase r0;
        int $i0;
        float f0, f1, f2, f3, $f4, $f5;
        android.graphics.Matrix $r2, $r3;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 := @parameter0: com.cooliris.media.RotateBitmap;

        $r2 := @parameter1: android.graphics.Matrix;

        $i0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getWidth()>();

        f2 = (float) $i0;

        $i0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getHeight()>();

        f1 = (float) $i0;

        $i0 = virtualinvoke $r1.<com.cooliris.media.RotateBitmap: int getWidth()>();

        f3 = (float) $i0;

        $i0 = virtualinvoke $r1.<com.cooliris.media.RotateBitmap: int getHeight()>();

        f0 = (float) $i0;

        virtualinvoke $r2.<android.graphics.Matrix: void reset()>();

        $f4 = f2 / f3;

        $f4 = staticinvoke <java.lang.Math: float min(float,float)>($f4, 2.0F);

        $f5 = f1 / f0;

        $f5 = staticinvoke <java.lang.Math: float min(float,float)>($f5, 2.0F);

        $f4 = staticinvoke <java.lang.Math: float min(float,float)>($f4, $f5);

        $r3 = virtualinvoke $r1.<com.cooliris.media.RotateBitmap: android.graphics.Matrix getRotateMatrix()>();

        virtualinvoke $r2.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r3);

        virtualinvoke $r2.<android.graphics.Matrix: boolean postScale(float,float)>($f4, $f4);

        f3 = f3 * $f4;

        f2 = f2 - f3;

        f2 = f2 / 2.0F;

        f0 = f0 * $f4;

        f1 = f1 - f0;

        f1 = f1 / 2.0F;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postTranslate(float,float)>(f2, f1);

        return;
    }

    private void init()
    {
        com.cooliris.media.ImageViewTouchBase r0;
        android.widget.ImageView$ScaleType $r1;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setScaleType(android.widget.ImageView$ScaleType)>($r1);

        return;
    }

    private void setImageBitmap(android.graphics.Bitmap, int)
    {
        com.cooliris.media.RotateBitmap $r3;
        com.cooliris.media.ImageViewTouchBase r0;
        android.graphics.Bitmap $r1, $r4;
        int $i0;
        com.cooliris.media.ImageViewTouchBase$Recycler $r5;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        specialinvoke r0.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r1);

        $r2 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.drawable.Drawable getDrawable()>();

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setDither(boolean)>(1);

     label1:
        $r3 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $r4 = virtualinvoke $r3.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        $r3 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        virtualinvoke $r3.<com.cooliris.media.RotateBitmap: void setBitmap(android.graphics.Bitmap)>($r1);

        $r3 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        virtualinvoke $r3.<com.cooliris.media.RotateBitmap: void setRotation(int)>($i0);

        if $r4 == null goto label2;

        if $r4 == $r1 goto label2;

        $r5 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.ImageViewTouchBase$Recycler mRecycler>;

        if $r5 == null goto label2;

        $r5 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.ImageViewTouchBase$Recycler mRecycler>;

        interfaceinvoke $r5.<com.cooliris.media.ImageViewTouchBase$Recycler: void recycle(android.graphics.Bitmap)>($r4);

     label2:
        return;
    }

    public void center(boolean, boolean)
    {
        byte $b1;
        int $i0, $i2;
        android.graphics.Matrix $r4;
        boolean $z0, $z1;
        android.graphics.RectF r1, $r5;
        com.cooliris.media.RotateBitmap $r2;
        com.cooliris.media.ImageViewTouchBase r0;
        android.graphics.Bitmap $r3;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r2 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $r3 = virtualinvoke $r2.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix getImageViewMatrix()>();

        $r5 = new android.graphics.RectF;

        r1 = $r5;

        $r2 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $r3 = virtualinvoke $r2.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        $i0 = virtualinvoke $r3.<android.graphics.Bitmap: int getWidth()>();

        $f0 = (float) $i0;

        $r2 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $r3 = virtualinvoke $r2.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        $i0 = virtualinvoke $r3.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i0;

        specialinvoke $r5.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        virtualinvoke $r4.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r1);

        $f2 = virtualinvoke r1.<android.graphics.RectF: float height()>();

        $f3 = virtualinvoke r1.<android.graphics.RectF: float width()>();

        $f0 = 0.0F;

        $f1 = 0.0F;

        $i0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getHeight()>();

        $f4 = (float) $i0;

        $b1 = $f2 cmpg $f4;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label4;

        $f1 = (float) $i0;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f2 = r1.<android.graphics.RectF: float top>;

        $f1 = $f1 - $f2;

     label2:
        $i0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getWidth()>();

        $f2 = (float) $i0;

        $b1 = $f3 cmpg $f2;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label6;

        $f0 = (float) $i0;

        $f0 = $f0 - $f3;

        $f0 = $f0 / 2.0F;

        $f3 = r1.<android.graphics.RectF: float left>;

        $f0 = $f0 - $f3;

     label3:
        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void postTranslate(float,float)>($f0, $f1);

        $r4 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix getImageViewMatrix()>();

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageMatrix(android.graphics.Matrix)>($r4);

        return;

     label4:
        $f2 = r1.<android.graphics.RectF: float top>;

        $b1 = $f2 cmpl 0.0F;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label5;

        $f1 = r1.<android.graphics.RectF: float top>;

        $f1 = neg $f1;

        goto label2;

     label5:
        $f2 = r1.<android.graphics.RectF: float bottom>;

        $f4 = (float) $i0;

        $b1 = $f2 cmpg $f4;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label2;

        $i0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getHeight()>();

        $f1 = (float) $i0;

        $f2 = r1.<android.graphics.RectF: float bottom>;

        $f1 = $f1 - $f2;

        goto label2;

     label6:
        $f3 = r1.<android.graphics.RectF: float left>;

        $b1 = $f3 cmpl 0.0F;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label7;

        $f0 = r1.<android.graphics.RectF: float left>;

        $f0 = neg $f0;

        goto label3;

     label7:
        $f3 = r1.<android.graphics.RectF: float right>;

        $f2 = (float) $i0;

        $b1 = $f3 cmpg $f2;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label3;

        $f0 = (float) $i0;

        $f3 = r1.<android.graphics.RectF: float right>;

        $f0 = $f0 - $f3;

        goto label3;
    }

    public void clear()
    {
        com.cooliris.media.ImageViewTouchBase r0;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageBitmapResetBase(android.graphics.Bitmap,boolean)>(null, 1);

        return;
    }

    protected android.graphics.Matrix getImageViewMatrix()
    {
        com.cooliris.media.ImageViewTouchBase r0;
        android.graphics.Matrix $r1, $r2;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mDisplayMatrix>;

        $r2 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mBaseMatrix>;

        virtualinvoke $r1.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r2);

        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mDisplayMatrix>;

        $r2 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix>;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r2);

        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mDisplayMatrix>;

        return $r1;
    }

    protected float getScale()
    {
        com.cooliris.media.ImageViewTouchBase r0;
        float $f0;
        android.graphics.Matrix $r1;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix>;

        $f0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: float getScale(android.graphics.Matrix)>($r1);

        return $f0;
    }

    protected float getScale(android.graphics.Matrix)
    {
        com.cooliris.media.ImageViewTouchBase r0;
        float $f0;
        android.graphics.Matrix $r1;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 := @parameter0: android.graphics.Matrix;

        $f0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: float getValue(android.graphics.Matrix,int)>($r1, 0);

        return $f0;
    }

    protected float getValue(android.graphics.Matrix, int)
    {
        com.cooliris.media.ImageViewTouchBase r0;
        int $i0;
        float $f0;
        float[] $r2;
        android.graphics.Matrix $r1;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 := @parameter0: android.graphics.Matrix;

        $i0 := @parameter1: int;

        $r2 = r0.<com.cooliris.media.ImageViewTouchBase: float[] mMatrixValues>;

        virtualinvoke $r1.<android.graphics.Matrix: void getValues(float[])>($r2);

        $r2 = r0.<com.cooliris.media.ImageViewTouchBase: float[] mMatrixValues>;

        $f0 = $r2[0];

        return $f0;
    }

    protected float maxZoom()
    {
        com.cooliris.media.RotateBitmap $r1;
        com.cooliris.media.ImageViewTouchBase r0;
        android.graphics.Bitmap $r2;
        int $i0;
        float f0, f1, $f2;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $r2 = virtualinvoke $r1.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        if $r2 != null goto label1;

        return 1.0F;

     label1:
        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $i0 = virtualinvoke $r1.<com.cooliris.media.RotateBitmap: int getWidth()>();

        f1 = (float) $i0;

        $i0 = r0.<com.cooliris.media.ImageViewTouchBase: int mThisWidth>;

        f0 = (float) $i0;

        f1 = f1 / f0;

        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $i0 = virtualinvoke $r1.<com.cooliris.media.RotateBitmap: int getHeight()>();

        f0 = (float) $i0;

        $i0 = r0.<com.cooliris.media.ImageViewTouchBase: int mThisHeight>;

        $f2 = (float) $i0;

        f0 = f0 / $f2;

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0);

        f1 = f1 * 4.0F;

        return f1;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.cooliris.media.ImageViewTouchBase r0;
        android.view.KeyEvent $r1;
        byte $b1;
        int $i0, $i2;
        float $f0;
        boolean $z0;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        if $i0 != 4 goto label1;

        $f0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: float getScale()>();

        $b1 = $f0 cmpl 1.0F;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void zoomTo(float)>(1.0F);

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.widget.ImageView: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        java.lang.Runnable r1;
        com.cooliris.media.RotateBitmap $r3;
        com.cooliris.media.ImageViewTouchBase r0;
        android.graphics.Bitmap $r4;
        int $i0, $i1, $i2, $i3;
        android.graphics.Matrix $r2;
        boolean $z0;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.ImageView: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $i0 = $i2 - $i0;

        r0.<com.cooliris.media.ImageViewTouchBase: int mThisWidth> = $i0;

        $i0 = $i3 - $i1;

        r0.<com.cooliris.media.ImageViewTouchBase: int mThisHeight> = $i0;

        r1 = r0.<com.cooliris.media.ImageViewTouchBase: java.lang.Runnable mOnLayoutRunnable>;

        if r1 == null goto label1;

        r0.<com.cooliris.media.ImageViewTouchBase: java.lang.Runnable mOnLayoutRunnable> = null;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label1:
        $r3 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $r4 = virtualinvoke $r3.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        if $r4 == null goto label2;

        $r3 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $r2 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mBaseMatrix>;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void getProperBaseMatrix(com.cooliris.media.RotateBitmap,android.graphics.Matrix)>($r3, $r2);

        $r2 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix getImageViewMatrix()>();

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageMatrix(android.graphics.Matrix)>($r2);

     label2:
        return;
    }

    protected void panBy(float, float)
    {
        com.cooliris.media.ImageViewTouchBase r0;
        float $f0, $f1;
        android.graphics.Matrix $r1;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void postTranslate(float,float)>($f0, $f1);

        $r1 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix getImageViewMatrix()>();

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageMatrix(android.graphics.Matrix)>($r1);

        return;
    }

    protected void postTranslate(float, float)
    {
        com.cooliris.media.ImageViewTouchBase r0;
        float $f0, $f1;
        android.graphics.Matrix $r1;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix>;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

        return;
    }

    public void setImageBitmap(android.graphics.Bitmap)
    {
        com.cooliris.media.ImageViewTouchBase r0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageBitmap(android.graphics.Bitmap,int)>($r1, 0);

        return;
    }

    public void setImageBitmapResetBase(android.graphics.Bitmap, boolean)
    {
        com.cooliris.media.RotateBitmap $r2;
        com.cooliris.media.ImageViewTouchBase r0;
        android.graphics.Bitmap $r1;
        boolean $z0;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 := @parameter0: android.graphics.Bitmap;

        $z0 := @parameter1: boolean;

        $r2 = new com.cooliris.media.RotateBitmap;

        specialinvoke $r2.<com.cooliris.media.RotateBitmap: void <init>(android.graphics.Bitmap)>($r1);

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageRotateBitmapResetBase(com.cooliris.media.RotateBitmap,boolean)>($r2, 1);

        return;
    }

    public void setImageRotateBitmapResetBase(com.cooliris.media.RotateBitmap, boolean)
    {
        com.cooliris.media.ImageViewTouchBase$1 $r2;
        com.cooliris.media.RotateBitmap $r1;
        com.cooliris.media.ImageViewTouchBase r0;
        android.graphics.Bitmap $r3;
        int $i0;
        float $f0;
        android.graphics.Matrix $r4;
        boolean $z0;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 := @parameter0: com.cooliris.media.RotateBitmap;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getWidth()>();

        if $i0 > 0 goto label1;

        $r2 = new com.cooliris.media.ImageViewTouchBase$1;

        specialinvoke $r2.<com.cooliris.media.ImageViewTouchBase$1: void <init>(com.cooliris.media.ImageViewTouchBase,com.cooliris.media.RotateBitmap,boolean)>(r0, $r1, $z0);

        r0.<com.cooliris.media.ImageViewTouchBase: java.lang.Runnable mOnLayoutRunnable> = $r2;

        return;

     label1:
        $r3 = virtualinvoke $r1.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        if $r3 == null goto label4;

        $r4 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mBaseMatrix>;

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void getProperBaseMatrix(com.cooliris.media.RotateBitmap,android.graphics.Matrix)>($r1, $r4);

        $r3 = virtualinvoke $r1.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        $i0 = virtualinvoke $r1.<com.cooliris.media.RotateBitmap: int getRotation()>();

        specialinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageBitmap(android.graphics.Bitmap,int)>($r3, $i0);

     label2:
        if $z0 == 0 goto label3;

        $r4 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: void reset()>();

     label3:
        $r4 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix getImageViewMatrix()>();

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageMatrix(android.graphics.Matrix)>($r4);

        $f0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: float maxZoom()>();

        r0.<com.cooliris.media.ImageViewTouchBase: float mMaxZoom> = $f0;

        return;

     label4:
        $r4 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mBaseMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: void reset()>();

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageBitmap(android.graphics.Bitmap)>(null);

        goto label2;
    }

    public void setRecycler(com.cooliris.media.ImageViewTouchBase$Recycler)
    {
        com.cooliris.media.ImageViewTouchBase r0;
        com.cooliris.media.ImageViewTouchBase$Recycler $r1;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $r1 := @parameter0: com.cooliris.media.ImageViewTouchBase$Recycler;

        r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.ImageViewTouchBase$Recycler mRecycler> = $r1;

        return;
    }

    protected void zoomIn()
    {
        com.cooliris.media.ImageViewTouchBase r0;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void zoomIn(float)>(1.25F);

        return;
    }

    protected void zoomIn(float)
    {
        com.cooliris.media.RotateBitmap $r1;
        com.cooliris.media.ImageViewTouchBase r0;
        byte $b0;
        android.graphics.Bitmap $r2;
        int $i1;
        float $f0, f1, f2;
        android.graphics.Matrix $r3;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $f0 := @parameter0: float;

        f2 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: float getScale()>();

        f1 = r0.<com.cooliris.media.ImageViewTouchBase: float mMaxZoom>;

        $b0 = f2 cmpl f1;

        $i1 = (int) $b0;

        if $i1 < 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $r2 = virtualinvoke $r1.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        if $r2 == null goto label2;

        $i1 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getWidth()>();

        f1 = (float) $i1;

        f1 = f1 / 2.0F;

        $i1 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getHeight()>();

        f2 = (float) $i1;

        f2 = f2 / 2.0F;

        $r3 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean postScale(float,float,float,float)>($f0, $f0, f1, f2);

        $r3 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix getImageViewMatrix()>();

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageMatrix(android.graphics.Matrix)>($r3);

     label2:
        return;
    }

    protected void zoomOut()
    {
        com.cooliris.media.ImageViewTouchBase r0;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void zoomOut(float)>(1.25F);

        return;
    }

    protected void zoomOut(float)
    {
        com.cooliris.media.RotateBitmap $r2;
        com.cooliris.media.ImageViewTouchBase r0;
        byte $b1;
        android.graphics.Bitmap $r3;
        int $i0;
        float $f0, f1, f2, $f3, $f4;
        android.graphics.Matrix r1, $r4, $r5;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $f0 := @parameter0: float;

        $r2 = r0.<com.cooliris.media.ImageViewTouchBase: com.cooliris.media.RotateBitmap mBitmapDisplayed>;

        $r3 = virtualinvoke $r2.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap getBitmap()>();

        if $r3 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getWidth()>();

        f1 = (float) $i0;

        f1 = f1 / 2.0F;

        $i0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getHeight()>();

        f2 = (float) $i0;

        f2 = f2 / 2.0F;

        $r5 = new android.graphics.Matrix;

        r1 = $r5;

        $r4 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix>;

        specialinvoke $r5.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r4);

        $f3 = 1.0F / $f0;

        $f4 = 1.0F / $f0;

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float,float,float)>($f3, $f4, f1, f2);

        $f3 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: float getScale(android.graphics.Matrix)>(r1);

        $b1 = $f3 cmpg 1.0F;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label3;

        r1 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix>;

        virtualinvoke r1.<android.graphics.Matrix: void setScale(float,float,float,float)>(1.0F, 1.0F, f1, f2);

     label2:
        r1 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix getImageViewMatrix()>();

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageMatrix(android.graphics.Matrix)>(r1);

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void center(boolean,boolean)>(1, 1);

        return;

     label3:
        r1 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix>;

        $f3 = 1.0F / $f0;

        $f0 = 1.0F / $f0;

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float,float,float)>($f3, $f0, f1, f2);

        goto label2;
    }

    protected void zoomTo(float)
    {
        com.cooliris.media.ImageViewTouchBase r0;
        int $i0;
        float $f0, f1, f2;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $f0 := @parameter0: float;

        $i0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getWidth()>();

        f1 = (float) $i0;

        f1 = f1 / 2.0F;

        $i0 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: int getHeight()>();

        f2 = (float) $i0;

        f2 = f2 / 2.0F;

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void zoomTo(float,float,float)>($f0, f1, f2);

        return;
    }

    protected void zoomTo(float, float, float)
    {
        com.cooliris.media.ImageViewTouchBase r0;
        byte $b0;
        int $i1;
        float $f0, $f1, f2, $f3;
        android.graphics.Matrix $r1;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        f2 := @parameter0: float;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f3 = r0.<com.cooliris.media.ImageViewTouchBase: float mMaxZoom>;

        $b0 = f2 cmpl $f3;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        f2 = r0.<com.cooliris.media.ImageViewTouchBase: float mMaxZoom>;

     label1:
        $f3 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: float getScale()>();

        f2 = f2 / $f3;

        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix mSuppMatrix>;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postScale(float,float,float,float)>(f2, f2, $f0, $f1);

        $r1 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: android.graphics.Matrix getImageViewMatrix()>();

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void setImageMatrix(android.graphics.Matrix)>($r1);

        virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: void center(boolean,boolean)>(1, 1);

        return;
    }

    protected void zoomTo(float, float, float, float)
    {
        com.cooliris.media.ImageViewTouchBase$2 $r2;
        long $l0;
        com.cooliris.media.ImageViewTouchBase r0;
        android.os.Handler $r1;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: com.cooliris.media.ImageViewTouchBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $f4 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: float getScale()>();

        $f0 = $f0 - $f4;

        $f0 = $f0 / $f3;

        $f4 = virtualinvoke r0.<com.cooliris.media.ImageViewTouchBase: float getScale()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<com.cooliris.media.ImageViewTouchBase: android.os.Handler mHandler>;

        $r2 = new com.cooliris.media.ImageViewTouchBase$2;

        specialinvoke $r2.<com.cooliris.media.ImageViewTouchBase$2: void <init>(com.cooliris.media.ImageViewTouchBase,float,long,float,float,float,float)>(r0, $f3, $l0, $f4, $f0, $f1, $f2);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <com.cooliris.media.ImageViewTouchBase: java.lang.String TAG> = "ImageViewTouchBase";

        <com.cooliris.media.ImageViewTouchBase: float SCALE_RATE> = 1.25F;

        return;
    }
}
