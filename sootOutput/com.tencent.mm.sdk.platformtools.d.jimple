final class com.tencent.mm.sdk.platformtools.d extends java.lang.Object
{
    private static final java.text.SimpleDateFormat a;
    private static final byte[] b;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;
        byte[] $r1;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MM-dd HH:mm:ss SSS");

        <com.tencent.mm.sdk.platformtools.d: java.text.SimpleDateFormat a> = $r0;

        $r1 = newarray (byte)[8];

        $r1[0] = 4;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = -1;

        $r1[5] = -1;

        $r1[6] = -1;

        $r1[7] = 0;

        <com.tencent.mm.sdk.platformtools.d: byte[] b> = $r1;

        return;
    }

    public static void a(java.io.PrintStream, byte[], java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r14;
        byte[] $r1, $r13;
        javax.crypto.spec.DESKeySpec $r9;
        java.text.SimpleDateFormat $r5;
        long $l0;
        javax.crypto.Cipher $r12;
        javax.crypto.SecretKeyFactory $r10;
        java.lang.Long $r6;
        java.lang.StringBuffer $r4, $r8;
        int $i1;
        java.lang.String $r2, $r3, $r7;
        boolean $z0;
        java.io.PrintStream $r0;
        java.lang.Exception $r15;
        javax.crypto.SecretKey $r11;

        $r0 := @parameter0: java.io.PrintStream;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        if $r0 == null goto label13;

        $z0 = staticinvoke <com.tencent.mm.sdk.platformtools.o: boolean a(byte[])>($r1);

        if $z0 != 0 goto label13;

        $z0 = staticinvoke <com.tencent.mm.sdk.platformtools.o: boolean b(java.lang.String)>($r2);

        if $z0 != 0 goto label13;

        $z0 = staticinvoke <com.tencent.mm.sdk.platformtools.o: boolean b(java.lang.String)>($r3);

        if $z0 == 0 goto label01;

        return;

     label01:
        entermonitor $r0;

     label02:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = <com.tencent.mm.sdk.platformtools.d: java.text.SimpleDateFormat a>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.lang.Object)>($r6);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label03:
        $r9 = new javax.crypto.spec.DESKeySpec;

     label04:
        specialinvoke $r9.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r1);

        $r10 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("DES");

        $r11 = virtualinvoke $r10.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r9);

        $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES");

        virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r11);

        $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r1 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        $i1 = lengthof $r1;

        $r13 = staticinvoke <com.tencent.mm.a.b: byte[] a(int)>($i1);

        virtualinvoke $r0.<java.io.PrintStream: void write(byte[])>($r13);

        virtualinvoke $r0.<java.io.PrintStream: void write(byte[])>($r1);

     label05:
        $r1 = <com.tencent.mm.sdk.platformtools.d: byte[] b>;

     label06:
        virtualinvoke $r0.<java.io.PrintStream: void write(byte[])>($r1);

     label07:
        virtualinvoke $r0.<java.io.PrintStream: void flush()>();

        exitmonitor $r0;

     label08:
        return;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r0;

        throw $r14;

     label10:
        $r15 := @caughtexception;

     label11:
        virtualinvoke $r15.<java.lang.Exception: void printStackTrace()>();

     label12:
        goto label07;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Throwable from label03 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
    }
}
