public class proguard.classfile.constant.visitor.AllConstantVisitor extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor
{
    private final proguard.classfile.constant.visitor.ConstantVisitor constantVisitor;

    public void <init>(proguard.classfile.constant.visitor.ConstantVisitor)
    {
        proguard.classfile.constant.visitor.AllConstantVisitor r0;
        proguard.classfile.constant.visitor.ConstantVisitor $r1;

        r0 := @this: proguard.classfile.constant.visitor.AllConstantVisitor;

        $r1 := @parameter0: proguard.classfile.constant.visitor.ConstantVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.constant.visitor.AllConstantVisitor: proguard.classfile.constant.visitor.ConstantVisitor constantVisitor> = $r1;

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.constant.visitor.AllConstantVisitor r0;
        proguard.classfile.LibraryClass $r1;

        r0 := @this: proguard.classfile.constant.visitor.AllConstantVisitor;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.constant.visitor.AllConstantVisitor r0;
        proguard.classfile.constant.visitor.ConstantVisitor $r2;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.constant.visitor.AllConstantVisitor;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = r0.<proguard.classfile.constant.visitor.AllConstantVisitor: proguard.classfile.constant.visitor.ConstantVisitor constantVisitor>;

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void constantPoolEntriesAccept(proguard.classfile.constant.visitor.ConstantVisitor)>($r2);

        return;
    }
}
