public class proguard.util.ListUtil extends java.lang.Object
{

    public void <init>()
    {
        proguard.util.ListUtil r0;

        r0 := @this: proguard.util.ListUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List commaSeparatedList(java.lang.String)
    {
        char $c2;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1, $i3;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r3 = new java.util.ArrayList;

        $r1 = $r3;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label2:
        $i0 = staticinvoke <proguard.util.ListUtil: int skipWhitespace(java.lang.String,int)>($r0, $i0);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label8;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if $i1 != 39 goto label5;

        $i1 = $i0 + 1;

        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(39, $i1);

        $i1 = $i3;

        if $i3 >= 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label3:
        $i0 = $i0 + 1;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = $i1;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(44, $i0);

        $i1 = $i3;

        if $i3 >= 0 goto label6;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label6:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label7;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

     label7:
        $i0 = $i1;

        goto label4;

     label8:
        return $r1;
    }

    public static java.lang.String commaSeparatedString(java.util.List, boolean)
    {
        java.util.List $r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        if $i0 <= 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label3:
        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.String) $r2;

        $r3 = staticinvoke <proguard.util.ListUtil: java.lang.String quotedString(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r1;
        java.lang.String[] $r0;
        java.util.List $r4;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r3;

        $r0 := @parameter0: java.lang.String[];

        $i0 = lengthof $r0;

        if $i0 != 1 goto label2;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Input string: [");

        $r3 = $r0[0];

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r3 = $r0[0];

        $r4 = staticinvoke <proguard.util.ListUtil: java.util.List commaSeparatedList(java.lang.String)>($r3);

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Resulting list:");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 >= $i1 goto label5;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Input list:");

        $i0 = 0;

     label3:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r3 = staticinvoke <proguard.util.ListUtil: java.lang.String commaSeparatedString(java.util.List,boolean)>($r4, 1);

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Resulting string: [");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label5:
        return;
    }

    private static java.lang.String quotedString(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        java.lang.StringBuffer $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(32);

        if $i0 >= 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(64);

        if $i0 >= 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(123);

        if $i0 >= 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(125);

        if $i0 >= 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(40);

        if $i0 >= 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(41);

        if $i0 >= 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(58);

        if $i0 >= 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(59);

        if $i0 >= 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(44);

        if $i0 < 0 goto label2;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        return $r0;
    }

    private static int skipWhitespace(java.lang.String, int)
    {
        int $i0, $i1;
        char $c2;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 == 0 goto label2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $i0;
    }
}
