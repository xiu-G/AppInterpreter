public class b.e.e extends java.lang.Object
{
    private final java.util.LinkedHashMap a;
    private int b;
    private int c;
    private int d;
    private int e;
    private int f;
    private int g;
    private int h;

    public void <init>(int)
    {
        java.util.LinkedHashMap $r1;
        int $i0;
        b.e.e r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: b.e.e;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 <= 0 goto label1;

        r0.<b.e.e: int c> = $i0;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(0, 0.75F, 1);

        r0.<b.e.e: java.util.LinkedHashMap a> = $r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");

        throw $r2;
    }

    private int e(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r3;
        b.e.e r0;

        r0 := @this: b.e.e;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        return 1;
    }

    protected java.lang.Object a(java.lang.Object)
    {
        java.lang.Object $r1;
        b.e.e r0;

        r0 := @this: b.e.e;

        $r1 := @parameter0: java.lang.Object;

        return null;
    }

    protected void b(boolean, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2, $r3;
        b.e.e r0;
        boolean $z0;

        r0 := @this: b.e.e;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: java.lang.Object;

        return;
    }

    public final java.lang.Object c(java.lang.Object)
    {
        java.lang.Throwable $r5, $r6;
        b.e.e r0;
        java.lang.NullPointerException $r7;
        java.util.LinkedHashMap $r2;
        int $i0;
        java.lang.Object $r1, $r3, $r4;

        r0 := @this: b.e.e;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label17;

        entermonitor r0;

     label01:
        $r2 = r0.<b.e.e: java.util.LinkedHashMap a>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 == null goto label03;

        $i0 = r0.<b.e.e: int g>;

        $i0 = $i0 + 1;

        r0.<b.e.e: int g> = $i0;

        exitmonitor r0;

     label02:
        return $r3;

     label03:
        $i0 = r0.<b.e.e: int h>;

        $i0 = $i0 + 1;

        r0.<b.e.e: int h> = $i0;

        exitmonitor r0;

     label04:
        $r3 = virtualinvoke r0.<b.e.e: java.lang.Object a(java.lang.Object)>($r1);

        if $r3 != null goto label05;

        return null;

     label05:
        entermonitor r0;

     label06:
        $i0 = r0.<b.e.e: int e>;

        $i0 = $i0 + 1;

        r0.<b.e.e: int e> = $i0;

        $r2 = r0.<b.e.e: java.util.LinkedHashMap a>;

        $r4 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        if $r4 == null goto label07;

        $r2 = r0.<b.e.e: java.util.LinkedHashMap a>;

        virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        goto label08;

     label07:
        $i0 = r0.<b.e.e: int b>;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_Throwable_0()>();

        $i0 = $i0 + 1;

        r0.<b.e.e: int b> = $i0;

     label08:
        exitmonitor r0;

     label09:
        if $r4 == null goto label10;

        virtualinvoke r0.<b.e.e: void b(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, $r1, $r3, $r4);

        return $r4;

     label10:
        $i0 = r0.<b.e.e: int c>;

        virtualinvoke r0.<b.e.e: void g(int)>($i0);

        return $r3;

     label11:
        $r5 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r5;

     label14:
        $r6 := @caughtexception;

     label15:
        exitmonitor r0;

     label16:
        throw $r6;

     label17:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label09 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public final java.lang.Object d(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r5;
        b.e.e r0;
        java.lang.NullPointerException $r6;
        java.util.LinkedHashMap $r3;
        int $i0;
        java.lang.Object $r1, $r2, $r4;

        r0 := @this: b.e.e;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == null goto label8;

        if $r2 == null goto label8;

        entermonitor r0;

     label1:
        $i0 = r0.<b.e.e: int d>;

        $i0 = $i0 + 1;

        r0.<b.e.e: int d> = $i0;

        $i0 = r0.<b.e.e: int b>;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_Throwable_0()>();

        $i0 = $i0 + 1;

        r0.<b.e.e: int b> = $i0;

        $r3 = r0.<b.e.e: java.util.LinkedHashMap a>;

        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $r4 == null goto label2;

        $i0 = r0.<b.e.e: int b>;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_Throwable_0()>();

        $i0 = $i0 - 1;

        r0.<b.e.e: int b> = $i0;

     label2:
        exitmonitor r0;

     label3:
        if $r4 == null goto label4;

        virtualinvoke r0.<b.e.e: void b(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, $r1, $r4, $r2);

     label4:
        $i0 = r0.<b.e.e: int c>;

        virtualinvoke r0.<b.e.e: void g(int)>($i0);

        return $r4;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r5;

     label8:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null || value == null");

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    protected int f(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        b.e.e r0;

        r0 := @this: b.e.e;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        return 1;
    }

    public void g(int)
    {
        java.lang.Throwable $r11;
        java.lang.IllegalStateException $r7;
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        b.e.e r0;
        java.util.LinkedHashMap $r1;
        int $i0, $i1;
        java.lang.Object $r4, $r6;
        java.lang.StringBuilder $r8;
        java.lang.Class $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: b.e.e;

        $i0 := @parameter0: int;

     label1:
        entermonitor r0;

     label2:
        $i1 = r0.<b.e.e: int b>;

        if $i1 < 0 goto label7;

        $r1 = r0.<b.e.e: java.util.LinkedHashMap a>;

        $z0 = virtualinvoke $r1.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $i1 = r0.<b.e.e: int b>;

        if $i1 != 0 goto label7;

     label3:
        $i1 = r0.<b.e.e: int b>;

        if $i1 <= $i0 goto label5;

        $r1 = r0.<b.e.e: java.util.LinkedHashMap a>;

        $z0 = virtualinvoke $r1.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r1 = r0.<b.e.e: java.util.LinkedHashMap a>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = r0.<b.e.e: java.util.LinkedHashMap a>;

        virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r4);

        $i1 = r0.<b.e.e: int b>;

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_Throwable_0()>();

        $i1 = $i1 - 1;

        r0.<b.e.e: int b> = $i1;

        $i1 = r0.<b.e.e: int f>;

        $i1 = $i1 + 1;

        r0.<b.e.e: int f> = $i1;

        exitmonitor r0;

     label4:
        virtualinvoke r0.<b.e.e: void b(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(1, $r4, $r6, null);

        goto label1;

     label5:
        exitmonitor r0;

     label6:
        return;

     label7:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".sizeOf() is reporting inconsistent results!");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label8:
        $r11 := @caughtexception;

        exitmonitor r0;

     label9:
        throw $r11;

        catch java.lang.Throwable from label2 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label7 to label9 with label8;
    }

    public final java.lang.String toString()
    {
        java.lang.Throwable $r5;
        java.lang.Object[] $r2;
        b.e.e r0;
        java.lang.Integer $r3;
        java.util.Locale $r1;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: b.e.e;

        entermonitor r0;

     label1:
        $i0 = r0.<b.e.e: int g>;

        $i1 = r0.<b.e.e: int h>;

        $i0 = $i0 + $i1;

        if $i0 == 0 goto label2;

        $i1 = r0.<b.e.e: int g>;

        $i1 = $i1 * 100;

        $i0 = $i1 / $i0;

        goto label3;

     label2:
        $i0 = 0;

     label3:
        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = newarray (java.lang.Object)[4];

        $i1 = r0.<b.e.e: int c>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2[0] = $r3;

        $i1 = r0.<b.e.e: int g>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2[1] = $r3;

        $i1 = r0.<b.e.e: int h>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2[2] = $r3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[3] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]", $r2);

     label4:
        exitmonitor r0;

        return $r4;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
    }
}
