final class com.google.gson.DefaultConstructorAllocator extends java.lang.Object
{
    private static final java.lang.reflect.Constructor NULL_CONSTRUCTOR;
    private final com.google.gson.Cache constructorCache;

    static void <clinit>()
    {
        java.lang.reflect.Constructor $r0;

        $r0 = staticinvoke <com.google.gson.DefaultConstructorAllocator: java.lang.reflect.Constructor createNullConstructor()>();

        <com.google.gson.DefaultConstructorAllocator: java.lang.reflect.Constructor NULL_CONSTRUCTOR> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.gson.DefaultConstructorAllocator r0;

        r0 := @this: com.google.gson.DefaultConstructorAllocator;

        specialinvoke r0.<com.google.gson.DefaultConstructorAllocator: void <init>(int)>(200);

        return;
    }

    public void <init>(int)
    {
        int $i0;
        com.google.gson.DefaultConstructorAllocator r0;
        com.google.gson.LruCache $r1;

        r0 := @this: com.google.gson.DefaultConstructorAllocator;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.gson.LruCache;

        specialinvoke $r1.<com.google.gson.LruCache: void <init>(int)>($i0);

        r0.<com.google.gson.DefaultConstructorAllocator: com.google.gson.Cache constructorCache> = $r1;

        return;
    }

    private static final java.lang.reflect.Constructor createNullConstructor()
    {
        java.lang.reflect.Constructor $r1;
        java.lang.Exception r0;

     label1:
        $r1 = staticinvoke <com.google.gson.DefaultConstructorAllocator: java.lang.reflect.Constructor getNoArgsConstructor(java.lang.Class)>(class "Lcom/google/gson/DefaultConstructorAllocator$Null;");

     label2:
        return $r1;

     label3:
        r0 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.reflect.Constructor findConstructor(java.lang.Class)
    {
        com.google.gson.Cache $r3;
        com.google.gson.DefaultConstructorAllocator r0;
        java.lang.Class r1;
        java.lang.Object $r4;
        java.lang.reflect.Constructor $r2, $r5;

        r0 := @this: com.google.gson.DefaultConstructorAllocator;

        r1 := @parameter0: java.lang.Class;

        $r3 = r0.<com.google.gson.DefaultConstructorAllocator: com.google.gson.Cache constructorCache>;

        $r4 = interfaceinvoke $r3.<com.google.gson.Cache: java.lang.Object getElement(java.lang.Object)>(r1);

        $r2 = (java.lang.reflect.Constructor) $r4;

        if $r2 == null goto label1;

        $r5 = <com.google.gson.DefaultConstructorAllocator: java.lang.reflect.Constructor NULL_CONSTRUCTOR>;

        if $r2 != $r5 goto label4;

        return null;

     label1:
        $r5 = staticinvoke <com.google.gson.DefaultConstructorAllocator: java.lang.reflect.Constructor getNoArgsConstructor(java.lang.Class)>(r1);

        if $r5 == null goto label3;

        $r3 = r0.<com.google.gson.DefaultConstructorAllocator: com.google.gson.Cache constructorCache>;

        interfaceinvoke $r3.<com.google.gson.Cache: void addElement(java.lang.Object,java.lang.Object)>(r1, $r5);

     label2:
        return $r5;

     label3:
        $r3 = r0.<com.google.gson.DefaultConstructorAllocator: com.google.gson.Cache constructorCache>;

        $r2 = <com.google.gson.DefaultConstructorAllocator: java.lang.reflect.Constructor NULL_CONSTRUCTOR>;

        interfaceinvoke $r3.<com.google.gson.Cache: void addElement(java.lang.Object,java.lang.Object)>(r1, $r2);

        goto label2;

     label4:
        return $r2;
    }

    private static java.lang.reflect.Constructor getNoArgsConstructor(java.lang.Class)
    {
        java.lang.Class[] $r3;
        java.lang.Class r0;
        java.lang.reflect.Constructor $r2;
        java.lang.Exception r1;

        r0 := @parameter0: java.lang.Class;

        $r3 = newarray (java.lang.Class)[0];

     label1:
        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r3);

        virtualinvoke $r2.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    final boolean isInCache(java.lang.Class)
    {
        com.google.gson.Cache $r3;
        com.google.gson.DefaultConstructorAllocator r0;
        java.lang.Class r1;
        java.lang.Object $r2;

        r0 := @this: com.google.gson.DefaultConstructorAllocator;

        r1 := @parameter0: java.lang.Class;

        $r3 = r0.<com.google.gson.DefaultConstructorAllocator: com.google.gson.Cache constructorCache>;

        $r2 = interfaceinvoke $r3.<com.google.gson.Cache: java.lang.Object getElement(java.lang.Object)>(r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object newInstance(java.lang.Class) throws java.lang.Exception
    {
        java.lang.Object[] $r3;
        com.google.gson.DefaultConstructorAllocator r0;
        java.lang.Class r1;
        java.lang.Object $r4;
        java.lang.reflect.Constructor $r2;

        r0 := @this: com.google.gson.DefaultConstructorAllocator;

        r1 := @parameter0: java.lang.Class;

        $r2 = specialinvoke r0.<com.google.gson.DefaultConstructorAllocator: java.lang.reflect.Constructor findConstructor(java.lang.Class)>(r1);

        if $r2 == null goto label1;

        $r3 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

        return $r4;

     label1:
        return null;
    }
}
