class com.google.tagmanager.protobuf.LiteralByteString extends com.google.tagmanager.protobuf.ByteString
{
    protected final byte[] bytes;
    private int hash;

    void <init>(byte[])
    {
        com.google.tagmanager.protobuf.LiteralByteString r0;
        byte[] $r1;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<com.google.tagmanager.protobuf.ByteString: void <init>()>();

        r0.<com.google.tagmanager.protobuf.LiteralByteString: int hash> = 0;

        r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes> = $r1;

        return;
    }

    static int hashCode(int, byte[], int, int)
    {
        byte[] $r0;
        byte $b2;
        int $i0, $i1, $i3, $i4, $i5;

        $i3 := @parameter0: int;

        $r0 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i4 = $i0;

     label1:
        $i5 = $i0 + $i1;

        if $i4 >= $i5 goto label2;

        $i3 = $i3 * 31;

        $b2 = $r0[$i4];

        $i5 = (int) $b2;

        $i3 = $i3 + $i5;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return $i3;
    }

    static int hashCode(byte[])
    {
        int $i0, $i1;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $i1 = lengthof $r0;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <com.google.tagmanager.protobuf.LiteralByteString: int hashCode(int,byte[],int,int)>($i1, $r0, 0, $i0);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return $i0;
    }

    public java.nio.ByteBuffer asReadOnlyByteBuffer()
    {
        byte[] $r1;
        int $i0, $i1;
        com.google.tagmanager.protobuf.LiteralByteString r0;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, $i0, $i1);

        $r2 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();

        return $r2;
    }

    public java.util.List asReadOnlyByteBufferList()
    {
        com.google.tagmanager.protobuf.LiteralByteString r0;
        java.nio.ByteBuffer $r2;
        java.util.ArrayList $r1;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1);

        $r2 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: java.nio.ByteBuffer asReadOnlyByteBuffer()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $r1;
    }

    public byte byteAt(int)
    {
        byte[] $r1;
        byte $b1;
        int $i0;
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $b1 = $r1[$i0];

        return $b1;
    }

    public void copyTo(java.nio.ByteBuffer)
    {
        byte[] $r2;
        int $i0, $i1;
        com.google.tagmanager.protobuf.LiteralByteString r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r2, $i0, $i1);

        return;
    }

    protected void copyToInternal(byte[], int, int, int)
    {
        byte[] $r1, $r2;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i1, $i2);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.tagmanager.protobuf.ByteString $r2;
        java.lang.IllegalArgumentException $r4;
        int $i0, $i1;
        com.google.tagmanager.protobuf.LiteralByteString r0, $r3;
        java.lang.Object $r1;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.tagmanager.protobuf.ByteString;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        $r2 = (com.google.tagmanager.protobuf.ByteString) $r1;

        $i1 = virtualinvoke $r2.<com.google.tagmanager.protobuf.ByteString: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        if $i0 != 0 goto label4;

        return 1;

     label4:
        $z0 = $r1 instanceof com.google.tagmanager.protobuf.LiteralByteString;

        if $z0 == 0 goto label5;

        $r3 = (com.google.tagmanager.protobuf.LiteralByteString) $r1;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        $z0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: boolean equalsRange(com.google.tagmanager.protobuf.LiteralByteString,int,int)>($r3, 0, $i0);

        return $z0;

     label5:
        $z0 = $r1 instanceof com.google.tagmanager.protobuf.RopeByteString;

        if $z0 == 0 goto label6;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z0;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Has a new type of ByteString been created? Found ");

        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r4;
    }

    boolean equalsRange(com.google.tagmanager.protobuf.LiteralByteString, int, int)
    {
        byte[] $r2, $r5;
        java.lang.IllegalArgumentException $r7;
        byte $b2, $b3;
        int $i0, $i1, $i4, $i5, $i6;
        com.google.tagmanager.protobuf.LiteralByteString r0, $r1;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r4;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 := @parameter0: com.google.tagmanager.protobuf.LiteralByteString;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i4 = virtualinvoke $r1.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        if $i1 <= $i4 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Length too large: ");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label1:
        $i4 = $i0 + $i1;

        $i5 = virtualinvoke $r1.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        if $i4 <= $i5 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ran off end of other: ");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i0 = virtualinvoke $r1.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label2:
        $r5 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $r2 = $r1.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i4 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = $i4 + $i1;

        $i4 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i5 = virtualinvoke $r1.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i0 = $i5 + $i0;

     label3:
        if $i4 >= $i1 goto label5;

        $b2 = $r5[$i4];

        $b3 = $r2[$i0];

        $i5 = (int) $b2;

        $i6 = (int) $b3;

        if $i5 == $i6 goto label4;

        return 0;

     label4:
        $i4 = $i4 + 1;

        $i0 = $i0 + 1;

        goto label3;

     label5:
        return 1;
    }

    protected int getOffsetIntoBytes()
    {
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        return 0;
    }

    protected int getTreeDepth()
    {
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        return 0;
    }

    public int hashCode()
    {
        int $i0, $i1;
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $i0 = r0.<com.google.tagmanager.protobuf.LiteralByteString: int hash>;

        if $i0 != 0 goto label2;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int partialHash(int,int,int)>($i0, 0, $i0);

        $i1 = $i0;

        if $i0 != 0 goto label1;

        $i1 = 1;

     label1:
        r0.<com.google.tagmanager.protobuf.LiteralByteString: int hash> = $i1;

        return $i1;

     label2:
        return $i0;
    }

    protected boolean isBalanced()
    {
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        return 1;
    }

    public boolean isValidUtf8()
    {
        byte[] $r1;
        int $i0, $i1;
        com.google.tagmanager.protobuf.LiteralByteString r0;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $r1 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        $i1 = $i1 + $i0;

        $z0 = staticinvoke <com.google.tagmanager.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>($r1, $i0, $i1);

        return $z0;
    }

    public com.google.tagmanager.protobuf.ByteString$ByteIterator iterator()
    {
        com.google.tagmanager.protobuf.LiteralByteString r0;
        com.google.tagmanager.protobuf.LiteralByteString$LiteralByteIterator $r1;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 = new com.google.tagmanager.protobuf.LiteralByteString$LiteralByteIterator;

        specialinvoke $r1.<com.google.tagmanager.protobuf.LiteralByteString$LiteralByteIterator: void <init>(com.google.tagmanager.protobuf.LiteralByteString,com.google.tagmanager.protobuf.LiteralByteString$1)>(r0, null);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.tagmanager.protobuf.LiteralByteString r0;
        com.google.tagmanager.protobuf.ByteString$ByteIterator $r1;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: com.google.tagmanager.protobuf.ByteString$ByteIterator iterator()>();

        return $r1;
    }

    public com.google.tagmanager.protobuf.CodedInputStream newCodedInput()
    {
        com.google.tagmanager.protobuf.CodedInputStream $r1;
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 = staticinvoke <com.google.tagmanager.protobuf.CodedInputStream: com.google.tagmanager.protobuf.CodedInputStream newInstance(com.google.tagmanager.protobuf.LiteralByteString)>(r0);

        return $r1;
    }

    public java.io.InputStream newInput()
    {
        byte[] $r2;
        java.io.ByteArrayInputStream $r1;
        int $i0, $i1;
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r2, $i0, $i1);

        return $r1;
    }

    protected int partialHash(int, int, int)
    {
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i3 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = $i3 + $i1;

        $i0 = staticinvoke <com.google.tagmanager.protobuf.LiteralByteString: int hashCode(int,byte[],int,int)>($i0, $r1, $i1, $i2);

        return $i0;
    }

    protected int partialIsValidUtf8(int, int, int)
    {
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = $i3 + $i1;

        $r1 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i2 = $i1 + $i2;

        $i0 = staticinvoke <com.google.tagmanager.protobuf.Utf8: int partialIsValidUtf8(int,byte[],int,int)>($i0, $r1, $i1, $i2);

        return $i0;
    }

    protected int peekCachedHashCode()
    {
        int i0;
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        i0 = r0.<com.google.tagmanager.protobuf.LiteralByteString: int hash>;

        return i0;
    }

    public int size()
    {
        int $i0;
        com.google.tagmanager.protobuf.LiteralByteString r0;
        byte[] $r1;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public com.google.tagmanager.protobuf.ByteString substring(int, int)
    {
        com.google.tagmanager.protobuf.ByteString r6;
        java.lang.IndexOutOfBoundsException $r1;
        com.google.tagmanager.protobuf.BoundedByteString $r4;
        byte[] $r5;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.LiteralByteString r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Beginning index: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $i2 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        if $i1 <= $i2 goto label2;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("End index: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $i2 = $i1 - $i0;

        if $i2 >= 0 goto label3;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Beginning index larger than ending index: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label3:
        if $i2 != 0 goto label4;

        r6 = <com.google.tagmanager.protobuf.ByteString: com.google.tagmanager.protobuf.ByteString EMPTY>;

        return r6;

     label4:
        $r4 = new com.google.tagmanager.protobuf.BoundedByteString;

        $r5 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i0 = $i1 + $i0;

        specialinvoke $r4.<com.google.tagmanager.protobuf.BoundedByteString: void <init>(byte[],int,int)>($r5, $i0, $i2);

        return $r4;
    }

    public java.lang.String toString(java.lang.String)
    {
        byte[] $r3;
        int $i0, $i1;
        com.google.tagmanager.protobuf.LiteralByteString r0;
        java.lang.String $r1, $r2;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.String;

        $r3 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int size()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r3, $i0, $i1, $r1);

        return $r2;
    }

    public void writeTo(java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        com.google.tagmanager.protobuf.LiteralByteString r0;
        byte[] $r2;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] toByteArray()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }

    void writeToInternal(java.io.OutputStream, int, int)
    {
        java.io.OutputStream $r1;
        byte[] $r2;
        int $i0, $i1, $i2;
        com.google.tagmanager.protobuf.LiteralByteString r0;

        r0 := @this: com.google.tagmanager.protobuf.LiteralByteString;

        $r1 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.google.tagmanager.protobuf.LiteralByteString: byte[] bytes>;

        $i2 = virtualinvoke r0.<com.google.tagmanager.protobuf.LiteralByteString: int getOffsetIntoBytes()>();

        $i0 = $i2 + $i0;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i0, $i1);

        return;
    }
}
