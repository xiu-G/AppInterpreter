public class com.parse.signpost.OAuth extends java.lang.Object
{
    public static final java.lang.String ENCODING;
    public static final java.lang.String FORM_ENCODED;
    public static final java.lang.String HTTP_AUTHORIZATION_HEADER;
    public static final java.lang.String OAUTH_CALLBACK;
    public static final java.lang.String OAUTH_CALLBACK_CONFIRMED;
    public static final java.lang.String OAUTH_CONSUMER_KEY;
    public static final java.lang.String OAUTH_NONCE;
    public static final java.lang.String OAUTH_SIGNATURE;
    public static final java.lang.String OAUTH_SIGNATURE_METHOD;
    public static final java.lang.String OAUTH_TIMESTAMP;
    public static final java.lang.String OAUTH_TOKEN;
    public static final java.lang.String OAUTH_TOKEN_SECRET;
    public static final java.lang.String OAUTH_VERIFIER;
    public static final java.lang.String OAUTH_VERSION;
    public static final java.lang.String OUT_OF_BAND;
    public static final java.lang.String VERSION_1_0;
    private static final com.parse.gdata.PercentEscaper percentEncoder;

    static void <clinit>()
    {
        com.parse.gdata.PercentEscaper $r0;

        <com.parse.signpost.OAuth: java.lang.String VERSION_1_0> = "1.0";

        <com.parse.signpost.OAuth: java.lang.String OUT_OF_BAND> = "oob";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_VERSION> = "oauth_version";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_VERIFIER> = "oauth_verifier";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_TOKEN_SECRET> = "oauth_token_secret";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_TOKEN> = "oauth_token";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_TIMESTAMP> = "oauth_timestamp";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_SIGNATURE_METHOD> = "oauth_signature_method";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_SIGNATURE> = "oauth_signature";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_NONCE> = "oauth_nonce";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_CONSUMER_KEY> = "oauth_consumer_key";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_CALLBACK_CONFIRMED> = "oauth_callback_confirmed";

        <com.parse.signpost.OAuth: java.lang.String OAUTH_CALLBACK> = "oauth_callback";

        <com.parse.signpost.OAuth: java.lang.String HTTP_AUTHORIZATION_HEADER> = "Authorization";

        <com.parse.signpost.OAuth: java.lang.String FORM_ENCODED> = "application/x-www-form-urlencoded";

        <com.parse.signpost.OAuth: java.lang.String ENCODING> = "UTF-8";

        $r0 = new com.parse.gdata.PercentEscaper;

        specialinvoke $r0.<com.parse.gdata.PercentEscaper: void <init>(java.lang.String,boolean)>("-._~", 0);

        <com.parse.signpost.OAuth: com.parse.gdata.PercentEscaper percentEncoder> = $r0;

        return;
    }

    public void <init>()
    {
        com.parse.signpost.OAuth r0;

        r0 := @this: com.parse.signpost.OAuth;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String addQueryParameters(java.lang.String, java.util.Map)
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.String[] $r2;
        java.util.Map $r1;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r0, $r6;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $i0 = $i0 * 2;

        $r2 = newarray (java.lang.String)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $r2[$i1] = $r6;

        $i0 = $i1 + 1;

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r6 = (java.lang.String) $r5;

        $r2[$i0] = $r6;

        $i1 = $i1 + 2;

        goto label1;

     label2:
        $r0 = staticinvoke <com.parse.signpost.OAuth: java.lang.String addQueryParameters(java.lang.String,java.lang.String[])>($r0, $r2);

        return $r0;
    }

    public static transient java.lang.String addQueryParameters(java.lang.String, java.lang.String[])
    {
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String $r0, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("?");

        if $z0 == 0 goto label4;

        $r3 = "&";

     label1:
        $r2 = new java.lang.StringBuilder;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label5;

        if $i0 <= 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r0 = $r1[$i0];

        $r0 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i1 = $i0 + 1;

        $r0 = $r1[$i1];

        $r0 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $i0 = $i0 + 2;

        goto label2;

     label4:
        $r3 = "?";

        goto label1;

     label5:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static void debugOut(java.lang.String, java.lang.String)
    {
        java.io.PrintStream $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r0, $r1, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("debug");

        if $r2 == null goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("[SIGNPOST] ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r0);

     label1:
        return;
    }

    public static com.parse.signpost.http.HttpParameters decodeForm(java.io.InputStream)
    {
        com.parse.signpost.http.HttpParameters $r5;
        java.lang.StringBuilder $r3;
        java.io.BufferedReader $r1;
        java.lang.String $r4;
        java.io.InputStreamReader $r2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = new java.io.BufferedReader;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r2, 8192);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label1:
        if $r4 == null goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label1;

     label2:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <com.parse.signpost.OAuth: com.parse.signpost.http.HttpParameters decodeForm(java.lang.String)>($r4);

        return $r5;
    }

    public static com.parse.signpost.http.HttpParameters decodeForm(java.lang.String)
    {
        java.lang.String[] $r2;
        com.parse.signpost.http.HttpParameters $r1;
        int $i0, $i1, $i2;
        java.lang.String $r0, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.parse.signpost.http.HttpParameters;

        specialinvoke $r1.<com.parse.signpost.http.HttpParameters: void <init>()>();

        $z0 = staticinvoke <com.parse.signpost.OAuth: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\&");

        $i0 = lengthof $r2;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r3 = $r2[$i1];

        $i2 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(61);

        if $i2 >= 0 goto label4;

        $r0 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentDecode(java.lang.String)>($r3);

        $r3 = null;

     label3:
        virtualinvoke $r1.<com.parse.signpost.http.HttpParameters: java.lang.String put(java.lang.String,java.lang.String)>($r0, $r3);

        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r0 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r0 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentDecode(java.lang.String)>($r0);

        $i2 = $i2 + 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i2);

        $r3 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentDecode(java.lang.String)>($r3);

        goto label3;

     label5:
        return $r1;
    }

    public static java.lang.String formEncode(java.util.Collection)
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream $r3;
        java.util.Collection $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.Collection;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <com.parse.signpost.OAuth: void formEncode(java.util.Collection,java.io.OutputStream)>($r0, $r3);

        $r1 = new java.lang.String;

        $r2 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        return $r1;
    }

    public static void formEncode(java.util.Collection, java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        byte[] $r6;
        java.util.Map$Entry $r4;
        java.util.Iterator $r2;
        java.util.Collection $r0;
        java.lang.Object $r3;
        java.lang.String $r5;
        boolean $z0, $z1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.io.OutputStream;

        if $r0 == null goto label4;

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = 1;

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r3;

        if $z0 == 0 goto label3;

        $z0 = 0;

     label2:
        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = staticinvoke <com.parse.signpost.OAuth: java.lang.String safeToString(java.lang.Object)>($r3);

        $r5 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r5);

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r6);

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(61);

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = staticinvoke <com.parse.signpost.OAuth: java.lang.String safeToString(java.lang.Object)>($r3);

        $r5 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r5);

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r6);

        goto label1;

     label3:
        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(38);

        goto label2;

     label4:
        return;
    }

    public static boolean isEmpty(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static com.parse.signpost.http.HttpParameters oauthHeaderToParamsMap(java.lang.String)
    {
        java.lang.String[] $r2, $r3;
        com.parse.signpost.http.HttpParameters $r1;
        int $i0, $i1;
        java.lang.String $r0, $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.parse.signpost.http.HttpParameters;

        specialinvoke $r1.<com.parse.signpost.http.HttpParameters: void <init>()>();

        if $r0 == null goto label3;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("OAuth ");

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(6);

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof $r2;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r0 = $r2[$i1];

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $r0 = $r3[0];

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $r4 = $r3[1];

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "");

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r1.<com.parse.signpost.http.HttpParameters: java.lang.String put(java.lang.String,java.lang.String)>($r0, $r4);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return $r1;
    }

    public static java.lang.String percentDecode(java.lang.String)
    {
        java.lang.Throwable $r1;
        java.lang.String $r0;
        java.lang.RuntimeException $r2;
        java.io.UnsupportedEncodingException $r3;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return "";

     label1:
        $r0 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r0, "UTF-8");

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        $r3 = (java.io.UnsupportedEncodingException) $r1;

        $r0 = virtualinvoke $r3.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r0, $r1);

        throw $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String percentEncode(java.lang.String)
    {
        java.lang.String $r0;
        com.parse.gdata.PercentEscaper $r1;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return "";

     label1:
        $r1 = <com.parse.signpost.OAuth: com.parse.gdata.PercentEscaper percentEncoder>;

        $r0 = virtualinvoke $r1.<com.parse.gdata.PercentEscaper: java.lang.String escape(java.lang.String)>($r0);

        return $r0;
    }

    public static transient java.lang.String prepareOAuthHeader(java.lang.String[])
    {
        java.lang.String[] $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("OAuth ");

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label5;

        if $i0 <= 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r2 = $r0[$i0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("oauth_");

        if $z0 == 0 goto label4;

        $i1 = $i0 + 1;

        $r2 = $r0[$i1];

        $r2 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r2);

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = $r0[$i0];

        $r4 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i0 = $i0 + 2;

        goto label1;

     label4:
        $i1 = $i0 + 1;

        $r2 = $r0[$i1];

        goto label3;

     label5:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static final java.lang.String safeToString(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String toHeaderElement(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r0 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>("oauth_signature");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r0 = staticinvoke <com.parse.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.util.Map toMap(java.util.Collection)
    {
        java.util.Map$Entry $r4;
        java.util.Iterator $r2;
        java.util.Collection $r0;
        java.util.HashMap $r1;
        java.lang.Object $r3;
        java.lang.String $r5;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        if $r0 == null goto label2;

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r3;

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r3);

        goto label1;

     label2:
        return $r1;
    }
}
