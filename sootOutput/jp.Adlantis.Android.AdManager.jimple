public class jp.Adlantis.Android.AdManager extends java.lang.Object
{
    private static java.lang.String DEBUG_TASK;
    private long _adDisplayInterval;
    private long _adFetchInterval;
    private jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection;
    private jp.Adlantis.Android.AdlantisAd[] _ads;
    private jp.Adlantis.Android.AsyncImageLoader _asyncImageLoader;
    private boolean _connectionChangeReceiverRegistered;
    private java.lang.String _conversionTag;
    private boolean _conversionTagSent;
    private boolean _isDoingAdRequest;
    private java.lang.String _keywords;
    private java.lang.String _publisherID;
    public int adIndex;

    static void <clinit>()
    {
        <jp.Adlantis.Android.AdManager: java.lang.String DEBUG_TASK> = "AdManager";

        return;
    }

    protected void <init>()
    {
        jp.Adlantis.Android.AdLantisConnection $r3;
        jp.Adlantis.Android.GreeAdConnection $r2;
        jp.Adlantis.Android.AdManager r0;
        jp.Adlantis.Android.AsyncImageLoader $r1;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jp.Adlantis.Android.AdManager: int adIndex> = 0;

        r0.<jp.Adlantis.Android.AdManager: long _adFetchInterval> = 300000L;

        r0.<jp.Adlantis.Android.AdManager: long _adDisplayInterval> = 10000L;

        $r1 = new jp.Adlantis.Android.AsyncImageLoader;

        specialinvoke $r1.<jp.Adlantis.Android.AsyncImageLoader: void <init>()>();

        r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AsyncImageLoader _asyncImageLoader> = $r1;

        r0.<jp.Adlantis.Android.AdManager: java.lang.String _conversionTag> = null;

        r0.<jp.Adlantis.Android.AdManager: boolean _conversionTagSent> = 0;

        r0.<jp.Adlantis.Android.AdManager: boolean _connectionChangeReceiverRegistered> = 0;

        $z0 = staticinvoke <jp.Adlantis.Android.AdManager: boolean isGreeSdk()>();

        if $z0 == 0 goto label1;

        $r2 = new jp.Adlantis.Android.GreeAdConnection;

        specialinvoke $r2.<jp.Adlantis.Android.GreeAdConnection: void <init>()>();

        r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection> = $r2;

        return;

     label1:
        $r3 = new jp.Adlantis.Android.AdLantisConnection;

        specialinvoke $r3.<jp.Adlantis.Android.AdLantisConnection: void <init>()>();

        r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection> = $r3;

        return;
    }

    static jp.Adlantis.Android.AdNetworkConnection access$000(jp.Adlantis.Android.AdManager)
    {
        jp.Adlantis.Android.AdNetworkConnection r1;
        jp.Adlantis.Android.AdManager $r0;

        $r0 := @parameter0: jp.Adlantis.Android.AdManager;

        r1 = $r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection>;

        return r1;
    }

    static java.lang.String access$100()
    {
        java.lang.String r0;

        r0 = <jp.Adlantis.Android.AdManager: java.lang.String DEBUG_TASK>;

        return r0;
    }

    static boolean access$200(jp.Adlantis.Android.AdManager)
    {
        jp.Adlantis.Android.AdManager $r0;
        boolean z0;

        $r0 := @parameter0: jp.Adlantis.Android.AdManager;

        z0 = $r0.<jp.Adlantis.Android.AdManager: boolean _conversionTagSent>;

        return z0;
    }

    static boolean access$202(jp.Adlantis.Android.AdManager, boolean)
    {
        jp.Adlantis.Android.AdManager $r0;
        boolean $z0;

        $r0 := @parameter0: jp.Adlantis.Android.AdManager;

        $z0 := @parameter1: boolean;

        $r0.<jp.Adlantis.Android.AdManager: boolean _conversionTagSent> = 1;

        return 1;
    }

    static java.lang.String access$300(jp.Adlantis.Android.AdManager)
    {
        java.lang.String r1;
        jp.Adlantis.Android.AdManager $r0;

        $r0 := @parameter0: jp.Adlantis.Android.AdManager;

        r1 = $r0.<jp.Adlantis.Android.AdManager: java.lang.String _conversionTag>;

        return r1;
    }

    static boolean access$500(jp.Adlantis.Android.AdManager, android.content.Context, java.util.Map, jp.Adlantis.Android.AdManager$AdManagerCallback)
    {
        android.content.Context $r1;
        jp.Adlantis.Android.AdManager$AdManagerCallback $r3;
        java.util.Map $r2;
        jp.Adlantis.Android.AdManager $r0;
        boolean $z0;

        $r0 := @parameter0: jp.Adlantis.Android.AdManager;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: java.util.Map;

        $r3 := @parameter3: jp.Adlantis.Android.AdManager$AdManagerCallback;

        $z0 = specialinvoke $r0.<jp.Adlantis.Android.AdManager: boolean doAdRequest(android.content.Context,java.util.Map,jp.Adlantis.Android.AdManager$AdManagerCallback)>($r1, $r2, $r3);

        return $z0;
    }

    public static int adCountForOrientation(jp.Adlantis.Android.AdlantisAd[], int)
    {
        jp.Adlantis.Android.AdlantisAd[] $r0;
        int $i0;
        java.util.Vector $r1;

        $r0 := @parameter0: jp.Adlantis.Android.AdlantisAd[];

        $i0 := @parameter1: int;

        $r1 = staticinvoke <jp.Adlantis.Android.AdManager: java.util.Vector filteredAdsForOrientation(jp.Adlantis.Android.AdlantisAd[],int)>($r0, $i0);

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public static jp.Adlantis.Android.AdlantisAd[] adsFromJSONInputStream(java.io.InputStream) throws java.io.IOException
    {
        jp.Adlantis.Android.AdlantisAd[] $r1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <jp.Adlantis.Android.AdlantisAd: jp.Adlantis.Android.AdlantisAd[] adsFromJSONInputStream(java.io.InputStream)>($r0);

        return $r1;
    }

    public static java.lang.String byline()
    {
        boolean $z0;

        $z0 = staticinvoke <jp.Adlantis.Android.AdManager: boolean isGreeSdk()>();

        if $z0 == 0 goto label1;

        return "Ads by GREE";

     label1:
        return "Ads by AdLantis";
    }

    private boolean doAdRequest(android.content.Context, java.util.Map, jp.Adlantis.Android.AdManager$AdManagerCallback)
    {
        jp.Adlantis.Android.AdNetworkConnection $r4;
        java.lang.Throwable $r8, $r11;
        android.content.Context $r1;
        android.net.Uri $r5;
        jp.Adlantis.Android.AdlantisAd[] $r7;
        jp.Adlantis.Android.AdManager$AdManagerCallback $r3;
        java.util.Map $r2;
        int $i0;
        java.lang.String $r9, $r10;
        boolean $z0, $z1;
        java.net.MalformedURLException $r12;
        java.io.IOException $r13;
        jp.Adlantis.Android.AdManager r0;
        java.io.InputStream $r6;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.util.Map;

        $r3 := @parameter2: jp.Adlantis.Android.AdManager$AdManagerCallback;

        $z0 = 1;

        $z1 = r0.<jp.Adlantis.Android.AdManager: boolean _isDoingAdRequest>;

        if $z1 == 0 goto label1;

        return 0;

     label1:
        r0.<jp.Adlantis.Android.AdManager: boolean _isDoingAdRequest> = 1;

        $r4 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection>;

        $r5 = virtualinvoke $r4.<jp.Adlantis.Android.AdNetworkConnection: android.net.Uri adRequestUri(jp.Adlantis.Android.AdManager,android.content.Context,java.util.Map)>(r0, $r1, $r2);

     label2:
        $r6 = specialinvoke r0.<jp.Adlantis.Android.AdManager: java.io.InputStream inputStreamForUri(android.content.Context,android.net.Uri)>($r1, $r5);

        $r7 = staticinvoke <jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdlantisAd[] adsFromJSONInputStream(java.io.InputStream)>($r6);

     label3:
        r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdlantisAd[] _ads> = $r7;

        $r7 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdlantisAd[] _ads>;

        if $r7 == null goto label8;

        $r7 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdlantisAd[] _ads>;

        $i0 = lengthof $r7;

        if $i0 <= 0 goto label5;

     label4:
        r0.<jp.Adlantis.Android.AdManager: boolean _isDoingAdRequest> = 0;

        return $z0;

     label5:
        $z0 = 0;

        goto label4;

     label6:
        $r8 := @caughtexception;

        $r9 = <jp.Adlantis.Android.AdManager: java.lang.String DEBUG_TASK>;

        $r12 = (java.net.MalformedURLException) $r8;

        $r10 = virtualinvoke $r12.<java.net.MalformedURLException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r9, $r10);

        $z0 = 0;

        goto label4;

     label7:
        $r11 := @caughtexception;

        $r9 = <jp.Adlantis.Android.AdManager: java.lang.String DEBUG_TASK>;

        $r13 = (java.io.IOException) $r11;

        $r10 = virtualinvoke $r13.<java.io.IOException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r9, $r10);

     label8:
        $z0 = 0;

        goto label4;

        catch java.net.MalformedURLException from label2 to label3 with label6;
        catch java.io.IOException from label2 to label3 with label7;
    }

    public static java.util.Vector filteredAdsForOrientation(jp.Adlantis.Android.AdlantisAd[], int)
    {
        jp.Adlantis.Android.AdlantisAd[] $r0;
        java.util.Vector $r1;
        jp.Adlantis.Android.AdlantisAd $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: jp.Adlantis.Android.AdlantisAd[];

        $i0 := @parameter1: int;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        if $r0 != null goto label1;

        return $r1;

     label1:
        $i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label4;

        $r2 = $r0[$i1];

        $z0 = virtualinvoke $r2.<jp.Adlantis.Android.AdlantisAd: boolean hasAdForOrientation(int)>($i0);

        if $z0 == 0 goto label3;

        $r2 = $r0[$i1];

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return $r1;
    }

    private jp.Adlantis.Android.AdlantisAd[] filteredAdsForOrientation(int)
    {
        jp.Adlantis.Android.AdlantisAd[] $r1;
        java.lang.Throwable $r3;
        java.util.Vector $r2;
        int $i0;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdlantisAd[] _ads>;

        $r2 = staticinvoke <jp.Adlantis.Android.AdManager: java.util.Vector filteredAdsForOrientation(jp.Adlantis.Android.AdlantisAd[],int)>($r1, $i0);

        exitmonitor r0;

     label2:
        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $r1 = newarray (jp.Adlantis.Android.AdlantisAd)[$i0];

        virtualinvoke $r2.<java.util.Vector: void copyInto(java.lang.Object[])>($r1);

        return $r1;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static jp.Adlantis.Android.AdManager getInstance()
    {
        jp.Adlantis.Android.AdManager r0;

        r0 = <jp.Adlantis.Android.AdManager$AdManagerHolder: jp.Adlantis.Android.AdManager INSTANCE>;

        return r0;
    }

    private void handleHttpClickRequest(java.lang.String, jp.Adlantis.Android.AdManager$AdManagerRedirectUrlProcessedCallback)
    {
        jp.Adlantis.Android.AdNetworkConnection $r3;
        jp.Adlantis.Android.AdManager$AdManagerRedirectUrlProcessedCallback $r2;
        jp.Adlantis.Android.AdManager$6 $r9;
        jp.Adlantis.Android.AdManager$5 $r7;
        android.os.Looper $r8;
        jp.Adlantis.Android.AdManager$7 $r10;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r4, $r6;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: jp.Adlantis.Android.AdManager$AdManagerRedirectUrlProcessedCallback;

        $r3 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection>;

        $r1 = virtualinvoke $r3.<jp.Adlantis.Android.AdNetworkConnection: java.lang.String buildCompleteHttpUri(android.content.Context,java.lang.String)>(null, $r1);

        $r4 = <jp.Adlantis.Android.AdManager: java.lang.String DEBUG_TASK>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleHttpClickRequest=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r6);

        $r7 = new jp.Adlantis.Android.AdManager$5;

        $r8 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r7.<jp.Adlantis.Android.AdManager$5: void <init>(jp.Adlantis.Android.AdManager,android.os.Looper,jp.Adlantis.Android.AdManager$AdManagerRedirectUrlProcessedCallback)>(r0, $r8, $r2);

        $r9 = new jp.Adlantis.Android.AdManager$6;

        specialinvoke $r9.<jp.Adlantis.Android.AdManager$6: void <init>(jp.Adlantis.Android.AdManager,android.os.Handler)>(r0, $r7);

        $r10 = new jp.Adlantis.Android.AdManager$7;

        specialinvoke $r10.<jp.Adlantis.Android.AdManager$7: void <init>(jp.Adlantis.Android.AdManager,org.apache.http.impl.client.DefaultRedirectHandler,java.lang.String)>(r0, $r9, $r1);

        virtualinvoke $r10.<jp.Adlantis.Android.AdManager$7: void start()>();

        return;
    }

    private java.io.InputStream inputStreamForHttpUri(android.net.Uri, java.lang.String, java.lang.String) throws java.io.IOException, org.apache.http.client.ClientProtocolException
    {
        jp.Adlantis.Android.AdManager$1 $r4;
        android.net.Uri $r1;
        int $i0;
        org.apache.http.impl.client.AbstractHttpClient $r8;
        java.lang.String $r2, $r3, $r6, $r7;
        org.apache.http.HttpEntity $r14;
        org.apache.http.auth.UsernamePasswordCredentials $r11;
        org.apache.http.client.methods.HttpGet $r12;
        org.apache.http.auth.AuthScope $r10;
        org.apache.http.HttpResponse $r13;
        org.apache.http.client.CredentialsProvider $r9;
        org.apache.http.HttpHost $r5;
        jp.Adlantis.Android.AdManager r0;
        java.io.InputStream $r15;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new jp.Adlantis.Android.AdManager$1;

        specialinvoke $r4.<jp.Adlantis.Android.AdManager$1: void <init>(jp.Adlantis.Android.AdManager)>(r0);

        $r5 = new org.apache.http.HttpHost;

        $r6 = virtualinvoke $r1.<android.net.Uri: java.lang.String getHost()>();

        $i0 = virtualinvoke $r1.<android.net.Uri: int getPort()>();

        $r7 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        specialinvoke $r5.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r6, $i0, $r7);

        $r8 = virtualinvoke r0.<jp.Adlantis.Android.AdManager: org.apache.http.impl.client.AbstractHttpClient httpClientFactory()>();

        virtualinvoke $r8.<org.apache.http.impl.client.AbstractHttpClient: void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int)>($r4, 0);

        $r9 = virtualinvoke $r8.<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>();

        $r10 = new org.apache.http.auth.AuthScope;

        $r6 = virtualinvoke $r5.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i0 = virtualinvoke $r5.<org.apache.http.HttpHost: int getPort()>();

        specialinvoke $r10.<org.apache.http.auth.AuthScope: void <init>(java.lang.String,int)>($r6, $i0);

        $r11 = new org.apache.http.auth.UsernamePasswordCredentials;

        specialinvoke $r11.<org.apache.http.auth.UsernamePasswordCredentials: void <init>(java.lang.String,java.lang.String)>("3263", "0315");

        interfaceinvoke $r9.<org.apache.http.client.CredentialsProvider: void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials)>($r10, $r11);

        $r2 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        $r3 = <jp.Adlantis.Android.AdManager: java.lang.String DEBUG_TASK>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r2);

        $r12 = new org.apache.http.client.methods.HttpGet;

        specialinvoke $r12.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r2);

        $r13 = virtualinvoke $r8.<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r12);

        $r14 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r15 = interfaceinvoke $r14.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        return $r15;
    }

    private java.io.InputStream inputStreamForUri(android.content.Context, android.net.Uri) throws java.io.IOException, org.apache.http.client.ClientProtocolException
    {
        android.content.Context $r1;
        android.net.Uri $r2;
        java.lang.String $r3;
        jp.Adlantis.Android.AdManager r0;
        boolean $z0;
        java.io.InputStream $r4;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.net.Uri;

        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z0 == 0 goto label2;

     label1:
        $r4 = specialinvoke r0.<jp.Adlantis.Android.AdManager: java.io.InputStream inputStreamForHttpUri(android.net.Uri,java.lang.String,java.lang.String)>($r2, "3263", "0315");

        return $r4;

     label2:
        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 == 0 goto label3;

        $z0 = staticinvoke <jp.Adlantis.Android.ADLAssetUtils: boolean isAssetUri(android.net.Uri)>($r2);

        if $z0 == 0 goto label3;

        $r4 = staticinvoke <jp.Adlantis.Android.ADLAssetUtils: java.io.InputStream inputStreamFromAssetUri(android.content.Context,android.net.Uri)>($r1, $r2);

        return $r4;

     label3:
        return null;
    }

    public static boolean isGreeSdk()
    {
        return 0;
    }

    public static boolean isNetworkAvailable(android.content.Context)
    {
        android.net.ConnectivityManager $r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r4;
        java.lang.Exception $r5;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.String $r6, $r7;
        android.net.NetworkInfo[] $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        if $r2 != null goto label2;

     label1:
        return 0;

     label2:
        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>();

     label3:
        if $r3 == null goto label1;

        $i0 = 0;

     label4:
        $i1 = lengthof $r3;

     label5:
        if $i0 >= $i1 goto label1;

     label6:
        $r4 = $r3[$i0];

        $z0 = virtualinvoke $r4.<android.net.NetworkInfo: boolean isConnected()>();

     label7:
        if $z0 == 0 goto label8;

        return 1;

     label8:
        $i0 = $i0 + 1;

        goto label4;

     label9:
        $r5 := @caughtexception;

        $r6 = <jp.Adlantis.Android.AdManager: java.lang.String DEBUG_TASK>;

        $r7 = virtualinvoke $r5.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, $r7);

        goto label1;

        catch java.lang.Exception from label2 to label3 with label9;
        catch java.lang.Exception from label4 to label5 with label9;
        catch java.lang.Exception from label6 to label7 with label9;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] $r0;
        jp.Adlantis.Android.AdManager $r1;

        $r0 := @parameter0: java.lang.String[];

        $r1 = new jp.Adlantis.Android.AdManager;

        specialinvoke $r1.<jp.Adlantis.Android.AdManager: void <init>()>();

        virtualinvoke $r1.<jp.Adlantis.Android.AdManager: void connect(android.content.Context,java.util.Map,jp.Adlantis.Android.AdManager$AdManagerCallback)>(null, null, null);

        return;
    }

    public static java.lang.String sdkBuild()
    {
        return "531";
    }

    public static java.lang.String sdkFullVersion()
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r0;
        boolean $z0;

        $z0 = staticinvoke <jp.Adlantis.Android.AdManager: boolean isGreeSdk()>();

        if $z0 == 0 goto label2;

        $r0 = "GREE Ad SDK";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r0 = staticinvoke <jp.Adlantis.Android.AdManager: java.lang.String sdkVersion()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r0 = staticinvoke <jp.Adlantis.Android.AdManager: java.lang.String sdkBuild()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label2:
        $r0 = "AdLantis SDK";

        goto label1;
    }

    public static java.lang.String sdkVersion()
    {
        return "1.3.4";
    }

    private void sendConversionTagInternal(android.content.Context, java.lang.String, boolean)
    {
        android.content.Context $r1;
        jp.Adlantis.Android.AdManager$2 $r4;
        java.lang.String $r2, $r3;
        jp.Adlantis.Android.AdManager r0;
        boolean $z0, $z1;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = r0.<jp.Adlantis.Android.AdManager: java.lang.String _conversionTag>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label1;

        r0.<jp.Adlantis.Android.AdManager: java.lang.String _conversionTag> = $r2;

        r0.<jp.Adlantis.Android.AdManager: boolean _conversionTagSent> = 0;

     label1:
        $z1 = r0.<jp.Adlantis.Android.AdManager: boolean _conversionTagSent>;

        if $z1 != 0 goto label2;

        $r4 = new jp.Adlantis.Android.AdManager$2;

        specialinvoke $r4.<jp.Adlantis.Android.AdManager$2: void <init>(jp.Adlantis.Android.AdManager,android.content.Context,java.lang.String,boolean)>(r0, $r1, $r2, 0);

        virtualinvoke $r4.<jp.Adlantis.Android.AdManager$2: void start()>();

     label2:
        return;
    }

    protected static void setInstance(jp.Adlantis.Android.AdManager)
    {
        jp.Adlantis.Android.AdManager $r0;

        $r0 := @parameter0: jp.Adlantis.Android.AdManager;

        <jp.Adlantis.Android.AdManager$AdManagerHolder: jp.Adlantis.Android.AdManager INSTANCE> = $r0;

        return;
    }

    public int adCountForOrientation(int)
    {
        int $i0;
        jp.Adlantis.Android.AdlantisAd[] $r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $i0 := @parameter0: int;

        $r1 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdlantisAd[] _ads>;

        $i0 = staticinvoke <jp.Adlantis.Android.AdManager: int adCountForOrientation(jp.Adlantis.Android.AdlantisAd[],int)>($r1, $i0);

        return $i0;
    }

    public long adDisplayInterval()
    {
        long l0;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        l0 = r0.<jp.Adlantis.Android.AdManager: long _adDisplayInterval>;

        return l0;
    }

    public long adFetchInterval()
    {
        long l0;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        l0 = r0.<jp.Adlantis.Android.AdManager: long _adFetchInterval>;

        return l0;
    }

    public java.lang.String adTapUrlCompleteString(jp.Adlantis.Android.AdlantisAd)
    {
        jp.Adlantis.Android.AdNetworkConnection $r3;
        jp.Adlantis.Android.AdlantisAd $r1;
        java.lang.String $r2;
        jp.Adlantis.Android.AdManager r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: jp.Adlantis.Android.AdlantisAd;

        $r2 = virtualinvoke $r1.<jp.Adlantis.Android.AdlantisAd: java.lang.String tapUrlString()>();

        $z0 = virtualinvoke $r1.<jp.Adlantis.Android.AdlantisAd: boolean isWebLink()>();

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <jp.Adlantis.Android.ADLStringUtils: boolean isHttpUrl(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection>;

        $r2 = virtualinvoke $r3.<jp.Adlantis.Android.AdNetworkConnection: java.lang.String buildCompleteHttpUri(android.content.Context,java.lang.String)>(null, $r2);

     label1:
        return $r2;
    }

    public jp.Adlantis.Android.AdlantisAd[] adsForOrientation(int)
    {
        int $i0;
        jp.Adlantis.Android.AdlantisAd[] $r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $i0 := @parameter0: int;

        if $i0 != 2 goto label1;

        $r1 = specialinvoke r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdlantisAd[] filteredAdsForOrientation(int)>(2);

        return $r1;

     label1:
        $r1 = specialinvoke r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdlantisAd[] filteredAdsForOrientation(int)>(1);

        return $r1;
    }

    public jp.Adlantis.Android.AsyncImageLoader asyncImageLoader()
    {
        jp.Adlantis.Android.AdManager r0;
        jp.Adlantis.Android.AsyncImageLoader r1;

        r0 := @this: jp.Adlantis.Android.AdManager;

        r1 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AsyncImageLoader _asyncImageLoader>;

        return r1;
    }

    public void clearAds()
    {
        java.lang.Throwable $r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        entermonitor r0;

     label1:
        r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdlantisAd[] _ads> = null;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void connect(android.content.Context, java.util.Map, jp.Adlantis.Android.AdManager$AdManagerCallback)
    {
        android.content.Context $r1, $r6;
        jp.Adlantis.Android.AdManager$4 $r10;
        jp.Adlantis.Android.AdManager$3 $r4;
        android.content.IntentFilter $r5;
        jp.Adlantis.Android.AdManager$ConnectionChangeReceiver $r7;
        jp.Adlantis.Android.AdManager$AdManagerCallback $r3;
        java.util.Map $r2;
        android.os.Looper $r8;
        java.lang.String $r9;
        jp.Adlantis.Android.AdManager r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.util.Map;

        $r3 := @parameter2: jp.Adlantis.Android.AdManager$AdManagerCallback;

        $z0 = r0.<jp.Adlantis.Android.AdManager: boolean _connectionChangeReceiverRegistered>;

        if $z0 != 0 goto label1;

        $r5 = new android.content.IntentFilter;

        specialinvoke $r5.<android.content.IntentFilter: void <init>(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r7 = new jp.Adlantis.Android.AdManager$ConnectionChangeReceiver;

        specialinvoke $r7.<jp.Adlantis.Android.AdManager$ConnectionChangeReceiver: void <init>(jp.Adlantis.Android.AdManager,jp.Adlantis.Android.AdManager$1)>(r0, null);

        virtualinvoke $r6.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r7, $r5);

        r0.<jp.Adlantis.Android.AdManager: boolean _connectionChangeReceiverRegistered> = 1;

     label1:
        $r8 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r8 != null goto label2;

        $r9 = <jp.Adlantis.Android.AdManager: java.lang.String DEBUG_TASK>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r9, "Looper.getMainLooper() == null connect() failed.");

     label2:
        $r4 = new jp.Adlantis.Android.AdManager$3;

        $r8 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<jp.Adlantis.Android.AdManager$3: void <init>(jp.Adlantis.Android.AdManager,android.os.Looper,jp.Adlantis.Android.AdManager$AdManagerCallback)>(r0, $r8, $r3);

        $r10 = new jp.Adlantis.Android.AdManager$4;

        specialinvoke $r10.<jp.Adlantis.Android.AdManager$4: void <init>(jp.Adlantis.Android.AdManager,android.content.Context,java.util.Map,jp.Adlantis.Android.AdManager$AdManagerCallback,android.os.Handler)>(r0, $r1, $r2, $r3, $r4);

        virtualinvoke $r10.<jp.Adlantis.Android.AdManager$4: void start()>();

        return;
    }

    public jp.Adlantis.Android.AdNetworkConnection getAdNetworkConnection()
    {
        jp.Adlantis.Android.AdNetworkConnection r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        r1 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection>;

        return r1;
    }

    public java.lang.String getPublisherID()
    {
        java.lang.String r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        r1 = r0.<jp.Adlantis.Android.AdManager: java.lang.String _publisherID>;

        return r1;
    }

    public void handleClickRequest(jp.Adlantis.Android.AdlantisAd, jp.Adlantis.Android.AdManager$AdManagerRedirectUrlProcessedCallback)
    {
        jp.Adlantis.Android.AdManager$AdManagerRedirectUrlProcessedCallback $r2;
        jp.Adlantis.Android.AdlantisAd $r1;
        android.net.Uri $r6;
        android.os.Message $r7;
        android.os.Looper $r5;
        jp.Adlantis.Android.AdManager$8 $r4;
        java.lang.String $r3;
        jp.Adlantis.Android.AdManager r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: jp.Adlantis.Android.AdlantisAd;

        $r2 := @parameter1: jp.Adlantis.Android.AdManager$AdManagerRedirectUrlProcessedCallback;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r1.<jp.Adlantis.Android.AdlantisAd: boolean shouldHandleRedirect()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r1.<jp.Adlantis.Android.AdlantisAd: java.lang.String tapUriRedirect()>();

        specialinvoke r0.<jp.Adlantis.Android.AdManager: void handleHttpClickRequest(java.lang.String,jp.Adlantis.Android.AdManager$AdManagerRedirectUrlProcessedCallback)>($r3, $r2);

        return;

     label1:
        $r4 = new jp.Adlantis.Android.AdManager$8;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<jp.Adlantis.Android.AdManager$8: void <init>(jp.Adlantis.Android.AdManager,android.os.Looper,jp.Adlantis.Android.AdManager$AdManagerRedirectUrlProcessedCallback)>(r0, $r5, $r2);

        $r3 = virtualinvoke r0.<jp.Adlantis.Android.AdManager: java.lang.String adTapUrlCompleteString(jp.Adlantis.Android.AdlantisAd)>($r1);

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r3);

        $r7 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(0, $r6);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r7);

     label2:
        return;
    }

    boolean hasTestAdRequestUrls()
    {
        jp.Adlantis.Android.AdNetworkConnection $r1;
        jp.Adlantis.Android.AdManager r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection>;

        $z0 = virtualinvoke $r1.<jp.Adlantis.Android.AdNetworkConnection: boolean hasTestAdRequestUrls()>();

        return $z0;
    }

    protected org.apache.http.impl.client.AbstractHttpClient httpClientFactory()
    {
        org.apache.http.impl.client.DefaultHttpClient $r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        return $r1;
    }

    java.lang.String keywords()
    {
        java.lang.String r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        r1 = r0.<jp.Adlantis.Android.AdManager: java.lang.String _keywords>;

        return r1;
    }

    public java.lang.String publisherIDMetadataKey()
    {
        jp.Adlantis.Android.AdNetworkConnection $r2;
        java.lang.String $r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r2 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection>;

        $r1 = virtualinvoke $r2.<jp.Adlantis.Android.AdNetworkConnection: java.lang.String publisherIDMetadataKey()>();

        return $r1;
    }

    public void sendConversionTag(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        java.lang.String $r2;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<jp.Adlantis.Android.AdManager: void sendConversionTagInternal(android.content.Context,java.lang.String,boolean)>($r1, $r2, 0);

        return;
    }

    public void sendConversionTagTest(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        java.lang.String $r2;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<jp.Adlantis.Android.AdManager: void sendConversionTagInternal(android.content.Context,java.lang.String,boolean)>($r1, $r2, 1);

        return;
    }

    public void setAdDisplayInterval(long)
    {
        long $l0;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $l0 := @parameter0: long;

        r0.<jp.Adlantis.Android.AdManager: long _adDisplayInterval> = $l0;

        return;
    }

    public void setAdFetchInterval(long)
    {
        long $l0;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $l0 := @parameter0: long;

        r0.<jp.Adlantis.Android.AdManager: long _adFetchInterval> = $l0;

        return;
    }

    public void setAdNetworkConnection(jp.Adlantis.Android.AdNetworkConnection)
    {
        jp.Adlantis.Android.AdNetworkConnection $r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: jp.Adlantis.Android.AdNetworkConnection;

        r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection> = $r1;

        return;
    }

    public void setGapPublisherID(java.lang.String)
    {
        java.lang.String $r1;
        jp.Adlantis.Android.AdManager r0;
        boolean $z0;
        jp.Adlantis.Android.AdManager$AdlantisInvalidPublisherIDException $r2;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <jp.Adlantis.Android.AdManager: boolean isGreeSdk()>();

        if $z0 == 0 goto label1;

        r0.<jp.Adlantis.Android.AdManager: java.lang.String _publisherID> = $r1;

        return;

     label1:
        $r2 = new jp.Adlantis.Android.AdManager$AdlantisInvalidPublisherIDException;

        specialinvoke $r2.<jp.Adlantis.Android.AdManager$AdlantisInvalidPublisherIDException: void <init>(jp.Adlantis.Android.AdManager)>(r0);

        throw $r2;
    }

    public void setHost(java.lang.String)
    {
        jp.Adlantis.Android.AdNetworkConnection $r2;
        java.lang.String $r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection>;

        virtualinvoke $r2.<jp.Adlantis.Android.AdNetworkConnection: void setHost(java.lang.String)>($r1);

        return;
    }

    public void setKeywords(java.lang.String)
    {
        java.lang.String $r1;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: java.lang.String;

        r0.<jp.Adlantis.Android.AdManager: java.lang.String _keywords> = $r1;

        return;
    }

    public void setPublisherID(java.lang.String)
    {
        java.lang.String $r1;
        jp.Adlantis.Android.AdManager r0;
        boolean $z0;
        jp.Adlantis.Android.AdManager$AdlantisInvalidPublisherIDException $r2;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <jp.Adlantis.Android.AdManager: boolean isGreeSdk()>();

        if $z0 == 0 goto label1;

        $r2 = new jp.Adlantis.Android.AdManager$AdlantisInvalidPublisherIDException;

        specialinvoke $r2.<jp.Adlantis.Android.AdManager$AdlantisInvalidPublisherIDException: void <init>(jp.Adlantis.Android.AdManager)>(r0);

        throw $r2;

     label1:
        r0.<jp.Adlantis.Android.AdManager: java.lang.String _publisherID> = $r1;

        return;
    }

    public void setTestAdRequestUrls(java.lang.String[])
    {
        jp.Adlantis.Android.AdNetworkConnection $r3;
        java.lang.String[] $r1;
        java.lang.String $r2;
        jp.Adlantis.Android.AdManager r0;

        r0 := @this: jp.Adlantis.Android.AdManager;

        $r1 := @parameter0: java.lang.String[];

        $r2 = <jp.Adlantis.Android.AdManager: java.lang.String DEBUG_TASK>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "setting test AdRequestUrls");

        $r3 = r0.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection _adNetworkConnection>;

        virtualinvoke $r3.<jp.Adlantis.Android.AdNetworkConnection: void setTestAdRequestUrls(java.lang.String[])>($r1);

        return;
    }
}
