public class it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema extends org.xml.sax.helpers.DefaultHandler
{
    private java.io.CharArrayWriter contents_;
    private boolean halt_;
    private boolean isNullParam_;
    private java.lang.String paramName_;
    private java.lang.String paramType_;
    private java.lang.String paramValue_;
    private java.lang.Integer size_;
    private java.util.Stack tagStack_;
    private java.lang.String userDataDate_;
    private java.lang.String userDataKey_;
    private java.lang.String userXmlDataType_;
    private java.lang.String userXmlType_;

    public void <init>()
    {
        it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema r0;
        java.io.CharArrayWriter $r2;
        java.util.Stack $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.Integer size_> = null;

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean halt_> = 0;

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userDataKey_> = null;

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userXmlType_> = null;

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userXmlDataType_> = null;

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userDataDate_> = null;

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String paramName_> = null;

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String paramType_> = null;

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String paramValue_> = null;

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean isNullParam_> = 0;

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.util.Stack tagStack_> = $r1;

        $r2 = new java.io.CharArrayWriter;

        specialinvoke $r2.<java.io.CharArrayWriter: void <init>()>();

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.io.CharArrayWriter contents_> = $r2;

        return;
    }

    private java.lang.String getTagPath()
    {
        java.util.Enumeration $r3;
        it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema r0;
        java.lang.StringBuilder $r4;
        java.lang.Object $r5;
        java.lang.String r1;
        java.util.Stack $r2;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema;

        r1 = "";

        $r2 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.util.Stack tagStack_>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label2;

        return r1;

     label2:
        $r4 = new java.lang.StringBuilder;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r1 = (java.lang.String) $r5;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        int $i0, $i1;
        char[] $r1;
        it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema r0;
        java.io.CharArrayWriter $r2;

        r0 := @this: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.io.CharArrayWriter contents_>;

        virtualinvoke $r2.<java.io.CharArrayWriter: void write(char[],int,int)>($r1, $i0, $i1);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping $r5;
        it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema r0;
        java.util.HashMap $r9;
        java.lang.Integer $r8;
        java.util.Stack $r12;
        android.database.sqlite.SQLiteDatabase $r11;
        java.lang.String $r1, $r2, $r3, $r6;
        boolean $z0;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE $r7;
        java.io.CharArrayWriter $r4;
        java.lang.Exception $r13;
        org.xml.sax.SAXException $r14;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager $r10;

        r0 := @this: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean halt_>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r1 = specialinvoke r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String getTagPath()>();

     label02:
        $r2 = null;

     label03:
        $r4 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.io.CharArrayWriter contents_>;

     label04:
        if $r4 == null goto label08;

     label05:
        $z0 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean isNullParam_>;

     label06:
        if $z0 != 0 goto label08;

     label07:
        $r4 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.io.CharArrayWriter contents_>;

        $r2 = virtualinvoke $r4.<java.io.CharArrayWriter: java.lang.String toString()>();

     label08:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("/CRYPTO-EXPORT/USER-DATA/DATA/PARAMS/PARAM");

     label09:
        if $z0 == 0 goto label13;

     label10:
        $z0 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean isNullParam_>;

     label11:
        if $z0 != 0 goto label19;

     label12:
        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping getInstance()>();

        $r3 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String paramName_>;

        $r6 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String paramType_>;

        $z0 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean isNullParam_>;

        virtualinvoke $r5.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: void addParam(java.lang.String,java.lang.String,java.lang.String,boolean)>($r3, $r2, $r6, $z0);

     label13:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("/CRYPTO-EXPORT/USER-DATA/DATA");

     label14:
        if $z0 == 0 goto label18;

     label15:
        $r7 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE getInstance()>();

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping getInstance()>();

        $r1 = virtualinvoke $r5.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: java.lang.String getKey()>();

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping getInstance()>();

        $r8 = virtualinvoke $r5.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: java.lang.Integer getXmlDataType()>();

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping getInstance()>();

        $r9 = virtualinvoke $r5.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: java.util.HashMap getParams()>();

        $r10 = staticinvoke <it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager getInstance()>();

        $r11 = virtualinvoke $r10.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.database.sqlite.SQLiteDatabase getDB(java.lang.String,int)>("crypto.db", 1);

        $z0 = virtualinvoke $r7.<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>($r1, $r8, $r9, $r11);

     label16:
        if $z0 != 0 goto label18;

     label17:
        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean halt_> = 1;

     label18:
        $r12 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.util.Stack tagStack_>;

        virtualinvoke $r12.<java.util.Stack: java.lang.Object pop()>();

        return;

     label19:
        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping getInstance()>();

        $r2 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String paramName_>;

        $r3 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String paramType_>;

        $z0 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean isNullParam_>;

        virtualinvoke $r5.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: void addParam(java.lang.String,java.lang.String,java.lang.String,boolean)>($r2, null, $r3, $z0);

     label20:
        goto label13;

     label21:
        $r13 := @caughtexception;

        $r14 = new org.xml.sax.SAXException;

        $r1 = virtualinvoke $r13.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r14.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r14;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label08 to label09 with label21;
        catch java.lang.Exception from label10 to label11 with label21;
        catch java.lang.Exception from label12 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    public boolean hasErrors()
    {
        it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema r0;
        boolean z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema;

        z0 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean halt_>;

        return z0;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping $r8;
        it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema r0;
        java.lang.Integer $r7;
        java.util.Stack $r6;
        org.xml.sax.Attributes $r4;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r9, $r10;
        boolean $z0;
        java.io.CharArrayWriter $r5;
        java.lang.Exception $r11;
        org.xml.sax.SAXException $r12;
        java.lang.StringBuilder $r13;

        r0 := @this: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.xml.sax.Attributes;

        $z0 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean halt_>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r5 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.io.CharArrayWriter contents_>;

        virtualinvoke $r5.<java.io.CharArrayWriter: void reset()>();

        $r6 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.util.Stack tagStack_>;

        virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

     label02:
        $r1 = specialinvoke r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String getTagPath()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("/CRYPTO-EXPORT/USER-DATA");

     label03:
        if $z0 == 0 goto label07;

     label04:
        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("SIZE");

     label05:
        if $r2 == null goto label21;

     label06:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.Integer size_> = $r7;

     label07:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("/CRYPTO-EXPORT/USER-DATA/DATA");

     label08:
        if $z0 == 0 goto label10;

     label09:
        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("NAME");

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userDataKey_> = $r2;

        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("XML-TYPE");

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userXmlType_> = $r2;

        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("XML-DATA-TYPE");

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userXmlDataType_> = $r2;

        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("DATE");

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userDataDate_> = $r2;

        $r8 = staticinvoke <it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping getInstance()>();

        $r9 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userDataKey_>;

        $r10 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userXmlType_>;

        $r2 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userXmlDataType_>;

        $r3 = r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String userDataDate_>;

        virtualinvoke $r8.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExportObjMapping: void setData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, $r2, $r3);

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("/CRYPTO-EXPORT/USER-DATA/DATA/PARAMS/PARAM");

     label11:
        if $z0 == 0 goto label24;

     label12:
        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("NAME");

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String paramName_> = $r1;

        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("DATA-TYPE");

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String paramType_> = $r1;

        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("IS-NULL");

     label13:
        if $r1 == null goto label23;

     label14:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label15:
        if $i0 <= 0 goto label23;

     label16:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TRUE");

     label17:
        if $z0 == 0 goto label23;

     label18:
        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean isNullParam_> = 1;

     label19:
        return;

     label20:
        $r11 := @caughtexception;

        $r12 = new org.xml.sax.SAXException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(" PATH: ");

        $r1 = specialinvoke r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String getTagPath()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MSG: ");

        $r1 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r1);

        throw $r12;

     label21:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.Integer size_> = $r7;

     label22:
        goto label07;

     label23:
        r0.<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: boolean isNullParam_> = 0;

     label24:
        return;

        catch java.lang.Exception from label02 to label03 with label20;
        catch java.lang.Exception from label04 to label05 with label20;
        catch java.lang.Exception from label06 to label08 with label20;
        catch java.lang.Exception from label09 to label11 with label20;
        catch java.lang.Exception from label12 to label13 with label20;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Exception from label21 to label22 with label20;
        catch java.lang.Exception from label23 to label24 with label20;
    }
}
