public final class dh extends java.lang.Object
{

    public void <init>()
    {
        dh r0;

        r0 := @this: dh;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static bt a(dn)
    {
        bt $r1;
        v $r2;
        dn $r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r3;
        do $r4;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new bt;

        $r2 = new v;

     label2:
        $r3 = virtualinvoke $r0.<dn: java.lang.String a()>();

        specialinvoke $r2.<v: void <init>(java.lang.String)>($r3);

        specialinvoke $r1.<bt: void <init>(v)>($r2);

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r3 = virtualinvoke $r4.<do: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r3, "ROParser@ParseDSDigestValue");

        return null;

        catch do from label2 to label3 with label4;
    }

    private static dj a(dl)
    {
        dj $r1;
        dl $r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        do $r3;

        $r0 := @parameter0: dl;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new dj;

     label2:
        $r2 = virtualinvoke $r0.<dl: java.lang.String a()>();

        specialinvoke $r1.<dj: void <init>(java.lang.String)>($r2);

     label3:
        return $r1;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r2 = virtualinvoke $r3.<do: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r2, "ROParser@ParseURIValue");

        return null;

        catch do from label2 to label3 with label4;
    }

    public static java.util.Vector a(java.util.Vector)
    {
        de $r6;
        df $r5;
        dn $r4;
        bn $r2;
        java.util.Vector $r0, $r1;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.Vector;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label2;

        $r2 = new bn;

        $r3 = virtualinvoke $r0.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r4 = (dn) $r3;

        $r4 = virtualinvoke $r4.<dn: dn b(java.lang.String)>("o-ds:keyName");

        $r5 = staticinvoke <dh: df p(dn)>($r4);

        $r3 = virtualinvoke $r0.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r4 = (dn) $r3;

        $r4 = virtualinvoke $r4.<dn: dn b(java.lang.String)>("o-ds:encryptedKey");

        $r6 = staticinvoke <dh: de o(dn)>($r4);

        specialinvoke $r2.<bn: void <init>(df,de)>($r5, $r6);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static bo b(dn)
    {
        dn $r0;
        bo $r5;
        ct $r4;
        java.util.Vector $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<dn: java.util.Vector a(java.lang.String)>("o-dd:uid");

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        return null;

     label2:
        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label4;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r0 = (dn) $r3;

        $r4 = staticinvoke <dh: ct n(dn)>($r0);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r5 = new bo;

        specialinvoke $r5.<bo: void <init>(java.util.Vector)>($r2);

        return $r5;
    }

    private static java.util.Vector b(java.util.Vector)
    {
        cc $r2;
        dj $r6;
        dl $r5;
        dn $r4;
        java.util.Vector $r0, $r1;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.Vector;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label2;

        $r2 = new cc;

        $r3 = virtualinvoke $r0.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r4 = (dn) $r3;

        $r5 = virtualinvoke $r4.<dn: dl a(java.lang.String,java.lang.String)>("", "Algorithm");

        $r6 = staticinvoke <dh: dj a(dl)>($r5);

        specialinvoke $r2.<cc: void <init>(dj)>($r6);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static ci c(dn)
    {
        ci $r5;
        dn $r0;
        ct $r4;
        java.util.Vector $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<dn: java.util.Vector a(java.lang.String)>("o-dd:uid");

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        return null;

     label2:
        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label4;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r0 = (dn) $r3;

        $r4 = staticinvoke <dh: ct n(dn)>($r0);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r5 = new ci;

        specialinvoke $r5.<ci: void <init>(java.util.Vector)>($r2);

        return $r5;
    }

    private static java.util.Vector c(java.util.Vector)
    {
        cd $r5;
        dj $r9;
        dl $r8;
        dn $r4;
        bs $r6;
        bt $r7;
        java.util.Vector $r0, $r1;
        bx $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.Vector;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label4;

        $r2 = new bx;

        $r3 = virtualinvoke $r0.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r4 = (dn) $r3;

        $r4 = virtualinvoke $r4.<dn: dn b(java.lang.String)>("ds:Transforms");

        $r5 = staticinvoke <dh: cd t(dn)>($r4);

        $r3 = virtualinvoke $r0.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r4 = (dn) $r3;

        $r4 = virtualinvoke $r4.<dn: dn b(java.lang.String)>("ds:DigestMethod");

        if $r4 != null goto label3;

        $r6 = null;

     label2:
        $r3 = virtualinvoke $r0.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r4 = (dn) $r3;

        $r4 = virtualinvoke $r4.<dn: dn b(java.lang.String)>("ds:DigestValue");

        $r7 = staticinvoke <dh: bt a(dn)>($r4);

        specialinvoke $r2.<bx: void <init>(cd,bs,bt)>($r5, $r6, $r7);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r6 = new bs;

        $r8 = virtualinvoke $r4.<dn: dl a(java.lang.String,java.lang.String)>("", "Algorithm");

        $r9 = staticinvoke <dh: dj a(dl)>($r8);

        specialinvoke $r6.<bs: void <init>(dj)>($r9);

        goto label2;

     label4:
        return $r1;
    }

    public static dd d(dn)
    {
        dd $r5;
        dn $r0;
        ct $r4;
        java.util.Vector $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<dn: java.util.Vector a(java.lang.String)>("o-dd:uid");

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        return null;

     label2:
        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label4;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r0 = (dn) $r3;

        $r4 = staticinvoke <dh: ct n(dn)>($r0);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r5 = new dd;

        specialinvoke $r5.<dd: void <init>(java.util.Vector)>($r2);

        return $r5;
    }

    public static ch e(dn)
    {
        ch $r5;
        dn $r0;
        ct $r4;
        java.util.Vector $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<dn: java.util.Vector a(java.lang.String)>("o-dd:uid");

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        return null;

     label2:
        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label4;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r0 = (dn) $r3;

        $r4 = staticinvoke <dh: ct n(dn)>($r0);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r5 = new ch;

        specialinvoke $r5.<ch: void <init>(java.util.Vector)>($r2);

        return $r5;
    }

    public static cg f(dn)
    {
        cg $r5;
        dn $r0;
        ct $r4;
        java.util.Vector $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<dn: java.util.Vector a(java.lang.String)>("o-dd:uid");

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        return null;

     label2:
        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label4;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r0 = (dn) $r3;

        $r4 = staticinvoke <dh: ct n(dn)>($r0);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r5 = new cg;

        specialinvoke $r5.<cg: void <init>(java.util.Vector)>($r2);

        return $r5;
    }

    public static dc g(dn)
    {
        dn $r0;
        ct $r4;
        java.util.Vector $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        dc $r5;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<dn: java.util.Vector a(java.lang.String)>("o-dd:uid");

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        return null;

     label2:
        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label4;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r0 = (dn) $r3;

        $r4 = staticinvoke <dh: ct n(dn)>($r0);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r5 = new dc;

        specialinvoke $r5.<dc: void <init>(java.util.Vector)>($r2);

        return $r5;
    }

    public static da h(dn)
    {
        cs $r5;
        cj $r4;
        cl $r6;
        dn $r0, $r2;
        da $r1;
        cp $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new da;

        $r2 = virtualinvoke $r0.<dn: dn b(java.lang.String)>("o-dd:pin");

        $r3 = staticinvoke <dh: cp s(dn)>($r2);

        $r0 = virtualinvoke $r0.<dn: dn b(java.lang.String)>("o-dd:datetime");

        if $r0 != null goto label3;

        $r4 = null;

     label2:
        specialinvoke $r1.<da: void <init>(cp,cj)>($r3, $r4);

        return $r1;

     label3:
        $r4 = new cj;

        $r2 = virtualinvoke $r0.<dn: dn b(java.lang.String)>("o-dd:start");

        $r5 = staticinvoke <dh: cs q(dn)>($r2);

        $r0 = virtualinvoke $r0.<dn: dn b(java.lang.String)>("o-dd:end");

        $r6 = staticinvoke <dh: cl r(dn)>($r0);

        specialinvoke $r4.<cj: void <init>(cs,cl)>($r5, $r6);

        goto label2;
    }

    public static co i(dn)
    {
        dn $r2;
        do $r7;
        co $r6;
        ct $r1;
        java.util.Vector $r0, $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String $r5;

        $r2 := @parameter0: dn;

        if $r2 != null goto label01;

        return null;

     label01:
        $r3 = virtualinvoke $r2.<dn: java.util.Vector a(java.lang.String)>("o-dd:uid");

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $i0 = 0;

     label02:
        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label09;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object get(int)>($i0);

        if $r4 == null goto label08;

     label03:
        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object get(int)>($i0);

     label04:
        $r2 = (dn) $r4;

     label05:
        $r5 = virtualinvoke $r2.<dn: java.lang.String a()>();

     label06:
        $r1 = new ct;

     label07:
        specialinvoke $r1.<ct: void <init>(java.lang.String)>($r5);

        virtualinvoke $r0.<java.util.Vector: boolean add(java.lang.Object)>($r1);

     label08:
        $i0 = $i0 + 1;

        goto label02;

     label09:
        $r6 = new co;

        specialinvoke $r6.<co: void <init>(java.util.Vector)>($r0);

        return $r6;

     label10:
        $r7 := @caughtexception;

        goto label08;

        catch do from label03 to label04 with label10;
        catch do from label05 to label06 with label10;
        catch do from label07 to label08 with label10;
    }

    public static br j(dn)
    {
        br $r1;
        v $r2;
        dn $r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r3;
        do $r4;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new br;

        $r2 = new v;

     label2:
        $r3 = virtualinvoke $r0.<dn: java.lang.String a()>();

        specialinvoke $r2.<v: void <init>(java.lang.String)>($r3);

        specialinvoke $r1.<br: void <init>(v)>($r2);

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r3 = virtualinvoke $r4.<do: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r3, "ROParser@ParseDSCryptoBinary");

        return null;

        catch do from label2 to label3 with label4;
    }

    public static ce k(dn)
    {
        ce $r1;
        v $r2;
        w $r4;
        dn $r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new ce;

        $r2 = new v;

     label2:
        $r3 = virtualinvoke $r0.<dn: java.lang.String a()>();

        specialinvoke $r2.<v: void <init>(java.lang.String)>($r3);

        specialinvoke $r1.<ce: void <init>(v)>($r2);

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r3 = virtualinvoke $r4.<w: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r3, "ROParser@ParseDSX509Certificate");

        return null;

        catch w from label2 to label3 with label4;
    }

    public static ca l(dn)
    {
        v $r2;
        dn $r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r3;
        do $r4;
        ca $r1;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new ca;

        $r2 = new v;

     label2:
        $r3 = virtualinvoke $r0.<dn: java.lang.String a()>();

        specialinvoke $r2.<v: void <init>(java.lang.String)>($r3);

        specialinvoke $r1.<ca: void <init>(v)>($r2);

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r3 = virtualinvoke $r4.<do: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r3, "ROParser@ParseDSSignatureValue");

        return null;

        catch do from label2 to label3 with label4;
    }

    public static cb m(dn)
    {
        dg $r6;
        dj $r10;
        dl $r9;
        dn $r0, $r2;
        bq $r3;
        java.util.Vector $r5;
        bz $r4;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        cb $r1;

        $r0 := @parameter0: dn;

        if $r0 != null goto label01;

        return null;

     label01:
        $r1 = new cb;

     label02:
        $r2 = virtualinvoke $r0.<dn: dn b(java.lang.String)>("ds:CanonicalizationMethod");

     label03:
        if $r2 != null goto label09;

        $r3 = null;

     label04:
        $r2 = virtualinvoke $r0.<dn: dn b(java.lang.String)>("ds:SignatureMethod");

     label05:
        if $r2 != null goto label12;

        $r4 = null;

     label06:
        $r5 = virtualinvoke $r0.<dn: java.util.Vector a(java.lang.String)>("ds:Reference");

        $r5 = staticinvoke <dh: java.util.Vector c(java.util.Vector)>($r5);

        specialinvoke $r1.<cb: void <init>(bq,bz,java.util.Vector)>($r3, $r4, $r5);

     label07:
        return $r1;

     label08:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ROException : ");

        $r8 = virtualinvoke $r6.<dg: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r8, "ROParser@ParseDSSignedInfo");

        return null;

     label09:
        $r3 = new bq;

     label10:
        $r9 = virtualinvoke $r2.<dn: dl a(java.lang.String,java.lang.String)>("", "Algorithm");

        $r10 = staticinvoke <dh: dj a(dl)>($r9);

        specialinvoke $r3.<bq: void <init>(dj)>($r10);

     label11:
        goto label04;

     label12:
        $r4 = new bz;

     label13:
        $r9 = virtualinvoke $r2.<dn: dl a(java.lang.String,java.lang.String)>("", "Algorithm");

        $r10 = staticinvoke <dh: dj a(dl)>($r9);

        specialinvoke $r4.<bz: void <init>(dj)>($r10);

     label14:
        goto label06;

        catch dg from label02 to label03 with label08;
        catch dg from label04 to label05 with label08;
        catch dg from label06 to label07 with label08;
        catch dg from label10 to label11 with label08;
        catch dg from label13 to label14 with label08;
    }

    private static ct n(dn)
    {
        ct $r1;
        dn $r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        do $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new ct;

     label2:
        $r2 = virtualinvoke $r0.<dn: java.lang.String a()>();

        specialinvoke $r1.<ct: void <init>(java.lang.String)>($r2);

     label3:
        return $r1;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r2 = virtualinvoke $r3.<do: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r2, "ROParser@ParseODDUID");

        return null;

        catch do from label2 to label3 with label4;
    }

    private static de o(dn)
    {
        de $r1;
        v $r2;
        dn $r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r3;
        do $r4;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new de;

        $r2 = new v;

     label2:
        $r3 = virtualinvoke $r0.<dn: java.lang.String a()>();

        specialinvoke $r2.<v: void <init>(java.lang.String)>($r3);

        specialinvoke $r1.<de: void <init>(v)>($r2);

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r3 = virtualinvoke $r4.<do: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r3, "ROParser@ParseROEncryptedKey");

        return null;

        catch do from label2 to label3 with label4;
    }

    private static df p(dn)
    {
        df $r1;
        dn $r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        do $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new df;

     label2:
        $r2 = virtualinvoke $r0.<dn: java.lang.String a()>();

        specialinvoke $r1.<df: void <init>(java.lang.String)>($r2);

     label3:
        return $r1;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r2 = virtualinvoke $r3.<do: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r2, "ROParser@ParseROEncryptedKeyName");

        return null;

        catch do from label2 to label3 with label4;
    }

    private static cs q(dn)
    {
        cs $r1;
        dn $r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        do $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new cs;

     label2:
        $r2 = virtualinvoke $r0.<dn: java.lang.String a()>();

        specialinvoke $r1.<cs: void <init>(java.lang.String)>($r2);

     label3:
        return $r1;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r2 = virtualinvoke $r3.<do: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r2, "ROParser@ParseODDStart");

        return null;

        catch do from label2 to label3 with label4;
    }

    private static cl r(dn)
    {
        cl $r1;
        dn $r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        do $r3;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new cl;

     label2:
        $r2 = virtualinvoke $r0.<dn: java.lang.String a()>();

        specialinvoke $r1.<cl: void <init>(java.lang.String)>($r2);

     label3:
        return $r1;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r2 = virtualinvoke $r3.<do: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r2, "ROParser@ParseODDEnd");

        return null;

        catch do from label2 to label3 with label4;
    }

    private static cp s(dn)
    {
        dn $r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        do $r3;
        cp $r1;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new cp;

     label2:
        $r2 = virtualinvoke $r0.<dn: java.lang.String a()>();

        specialinvoke $r1.<cp: void <init>(java.lang.String)>($r2);

     label3:
        return $r1;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r2 = virtualinvoke $r3.<do: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r2, "ROParser@ParseODDPin");

        return null;

        catch do from label2 to label3 with label4;
    }

    private static cd t(dn)
    {
        cd $r1;
        java.util.Vector $r2;
        int $i0;
        dn $r0;
        java.lang.StringBuilder $r4;
        do $r3;
        java.lang.String $r5;

        $r0 := @parameter0: dn;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new cd;

     label2:
        $r2 = virtualinvoke $r0.<dn: java.util.Vector a(java.lang.String)>("ds:Transform");

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

     label3:
        if $i0 != 0 goto label6;

        $r3 = new do;

     label4:
        specialinvoke $r3.<do: void <init>(java.lang.String,java.lang.String)>("no more element", "XMLElement::getOneOrMoreChildElementsByName");

        throw $r3;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLException : ");

        $r5 = virtualinvoke $r3.<do: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ay: void a(java.lang.String,java.lang.String)>($r5, "ROParser@ParseDSTransforms");

        return null;

     label6:
        $r2 = staticinvoke <dh: java.util.Vector b(java.util.Vector)>($r2);

        specialinvoke $r1.<cd: void <init>(java.util.Vector)>($r2);

     label7:
        return $r1;

        catch do from label2 to label3 with label5;
        catch do from label4 to label5 with label5;
        catch do from label6 to label7 with label5;
    }
}
