public class com.qq.jce.wup.WupHexUtil extends java.lang.Object
{
    private static final char[] digits;
    public static final byte[] emptybytes;

    static void <clinit>()
    {
        char[] $r0;
        byte[] $r1;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <com.qq.jce.wup.WupHexUtil: char[] digits> = $r0;

        $r1 = newarray (byte)[0];

        <com.qq.jce.wup.WupHexUtil: byte[] emptybytes> = $r1;

        return;
    }

    public void <init>()
    {
        com.qq.jce.wup.WupHexUtil r0;

        r0 := @this: com.qq.jce.wup.WupHexUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String byte2HexStr(byte)
    {
        byte $b0, $b1;
        int $i3;
        char[] r0, $r1;
        char $c2;
        java.lang.String $r2;

        $b0 := @parameter0: byte;

        r0 = newarray (char)[2];

        $r1 = <com.qq.jce.wup.WupHexUtil: char[] digits>;

        $b1 = $b0 & 15;

        $i3 = (int) $b1;

        $c2 = $r1[$i3];

        r0[1] = $c2;

        $i3 = (int) $b0;

        $i3 = $i3 >>> 4;

        $b0 = (byte) $i3;

        $r1 = <com.qq.jce.wup.WupHexUtil: char[] digits>;

        $b0 = $b0 & 15;

        $i3 = (int) $b0;

        $c2 = $r1[$i3];

        r0[0] = $c2;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r0);

        return $r2;
    }

    public static java.lang.String bytes2HexStr(java.nio.ByteBuffer)
    {
        byte[] r1;
        int $i0;
        java.lang.String $r2;
        java.nio.ByteBuffer $r0;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $r0 = virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $i0 = virtualinvoke $r0.<java.nio.ByteBuffer: int limit()>();

        r1 = newarray (byte)[$i0];

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r1);

        $r2 = staticinvoke <com.qq.jce.wup.WupHexUtil: java.lang.String bytes2HexStr(byte[])>(r1);

        return $r2;
    }

    public static java.lang.String bytes2HexStr(byte[])
    {
        byte[] $r0;
        char $c4;
        byte b2, $b3;
        int $i0, $i1, $i5;
        char[] r1, $r2;
        java.lang.String $r3;

        $r0 := @parameter0: byte[];

        if $r0 == null goto label1;

        $i0 = lengthof $r0;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        r1 = newarray (char)[$i0];

        $i0 = 0;

     label3:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label4;

        b2 = $r0[$i0];

        $i1 = $i0 * 2;

        $i1 = $i1 + 1;

        $r2 = <com.qq.jce.wup.WupHexUtil: char[] digits>;

        $b3 = b2 & 15;

        $i5 = (int) $b3;

        $c4 = $r2[$i5];

        r1[$i1] = $c4;

        $i1 = (int) b2;

        $i1 = $i1 >>> 4;

        b2 = (byte) $i1;

        $i1 = $i0 * 2;

        $r2 = <com.qq.jce.wup.WupHexUtil: char[] digits>;

        b2 = b2 & 15;

        $i5 = (int) b2;

        $c4 = $r2[$i5];

        r1[$i1] = $c4;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>(r1);

        return $r3;
    }

    public static byte char2Byte(char)
    {
        byte $b2;
        int $i1, $i3;
        char $c0;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 < 48 goto label1;

        $i1 = (int) $c0;

        if $i1 > 57 goto label1;

        $i1 = (int) $c0;

        $i3 = -48;

        $i1 = $i1 + $i3;

        $b2 = (byte) $i1;

        return $b2;

     label1:
        $i1 = (int) $c0;

        if $i1 < 97 goto label2;

        $i1 = (int) $c0;

        if $i1 > 102 goto label2;

        $i1 = (int) $c0;

        $i3 = -97;

        $i1 = $i1 + $i3;

        $i1 = $i1 + 10;

        $b2 = (byte) $i1;

        return $b2;

     label2:
        $i1 = (int) $c0;

        if $i1 < 65 goto label3;

        $i1 = (int) $c0;

        if $i1 > 70 goto label3;

        $i1 = (int) $c0;

        $i3 = -65;

        $i1 = $i1 + $i3;

        $i1 = $i1 + 10;

        $b2 = (byte) $i1;

        return $b2;

     label3:
        return 0;
    }

    public static byte hexStr2Byte(java.lang.String)
    {
        byte $b2;
        int $i0;
        char $c1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $b2 = staticinvoke <com.qq.jce.wup.WupHexUtil: byte char2Byte(char)>($c1);

        return $b2;

     label1:
        return 0;
    }

    public static byte[] hexStr2Bytes(java.lang.String)
    {
        byte[] r1;
        char $c2, $c3;
        byte $b4;
        int $i0, $i1, $i5;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        r1 = <com.qq.jce.wup.WupHexUtil: byte[] emptybytes>;

        return r1;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label3:
        $i1 = lengthof r1;

        if $i0 >= $i1 goto label4;

        $i1 = $i0 * 2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i1 = $i0 * 2;

        $i1 = $i1 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $b4 = staticinvoke <com.qq.jce.wup.WupHexUtil: byte char2Byte(char)>($c2);

        $i1 = (int) $b4;

        $i1 = $i1 * 16;

        $b4 = staticinvoke <com.qq.jce.wup.WupHexUtil: byte char2Byte(char)>($c3);

        $i5 = (int) $b4;

        $i1 = $i1 + $i5;

        $b4 = (byte) $i1;

        r1[$i0] = $b4;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return r1;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r5;
        byte[] $r4;
        java.lang.String[] $r0;
        long $l0, $l2;
        int i1;
        java.lang.StringBuilder $r2;
        java.lang.String r1, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        i1 = 0;

     label1:
        if i1 >= 1000000 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("234");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        r1 = staticinvoke <com.qq.jce.wup.WupHexUtil: java.lang.String bytes2HexStr(byte[])>($r4);

        $r4 = staticinvoke <com.qq.jce.wup.WupHexUtil: byte[] hexStr2Bytes(java.lang.String)>(r1);

        r1 = new java.lang.String;

        specialinvoke r1.<java.lang.String: void <init>(byte[])>($r4);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error:");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use:");

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l2 - $l0;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;
    }
}
