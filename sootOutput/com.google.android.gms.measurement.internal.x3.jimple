final class com.google.android.gms.measurement.internal.x3 extends android.database.sqlite.SQLiteOpenHelper
{
    private final com.google.android.gms.measurement.internal.u3 b;

    void <init>(com.google.android.gms.measurement.internal.u3, android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        com.google.android.gms.measurement.internal.x3 r0;
        com.google.android.gms.measurement.internal.u3 $r3;
        java.lang.String $r2;

        r0 := @this: com.google.android.gms.measurement.internal.x3;

        $r3 := @parameter0: com.google.android.gms.measurement.internal.u3;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: java.lang.String;

        r0.<com.google.android.gms.measurement.internal.x3: com.google.android.gms.measurement.internal.u3 b> = $r3;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, $r2, null, 1);

        return;
    }

    public final android.database.sqlite.SQLiteDatabase getWritableDatabase()
    {
        java.lang.Throwable $r1, $r8, $r9;
        android.content.Context $r6;
        com.google.android.gms.measurement.internal.a4 $r5;
        java.io.File $r7;
        android.database.sqlite.SQLiteDatabase $r2;
        com.google.android.gms.measurement.internal.y3 $r4;
        com.google.android.gms.measurement.internal.x3 r0;
        com.google.android.gms.measurement.internal.u3 $r3;
        boolean $z0;

        r0 := @this: com.google.android.gms.measurement.internal.x3;

     label1:
        $r2 = specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label2:
        return $r2;

     label3:
        $r3 = r0.<com.google.android.gms.measurement.internal.x3: com.google.android.gms.measurement.internal.u3 b>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.u3: com.google.android.gms.measurement.internal.y3 m()>();

        $r5 = virtualinvoke $r4.<com.google.android.gms.measurement.internal.y3: com.google.android.gms.measurement.internal.a4 G()>();

        virtualinvoke $r5.<com.google.android.gms.measurement.internal.a4: void a(java.lang.String)>("Opening the local database failed, dropping and recreating it");

        $r3 = r0.<com.google.android.gms.measurement.internal.x3: com.google.android.gms.measurement.internal.u3 b>;

        $r6 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.u3: android.content.Context n()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("google_app_measurement_local.db");

        $z0 = virtualinvoke $r7.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label4;

        $r3 = r0.<com.google.android.gms.measurement.internal.x3: com.google.android.gms.measurement.internal.u3 b>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.u3: com.google.android.gms.measurement.internal.y3 m()>();

        $r5 = virtualinvoke $r4.<com.google.android.gms.measurement.internal.y3: com.google.android.gms.measurement.internal.a4 G()>();

        virtualinvoke $r5.<com.google.android.gms.measurement.internal.a4: void b(java.lang.String,java.lang.Object)>("Failed to delete corrupted local db file", "google_app_measurement_local.db");

     label4:
        $r2 = specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label5:
        return $r2;

     label6:
        $r8 := @caughtexception;

        $r3 = r0.<com.google.android.gms.measurement.internal.x3: com.google.android.gms.measurement.internal.u3 b>;

        $r4 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.u3: com.google.android.gms.measurement.internal.y3 m()>();

        $r5 = virtualinvoke $r4.<com.google.android.gms.measurement.internal.y3: com.google.android.gms.measurement.internal.a4 G()>();

        virtualinvoke $r5.<com.google.android.gms.measurement.internal.a4: void b(java.lang.String,java.lang.Object)>("Failed to open local database. Events will bypass local storage", $r8);

        return null;

     label7:
        $r9 := @caughtexception;

        throw $r9;

     label8:
        $r1 := @caughtexception;

        goto label3;

        catch android.database.sqlite.SQLiteDatabaseLockedException from label1 to label2 with label7;
        catch android.database.sqlite.SQLiteException from label1 to label2 with label8;
        catch android.database.sqlite.SQLiteException from label4 to label5 with label6;
    }

    public final void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.gms.measurement.internal.y3 $r2;
        com.google.android.gms.measurement.internal.x3 r0;
        com.google.android.gms.measurement.internal.u3 $r3;

        r0 := @this: com.google.android.gms.measurement.internal.x3;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = r0.<com.google.android.gms.measurement.internal.x3: com.google.android.gms.measurement.internal.u3 b>;

        $r2 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.u3: com.google.android.gms.measurement.internal.y3 m()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void b(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase)>($r2, $r1);

        return;
    }

    public final void onDowngrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.gms.measurement.internal.x3 r0;
        int $i0, $i1;

        r0 := @this: com.google.android.gms.measurement.internal.x3;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }

    public final void onOpen(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r4;
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.gms.measurement.internal.y3 $r6;
        com.google.android.gms.measurement.internal.x3 r0;
        com.google.android.gms.measurement.internal.u3 $r5;
        int $i0;
        android.database.Cursor $r2, $r3;

        r0 := @this: com.google.android.gms.measurement.internal.x3;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 15 goto label7;

        $r2 = null;

     label1:
        $r3 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("PRAGMA journal_mode=memory", null);

     label2:
        $r2 = $r3;

     label3:
        interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

     label4:
        if $r3 == null goto label7;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        goto label7;

     label5:
        $r4 := @caughtexception;

        if $r2 == null goto label6;

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label6:
        throw $r4;

     label7:
        $r5 = r0.<com.google.android.gms.measurement.internal.x3: com.google.android.gms.measurement.internal.u3 b>;

        $r6 = virtualinvoke $r5.<com.google.android.gms.measurement.internal.u3: com.google.android.gms.measurement.internal.y3 m()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r6, $r1, "messages", "create table if not exists messages ( type INTEGER NOT NULL, entry BLOB NOT NULL)", "type,entry", null);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public final void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.gms.measurement.internal.x3 r0;
        int $i0, $i1;

        r0 := @this: com.google.android.gms.measurement.internal.x3;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
}
