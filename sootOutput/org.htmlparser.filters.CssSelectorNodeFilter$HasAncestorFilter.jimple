class org.htmlparser.filters.CssSelectorNodeFilter$HasAncestorFilter extends java.lang.Object implements org.htmlparser.NodeFilter
{
    private org.htmlparser.NodeFilter a;

    public void <init>(org.htmlparser.NodeFilter)
    {
        org.htmlparser.NodeFilter $r1;
        org.htmlparser.filters.CssSelectorNodeFilter$HasAncestorFilter r0;

        r0 := @this: org.htmlparser.filters.CssSelectorNodeFilter$HasAncestorFilter;

        $r1 := @parameter0: org.htmlparser.NodeFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.htmlparser.filters.CssSelectorNodeFilter$HasAncestorFilter: org.htmlparser.NodeFilter a> = $r1;

        return;
    }

    public boolean accept(org.htmlparser.Node)
    {
        org.htmlparser.NodeFilter $r3;
        org.htmlparser.filters.CssSelectorNodeFilter$HasAncestorFilter r0;
        org.htmlparser.Node $r1, $r2;
        boolean $z0;

        r0 := @this: org.htmlparser.filters.CssSelectorNodeFilter$HasAncestorFilter;

        $r1 := @parameter0: org.htmlparser.Node;

     label1:
        if $r1 == null goto label2;

        $r2 = interfaceinvoke $r1.<org.htmlparser.Node: org.htmlparser.Node getParent()>();

        $r1 = $r2;

        $r3 = r0.<org.htmlparser.filters.CssSelectorNodeFilter$HasAncestorFilter: org.htmlparser.NodeFilter a>;

        $z0 = interfaceinvoke $r3.<org.htmlparser.NodeFilter: boolean accept(org.htmlparser.Node)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
}
