final class com.zxing.b.c extends java.lang.Object
{
    static final java.util.Vector a;
    static final java.util.Vector b;
    static final java.util.Vector c;
    static final java.util.Vector d;
    private static final java.util.regex.Pattern e;

    static void <clinit>()
    {
        java.util.Vector $r1, $r3;
        com.a.a.a $r2;
        int $i0;
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(",");

        <com.zxing.b.c: java.util.regex.Pattern e> = $r0;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>(int)>(5);

        <com.zxing.b.c: java.util.Vector a> = $r1;

        $r2 = <com.a.a.a: com.a.a.a d>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        $r1 = <com.zxing.b.c: java.util.Vector a>;

        $r2 = <com.a.a.a: com.a.a.a c>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        $r1 = <com.zxing.b.c: java.util.Vector a>;

        $r2 = <com.a.a.a: com.a.a.a f>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        $r1 = <com.zxing.b.c: java.util.Vector a>;

        $r2 = <com.a.a.a: com.a.a.a e>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        $r1 = <com.zxing.b.c: java.util.Vector a>;

        $r2 = <com.a.a.a: com.a.a.a m>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        $r1 = new java.util.Vector;

        $r3 = <com.zxing.b.c: java.util.Vector a>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        $i0 = $i0 + 4;

        specialinvoke $r1.<java.util.Vector: void <init>(int)>($i0);

        <com.zxing.b.c: java.util.Vector b> = $r1;

        $r3 = <com.zxing.b.c: java.util.Vector a>;

        virtualinvoke $r1.<java.util.Vector: boolean addAll(java.util.Collection)>($r3);

        $r1 = <com.zxing.b.c: java.util.Vector b>;

        $r2 = <com.a.a.a: com.a.a.a i>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        $r1 = <com.zxing.b.c: java.util.Vector b>;

        $r2 = <com.a.a.a: com.a.a.a j>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        $r1 = <com.zxing.b.c: java.util.Vector b>;

        $r2 = <com.a.a.a: com.a.a.a h>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        $r1 = <com.zxing.b.c: java.util.Vector b>;

        $r2 = <com.a.a.a: com.a.a.a l>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>(int)>(1);

        <com.zxing.b.c: java.util.Vector c> = $r1;

        $r2 = <com.a.a.a: com.a.a.a a>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>(int)>(1);

        <com.zxing.b.c: java.util.Vector d> = $r1;

        $r2 = <com.a.a.a: com.a.a.a b>;

        virtualinvoke $r1.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        return;
    }
}
