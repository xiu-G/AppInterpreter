public final class com.vpon.adon.android.utils.IOUtils extends java.lang.Object
{
    private static com.vpon.adon.android.utils.IOUtils a;
    private java.lang.String b;
    private org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager c;
    private org.apache.http.params.HttpParams d;

    private void <init>()
    {
        org.apache.http.conn.scheme.PlainSocketFactory $r5;
        org.apache.http.conn.scheme.SchemeRegistry $r3;
        org.apache.http.params.BasicHttpParams $r1;
        org.apache.http.conn.scheme.Scheme $r4;
        com.vpon.adon.android.utils.IOUtils r0;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r7;
        org.apache.http.params.HttpParams $r2;
        org.apache.http.conn.ssl.SSLSocketFactory $r6;

        r0 := @this: com.vpon.adon.android.utils.IOUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.vpon.adon.android.utils.IOUtils: java.lang.String b> = null;

        $r1 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r1.<org.apache.http.params.BasicHttpParams: void <init>()>();

        r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.params.HttpParams d> = $r1;

        $r2 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.params.HttpParams d>;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r2, 30000);

        $r2 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.params.HttpParams d>;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r2, 30000);

        $r2 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.params.HttpParams d>;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>($r2, 8192);

        $r3 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        $r4 = new org.apache.http.conn.scheme.Scheme;

        $r5 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r4.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r5, 80);

        virtualinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r4);

        $r4 = new org.apache.http.conn.scheme.Scheme;

        $r6 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>();

        specialinvoke $r4.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("https", $r6, 443);

        virtualinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r4);

        $r7 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        $r2 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.params.HttpParams d>;

        specialinvoke $r7.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>($r2, $r3);

        r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager c> = $r7;

        return;
    }

    public static final com.vpon.adon.android.utils.IOUtils instance()
    {
        java.lang.Throwable $r1;
        com.vpon.adon.android.utils.IOUtils $r0;

        entermonitor class "Lcom/vpon/adon/android/utils/IOUtils;";

     label1:
        $r0 = <com.vpon.adon.android.utils.IOUtils: com.vpon.adon.android.utils.IOUtils a>;

        if $r0 != null goto label2;

        $r0 = new com.vpon.adon.android.utils.IOUtils;

        specialinvoke $r0.<com.vpon.adon.android.utils.IOUtils: void <init>()>();

        <com.vpon.adon.android.utils.IOUtils: com.vpon.adon.android.utils.IOUtils a> = $r0;

     label2:
        $r0 = <com.vpon.adon.android.utils.IOUtils: com.vpon.adon.android.utils.IOUtils a>;

     label3:
        exitmonitor class "Lcom/vpon/adon/android/utils/IOUtils;";

        return $r0;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/vpon/adon/android/utils/IOUtils;";

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public java.lang.String GetHttpString(java.lang.String) throws org.apache.http.client.ClientProtocolException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultHttpClient $r3;
        org.apache.http.HttpEntity $r7;
        com.vpon.adon.android.utils.IOUtils r0;
        org.apache.http.client.methods.HttpGet $r5;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r4;
        org.apache.http.params.HttpParams $r2;
        org.apache.http.HttpResponse $r6;
        java.lang.String $r1;

        r0 := @this: com.vpon.adon.android.utils.IOUtils;

        $r1 := @parameter0: java.lang.String;

        $r3 = new org.apache.http.impl.client.DefaultHttpClient;

        $r4 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager c>;

        $r2 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.params.HttpParams d>;

        specialinvoke $r3.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r4, $r2);

        $r5 = new org.apache.http.client.methods.HttpGet;

        specialinvoke $r5.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

        $r6 = interfaceinvoke $r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r5);

        $r7 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r1 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r7);

        return $r1;
    }

    public java.io.BufferedInputStream connectHttpServer(java.lang.String) throws org.apache.http.client.ClientProtocolException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultHttpClient $r3;
        java.io.BufferedInputStream $r7;
        org.apache.http.HttpEntity $r8;
        com.vpon.adon.android.utils.IOUtils r0;
        org.apache.http.client.methods.HttpGet $r5;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r4;
        org.apache.http.params.HttpParams $r2;
        org.apache.http.HttpResponse $r6;
        java.lang.String $r1;
        java.io.InputStream $r9;

        r0 := @this: com.vpon.adon.android.utils.IOUtils;

        $r1 := @parameter0: java.lang.String;

        $r3 = new org.apache.http.impl.client.DefaultHttpClient;

        $r4 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager c>;

        $r2 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.params.HttpParams d>;

        specialinvoke $r3.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r4, $r2);

        $r5 = new org.apache.http.client.methods.HttpGet;

        specialinvoke $r5.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

        $r6 = interfaceinvoke $r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r5);

        $r7 = new java.io.BufferedInputStream;

        $r8 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r9 = interfaceinvoke $r8.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        specialinvoke $r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r9);

        $r4 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager c>;

        virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void closeExpiredConnections()>();

        return $r7;
    }

    public org.apache.http.HttpResponse connectJSONServer(java.lang.String, java.lang.String, java.lang.String) throws org.apache.http.ParseException, java.io.IOException, com.vpon.adon.android.exception.ServiceUnavailableException, java.net.URISyntaxException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, javax.crypto.NoSuchPaddingException, java.security.spec.InvalidKeySpecException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, java.security.NoSuchProviderException, java.lang.Exception
    {
        org.apache.http.impl.client.DefaultHttpClient $r9;
        org.apache.http.message.BasicNameValuePair $r14;
        byte[] $r5;
        org.apache.http.client.methods.HttpPost $r12;
        org.apache.http.client.entity.UrlEncodedFormEntity $r15;
        javax.crypto.Cipher $r7;
        org.apache.http.StatusLine $r17;
        org.apache.http.Header $r20;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r10;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3, $r4;
        java.net.URI $r8;
        java.util.LinkedList $r13;
        com.vpon.adon.android.exception.ServiceUnavailableException $r18;
        org.apache.http.Header[] $r19;
        java.security.PublicKey $r6;
        com.vpon.adon.android.utils.IOUtils r0;
        org.apache.http.params.HttpParams $r11;
        org.apache.http.HttpResponse $r16;

        r0 := @this: com.vpon.adon.android.utils.IOUtils;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $i0 = 0;

        staticinvoke <com.vpon.adon.android.utils.CryptUtils: java.lang.String decTripleDES(java.lang.String,java.lang.String)>("http://www.vpon.com/v/index.jsp88623698333service@vpon.com", "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");

        $r4 = staticinvoke <com.vpon.adon.android.utils.CryptUtils: java.lang.String decTripleDES(java.lang.String,java.lang.String)>("http://www.vpon.com/v/index.jsp88623698333service@vpon.com", "O4+gWecUjeNBCuwRbLprfpbXPUGl3A/Ac8HJxnr8A85UqiTMIJ50RxEkEp/urCSUrkICRuVt0JVss0komwdQQBz94D5XSKE3zlWSMplh+Al5BR99slEzLIZU7TJ7Upk/ZmZlY3UpXmRMX+zLEqybApfAlLEr67QoJBdbEpjHsnWxx5nZwHAdeYXwtgSFVGgtydkZBR+PGEjriyWhWkSTgFbO8yJTMxirdEtldU+604SemOFub2WqVHC86lrN+pnvfO9pfs+d99QgMno8MRVEX0EqTnf+qiVIJrCOJbv0cj7SWws7LTgWrGssmur08FEyY0mPCqUqY0/AEkTnwg4PkiOwny3y3hPVvRipMDxBUiTeOIC9U8UVGPD/T5bX+Qrrb2CV6DkfucIU0Ie5q8iC8KCVI6Uh4wu0SDavbqaZH5Dhtb2zLnmOF4qwBF8We4gkRJ63bosreSm1uGn3UoC2CRvOJTyyf8CcCijLnEm0V7Ob4GXFCJlnPKVMsJxbnlQV+ik9IKny/BGkE5j6Gqq1HQ==");

        $r5 = staticinvoke <com.vpon.adon.android.utils.Base64: byte[] decode(java.lang.String)>($r4);

        $r6 = staticinvoke <com.vpon.adon.android.utils.CryptUtils: java.security.PublicKey getRsaPubKey(byte[])>($r5);

        $r7 = staticinvoke <com.vpon.adon.android.utils.CryptUtils: javax.crypto.Cipher getRsaEncryptCipher(java.security.PublicKey)>($r6);

        $r5 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r5 = staticinvoke <com.vpon.adon.android.utils.CryptUtils: byte[] encryptData(byte[],javax.crypto.Cipher)>($r5, $r7);

        $r3 = staticinvoke <com.vpon.adon.android.utils.Base64: java.lang.String encodeToString(byte[],boolean)>($r5, 0);

        $r8 = new java.net.URI;

        specialinvoke $r8.<java.net.URI: void <init>(java.lang.String)>($r1);

        $r9 = new org.apache.http.impl.client.DefaultHttpClient;

        $r10 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager c>;

        $r11 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.params.HttpParams d>;

        specialinvoke $r9.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r10, $r11);

        $r12 = new org.apache.http.client.methods.HttpPost;

        specialinvoke $r12.<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)>($r8);

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        $r14 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r14.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("data", $r3);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r14 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r14.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("p", "01");

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        specialinvoke $r15.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>($r13, "UTF-8");

        virtualinvoke $r12.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r15);

        virtualinvoke $r12.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("X-ADON-SDK_NAME", "Android");

        virtualinvoke $r12.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("X-ADON-SDK_VERSION", "3.0.2");

        $r3 = r0.<com.vpon.adon.android.utils.IOUtils: java.lang.String b>;

        if $r3 == null goto label1;

        $r3 = r0.<com.vpon.adon.android.utils.IOUtils: java.lang.String b>;

        virtualinvoke $r12.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("Cookie", $r3);

     label1:
        $r16 = interfaceinvoke $r9.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r12);

        $r17 = interfaceinvoke $r16.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r17.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i1 == 200 goto label2;

        $r17 = interfaceinvoke $r16.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r17.<org.apache.http.StatusLine: int getStatusCode()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("getStatusCode", $r3);

        $r18 = new com.vpon.adon.android.exception.ServiceUnavailableException;

        specialinvoke $r18.<com.vpon.adon.android.exception.ServiceUnavailableException: void <init>(java.lang.String)>("getStatusCode() != HttpStatus.SC_OK");

        throw $r18;

     label2:
        $r19 = interfaceinvoke $r16.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("Set-Cookie");

        $i1 = lengthof $r19;

     label3:
        if $i0 < $i1 goto label4;

        return $r16;

     label4:
        $r20 = $r19[$i0];

        $r3 = interfaceinvoke $r20.<org.apache.http.Header: java.lang.String getValue()>();

        r0.<com.vpon.adon.android.utils.IOUtils: java.lang.String b> = $r3;

        $i0 = $i0 + 1;

        goto label3;
    }

    public android.graphics.Bitmap downloadBitmap(java.lang.String) throws org.apache.http.client.ClientProtocolException, java.io.IOException, java.lang.IllegalStateException, java.lang.Exception
    {
        org.apache.http.impl.client.DefaultHttpClient $r2;
        java.io.BufferedInputStream $r9;
        org.apache.http.HttpEntity $r10;
        org.apache.http.StatusLine $r7;
        com.vpon.adon.android.utils.IOUtils r0;
        org.apache.http.client.methods.HttpGet $r5;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r3;
        android.graphics.Bitmap $r12;
        org.apache.http.params.HttpParams $r4;
        int $i0;
        org.apache.http.HttpResponse $r6;
        java.lang.String $r1;
        com.vpon.adon.android.exception.ServiceUnavailableException $r8;
        java.io.InputStream $r11;

        r0 := @this: com.vpon.adon.android.utils.IOUtils;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.http.impl.client.DefaultHttpClient;

        $r3 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager c>;

        $r4 = r0.<com.vpon.adon.android.utils.IOUtils: org.apache.http.params.HttpParams d>;

        specialinvoke $r2.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r3, $r4);

        $r5 = new org.apache.http.client.methods.HttpGet;

        specialinvoke $r5.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

        $r6 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r5);

        $r7 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r7.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 == 200 goto label1;

        $r7 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r7.<org.apache.http.StatusLine: int getStatusCode()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("resp.getStatusLine().getStatusCode()", $r1);

        $r8 = new com.vpon.adon.android.exception.ServiceUnavailableException;

        specialinvoke $r8.<com.vpon.adon.android.exception.ServiceUnavailableException: void <init>(java.lang.String)>("getStatusCode() != HttpStatus.SC_OK");

        throw $r8;

     label1:
        $r9 = new java.io.BufferedInputStream;

        $r10 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        specialinvoke $r9.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r11, 8192);

        $r12 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r9);

        virtualinvoke $r5.<org.apache.http.client.methods.HttpGet: void abort()>();

        return $r12;
    }

    public java.lang.String getRedirectPackCryptoString(java.lang.String) throws java.security.InvalidKeyException, java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, javax.crypto.NoSuchPaddingException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, java.io.IOException, java.security.NoSuchProviderException
    {
        byte[] $r3;
        com.vpon.adon.android.utils.IOUtils r0;
        java.security.PublicKey $r4;
        java.lang.String $r1, $r2;
        javax.crypto.Cipher $r5;

        r0 := @this: com.vpon.adon.android.utils.IOUtils;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.vpon.adon.android.utils.CryptUtils: java.lang.String decTripleDES(java.lang.String,java.lang.String)>("http://www.vpon.com/v/index.jsp88623698333service@vpon.com", "O4+gWecUjeNBCuwRbLprfpbXPUGl3A/Ac8HJxnr8A85UqiTMIJ50RxEkEp/urCSUrkICRuVt0JVss0komwdQQBz94D5XSKE3zlWSMplh+Al5BR99slEzLIZU7TJ7Upk/ZmZlY3UpXmRMX+zLEqybApfAlLEr67QoJBdbEpjHsnWxx5nZwHAdeYXwtgSFVGgtydkZBR+PGEjriyWhWkSTgFbO8yJTMxirdEtldU+604SemOFub2WqVHC86lrN+pnvfO9pfs+d99QgMno8MRVEX0EqTnf+qiVIJrCOJbv0cj7SWws7LTgWrGssmur08FEyY0mPCqUqY0/AEkTnwg4PkiOwny3y3hPVvRipMDxBUiTeOIC9U8UVGPD/T5bX+Qrrb2CV6DkfucIU0Ie5q8iC8KCVI6Uh4wu0SDavbqaZH5Dhtb2zLnmOF4qwBF8We4gkRJ63bosreSm1uGn3UoC2CRvOJTyyf8CcCijLnEm0V7Ob4GXFCJlnPKVMsJxbnlQV+ik9IKny/BGkE5j6Gqq1HQ==");

        $r3 = staticinvoke <com.vpon.adon.android.utils.Base64: byte[] decode(java.lang.String)>($r2);

        $r4 = staticinvoke <com.vpon.adon.android.utils.CryptUtils: java.security.PublicKey getRsaPubKey(byte[])>($r3);

        $r5 = staticinvoke <com.vpon.adon.android.utils.CryptUtils: javax.crypto.Cipher getRsaEncryptCipher(java.security.PublicKey)>($r4);

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r3 = staticinvoke <com.vpon.adon.android.utils.CryptUtils: byte[] encryptData(byte[],javax.crypto.Cipher)>($r3, $r5);

        $r1 = staticinvoke <com.vpon.adon.android.utils.Base64: java.lang.String encodeToString(byte[],boolean)>($r3, 0);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r1);

        return $r1;
    }
}
