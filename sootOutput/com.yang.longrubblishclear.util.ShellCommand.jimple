public class com.yang.longrubblishclear.util.ShellCommand extends java.lang.Object
{
    private static final java.lang.String TAG;
    private java.lang.Boolean can_su;
    public com.yang.longrubblishclear.util.ShellCommand$SH sh;
    public com.yang.longrubblishclear.util.ShellCommand$SH su;

    public void <init>()
    {
        com.yang.longrubblishclear.util.ShellCommand r0;
        com.yang.longrubblishclear.util.ShellCommand$SH $r1;

        r0 := @this: com.yang.longrubblishclear.util.ShellCommand;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.yang.longrubblishclear.util.ShellCommand$SH;

        specialinvoke $r1.<com.yang.longrubblishclear.util.ShellCommand$SH: void <init>(com.yang.longrubblishclear.util.ShellCommand,java.lang.String)>(r0, "sh");

        r0.<com.yang.longrubblishclear.util.ShellCommand: com.yang.longrubblishclear.util.ShellCommand$SH sh> = $r1;

        $r1 = new com.yang.longrubblishclear.util.ShellCommand$SH;

        specialinvoke $r1.<com.yang.longrubblishclear.util.ShellCommand$SH: void <init>(com.yang.longrubblishclear.util.ShellCommand,java.lang.String)>(r0, "su");

        r0.<com.yang.longrubblishclear.util.ShellCommand: com.yang.longrubblishclear.util.ShellCommand$SH su> = $r1;

        return;
    }

    public boolean canSU()
    {
        com.yang.longrubblishclear.util.ShellCommand r0;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ShellCommand;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ShellCommand: boolean canSU(boolean)>(0);

        return $z0;
    }

    public boolean canSU(boolean)
    {
        com.yang.longrubblishclear.util.ShellCommand$CommandResult $r4;
        java.lang.Integer $r7;
        com.yang.longrubblishclear.util.ShellCommand r0;
        java.lang.Boolean $r2;
        java.lang.StringBuilder r1, $r6;
        com.yang.longrubblishclear.util.ShellCommand$SH $r3;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ShellCommand;

        $z0 := @parameter0: boolean;

        $r2 = r0.<com.yang.longrubblishclear.util.ShellCommand: java.lang.Boolean can_su>;

        if $r2 == null goto label1;

        if $z0 == 0 goto label4;

     label1:
        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ShellCommand: boolean checkSuAvailable()>();

        if $z0 == 0 goto label5;

        $r3 = r0.<com.yang.longrubblishclear.util.ShellCommand: com.yang.longrubblishclear.util.ShellCommand$SH su>;

        $r4 = virtualinvoke $r3.<com.yang.longrubblishclear.util.ShellCommand$SH: com.yang.longrubblishclear.util.ShellCommand$CommandResult runWaitFor(java.lang.String)>("id");

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r5 = $r4.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.String stdout>;

        if $r5 == null goto label2;

        $r5 = $r4.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.String stdout>;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; ");

     label2:
        $r5 = $r4.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.String stderr>;

        if $r5 == null goto label3;

        $r5 = $r4.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.String stderr>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("canSU() su[");

        $r7 = $r4.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: java.lang.Integer exit_value>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ShellCommand", $r5);

        $z0 = virtualinvoke $r4.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: boolean success()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r0.<com.yang.longrubblishclear.util.ShellCommand: java.lang.Boolean can_su> = $r2;

     label4:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("can_su:");

        $r2 = r0.<com.yang.longrubblishclear.util.ShellCommand: java.lang.Boolean can_su>;

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ShellCommand", $r5);

        $r2 = r0.<com.yang.longrubblishclear.util.ShellCommand: java.lang.Boolean can_su>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label5:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<com.yang.longrubblishclear.util.ShellCommand: java.lang.Boolean can_su> = $r2;

        goto label4;
    }

    public boolean checkSuAvailable()
    {
        com.yang.longrubblishclear.util.ShellCommand r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ShellCommand;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/system/bin/su");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ShellCommand", "/system/bin/su");

        return 1;

     label1:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/system/xbin/su");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ShellCommand", "/system/xbin/su");

        return 1;

     label2:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/data/bin/su");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ShellCommand", "/data/su");

        return 1;

     label3:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/sbin/su");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ShellCommand", "/sbin/su");

        return 1;

     label4:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/vendor/bin/su");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label5;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ShellCommand", "/vendor/bin/su");

        return 1;

     label5:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/system/sbin/su");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label6;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ShellCommand", "/system/sbin/su");

        return 1;

     label6:
        return 0;
    }

    public com.yang.longrubblishclear.util.ShellCommand$SH suOrSH()
    {
        com.yang.longrubblishclear.util.ShellCommand r0;
        com.yang.longrubblishclear.util.ShellCommand$SH r1;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.ShellCommand;

        $z0 = virtualinvoke r0.<com.yang.longrubblishclear.util.ShellCommand: boolean canSU()>();

        if $z0 == 0 goto label1;

        r1 = r0.<com.yang.longrubblishclear.util.ShellCommand: com.yang.longrubblishclear.util.ShellCommand$SH su>;

        return r1;

     label1:
        r1 = r0.<com.yang.longrubblishclear.util.ShellCommand: com.yang.longrubblishclear.util.ShellCommand$SH sh>;

        return r1;
    }

    public static void <clinit>()
    {
        <com.yang.longrubblishclear.util.ShellCommand: java.lang.String TAG> = "ShellCommand";

        return;
    }
}
