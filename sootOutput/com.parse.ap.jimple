class com.parse.ap extends java.lang.Object
{
    static java.util.Map a;
    static com.parse.aq b;
    static java.lang.String c;
    static java.lang.String d;
    static org.json.JSONObject e;
    static int f;
    static java.util.Set g;
    static java.util.Set h;
    static com.parse.ParseInstallation i;
    static final boolean j;
    private static final java.util.regex.Pattern k;
    private static boolean l;

    static void <clinit>()
    {
        java.util.HashSet $r2;
        java.lang.Class $r0;
        java.util.regex.Pattern $r1;
        boolean $z0;

        $r0 = class "Lcom/parse/ap;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.parse.ap: boolean j> = $z0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^$|^[a-zA-Z][A-Za-z0-9_-]*$");

        <com.parse.ap: java.util.regex.Pattern k> = $r1;

        <com.parse.ap: java.util.Map a> = null;

        <com.parse.ap: com.parse.aq b> = null;

        <com.parse.ap: java.lang.String c> = null;

        <com.parse.ap: java.lang.String d> = null;

        <com.parse.ap: org.json.JSONObject e> = null;

        <com.parse.ap: int f> = 10;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        <com.parse.ap: java.util.Set g> = $r2;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        <com.parse.ap: java.util.Set h> = $r2;

        <com.parse.ap: com.parse.ParseInstallation i> = null;

        <com.parse.ap: boolean l> = 0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    void <init>()
    {
        com.parse.ap r0;

        r0 := @this: com.parse.ap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void a()
    {
        java.util.Set $r0;

        <com.parse.ap: boolean l> = 0;

        <com.parse.ap: java.util.Map a> = null;

        <com.parse.ap: com.parse.aq b> = null;

        <com.parse.ap: java.lang.String c> = null;

        $r0 = <com.parse.ap: java.util.Set g>;

        interfaceinvoke $r0.<java.util.Set: void clear()>();

        $r0 = <com.parse.ap: java.util.Set h>;

        interfaceinvoke $r0.<java.util.Set: void clear()>();

        <com.parse.ap: com.parse.ParseInstallation i> = null;

        <com.parse.ap: org.json.JSONObject e> = null;

        return;
    }

    static void a(android.content.Context, java.lang.Class, int)
    {
        android.content.Context $r0;
        com.parse.aq $r2;
        org.json.JSONObject $r3, $r4;
        int $i0;
        java.lang.Class $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.Class;

        $i0 := @parameter2: int;

        staticinvoke <com.parse.ap: void b(android.content.Context)>($r0);

        if $r1 != null goto label2;

        <com.parse.ap: com.parse.aq b> = null;

     label1:
        staticinvoke <com.parse.ap: void g(android.content.Context)>($r0);

        return;

     label2:
        $r3 = staticinvoke <com.parse.ap: org.json.JSONObject b(android.content.Context,java.lang.Class,int)>($r0, $r1, $i0);

        $r4 = $r3;

        if $r3 != null goto label3;

        $r4 = new org.json.JSONObject;

        specialinvoke $r4.<org.json.JSONObject: void <init>()>();

     label3:
        $r2 = new com.parse.aq;

        specialinvoke $r2.<com.parse.aq: void <init>(java.lang.Class,org.json.JSONObject)>(class "Lcom/parse/StandardPushCallback;", $r4);

        <com.parse.ap: com.parse.aq b> = $r2;

        goto label1;
    }

    static void a(android.content.Context, java.lang.String, com.parse.PushCallback)
    {
        com.parse.ar $r3;
        android.content.Context $r0;
        java.util.Map $r4;
        java.lang.String $r1;
        com.parse.PushCallback $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: com.parse.PushCallback;

        staticinvoke <com.parse.ap: void b(android.content.Context)>($r0);

        if $r1 == null goto label1;

        $r4 = <com.parse.ap: java.util.Map a>;

        $r3 = new com.parse.ar;

        specialinvoke $r3.<com.parse.ar: void <init>(com.parse.PushCallback)>($r2);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;

     label1:
        $r3 = new com.parse.ar;

        specialinvoke $r3.<com.parse.ar: void <init>(com.parse.PushCallback)>($r2);

        <com.parse.ap: com.parse.aq b> = $r3;

        return;
    }

    static void a(com.parse.PushService, org.json.JSONObject)
    {
        java.lang.Throwable $r11, $r12, $r14, $r16;
        com.parse.ParseException $r17;
        org.json.JSONObject $r1, $r7;
        java.util.Map $r8;
        int $i0;
        java.lang.String $r2, $r3, $r4;
        boolean $z0, $z1;
        com.parse.aq $r10;
        com.parse.ParseInstallation $r6;
        com.parse.PushService $r0;
        java.lang.StringBuilder $r5;
        java.lang.Object $r9;
        java.lang.Class $r15;
        com.parse.PushCallback $r13;

        $r0 := @parameter0: com.parse.PushService;

        $r1 := @parameter1: org.json.JSONObject;

        $z0 = 0;

        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("channel");

     label01:
        $z1 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("time");

     label02:
        if $z1 == 0 goto label15;

     label03:
        $r3 = <com.parse.ap: java.lang.String c>;

     label04:
        if $r3 == null goto label07;

     label05:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("time");

        $r4 = <com.parse.ap: java.lang.String c>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);

     label06:
        if $i0 <= 0 goto label09;

     label07:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("time");

        <com.parse.ap: java.lang.String c> = $r3;

     label08:
        $z0 = 1;

     label09:
        $r3 = <com.parse.ap: java.lang.String d>;

     label10:
        if $r3 == null goto label15;

     label11:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("time");

        $r4 = <com.parse.ap: java.lang.String d>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);

     label12:
        if $i0 > 0 goto label15;

     label13:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ignoring very old push ");

        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r2);

     label14:
        if $z0 == 0 goto label57;

        staticinvoke <com.parse.ap: void g(android.content.Context)>($r0);

        return;

     label15:
        if $r2 == null goto label25;

     label16:
        $z1 = staticinvoke <com.parse.ap: boolean b(android.content.Context,java.lang.String)>($r0, $r2);

     label17:
        if $z1 != 0 goto label25;

     label18:
        $r6 = <com.parse.ap: com.parse.ParseInstallation i>;

     label19:
        virtualinvoke $r6.<com.parse.ParseInstallation: com.parse.ParseObject fetch()>();

     label20:
        $z0 = 1;

     label21:
        $z1 = staticinvoke <com.parse.ap: boolean b(android.content.Context,java.lang.String)>($r0, $r2);

     label22:
        if $z1 != 0 goto label25;

     label23:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ignoring push to unsubscribed channel ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r2);

     label24:
        if $z0 == 0 goto label57;

        staticinvoke <com.parse.ap: void g(android.content.Context)>($r0);

        return;

     label25:
        $z1 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("push_id");

     label26:
        if $z1 == 0 goto label38;

     label27:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("push_id");

        $r7 = <com.parse.ap: org.json.JSONObject e>;

        $z1 = virtualinvoke $r7.<org.json.JSONObject: boolean has(java.lang.String)>($r3);

     label28:
        if $z1 == 0 goto label31;

     label29:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ignoring redundant push ");

        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r2);

     label30:
        if $z0 == 0 goto label57;

        staticinvoke <com.parse.ap: void g(android.content.Context)>($r0);

        return;

     label31:
        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("time");

        staticinvoke <com.parse.ap: void a(java.lang.String,java.lang.String)>($r3, $r4);

     label32:
        $z0 = 1;

     label33:
        if $z0 == 0 goto label34;

        staticinvoke <com.parse.ap: void g(android.content.Context)>($r0);

     label34:
        $r1 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("data");

        entermonitor class "Lcom/parse/PushService;";

     label35:
        $r8 = <com.parse.ap: java.util.Map a>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r10 = (com.parse.aq) $r9;

        if $r10 != null goto label49;

        $r10 = <com.parse.ap: com.parse.aq b>;

        if $r10 != null goto label48;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Received push ");

        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that has no handler");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logW(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r2);

        exitmonitor class "Lcom/parse/PushService;";

     label36:
        return;

     label37:
        $r11 := @caughtexception;

        exitmonitor class "Lcom/parse/PushService;";

        throw $r11;

     label38:
        $z1 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("time");

     label39:
        if $z1 == 0 goto label33;

     label40:
        $r3 = <com.parse.ap: java.lang.String c>;

     label41:
        if $r3 == null goto label44;

     label42:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("time");

        $r4 = <com.parse.ap: java.lang.String c>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);

     label43:
        if $i0 <= 0 goto label33;

     label44:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("time");

        <com.parse.ap: java.lang.String c> = $r3;

     label45:
        $z0 = 1;

        goto label33;

     label46:
        $r12 := @caughtexception;

        if $z0 == 0 goto label47;

        staticinvoke <com.parse.ap: void g(android.content.Context)>($r0);

     label47:
        throw $r12;

     label48:
        $r10 = <com.parse.ap: com.parse.aq b>;

     label49:
        $r13 = virtualinvoke $r10.<com.parse.aq: com.parse.PushCallback a()>();

     label50:
        exitmonitor class "Lcom/parse/PushService;";

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("received push on channel ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r3);

        virtualinvoke $r13.<com.parse.PushCallback: void setService(android.app.Service)>($r0);

        virtualinvoke $r13.<com.parse.PushCallback: void setPushData(org.json.JSONObject)>($r1);

        virtualinvoke $r13.<com.parse.PushCallback: void setChannel(java.lang.String)>($r2);

        virtualinvoke $r13.<com.parse.PushCallback: void run()>();

        return;

     label51:
        $r14 := @caughtexception;

     label52:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("illegal access to ");

        $r15 = $r10.<com.parse.aq: java.lang.Class a>;

        $r2 = virtualinvoke $r15.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.ParsePushRouter", $r2, $r14);

        exitmonitor class "Lcom/parse/PushService;";

     label53:
        return;

     label54:
        $r16 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("could not instantiate ");

        $r15 = $r10.<com.parse.aq: java.lang.Class a>;

        $r2 = virtualinvoke $r15.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.ParsePushRouter", $r2, $r16);

        exitmonitor class "Lcom/parse/PushService;";

     label55:
        return;

     label56:
        $r17 := @caughtexception;

        goto label21;

     label57:
        return;

        catch java.lang.Throwable from label01 to label02 with label46;
        catch java.lang.Throwable from label03 to label04 with label46;
        catch java.lang.Throwable from label05 to label06 with label46;
        catch java.lang.Throwable from label07 to label08 with label46;
        catch java.lang.Throwable from label09 to label10 with label46;
        catch java.lang.Throwable from label11 to label12 with label46;
        catch java.lang.Throwable from label13 to label14 with label46;
        catch java.lang.Throwable from label16 to label17 with label46;
        catch com.parse.ParseException from label19 to label20 with label56;
        catch java.lang.Throwable from label18 to label20 with label46;
        catch java.lang.Throwable from label21 to label22 with label46;
        catch java.lang.Throwable from label23 to label24 with label46;
        catch java.lang.Throwable from label25 to label26 with label46;
        catch java.lang.Throwable from label27 to label28 with label46;
        catch java.lang.Throwable from label29 to label30 with label46;
        catch java.lang.Throwable from label31 to label32 with label46;
        catch java.lang.Throwable from label35 to label36 with label37;
        catch java.lang.Throwable from label38 to label39 with label46;
        catch java.lang.Throwable from label40 to label41 with label46;
        catch java.lang.Throwable from label42 to label43 with label46;
        catch java.lang.Throwable from label44 to label45 with label46;
        catch java.lang.Throwable from label48 to label49 with label37;
        catch java.lang.IllegalAccessException from label49 to label50 with label51;
        catch java.lang.InstantiationException from label49 to label50 with label54;
        catch java.lang.Throwable from label49 to label50 with label37;
        catch java.lang.Throwable from label52 to label53 with label37;
        catch java.lang.Throwable from label54 to label55 with label37;
    }

    private static void a(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r4;
        java.util.Iterator $r5;
        java.lang.AssertionError $r3;
        org.json.JSONException $r9;
        org.json.JSONObject $r2;
        int $i0, $i1;
        java.lang.Object $r6;
        java.lang.String $r0, $r1, $r7, $r8;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "Lcom/parse/ap;";

     label01:
        $r2 = <com.parse.ap: org.json.JSONObject e>;

     label02:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>($r0, $r1);

     label03:
        $r0 = null;

     label04:
        $z0 = <com.parse.ap: boolean j>;

        if $z0 != 0 goto label07;

        $i0 = <com.parse.ap: int f>;

        if $i0 > 0 goto label07;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label05:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/parse/ap;";

        throw $r4;

     label06:
        $r2 = <com.parse.ap: org.json.JSONObject e>;

        virtualinvoke $r2.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>($r1);

     label07:
        $r2 = <com.parse.ap: org.json.JSONObject e>;

        $i0 = virtualinvoke $r2.<org.json.JSONObject: int length()>();

        $i1 = <com.parse.ap: int f>;

        if $i0 <= $i1 goto label09;

        $r2 = <com.parse.ap: org.json.JSONObject e>;

        $r5 = virtualinvoke $r2.<org.json.JSONObject: java.util.Iterator keys()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r6;

        $r2 = <com.parse.ap: org.json.JSONObject e>;

        $r0 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>($r1);

     label08:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $r2 = <com.parse.ap: org.json.JSONObject e>;

        $r8 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>($r7);

        $i0 = virtualinvoke $r8.<java.lang.String: int compareTo(java.lang.String)>($r0);

        if $i0 >= 0 goto label08;

        $r1 = $r7;

        $r0 = $r8;

        goto label08;

     label09:
        if $r0 == null goto label10;

        <com.parse.ap: java.lang.String d> = $r0;

     label10:
        exitmonitor class "Lcom/parse/ap;";

        return;

     label11:
        $r9 := @caughtexception;

        goto label03;

        catch org.json.JSONException from label02 to label03 with label11;
        catch java.lang.Throwable from label01 to label03 with label05;
        catch java.lang.Throwable from label04 to label05 with label05;
        catch java.lang.Throwable from label06 to label10 with label05;
    }

    private static void a(org.json.JSONObject)
    {
        com.parse.aq $r6;
        java.util.Iterator $r2;
        java.lang.ClassCastException $r10;
        org.json.JSONException $r7, $r11;
        org.json.JSONObject $r0, $r5;
        java.util.Map $r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r8;
        java.lang.ClassNotFoundException $r9;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        if $r0 != null goto label01;

        return;

     label01:
        $r1 = <com.parse.ap: java.util.Map a>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label02:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

     label03:
        $r5 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r4);

     label04:
        $r1 = <com.parse.ap: java.util.Map a>;

        $r6 = new com.parse.aq;

     label05:
        specialinvoke $r6.<com.parse.aq: void <init>(org.json.JSONObject)>($r5);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label06:
        goto label02;

     label07:
        $r7 := @caughtexception;

     label08:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to parse push route ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r4);

        goto label02;

     label09:
        $r9 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Route references missing class: ");

        $r4 = virtualinvoke $r9.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r4);

        goto label02;

     label10:
        $r10 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Route references class which is not a PushCallback: ");

        $r4 = virtualinvoke $r10.<java.lang.ClassCastException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r4);

        goto label02;

     label11:
        $r11 := @caughtexception;

        $r5 = null;

        goto label08;

     label12:
        return;

        catch org.json.JSONException from label03 to label04 with label11;
        catch java.lang.ClassNotFoundException from label03 to label04 with label09;
        catch java.lang.ClassCastException from label03 to label04 with label10;
        catch org.json.JSONException from label05 to label06 with label07;
        catch java.lang.ClassNotFoundException from label05 to label06 with label09;
        catch java.lang.ClassCastException from label05 to label06 with label10;
    }

    public static boolean a(android.content.Context)
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        com.parse.aq $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/parse/ap;";

     label1:
        staticinvoke <com.parse.ap: void b(android.content.Context)>($r0);

        $r1 = <com.parse.ap: com.parse.aq b>;

        if $r1 != null goto label4;

        $r2 = <com.parse.ap: java.util.Map a>;

        if $r2 == null goto label2;

        $r2 = <com.parse.ap: java.util.Map a>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label2:
        $r3 = staticinvoke <com.parse.ap: java.util.Set c(android.content.Context)>($r0);

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

     label3:
        if $z0 != 0 goto label6;

     label4:
        $z0 = 1;

     label5:
        exitmonitor class "Lcom/parse/ap;";

        return $z0;

     label6:
        $z0 = 0;

        goto label5;

     label7:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/parse/ap;";

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label7;
    }

    static boolean a(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r5;
        android.content.Context $r0;
        java.util.Map $r3;
        java.util.Set $r4;
        java.lang.Object $r2;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "Lcom/parse/ap;";

     label1:
        staticinvoke <com.parse.ap: void b(android.content.Context)>($r0);

        $r3 = <com.parse.ap: java.util.Map a>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        if $r2 == null goto label4;

        $r4 = <com.parse.ap: java.util.Set g>;

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        $r4 = <com.parse.ap: java.util.Set h>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r1);

        staticinvoke <com.parse.ap: void g(android.content.Context)>($r0);

     label2:
        $z0 = 1;

     label3:
        exitmonitor class "Lcom/parse/ap;";

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r5 := @caughtexception;

        exitmonitor class "Lcom/parse/ap;";

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    static boolean a(android.content.Context, java.lang.String, java.lang.Class, int)
    {
        android.content.Context $r0;
        java.lang.IllegalArgumentException $r6;
        java.lang.NullPointerException $r3;
        java.util.regex.Matcher $r5;
        org.json.JSONObject $r8;
        int $i0;
        java.lang.Class $r2;
        java.lang.StringBuilder $r7;
        java.lang.String $r1;
        java.util.regex.Pattern $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class;

        $i0 := @parameter3: int;

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("invalid channel: you cannot subscribe to null");

        throw $r3;

     label1:
        $r4 = <com.parse.ap: java.util.regex.Pattern k>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalid channel name: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label2:
        $r8 = staticinvoke <com.parse.ap: org.json.JSONObject b(android.content.Context,java.lang.Class,int)>($r0, $r2, $i0);

        if $r8 != null goto label3;

        return 0;

     label3:
        $z0 = staticinvoke <com.parse.ap: boolean a(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.Class)>($r0, $r1, $r8, class "Lcom/parse/StandardPushCallback;");

        return $z0;
    }

    private static boolean a(android.content.Context, java.lang.String, org.json.JSONObject, java.lang.Class)
    {
        java.lang.Throwable $r12;
        android.content.Context $r0;
        com.parse.aq $r7;
        java.util.Set $r9;
        org.json.JSONException $r10;
        org.json.JSONObject $r2, $r4;
        java.util.Map $r6;
        java.lang.Class $r3;
        java.lang.Object $r8;
        java.lang.StringBuilder $r11;
        java.lang.String $r1, $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.json.JSONObject;

        $r3 := @parameter3: java.lang.Class;

        entermonitor class "Lcom/parse/ap;";

     label01:
        staticinvoke <com.parse.ap: void b(android.content.Context)>($r0);

     label02:
        $r4 = new org.json.JSONObject;

     label03:
        $r5 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        specialinvoke $r4.<org.json.JSONObject: void <init>(java.lang.String)>($r5);

     label04:
        $r6 = <com.parse.ap: java.util.Map a>;

        $r7 = new com.parse.aq;

     label05:
        specialinvoke $r7.<com.parse.aq: void <init>(java.lang.Class,org.json.JSONObject)>($r3, $r4);

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label06:
        if $r8 != null goto label13;

        $z0 = 1;

     label07:
        if $z0 == 0 goto label11;

        $r9 = <com.parse.ap: java.util.Set g>;

     label08:
        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r1);

     label09:
        $r9 = <com.parse.ap: java.util.Set h>;

     label10:
        interfaceinvoke $r9.<java.util.Set: boolean remove(java.lang.Object)>($r1);

     label11:
        staticinvoke <com.parse.ap: void g(android.content.Context)>($r0);

     label12:
        exitmonitor class "Lcom/parse/ap;";

        return $z0;

     label13:
        $z0 = 0;

        goto label07;

     label14:
        $r10 := @caughtexception;

     label15:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Impossible exception when deserializing a serialized JSON string: ");

        $r1 = virtualinvoke $r10.<org.json.JSONException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r1);

     label16:
        $z0 = 0;

        goto label12;

     label17:
        $r12 := @caughtexception;

        exitmonitor class "Lcom/parse/ap;";

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch org.json.JSONException from label03 to label04 with label14;
        catch org.json.JSONException from label05 to label06 with label14;
        catch org.json.JSONException from label08 to label09 with label14;
        catch org.json.JSONException from label10 to label12 with label14;
        catch java.lang.Throwable from label02 to label12 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    private static org.json.JSONObject b(android.content.Context, java.lang.Class, int)
    {
        java.lang.Throwable $r10;
        android.content.Context $r0;
        java.lang.CharSequence $r6;
        android.content.pm.PackageManager $r4;
        android.content.ComponentName $r7;
        java.lang.RuntimeException $r13;
        org.json.JSONException $r12;
        org.json.JSONObject $r9;
        int $i0;
        java.lang.Class $r1;
        java.lang.StringBuilder $r11;
        java.lang.String $r2, $r3, $r8;
        android.content.pm.ApplicationInfo $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.Class;

        $i0 := @parameter2: int;

        $r2 = null;

        staticinvoke <com.parse.ap: java.lang.String h(android.content.Context)>($r0);

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 0);

     label2:
        $r6 = virtualinvoke $r5.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r4);

        if $r6 == null goto label3;

        $r2 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

     label3:
        $r7 = new android.content.ComponentName;

        specialinvoke $r7.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r0, $r1);

        $r3 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String getClassName()>();

        $r8 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r9 = new org.json.JSONObject;

        specialinvoke $r9.<org.json.JSONObject: void <init>()>();

     label4:
        virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("icon", $i0);

        virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("appName", $r2);

        virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("activityClass", $r3);

        virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("activityPackage", $r8);

     label5:
        return $r9;

     label6:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("missing package ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.ParsePushRouter", $r2, $r10);

        return null;

     label7:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        $r2 = virtualinvoke $r12.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r13;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label6;
        catch org.json.JSONException from label4 to label5 with label7;
    }

    static void b(android.content.Context)
    {
        java.lang.Throwable $r11;
        android.content.Context $r0;
        java.util.HashMap $r2;
        java.lang.ClassCastException $r12;
        org.json.JSONObject $r3, $r7;
        int $i0, $i1;
        java.lang.String $r6;
        boolean $z0;
        com.parse.aq $r1;
        com.parse.ParseInstallation $r4;
        java.util.Set $r9;
        java.lang.StringBuilder $r5;
        java.lang.ClassNotFoundException $r10;
        org.json.JSONArray $r8;

        $r0 := @parameter0: android.content.Context;

        $r1 = null;

        entermonitor class "Lcom/parse/ap;";

     label01:
        $z0 = <com.parse.ap: boolean l>;

     label02:
        if $z0 == 0 goto label04;

     label03:
        exitmonitor class "Lcom/parse/ap;";

        return;

     label04:
        <com.parse.ap: boolean l> = 1;

        <com.parse.ap: com.parse.aq b> = null;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <com.parse.ap: java.util.Map a> = $r2;

        $r3 = new org.json.JSONObject;

        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        <com.parse.ap: org.json.JSONObject e> = $r3;

        $r4 = new com.parse.ParseInstallation;

        specialinvoke $r4.<com.parse.ParseInstallation: void <init>()>();

        <com.parse.ap: com.parse.ParseInstallation i> = $r4;

        $r3 = staticinvoke <com.parse.ParseObject: org.json.JSONObject getDiskObject(android.content.Context,java.lang.String)>($r0, "persistentCallbacks");

        if $r3 == null goto label05;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Loading legacy route map: ");

        $r6 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logD(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r6);

        staticinvoke <com.parse.ap: void a(org.json.JSONObject)>($r3);

        staticinvoke <com.parse.ap: void g(android.content.Context)>($r0);

        staticinvoke <com.parse.ParseObject: void deleteDiskObject(android.content.Context,java.lang.String)>($r0, "persistentCallbacks");

     label05:
        $r3 = staticinvoke <com.parse.ParseObject: org.json.JSONObject getDiskObject(android.content.Context,java.lang.String)>($r0, "pushState");

        if $r3 == null goto label03;

        $r7 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("routes");

        staticinvoke <com.parse.ap: void a(org.json.JSONObject)>($r7);

        $r7 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("defaultRoute");

     label06:
        if $r7 == null goto label09;

     label07:
        $r1 = new com.parse.aq;

     label08:
        specialinvoke $r1.<com.parse.aq: void <init>(org.json.JSONObject)>($r7);

     label09:
        <com.parse.ap: com.parse.aq b> = $r1;

     label10:
        $r6 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("lastTime", null);

        <com.parse.ap: java.lang.String c> = $r6;

        $r6 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("ignoreAfter", null);

        <com.parse.ap: java.lang.String d> = $r6;

        $r8 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>("addChannels");

        if $r8 == null goto label17;

        $i0 = 0;

     label11:
        $i1 = virtualinvoke $r8.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label17;

        $r9 = <com.parse.ap: java.util.Set g>;

        $r6 = virtualinvoke $r8.<org.json.JSONArray: java.lang.String optString(int)>($i0);

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r6);

        $i0 = $i0 + 1;

        goto label11;

     label12:
        $r10 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Default route references undefined class: ");

        $r6 = virtualinvoke $r10.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r6);

     label13:
        goto label10;

     label14:
        $r11 := @caughtexception;

        exitmonitor class "Lcom/parse/ap;";

        throw $r11;

     label15:
        $r12 := @caughtexception;

     label16:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Default route references class which is not a PushCallback: ");

        $r6 = virtualinvoke $r12.<java.lang.ClassCastException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r6);

        goto label10;

     label17:
        $r8 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>("removeChannels");

        if $r8 == null goto label19;

        $i0 = 0;

     label18:
        $i1 = virtualinvoke $r8.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label19;

        $r9 = <com.parse.ap: java.util.Set h>;

        $r6 = virtualinvoke $r8.<org.json.JSONArray: java.lang.String optString(int)>($i0);

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r6);

        $i0 = $i0 + 1;

        goto label18;

     label19:
        $z0 = virtualinvoke $r3.<org.json.JSONObject: boolean has(java.lang.String)>("installation");

        if $z0 == 0 goto label20;

        $r4 = <com.parse.ap: com.parse.ParseInstallation i>;

        $r7 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("installation");

        virtualinvoke $r4.<com.parse.ParseInstallation: void mergeObject(org.json.JSONObject,boolean)>($r7, 0);

     label20:
        $z0 = virtualinvoke $r3.<org.json.JSONObject: boolean has(java.lang.String)>("history");

        if $z0 == 0 goto label03;

        $r3 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("history");

        <com.parse.ap: org.json.JSONObject e> = $r3;

     label21:
        goto label03;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label06 with label14;
        catch java.lang.ClassNotFoundException from label08 to label09 with label12;
        catch java.lang.ClassCastException from label08 to label09 with label15;
        catch java.lang.Throwable from label07 to label10 with label14;
        catch java.lang.Throwable from label10 to label13 with label14;
        catch java.lang.Throwable from label16 to label21 with label14;
    }

    private static boolean b(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        com.parse.aq $r5;
        java.util.Map $r3;
        java.util.Set $r2;
        java.lang.Object $r4;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.parse.ap: java.util.Set c(android.content.Context)>($r0);

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = <com.parse.ap: java.util.Map a>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.parse.aq) $r4;

        if $r5 == null goto label2;

        $z0 = virtualinvoke $r5.<com.parse.aq: boolean c()>();

        if $z0 == 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    static java.util.Set c(android.content.Context)
    {
        java.lang.Throwable $r6;
        android.content.Context $r0;
        com.parse.ParseInstallation $r2;
        com.parse.ParseException $r5;
        java.util.Set $r4;
        java.util.HashSet $r1;
        java.util.List $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/parse/ap;";

     label01:
        staticinvoke <com.parse.ap: void b(android.content.Context)>($r0);

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

     label02:
        $r2 = <com.parse.ap: com.parse.ParseInstallation i>;

     label03:
        $z0 = virtualinvoke $r2.<com.parse.ParseInstallation: boolean isDataAvailable()>();

     label04:
        if $z0 != 0 goto label06;

        $r2 = <com.parse.ap: com.parse.ParseInstallation i>;

     label05:
        virtualinvoke $r2.<com.parse.ParseInstallation: com.parse.ParseObject fetch()>();

     label06:
        $r2 = <com.parse.ap: com.parse.ParseInstallation i>;

     label07:
        $r3 = virtualinvoke $r2.<com.parse.ParseInstallation: java.util.List getList(java.lang.String)>("channels");

     label08:
        if $r3 == null goto label10;

     label09:
        interfaceinvoke $r1.<java.util.Set: boolean addAll(java.util.Collection)>($r3);

     label10:
        $r4 = <com.parse.ap: java.util.Set g>;

        interfaceinvoke $r1.<java.util.Set: boolean addAll(java.util.Collection)>($r4);

        $r4 = <com.parse.ap: java.util.Set h>;

        interfaceinvoke $r1.<java.util.Set: boolean removeAll(java.util.Collection)>($r4);

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

     label11:
        exitmonitor class "Lcom/parse/ap;";

        return $r4;

     label12:
        $r5 := @caughtexception;

     label13:
        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.ParsePushRouter", "Failed to get installation for the push service.", $r5);

     label14:
        goto label10;

     label15:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/parse/ap;";

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch com.parse.ParseException from label03 to label04 with label12;
        catch com.parse.ParseException from label05 to label06 with label12;
        catch com.parse.ParseException from label07 to label08 with label12;
        catch com.parse.ParseException from label09 to label10 with label12;
        catch java.lang.Throwable from label02 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    static boolean d(android.content.Context)
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        com.parse.ParseInstallation $r2;
        com.parse.ParseException $r3;
        java.util.Set $r1;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: android.content.Context;

        $z0 = 1;

        entermonitor class "Lcom/parse/ap;";

     label01:
        staticinvoke <com.parse.ap: void b(android.content.Context)>($r0);

     label02:
        $r1 = <com.parse.ap: java.util.Set g>;

     label03:
        $z1 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

     label04:
        if $z1 != 0 goto label27;

        $r2 = <com.parse.ap: com.parse.ParseInstallation i>;

        $r1 = <com.parse.ap: java.util.Set g>;

     label05:
        virtualinvoke $r2.<com.parse.ParseInstallation: void addAllUnique(java.lang.String,java.util.Collection)>("channels", $r1);

     label06:
        $r2 = <com.parse.ap: com.parse.ParseInstallation i>;

     label07:
        virtualinvoke $r2.<com.parse.ParseInstallation: void save()>();

     label08:
        $r1 = <com.parse.ap: java.util.Set g>;

     label09:
        interfaceinvoke $r1.<java.util.Set: void clear()>();

     label10:
        $z1 = 1;

     label11:
        $r1 = <com.parse.ap: java.util.Set h>;

     label12:
        $z2 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

     label13:
        if $z2 != 0 goto label20;

        $r2 = <com.parse.ap: com.parse.ParseInstallation i>;

        $r1 = <com.parse.ap: java.util.Set h>;

     label14:
        virtualinvoke $r2.<com.parse.ParseInstallation: void removeAll(java.lang.String,java.util.Collection)>("channels", $r1);

     label15:
        $r2 = <com.parse.ap: com.parse.ParseInstallation i>;

     label16:
        virtualinvoke $r2.<com.parse.ParseInstallation: void save()>();

     label17:
        $r1 = <com.parse.ap: java.util.Set h>;

     label18:
        interfaceinvoke $r1.<java.util.Set: void clear()>();

     label19:
        $z1 = 1;

     label20:
        if $z1 == 0 goto label22;

     label21:
        staticinvoke <com.parse.ap: void g(android.content.Context)>($r0);

     label22:
        exitmonitor class "Lcom/parse/ap;";

        return $z0;

     label23:
        $r3 := @caughtexception;

     label24:
        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.ParsePushRouter", "Failed to save Installation in the Push Service", $r3);

     label25:
        $z0 = 0;

        goto label22;

     label26:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/parse/ap;";

        throw $r4;

     label27:
        $z1 = 0;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch com.parse.ParseException from label03 to label04 with label23;
        catch com.parse.ParseException from label05 to label06 with label23;
        catch com.parse.ParseException from label07 to label08 with label23;
        catch com.parse.ParseException from label09 to label10 with label23;
        catch com.parse.ParseException from label12 to label13 with label23;
        catch com.parse.ParseException from label14 to label15 with label23;
        catch com.parse.ParseException from label16 to label17 with label23;
        catch com.parse.ParseException from label18 to label19 with label23;
        catch java.lang.Throwable from label02 to label19 with label26;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
    }

    static org.json.JSONObject e(android.content.Context)
    {
        java.lang.Throwable $r9;
        android.content.Context $r0;
        com.parse.ParseInstallation $r2;
        java.util.Iterator $r7;
        org.json.JSONException $r8;
        org.json.JSONObject $r1, $r5;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r3;
        org.json.JSONArray $r6;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/parse/ap;";

     label01:
        staticinvoke <com.parse.ap: void b(android.content.Context)>($r0);

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

     label02:
        $r2 = staticinvoke <com.parse.ParseInstallation: com.parse.ParseInstallation getCurrentInstallation()>();

        $r3 = virtualinvoke $r2.<com.parse.ParseInstallation: java.lang.String getInstallationId()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("installation_id", $r3);

        $r3 = staticinvoke <com.parse.ap: java.lang.String h(android.content.Context)>($r0);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("oauth_key", $r3);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("v", "a1.0.28");

     label03:
        $r3 = <com.parse.ap: java.lang.String c>;

        if $r3 != null goto label19;

        $r4 = <org.json.JSONObject: java.lang.Object NULL>;

     label04:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("last", $r4);

     label05:
        $r5 = <com.parse.ap: org.json.JSONObject e>;

     label06:
        $i0 = virtualinvoke $r5.<org.json.JSONObject: int length()>();

     label07:
        if $i0 == 0 goto label24;

        $r6 = new org.json.JSONArray;

     label08:
        specialinvoke $r6.<org.json.JSONArray: void <init>()>();

     label09:
        $r5 = <com.parse.ap: org.json.JSONObject e>;

     label10:
        $r7 = virtualinvoke $r5.<org.json.JSONObject: java.util.Iterator keys()>();

     label11:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label12:
        if $z0 == 0 goto label23;

     label13:
        $r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r6.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r4);

     label14:
        goto label11;

     label15:
        $r8 := @caughtexception;

     label16:
        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.ParsePushRouter", "unexpected JSONException", $r8);

     label17:
        $r1 = null;

     label18:
        exitmonitor class "Lcom/parse/ap;";

        return $r1;

     label19:
        $r3 = <com.parse.ap: java.lang.String c>;

     label20:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("last", $r3);

     label21:
        goto label05;

     label22:
        $r9 := @caughtexception;

        exitmonitor class "Lcom/parse/ap;";

        throw $r9;

     label23:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("last_seen", $r6);

     label24:
        $r3 = <com.parse.ap: java.lang.String d>;

     label25:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("ignore_after", $r3);

     label26:
        goto label18;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch org.json.JSONException from label02 to label03 with label15;
        catch org.json.JSONException from label04 to label05 with label15;
        catch org.json.JSONException from label06 to label07 with label15;
        catch org.json.JSONException from label08 to label09 with label15;
        catch org.json.JSONException from label10 to label12 with label15;
        catch org.json.JSONException from label13 to label14 with label15;
        catch java.lang.Throwable from label02 to label14 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch org.json.JSONException from label20 to label21 with label15;
        catch java.lang.Throwable from label19 to label21 with label22;
        catch org.json.JSONException from label23 to label24 with label15;
        catch org.json.JSONException from label25 to label26 with label15;
        catch java.lang.Throwable from label23 to label26 with label22;
    }

    static void f(android.content.Context)
    {
        android.content.Context $r0;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <com.parse.ap: void a()>();

        staticinvoke <com.parse.ParseObject: void deleteDiskObject(android.content.Context,java.lang.String)>($r0, "persistentCallbacks");

        staticinvoke <com.parse.ParseObject: void deleteDiskObject(android.content.Context,java.lang.String)>($r0, "pushState");

        return;
    }

    private static void g(android.content.Context)
    {
        java.lang.Throwable $r13;
        android.content.Context $r0;
        org.json.JSONException $r10;
        org.json.JSONObject $r1, $r3, $r9;
        java.util.Map $r4;
        java.lang.String $r8;
        boolean $z0;
        com.parse.aq $r2;
        com.parse.ParseInstallation $r14;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.lang.Object $r7;
        java.lang.StringBuilder $r11;
        org.json.JSONArray $r12;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/parse/ap;";

     label01:
        $r1 = new org.json.JSONObject;

     label02:
        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("version", 2);

     label03:
        $r2 = <com.parse.ap: com.parse.aq b>;

        if $r2 == null goto label05;

        $r2 = <com.parse.ap: com.parse.aq b>;

     label04:
        $r3 = virtualinvoke $r2.<com.parse.aq: org.json.JSONObject b()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("defaultRoute", $r3);

     label05:
        $r3 = new org.json.JSONObject;

     label06:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

     label07:
        $r4 = <com.parse.ap: java.util.Map a>;

     label08:
        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label10:
        if $z0 == 0 goto label20;

     label11:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label12:
        $r8 = (java.lang.String) $r7;

        $r4 = <com.parse.ap: java.util.Map a>;

     label13:
        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

     label14:
        $r2 = (com.parse.aq) $r7;

     label15:
        $r9 = virtualinvoke $r2.<com.parse.aq: org.json.JSONObject b()>();

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>($r8, $r9);

     label16:
        goto label09;

     label17:
        $r10 := @caughtexception;

     label18:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to save push routes to disk");

        $r8 = virtualinvoke $r10.<org.json.JSONException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String)>("com.parse.ParsePushRouter", $r8);

     label19:
        exitmonitor class "Lcom/parse/ap;";

        return;

     label20:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("routes", $r3);

     label21:
        $r5 = <com.parse.ap: java.util.Set g>;

     label22:
        $z0 = interfaceinvoke $r5.<java.util.Set: boolean isEmpty()>();

     label23:
        if $z0 != 0 goto label35;

        $r12 = new org.json.JSONArray;

     label24:
        specialinvoke $r12.<org.json.JSONArray: void <init>()>();

     label25:
        $r5 = <com.parse.ap: java.util.Set g>;

     label26:
        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label27:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label28:
        if $z0 == 0 goto label34;

     label29:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label30:
        $r8 = (java.lang.String) $r7;

     label31:
        virtualinvoke $r12.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r8);

     label32:
        goto label27;

     label33:
        $r13 := @caughtexception;

        exitmonitor class "Lcom/parse/ap;";

        throw $r13;

     label34:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("addChannels", $r12);

     label35:
        $r5 = <com.parse.ap: java.util.Set h>;

     label36:
        $z0 = interfaceinvoke $r5.<java.util.Set: boolean isEmpty()>();

     label37:
        if $z0 != 0 goto label48;

        $r12 = new org.json.JSONArray;

     label38:
        specialinvoke $r12.<org.json.JSONArray: void <init>()>();

     label39:
        $r5 = <com.parse.ap: java.util.Set h>;

     label40:
        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label41:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label42:
        if $z0 == 0 goto label47;

     label43:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label44:
        $r8 = (java.lang.String) $r7;

     label45:
        virtualinvoke $r12.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r8);

     label46:
        goto label41;

     label47:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("removeChannels", $r12);

     label48:
        $r14 = <com.parse.ap: com.parse.ParseInstallation i>;

     label49:
        $r3 = virtualinvoke $r14.<com.parse.ParseInstallation: org.json.JSONObject toJSONObject(boolean,boolean)>(1, 1);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("installation", $r3);

     label50:
        $r8 = <com.parse.ap: java.lang.String c>;

     label51:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("lastTime", $r8);

     label52:
        $r3 = <com.parse.ap: org.json.JSONObject e>;

     label53:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("history", $r3);

     label54:
        $r8 = <com.parse.ap: java.lang.String d>;

     label55:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("ignoreAfter", $r8);

        staticinvoke <com.parse.ParseObject: void saveDiskObject(android.content.Context,java.lang.String,org.json.JSONObject)>($r0, "pushState", $r1);

     label56:
        goto label19;

        catch org.json.JSONException from label02 to label03 with label17;
        catch org.json.JSONException from label04 to label05 with label17;
        catch org.json.JSONException from label06 to label07 with label17;
        catch org.json.JSONException from label08 to label10 with label17;
        catch org.json.JSONException from label11 to label12 with label17;
        catch org.json.JSONException from label13 to label14 with label17;
        catch org.json.JSONException from label15 to label16 with label17;
        catch java.lang.Throwable from label01 to label16 with label33;
        catch java.lang.Throwable from label18 to label19 with label33;
        catch org.json.JSONException from label20 to label21 with label17;
        catch org.json.JSONException from label22 to label23 with label17;
        catch org.json.JSONException from label24 to label25 with label17;
        catch org.json.JSONException from label26 to label28 with label17;
        catch org.json.JSONException from label29 to label30 with label17;
        catch org.json.JSONException from label31 to label32 with label17;
        catch java.lang.Throwable from label20 to label32 with label33;
        catch org.json.JSONException from label34 to label35 with label17;
        catch org.json.JSONException from label36 to label37 with label17;
        catch org.json.JSONException from label38 to label39 with label17;
        catch org.json.JSONException from label40 to label42 with label17;
        catch org.json.JSONException from label43 to label44 with label17;
        catch org.json.JSONException from label45 to label46 with label17;
        catch org.json.JSONException from label47 to label48 with label17;
        catch org.json.JSONException from label49 to label50 with label17;
        catch org.json.JSONException from label51 to label52 with label17;
        catch org.json.JSONException from label53 to label54 with label17;
        catch org.json.JSONException from label55 to label56 with label17;
        catch java.lang.Throwable from label34 to label56 with label33;
    }

    private static java.lang.String h(android.content.Context)
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        org.json.JSONException $r5;
        org.json.JSONObject $r1;
        java.lang.String $r2, $r3;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/parse/ap;";

     label01:
        $r1 = staticinvoke <com.parse.ParseObject: org.json.JSONObject getDiskObject(android.content.Context,java.lang.String)>($r0, "oauth");

        if $r1 != null goto label14;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

     label02:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("key");

        $r3 = $r2;

     label03:
        if $r2 == "" goto label05;

     label04:
        exitmonitor class "Lcom/parse/ap;";

        return $r3;

     label05:
        $r2 = staticinvoke <com.parse.ParseObject: java.lang.String getApplicationId()>();

     label06:
        $r3 = $r2;

     label07:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("key", $r2);

     label08:
        staticinvoke <com.parse.ParseObject: void saveDiskObject(android.content.Context,java.lang.String,org.json.JSONObject)>($r0, "oauth", $r1);

     label09:
        goto label04;

     label10:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/parse/ap;";

        throw $r4;

     label11:
        $r5 := @caughtexception;

     label12:
        staticinvoke <com.parse.Parse: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>("com.parse.ParsePushRouter", "JSONException in getApplicationId()", $r5);

     label13:
        goto label08;

     label14:
        goto label02;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch org.json.JSONException from label07 to label08 with label11;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
    }
}
