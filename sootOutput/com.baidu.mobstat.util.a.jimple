public final class com.baidu.mobstat.util.a extends java.lang.Object
{

    public static java.lang.String a(java.lang.String)
    {
        byte[] $r3;
        java.security.MessageDigest $r4;
        java.io.FileInputStream $r1, $r7;
        java.io.File $r2, $r6;
        java.lang.Exception $r5;
        int $i0;
        java.math.BigInteger $r8;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r6 = new java.io.File;

        $r2 = $r6;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r2.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r3 = newarray (byte)[1024];

     label02:
        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label03:
        $r7 = new java.io.FileInputStream;

        $r1 = $r7;

     label04:
        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label05:
        $i0 = virtualinvoke $r1.<java.io.FileInputStream: int read(byte[],int,int)>($r3, 0, 1024);

     label06:
        if $i0 == -1 goto label10;

     label07:
        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>($r3, 0, $i0);

     label08:
        goto label05;

     label09:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return null;

     label10:
        virtualinvoke $r1.<java.io.FileInputStream: void close()>();

     label11:
        $r8 = new java.math.BigInteger;

        $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        specialinvoke $r8.<java.math.BigInteger: void <init>(int,byte[])>(1, $r3);

        $r0 = virtualinvoke $r8.<java.math.BigInteger: java.lang.String toString(int)>(16);

        return $r0;

        catch java.lang.Exception from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label09;
    }

    public static byte[] a(java.lang.String, byte[])
    {
        byte[] $r1, $r3;
        javax.crypto.spec.SecretKeySpec $r2;
        java.lang.String $r0;
        javax.crypto.Cipher $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, "AES");

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/ECB/PKCS5Padding");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r2);

        $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r1;
    }

    public static byte[] b(java.lang.String, byte[])
    {
        byte[] $r1, $r3;
        javax.crypto.spec.SecretKeySpec $r2;
        java.lang.String $r0;
        javax.crypto.Cipher $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, "AES");

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r2);

        $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r1;
    }
}
