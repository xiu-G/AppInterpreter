public class org.dom4j.tree.ConcurrentReaderHashMap$HashIterator extends java.lang.Object implements java.util.Enumeration, java.util.Iterator
{
    protected java.lang.Object currentKey;
    protected java.lang.Object currentValue;
    protected org.dom4j.tree.ConcurrentReaderHashMap$Entry entry;
    protected int index;
    protected org.dom4j.tree.ConcurrentReaderHashMap$Entry lastReturned;
    protected final org.dom4j.tree.ConcurrentReaderHashMap$Entry[] tab;
    private final org.dom4j.tree.ConcurrentReaderHashMap this$0;

    protected void <init>(org.dom4j.tree.ConcurrentReaderHashMap)
    {
        org.dom4j.tree.ConcurrentReaderHashMap$Entry[] $r2;
        org.dom4j.tree.ConcurrentReaderHashMap $r1;
        org.dom4j.tree.ConcurrentReaderHashMap$HashIterator r0;
        int $i0;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$HashIterator;

        $r1 := @parameter0: org.dom4j.tree.ConcurrentReaderHashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap this$0> = $r1;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry> = null;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry lastReturned> = null;

        $r2 = virtualinvoke $r1.<org.dom4j.tree.ConcurrentReaderHashMap: org.dom4j.tree.ConcurrentReaderHashMap$Entry[] getTableForReading()>();

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry[] tab> = $r2;

        $r2 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry[] tab>;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: int index> = $i0;

        return;
    }

    public boolean hasMoreElements()
    {
        org.dom4j.tree.ConcurrentReaderHashMap$HashIterator r0;
        boolean $z0;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$HashIterator;

        $z0 = virtualinvoke r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: boolean hasNext()>();

        return $z0;
    }

    public boolean hasNext()
    {
        org.dom4j.tree.ConcurrentReaderHashMap$Entry[] $r4;
        org.dom4j.tree.ConcurrentReaderHashMap$HashIterator r0;
        org.dom4j.tree.ConcurrentReaderHashMap$Entry $r2;
        int $i0, $i1;
        java.lang.Object r1, $r3;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$HashIterator;

     label1:
        $r2 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry>;

        if $r2 == null goto label3;

        $r2 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry>;

        r1 = $r2.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object value>;

        if r1 == null goto label2;

        $r2 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry>;

        $r3 = $r2.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object key>;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: java.lang.Object currentKey> = $r3;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: java.lang.Object currentValue> = r1;

        return 1;

     label2:
        $r2 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry>;

        $r2 = $r2.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: org.dom4j.tree.ConcurrentReaderHashMap$Entry next>;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry> = $r2;

     label3:
        $r2 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry>;

        if $r2 != null goto label4;

        $i0 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: int index>;

        if $i0 < 0 goto label4;

        $r4 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry[] tab>;

        $i0 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: int index>;

        $i1 = $i0 + -1;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: int index> = $i1;

        $r2 = $r4[$i0];

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry> = $r2;

        goto label3;

     label4:
        $r2 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry>;

        if $r2 != null goto label1;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: java.lang.Object currentValue> = null;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: java.lang.Object currentKey> = null;

        return 0;
    }

    public java.lang.Object next()
    {
        org.dom4j.tree.ConcurrentReaderHashMap$HashIterator r0;
        org.dom4j.tree.ConcurrentReaderHashMap$Entry $r3;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$HashIterator;

        $r1 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: java.lang.Object currentKey>;

        if $r1 != null goto label1;

        $z0 = virtualinvoke r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        $r1 = virtualinvoke r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: java.lang.Object returnValueOfNext()>();

        $r3 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry>;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry lastReturned> = $r3;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: java.lang.Object currentValue> = null;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: java.lang.Object currentKey> = null;

        $r3 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry>;

        $r3 = $r3.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: org.dom4j.tree.ConcurrentReaderHashMap$Entry next>;

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry> = $r3;

        return $r1;
    }

    public java.lang.Object nextElement()
    {
        java.lang.Object $r1;
        org.dom4j.tree.ConcurrentReaderHashMap$HashIterator r0;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$HashIterator;

        $r1 = virtualinvoke r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: java.lang.Object next()>();

        return $r1;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r2;
        org.dom4j.tree.ConcurrentReaderHashMap $r3;
        org.dom4j.tree.ConcurrentReaderHashMap$HashIterator r0;
        org.dom4j.tree.ConcurrentReaderHashMap$Entry $r1;
        java.lang.Object $r4;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$HashIterator;

        $r1 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry lastReturned>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        $r3 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap this$0>;

        $r1 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry lastReturned>;

        $r4 = $r1.<org.dom4j.tree.ConcurrentReaderHashMap$Entry: java.lang.Object key>;

        virtualinvoke $r3.<org.dom4j.tree.ConcurrentReaderHashMap: java.lang.Object remove(java.lang.Object)>($r4);

        r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry lastReturned> = null;

        return;
    }

    protected java.lang.Object returnValueOfNext()
    {
        org.dom4j.tree.ConcurrentReaderHashMap$HashIterator r0;
        org.dom4j.tree.ConcurrentReaderHashMap$Entry r1;

        r0 := @this: org.dom4j.tree.ConcurrentReaderHashMap$HashIterator;

        r1 = r0.<org.dom4j.tree.ConcurrentReaderHashMap$HashIterator: org.dom4j.tree.ConcurrentReaderHashMap$Entry entry>;

        return r1;
    }
}
