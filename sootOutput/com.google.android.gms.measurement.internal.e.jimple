final class com.google.android.gms.measurement.internal.e extends android.database.sqlite.SQLiteOpenHelper
{
    private final com.google.android.gms.measurement.internal.d b;

    void <init>(com.google.android.gms.measurement.internal.d, android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        java.lang.String $r2;
        com.google.android.gms.measurement.internal.e r0;
        com.google.android.gms.measurement.internal.d $r3;

        r0 := @this: com.google.android.gms.measurement.internal.e;

        $r3 := @parameter0: com.google.android.gms.measurement.internal.d;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: java.lang.String;

        r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b> = $r3;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, $r2, null, 1);

        return;
    }

    public final android.database.sqlite.SQLiteDatabase getWritableDatabase()
    {
        java.lang.Throwable $r1, $r9;
        android.content.Context $r7;
        com.google.android.gms.measurement.internal.a4 $r6;
        com.google.android.gms.measurement.internal.b9 $r3;
        java.io.File $r8;
        android.database.sqlite.SQLiteDatabase $r4;
        com.google.android.gms.measurement.internal.y3 $r5;
        android.database.sqlite.SQLiteException $r10;
        com.google.android.gms.measurement.internal.e r0;
        com.google.android.gms.measurement.internal.d $r2;
        boolean $z0;

        r0 := @this: com.google.android.gms.measurement.internal.e;

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = staticinvoke <com.google.android.gms.measurement.internal.d: com.google.android.gms.measurement.internal.b9 E(com.google.android.gms.measurement.internal.d)>($r2);

        $z0 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.b9: boolean b(long)>(3600000L);

        if $z0 == 0 goto label09;

     label01:
        $r4 = specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label02:
        return $r4;

     label03:
        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = staticinvoke <com.google.android.gms.measurement.internal.d: com.google.android.gms.measurement.internal.b9 E(com.google.android.gms.measurement.internal.d)>($r2);

        virtualinvoke $r3.<com.google.android.gms.measurement.internal.b9: void a()>();

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r5 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r6 = virtualinvoke $r5.<com.google.android.gms.measurement.internal.y3: com.google.android.gms.measurement.internal.a4 G()>();

        virtualinvoke $r6.<com.google.android.gms.measurement.internal.a4: void a(java.lang.String)>("Opening the database failed, dropping and recreating it");

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r7 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: android.content.Context n()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("google_app_measurement.db");

        $z0 = virtualinvoke $r8.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label04;

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r5 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r6 = virtualinvoke $r5.<com.google.android.gms.measurement.internal.y3: com.google.android.gms.measurement.internal.a4 G()>();

        virtualinvoke $r6.<com.google.android.gms.measurement.internal.a4: void b(java.lang.String,java.lang.Object)>("Failed to delete corrupted db file", "google_app_measurement.db");

     label04:
        $r4 = specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label05:
        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

     label06:
        $r3 = staticinvoke <com.google.android.gms.measurement.internal.d: com.google.android.gms.measurement.internal.b9 E(com.google.android.gms.measurement.internal.d)>($r2);

        virtualinvoke $r3.<com.google.android.gms.measurement.internal.b9: void c()>();

     label07:
        return $r4;

     label08:
        $r9 := @caughtexception;

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r5 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r6 = virtualinvoke $r5.<com.google.android.gms.measurement.internal.y3: com.google.android.gms.measurement.internal.a4 G()>();

        virtualinvoke $r6.<com.google.android.gms.measurement.internal.a4: void b(java.lang.String,java.lang.Object)>("Failed to open freshly created database", $r9);

        throw $r9;

     label09:
        $r10 = new android.database.sqlite.SQLiteException;

        specialinvoke $r10.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>("Database open failed");

        throw $r10;

     label10:
        $r1 := @caughtexception;

        goto label03;

        catch android.database.sqlite.SQLiteException from label01 to label02 with label10;
        catch android.database.sqlite.SQLiteException from label04 to label05 with label08;
        catch android.database.sqlite.SQLiteException from label06 to label07 with label08;
    }

    public final void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.gms.measurement.internal.y3 $r2;
        com.google.android.gms.measurement.internal.e r0;
        com.google.android.gms.measurement.internal.d $r3;

        r0 := @this: com.google.android.gms.measurement.internal.e;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r2 = virtualinvoke $r3.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void b(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase)>($r2, $r1);

        return;
    }

    public final void onDowngrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        com.google.android.gms.measurement.internal.e r0;

        r0 := @this: com.google.android.gms.measurement.internal.e;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }

    public final void onOpen(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.google.android.gms.measurement.internal.y3 $r3;
        java.lang.String[] $r4;
        com.google.android.gms.measurement.internal.e r0;
        com.google.android.gms.measurement.internal.d $r2;

        r0 := @this: com.google.android.gms.measurement.internal.e;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r4 = staticinvoke <com.google.android.gms.measurement.internal.d: java.lang.String[] Y()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "events", "CREATE TABLE IF NOT EXISTS events ( app_id TEXT NOT NULL, name TEXT NOT NULL, lifetime_count INTEGER NOT NULL, current_bundle_count INTEGER NOT NULL, last_fire_timestamp INTEGER NOT NULL, PRIMARY KEY (app_id, name)) ;", "app_id,name,lifetime_count,current_bundle_count,last_fire_timestamp", $r4);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "conditional_properties", "CREATE TABLE IF NOT EXISTS conditional_properties ( app_id TEXT NOT NULL, origin TEXT NOT NULL, name TEXT NOT NULL, value BLOB NOT NULL, creation_timestamp INTEGER NOT NULL, active INTEGER NOT NULL, trigger_event_name TEXT, trigger_timeout INTEGER NOT NULL, timed_out_event BLOB,triggered_event BLOB, triggered_timestamp INTEGER NOT NULL, time_to_live INTEGER NOT NULL, expired_event BLOB, PRIMARY KEY (app_id, name)) ;", "app_id,origin,name,value,active,trigger_event_name,trigger_timeout,creation_timestamp,timed_out_event,triggered_event,triggered_timestamp,time_to_live,expired_event", null);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r4 = staticinvoke <com.google.android.gms.measurement.internal.d: java.lang.String[] Z()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "user_attributes", "CREATE TABLE IF NOT EXISTS user_attributes ( app_id TEXT NOT NULL, name TEXT NOT NULL, set_timestamp INTEGER NOT NULL, value BLOB NOT NULL, PRIMARY KEY (app_id, name)) ;", "app_id,name,set_timestamp,value", $r4);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r4 = staticinvoke <com.google.android.gms.measurement.internal.d: java.lang.String[] a0()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "apps", "CREATE TABLE IF NOT EXISTS apps ( app_id TEXT NOT NULL, app_instance_id TEXT, gmp_app_id TEXT, resettable_device_id_hash TEXT, last_bundle_index INTEGER NOT NULL, last_bundle_end_timestamp INTEGER NOT NULL, PRIMARY KEY (app_id)) ;", "app_id,app_instance_id,gmp_app_id,resettable_device_id_hash,last_bundle_index,last_bundle_end_timestamp", $r4);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r4 = staticinvoke <com.google.android.gms.measurement.internal.d: java.lang.String[] b0()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "queue", "CREATE TABLE IF NOT EXISTS queue ( app_id TEXT NOT NULL, bundle_end_timestamp INTEGER NOT NULL, data BLOB NOT NULL);", "app_id,bundle_end_timestamp,data", $r4);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "raw_events_metadata", "CREATE TABLE IF NOT EXISTS raw_events_metadata ( app_id TEXT NOT NULL, metadata_fingerprint INTEGER NOT NULL, metadata BLOB NOT NULL, PRIMARY KEY (app_id, metadata_fingerprint));", "app_id,metadata_fingerprint,metadata", null);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r4 = staticinvoke <com.google.android.gms.measurement.internal.d: java.lang.String[] c0()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "raw_events", "CREATE TABLE IF NOT EXISTS raw_events ( app_id TEXT NOT NULL, name TEXT NOT NULL, timestamp INTEGER NOT NULL, metadata_fingerprint INTEGER NOT NULL, data BLOB NOT NULL);", "app_id,name,timestamp,metadata_fingerprint,data", $r4);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r4 = staticinvoke <com.google.android.gms.measurement.internal.d: java.lang.String[] d0()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "event_filters", "CREATE TABLE IF NOT EXISTS event_filters ( app_id TEXT NOT NULL, audience_id INTEGER NOT NULL, filter_id INTEGER NOT NULL, event_name TEXT NOT NULL, data BLOB NOT NULL, PRIMARY KEY (app_id, event_name, audience_id, filter_id));", "app_id,audience_id,filter_id,event_name,data", $r4);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r4 = staticinvoke <com.google.android.gms.measurement.internal.d: java.lang.String[] e0()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "property_filters", "CREATE TABLE IF NOT EXISTS property_filters ( app_id TEXT NOT NULL, audience_id INTEGER NOT NULL, filter_id INTEGER NOT NULL, property_name TEXT NOT NULL, data BLOB NOT NULL, PRIMARY KEY (app_id, property_name, audience_id, filter_id));", "app_id,audience_id,filter_id,property_name,data", $r4);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "audience_filter_values", "CREATE TABLE IF NOT EXISTS audience_filter_values ( app_id TEXT NOT NULL, audience_id INTEGER NOT NULL, current_results BLOB, PRIMARY KEY (app_id, audience_id));", "app_id,audience_id,current_results", null);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        $r4 = staticinvoke <com.google.android.gms.measurement.internal.d: java.lang.String[] f0()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "app2", "CREATE TABLE IF NOT EXISTS app2 ( app_id TEXT NOT NULL, first_open_count INTEGER NOT NULL, PRIMARY KEY (app_id));", "app_id,first_open_count", $r4);

        $r2 = r0.<com.google.android.gms.measurement.internal.e: com.google.android.gms.measurement.internal.d b>;

        $r3 = virtualinvoke $r2.<com.google.android.gms.measurement.internal.y5: com.google.android.gms.measurement.internal.y3 m()>();

        staticinvoke <com.google.android.gms.measurement.internal.h: void c(com.google.android.gms.measurement.internal.y3,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>($r3, $r1, "main_event_params", "CREATE TABLE IF NOT EXISTS main_event_params ( app_id TEXT NOT NULL, event_id TEXT NOT NULL, children_to_process INTEGER NOT NULL, main_event BLOB NOT NULL, PRIMARY KEY (app_id));", "app_id,event_id,children_to_process,main_event", null);

        return;
    }

    public final void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        com.google.android.gms.measurement.internal.e r0;

        r0 := @this: com.google.android.gms.measurement.internal.e;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
}
