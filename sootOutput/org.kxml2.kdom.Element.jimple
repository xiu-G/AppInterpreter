public class org.kxml2.kdom.Element extends org.kxml2.kdom.Node
{
    protected java.util.Vector attributes;
    protected java.lang.String name;
    protected java.lang.String namespace;
    protected org.kxml2.kdom.Node parent;
    protected java.util.Vector prefixes;

    public void <init>()
    {
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        specialinvoke r0.<org.kxml2.kdom.Node: void <init>()>();

        return;
    }

    public void clear()
    {
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        r0.<org.kxml2.kdom.Element: java.util.Vector attributes> = null;

        r0.<org.kxml2.kdom.Element: java.util.Vector children> = null;

        return;
    }

    public org.kxml2.kdom.Element createElement(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        org.kxml2.kdom.Node $r3;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.kxml2.kdom.Element: org.kxml2.kdom.Node parent>;

        if $r3 != null goto label1;

        r0 = specialinvoke r0.<org.kxml2.kdom.Node: org.kxml2.kdom.Element createElement(java.lang.String,java.lang.String)>($r1, $r2);

        return r0;

     label1:
        $r3 = r0.<org.kxml2.kdom.Element: org.kxml2.kdom.Node parent>;

        r0 = virtualinvoke $r3.<org.kxml2.kdom.Node: org.kxml2.kdom.Element createElement(java.lang.String,java.lang.String)>($r1, $r2);

        return r0;
    }

    public int getAttributeCount()
    {
        int $i0;
        java.util.Vector $r1;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 = r0.<org.kxml2.kdom.Element: java.util.Vector attributes>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<org.kxml2.kdom.Element: java.util.Vector attributes>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public java.lang.String getAttributeName(int)
    {
        java.util.Vector $r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.String[] $r3;
        java.lang.String $r4;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $i0 := @parameter0: int;

        $r2 = r0.<org.kxml2.kdom.Element: java.util.Vector attributes>;

        $r1 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (java.lang.String[]) $r1;

        $r4 = $r3[1];

        return $r4;
    }

    public java.lang.String getAttributeNamespace(int)
    {
        java.util.Vector $r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.String[] $r3;
        java.lang.String $r4;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $i0 := @parameter0: int;

        $r2 = r0.<org.kxml2.kdom.Element: java.util.Vector attributes>;

        $r1 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (java.lang.String[]) $r1;

        $r4 = $r3[0];

        return $r4;
    }

    public java.lang.String getAttributeValue(int)
    {
        java.util.Vector $r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.String[] $r3;
        java.lang.String $r4;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $i0 := @parameter0: int;

        $r2 = r0.<org.kxml2.kdom.Element: java.util.Vector attributes>;

        $r1 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (java.lang.String[]) $r1;

        $r4 = $r3[2];

        return $r4;
    }

    public java.lang.String getAttributeValue(java.lang.String, java.lang.String)
    {
        int i0, $i1;
        java.lang.String $r1, $r2, $r3;
        org.kxml2.kdom.Element r0;
        boolean $z0;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<org.kxml2.kdom.Element: int getAttributeCount()>();

        if i0 >= $i1 goto label4;

        $r3 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getAttributeName(int)>(i0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        if $r1 == null goto label2;

        $r3 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getAttributeNamespace(int)>(i0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

     label2:
        $r1 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getAttributeValue(int)>(i0);

        return $r1;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return null;
    }

    public java.lang.String getName()
    {
        java.lang.String r1;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        r1 = r0.<org.kxml2.kdom.Element: java.lang.String name>;

        return r1;
    }

    public java.lang.String getNamespace()
    {
        java.lang.String r1;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        r1 = r0.<org.kxml2.kdom.Element: java.lang.String namespace>;

        return r1;
    }

    public int getNamespaceCount()
    {
        int $i0;
        java.util.Vector $r1;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 = r0.<org.kxml2.kdom.Element: java.util.Vector prefixes>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<org.kxml2.kdom.Element: java.util.Vector prefixes>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public java.lang.String getNamespacePrefix(int)
    {
        java.util.Vector $r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.String[] $r3;
        java.lang.String $r4;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $i0 := @parameter0: int;

        $r2 = r0.<org.kxml2.kdom.Element: java.util.Vector prefixes>;

        $r1 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (java.lang.String[]) $r1;

        $r4 = $r3[0];

        return $r4;
    }

    public java.lang.String getNamespaceUri(int)
    {
        java.util.Vector $r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.String[] $r3;
        java.lang.String $r4;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $i0 := @parameter0: int;

        $r2 = r0.<org.kxml2.kdom.Element: java.util.Vector prefixes>;

        $r1 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (java.lang.String[]) $r1;

        $r4 = $r3[1];

        return $r4;
    }

    public java.lang.String getNamespaceUri(java.lang.String)
    {
        int $i0, i1;
        java.lang.String $r1, $r2;
        org.kxml2.kdom.Node $r3;
        org.kxml2.kdom.Element r0;
        boolean $z0;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<org.kxml2.kdom.Element: int getNamespaceCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r2 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getNamespacePrefix(int)>(i1);

        if $r1 == $r2 goto label2;

        if $r1 == null goto label3;

        $r2 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getNamespacePrefix(int)>(i1);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

     label2:
        $r1 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getNamespaceUri(int)>(i1);

        return $r1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r3 = r0.<org.kxml2.kdom.Element: org.kxml2.kdom.Node parent>;

        $z0 = $r3 instanceof org.kxml2.kdom.Element;

        if $z0 == 0 goto label5;

        $r3 = r0.<org.kxml2.kdom.Element: org.kxml2.kdom.Node parent>;

        r0 = (org.kxml2.kdom.Element) $r3;

        $r1 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getNamespaceUri(java.lang.String)>($r1);

        return $r1;

     label5:
        return null;
    }

    public org.kxml2.kdom.Node getParent()
    {
        org.kxml2.kdom.Node r1;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        r1 = r0.<org.kxml2.kdom.Element: org.kxml2.kdom.Node parent>;

        return r1;
    }

    public org.kxml2.kdom.Node getRoot()
    {
        org.kxml2.kdom.Node $r1;
        org.kxml2.kdom.Element r0;
        boolean $z0;

        r0 := @this: org.kxml2.kdom.Element;

     label1:
        $r1 = r0.<org.kxml2.kdom.Element: org.kxml2.kdom.Node parent>;

        if $r1 == null goto label3;

        $r1 = r0.<org.kxml2.kdom.Element: org.kxml2.kdom.Node parent>;

        $z0 = $r1 instanceof org.kxml2.kdom.Element;

        if $z0 != 0 goto label2;

        $r1 = r0.<org.kxml2.kdom.Element: org.kxml2.kdom.Node parent>;

        return $r1;

     label2:
        $r1 = r0.<org.kxml2.kdom.Element: org.kxml2.kdom.Node parent>;

        r0 = (org.kxml2.kdom.Element) $r1;

        goto label1;

     label3:
        return r0;
    }

    public void init()
    {
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        return;
    }

    public void parse(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.kxml2.kdom.Element r0;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i0 = $i0 + -1;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i0);

     label1:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i1);

        if $i0 >= $i1 goto label2;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>($i0);

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespaceUri(int)>($i0);

        virtualinvoke r0.<org.kxml2.kdom.Element: void setPrefix(java.lang.String,java.lang.String)>($r2, $r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $i0 = 0;

     label3:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if $i0 >= $i1 goto label4;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>($i0);

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>($i0);

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>($i0);

        virtualinvoke r0.<org.kxml2.kdom.Element: void setAttribute(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        virtualinvoke r0.<org.kxml2.kdom.Element: void init()>();

        $z0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: boolean isEmptyElementTag()>();

        if $z0 == 0 goto label6;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextToken()>();

     label5:
        $r2 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getNamespace()>();

        $r3 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getName()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r2, $r3);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextToken()>();

        return;

     label6:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextToken()>();

        specialinvoke r0.<org.kxml2.kdom.Node: void parse(org.xmlpull.v1.XmlPullParser)>($r1);

        $i0 = virtualinvoke r0.<org.kxml2.kdom.Element: int getChildCount()>();

        if $i0 != 0 goto label5;

        virtualinvoke r0.<org.kxml2.kdom.Element: void addChild(int,java.lang.Object)>(7, "");

        goto label5;
    }

    public void setAttribute(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String[] $r6;
        org.kxml2.kdom.Element r0;
        java.util.Vector $r4, $r8;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r1, $r2, $r3, $r7;
        boolean $z0;

        r0 := @this: org.kxml2.kdom.Element;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r4 = r0.<org.kxml2.kdom.Element: java.util.Vector attributes>;

        if $r4 != null goto label1;

        $r8 = new java.util.Vector;

        specialinvoke $r8.<java.util.Vector: void <init>()>();

        r0.<org.kxml2.kdom.Element: java.util.Vector attributes> = $r8;

     label1:
        if $r3 != null goto label2;

        $r3 = "";

     label2:
        $r4 = r0.<org.kxml2.kdom.Element: java.util.Vector attributes>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        $i0 = $i0 + -1;

     label3:
        if $i0 < 0 goto label6;

        $r4 = r0.<org.kxml2.kdom.Element: java.util.Vector attributes>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r6 = (java.lang.String[]) $r5;

        $r7 = $r6[0];

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r7 = $r6[1];

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label5;

        if $r2 != null goto label4;

        $r4 = r0.<org.kxml2.kdom.Element: java.util.Vector attributes>;

        virtualinvoke $r4.<java.util.Vector: void removeElementAt(int)>($i0);

        return;

     label4:
        $r6[2] = $r2;

        return;

     label5:
        $i0 = $i0 + -1;

        goto label3;

     label6:
        $r4 = r0.<org.kxml2.kdom.Element: java.util.Vector attributes>;

        $r6 = newarray (java.lang.String)[3];

        $r6[0] = $r3;

        $r6[1] = $r1;

        $r6[2] = $r2;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        return;
    }

    public void setName(java.lang.String)
    {
        java.lang.String $r1;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 := @parameter0: java.lang.String;

        r0.<org.kxml2.kdom.Element: java.lang.String name> = $r1;

        return;
    }

    public void setNamespace(java.lang.String)
    {
        java.lang.String $r1;
        org.kxml2.kdom.Element r0;
        java.lang.NullPointerException $r2;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Use \"\" for empty namespace");

        throw $r2;

     label1:
        r0.<org.kxml2.kdom.Element: java.lang.String namespace> = $r1;

        return;
    }

    protected void setParent(org.kxml2.kdom.Node)
    {
        org.kxml2.kdom.Node $r1;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 := @parameter0: org.kxml2.kdom.Node;

        r0.<org.kxml2.kdom.Element: org.kxml2.kdom.Node parent> = $r1;

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String)
    {
        java.util.Vector $r3;
        java.lang.String[] $r4;
        java.lang.String $r1, $r2;
        org.kxml2.kdom.Element r0;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.kxml2.kdom.Element: java.util.Vector prefixes>;

        if $r3 != null goto label1;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.kxml2.kdom.Element: java.util.Vector prefixes> = $r3;

     label1:
        $r3 = r0.<org.kxml2.kdom.Element: java.util.Vector prefixes>;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = $r1;

        $r4[1] = $r2;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        return;
    }

    public void write(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer $r1;
        org.kxml2.kdom.Element r0;
        java.util.Vector $r2;
        int i0, $i1;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: org.kxml2.kdom.Element;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<org.kxml2.kdom.Element: java.util.Vector prefixes>;

        if $r2 == null goto label2;

        i0 = 0;

     label1:
        $r2 = r0.<org.kxml2.kdom.Element: java.util.Vector prefixes>;

        $i1 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if i0 >= $i1 goto label2;

        $r3 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getNamespacePrefix(int)>(i0);

        $r4 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getNamespaceUri(int)>(i0);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>($r3, $r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getNamespace()>();

        $r4 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getName()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r3, $r4);

        i0 = virtualinvoke r0.<org.kxml2.kdom.Element: int getAttributeCount()>();

        $i1 = 0;

     label3:
        if $i1 >= i0 goto label4;

        $r3 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getAttributeNamespace(int)>($i1);

        $r4 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getAttributeName(int)>($i1);

        $r5 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getAttributeValue(int)>($i1);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, $r5);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        virtualinvoke r0.<org.kxml2.kdom.Element: void writeChildren(org.xmlpull.v1.XmlSerializer)>($r1);

        $r3 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getNamespace()>();

        $r4 = virtualinvoke r0.<org.kxml2.kdom.Element: java.lang.String getName()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r3, $r4);

        return;
    }
}
