public class com.alipay.android.app.util.Utils extends java.lang.Object
{
    private static final java.lang.String ALIPAY_PACKAGE_NAME;
    private static final java.lang.String ALIPAY_VERSION;
    private static final java.lang.String MSP_PACKAGE_NAME;
    private static final java.lang.String MSP_VERSION;

    public void <init>()
    {
        com.alipay.android.app.util.Utils r0;

        r0 := @this: com.alipay.android.app.util.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void chmod(java.lang.String, java.lang.String)
    {
        java.lang.Throwable r2;
        java.lang.Runtime $r4;
        java.lang.StringBuilder $r3, $r5;
        java.io.IOException $r6;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        $r3 = $r5;

     label1:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("chmod ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("777");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r4.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r0);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r6 = (java.io.IOException) r2;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static int compareVersion(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r4;
        java.util.ArrayList r2, r3;
        java.util.List $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r6;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

     label1:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i1 < $i0 goto label4;

     label2:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 < $i0 goto label5;

        $i1 = 0;

     label3:
        if $i1 < $i0 goto label6;

        return 0;

     label4:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("0");

        goto label1;

     label5:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("0");

        goto label2;

     label6:
        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r0 = (java.lang.String) $r6;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r0 = (java.lang.String) $r6;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        if $i2 != $i3 goto label7;

        $i1 = $i1 + 1;

        goto label3;

     label7:
        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r0 = (java.lang.String) $r6;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r0 = (java.lang.String) $r6;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $i0 = $i0 - $i1;

        return $i0;
    }

    public static java.lang.String getAlixTid(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <com.alipay.android.app.util.Utils: boolean isEmpty4AlixTid(android.content.Context)>($r0);

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r1 = staticinvoke <com.alipay.android.app.util.StoreUtils: java.lang.String getValue(android.content.Context,java.lang.String)>($r0, "alix_tid");

        return $r1;
    }

    public static android.content.pm.PackageInfo getApkInfo(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        java.lang.String $r1;
        android.content.pm.PackageInfo $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>($r1, 128);

        return $r3;
    }

    public static java.lang.String getCharset(java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.String $r0, r1;

        $r0 := @parameter0: java.lang.String;

        r1 = "charset=";

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("charset=");

        $i1 = -1;

        if $i0 == $i1 goto label2;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>(";", $i0);

        $i2 = -1;

        if $i1 == $i2 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r0;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r0;

     label2:
        return null;
    }

    public static java.lang.String getClientId(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r2;
        android.content.ContentResolver $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, "android_id");

        return $r2;
    }

    public static java.lang.String getClientKey(android.content.Context)
    {
        android.content.Context $r0;
        int i0, $i1;
        java.lang.StringBuilder r1;
        java.lang.String $r2;
        boolean $z0;
        double $d0;

        $r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.alipay.android.app.util.StoreUtils: java.lang.String getValue(android.content.Context,java.lang.String)>($r0, "client_key");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label3;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        i0 = 0;

     label1:
        if i0 < 10 goto label2;

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.alipay.android.app.util.StoreUtils: void putValue(android.content.Context,java.lang.String,java.lang.String)>($r0, "client_key", $r2);

        return $r2;

     label2:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = 10.0 * $d0;

        $i1 = (int) $d0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        i0 = i0 + 1;

        goto label1;

     label3:
        return $r2;
    }

    public static java.lang.String getContentType(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(";");

        if $i0 <= 0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        return $r0;
    }

    public static java.lang.String getDefaultLocale(android.content.Context)
    {
        android.content.Context $r0;
        java.util.Locale r1;
        android.content.res.Configuration $r3;
        java.lang.String $r4;
        android.content.res.Resources $r2;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r1 = $r3.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        return $r4;
    }

    public static android.util.DisplayMetrics getDisplayMetrics(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager $r3;
        android.view.Display $r4;
        java.lang.Object $r2;
        android.util.DisplayMetrics r1;

        $r0 := @parameter0: android.content.Context;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        return r1;
    }

    public static java.lang.String getFormattedKernelVersion()
    {
        java.lang.Throwable r0, $r6;
        java.util.regex.Matcher $r5;
        int $i0;
        java.lang.StringBuilder $r7;
        java.io.BufferedReader r1;
        java.io.FileReader $r2;
        java.lang.String $r3;
        java.util.regex.Pattern $r4;
        boolean $z0;

        r1 = new java.io.BufferedReader;

        $r2 = new java.io.FileReader;

     label01:
        specialinvoke $r2.<java.io.FileReader: void <init>(java.lang.String)>("/proc/version");

        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r2, 256);

     label02:
        $r3 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\w+\\s+\\w+\\s+([^\\s]+)\\s+\\(([^\\s@]+(?:@[^\\s.]+)?)[^)]*\\)\\s+\\((?:[^(]*\\([^)]*\\))?[^)]*\\)\\s+([^\\s]+)\\s+(?:PREEMPT\\s+)?(.+)");

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

     label04:
        if $z0 != 0 goto label08;

        return "Unavailable";

     label05:
        $r6 := @caughtexception;

     label06:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

        throw $r6;

     label07:
        r0 := @caughtexception;

        return "Unavailable";

     label08:
        $i0 = virtualinvoke $r5.<java.util.regex.Matcher: int groupCount()>();

     label09:
        if $i0 >= 4 goto label10;

        return "Unavailable";

     label10:
        $r7 = new java.lang.StringBuilder;

     label11:
        $r3 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        return $r3;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.io.IOException from label06 to label07 with label07;
        catch java.io.IOException from label08 to label09 with label07;
        catch java.io.IOException from label11 to label12 with label07;
    }

    public static java.lang.String getKernelVersion(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r1, r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.alipay.android.app.util.Utils: java.lang.String getFormattedKernelVersion()>();

        r2 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("-");

        if $i0 == -1 goto label1;

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("\n");

        if $i0 == -1 goto label2;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Linux ");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static com.alipay.android.app.util.NetConnectionType getNetConnectionType(android.content.Context)
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        com.alipay.android.app.util.NetConnectionType $r4;
        int $i0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getType()>();

        if $i0 != 0 goto label1;

        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getSubtype()>();

        $r4 = staticinvoke <com.alipay.android.app.util.NetConnectionType: com.alipay.android.app.util.NetConnectionType getTypeByCode(int)>($i0);

        return $r4;

     label1:
        if $r3 == null goto label2;

        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getType()>();

        if $i0 != 1 goto label2;

        $r4 = <com.alipay.android.app.util.NetConnectionType: com.alipay.android.app.util.NetConnectionType WIFI>;

        return $r4;

     label2:
        $r4 = <com.alipay.android.app.util.NetConnectionType: com.alipay.android.app.util.NetConnectionType NONE>;

        return $r4;
    }

    private static java.lang.String getOsInfo(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Android ");

        $r2 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String getScreenResolution(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.StringBuilder r1;
        java.lang.String $r3;
        android.util.DisplayMetrics $r2;

        $r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.alipay.android.app.util.Utils: android.util.DisplayMetrics getDisplayMetrics(android.content.Context)>($r0);

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = $r2.<android.util.DisplayMetrics: int widthPixels>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $i0 = $r2.<android.util.DisplayMetrics: int heightPixels>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String getUserAgent(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2, $r3, $r4, $r5;

        $r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.alipay.android.app.util.Utils: java.lang.String getOsInfo(android.content.Context)>($r0);

        $r3 = staticinvoke <com.alipay.android.app.util.Utils: java.lang.String getKernelVersion(android.content.Context)>($r0);

        $r4 = staticinvoke <com.alipay.android.app.util.Utils: java.lang.String getDefaultLocale(android.content.Context)>($r0);

        $r5 = staticinvoke <com.alipay.android.app.util.Utils: java.lang.String getScreenResolution(android.content.Context)>($r0);

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(sdk android)");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void installApk(android.app.Activity, java.lang.String)
    {
        android.net.Uri $r4;
        android.content.Intent r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        android.app.Activity $r0;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.alipay.android.app.util.Utils: void chmod(java.lang.String,java.lang.String)>("777", $r1);

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW");

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("file://");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r4, "application/vnd.android.package-archive");

        virtualinvoke $r0.<android.app.Activity: void startActivity(android.content.Intent)>(r2);

        return;
    }

    public static boolean is2G(android.content.Context)
    {
        int $i0;
        android.content.Context $r0;
        com.alipay.android.app.util.NetConnectionType $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.alipay.android.app.util.Utils: com.alipay.android.app.util.NetConnectionType getNetConnectionType(android.content.Context)>($r0);

        $i0 = virtualinvoke $r1.<com.alipay.android.app.util.NetConnectionType: int getCode()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean isEmpty4AlixTid(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.alipay.android.app.util.StoreUtils: java.lang.String getValue(android.content.Context,java.lang.String)>($r0, "alix_tid");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isExistClient(android.content.Context)
    {
        java.lang.Throwable r1;
        android.content.Context $r0;
        android.content.pm.PackageManager $r3;
        int $i0;
        java.lang.String r2;
        android.content.pm.PackageInfo $r4;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>("com.eg.android.AlipayGphone", 128);

     label2:
        if $r4 != null goto label3;

        return 0;

     label3:
        r2 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label4:
        $i0 = virtualinvoke r2.<java.lang.String: int compareTo(java.lang.String)>("7.0.0.0602");

     label5:
        if $i0 < 0 goto label7;

        return 1;

     label6:
        r1 := @caughtexception;

     label7:
        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label6;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label6;
    }

    public static boolean isExistMsp(android.content.Context)
    {
        java.lang.Throwable r1;
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageInfo $r3;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>("com.alipay.android.app", 128);

     label2:
        if $r3 != null goto label4;

        return 0;

     label3:
        r1 := @caughtexception;

        return 0;

     label4:
        return 1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static boolean isLatestMspVersion(android.content.Context)
    {
        java.lang.Throwable r1;
        android.content.Context $r0;
        android.content.pm.PackageManager $r3;
        int $i0;
        java.lang.String r2;
        android.content.pm.PackageInfo $r4;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>("com.alipay.android.app", 128);

     label2:
        r2 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label3:
        $i0 = virtualinvoke r2.<java.lang.String: int compareTo(java.lang.String)>("5.0.0");

     label4:
        if $i0 < 0 goto label6;

        return 1;

     label5:
        r1 := @caughtexception;

     label6:
        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    public static boolean retrieveApkFromAssets(android.content.Context, java.lang.String, java.lang.String)
    {
        java.lang.Throwable r3;
        android.content.Context $r0;
        byte[] r6;
        java.io.FileOutputStream r5, $r10;
        java.io.IOException $r11;
        java.io.File r4, $r9;
        android.content.res.AssetManager $r7;
        int $i0;
        java.lang.String $r1, $r2;
        java.io.InputStream $r8;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label01:
        $r7 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r8 = virtualinvoke $r7.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label02:
        $r9 = new java.io.File;

        r4 = $r9;

     label03:
        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r2);

        virtualinvoke r4.<java.io.File: boolean createNewFile()>();

     label04:
        $r10 = new java.io.FileOutputStream;

        r5 = $r10;

     label05:
        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);

     label06:
        r6 = newarray (byte)[1024];

     label07:
        $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>(r6);

     label08:
        if $i0 > 0 goto label11;

     label09:
        virtualinvoke r5.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label10:
        return 1;

     label11:
        virtualinvoke r5.<java.io.FileOutputStream: void write(byte[],int,int)>(r6, 0, $i0);

     label12:
        goto label07;

     label13:
        r3 := @caughtexception;

        $r11 = (java.io.IOException) r3;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        return 0;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public static void <clinit>()
    {
        <com.alipay.android.app.util.Utils: java.lang.String MSP_VERSION> = "5.0.0";

        <com.alipay.android.app.util.Utils: java.lang.String MSP_PACKAGE_NAME> = "com.alipay.android.app";

        <com.alipay.android.app.util.Utils: java.lang.String ALIPAY_VERSION> = "7.0.0.0602";

        <com.alipay.android.app.util.Utils: java.lang.String ALIPAY_PACKAGE_NAME> = "com.eg.android.AlipayGphone";

        return;
    }
}
