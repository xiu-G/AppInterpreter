public class com.kingroot.sdk.gm extends java.lang.Object
{

    public static java.lang.String ap(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Integer");

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z0 == 0 goto label02;

     label01:
        return "int32";

     label02:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Boolean");

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z0 == 0 goto label04;

     label03:
        return "bool";

     label04:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Byte");

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z0 == 0 goto label06;

     label05:
        return "char";

     label06:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Double");

        if $z0 != 0 goto label07;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z0 == 0 goto label08;

     label07:
        return "double";

     label08:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Float");

        if $z0 != 0 goto label09;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 == 0 goto label10;

     label09:
        return "float";

     label10:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Long");

        if $z0 != 0 goto label11;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z0 == 0 goto label12;

     label11:
        return "int64";

     label12:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Short");

        if $z0 != 0 goto label13;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 == 0 goto label14;

     label13:
        return "short";

     label14:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Character");

        if $z0 == 0 goto label15;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can not support java.lang.Character");

        throw $r1;

     label15:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.String");

        if $z0 == 0 goto label16;

        return "string";

     label16:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.util.List");

        if $z0 == 0 goto label17;

        return "list";

     label17:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("java.util.Map");

        if $z0 == 0 goto label18;

        return "map";

     label18:
        return $r0;
    }

    public static java.lang.String f(java.util.ArrayList)
    {
        java.util.Iterator $r2;
        java.util.ArrayList $r0;
        java.lang.StringBuffer $r1, $r6;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r7;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: java.util.ArrayList;

        $r6 = new java.lang.StringBuffer;

        $r1 = $r6;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i0 < $i1 goto label4;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r0);

        $i0 = 0;

     label2:
        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i0 < $i1 goto label5;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r0);

        $r2 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label9;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label4:
        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.String) $r4;

        $r3 = staticinvoke <com.kingroot.sdk.gm: java.lang.String ap(java.lang.String)>($r3);

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i0, $r3);

        $i0 = $i0 + 1;

        goto label1;

     label5:
        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.String) $r4;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z0 == 0 goto label7;

        $i1 = $i0 + -1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("<");

        $i2 = $i0 + -1;

        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (java.lang.String) $r4;

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i1, $r3);

        $r7 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r4;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(0, $r3);

     label6:
        $i0 = $i0 + 1;

        goto label2;

     label7:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("map");

        if $z0 == 0 goto label8;

        $i1 = $i0 + -1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("<");

        $i2 = $i0 + -1;

        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (java.lang.String) $r4;

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i1, $r3);

        $r7 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r4;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(0, $r3);

        goto label6;

     label8:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Array");

        if $z0 == 0 goto label6;

        $i1 = $i0 + -1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("<");

        $i2 = $i0 + -1;

        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (java.lang.String) $r4;

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i1, $r3);

        $r7 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r4;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(0, $r3);

        goto label6;

     label9:
        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r4;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label3;
    }
}
