public class proguard.evaluation.ClassConstantValueFactory extends proguard.evaluation.ConstantValueFactory
{

    public void <init>(proguard.evaluation.value.ValueFactory)
    {
        proguard.evaluation.value.ValueFactory $r1;
        proguard.evaluation.ClassConstantValueFactory r0;

        r0 := @this: proguard.evaluation.ClassConstantValueFactory;

        $r1 := @parameter0: proguard.evaluation.value.ValueFactory;

        specialinvoke r0.<proguard.evaluation.ConstantValueFactory: void <init>(proguard.evaluation.value.ValueFactory)>($r1);

        return;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.constant.ClassConstant $r2;
        proguard.evaluation.value.ReferenceValue $r3;
        proguard.evaluation.ClassConstantValueFactory r0;
        proguard.classfile.Clazz $r1;
        proguard.evaluation.value.ValueFactory $r4;

        r0 := @this: proguard.evaluation.ClassConstantValueFactory;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r4 = r0.<proguard.evaluation.ClassConstantValueFactory: proguard.evaluation.value.ValueFactory valueFactory>;

        $r1 = $r2.<proguard.classfile.constant.ClassConstant: proguard.classfile.Clazz javaLangClassClass>;

        $r3 = virtualinvoke $r4.<proguard.evaluation.value.ValueFactory: proguard.evaluation.value.ReferenceValue createReferenceValue(java.lang.String,proguard.classfile.Clazz,boolean)>("java/lang/Class", $r1, 0);

        r0.<proguard.evaluation.ClassConstantValueFactory: proguard.evaluation.value.Value value> = $r3;

        return;
    }
}
