public class com.feelingk.iap.net.InitConfirm extends com.feelingk.iap.net.MsgConfirm
{
    static final java.lang.String TAG;
    private byte[] ExpireDate;
    private byte[] eToken;
    private int nCount;
    private int nTokenLength;

    public void <init>()
    {
        com.feelingk.iap.net.InitConfirm r0;

        r0 := @this: com.feelingk.iap.net.InitConfirm;

        specialinvoke r0.<com.feelingk.iap.net.MsgConfirm: void <init>()>();

        r0.<com.feelingk.iap.net.InitConfirm: int nCount> = 0;

        r0.<com.feelingk.iap.net.InitConfirm: int nTokenLength> = 0;

        return;
    }

    public int getCount()
    {
        int i0;
        com.feelingk.iap.net.InitConfirm r0;

        r0 := @this: com.feelingk.iap.net.InitConfirm;

        i0 = r0.<com.feelingk.iap.net.InitConfirm: int nCount>;

        return i0;
    }

    public byte[] getExpireDate()
    {
        byte[] r1;
        com.feelingk.iap.net.InitConfirm r0;

        r0 := @this: com.feelingk.iap.net.InitConfirm;

        r1 = r0.<com.feelingk.iap.net.InitConfirm: byte[] ExpireDate>;

        return r1;
    }

    public byte[] getToken()
    {
        byte[] r1;
        com.feelingk.iap.net.InitConfirm r0;

        r0 := @this: com.feelingk.iap.net.InitConfirm;

        r1 = r0.<com.feelingk.iap.net.InitConfirm: byte[] eToken>;

        return r1;
    }

    public int getTokenLength()
    {
        int i0;
        com.feelingk.iap.net.InitConfirm r0;

        r0 := @this: com.feelingk.iap.net.InitConfirm;

        i0 = r0.<com.feelingk.iap.net.InitConfirm: int nTokenLength>;

        return i0;
    }

    protected void parse(byte[])
    {
        byte[] $r1, $r4;
        java.lang.Exception $r5, $r6;
        byte $b2;
        int $i0, i1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r3;
        com.feelingk.iap.net.InitConfirm r0;

        r0 := @this: com.feelingk.iap.net.InitConfirm;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<com.feelingk.iap.net.MsgConfirm: void parse(byte[])>($r1);

        $i0 = virtualinvoke r0.<com.feelingk.iap.net.InitConfirm: int getMsgLength()>();

        i1 = $i0 + 14;

        $r7 = new java.lang.StringBuilder;

        $r2 = $r7;

     label01:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("InitConfirm result code : ");

        $b2 = virtualinvoke r0.<com.feelingk.iap.net.InitConfirm: byte getResultCode()>();

     label02:
        $i0 = (int) $b2;

     label03:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.feelingk.iap.util.CommonF$LOGGER: void i(java.lang.String,java.lang.String)>("InitConfirm", $r3);

     label04:
        $i0 = i1 + 1;

     label05:
        $b2 = $r1[i1];

     label06:
        i1 = (int) $b2;

     label07:
        r0.<com.feelingk.iap.net.InitConfirm: int nCount> = i1;

     label08:
        $r4 = newarray (byte)[14];

     label09:
        r0.<com.feelingk.iap.net.InitConfirm: byte[] ExpireDate> = $r4;

        $r4 = r0.<com.feelingk.iap.net.InitConfirm: byte[] ExpireDate>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r4, 0, 14);

     label10:
        i1 = $i0 + 14;

        $i0 = i1 + 1;

     label11:
        $b2 = $r1[i1];

     label12:
        i1 = (int) $b2;

     label13:
        r0.<com.feelingk.iap.net.InitConfirm: int nTokenLength> = i1;

        i1 = r0.<com.feelingk.iap.net.InitConfirm: int nTokenLength>;

     label14:
        if i1 <= 4 goto label16;

     label15:
        i1 = r0.<com.feelingk.iap.net.InitConfirm: int nTokenLength>;

        $r4 = newarray (byte)[i1];

        r0.<com.feelingk.iap.net.InitConfirm: byte[] eToken> = $r4;

        $r4 = r0.<com.feelingk.iap.net.InitConfirm: byte[] eToken>;

        i1 = r0.<com.feelingk.iap.net.InitConfirm: int nTokenLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r4, 0, i1);

     label16:
        return;

     label17:
        $r5 := @caughtexception;

     label18:
        virtualinvoke r0.<com.feelingk.iap.net.InitConfirm: void setResultCode(byte)>(-10);

        return;

     label19:
        $r6 := @caughtexception;

        goto label18;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Exception from label07 to label08 with label19;
        catch java.lang.Exception from label09 to label10 with label19;
        catch java.lang.Exception from label11 to label12 with label19;
        catch java.lang.Exception from label13 to label14 with label19;
        catch java.lang.Exception from label15 to label16 with label19;
    }

    public static void <clinit>()
    {
        <com.feelingk.iap.net.InitConfirm: java.lang.String TAG> = "InitConfirm";

        return;
    }
}
