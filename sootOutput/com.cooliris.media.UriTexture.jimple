public class com.cooliris.media.UriTexture extends com.cooliris.media.Texture
{
    private static final int CONNECTION_TIMEOUT;
    public static final org.apache.http.params.HttpParams HTTP_PARAMS;
    public static final int MAX_RESOLUTION;
    private static final int MAX_RESOLUTION_A;
    private static final int MAX_RESOLUTION_B;
    public static final org.apache.http.conn.scheme.SchemeRegistry SCHEME_REGISTRY;
    private static final java.lang.String TAG;
    public static final java.lang.String URI_CACHE;
    private static final java.lang.String USER_AGENT;
    protected long mCacheId;
    private org.apache.http.impl.conn.SingleClientConnManager mConnectionManager;
    protected java.lang.String mUri;

    static void <clinit>()
    {
        org.apache.http.conn.scheme.PlainSocketFactory $r5;
        org.apache.http.conn.scheme.SchemeRegistry $r3;
        org.apache.http.conn.scheme.Scheme $r4;
        org.apache.http.params.BasicHttpParams r0;
        java.lang.String $r2;
        java.io.File r1;

        <com.cooliris.media.UriTexture: java.lang.String USER_AGENT> = "Cooliris-ImageDownload";

        <com.cooliris.media.UriTexture: java.lang.String TAG> = "UriTexture";

        <com.cooliris.media.UriTexture: int MAX_RESOLUTION_B> = 1024;

        <com.cooliris.media.UriTexture: int MAX_RESOLUTION_A> = 1024;

        <com.cooliris.media.UriTexture: int MAX_RESOLUTION> = 1024;

        <com.cooliris.media.UriTexture: int CONNECTION_TIMEOUT> = 20000;

        $r2 = staticinvoke <com.cooliris.media.UriTexture: java.lang.String getCachePath(java.lang.String)>("hires-image-cache");

        <com.cooliris.media.UriTexture: java.lang.String URI_CACHE> = $r2;

        r0 = new org.apache.http.params.BasicHttpParams;

        specialinvoke r0.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>(r0, 0);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r0, 20000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r0, 20000);

        staticinvoke <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>(r0, 1);

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUserAgent(org.apache.http.params.HttpParams,java.lang.String)>(r0, "Cooliris-ImageDownload");

        <com.cooliris.media.UriTexture: org.apache.http.params.HttpParams HTTP_PARAMS> = r0;

        $r3 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        <com.cooliris.media.UriTexture: org.apache.http.conn.scheme.SchemeRegistry SCHEME_REGISTRY> = $r3;

        $r3 = <com.cooliris.media.UriTexture: org.apache.http.conn.scheme.SchemeRegistry SCHEME_REGISTRY>;

        $r4 = new org.apache.http.conn.scheme.Scheme;

        $r5 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r4.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r5, 80);

        virtualinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r4);

        r1 = new java.io.File;

        $r2 = <com.cooliris.media.UriTexture: java.lang.String URI_CACHE>;

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r2);

        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        com.cooliris.media.UriTexture r0;

        r0 := @this: com.cooliris.media.UriTexture;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.cooliris.media.Texture: void <init>()>();

        r0.<com.cooliris.media.UriTexture: java.lang.String mUri> = $r1;

        return;
    }

    public static final java.lang.String createFilePathFromCrc64(long, int)
    {
        int $i1;
        long $l0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        $r1 = <com.cooliris.media.UriTexture: java.lang.String URI_CACHE>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1024);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cache");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static android.graphics.Bitmap createFromCache(long, int)
    {
        long $l0;
        android.graphics.Bitmap$Config $r2;
        java.lang.Exception $r4;
        byte $b2;
        android.graphics.Bitmap r1;
        int $i1;
        java.lang.String $r3;
        android.graphics.BitmapFactory$Options r0;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        r1 = null;

        r0 = new android.graphics.BitmapFactory$Options;

     label1:
        specialinvoke r0.<android.graphics.BitmapFactory$Options: void <init>()>();

        r0.<android.graphics.BitmapFactory$Options: boolean inScaled> = 0;

     label2:
        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

     label3:
        r0.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r2;

        r0.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

     label4:
        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label6;

     label5:
        $r3 = staticinvoke <com.cooliris.media.UriTexture: java.lang.String createFilePathFromCrc64(long,int)>($l0, 1024);

        r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r3, r0);

     label6:
        return r1;

     label7:
        $r4 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static final android.graphics.Bitmap createFromUri(android.content.Context, java.lang.String, int, int, long, org.apache.http.conn.ClientConnectionManager) throws java.io.IOException, java.net.URISyntaxException, java.lang.OutOfMemoryError
    {
        android.content.Context r0;
        java.io.BufferedInputStream r6;
        java.net.URL $r12;
        android.net.Uri $r8;
        long l2;
        android.graphics.Bitmap$Config r4;
        byte $b5;
        android.content.ContentResolver $r7;
        java.net.URLConnection $r13;
        int $i0, i1, i3, i4;
        java.lang.String r1;
        java.net.URI r11;
        boolean $z0, $z1;
        double d0;
        com.cooliris.media.UriTexture$1 r10;
        org.apache.http.conn.ClientConnectionManager r2;
        java.lang.Exception r23, r24, r25;
        android.graphics.Bitmap $r5, $r14;
        float f0, $f1, f2;
        java.lang.StringBuilder r21;
        android.graphics.BitmapFactory$Options r3;
        java.io.InputStream $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        i1 := @parameter3: int;

        l2 := @parameter4: long;

        r2 := @parameter5: org.apache.http.conn.ClientConnectionManager;

        r3 = new android.graphics.BitmapFactory$Options;

        specialinvoke r3.<android.graphics.BitmapFactory$Options: void <init>()>();

        r3.<android.graphics.BitmapFactory$Options: boolean inScaled> = 0;

        r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        r3.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = r4;

        r3.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("content");

        if $z0 == 0 goto label02;

     label01:
        $r5 = staticinvoke <com.cooliris.media.UriTexture: android.graphics.Bitmap createFromCache(long,int)>(l2, 1024);

        if $r5 == null goto label03;

        return $r5;

     label02:
        l2 = staticinvoke <com.cooliris.media.Utils: long Crc64Long(java.lang.String)>(r1);

        goto label01;

     label03:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("content");

        if $z0 != 0 goto label10;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("file://");

        if $z0 != 0 goto label10;

        $z0 = 0;

     label04:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("content");

        if $z1 == 0 goto label12;

        r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        r6 = new java.io.BufferedInputStream;

        $r7 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r1);

        $r9 = virtualinvoke $r7.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r8);

        specialinvoke r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r9, 16384);

        virtualinvoke r6.<java.io.BufferedInputStream: void mark(int)>(2147483647);

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r6, null, r3);

        i3 = r3.<android.graphics.BitmapFactory$Options: int outWidth>;

        i4 = r3.<android.graphics.BitmapFactory$Options: int outHeight>;

        f0 = (float) 1024;

        if i3 <= i4 goto label05;

        f0 = (float) 1024;

     label05:
        $f1 = (float) 1024;

        $b5 = f0 cmpl $f1;

        if $b5 != 0 goto label11;

     label06:
        $f1 = (float) i1;

        f2 = (float) i3;

        f0 = f2 / f0;

        d0 = (double) f0;

        d0 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        i1 = (int) d0;

        f0 = (float) i4;

        $f1 = f0 / $f1;

        d0 = (double) $f1;

        d0 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        i4 = (int) d0;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i4);

        i1 = staticinvoke <com.cooliris.media.Shared: int nextPowerOf2(int)>(i1);

        r3.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

        r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        r3.<android.graphics.BitmapFactory$Options: int inSampleSize> = i1;

        r10 = new com.cooliris.media.UriTexture$1;

        specialinvoke r10.<com.cooliris.media.UriTexture$1: void <init>(java.lang.String,android.graphics.BitmapFactory$Options)>("BitmapTimeoutThread", r3);

        virtualinvoke r10.<java.lang.Thread: void start()>();

        virtualinvoke r6.<java.io.BufferedInputStream: void close()>();

        r6 = new java.io.BufferedInputStream;

        $r7 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r1);

        $r9 = virtualinvoke $r7.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r8);

        specialinvoke r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r9, 16384);

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r6, null, r3);

        virtualinvoke r6.<java.io.BufferedInputStream: void close()>();

     label07:
        if i1 > 1 goto label08;

        if $z0 != 0 goto label09;

     label08:
        staticinvoke <com.cooliris.media.UriTexture: void writeToCache(long,android.graphics.Bitmap,int)>(l2, $r5, 1024);

     label09:
        return $r5;

     label10:
        $z0 = 1;

        goto label04;

     label11:
        i1 = 1024;

        goto label06;

     label12:
        r11 = new java.net.URI;

     label13:
        specialinvoke r11.<java.net.URI: void <init>(java.lang.String)>(r1);

        $r12 = virtualinvoke r11.<java.net.URI: java.net.URL toURL()>();

        $r13 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r13.<java.net.URLConnection: void connect()>();

        $r9 = virtualinvoke $r13.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label14:
        if $r9 == null goto label23;

        r6 = new java.io.BufferedInputStream;

     label15:
        specialinvoke r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r9, 4096);

        $r14 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r6, null, r3);

     label16:
        $r5 = $r14;

     label17:
        virtualinvoke r6.<java.io.BufferedInputStream: void close()>();

     label18:
        i1 = 1;

        goto label07;

     label19:
        r23 := @caughtexception;

     label20:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error loading image from uri ");

        r21 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UriTexture", r1);

        i1 = 1;

        goto label07;

     label21:
        r24 := @caughtexception;

        goto label20;

     label22:
        r25 := @caughtexception;

        goto label20;

     label23:
        i1 = 1;

        goto label07;

        catch java.lang.Exception from label13 to label14 with label19;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label22;
    }

    public static final java.lang.String getCachePath(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r0;
        java.io.File $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Android/data/com.cooliris.media/cache/");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hires-image-cache");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static void invalidateCache(long, int)
    {
        byte $b2;
        int $i1;
        long $l0;
        java.lang.String $r1;
        java.io.File r0;
        java.lang.Exception $r2;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r1 = staticinvoke <com.cooliris.media.UriTexture: java.lang.String createFilePathFromCrc64(long,int)>($l0, $i1);

        if $r1 == null goto label4;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label4;

        r0 = new java.io.File;

     label1:
        specialinvoke r0.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke r0.<java.io.File: boolean delete()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isCached(long, int)
    {
        java.lang.Throwable $r4;
        long $l0;
        java.io.FileInputStream $r3;
        android.graphics.Bitmap$Config $r2;
        byte $b2;
        int $i1;
        java.lang.String $r1;
        android.graphics.BitmapFactory$Options r0;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        r0 = new android.graphics.BitmapFactory$Options;

        specialinvoke r0.<android.graphics.BitmapFactory$Options: void <init>()>();

        r0.<android.graphics.BitmapFactory$Options: boolean inScaled> = 0;

        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        r0.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r2;

        r0.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label4;

        $r1 = staticinvoke <com.cooliris.media.UriTexture: java.lang.String createFilePathFromCrc64(long,int)>($l0, $i1);

        $r3 = new java.io.FileInputStream;

     label1:
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

     label4:
        return 0;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String writeHttpDataInDirectory(android.content.Context, java.lang.String, java.lang.String)
    {
        java.lang.Throwable r8, r9;
        android.content.Context r0;
        long $l0;
        java.io.File r4, r6;
        java.lang.Exception r10;
        android.graphics.Bitmap $r3;
        java.lang.StringBuilder r5;
        java.lang.String r1, r2;
        java.lang.OutOfMemoryError r7;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $l0 = staticinvoke <com.cooliris.media.Utils: long Crc64Long(java.lang.String)>(r1);

        $z0 = staticinvoke <com.cooliris.media.UriTexture: boolean isCached(long,int)>($l0, 1024);

        if $z0 != 0 goto label03;

     label01:
        $r3 = staticinvoke <com.cooliris.media.UriTexture: android.graphics.Bitmap createFromUri(android.content.Context,java.lang.String,int,int,long,org.apache.http.conn.ClientConnectionManager)>(r0, r1, 1024, 1024, $l0, null);

     label02:
        virtualinvoke $r3.<android.graphics.Bitmap: void recycle()>();

     label03:
        r1 = staticinvoke <com.cooliris.media.UriTexture: java.lang.String createFilePathFromCrc64(long,int)>($l0, 1024);

        r4 = new java.io.File;

     label04:
        specialinvoke r4.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke r4.<java.io.File: boolean exists()>();

     label05:
        if $z0 == 0 goto label16;

        r5 = new java.lang.StringBuilder;

     label06:
        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("/");

     label07:
        if $z0 == 0 goto label15;

        r1 = "";

     label08:
        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        r5 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jpg");

        r1 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        r6 = new java.io.File;

     label10:
        specialinvoke r6.<java.io.File: void <init>(java.lang.String)>(r1);

        staticinvoke <com.cooliris.media.Utils: void Copy(java.io.File,java.io.File)>(r4, r6);

     label11:
        return r1;

     label12:
        r7 := @caughtexception;

        return null;

     label13:
        r8 := @caughtexception;

        return null;

     label14:
        r9 := @caughtexception;

        return null;

     label15:
        r1 = "/";

        goto label08;

     label16:
        return null;

     label17:
        r10 := @caughtexception;

        return null;

        catch java.lang.OutOfMemoryError from label01 to label02 with label12;
        catch java.io.IOException from label01 to label02 with label13;
        catch java.net.URISyntaxException from label01 to label02 with label14;
        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Exception from label06 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label10 to label11 with label17;
    }

    public static void writeToCache(long, android.graphics.Bitmap, int)
    {
        java.io.FileOutputStream r3;
        long $l0;
        java.io.File r2;
        java.lang.Exception $r6;
        java.io.BufferedOutputStream r1;
        byte $b2;
        android.graphics.Bitmap $r0;
        int $i1;
        android.graphics.Bitmap$CompressFormat $r5;
        java.lang.String $r4;

        $l0 := @parameter0: long;

        $r0 := @parameter1: android.graphics.Bitmap;

        $i1 := @parameter2: int;

        $r4 = staticinvoke <com.cooliris.media.UriTexture: java.lang.String createFilePathFromCrc64(long,int)>($l0, 1024);

        if $r0 == null goto label10;

        if $r4 == null goto label10;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label10;

        r2 = new java.io.File;

     label01:
        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r4);

        virtualinvoke r2.<java.io.File: boolean createNewFile()>();

     label02:
        r3 = new java.io.FileOutputStream;

     label03:
        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

     label04:
        r1 = new java.io.BufferedOutputStream;

     label05:
        specialinvoke r1.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r3, 16384);

     label06:
        $r5 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label07:
        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r5, 80, r1);

        virtualinvoke r1.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke r1.<java.io.BufferedOutputStream: void close()>();

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label08:
        return;

     label09:
        $r6 := @caughtexception;

     label10:
        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public void finalize()
    {
        org.apache.http.impl.conn.SingleClientConnManager $r1;
        com.cooliris.media.UriTexture r0;

        r0 := @this: com.cooliris.media.UriTexture;

        $r1 = r0.<com.cooliris.media.UriTexture: org.apache.http.impl.conn.SingleClientConnManager mConnectionManager>;

        if $r1 == null goto label1;

        $r1 = r0.<com.cooliris.media.UriTexture: org.apache.http.impl.conn.SingleClientConnManager mConnectionManager>;

        virtualinvoke $r1.<org.apache.http.impl.conn.SingleClientConnManager: void shutdown()>();

     label1:
        return;
    }

    protected android.graphics.Bitmap load(android.content.Context)
    {
        android.content.Context $r1;
        org.apache.http.conn.scheme.SchemeRegistry $r5;
        long $l0;
        java.lang.Exception $r7;
        org.apache.http.impl.conn.SingleClientConnManager $r2;
        android.graphics.Bitmap $r6;
        org.apache.http.params.HttpParams $r4;
        java.lang.StringBuilder $r8;
        java.lang.String $r3;
        com.cooliris.media.UriTexture r0;
        boolean $z0;

        r0 := @this: com.cooliris.media.UriTexture;

        $r1 := @parameter0: android.content.Context;

     label1:
        $r3 = r0.<com.cooliris.media.UriTexture: java.lang.String mUri>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("http://");

     label2:
        if $z0 == 0 goto label6;

     label3:
        $r3 = r0.<com.cooliris.media.UriTexture: java.lang.String mUri>;

        $l0 = staticinvoke <com.cooliris.media.Utils: long Crc64Long(java.lang.String)>($r3);

        $z0 = staticinvoke <com.cooliris.media.UriTexture: boolean isCached(long,int)>($l0, 1024);

     label4:
        if $z0 != 0 goto label6;

        $r2 = new org.apache.http.impl.conn.SingleClientConnManager;

        $r4 = <com.cooliris.media.UriTexture: org.apache.http.params.HttpParams HTTP_PARAMS>;

        $r5 = <com.cooliris.media.UriTexture: org.apache.http.conn.scheme.SchemeRegistry SCHEME_REGISTRY>;

     label5:
        specialinvoke $r2.<org.apache.http.impl.conn.SingleClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>($r4, $r5);

        r0.<com.cooliris.media.UriTexture: org.apache.http.impl.conn.SingleClientConnManager mConnectionManager> = $r2;

     label6:
        $r3 = r0.<com.cooliris.media.UriTexture: java.lang.String mUri>;

        $l0 = r0.<com.cooliris.media.UriTexture: long mCacheId>;

        $r2 = r0.<com.cooliris.media.UriTexture: org.apache.http.impl.conn.SingleClientConnManager mConnectionManager>;

        $r6 = staticinvoke <com.cooliris.media.UriTexture: android.graphics.Bitmap createFromUri(android.content.Context,java.lang.String,int,int,long,org.apache.http.conn.ClientConnectionManager)>($r1, $r3, 1024, 1024, $l0, $r2);

     label7:
        return $r6;

     label8:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to load image from URI ");

        $r3 = r0.<com.cooliris.media.UriTexture: java.lang.String mUri>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UriTexture", $r3);

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label5 to label7 with label8;
    }

    public void setCacheId(long)
    {
        long $l0;
        com.cooliris.media.UriTexture r0;

        r0 := @this: com.cooliris.media.UriTexture;

        $l0 := @parameter0: long;

        r0.<com.cooliris.media.UriTexture: long mCacheId> = $l0;

        return;
    }
}
