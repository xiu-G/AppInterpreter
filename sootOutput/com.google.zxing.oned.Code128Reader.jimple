public final class com.google.zxing.oned.Code128Reader extends com.google.zxing.oned.OneDReader
{
    private static final int CODE_CODE_A;
    private static final int CODE_CODE_B;
    private static final int CODE_CODE_C;
    private static final int CODE_FNC_1;
    private static final int CODE_FNC_2;
    private static final int CODE_FNC_3;
    private static final int CODE_FNC_4_A;
    private static final int CODE_FNC_4_B;
    static final int[][] CODE_PATTERNS;
    private static final int CODE_SHIFT;
    private static final int CODE_START_A;
    private static final int CODE_START_B;
    private static final int CODE_START_C;
    private static final int CODE_STOP;
    private static final int MAX_AVG_VARIANCE;
    private static final int MAX_INDIVIDUAL_VARIANCE;

    static void <clinit>()
    {
        int[][] $r0;
        int[] $r1;

        <com.google.zxing.oned.Code128Reader: int MAX_INDIVIDUAL_VARIANCE> = 179;

        <com.google.zxing.oned.Code128Reader: int MAX_AVG_VARIANCE> = 64;

        <com.google.zxing.oned.Code128Reader: int CODE_STOP> = 106;

        <com.google.zxing.oned.Code128Reader: int CODE_START_C> = 105;

        <com.google.zxing.oned.Code128Reader: int CODE_START_B> = 104;

        <com.google.zxing.oned.Code128Reader: int CODE_START_A> = 103;

        <com.google.zxing.oned.Code128Reader: int CODE_SHIFT> = 98;

        <com.google.zxing.oned.Code128Reader: int CODE_FNC_4_B> = 100;

        <com.google.zxing.oned.Code128Reader: int CODE_FNC_4_A> = 101;

        <com.google.zxing.oned.Code128Reader: int CODE_FNC_3> = 96;

        <com.google.zxing.oned.Code128Reader: int CODE_FNC_2> = 97;

        <com.google.zxing.oned.Code128Reader: int CODE_FNC_1> = 102;

        <com.google.zxing.oned.Code128Reader: int CODE_CODE_C> = 99;

        <com.google.zxing.oned.Code128Reader: int CODE_CODE_B> = 100;

        <com.google.zxing.oned.Code128Reader: int CODE_CODE_A> = 101;

        $r0 = newarray (int[])[107];

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 2;

        $r1[4] = 2;

        $r1[5] = 2;

        $r0[0] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 2;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 2;

        $r0[1] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 2;

        $r1[2] = 2;

        $r1[3] = 2;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[2] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 2;

        $r1[5] = 3;

        $r0[3] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 3;

        $r1[4] = 2;

        $r1[5] = 2;

        $r0[4] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 2;

        $r1[5] = 2;

        $r0[5] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 2;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 3;

        $r0[6] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 2;

        $r1[3] = 3;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[7] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 3;

        $r1[2] = 2;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[8] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 3;

        $r0[9] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 3;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[10] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[11] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 2;

        $r1[4] = 3;

        $r1[5] = 2;

        $r0[12] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 3;

        $r1[5] = 2;

        $r0[13] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 2;

        $r1[3] = 2;

        $r1[4] = 3;

        $r1[5] = 1;

        $r0[14] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 3;

        $r1[3] = 2;

        $r1[4] = 2;

        $r1[5] = 2;

        $r0[15] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 3;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 2;

        $r0[16] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 3;

        $r1[3] = 2;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[17] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 2;

        $r1[2] = 3;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[18] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 3;

        $r1[5] = 2;

        $r0[19] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 3;

        $r1[5] = 1;

        $r0[20] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 3;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[21] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 2;

        $r1[2] = 3;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[22] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 3;

        $r1[5] = 1;

        $r0[23] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 2;

        $r1[5] = 2;

        $r0[24] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 2;

        $r0[25] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[26] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[27] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 2;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[28] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 2;

        $r1[2] = 2;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[29] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 3;

        $r0[30] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 3;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[31] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 3;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[32] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 3;

        $r1[4] = 2;

        $r1[5] = 3;

        $r0[33] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 3;

        $r0[34] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 3;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[35] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 3;

        $r1[4] = 1;

        $r1[5] = 3;

        $r0[36] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 3;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 3;

        $r0[37] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 3;

        $r1[2] = 2;

        $r1[3] = 3;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[38] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 3;

        $r1[4] = 1;

        $r1[5] = 3;

        $r0[39] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 3;

        $r0[40] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 3;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[41] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 3;

        $r1[5] = 3;

        $r0[42] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 3;

        $r1[4] = 3;

        $r1[5] = 1;

        $r0[43] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 3;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 3;

        $r1[5] = 1;

        $r0[44] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 3;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 3;

        $r0[45] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 3;

        $r1[3] = 3;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[46] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 3;

        $r1[2] = 3;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[47] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 1;

        $r1[2] = 3;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[48] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 3;

        $r1[4] = 3;

        $r1[5] = 1;

        $r0[49] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 3;

        $r1[5] = 1;

        $r0[50] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 3;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 3;

        $r0[51] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 3;

        $r1[3] = 3;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[52] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 3;

        $r1[3] = 1;

        $r1[4] = 3;

        $r1[5] = 1;

        $r0[53] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 3;

        $r0[54] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 3;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[55] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[56] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 3;

        $r0[57] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 3;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[58] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 3;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[59] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 1;

        $r1[2] = 4;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[60] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 4;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[61] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 4;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[62] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 2;

        $r1[5] = 4;

        $r0[63] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 4;

        $r1[4] = 2;

        $r1[5] = 2;

        $r0[64] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 4;

        $r0[65] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 4;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[66] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 4;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 2;

        $r0[67] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 4;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[68] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 4;

        $r0[69] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 4;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[70] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 4;

        $r0[71] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 2;

        $r1[3] = 4;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[72] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 4;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[73] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 4;

        $r1[2] = 2;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[74] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 4;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[75] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 4;

        $r0[76] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 4;

        $r1[1] = 1;

        $r1[2] = 3;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[77] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 4;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[78] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 3;

        $r1[2] = 4;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[79] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 4;

        $r1[5] = 2;

        $r0[80] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 4;

        $r1[5] = 2;

        $r0[81] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 4;

        $r1[5] = 1;

        $r0[82] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 4;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[83] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 4;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[84] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 4;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[85] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 4;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[86] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 4;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[87] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 4;

        $r1[1] = 2;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[88] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 4;

        $r1[5] = 1;

        $r0[89] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 4;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[90] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 4;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 2;

        $r1[5] = 1;

        $r0[91] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 4;

        $r1[5] = 3;

        $r0[92] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 3;

        $r1[4] = 4;

        $r1[5] = 1;

        $r0[93] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 3;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 4;

        $r1[5] = 1;

        $r0[94] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 4;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 3;

        $r0[95] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 4;

        $r1[3] = 3;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[96] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 4;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 3;

        $r0[97] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 4;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 3;

        $r1[4] = 1;

        $r1[5] = 1;

        $r0[98] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 3;

        $r1[3] = 1;

        $r1[4] = 4;

        $r1[5] = 1;

        $r0[99] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 1;

        $r1[1] = 1;

        $r1[2] = 4;

        $r1[3] = 1;

        $r1[4] = 3;

        $r1[5] = 1;

        $r0[100] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 3;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 4;

        $r1[5] = 1;

        $r0[101] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 4;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 1;

        $r1[4] = 3;

        $r1[5] = 1;

        $r0[102] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 4;

        $r1[4] = 1;

        $r1[5] = 2;

        $r0[103] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 1;

        $r1[5] = 4;

        $r0[104] = $r1;

        $r1 = newarray (int)[6];

        $r1[0] = 2;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 3;

        $r1[5] = 2;

        $r0[105] = $r1;

        $r1 = newarray (int)[7];

        $r1[0] = 2;

        $r1[1] = 3;

        $r1[2] = 3;

        $r1[3] = 1;

        $r1[4] = 1;

        $r1[5] = 1;

        $r1[6] = 2;

        $r0[106] = $r1;

        <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS> = $r0;

        return;
    }

    public void <init>()
    {
        com.google.zxing.oned.Code128Reader r0;

        r0 := @this: com.google.zxing.oned.Code128Reader;

        specialinvoke r0.<com.google.zxing.oned.OneDReader: void <init>()>();

        return;
    }

    private static int decodeCode(com.google.zxing.common.BitArray, int[], int) throws com.google.zxing.NotFoundException
    {
        int[][] $r2;
        com.google.zxing.common.BitArray $r0;
        int[] $r1, $r3;
        com.google.zxing.NotFoundException $r4;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: com.google.zxing.common.BitArray;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        staticinvoke <com.google.zxing.oned.Code128Reader: void recordPattern(com.google.zxing.common.BitArray,int,int[])>($r0, $i0, $r1);

        $i0 = 64;

        $i1 = -1;

        $i2 = 0;

     label1:
        $r2 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $i3 = lengthof $r2;

        if $i2 >= $i3 goto label3;

        $r2 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $r3 = $r2[$i2];

        $i3 = staticinvoke <com.google.zxing.oned.Code128Reader: int patternMatchVariance(int[],int[],int)>($r1, $r3, 179);

        if $i3 >= $i0 goto label2;

        $i1 = $i2;

        $i0 = $i3;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        if $i1 < 0 goto label4;

        return $i1;

     label4:
        $r4 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        throw $r4;
    }

    private static int[] findStartPattern(com.google.zxing.common.BitArray) throws com.google.zxing.NotFoundException
    {
        int[][] $r2;
        int[] $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1;
        com.google.zxing.common.BitArray $r0;
        com.google.zxing.NotFoundException $r4;

        $r0 := @parameter0: com.google.zxing.common.BitArray;

        $i1 = virtualinvoke $r0.<com.google.zxing.common.BitArray: int getSize()>();

        $i2 = 0;

     label01:
        if $i2 >= $i1 goto label02;

        $z0 = virtualinvoke $r0.<com.google.zxing.common.BitArray: boolean get(int)>($i2);

        if $z0 == 0 goto label05;

     label02:
        $r1 = newarray (int)[6];

        $i0 = lengthof $r1;

        $i3 = $i2;

        $z0 = 0;

        $i4 = $i2;

        $i2 = 0;

     label03:
        if $i3 >= $i1 goto label16;

        $z1 = virtualinvoke $r0.<com.google.zxing.common.BitArray: boolean get(int)>($i3);

        $z1 = $z1 ^ $z0;

        if $z1 == 0 goto label06;

        $i5 = $r1[$i2];

        $i5 = $i5 + 1;

        $r1[$i2] = $i5;

     label04:
        $i3 = $i3 + 1;

        goto label03;

     label05:
        $i2 = $i2 + 1;

        goto label01;

     label06:
        $i5 = $i0 + -1;

        if $i2 != $i5 goto label14;

        $i6 = 64;

        $i5 = -1;

        $i7 = 103;

     label07:
        if $i7 > 105 goto label09;

        $r2 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $r3 = $r2[$i7];

        $i8 = staticinvoke <com.google.zxing.oned.Code128Reader: int patternMatchVariance(int[],int[],int)>($r1, $r3, 179);

        $i9 = $i8;

        if $i8 >= $i6 goto label17;

        $i5 = $i7;

     label08:
        $i7 = $i7 + 1;

        $i6 = $i9;

        goto label07;

     label09:
        if $i5 < 0 goto label10;

        $i6 = $i3 - $i4;

        $i6 = $i6 / 2;

        $i6 = $i4 - $i6;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $z1 = virtualinvoke $r0.<com.google.zxing.common.BitArray: boolean isRange(int,int,boolean)>($i6, $i4, 0);

        if $z1 == 0 goto label10;

        $r1 = newarray (int)[3];

        $r1[0] = $i4;

        $r1[1] = $i3;

        $r1[2] = $i5;

        return $r1;

     label10:
        $i5 = $r1[0];

        $i6 = $r1[1];

        $i5 = $i5 + $i6;

        $i4 = $i5 + $i4;

        $i5 = 2;

     label11:
        if $i5 >= $i0 goto label12;

        $i6 = $i5 + -2;

        $i7 = $r1[$i5];

        $r1[$i6] = $i7;

        $i5 = $i5 + 1;

        goto label11;

     label12:
        $i5 = $i0 + -2;

        $r1[$i5] = 0;

        $i5 = $i0 + -1;

        $r1[$i5] = 0;

        $i2 = $i2 + -1;

     label13:
        $r1[$i2] = 1;

        if $z0 != 0 goto label15;

        $z0 = 1;

        goto label04;

     label14:
        $i2 = $i2 + 1;

        goto label13;

     label15:
        $z0 = 0;

        goto label04;

     label16:
        $r4 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        throw $r4;

     label17:
        $i9 = $i6;

        goto label08;
    }

    public com.google.zxing.Result decodeRow(int, com.google.zxing.common.BitArray, java.util.Hashtable) throws com.google.zxing.NotFoundException, com.google.zxing.FormatException, com.google.zxing.ChecksumException
    {
        com.google.zxing.Result $r14;
        byte $b2;
        int[] $r4, $r5;
        com.google.zxing.FormatException $r6;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1, $f2;
        com.google.zxing.BarcodeFormat $r11;
        com.google.zxing.ResultPoint $r13;
        com.google.zxing.oned.Code128Reader r0;
        java.lang.StringBuffer $r3, $r12;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r9;
        java.util.Hashtable $r2;
        com.google.zxing.ChecksumException $r8;
        char $c10;
        com.google.zxing.common.BitArray $r1;
        com.google.zxing.ResultPoint[] $r10;
        com.google.zxing.NotFoundException $r7;

        r0 := @this: com.google.zxing.oned.Code128Reader;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.zxing.common.BitArray;

        $r2 := @parameter2: java.util.Hashtable;

        $r5 = staticinvoke <com.google.zxing.oned.Code128Reader: int[] findStartPattern(com.google.zxing.common.BitArray)>($r1);

        $i1 = $r5[2];

        lookupswitch($i1)
        {
            case 103: goto label02;
            case 104: goto label07;
            case 105: goto label08;
            default: goto label01;
        };

     label01:
        $r6 = staticinvoke <com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance()>();

        throw $r6;

     label02:
        $b2 = 101;

     label03:
        $r12 = new java.lang.StringBuffer;

        $r3 = $r12;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>(int)>(20);

        $i4 = $r5[1];

        $r4 = newarray (int)[6];

        $z0 = 1;

        $z1 = 0;

        $z2 = 0;

        $i5 = 0;

        $i6 = 0;

        $i7 = 0;

        $i3 = $r5[0];

     label04:
        if $z2 != 0 goto label44;

        $z3 = 0;

        $i3 = staticinvoke <com.google.zxing.oned.Code128Reader: int decodeCode(com.google.zxing.common.BitArray,int[],int)>($r1, $r4, $i4);

        if $i3 == 106 goto label05;

        $z0 = 1;

        if $i3 == 106 goto label05;

        $i5 = $i5 + 1;

        $i6 = $i5 * $i3;

        $i1 = $i1 + $i6;

     label05:
        $i6 = 0;

        $i8 = $i4;

     label06:
        $i9 = lengthof $r4;

        if $i6 >= $i9 goto label09;

        $i9 = $r4[$i6];

        $i8 = $i8 + $i9;

        $i6 = $i6 + 1;

        goto label06;

     label07:
        $b2 = 100;

        goto label03;

     label08:
        $b2 = 99;

        goto label03;

     label09:
        lookupswitch($i3)
        {
            case 103: goto label14;
            case 104: goto label14;
            case 105: goto label14;
            default: goto label10;
        };

     label10:
        lookupswitch($b2)
        {
            case 99: goto label32;
            case 100: goto label25;
            case 101: goto label15;
            default: goto label11;
        };

     label11:
        $z3 = 0;

     label12:
        if $z1 == 0 goto label13;

        lookupswitch($b2)
        {
            case 99: goto label43;
            case 100: goto label42;
            case 101: goto label41;
            default: goto label13;
        };

     label13:
        $z1 = $z3;

        $i6 = $i7;

        $i7 = $i3;

        $i3 = $i4;

        $i4 = $i8;

        goto label04;

     label14:
        $r6 = staticinvoke <com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance()>();

        throw $r6;

     label15:
        if $i3 >= 64 goto label16;

        $i6 = $i3 + 32;

        $c10 = (char) $i6;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c10);

        $z3 = 0;

        goto label12;

     label16:
        if $i3 >= 96 goto label17;

        $i6 = $i3 + -64;

        $c10 = (char) $i6;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c10);

        $z3 = 0;

        goto label12;

     label17:
        if $i3 == 106 goto label18;

        $z0 = 0;

     label18:
        lookupswitch($i3)
        {
            case 96: goto label20;
            case 97: goto label20;
            case 98: goto label21;
            case 99: goto label23;
            case 100: goto label22;
            case 101: goto label20;
            case 102: goto label20;
            case 103: goto label19;
            case 104: goto label19;
            case 105: goto label19;
            case 106: goto label24;
            default: goto label19;
        };

     label19:
        $z3 = 0;

        goto label12;

     label20:
        $z3 = 0;

        goto label12;

     label21:
        $z3 = 1;

        $b2 = 100;

        goto label12;

     label22:
        $b2 = 100;

        $z3 = 0;

        goto label12;

     label23:
        $b2 = 99;

        $z3 = 0;

        goto label12;

     label24:
        $z3 = 0;

        $z2 = 1;

        goto label12;

     label25:
        if $i3 >= 96 goto label26;

        $i6 = $i3 + 32;

        $c10 = (char) $i6;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c10);

        $z3 = 0;

        goto label12;

     label26:
        if $i3 == 106 goto label27;

        $z0 = 0;

     label27:
        lookupswitch($i3)
        {
            case 96: goto label12;
            case 97: goto label12;
            case 98: goto label28;
            case 99: goto label30;
            case 100: goto label12;
            case 101: goto label29;
            case 102: goto label12;
            case 103: goto label12;
            case 104: goto label12;
            case 105: goto label12;
            case 106: goto label31;
            default: goto label12;
        };

     label28:
        $z3 = 1;

        $b2 = 99;

        goto label12;

     label29:
        $b2 = 101;

        goto label12;

     label30:
        $b2 = 99;

        goto label12;

     label31:
        $z2 = 1;

        goto label12;

     label32:
        if $i3 >= 100 goto label34;

        if $i3 >= 10 goto label33;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label33:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $z3 = 0;

        goto label12;

     label34:
        if $i3 == 106 goto label35;

        $z0 = 0;

     label35:
        lookupswitch($i3)
        {
            case 100: goto label39;
            case 101: goto label38;
            case 102: goto label37;
            case 103: goto label36;
            case 104: goto label36;
            case 105: goto label36;
            case 106: goto label40;
            default: goto label36;
        };

     label36:
        $z3 = 0;

        goto label12;

     label37:
        $z3 = 0;

        goto label12;

     label38:
        $b2 = 101;

        $z3 = 0;

        goto label12;

     label39:
        $b2 = 100;

        $z3 = 0;

        goto label12;

     label40:
        $z2 = 1;

        $z3 = 0;

        goto label12;

     label41:
        $b2 = 99;

        goto label13;

     label42:
        $b2 = 101;

        goto label13;

     label43:
        $b2 = 100;

        goto label13;

     label44:
        $i7 = virtualinvoke $r1.<com.google.zxing.common.BitArray: int getSize()>();

     label45:
        if $i4 >= $i7 goto label46;

        $z1 = virtualinvoke $r1.<com.google.zxing.common.BitArray: boolean get(int)>($i4);

        if $z1 == 0 goto label46;

        $i4 = $i4 + 1;

        goto label45;

     label46:
        $i8 = $i4 - $i3;

        $i8 = $i8 / 2;

        $i8 = $i8 + $i4;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i8);

        $z1 = virtualinvoke $r1.<com.google.zxing.common.BitArray: boolean isRange(int,int,boolean)>($i4, $i7, 0);

        if $z1 != 0 goto label47;

        $r7 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        throw $r7;

     label47:
        $i5 = $i5 * $i6;

        $i5 = $i1 - $i5;

        $i5 = $i5 % 103;

        if $i5 == $i6 goto label48;

        $r8 = staticinvoke <com.google.zxing.ChecksumException: com.google.zxing.ChecksumException getChecksumInstance()>();

        throw $r8;

     label48:
        $i5 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        if $i5 <= 0 goto label49;

        if $z0 == 0 goto label49;

        if $b2 != 99 goto label50;

        $i1 = $i5 + -2;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>($i1, $i5);

     label49:
        $r9 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $i5 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i5 != 0 goto label51;

        $r6 = staticinvoke <com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance()>();

        throw $r6;

     label50:
        $i1 = $i5 + -1;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>($i1, $i5);

        goto label49;

     label51:
        $i5 = $r5[1];

        $i1 = $r5[0];

        $i5 = $i5 + $i1;

        $f0 = (float) $i5;

        $f0 = $f0 / 2.0F;

        $i4 = $i4 + $i3;

        $f1 = (float) $i4;

        $f1 = $f1 / 2.0F;

        $r14 = new com.google.zxing.Result;

        $r10 = newarray (com.google.zxing.ResultPoint)[2];

        $r13 = new com.google.zxing.ResultPoint;

        $f2 = (float) $i0;

        specialinvoke $r13.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f2);

        $r10[0] = $r13;

        $r13 = new com.google.zxing.ResultPoint;

        $f0 = (float) $i0;

        specialinvoke $r13.<com.google.zxing.ResultPoint: void <init>(float,float)>($f1, $f0);

        $r10[1] = $r13;

        $r11 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODE_128>;

        specialinvoke $r14.<com.google.zxing.Result: void <init>(java.lang.String,byte[],com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat)>($r9, null, $r10, $r11);

        return $r14;
    }
}
