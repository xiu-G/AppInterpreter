public class proguard.optimize.OptimizationInfoMemberFilter extends java.lang.Object implements proguard.classfile.visitor.MemberVisitor
{
    private final proguard.classfile.visitor.MemberVisitor memberVisitor;

    public void <init>(proguard.classfile.visitor.MemberVisitor)
    {
        proguard.classfile.visitor.MemberVisitor $r1;
        proguard.optimize.OptimizationInfoMemberFilter r0;

        r0 := @this: proguard.optimize.OptimizationInfoMemberFilter;

        $r1 := @parameter0: proguard.classfile.visitor.MemberVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.optimize.OptimizationInfoMemberFilter: proguard.classfile.visitor.MemberVisitor memberVisitor> = $r1;

        return;
    }

    public void visitLibraryField(proguard.classfile.LibraryClass, proguard.classfile.LibraryField)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.LibraryField $r2;
        proguard.classfile.visitor.MemberVisitor $r4;
        proguard.optimize.info.FieldOptimizationInfo $r3;
        proguard.optimize.OptimizationInfoMemberFilter r0;

        r0 := @this: proguard.optimize.OptimizationInfoMemberFilter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryField;

        $r3 = staticinvoke <proguard.optimize.info.FieldOptimizationInfo: proguard.optimize.info.FieldOptimizationInfo getFieldOptimizationInfo(proguard.classfile.Field)>($r2);

        if $r3 == null goto label1;

        $r4 = r0.<proguard.optimize.OptimizationInfoMemberFilter: proguard.classfile.visitor.MemberVisitor memberVisitor>;

        interfaceinvoke $r4.<proguard.classfile.visitor.MemberVisitor: void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField)>($r1, $r2);

     label1:
        return;
    }

    public void visitLibraryMethod(proguard.classfile.LibraryClass, proguard.classfile.LibraryMethod)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.LibraryMethod $r2;
        proguard.classfile.visitor.MemberVisitor $r4;
        proguard.optimize.info.MethodOptimizationInfo $r3;
        proguard.optimize.OptimizationInfoMemberFilter r0;

        r0 := @this: proguard.optimize.OptimizationInfoMemberFilter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryMethod;

        $r3 = staticinvoke <proguard.optimize.info.MethodOptimizationInfo: proguard.optimize.info.MethodOptimizationInfo getMethodOptimizationInfo(proguard.classfile.Method)>($r2);

        if $r3 == null goto label1;

        $r4 = r0.<proguard.optimize.OptimizationInfoMemberFilter: proguard.classfile.visitor.MemberVisitor memberVisitor>;

        interfaceinvoke $r4.<proguard.classfile.visitor.MemberVisitor: void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod)>($r1, $r2);

     label1:
        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        proguard.classfile.ProgramField $r2;
        proguard.classfile.visitor.MemberVisitor $r4;
        proguard.optimize.info.FieldOptimizationInfo $r3;
        proguard.classfile.ProgramClass $r1;
        proguard.optimize.OptimizationInfoMemberFilter r0;

        r0 := @this: proguard.optimize.OptimizationInfoMemberFilter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r3 = staticinvoke <proguard.optimize.info.FieldOptimizationInfo: proguard.optimize.info.FieldOptimizationInfo getFieldOptimizationInfo(proguard.classfile.Field)>($r2);

        if $r3 == null goto label1;

        $r4 = r0.<proguard.optimize.OptimizationInfoMemberFilter: proguard.classfile.visitor.MemberVisitor memberVisitor>;

        interfaceinvoke $r4.<proguard.classfile.visitor.MemberVisitor: void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField)>($r1, $r2);

     label1:
        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.classfile.ProgramMethod $r2;
        proguard.classfile.visitor.MemberVisitor $r4;
        proguard.optimize.info.MethodOptimizationInfo $r3;
        proguard.classfile.ProgramClass $r1;
        proguard.optimize.OptimizationInfoMemberFilter r0;

        r0 := @this: proguard.optimize.OptimizationInfoMemberFilter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r3 = staticinvoke <proguard.optimize.info.MethodOptimizationInfo: proguard.optimize.info.MethodOptimizationInfo getMethodOptimizationInfo(proguard.classfile.Method)>($r2);

        if $r3 == null goto label1;

        $r4 = r0.<proguard.optimize.OptimizationInfoMemberFilter: proguard.classfile.visitor.MemberVisitor memberVisitor>;

        interfaceinvoke $r4.<proguard.classfile.visitor.MemberVisitor: void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod)>($r1, $r2);

     label1:
        return;
    }
}
