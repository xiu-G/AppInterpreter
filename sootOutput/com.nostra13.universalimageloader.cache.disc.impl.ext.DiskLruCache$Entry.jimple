final class com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry extends java.lang.Object
{
    private com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor currentEditor;
    private final java.lang.String key;
    private final long[] lengths;
    private boolean readable;
    private long sequenceNumber;
    final com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0;

    private void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache, java.lang.String)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r1;
        long[] $r3;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry r0;
        int $i0;
        java.lang.String $r2;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $r1 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: java.lang.String key> = $r2;

        $i0 = staticinvoke <com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: int access$1900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache)>($r1);

        $r3 = newarray (long)[$i0];

        r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: long[] lengths> = $r3;

        return;
    }

    void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache, java.lang.String, com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r1;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1 $r3;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry r0;
        java.lang.String $r2;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $r1 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1;

        specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,java.lang.String)>($r1, $r2);

        return;
    }

    static long[] access$1100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry)
    {
        long[] r1;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        r1 = $r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: long[] lengths>;

        return r1;
    }

    static java.lang.String access$1200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry)
    {
        java.lang.String r1;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        r1 = $r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: java.lang.String key>;

        return r1;
    }

    static long access$1300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry)
    {
        long l0;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        l0 = $r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: long sequenceNumber>;

        return l0;
    }

    static long access$1302(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry, long)
    {
        long $l0;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $l0 := @parameter1: long;

        $r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: long sequenceNumber> = $l0;

        return $l0;
    }

    static boolean access$700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry $r0;
        boolean z0;

        $r0 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        z0 = $r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: boolean readable>;

        return z0;
    }

    static boolean access$702(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry, boolean)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry $r0;
        boolean $z0;

        $r0 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $z0 := @parameter1: boolean;

        $r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: boolean readable> = 1;

        return 1;
    }

    static com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$800(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry $r0;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor r1;

        $r0 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        r1 = $r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor currentEditor>;

        return r1;
    }

    static com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$802(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry, com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry $r0;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor $r1;

        $r0 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $r1 := @parameter1: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor;

        $r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor currentEditor> = $r1;

        return $r1;
    }

    static void access$900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry, java.lang.String[])
    {
        java.lang.String[] $r1;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $r1 := @parameter1: java.lang.String[];

        specialinvoke $r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: void setLengths(java.lang.String[])>($r1);

        return;
    }

    private java.io.IOException invalidLengths(java.lang.String[])
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry r0;
        java.lang.String[] $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String[];

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("unexpected journal line: ");

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    private void setLengths(java.lang.String[])
    {
        java.lang.Throwable $r6;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry r0;
        java.lang.String[] $r1;
        java.io.IOException $r3;
        long $l2;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r2;
        long[] $r4;
        int $i0, $i1;
        java.lang.String $r5;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String[];

        $i0 = lengthof $r1;

        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0>;

        $i1 = staticinvoke <com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: int access$1900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache)>($r2);

        if $i0 == $i1 goto label1;

        $r3 = specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>($r1);

        throw $r3;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label6;

        $r4 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: long[] lengths>;

        $r5 = $r1[$i0];

     label3:
        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

     label4:
        $r4[$i0] = $l2;

        $i0 = $i0 + 1;

        goto label2;

     label5:
        $r6 := @caughtexception;

        $r3 = specialinvoke r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>($r1);

        throw $r3;

     label6:
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public final java.io.File getCleanFile(int)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r2;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry r0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.io.File $r1, $r3;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0>;

        $r3 = staticinvoke <com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: java.io.File access$2000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: java.lang.String key>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5);

        return $r1;
    }

    public final java.io.File getDirtyFile(int)
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache $r2;
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry r0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.io.File $r1, $r3;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0>;

        $r3 = staticinvoke <com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache: java.io.File access$2000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: java.lang.String key>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5);

        return $r1;
    }

    public final java.lang.String getLengths()
    {
        com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry r0;
        long $l1;
        long[] $r2;
        int $i0, $i2;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r4;

        r0 := @this: com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry: long[] lengths>;

        $i0 = lengthof $r2;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $l1 = $r2[$i2];

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
