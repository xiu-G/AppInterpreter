public class org.htmlparser.filters.HasAttributeFilter extends java.lang.Object implements org.htmlparser.NodeFilter
{
    protected java.lang.String a;
    protected java.lang.String b;

    public void <init>()
    {
        org.htmlparser.filters.HasAttributeFilter r0;

        r0 := @this: org.htmlparser.filters.HasAttributeFilter;

        specialinvoke r0.<org.htmlparser.filters.HasAttributeFilter: void <init>(java.lang.String,java.lang.String)>("", null);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        org.htmlparser.filters.HasAttributeFilter r0;

        r0 := @this: org.htmlparser.filters.HasAttributeFilter;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.htmlparser.filters.HasAttributeFilter: void <init>(java.lang.String,java.lang.String)>($r1, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.util.Locale $r3;
        java.lang.String $r1, $r2;
        org.htmlparser.filters.HasAttributeFilter r0;

        r0 := @this: org.htmlparser.filters.HasAttributeFilter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        r0.<org.htmlparser.filters.HasAttributeFilter: java.lang.String a> = $r1;

        r0.<org.htmlparser.filters.HasAttributeFilter: java.lang.String b> = $r2;

        return;
    }

    public boolean accept(org.htmlparser.Node)
    {
        kk $r4;
        org.htmlparser.Node $r2;
        org.htmlparser.filters.HasAttributeFilter r0;
        org.htmlparser.Tag $r3;
        java.lang.String $r1, $r5;
        boolean $z0, $z1;

        r0 := @this: org.htmlparser.filters.HasAttributeFilter;

        $r2 := @parameter0: org.htmlparser.Node;

        $z0 = 0;

        $z1 = $r2 instanceof org.htmlparser.Tag;

        if $z1 == 0 goto label2;

        $r3 = (org.htmlparser.Tag) $r2;

        $r1 = r0.<org.htmlparser.filters.HasAttributeFilter: java.lang.String a>;

        $r4 = interfaceinvoke $r3.<org.htmlparser.Tag: kk getAttributeEx(java.lang.String)>($r1);

        if $r4 == null goto label1;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label2;

        $r1 = r0.<org.htmlparser.filters.HasAttributeFilter: java.lang.String b>;

        if $r1 == null goto label2;

        $r1 = r0.<org.htmlparser.filters.HasAttributeFilter: java.lang.String b>;

        $r5 = virtualinvoke $r4.<kk: java.lang.String c()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label2:
        return $z0;
    }

    public java.lang.String getAttributeName()
    {
        java.lang.String r1;
        org.htmlparser.filters.HasAttributeFilter r0;

        r0 := @this: org.htmlparser.filters.HasAttributeFilter;

        r1 = r0.<org.htmlparser.filters.HasAttributeFilter: java.lang.String a>;

        return r1;
    }

    public java.lang.String getAttributeValue()
    {
        java.lang.String r1;
        org.htmlparser.filters.HasAttributeFilter r0;

        r0 := @this: org.htmlparser.filters.HasAttributeFilter;

        r1 = r0.<org.htmlparser.filters.HasAttributeFilter: java.lang.String b>;

        return r1;
    }

    public void setAttributeName(java.lang.String)
    {
        java.lang.String $r1;
        org.htmlparser.filters.HasAttributeFilter r0;

        r0 := @this: org.htmlparser.filters.HasAttributeFilter;

        $r1 := @parameter0: java.lang.String;

        r0.<org.htmlparser.filters.HasAttributeFilter: java.lang.String a> = $r1;

        return;
    }

    public void setAttributeValue(java.lang.String)
    {
        java.lang.String $r1;
        org.htmlparser.filters.HasAttributeFilter r0;

        r0 := @this: org.htmlparser.filters.HasAttributeFilter;

        $r1 := @parameter0: java.lang.String;

        r0.<org.htmlparser.filters.HasAttributeFilter: java.lang.String b> = $r1;

        return;
    }
}
