class com.hp.hpl.sparta.BuildDocument extends java.lang.Object implements com.hp.hpl.sparta.DocumentSource, com.hp.hpl.sparta.ParseHandler
{
    private com.hp.hpl.sparta.Element currentElement_;
    private final com.hp.hpl.sparta.Document doc_;
    private final com.hp.hpl.sparta.ParseLog log_;
    private com.hp.hpl.sparta.ParseSource parseSource_;

    public void <init>()
    {
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        specialinvoke r0.<com.hp.hpl.sparta.BuildDocument: void <init>(com.hp.hpl.sparta.ParseLog)>(null);

        return;
    }

    public void <init>(com.hp.hpl.sparta.ParseLog)
    {
        com.hp.hpl.sparta.Document $r1;
        com.hp.hpl.sparta.BuildDocument r0;
        com.hp.hpl.sparta.ParseLog $r2;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        $r2 := @parameter0: com.hp.hpl.sparta.ParseLog;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Element currentElement_> = null;

        $r1 = new com.hp.hpl.sparta.Document;

        specialinvoke $r1.<com.hp.hpl.sparta.Document: void <init>()>();

        r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document doc_> = $r1;

        r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.ParseSource parseSource_> = null;

        if $r2 != null goto label1;

        $r2 = <com.hp.hpl.sparta.ParseSource: com.hp.hpl.sparta.ParseLog DEFAULT_LOG>;

     label1:
        r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.ParseLog log_> = $r2;

        return;
    }

    public void characters(char[], int, int)
    {
        com.hp.hpl.sparta.Node $r4;
        com.hp.hpl.sparta.BuildDocument r0;
        com.hp.hpl.sparta.Text $r5;
        com.hp.hpl.sparta.Element $r3;
        int $i0, $i1;
        char[] $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Element currentElement_>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Node getLastChild()>();

        $z0 = $r4 instanceof com.hp.hpl.sparta.Text;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r3.<com.hp.hpl.sparta.Element: com.hp.hpl.sparta.Node getLastChild()>();

        $r5 = (com.hp.hpl.sparta.Text) $r4;

        virtualinvoke $r5.<com.hp.hpl.sparta.Text: void appendData(char[],int,int)>($r1, $i0, $i1);

        return;

     label1:
        $r5 = new com.hp.hpl.sparta.Text;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        specialinvoke $r5.<com.hp.hpl.sparta.Text: void <init>(java.lang.String)>($r2);

        virtualinvoke $r3.<com.hp.hpl.sparta.Element: void appendChildNoChecking(com.hp.hpl.sparta.Node)>($r5);

        return;
    }

    public void endDocument()
    {
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        return;
    }

    public void endElement(com.hp.hpl.sparta.Element)
    {
        com.hp.hpl.sparta.Element $r1;
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        $r1 := @parameter0: com.hp.hpl.sparta.Element;

        $r1 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Element currentElement_>;

        $r1 = virtualinvoke $r1.<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element getParentNode()>();

        r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Element currentElement_> = $r1;

        return;
    }

    public com.hp.hpl.sparta.Document getDocument()
    {
        com.hp.hpl.sparta.Document r1;
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        r1 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document doc_>;

        return r1;
    }

    public int getLineNumber()
    {
        int $i0;
        com.hp.hpl.sparta.ParseSource $r1;
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        $r1 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.ParseSource parseSource_>;

        if $r1 == null goto label1;

        $r1 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.ParseSource parseSource_>;

        $i0 = interfaceinvoke $r1.<com.hp.hpl.sparta.ParseSource: int getLineNumber()>();

        return $i0;

     label1:
        $i0 = -1;

        return $i0;
    }

    public com.hp.hpl.sparta.ParseSource getParseSource()
    {
        com.hp.hpl.sparta.ParseSource r1;
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        r1 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.ParseSource parseSource_>;

        return r1;
    }

    public java.lang.String getSystemId()
    {
        com.hp.hpl.sparta.ParseSource $r2;
        java.lang.String $r1;
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        $r2 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.ParseSource parseSource_>;

        if $r2 == null goto label1;

        $r2 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.ParseSource parseSource_>;

        $r1 = interfaceinvoke $r2.<com.hp.hpl.sparta.ParseSource: java.lang.String getSystemId()>();

        return $r1;

     label1:
        return null;
    }

    public void setParseSource(com.hp.hpl.sparta.ParseSource)
    {
        com.hp.hpl.sparta.ParseSource $r1;
        com.hp.hpl.sparta.Document $r2;
        java.lang.String $r3;
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        $r1 := @parameter0: com.hp.hpl.sparta.ParseSource;

        r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.ParseSource parseSource_> = $r1;

        $r2 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document doc_>;

        $r3 = interfaceinvoke $r1.<com.hp.hpl.sparta.ParseSource: java.lang.String toString()>();

        virtualinvoke $r2.<com.hp.hpl.sparta.Document: void setSystemId(java.lang.String)>($r3);

        return;
    }

    public void startDocument()
    {
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        return;
    }

    public void startElement(com.hp.hpl.sparta.Element)
    {
        com.hp.hpl.sparta.Element $r1, $r2;
        com.hp.hpl.sparta.Document $r3;
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        $r1 := @parameter0: com.hp.hpl.sparta.Element;

        $r2 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Element currentElement_>;

        if $r2 != null goto label2;

        $r3 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Document doc_>;

        virtualinvoke $r3.<com.hp.hpl.sparta.Document: void setDocumentElement(com.hp.hpl.sparta.Element)>($r1);

     label1:
        r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Element currentElement_> = $r1;

        return;

     label2:
        $r2 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.Element currentElement_>;

        virtualinvoke $r2.<com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>($r1);

        goto label1;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.sparta.ParseSource $r1;
        java.lang.StringBuffer $r2;
        java.lang.String $r3;
        com.hp.hpl.sparta.BuildDocument r0;

        r0 := @this: com.hp.hpl.sparta.BuildDocument;

        $r1 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.ParseSource parseSource_>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("BuildDoc: ");

        $r1 = r0.<com.hp.hpl.sparta.BuildDocument: com.hp.hpl.sparta.ParseSource parseSource_>;

        $r3 = interfaceinvoke $r1.<com.hp.hpl.sparta.ParseSource: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label1:
        return null;
    }
}
