public class com.loopj.android.http.RequestParams extends java.lang.Object
{
    private static java.lang.String ENCODING;
    protected java.util.concurrent.ConcurrentHashMap fileParams;
    protected java.util.concurrent.ConcurrentHashMap urlParams;
    protected java.util.concurrent.ConcurrentHashMap urlParamsWithArray;

    static void <clinit>()
    {
        <com.loopj.android.http.RequestParams: java.lang.String ENCODING> = "UTF-8";

        return;
    }

    public void <init>()
    {
        com.loopj.android.http.RequestParams r0;

        r0 := @this: com.loopj.android.http.RequestParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.loopj.android.http.RequestParams: void init()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        com.loopj.android.http.RequestParams r0;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.loopj.android.http.RequestParams: void init()>();

        virtualinvoke r0.<com.loopj.android.http.RequestParams: void put(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void <init>(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.loopj.android.http.RequestParams r0;
        java.util.Map r1;
        java.lang.Object $r4;
        java.lang.String $r6, $r7;
        boolean $z0;

        r0 := @this: com.loopj.android.http.RequestParams;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.loopj.android.http.RequestParams: void init()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r4;

        virtualinvoke r0.<com.loopj.android.http.RequestParams: void put(java.lang.String,java.lang.String)>($r6, $r7);

        goto label1;
    }

    public transient void <init>(java.lang.Object[])
    {
        java.lang.Object[] $r1;
        java.lang.IllegalArgumentException $r2;
        com.loopj.android.http.RequestParams r0;
        int i0, $i1, $i2;
        java.lang.Object $r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.loopj.android.http.RequestParams: void init()>();

        i0 = lengthof $r1;

        $i1 = i0 % 2;

        if $i1 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Supplied arguments must be even");

        throw $r2;

     label1:
        $i1 = 0;

     label2:
        if $i1 < i0 goto label3;

        return;

     label3:
        $r3 = $r1[$i1];

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i2 = $i1 + 1;

        $r3 = $r1[$i2];

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        virtualinvoke r0.<com.loopj.android.http.RequestParams: void put(java.lang.String,java.lang.String)>($r4, $r5);

        $i1 = $i1 + 2;

        goto label2;
    }

    private void init()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        com.loopj.android.http.RequestParams r0;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParams> = $r1;

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap fileParams> = $r1;

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParamsWithArray> = $r1;

        return;
    }

    public void add(java.lang.String, java.lang.String)
    {
        com.loopj.android.http.RequestParams r0;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.Object $r4;
        java.lang.String $r1, $r2;
        java.util.ArrayList r5;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label2;

        if $r2 == null goto label2;

        $r3 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParamsWithArray>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.util.ArrayList) $r4;

        if r5 != null goto label1;

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<com.loopj.android.http.RequestParams: void put(java.lang.String,java.util.ArrayList)>($r1, r5);

     label1:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label2:
        return;
    }

    public org.apache.http.HttpEntity getEntity()
    {
        java.lang.Throwable r3;
        org.apache.http.client.entity.UrlEncodedFormEntity $r17;
        java.util.ArrayList r10;
        com.loopj.android.http.RequestParams r0;
        int i0, i1;
        com.loopj.android.http.SimpleMultipartEntity r1, $r16;
        java.lang.String $r2, $r9, $r14;
        boolean $z0;
        java.util.Map$Entry r8;
        java.util.Iterator $r6, $r11;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.util.Set $r5;
        java.util.List $r15;
        com.loopj.android.http.RequestParams$FileWrapper r12;
        java.lang.Object $r7;
        java.io.UnsupportedEncodingException $r18;
        java.io.InputStream $r13;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r4 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap fileParams>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>();

        if $z0 != 0 goto label12;

        $r16 = new com.loopj.android.http.SimpleMultipartEntity;

        r1 = $r16;

        specialinvoke $r16.<com.loopj.android.http.SimpleMultipartEntity: void <init>()>();

        $r4 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParams>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label04;

        $r4 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParamsWithArray>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label05;

        i1 = 0;

        $r4 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap fileParams>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        i0 = interfaceinvoke $r5.<java.util.Set: int size()>();

        i0 = i0 + -1;

        $r4 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap fileParams>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label07;

        return r1;

     label04:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r2 = (java.lang.String) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r7;

        virtualinvoke r1.<com.loopj.android.http.SimpleMultipartEntity: void addPart(java.lang.String,java.lang.String)>($r2, $r9);

        goto label01;

     label05:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (java.util.ArrayList) $r7;

        $r11 = virtualinvoke r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r7 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.String) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r7;

        virtualinvoke r1.<com.loopj.android.http.SimpleMultipartEntity: void addPart(java.lang.String,java.lang.String)>($r9, $r2);

        goto label06;

     label07:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r12 = (com.loopj.android.http.RequestParams$FileWrapper) $r7;

        $r13 = r12.<com.loopj.android.http.RequestParams$FileWrapper: java.io.InputStream inputStream>;

        if $r13 == null goto label09;

        if i1 != i0 goto label10;

        $z0 = 1;

     label08:
        $r2 = r12.<com.loopj.android.http.RequestParams$FileWrapper: java.lang.String contentType>;

        if $r2 == null goto label11;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r7;

        $r14 = virtualinvoke r12.<com.loopj.android.http.RequestParams$FileWrapper: java.lang.String getFileName()>();

        $r13 = r12.<com.loopj.android.http.RequestParams$FileWrapper: java.io.InputStream inputStream>;

        $r2 = r12.<com.loopj.android.http.RequestParams$FileWrapper: java.lang.String contentType>;

        virtualinvoke r1.<com.loopj.android.http.SimpleMultipartEntity: void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String,boolean)>($r9, $r14, $r13, $r2, $z0);

     label09:
        i1 = i1 + 1;

        goto label03;

     label10:
        $z0 = 0;

        goto label08;

     label11:
        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r2 = (java.lang.String) $r7;

        $r9 = virtualinvoke r12.<com.loopj.android.http.RequestParams$FileWrapper: java.lang.String getFileName()>();

        $r13 = r12.<com.loopj.android.http.RequestParams$FileWrapper: java.io.InputStream inputStream>;

        virtualinvoke r1.<com.loopj.android.http.SimpleMultipartEntity: void addPart(java.lang.String,java.lang.String,java.io.InputStream,boolean)>($r2, $r9, $r13, $z0);

        goto label09;

     label12:
        $r17 = new org.apache.http.client.entity.UrlEncodedFormEntity;

     label13:
        $r15 = virtualinvoke r0.<com.loopj.android.http.RequestParams: java.util.List getParamsList()>();

     label14:
        $r2 = <com.loopj.android.http.RequestParams: java.lang.String ENCODING>;

     label15:
        specialinvoke $r17.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>($r15, $r2);

     label16:
        return $r17;

     label17:
        r3 := @caughtexception;

        $r18 = (java.io.UnsupportedEncodingException) r3;

        virtualinvoke $r18.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return null;

        catch java.io.UnsupportedEncodingException from label13 to label14 with label17;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label17;
    }

    protected java.lang.String getParamString()
    {
        java.util.List $r2;
        java.lang.String $r1;
        com.loopj.android.http.RequestParams r0;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r2 = virtualinvoke r0.<com.loopj.android.http.RequestParams: java.util.List getParamsList()>();

        $r1 = <com.loopj.android.http.RequestParams: java.lang.String ENCODING>;

        $r1 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,java.lang.String)>($r2, $r1);

        return $r1;
    }

    protected java.util.List getParamsList()
    {
        org.apache.http.message.BasicNameValuePair $r7;
        java.util.Map$Entry r6;
        java.util.Iterator $r4, $r11;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.util.Set $r3;
        java.util.ArrayList r10;
        com.loopj.android.http.RequestParams r0;
        java.lang.Object $r5;
        java.lang.String $r8, $r9;
        java.util.LinkedList r1;
        boolean $z0;

        r0 := @this: com.loopj.android.http.RequestParams;

        r1 = new java.util.LinkedList;

        specialinvoke r1.<java.util.LinkedList: void <init>()>();

        $r2 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParams>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParamsWithArray>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        return r1;

     label3:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = new org.apache.http.message.BasicNameValuePair;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r5;

        specialinvoke $r7.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r8, $r9);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (java.util.ArrayList) $r5;

        $r11 = virtualinvoke r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) $r5;

        $r7 = new org.apache.http.message.BasicNameValuePair;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r5;

        specialinvoke $r7.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r9, $r8);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label5;
    }

    public void put(java.lang.String, java.io.File) throws java.io.FileNotFoundException
    {
        com.loopj.android.http.RequestParams r0;
        java.lang.String $r1, $r4;
        java.io.FileInputStream $r3;
        java.io.File $r2;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        virtualinvoke r0.<com.loopj.android.http.RequestParams: void put(java.lang.String,java.io.InputStream,java.lang.String)>($r1, $r3, $r4);

        return;
    }

    public void put(java.lang.String, java.io.InputStream)
    {
        java.lang.String $r1;
        com.loopj.android.http.RequestParams r0;
        java.io.InputStream $r2;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.InputStream;

        virtualinvoke r0.<com.loopj.android.http.RequestParams: void put(java.lang.String,java.io.InputStream,java.lang.String)>($r1, $r2, null);

        return;
    }

    public void put(java.lang.String, java.io.InputStream, java.lang.String)
    {
        com.loopj.android.http.RequestParams r0;
        java.lang.String $r1, $r3;
        java.io.InputStream $r2;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.InputStream;

        $r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.loopj.android.http.RequestParams: void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String)>($r1, $r2, $r3, null);

        return;
    }

    public void put(java.lang.String, java.io.InputStream, java.lang.String, java.lang.String)
    {
        com.loopj.android.http.RequestParams r0;
        com.loopj.android.http.RequestParams$FileWrapper $r6;
        java.util.concurrent.ConcurrentHashMap $r5;
        java.lang.String $r1, $r3, $r4;
        java.io.InputStream $r2;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.InputStream;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        $r5 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap fileParams>;

        $r6 = new com.loopj.android.http.RequestParams$FileWrapper;

        specialinvoke $r6.<com.loopj.android.http.RequestParams$FileWrapper: void <init>(java.io.InputStream,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

     label1:
        return;
    }

    public void put(java.lang.String, java.lang.String)
    {
        com.loopj.android.http.RequestParams r0;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.String $r1, $r2;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        $r3 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParams>;

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label1:
        return;
    }

    public void put(java.lang.String, java.util.ArrayList)
    {
        com.loopj.android.http.RequestParams r0;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.String $r1;
        java.util.ArrayList r2;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        if $r1 == null goto label1;

        if r2 == null goto label1;

        $r3 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParamsWithArray>;

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r2);

     label1:
        return;
    }

    public void remove(java.lang.String)
    {
        java.util.concurrent.ConcurrentHashMap $r2;
        java.lang.String $r1;
        com.loopj.android.http.RequestParams r0;

        r0 := @this: com.loopj.android.http.RequestParams;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParams>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r2 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap fileParams>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r2 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParamsWithArray>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public java.lang.String toString()
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r4;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.util.Set $r3;
        java.util.ArrayList r8;
        com.loopj.android.http.RequestParams r0;
        int $i0, $i1;
        java.lang.StringBuilder r1;
        java.lang.Object $r6;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.loopj.android.http.RequestParams;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParams>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label04;

        $r2 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap fileParams>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label06;

        $r2 = r0.<com.loopj.android.http.RequestParams: java.util.concurrent.ConcurrentHashMap urlParamsWithArray>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label08;

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label04:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label05;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label05:
        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.lang.String) $r6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label01;

     label06:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label07;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label07:
        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FILE");

        goto label02;

     label08:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label09;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label09:
        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.util.ArrayList) $r6;

        $i0 = 0;

     label10:
        $i1 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label03;

        if $i0 == 0 goto label11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label11:
        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (java.lang.String) $r6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i0 = $i0 + 1;

        goto label10;
    }
}
