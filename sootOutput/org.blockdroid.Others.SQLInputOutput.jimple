public class org.blockdroid.Others.SQLInputOutput extends android.app.Activity
{
    private static final java.lang.String TAG;
    private static int THREADSLEEP;
    private final int REDOLIMIT;
    org.blockdroid.Others.SQLHandler savedItemsHandler;

    static void <clinit>()
    {
        <org.blockdroid.Others.SQLInputOutput: java.lang.String TAG> = "SQLInputOutput.java";

        <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP> = 300;

        return;
    }

    public void <init>(org.blockdroid.Others.SQLHandler)
    {
        org.blockdroid.Others.SQLInputOutput r0;
        org.blockdroid.Others.SQLHandler $r1;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $r1 := @parameter0: org.blockdroid.Others.SQLHandler;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        r0.<org.blockdroid.Others.SQLInputOutput: int REDOLIMIT> = 10;

        r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler> = $r1;

        return;
    }

    public static int getItemHash(java.lang.String)
    {
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String[] $r3, $r4;
        java.lang.String $r0, $r2;
        java.lang.NullPointerException $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("itemA: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SQLInputOutput.java", $r2);

     label01:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("_");

        $i0 = lengthof $r3;

     label02:
        $i0 = $i0 - 1;

     label03:
        $r0 = $r3[$i0];

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\D");

        $r0 = $r4[0];

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label04:
        if $i0 >= 3 goto label08;

     label05:
        $i0 = lengthof $r3;

     label06:
        $i0 = $i0 - 2;

     label07:
        $r0 = $r3[$i0];

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\D");

        $r0 = $r3[0];

     label08:
        $r1 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("before Hash: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SQLInputOutput.java", $r2);

        $i0 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

     label10:
        return $i0;

     label11:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.NullPointerException from label01 to label02 with label11;
        catch java.lang.NullPointerException from label03 to label04 with label11;
        catch java.lang.NullPointerException from label05 to label06 with label11;
        catch java.lang.NullPointerException from label07 to label08 with label11;
        catch java.lang.NullPointerException from label09 to label10 with label11;
    }

    public static int getMonitorHash(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        java.lang.NullPointerException r1;

        $r0 := @parameter0: java.lang.String;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

     label2:
        return $i0;

     label3:
        r1 := @caughtexception;

        return 0;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    private void redoDeleteAllItems(int)
    {
        java.lang.Throwable $r1;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r2;
        int i0, $i1;
        long $l2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        i0 := @parameter0: int;

        $i1 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l2 = (long) $i1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label2:
        if i0 >= 10 goto label4;

        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: void deleteAllItems(int)>(i0);

        return;

     label3:
        $r1 := @caughtexception;

        $r2 = (java.lang.InterruptedException) $r1;

        virtualinvoke $r2.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private void redoDeleteAllMonitor(int)
    {
        java.lang.Throwable $r1;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r2;
        int i0, $i1;
        long $l2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        i0 := @parameter0: int;

        $i1 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l2 = (long) $i1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label2:
        if i0 >= 10 goto label4;

        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: void deleteAllMonitor(int)>(i0);

        return;

     label3:
        $r1 := @caughtexception;

        $r2 = (java.lang.InterruptedException) $r1;

        virtualinvoke $r2.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private boolean redoDeleteItem(int, int)
    {
        java.lang.Throwable $r1;
        long $l3;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r2;
        int $i0, i1, $i2;
        boolean $z0;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l3 = (long) $i2;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l3);

     label2:
        if i1 >= 10 goto label4;

        $z0 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean deleteItem(int,int)>($i0, i1);

        return $z0;

     label3:
        $r1 := @caughtexception;

        $r2 = (java.lang.InterruptedException) $r1;

        virtualinvoke $r2.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private boolean redoDeleteMonitored(int, int)
    {
        java.lang.Throwable $r1;
        long $l3;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r2;
        int $i0, i1, $i2;
        boolean $z0;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l3 = (long) $i2;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l3);

     label2:
        if i1 >= 10 goto label4;

        $z0 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean deleteMonitored(int,int)>($i0, i1);

        return $z0;

     label3:
        $r1 := @caughtexception;

        $r2 = (java.lang.InterruptedException) $r1;

        virtualinvoke $r2.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private int redoEditMonitored(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)
    {
        java.lang.Throwable $r5;
        long $l2;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r6;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $i0 := @parameter4: int;

        $i1 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l2 = (long) $i1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label2:
        if $i0 >= 10 goto label4;

        $i0 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: int editMonitored(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>($r1, $r2, $r3, $r4, $i0);

        return $i0;

     label3:
        $r5 := @caughtexception;

        $r6 = (java.lang.InterruptedException) $r5;

        virtualinvoke $r6.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private java.lang.String[] redoGetItem(int, int)
    {
        java.lang.Throwable $r2;
        java.lang.String[] $r1;
        long $l3;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r3;
        int $i0, i1, $i2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l3 = (long) $i2;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l3);

     label2:
        if i1 >= 10 goto label4;

        $r1 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] getItem(int,int)>($i0, i1);

        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = (java.lang.InterruptedException) $r2;

        virtualinvoke $r3.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return null;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private java.lang.String[] redoGetMonitor(int, int)
    {
        java.lang.Throwable $r2;
        java.lang.String[] $r1;
        long $l3;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r3;
        int $i0, i1, $i2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l3 = (long) $i2;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l3);

     label2:
        if i1 >= 10 goto label4;

        $r1 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] getMonitor(int,int)>($i0, i1);

        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = (java.lang.InterruptedException) $r2;

        virtualinvoke $r3.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return null;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private int redoGetMonitoredItemSize(int)
    {
        java.lang.Throwable $r1;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r2;
        int $i0, $i1;
        long $l2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $i1 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l2 = (long) $i1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label2:
        if $i0 >= 10 goto label4;

        $i0 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: int getMonitoredItemSize(int)>($i0);

        return $i0;

     label3:
        $r1 := @caughtexception;

        $r2 = (java.lang.InterruptedException) $r1;

        virtualinvoke $r2.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private java.util.ArrayList redoGetMonitoredItems(int)
    {
        java.lang.Throwable $r2;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r3;
        int i0, $i1;
        long $l2;
        java.util.ArrayList $r1;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        i0 := @parameter0: int;

        $i1 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l2 = (long) $i1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label2:
        if i0 >= 10 goto label4;

        $r1 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList getMonitoredItems(int)>(i0);

        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = (java.lang.InterruptedException) $r2;

        virtualinvoke $r3.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return null;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private int redoGetSavedItemSize(int)
    {
        java.lang.Throwable $r1;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r2;
        int $i0, $i1;
        long $l2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $i1 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l2 = (long) $i1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label2:
        if $i0 >= 10 goto label4;

        $i0 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: int getSavedItemSize(int)>($i0);

        return $i0;

     label3:
        $r1 := @caughtexception;

        $r2 = (java.lang.InterruptedException) $r1;

        virtualinvoke $r2.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private java.util.ArrayList redoGetSavedItems(int)
    {
        java.lang.Throwable $r2;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r3;
        int i0, $i1;
        long $l2;
        java.util.ArrayList $r1;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        i0 := @parameter0: int;

        $i1 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l2 = (long) $i1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label2:
        if i0 >= 10 goto label4;

        $r1 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList getSavedItems(int)>(i0);

        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = (java.lang.InterruptedException) $r2;

        virtualinvoke $r3.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return null;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private boolean redoSaveItem(java.lang.String[], int)
    {
        java.lang.Throwable $r2;
        java.lang.String[] $r1;
        long $l2;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r3;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $i1 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l2 = (long) $i1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label2:
        if i0 >= 10 goto label4;

        $z0 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean saveItem(java.lang.String[],int)>($r1, i0);

        return $z0;

     label3:
        $r2 := @caughtexception;

        $r3 = (java.lang.InterruptedException) $r2;

        virtualinvoke $r3.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private boolean redoSaveMonitoredItem(java.lang.String[], int)
    {
        java.lang.Throwable $r2;
        java.lang.String[] $r1;
        long $l2;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r3;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $i1 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l2 = (long) $i1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label2:
        if i0 >= 10 goto label4;

        $z0 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean saveMonitoredItem(java.lang.String[],int)>($r1, i0);

        return $z0;

     label3:
        $r2 := @caughtexception;

        $r3 = (java.lang.InterruptedException) $r2;

        virtualinvoke $r3.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private boolean redoSetMonitorMonitor(int, java.lang.String, int)
    {
        java.lang.Throwable $r2;
        long $l3;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r3;
        int $i0, i1, $i2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $i2 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l3 = (long) $i2;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l3);

     label2:
        if i1 >= 10 goto label4;

        $z0 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean setMonitorMonitor(int,java.lang.String,int)>($i0, $r1, i1);

        return $z0;

     label3:
        $r2 := @caughtexception;

        $r3 = (java.lang.InterruptedException) $r2;

        virtualinvoke $r3.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private boolean redoSetMonitorNewItem(int, int, int)
    {
        java.lang.Throwable $r1;
        long $l4;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r2;
        int $i0, $i1, i2, $i3;
        boolean $z0;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l4 = (long) $i3;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l4);

     label2:
        if i2 >= 10 goto label4;

        $z0 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean setMonitorNewItem(int,int,int)>($i0, $i1, i2);

        return $z0;

     label3:
        $r1 := @caughtexception;

        $r2 = (java.lang.InterruptedException) $r1;

        virtualinvoke $r2.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private boolean redoSetMonitorOldItem(int, int, int)
    {
        java.lang.Throwable $r1;
        long $l4;
        org.blockdroid.Others.SQLInputOutput r0;
        java.lang.InterruptedException $r2;
        int $i0, $i1, i2, $i3;
        boolean $z0;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = <org.blockdroid.Others.SQLInputOutput: int THREADSLEEP>;

        $l4 = (long) $i3;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l4);

     label2:
        if i2 >= 10 goto label4;

        $z0 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean setMonitorOldItem(int,int,int)>($i0, $i1, i2);

        return $z0;

     label3:
        $r1 := @caughtexception;

        $r2 = (java.lang.InterruptedException) $r1;

        virtualinvoke $r2.<java.lang.InterruptedException: void printStackTrace()>();

        goto label2;

     label4:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void deleteAllItems(int)
    {
        java.lang.Throwable $r3, $r4, $r5, $r6;
        java.lang.IllegalStateException $r9;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.IllegalMonitorStateException $r7;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteException $r11;
        android.database.sqlite.SQLiteMisuseException $r10;
        int $i0;
        android.database.sqlite.SQLiteConstraintException $r8;
        org.blockdroid.Others.SQLHandler $r2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r2 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label1:
        $r1 = virtualinvoke $r2.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("SAVED_ITEMS", null, null);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r8 = (android.database.sqlite.SQLiteConstraintException) $r3;

        virtualinvoke $r8.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: void redoDeleteAllItems(int)>($i0);

        return;

     label4:
        $r4 := @caughtexception;

        $r9 = (java.lang.IllegalStateException) $r4;

        virtualinvoke $r9.<java.lang.IllegalStateException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: void redoDeleteAllItems(int)>($i0);

        return;

     label5:
        $r5 := @caughtexception;

        $r10 = (android.database.sqlite.SQLiteMisuseException) $r5;

        virtualinvoke $r10.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: void redoDeleteAllItems(int)>($i0);

        return;

     label6:
        $r6 := @caughtexception;

        $r11 = (android.database.sqlite.SQLiteException) $r6;

        virtualinvoke $r11.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: void redoDeleteAllItems(int)>($i0);

        return;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: void redoDeleteAllItems(int)>($i0);

        return;

        catch android.database.sqlite.SQLiteConstraintException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch android.database.sqlite.SQLiteMisuseException from label1 to label2 with label5;
        catch android.database.sqlite.SQLiteException from label1 to label2 with label6;
        catch java.lang.IllegalMonitorStateException from label1 to label2 with label7;
    }

    public void deleteAllMonitor(int)
    {
        java.lang.Throwable $r3, $r4, $r5, $r6;
        java.lang.IllegalStateException $r9;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.IllegalMonitorStateException $r7;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteException $r11;
        android.database.sqlite.SQLiteMisuseException $r10;
        int $i0;
        android.database.sqlite.SQLiteConstraintException $r8;
        org.blockdroid.Others.SQLHandler $r2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r2 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label1:
        $r1 = virtualinvoke $r2.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("MONITORED", null, null);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r8 = (android.database.sqlite.SQLiteConstraintException) $r3;

        virtualinvoke $r8.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: void redoDeleteAllMonitor(int)>($i0);

        return;

     label4:
        $r4 := @caughtexception;

        $r9 = (java.lang.IllegalStateException) $r4;

        virtualinvoke $r9.<java.lang.IllegalStateException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: void redoDeleteAllMonitor(int)>($i0);

        return;

     label5:
        $r5 := @caughtexception;

        $r10 = (android.database.sqlite.SQLiteMisuseException) $r5;

        virtualinvoke $r10.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: void redoDeleteAllMonitor(int)>($i0);

        return;

     label6:
        $r6 := @caughtexception;

        $r11 = (android.database.sqlite.SQLiteException) $r6;

        virtualinvoke $r11.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: void redoDeleteAllMonitor(int)>($i0);

        return;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: void redoDeleteAllMonitor(int)>($i0);

        return;

        catch android.database.sqlite.SQLiteConstraintException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch android.database.sqlite.SQLiteMisuseException from label1 to label2 with label5;
        catch android.database.sqlite.SQLiteException from label1 to label2 with label6;
        catch java.lang.IllegalMonitorStateException from label1 to label2 with label7;
    }

    public boolean deleteItem(int, int)
    {
        java.lang.Throwable $r5, $r6, $r7, $r8;
        java.lang.IllegalStateException $r12;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.IllegalMonitorStateException $r9;
        android.database.sqlite.SQLiteException $r14;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r13;
        android.database.sqlite.SQLiteConstraintException $r11;
        java.lang.StringBuilder $r3, $r10;
        org.blockdroid.Others.SQLHandler $r1;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label01:
        $r2 = virtualinvoke $r1.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label02:
        $r10 = new java.lang.StringBuilder;

        $r3 = $r10;

     label03:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("ID=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("SAVED_ITEMS", $r4, null);

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label04:
        if $i2 != 1 goto label05;

        return 1;

     label05:
        return 0;

     label06:
        $r5 := @caughtexception;

        $r11 = (android.database.sqlite.SQLiteConstraintException) $r5;

        virtualinvoke $r11.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoDeleteItem(int,int)>($i0, $i1);

        return $z0;

     label07:
        $r6 := @caughtexception;

        $r12 = (java.lang.IllegalStateException) $r6;

        virtualinvoke $r12.<java.lang.IllegalStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoDeleteItem(int,int)>($i0, $i1);

        return $z0;

     label08:
        $r7 := @caughtexception;

        $r13 = (android.database.sqlite.SQLiteMisuseException) $r7;

        virtualinvoke $r13.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoDeleteItem(int,int)>($i0, $i1);

        return $z0;

     label09:
        $r8 := @caughtexception;

        $r14 = (android.database.sqlite.SQLiteException) $r8;

        virtualinvoke $r14.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoDeleteItem(int,int)>($i0, $i1);

        return $z0;

     label10:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoDeleteItem(int,int)>($i0, $i1);

        return $z0;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label06;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label06;
        catch java.lang.IllegalStateException from label01 to label02 with label07;
        catch java.lang.IllegalStateException from label03 to label04 with label07;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label08;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label08;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label09;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label09;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label10;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label10;
    }

    public boolean deleteMonitored(int, int)
    {
        java.lang.Throwable $r5, $r6, $r7, $r8;
        java.lang.IllegalStateException $r12;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.IllegalMonitorStateException $r9;
        android.database.sqlite.SQLiteException $r14;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r13;
        android.database.sqlite.SQLiteConstraintException $r11;
        java.lang.StringBuilder $r3, $r10;
        org.blockdroid.Others.SQLHandler $r1;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label01:
        $r2 = virtualinvoke $r1.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label02:
        $r10 = new java.lang.StringBuilder;

        $r3 = $r10;

     label03:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("ID=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("MONITORED", $r4, null);

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label04:
        if $i2 != 1 goto label05;

        return 1;

     label05:
        return 0;

     label06:
        $r5 := @caughtexception;

        $r11 = (android.database.sqlite.SQLiteConstraintException) $r5;

        virtualinvoke $r11.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoDeleteMonitored(int,int)>($i0, $i1);

        return $z0;

     label07:
        $r6 := @caughtexception;

        $r12 = (java.lang.IllegalStateException) $r6;

        virtualinvoke $r12.<java.lang.IllegalStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoDeleteMonitored(int,int)>($i0, $i1);

        return $z0;

     label08:
        $r7 := @caughtexception;

        $r13 = (android.database.sqlite.SQLiteMisuseException) $r7;

        virtualinvoke $r13.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoDeleteMonitored(int,int)>($i0, $i1);

        return $z0;

     label09:
        $r8 := @caughtexception;

        $r14 = (android.database.sqlite.SQLiteException) $r8;

        virtualinvoke $r14.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoDeleteMonitored(int,int)>($i0, $i1);

        return $z0;

     label10:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoDeleteMonitored(int,int)>($i0, $i1);

        return $z0;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label06;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label06;
        catch java.lang.IllegalStateException from label01 to label02 with label07;
        catch java.lang.IllegalStateException from label03 to label04 with label07;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label08;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label08;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label09;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label09;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label10;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label10;
    }

    public int editMonitored(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)
    {
        java.lang.Throwable $r11, $r12, $r13, $r14;
        java.lang.IllegalStateException $r18;
        java.lang.String[] r6;
        java.lang.Integer $r9;
        android.database.sqlite.SQLiteDatabase $r8;
        java.lang.IllegalMonitorStateException $r15;
        android.database.sqlite.SQLiteException $r20;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3, $r4, $r10;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r19;
        android.database.sqlite.SQLiteConstraintException $r17;
        android.content.ContentValues r5, $r16;
        org.blockdroid.Others.SQLHandler $r7;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $i0 := @parameter4: int;

        $r7 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label01:
        $r8 = virtualinvoke $r7.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label02:
        $r16 = new android.content.ContentValues;

        r5 = $r16;

     label03:
        specialinvoke $r16.<android.content.ContentValues: void <init>()>();

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESS", $r2);

        $i1 = staticinvoke <org.blockdroid.Others.SQLInputOutput: int getMonitorHash(java.lang.String)>($r2);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("ID", $r9);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ISMONITORED", $r4);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESSINFO", $r3);

     label04:
        r6 = newarray (java.lang.String)[1];

     label05:
        $i1 = staticinvoke <org.blockdroid.Others.SQLInputOutput: int getMonitorHash(java.lang.String)>($r1);

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

     label06:
        r6[0] = $r10;

     label07:
        $i1 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("MONITORED", r5, "ID=?", r6);

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: void close()>();

     label08:
        return $i1;

     label09:
        $r11 := @caughtexception;

        $r17 = (android.database.sqlite.SQLiteConstraintException) $r11;

        virtualinvoke $r17.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoEditMonitored(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>($r1, $r2, $r3, $r4, $i0);

     label10:
        return 0;

     label11:
        $r12 := @caughtexception;

        $r18 = (java.lang.IllegalStateException) $r12;

        virtualinvoke $r18.<java.lang.IllegalStateException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoEditMonitored(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>($r1, $r2, $r3, $r4, $i0);

        goto label10;

     label12:
        $r13 := @caughtexception;

        $r19 = (android.database.sqlite.SQLiteMisuseException) $r13;

        virtualinvoke $r19.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoEditMonitored(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>($r1, $r2, $r3, $r4, $i0);

        goto label10;

     label13:
        $r14 := @caughtexception;

        $r20 = (android.database.sqlite.SQLiteException) $r14;

        virtualinvoke $r20.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoEditMonitored(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>($r1, $r2, $r3, $r4, $i0);

        goto label10;

     label14:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoEditMonitored(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>($r1, $r2, $r3, $r4, $i0);

        goto label10;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label09;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label09;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label06 with label09;
        catch android.database.sqlite.SQLiteConstraintException from label07 to label08 with label09;
        catch java.lang.IllegalStateException from label01 to label02 with label11;
        catch java.lang.IllegalStateException from label03 to label04 with label11;
        catch java.lang.IllegalStateException from label05 to label06 with label11;
        catch java.lang.IllegalStateException from label07 to label08 with label11;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label06 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label07 to label08 with label12;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label13;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label13;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label13;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label13;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label14;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label14;
        catch java.lang.IllegalMonitorStateException from label05 to label06 with label14;
        catch java.lang.IllegalMonitorStateException from label07 to label08 with label14;
    }

    public java.lang.String[] getItem(int, int)
    {
        java.lang.IllegalStateException $r26;
        android.database.sqlite.SQLiteDatabase $r3;
        android.database.sqlite.SQLiteException $r28;
        boolean $z0;
        android.database.sqlite.SQLiteConstraintException $r25;
        java.lang.StringBuilder $r4, $r24;
        java.lang.Throwable $r19, $r20, $r21, $r22;
        java.lang.String[] $r1;
        long $l2;
        java.lang.IllegalMonitorStateException $r23;
        int $i0, $i1;
        java.lang.String $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        android.database.Cursor $r6;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r27;
        org.blockdroid.Others.SQLHandler $r2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label01:
        $r3 = virtualinvoke $r2.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label02:
        $r1 = <org.blockdroid.Others.SQLHandler: java.lang.String[] FROM>;

        $r24 = new java.lang.StringBuilder;

        $r4 = $r24;

     label03:
        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("ID = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("SAVED_ITEMS", $r1, $r5, null, null, null, "TIME DESC");

        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: void startManagingCursor(android.database.Cursor)>($r6);

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label04:
        if $z0 == 0 goto label09;

     label05:
        $r5 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r7 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r8 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(3);

        $r9 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(4);

        $r10 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(5);

        $r11 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(6);

        $r12 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(7);

        $r13 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(8);

        $r14 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(9);

        $r15 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(10);

        $r16 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(11);

        $r17 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(12);

        $l2 = interfaceinvoke $r6.<android.database.Cursor: long getLong(int)>(13);

        $r18 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

     label06:
        $r1 = newarray (java.lang.String)[13];

        $r1[0] = $r5;

        $r1[1] = $r7;

        $r1[2] = $r8;

        $r1[3] = $r9;

        $r1[4] = $r10;

        $r1[5] = $r11;

        $r1[6] = $r12;

        $r1[7] = $r13;

        $r1[8] = $r14;

        $r1[9] = $r15;

        $r1[10] = $r16;

        $r1[11] = $r17;

        $r1[12] = $r18;

     label07:
        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label08:
        return $r1;

     label09:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label10:
        return null;

     label11:
        $r19 := @caughtexception;

        $r25 = (android.database.sqlite.SQLiteConstraintException) $r19;

        virtualinvoke $r25.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $r1 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] redoGetItem(int,int)>($i0, $i1);

        return $r1;

     label12:
        $r20 := @caughtexception;

        $r26 = (java.lang.IllegalStateException) $r20;

        virtualinvoke $r26.<java.lang.IllegalStateException: void printStackTrace()>();

        $r1 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] redoGetItem(int,int)>($i0, $i1);

        return $r1;

     label13:
        $r21 := @caughtexception;

        $r27 = (android.database.sqlite.SQLiteMisuseException) $r21;

        virtualinvoke $r27.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $r1 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] redoGetItem(int,int)>($i0, $i1);

        return $r1;

     label14:
        $r22 := @caughtexception;

        $r28 = (android.database.sqlite.SQLiteException) $r22;

        virtualinvoke $r28.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $r1 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] redoGetItem(int,int)>($i0, $i1);

        return $r1;

     label15:
        $r23 := @caughtexception;

        virtualinvoke $r23.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $r1 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] redoGetItem(int,int)>($i0, $i1);

        return $r1;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label11;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label11;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label06 with label11;
        catch android.database.sqlite.SQLiteConstraintException from label07 to label08 with label11;
        catch android.database.sqlite.SQLiteConstraintException from label09 to label10 with label11;
        catch java.lang.IllegalStateException from label01 to label02 with label12;
        catch java.lang.IllegalStateException from label03 to label04 with label12;
        catch java.lang.IllegalStateException from label05 to label06 with label12;
        catch java.lang.IllegalStateException from label07 to label08 with label12;
        catch java.lang.IllegalStateException from label09 to label10 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label13;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label13;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label06 with label13;
        catch android.database.sqlite.SQLiteMisuseException from label07 to label08 with label13;
        catch android.database.sqlite.SQLiteMisuseException from label09 to label10 with label13;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label14;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label14;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label14;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label14;
        catch android.database.sqlite.SQLiteException from label09 to label10 with label14;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label15;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label15;
        catch java.lang.IllegalMonitorStateException from label05 to label06 with label15;
        catch java.lang.IllegalMonitorStateException from label07 to label08 with label15;
        catch java.lang.IllegalMonitorStateException from label09 to label10 with label15;
    }

    public java.lang.String[] getMonitor(int, int)
    {
        java.lang.Throwable $r12, $r13, $r14, $r15;
        java.lang.IllegalStateException $r19;
        java.lang.String[] $r1;
        long $l2;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.IllegalMonitorStateException $r16;
        android.database.sqlite.SQLiteException $r21;
        int $i0, $i1;
        java.lang.String $r5, $r7, $r8, $r9, $r10, $r11;
        android.database.Cursor $r6;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r20;
        android.database.sqlite.SQLiteConstraintException $r18;
        java.lang.StringBuilder $r4, $r17;
        org.blockdroid.Others.SQLHandler $r2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label01:
        $r3 = virtualinvoke $r2.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label02:
        $r1 = <org.blockdroid.Others.SQLHandler: java.lang.String[] FROM_MONITOR>;

        $r17 = new java.lang.StringBuilder;

        $r4 = $r17;

     label03:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("ID = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("MONITORED", $r1, $r5, null, null, null, "TIME DESC");

        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: void startManagingCursor(android.database.Cursor)>($r6);

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label04:
        if $z0 == 0 goto label09;

     label05:
        $r5 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r7 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r8 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(3);

        $r9 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(4);

        $r10 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(5);

        $l2 = interfaceinvoke $r6.<android.database.Cursor: long getLong(int)>(6);

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

     label06:
        $r1 = newarray (java.lang.String)[6];

        $r1[0] = $r5;

        $r1[1] = $r7;

        $r1[2] = $r8;

        $r1[3] = $r9;

        $r1[4] = $r10;

        $r1[5] = $r11;

     label07:
        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label08:
        return $r1;

     label09:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label10:
        return null;

     label11:
        $r12 := @caughtexception;

        $r18 = (android.database.sqlite.SQLiteConstraintException) $r12;

        virtualinvoke $r18.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $r1 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] redoGetMonitor(int,int)>($i0, $i1);

        return $r1;

     label12:
        $r13 := @caughtexception;

        $r19 = (java.lang.IllegalStateException) $r13;

        virtualinvoke $r19.<java.lang.IllegalStateException: void printStackTrace()>();

        $r1 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] redoGetMonitor(int,int)>($i0, $i1);

        return $r1;

     label13:
        $r14 := @caughtexception;

        $r20 = (android.database.sqlite.SQLiteMisuseException) $r14;

        virtualinvoke $r20.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $r1 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] redoGetMonitor(int,int)>($i0, $i1);

        return $r1;

     label14:
        $r15 := @caughtexception;

        $r21 = (android.database.sqlite.SQLiteException) $r15;

        virtualinvoke $r21.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $r1 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] redoGetMonitor(int,int)>($i0, $i1);

        return $r1;

     label15:
        $r16 := @caughtexception;

        virtualinvoke $r16.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $r1 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] redoGetMonitor(int,int)>($i0, $i1);

        return $r1;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label11;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label11;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label06 with label11;
        catch android.database.sqlite.SQLiteConstraintException from label07 to label08 with label11;
        catch android.database.sqlite.SQLiteConstraintException from label09 to label10 with label11;
        catch java.lang.IllegalStateException from label01 to label02 with label12;
        catch java.lang.IllegalStateException from label03 to label04 with label12;
        catch java.lang.IllegalStateException from label05 to label06 with label12;
        catch java.lang.IllegalStateException from label07 to label08 with label12;
        catch java.lang.IllegalStateException from label09 to label10 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label13;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label13;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label06 with label13;
        catch android.database.sqlite.SQLiteMisuseException from label07 to label08 with label13;
        catch android.database.sqlite.SQLiteMisuseException from label09 to label10 with label13;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label14;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label14;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label14;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label14;
        catch android.database.sqlite.SQLiteException from label09 to label10 with label14;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label15;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label15;
        catch java.lang.IllegalMonitorStateException from label05 to label06 with label15;
        catch java.lang.IllegalMonitorStateException from label07 to label08 with label15;
        catch java.lang.IllegalMonitorStateException from label09 to label10 with label15;
    }

    public java.lang.String getMonitorOldID(int)
    {
        org.blockdroid.Others.SQLInputOutput r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] getMonitor(int,int)>($i0, 0);

        if $r1 == null goto label1;

        $r2 = $r1[3];

        return $r2;

     label1:
        return null;
    }

    public int getMonitoredItemSize(int)
    {
        java.lang.Throwable $r5, $r6, $r7, $r8;
        java.lang.IllegalStateException $r11;
        java.lang.String[] $r1;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.IllegalMonitorStateException $r9;
        android.database.sqlite.SQLiteException $r13;
        int $i0, i1;
        android.database.Cursor $r4;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r12;
        android.database.sqlite.SQLiteConstraintException $r10;
        org.blockdroid.Others.SQLHandler $r2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r2 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label01:
        $r3 = virtualinvoke $r2.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label02:
        $r1 = <org.blockdroid.Others.SQLHandler: java.lang.String[] FROM_MONITOR>;

     label03:
        $r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("MONITORED", $r1, null, null, null, null, "TIME DESC");

        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: void startManagingCursor(android.database.Cursor)>($r4);

     label04:
        i1 = 0;

     label05:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

     label06:
        if $z0 != 0 goto label09;

     label07:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label08:
        return i1;

     label09:
        i1 = i1 + 1;

        goto label05;

     label10:
        $r5 := @caughtexception;

        $r10 = (android.database.sqlite.SQLiteConstraintException) $r5;

        virtualinvoke $r10.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $i0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoGetMonitoredItemSize(int)>($i0);

        return $i0;

     label11:
        $r6 := @caughtexception;

        $r11 = (java.lang.IllegalStateException) $r6;

        virtualinvoke $r11.<java.lang.IllegalStateException: void printStackTrace()>();

        $i0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoGetMonitoredItemSize(int)>($i0);

        return $i0;

     label12:
        $r7 := @caughtexception;

        $r12 = (android.database.sqlite.SQLiteMisuseException) $r7;

        virtualinvoke $r12.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $i0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoGetMonitoredItemSize(int)>($i0);

        return $i0;

     label13:
        $r8 := @caughtexception;

        $r13 = (android.database.sqlite.SQLiteException) $r8;

        virtualinvoke $r13.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $i0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoGetMonitoredItemSize(int)>($i0);

        return $i0;

     label14:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $i0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoGetMonitoredItemSize(int)>($i0);

        return $i0;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label10;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label10;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label06 with label10;
        catch android.database.sqlite.SQLiteConstraintException from label07 to label08 with label10;
        catch java.lang.IllegalStateException from label01 to label02 with label11;
        catch java.lang.IllegalStateException from label03 to label04 with label11;
        catch java.lang.IllegalStateException from label05 to label06 with label11;
        catch java.lang.IllegalStateException from label07 to label08 with label11;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label06 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label07 to label08 with label12;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label13;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label13;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label13;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label13;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label14;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label14;
        catch java.lang.IllegalMonitorStateException from label05 to label06 with label14;
        catch java.lang.IllegalMonitorStateException from label07 to label08 with label14;
    }

    public java.util.ArrayList getMonitoredItems(int)
    {
        java.lang.Throwable $r11, $r12, $r13, $r14;
        java.lang.IllegalStateException $r18;
        java.lang.String[] $r1;
        java.util.ArrayList r2, $r16;
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.IllegalMonitorStateException $r15;
        android.database.sqlite.SQLiteException $r20;
        int $i0;
        java.lang.String $r6, $r7, $r8, $r9, $r10;
        android.database.Cursor $r5;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r19;
        android.database.sqlite.SQLiteConstraintException $r17;
        org.blockdroid.Others.SQLHandler $r3;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r3 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label01:
        $r4 = virtualinvoke $r3.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label02:
        $r1 = <org.blockdroid.Others.SQLHandler: java.lang.String[] FROM_MONITOR>;

     label03:
        $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("MONITORED", $r1, null, null, null, null, "TIME DESC");

        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: void startManagingCursor(android.database.Cursor)>($r5);

     label04:
        $r16 = new java.util.ArrayList;

        r2 = $r16;

     label05:
        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

     label06:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

     label07:
        if $z0 != 0 goto label10;

     label08:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>();

     label09:
        return r2;

     label10:
        $r6 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r7 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r8 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(3);

        $r9 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(4);

        $r10 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(5);

     label11:
        $r1 = newarray (java.lang.String)[5];

        $r1[0] = $r6;

        $r1[1] = $r7;

        $r1[2] = $r8;

        $r1[3] = $r9;

        $r1[4] = $r10;

     label12:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label13:
        goto label06;

     label14:
        $r11 := @caughtexception;

        $r17 = (android.database.sqlite.SQLiteConstraintException) $r11;

        virtualinvoke $r17.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        r2 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList redoGetMonitoredItems(int)>($i0);

        return r2;

     label15:
        $r12 := @caughtexception;

        $r18 = (java.lang.IllegalStateException) $r12;

        virtualinvoke $r18.<java.lang.IllegalStateException: void printStackTrace()>();

        r2 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList redoGetMonitoredItems(int)>($i0);

        return r2;

     label16:
        $r13 := @caughtexception;

        $r19 = (android.database.sqlite.SQLiteMisuseException) $r13;

        virtualinvoke $r19.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        r2 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList redoGetMonitoredItems(int)>($i0);

        return r2;

     label17:
        $r14 := @caughtexception;

        $r20 = (android.database.sqlite.SQLiteException) $r14;

        virtualinvoke $r20.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        r2 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList redoGetMonitoredItems(int)>($i0);

        return r2;

     label18:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        r2 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList redoGetMonitoredItems(int)>($i0);

        return r2;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label14;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label14;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label07 with label14;
        catch android.database.sqlite.SQLiteConstraintException from label08 to label09 with label14;
        catch android.database.sqlite.SQLiteConstraintException from label10 to label11 with label14;
        catch android.database.sqlite.SQLiteConstraintException from label12 to label13 with label14;
        catch java.lang.IllegalStateException from label01 to label02 with label15;
        catch java.lang.IllegalStateException from label03 to label04 with label15;
        catch java.lang.IllegalStateException from label05 to label07 with label15;
        catch java.lang.IllegalStateException from label08 to label09 with label15;
        catch java.lang.IllegalStateException from label10 to label11 with label15;
        catch java.lang.IllegalStateException from label12 to label13 with label15;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label16;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label16;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label07 with label16;
        catch android.database.sqlite.SQLiteMisuseException from label08 to label09 with label16;
        catch android.database.sqlite.SQLiteMisuseException from label10 to label11 with label16;
        catch android.database.sqlite.SQLiteMisuseException from label12 to label13 with label16;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label17;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label17;
        catch android.database.sqlite.SQLiteException from label05 to label07 with label17;
        catch android.database.sqlite.SQLiteException from label08 to label09 with label17;
        catch android.database.sqlite.SQLiteException from label10 to label11 with label17;
        catch android.database.sqlite.SQLiteException from label12 to label13 with label17;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label18;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label18;
        catch java.lang.IllegalMonitorStateException from label05 to label07 with label18;
        catch java.lang.IllegalMonitorStateException from label08 to label09 with label18;
        catch java.lang.IllegalMonitorStateException from label10 to label11 with label18;
        catch java.lang.IllegalMonitorStateException from label12 to label13 with label18;
    }

    public int getSavedItemSize(int)
    {
        java.lang.Throwable $r5, $r6, $r7, $r8;
        java.lang.IllegalStateException $r11;
        java.lang.String[] $r1;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.IllegalMonitorStateException $r9;
        android.database.sqlite.SQLiteException $r13;
        int $i0, i1;
        android.database.Cursor $r4;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r12;
        android.database.sqlite.SQLiteConstraintException $r10;
        org.blockdroid.Others.SQLHandler $r2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r2 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label01:
        $r3 = virtualinvoke $r2.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label02:
        $r1 = <org.blockdroid.Others.SQLHandler: java.lang.String[] FROM>;

     label03:
        $r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("SAVED_ITEMS", $r1, null, null, null, null, "TIME DESC");

        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: void startManagingCursor(android.database.Cursor)>($r4);

     label04:
        i1 = 0;

     label05:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

     label06:
        if $z0 != 0 goto label09;

     label07:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label08:
        return i1;

     label09:
        i1 = i1 + 1;

        goto label05;

     label10:
        $r5 := @caughtexception;

        $r10 = (android.database.sqlite.SQLiteConstraintException) $r5;

        virtualinvoke $r10.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $i0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoGetSavedItemSize(int)>($i0);

        return $i0;

     label11:
        $r6 := @caughtexception;

        $r11 = (java.lang.IllegalStateException) $r6;

        virtualinvoke $r11.<java.lang.IllegalStateException: void printStackTrace()>();

        $i0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoGetSavedItemSize(int)>($i0);

        return $i0;

     label12:
        $r7 := @caughtexception;

        $r12 = (android.database.sqlite.SQLiteMisuseException) $r7;

        virtualinvoke $r12.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $i0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoGetSavedItemSize(int)>($i0);

        return $i0;

     label13:
        $r8 := @caughtexception;

        $r13 = (android.database.sqlite.SQLiteException) $r8;

        virtualinvoke $r13.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $i0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoGetSavedItemSize(int)>($i0);

        return $i0;

     label14:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $i0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: int redoGetSavedItemSize(int)>($i0);

        return $i0;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label10;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label10;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label06 with label10;
        catch android.database.sqlite.SQLiteConstraintException from label07 to label08 with label10;
        catch java.lang.IllegalStateException from label01 to label02 with label11;
        catch java.lang.IllegalStateException from label03 to label04 with label11;
        catch java.lang.IllegalStateException from label05 to label06 with label11;
        catch java.lang.IllegalStateException from label07 to label08 with label11;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label06 with label12;
        catch android.database.sqlite.SQLiteMisuseException from label07 to label08 with label12;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label13;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label13;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label13;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label13;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label14;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label14;
        catch java.lang.IllegalMonitorStateException from label05 to label06 with label14;
        catch java.lang.IllegalMonitorStateException from label07 to label08 with label14;
    }

    public java.util.ArrayList getSavedItems(int)
    {
        java.lang.Throwable $r12, $r13, $r14, $r15;
        java.lang.IllegalStateException $r19;
        java.lang.String[] $r1;
        long $l1;
        java.util.ArrayList r2, $r17;
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.IllegalMonitorStateException $r16;
        android.database.sqlite.SQLiteException $r21;
        int $i0;
        java.lang.String $r6, $r7, $r8, $r9, $r10, $r11;
        android.database.Cursor $r5;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r20;
        android.database.sqlite.SQLiteConstraintException $r18;
        org.blockdroid.Others.SQLHandler $r3;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r3 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label01:
        $r4 = virtualinvoke $r3.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label02:
        $r1 = <org.blockdroid.Others.SQLHandler: java.lang.String[] FROM>;

     label03:
        $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("SAVED_ITEMS", $r1, null, null, null, null, "TIME DESC");

        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: void startManagingCursor(android.database.Cursor)>($r5);

     label04:
        $r17 = new java.util.ArrayList;

        r2 = $r17;

     label05:
        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

     label06:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

     label07:
        if $z0 != 0 goto label10;

     label08:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>();

     label09:
        return r2;

     label10:
        $r6 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r7 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r8 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(3);

        $r9 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(4);

        $r10 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(5);

        $l1 = interfaceinvoke $r5.<android.database.Cursor: long getLong(int)>(13);

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

     label11:
        $r1 = newarray (java.lang.String)[13];

        $r1[0] = $r6;

        $r1[1] = $r7;

        $r1[2] = $r8;

        $r1[3] = $r9;

        $r1[4] = $r10;

        $r1[5] = null;

        $r1[6] = null;

        $r1[7] = null;

        $r1[8] = null;

        $r1[9] = null;

        $r1[10] = null;

        $r1[11] = null;

        $r1[12] = $r11;

     label12:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label13:
        goto label06;

     label14:
        $r12 := @caughtexception;

        $r18 = (android.database.sqlite.SQLiteConstraintException) $r12;

        virtualinvoke $r18.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        r2 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList redoGetSavedItems(int)>($i0);

        return r2;

     label15:
        $r13 := @caughtexception;

        $r19 = (java.lang.IllegalStateException) $r13;

        virtualinvoke $r19.<java.lang.IllegalStateException: void printStackTrace()>();

        r2 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList redoGetSavedItems(int)>($i0);

        return r2;

     label16:
        $r14 := @caughtexception;

        $r20 = (android.database.sqlite.SQLiteMisuseException) $r14;

        virtualinvoke $r20.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        r2 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList redoGetSavedItems(int)>($i0);

        return r2;

     label17:
        $r15 := @caughtexception;

        $r21 = (android.database.sqlite.SQLiteException) $r15;

        virtualinvoke $r21.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        r2 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList redoGetSavedItems(int)>($i0);

        return r2;

     label18:
        $r16 := @caughtexception;

        virtualinvoke $r16.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        r2 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.util.ArrayList redoGetSavedItems(int)>($i0);

        return r2;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label14;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label14;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label07 with label14;
        catch android.database.sqlite.SQLiteConstraintException from label08 to label09 with label14;
        catch android.database.sqlite.SQLiteConstraintException from label10 to label11 with label14;
        catch android.database.sqlite.SQLiteConstraintException from label12 to label13 with label14;
        catch java.lang.IllegalStateException from label01 to label02 with label15;
        catch java.lang.IllegalStateException from label03 to label04 with label15;
        catch java.lang.IllegalStateException from label05 to label07 with label15;
        catch java.lang.IllegalStateException from label08 to label09 with label15;
        catch java.lang.IllegalStateException from label10 to label11 with label15;
        catch java.lang.IllegalStateException from label12 to label13 with label15;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label16;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label16;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label07 with label16;
        catch android.database.sqlite.SQLiteMisuseException from label08 to label09 with label16;
        catch android.database.sqlite.SQLiteMisuseException from label10 to label11 with label16;
        catch android.database.sqlite.SQLiteMisuseException from label12 to label13 with label16;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label17;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label17;
        catch android.database.sqlite.SQLiteException from label05 to label07 with label17;
        catch android.database.sqlite.SQLiteException from label08 to label09 with label17;
        catch android.database.sqlite.SQLiteException from label10 to label11 with label17;
        catch android.database.sqlite.SQLiteException from label12 to label13 with label17;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label18;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label18;
        catch java.lang.IllegalMonitorStateException from label05 to label07 with label18;
        catch java.lang.IllegalMonitorStateException from label08 to label09 with label18;
        catch java.lang.IllegalMonitorStateException from label10 to label11 with label18;
        catch java.lang.IllegalMonitorStateException from label12 to label13 with label18;
    }

    public boolean isContinueMonitor(int)
    {
        org.blockdroid.Others.SQLInputOutput r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        boolean $z0;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] getMonitor(int,int)>($i0, 0);

        if $r1 == null goto label4;

     label1:
        $r2 = $r1[2];

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("@");

        $r2 = $r1[1];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("1");

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

     label4:
        return 0;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    public java.lang.String isMonitored(int)
    {
        org.blockdroid.Others.SQLInputOutput r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] getMonitor(int,int)>($i0, 0);

        if $r1 == null goto label1;

        $r2 = $r1[2];

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("#");

        $r2 = $r1[0];

        return $r2;

     label1:
        return null;
    }

    public boolean saveItem(java.lang.String[], int)
    {
        java.lang.Throwable $r9, $r10, $r11, $r12;
        java.lang.IllegalStateException $r17;
        java.lang.String[] $r1;
        long $l3;
        java.lang.Integer $r6;
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.IllegalMonitorStateException $r13;
        android.database.sqlite.SQLiteException $r19;
        java.lang.Long $r7;
        int $i0, i1, $i2;
        java.lang.String $r5;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r18;
        android.database.sqlite.SQLiteConstraintException $r16;
        java.lang.StringBuilder $r8, $r15;
        android.content.ContentValues r2, $r14;
        org.blockdroid.Others.SQLHandler $r3;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $r1 := @parameter0: java.lang.String[];

        $i0 := @parameter1: int;

        i1 = 0;

     label01:
        $i2 = lengthof $r1;

        if i1 < $i2 goto label32;

        $r3 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label02:
        $r4 = virtualinvoke $r3.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label03:
        $r14 = new android.content.ContentValues;

        r2 = $r14;

     label04:
        specialinvoke $r14.<android.content.ContentValues: void <init>()>();

     label05:
        $r5 = $r1[0];

     label06:
        i1 = staticinvoke <org.blockdroid.Others.SQLInputOutput: int getItemHash(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("ID", $r6);

     label07:
        $r5 = $r1[0];

     label08:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESS", $r5);

     label09:
        $r5 = $r1[1];

     label10:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("TITLE", $r5);

     label11:
        $r5 = $r1[2];

     label12:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("IMGADDRESS", $r5);

     label13:
        $r5 = $r1[3];

     label14:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("PRICE", $r5);

     label15:
        $r5 = $r1[4];

     label16:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("DATE", $r5);

     label17:
        $r5 = $r1[5];

     label18:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("IMGPHONE", $r5);

     label19:
        $r5 = $r1[6];

     label20:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("INFO", $r5);

     label21:
        $r5 = $r1[7];

     label22:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("DESC", $r5);

     label23:
        $r5 = $r1[8];

     label24:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("BIGIMG", $r5);

     label25:
        $r5 = $r1[9];

     label26:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ITEMNAME", $r5);

     label27:
        $r5 = $r1[10];

     label28:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESSINFO", $r5);

     label29:
        $r5 = $r1[11];

     label30:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("BIGIMGHTTP", $r5);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("TIME", $r7);

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>("SAVED_ITEMS", null, r2);

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>();

     label31:
        return 1;

     label32:
        $r15 = new java.lang.StringBuilder;

        $r8 = $r15;

     label33:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

     label34:
        $r5 = $r1[i1];

     label35:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SQLInputOutput.java", $r5);

     label36:
        i1 = i1 + 1;

        goto label01;

     label37:
        $r9 := @caughtexception;

        $r16 = (android.database.sqlite.SQLiteConstraintException) $r9;

        virtualinvoke $r16.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSaveItem(java.lang.String[],int)>($r1, $i0);

        return $z0;

     label38:
        $r10 := @caughtexception;

        $r17 = (java.lang.IllegalStateException) $r10;

        virtualinvoke $r17.<java.lang.IllegalStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSaveItem(java.lang.String[],int)>($r1, $i0);

        return $z0;

     label39:
        $r11 := @caughtexception;

        $r18 = (android.database.sqlite.SQLiteMisuseException) $r11;

        virtualinvoke $r18.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSaveItem(java.lang.String[],int)>($r1, $i0);

        return $z0;

     label40:
        $r12 := @caughtexception;

        $r19 = (android.database.sqlite.SQLiteException) $r12;

        virtualinvoke $r19.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSaveItem(java.lang.String[],int)>($r1, $i0);

        return $z0;

     label41:
        $r13 := @caughtexception;

        virtualinvoke $r13.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSaveItem(java.lang.String[],int)>($r1, $i0);

        return $z0;

        catch android.database.sqlite.SQLiteConstraintException from label02 to label03 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label04 to label05 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label06 to label07 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label08 to label09 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label10 to label11 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label12 to label13 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label14 to label15 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label16 to label17 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label18 to label19 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label20 to label21 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label22 to label23 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label24 to label25 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label26 to label27 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label28 to label29 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label30 to label31 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label33 to label34 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label35 to label36 with label37;
        catch java.lang.IllegalStateException from label02 to label03 with label38;
        catch java.lang.IllegalStateException from label04 to label05 with label38;
        catch java.lang.IllegalStateException from label06 to label07 with label38;
        catch java.lang.IllegalStateException from label08 to label09 with label38;
        catch java.lang.IllegalStateException from label10 to label11 with label38;
        catch java.lang.IllegalStateException from label12 to label13 with label38;
        catch java.lang.IllegalStateException from label14 to label15 with label38;
        catch java.lang.IllegalStateException from label16 to label17 with label38;
        catch java.lang.IllegalStateException from label18 to label19 with label38;
        catch java.lang.IllegalStateException from label20 to label21 with label38;
        catch java.lang.IllegalStateException from label22 to label23 with label38;
        catch java.lang.IllegalStateException from label24 to label25 with label38;
        catch java.lang.IllegalStateException from label26 to label27 with label38;
        catch java.lang.IllegalStateException from label28 to label29 with label38;
        catch java.lang.IllegalStateException from label30 to label31 with label38;
        catch java.lang.IllegalStateException from label33 to label34 with label38;
        catch java.lang.IllegalStateException from label35 to label36 with label38;
        catch android.database.sqlite.SQLiteMisuseException from label02 to label03 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label04 to label05 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label06 to label07 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label08 to label09 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label10 to label11 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label12 to label13 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label14 to label15 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label16 to label17 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label18 to label19 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label20 to label21 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label22 to label23 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label24 to label25 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label26 to label27 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label28 to label29 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label30 to label31 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label33 to label34 with label39;
        catch android.database.sqlite.SQLiteMisuseException from label35 to label36 with label39;
        catch android.database.sqlite.SQLiteException from label02 to label03 with label40;
        catch android.database.sqlite.SQLiteException from label04 to label05 with label40;
        catch android.database.sqlite.SQLiteException from label06 to label07 with label40;
        catch android.database.sqlite.SQLiteException from label08 to label09 with label40;
        catch android.database.sqlite.SQLiteException from label10 to label11 with label40;
        catch android.database.sqlite.SQLiteException from label12 to label13 with label40;
        catch android.database.sqlite.SQLiteException from label14 to label15 with label40;
        catch android.database.sqlite.SQLiteException from label16 to label17 with label40;
        catch android.database.sqlite.SQLiteException from label18 to label19 with label40;
        catch android.database.sqlite.SQLiteException from label20 to label21 with label40;
        catch android.database.sqlite.SQLiteException from label22 to label23 with label40;
        catch android.database.sqlite.SQLiteException from label24 to label25 with label40;
        catch android.database.sqlite.SQLiteException from label26 to label27 with label40;
        catch android.database.sqlite.SQLiteException from label28 to label29 with label40;
        catch android.database.sqlite.SQLiteException from label30 to label31 with label40;
        catch android.database.sqlite.SQLiteException from label33 to label34 with label40;
        catch android.database.sqlite.SQLiteException from label35 to label36 with label40;
        catch java.lang.IllegalMonitorStateException from label02 to label03 with label41;
        catch java.lang.IllegalMonitorStateException from label04 to label05 with label41;
        catch java.lang.IllegalMonitorStateException from label06 to label07 with label41;
        catch java.lang.IllegalMonitorStateException from label08 to label09 with label41;
        catch java.lang.IllegalMonitorStateException from label10 to label11 with label41;
        catch java.lang.IllegalMonitorStateException from label12 to label13 with label41;
        catch java.lang.IllegalMonitorStateException from label14 to label15 with label41;
        catch java.lang.IllegalMonitorStateException from label16 to label17 with label41;
        catch java.lang.IllegalMonitorStateException from label18 to label19 with label41;
        catch java.lang.IllegalMonitorStateException from label20 to label21 with label41;
        catch java.lang.IllegalMonitorStateException from label22 to label23 with label41;
        catch java.lang.IllegalMonitorStateException from label24 to label25 with label41;
        catch java.lang.IllegalMonitorStateException from label26 to label27 with label41;
        catch java.lang.IllegalMonitorStateException from label28 to label29 with label41;
        catch java.lang.IllegalMonitorStateException from label30 to label31 with label41;
        catch java.lang.IllegalMonitorStateException from label33 to label34 with label41;
        catch java.lang.IllegalMonitorStateException from label35 to label36 with label41;
    }

    public boolean saveMonitoredItem(java.lang.String[], int)
    {
        java.lang.Throwable $r8, $r9, $r10, $r11;
        java.lang.IllegalStateException $r15;
        java.lang.String[] $r1;
        long $l2;
        java.lang.Integer $r6;
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.IllegalMonitorStateException $r12;
        android.database.sqlite.SQLiteException $r17;
        java.lang.Long $r7;
        int $i0, $i1;
        java.lang.String $r5;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r16;
        android.database.sqlite.SQLiteConstraintException $r14;
        android.content.ContentValues r2, $r13;
        org.blockdroid.Others.SQLHandler $r3;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $r1 := @parameter0: java.lang.String[];

        $i0 := @parameter1: int;

        $r3 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label01:
        $r4 = virtualinvoke $r3.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label02:
        $r13 = new android.content.ContentValues;

        r2 = $r13;

     label03:
        specialinvoke $r13.<android.content.ContentValues: void <init>()>();

     label04:
        $r5 = $r1[0];

     label05:
        $i1 = staticinvoke <org.blockdroid.Others.SQLInputOutput: int getMonitorHash(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("ID", $r6);

     label06:
        $r5 = $r1[0];

     label07:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESS", $r5);

     label08:
        $r5 = $r1[1];

     label09:
        $i1 = staticinvoke <org.blockdroid.Others.SQLInputOutput: int getItemHash(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("ITEM_ID", $r6);

     label10:
        $r5 = $r1[2];

     label11:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ISMONITORED", $r5);

     label12:
        $r5 = $r1[3];

     label13:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("TIMER", $r5);

     label14:
        $r5 = $r1[4];

     label15:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESSINFO", $r5);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("TIME", $r7);

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>("MONITORED", null, r2);

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>();

     label16:
        return 1;

     label17:
        $r8 := @caughtexception;

        $r14 = (android.database.sqlite.SQLiteConstraintException) $r8;

        virtualinvoke $r14.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSaveMonitoredItem(java.lang.String[],int)>($r1, $i0);

        return $z0;

     label18:
        $r9 := @caughtexception;

        $r15 = (java.lang.IllegalStateException) $r9;

        virtualinvoke $r15.<java.lang.IllegalStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSaveMonitoredItem(java.lang.String[],int)>($r1, $i0);

        return $z0;

     label19:
        $r10 := @caughtexception;

        $r16 = (android.database.sqlite.SQLiteMisuseException) $r10;

        virtualinvoke $r16.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSaveMonitoredItem(java.lang.String[],int)>($r1, $i0);

        return $z0;

     label20:
        $r11 := @caughtexception;

        $r17 = (android.database.sqlite.SQLiteException) $r11;

        virtualinvoke $r17.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSaveMonitoredItem(java.lang.String[],int)>($r1, $i0);

        return $z0;

     label21:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSaveMonitoredItem(java.lang.String[],int)>($r1, $i0);

        return $z0;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label17;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label17;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label06 with label17;
        catch android.database.sqlite.SQLiteConstraintException from label07 to label08 with label17;
        catch android.database.sqlite.SQLiteConstraintException from label09 to label10 with label17;
        catch android.database.sqlite.SQLiteConstraintException from label11 to label12 with label17;
        catch android.database.sqlite.SQLiteConstraintException from label13 to label14 with label17;
        catch android.database.sqlite.SQLiteConstraintException from label15 to label16 with label17;
        catch java.lang.IllegalStateException from label01 to label02 with label18;
        catch java.lang.IllegalStateException from label03 to label04 with label18;
        catch java.lang.IllegalStateException from label05 to label06 with label18;
        catch java.lang.IllegalStateException from label07 to label08 with label18;
        catch java.lang.IllegalStateException from label09 to label10 with label18;
        catch java.lang.IllegalStateException from label11 to label12 with label18;
        catch java.lang.IllegalStateException from label13 to label14 with label18;
        catch java.lang.IllegalStateException from label15 to label16 with label18;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label19;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label19;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label06 with label19;
        catch android.database.sqlite.SQLiteMisuseException from label07 to label08 with label19;
        catch android.database.sqlite.SQLiteMisuseException from label09 to label10 with label19;
        catch android.database.sqlite.SQLiteMisuseException from label11 to label12 with label19;
        catch android.database.sqlite.SQLiteMisuseException from label13 to label14 with label19;
        catch android.database.sqlite.SQLiteMisuseException from label15 to label16 with label19;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label20;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label20;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label20;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label20;
        catch android.database.sqlite.SQLiteException from label09 to label10 with label20;
        catch android.database.sqlite.SQLiteException from label11 to label12 with label20;
        catch android.database.sqlite.SQLiteException from label13 to label14 with label20;
        catch android.database.sqlite.SQLiteException from label15 to label16 with label20;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label21;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label21;
        catch java.lang.IllegalMonitorStateException from label05 to label06 with label21;
        catch java.lang.IllegalMonitorStateException from label07 to label08 with label21;
        catch java.lang.IllegalMonitorStateException from label09 to label10 with label21;
        catch java.lang.IllegalMonitorStateException from label11 to label12 with label21;
        catch java.lang.IllegalMonitorStateException from label13 to label14 with label21;
        catch java.lang.IllegalMonitorStateException from label15 to label16 with label21;
    }

    public boolean setMonitorMonitor(int, java.lang.String, int)
    {
        java.lang.Throwable $r11, $r12, $r13, $r14;
        java.lang.IllegalStateException $r20;
        java.lang.String[] $r3, $r7;
        java.lang.Integer $r10;
        android.database.sqlite.SQLiteDatabase $r9;
        java.lang.IllegalMonitorStateException $r15;
        android.database.sqlite.SQLiteException $r22;
        int $i0, $i1, $i2;
        java.lang.String $r1, r4, $r6;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r16;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r21;
        android.database.sqlite.SQLiteConstraintException $r19;
        java.lang.StringBuilder $r5, $r17;
        android.content.ContentValues r2, $r18;
        org.blockdroid.Others.SQLHandler $r8;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

     label01:
        $r3 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] getMonitor(int,int)>($i0, 0);

     label02:
        if $r3 == null goto label32;

        r4 = "";

        $r17 = new java.lang.StringBuilder;

        $r5 = $r17;

     label03:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("#");

     label04:
        $r6 = $r3[2];

     label05:
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("#");

     label06:
        $r6 = $r7[1];

     label07:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        r4 = $r6;

     label09:
        $r17 = new java.lang.StringBuilder;

        $r5 = $r17;

     label10:
        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r3[2] = r4;

     label12:
        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean deleteMonitored(int,int)>($i0, 0);

     label13:
        $r8 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label14:
        $r9 = virtualinvoke $r8.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label15:
        $r18 = new android.content.ContentValues;

        r2 = $r18;

     label16:
        specialinvoke $r18.<android.content.ContentValues: void <init>()>();

     label17:
        r4 = $r3[0];

     label18:
        $i2 = staticinvoke <org.blockdroid.Others.SQLInputOutput: int getMonitorHash(java.lang.String)>(r4);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("ID", $r10);

     label19:
        r4 = $r3[0];

     label20:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESS", r4);

     label21:
        r4 = $r3[1];

     label22:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ITEM_ID", r4);

     label23:
        r4 = $r3[2];

     label24:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ISMONITORED", r4);

     label25:
        r4 = $r3[3];

     label26:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("TIMER", r4);

     label27:
        r4 = $r3[4];

     label28:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESSINFO", r4);

     label29:
        r4 = $r3[5];

     label30:
        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("TIME", r4);

        virtualinvoke $r9.<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>("MONITORED", null, r2);

        virtualinvoke $r9.<android.database.sqlite.SQLiteDatabase: void close()>();

     label31:
        return 1;

     label32:
        return 0;

     label33:
        $r11 := @caughtexception;

        $r19 = (android.database.sqlite.SQLiteConstraintException) $r11;

        virtualinvoke $r19.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorMonitor(int,java.lang.String,int)>($i0, $r1, $i1);

        return $z0;

     label34:
        $r12 := @caughtexception;

        $r20 = (java.lang.IllegalStateException) $r12;

        virtualinvoke $r20.<java.lang.IllegalStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorMonitor(int,java.lang.String,int)>($i0, $r1, $i1);

        return $z0;

     label35:
        $r13 := @caughtexception;

        $r21 = (android.database.sqlite.SQLiteMisuseException) $r13;

        virtualinvoke $r21.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorMonitor(int,java.lang.String,int)>($i0, $r1, $i1);

        return $z0;

     label36:
        $r14 := @caughtexception;

        $r22 = (android.database.sqlite.SQLiteException) $r14;

        virtualinvoke $r22.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorMonitor(int,java.lang.String,int)>($i0, $r1, $i1);

        return $z0;

     label37:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorMonitor(int,java.lang.String,int)>($i0, $r1, $i1);

        return $z0;

     label38:
        $r16 := @caughtexception;

        goto label09;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label33;
        catch java.lang.IllegalStateException from label01 to label02 with label34;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label35;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label36;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label08 with label38;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label06 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label07 to label08 with label33;
        catch java.lang.IllegalStateException from label03 to label04 with label34;
        catch java.lang.IllegalStateException from label05 to label06 with label34;
        catch java.lang.IllegalStateException from label07 to label08 with label34;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label06 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label07 to label08 with label35;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label36;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label36;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label36;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label37;
        catch java.lang.IllegalMonitorStateException from label05 to label06 with label37;
        catch java.lang.IllegalMonitorStateException from label07 to label08 with label37;
        catch android.database.sqlite.SQLiteConstraintException from label10 to label11 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label12 to label13 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label14 to label15 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label16 to label17 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label18 to label19 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label20 to label21 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label22 to label23 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label24 to label25 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label26 to label27 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label28 to label29 with label33;
        catch android.database.sqlite.SQLiteConstraintException from label30 to label31 with label33;
        catch java.lang.IllegalStateException from label10 to label11 with label34;
        catch java.lang.IllegalStateException from label12 to label13 with label34;
        catch java.lang.IllegalStateException from label14 to label15 with label34;
        catch java.lang.IllegalStateException from label16 to label17 with label34;
        catch java.lang.IllegalStateException from label18 to label19 with label34;
        catch java.lang.IllegalStateException from label20 to label21 with label34;
        catch java.lang.IllegalStateException from label22 to label23 with label34;
        catch java.lang.IllegalStateException from label24 to label25 with label34;
        catch java.lang.IllegalStateException from label26 to label27 with label34;
        catch java.lang.IllegalStateException from label28 to label29 with label34;
        catch java.lang.IllegalStateException from label30 to label31 with label34;
        catch android.database.sqlite.SQLiteMisuseException from label10 to label11 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label12 to label13 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label14 to label15 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label16 to label17 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label18 to label19 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label20 to label21 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label22 to label23 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label24 to label25 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label26 to label27 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label28 to label29 with label35;
        catch android.database.sqlite.SQLiteMisuseException from label30 to label31 with label35;
        catch android.database.sqlite.SQLiteException from label10 to label11 with label36;
        catch android.database.sqlite.SQLiteException from label12 to label13 with label36;
        catch android.database.sqlite.SQLiteException from label14 to label15 with label36;
        catch android.database.sqlite.SQLiteException from label16 to label17 with label36;
        catch android.database.sqlite.SQLiteException from label18 to label19 with label36;
        catch android.database.sqlite.SQLiteException from label20 to label21 with label36;
        catch android.database.sqlite.SQLiteException from label22 to label23 with label36;
        catch android.database.sqlite.SQLiteException from label24 to label25 with label36;
        catch android.database.sqlite.SQLiteException from label26 to label27 with label36;
        catch android.database.sqlite.SQLiteException from label28 to label29 with label36;
        catch android.database.sqlite.SQLiteException from label30 to label31 with label36;
        catch java.lang.IllegalMonitorStateException from label10 to label11 with label37;
        catch java.lang.IllegalMonitorStateException from label12 to label13 with label37;
        catch java.lang.IllegalMonitorStateException from label14 to label15 with label37;
        catch java.lang.IllegalMonitorStateException from label16 to label17 with label37;
        catch java.lang.IllegalMonitorStateException from label18 to label19 with label37;
        catch java.lang.IllegalMonitorStateException from label20 to label21 with label37;
        catch java.lang.IllegalMonitorStateException from label22 to label23 with label37;
        catch java.lang.IllegalMonitorStateException from label24 to label25 with label37;
        catch java.lang.IllegalMonitorStateException from label26 to label27 with label37;
        catch java.lang.IllegalMonitorStateException from label28 to label29 with label37;
        catch java.lang.IllegalMonitorStateException from label30 to label31 with label37;
    }

    public boolean setMonitorNewItem(int, int, int)
    {
        java.lang.Throwable $r7, $r8, $r9, $r10;
        java.lang.IllegalStateException $r14;
        java.lang.String[] $r2;
        java.lang.Integer $r6;
        android.database.sqlite.SQLiteDatabase $r5;
        java.lang.IllegalMonitorStateException $r11;
        android.database.sqlite.SQLiteException $r16;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r15;
        android.database.sqlite.SQLiteConstraintException $r13;
        android.content.ContentValues r1, $r12;
        org.blockdroid.Others.SQLHandler $r4;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

     label01:
        $r2 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] getMonitor(int,int)>($i0, 0);

     label02:
        if $r2 == null goto label25;

     label03:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

     label04:
        $r2[1] = $r3;

     label05:
        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean deleteMonitored(int,int)>($i0, 0);

     label06:
        $r4 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label07:
        $r5 = virtualinvoke $r4.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label08:
        $r12 = new android.content.ContentValues;

        r1 = $r12;

     label09:
        specialinvoke $r12.<android.content.ContentValues: void <init>()>();

     label10:
        $r3 = $r2[0];

     label11:
        $i3 = staticinvoke <org.blockdroid.Others.SQLInputOutput: int getMonitorHash(java.lang.String)>($r3);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("ID", $r6);

     label12:
        $r3 = $r2[0];

     label13:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESS", $r3);

     label14:
        $r3 = $r2[1];

     label15:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ITEM_ID", $r3);

     label16:
        $r3 = $r2[2];

     label17:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ISMONITORED", $r3);

     label18:
        $r3 = $r2[3];

     label19:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("TIMER", $r3);

     label20:
        $r3 = $r2[4];

     label21:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESSINFO", $r3);

     label22:
        $r3 = $r2[5];

     label23:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("TIME", $r3);

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>("MONITORED", null, r1);

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label24:
        return 1;

     label25:
        return 0;

     label26:
        $r7 := @caughtexception;

        $r13 = (android.database.sqlite.SQLiteConstraintException) $r7;

        virtualinvoke $r13.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorNewItem(int,int,int)>($i0, $i1, $i2);

        return $z0;

     label27:
        $r8 := @caughtexception;

        $r14 = (java.lang.IllegalStateException) $r8;

        virtualinvoke $r14.<java.lang.IllegalStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorNewItem(int,int,int)>($i0, $i1, $i2);

        return $z0;

     label28:
        $r9 := @caughtexception;

        $r15 = (android.database.sqlite.SQLiteMisuseException) $r9;

        virtualinvoke $r15.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorNewItem(int,int,int)>($i0, $i1, $i2);

        return $z0;

     label29:
        $r10 := @caughtexception;

        $r16 = (android.database.sqlite.SQLiteException) $r10;

        virtualinvoke $r16.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorNewItem(int,int,int)>($i0, $i1, $i2);

        return $z0;

     label30:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorNewItem(int,int,int)>($i0, $i1, $i2);

        return $z0;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label06 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label07 to label08 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label09 to label10 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label11 to label12 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label13 to label14 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label15 to label16 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label17 to label18 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label19 to label20 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label21 to label22 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label23 to label24 with label26;
        catch java.lang.IllegalStateException from label01 to label02 with label27;
        catch java.lang.IllegalStateException from label03 to label04 with label27;
        catch java.lang.IllegalStateException from label05 to label06 with label27;
        catch java.lang.IllegalStateException from label07 to label08 with label27;
        catch java.lang.IllegalStateException from label09 to label10 with label27;
        catch java.lang.IllegalStateException from label11 to label12 with label27;
        catch java.lang.IllegalStateException from label13 to label14 with label27;
        catch java.lang.IllegalStateException from label15 to label16 with label27;
        catch java.lang.IllegalStateException from label17 to label18 with label27;
        catch java.lang.IllegalStateException from label19 to label20 with label27;
        catch java.lang.IllegalStateException from label21 to label22 with label27;
        catch java.lang.IllegalStateException from label23 to label24 with label27;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label06 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label07 to label08 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label09 to label10 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label11 to label12 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label13 to label14 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label15 to label16 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label17 to label18 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label19 to label20 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label21 to label22 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label23 to label24 with label28;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label29;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label29;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label29;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label29;
        catch android.database.sqlite.SQLiteException from label09 to label10 with label29;
        catch android.database.sqlite.SQLiteException from label11 to label12 with label29;
        catch android.database.sqlite.SQLiteException from label13 to label14 with label29;
        catch android.database.sqlite.SQLiteException from label15 to label16 with label29;
        catch android.database.sqlite.SQLiteException from label17 to label18 with label29;
        catch android.database.sqlite.SQLiteException from label19 to label20 with label29;
        catch android.database.sqlite.SQLiteException from label21 to label22 with label29;
        catch android.database.sqlite.SQLiteException from label23 to label24 with label29;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label30;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label30;
        catch java.lang.IllegalMonitorStateException from label05 to label06 with label30;
        catch java.lang.IllegalMonitorStateException from label07 to label08 with label30;
        catch java.lang.IllegalMonitorStateException from label09 to label10 with label30;
        catch java.lang.IllegalMonitorStateException from label11 to label12 with label30;
        catch java.lang.IllegalMonitorStateException from label13 to label14 with label30;
        catch java.lang.IllegalMonitorStateException from label15 to label16 with label30;
        catch java.lang.IllegalMonitorStateException from label17 to label18 with label30;
        catch java.lang.IllegalMonitorStateException from label19 to label20 with label30;
        catch java.lang.IllegalMonitorStateException from label21 to label22 with label30;
        catch java.lang.IllegalMonitorStateException from label23 to label24 with label30;
    }

    public boolean setMonitorOldItem(int, int, int)
    {
        java.lang.Throwable $r7, $r8, $r9, $r10;
        java.lang.IllegalStateException $r14;
        java.lang.String[] $r2;
        java.lang.Integer $r6;
        android.database.sqlite.SQLiteDatabase $r5;
        java.lang.IllegalMonitorStateException $r11;
        android.database.sqlite.SQLiteException $r16;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3;
        boolean $z0;
        org.blockdroid.Others.SQLInputOutput r0;
        android.database.sqlite.SQLiteMisuseException $r15;
        android.database.sqlite.SQLiteConstraintException $r13;
        android.content.ContentValues r1, $r12;
        org.blockdroid.Others.SQLHandler $r4;

        r0 := @this: org.blockdroid.Others.SQLInputOutput;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

     label01:
        $r2 = virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: java.lang.String[] getMonitor(int,int)>($i0, 0);

     label02:
        if $r2 == null goto label25;

     label03:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

     label04:
        $r2[3] = $r3;

     label05:
        virtualinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean deleteMonitored(int,int)>($i0, 0);

     label06:
        $r4 = r0.<org.blockdroid.Others.SQLInputOutput: org.blockdroid.Others.SQLHandler savedItemsHandler>;

     label07:
        $r5 = virtualinvoke $r4.<org.blockdroid.Others.SQLHandler: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label08:
        $r12 = new android.content.ContentValues;

        r1 = $r12;

     label09:
        specialinvoke $r12.<android.content.ContentValues: void <init>()>();

     label10:
        $r3 = $r2[0];

     label11:
        $i3 = staticinvoke <org.blockdroid.Others.SQLInputOutput: int getMonitorHash(java.lang.String)>($r3);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("ID", $r6);

     label12:
        $r3 = $r2[0];

     label13:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESS", $r3);

     label14:
        $r3 = $r2[1];

     label15:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ITEM_ID", $r3);

     label16:
        $r3 = $r2[2];

     label17:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ISMONITORED", $r3);

     label18:
        $r3 = $r2[3];

     label19:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("TIMER", $r3);

     label20:
        $r3 = $r2[4];

     label21:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("HTTPADDRESSINFO", $r3);

     label22:
        $r3 = $r2[5];

     label23:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("TIME", $r3);

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>("MONITORED", null, r1);

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label24:
        return 1;

     label25:
        return 0;

     label26:
        $r7 := @caughtexception;

        $r13 = (android.database.sqlite.SQLiteConstraintException) $r7;

        virtualinvoke $r13.<android.database.sqlite.SQLiteConstraintException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorOldItem(int,int,int)>($i0, $i1, $i2);

        return $z0;

     label27:
        $r8 := @caughtexception;

        $r14 = (java.lang.IllegalStateException) $r8;

        virtualinvoke $r14.<java.lang.IllegalStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorOldItem(int,int,int)>($i0, $i1, $i2);

        return $z0;

     label28:
        $r9 := @caughtexception;

        $r15 = (android.database.sqlite.SQLiteMisuseException) $r9;

        virtualinvoke $r15.<android.database.sqlite.SQLiteMisuseException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorOldItem(int,int,int)>($i0, $i1, $i2);

        return $z0;

     label29:
        $r10 := @caughtexception;

        $r16 = (android.database.sqlite.SQLiteException) $r10;

        virtualinvoke $r16.<android.database.sqlite.SQLiteException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorOldItem(int,int,int)>($i0, $i1, $i2);

        return $z0;

     label30:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.IllegalMonitorStateException: void printStackTrace()>();

        $z0 = specialinvoke r0.<org.blockdroid.Others.SQLInputOutput: boolean redoSetMonitorOldItem(int,int,int)>($i0, $i1, $i2);

        return $z0;

        catch android.database.sqlite.SQLiteConstraintException from label01 to label02 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label03 to label04 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label05 to label06 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label07 to label08 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label09 to label10 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label11 to label12 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label13 to label14 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label15 to label16 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label17 to label18 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label19 to label20 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label21 to label22 with label26;
        catch android.database.sqlite.SQLiteConstraintException from label23 to label24 with label26;
        catch java.lang.IllegalStateException from label01 to label02 with label27;
        catch java.lang.IllegalStateException from label03 to label04 with label27;
        catch java.lang.IllegalStateException from label05 to label06 with label27;
        catch java.lang.IllegalStateException from label07 to label08 with label27;
        catch java.lang.IllegalStateException from label09 to label10 with label27;
        catch java.lang.IllegalStateException from label11 to label12 with label27;
        catch java.lang.IllegalStateException from label13 to label14 with label27;
        catch java.lang.IllegalStateException from label15 to label16 with label27;
        catch java.lang.IllegalStateException from label17 to label18 with label27;
        catch java.lang.IllegalStateException from label19 to label20 with label27;
        catch java.lang.IllegalStateException from label21 to label22 with label27;
        catch java.lang.IllegalStateException from label23 to label24 with label27;
        catch android.database.sqlite.SQLiteMisuseException from label01 to label02 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label03 to label04 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label05 to label06 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label07 to label08 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label09 to label10 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label11 to label12 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label13 to label14 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label15 to label16 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label17 to label18 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label19 to label20 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label21 to label22 with label28;
        catch android.database.sqlite.SQLiteMisuseException from label23 to label24 with label28;
        catch android.database.sqlite.SQLiteException from label01 to label02 with label29;
        catch android.database.sqlite.SQLiteException from label03 to label04 with label29;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label29;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label29;
        catch android.database.sqlite.SQLiteException from label09 to label10 with label29;
        catch android.database.sqlite.SQLiteException from label11 to label12 with label29;
        catch android.database.sqlite.SQLiteException from label13 to label14 with label29;
        catch android.database.sqlite.SQLiteException from label15 to label16 with label29;
        catch android.database.sqlite.SQLiteException from label17 to label18 with label29;
        catch android.database.sqlite.SQLiteException from label19 to label20 with label29;
        catch android.database.sqlite.SQLiteException from label21 to label22 with label29;
        catch android.database.sqlite.SQLiteException from label23 to label24 with label29;
        catch java.lang.IllegalMonitorStateException from label01 to label02 with label30;
        catch java.lang.IllegalMonitorStateException from label03 to label04 with label30;
        catch java.lang.IllegalMonitorStateException from label05 to label06 with label30;
        catch java.lang.IllegalMonitorStateException from label07 to label08 with label30;
        catch java.lang.IllegalMonitorStateException from label09 to label10 with label30;
        catch java.lang.IllegalMonitorStateException from label11 to label12 with label30;
        catch java.lang.IllegalMonitorStateException from label13 to label14 with label30;
        catch java.lang.IllegalMonitorStateException from label15 to label16 with label30;
        catch java.lang.IllegalMonitorStateException from label17 to label18 with label30;
        catch java.lang.IllegalMonitorStateException from label19 to label20 with label30;
        catch java.lang.IllegalMonitorStateException from label21 to label22 with label30;
        catch java.lang.IllegalMonitorStateException from label23 to label24 with label30;
    }
}
