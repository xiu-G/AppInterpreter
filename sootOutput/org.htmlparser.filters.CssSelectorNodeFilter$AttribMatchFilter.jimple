class org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter extends java.lang.Object implements org.htmlparser.NodeFilter
{
    private java.util.regex.Pattern a;
    private java.lang.String b;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter r0;
        java.lang.String $r1, $r2;
        java.util.regex.Pattern $r3;

        r0 := @this: org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r2);

        r0.<org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter: java.util.regex.Pattern a> = $r3;

        r0.<org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter: java.lang.String b> = $r1;

        return;
    }

    public boolean accept(org.htmlparser.Node)
    {
        org.htmlparser.Tag $r2;
        java.util.regex.Matcher $r5;
        org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter r0;
        java.lang.String $r3;
        java.util.regex.Pattern $r4;
        org.htmlparser.Node $r1;
        boolean $z0;

        r0 := @this: org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter;

        $r1 := @parameter0: org.htmlparser.Node;

        $z0 = $r1 instanceof org.htmlparser.Tag;

        if $z0 == 0 goto label2;

        $r2 = (org.htmlparser.Tag) $r1;

        $r3 = r0.<org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter: java.lang.String b>;

        $r3 = interfaceinvoke $r2.<org.htmlparser.Tag: java.lang.String getAttribute(java.lang.String)>($r3);

        if $r3 == null goto label2;

        $r4 = r0.<org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter: java.util.regex.Pattern a>;

        if $r4 == null goto label1;

        $r4 = r0.<org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter: java.util.regex.Pattern a>;

        $r2 = (org.htmlparser.Tag) $r1;

        $r3 = r0.<org.htmlparser.filters.CssSelectorNodeFilter$AttribMatchFilter: java.lang.String b>;

        $r3 = interfaceinvoke $r2.<org.htmlparser.Tag: java.lang.String getAttribute(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;

     label2:
        return 0;
    }
}
