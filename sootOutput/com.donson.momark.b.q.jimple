public class com.donson.momark.b.q extends java.lang.Object
{
    private static com.donson.momark.a.a.a a;
    private static com.donson.momark.a.q b;

    public void <init>()
    {
        com.donson.momark.b.q r0;

        r0 := @this: com.donson.momark.b.q;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void a(android.content.Context, java.lang.String, java.lang.String, com.donson.momark.a.r, com.donson.momark.a.u)
    {
        byte[] $r6;
        com.donson.momark.a.a.y $r8, $r22;
        android.widget.ImageView $r14, $r23;
        org.json.JSONException $r17, $r18, $r20;
        org.json.JSONObject $r10, $r25;
        com.donson.momark.a.a.u $r11;
        boolean $z0;
        java.lang.Exception $r19;
        java.lang.StringBuilder $r7, $r21;
        com.donson.momark.a.r $r3;
        com.donson.momark.a.u $r4;
        java.lang.Throwable $r9;
        android.content.Context $r0;
        com.donson.momark.util.r $r15, $r24;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r2, $r5, $r12, $r13;
        android.graphics.Bitmap $r16;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: com.donson.momark.a.r;

        $r4 := @parameter4: com.donson.momark.a.u;

        if $r4 != null goto label02;

     label01:
        return;

     label02:
        $r12 = new java.lang.String;

        $r5 = $r12;

     label03:
        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r12.<java.lang.String: void <init>(byte[],java.lang.String)>($r6, "UTF-8");

     label04:
        $r21 = new java.lang.StringBuilder;

        $r7 = $r21;

     label05:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("----------------ReturnInfoParser.parseReturnInfo---------");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String)>($r1);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

     label06:
        if $z0 != 0 goto label09;

     label07:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("{");

     label08:
        if $z0 != 0 goto label33;

     label09:
        $r1 = <com.donson.momark.util.e: java.lang.String a>;

     label10:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label11:
        if $z0 == 0 goto label13;

        $r21 = new java.lang.StringBuilder;

        $r7 = $r21;

     label12:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ReturnInfoParser.parseReturnInfo ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 40014:init interface,back data is empty or not json format.");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String)>($r1);

     label13:
        $r1 = <com.donson.momark.util.e: java.lang.String h>;

     label14:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label15:
        if $z0 == 0 goto label48;

        $r21 = new java.lang.StringBuilder;

        $r7 = $r21;

     label16:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ReturnInfoParser.parseReturnInfo ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 40014:ad interface,back data is empty or not json format.");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String)>($r1);

     label17:
        $r22 = new com.donson.momark.a.a.y;

        $r8 = $r22;

     label18:
        specialinvoke $r22.<com.donson.momark.a.a.y: void <init>(int)>(40014);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r8);

     label19:
        return;

     label20:
        $r9 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" ReturnInfoParser.parseReturnInfo 40002:Characters converter is not available.", $r9);

        $r22 = new com.donson.momark.a.a.y;

        specialinvoke $r22.<com.donson.momark.a.a.y: void <init>(int)>(40002);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r22);

        $r10 = null;

     label21:
        if $r10 == null goto label48;

        $r1 = virtualinvoke $r10.<org.json.JSONObject: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label48;

        $r1 = <com.donson.momark.util.e: java.lang.String a>;

        if $r2 != $r1 goto label38;

        $r11 = $r3.<com.donson.momark.a.r: com.donson.momark.a.a.u d>;

     label22:
        $i0 = virtualinvoke $r10.<org.json.JSONObject: int getInt(java.lang.String)>("mt");

        $i1 = virtualinvoke $r10.<org.json.JSONObject: int getInt(java.lang.String)>("it");

        $i2 = virtualinvoke $r10.<org.json.JSONObject: int getInt(java.lang.String)>("iu");

        $r1 = virtualinvoke $r10.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("rurl");

        $r2 = virtualinvoke $r10.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("burl");

        $r5 = virtualinvoke $r10.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("lurl");

        $r12 = virtualinvoke $r10.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("murl");

     label23:
        <com.donson.momark.util.e: java.lang.String p> = $r1;

        <com.donson.momark.util.e: java.lang.String q> = $r2;

        <com.donson.momark.util.e: java.lang.String r> = $r5;

        <com.donson.momark.util.e: java.lang.String s> = $r12;

     label24:
        $r13 = virtualinvoke $r10.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("bl");

        $i3 = virtualinvoke $r10.<org.json.JSONObject: int getInt(java.lang.String)>("err");

        $i4 = virtualinvoke $r10.<org.json.JSONObject: int getInt(java.lang.String)>("cp");

     label25:
        <com.donson.momark.util.e: int l> = $i4;

     label26:
        virtualinvoke $r11.<com.donson.momark.a.a.u: void a(int)>($i0);

        virtualinvoke $r11.<com.donson.momark.a.a.u: void d(int)>($i1);

        virtualinvoke $r11.<com.donson.momark.a.a.u: void e(int)>($i2);

        virtualinvoke $r11.<com.donson.momark.a.a.u: void a(java.lang.String)>($r1);

        virtualinvoke $r11.<com.donson.momark.a.a.u: void d(java.lang.String)>($r2);

        virtualinvoke $r11.<com.donson.momark.a.a.u: void e(java.lang.String)>($r5);

        virtualinvoke $r11.<com.donson.momark.a.a.u: void g(java.lang.String)>($r12);

        virtualinvoke $r11.<com.donson.momark.a.a.u: void g(int)>($i3);

        virtualinvoke $r11.<com.donson.momark.a.a.u: void h(int)>($i4);

     label27:
        $r23 = new android.widget.ImageView;

        $r14 = $r23;

     label28:
        specialinvoke $r23.<android.widget.ImageView: void <init>(android.content.Context)>($r0);

        virtualinvoke $r11.<com.donson.momark.a.a.u: void a(android.widget.ImageView)>($r14);

     label29:
        $r24 = new com.donson.momark.util.r;

        $r15 = $r24;

     label30:
        specialinvoke $r24.<com.donson.momark.util.r: void <init>()>();

        $r16 = virtualinvoke $r15.<com.donson.momark.util.r: android.graphics.Bitmap a(java.lang.String,int,com.donson.momark.a.u)>($r13, 7, $r4);

        virtualinvoke $r11.<com.donson.momark.a.a.u: void a(android.graphics.Bitmap)>($r16);

     label31:
        return;

     label32:
        $r17 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" ReturnInfoParser.parseInitInfo 40005:init interface data format error.", $r17);

        $r22 = new com.donson.momark.a.a.y;

        specialinvoke $r22.<com.donson.momark.a.a.y: void <init>(int)>(40005);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r22);

        return;

     label33:
        $r25 = new org.json.JSONObject;

        $r10 = $r25;

     label34:
        specialinvoke $r25.<org.json.JSONObject: void <init>(java.lang.String)>($r5);

     label35:
        goto label21;

     label36:
        $r18 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" ReturnInfoParser.parseReturnInfo 40005:init interface data format error.", $r18);

        $r22 = new com.donson.momark.a.a.y;

        specialinvoke $r22.<com.donson.momark.a.a.y: void <init>(int)>(40005);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r22);

        $r10 = null;

        goto label21;

     label37:
        $r19 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" ReturnInfoParser.parseInitInfo 40005:init interface data format error.", $r19);

        $r22 = new com.donson.momark.a.a.y;

        specialinvoke $r22.<com.donson.momark.a.a.y: void <init>(int)>(40005);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r22);

        return;

     label38:
        $r1 = <com.donson.momark.util.e: java.lang.String g>;

        if $r2 == $r1 goto label48;

        $r1 = <com.donson.momark.util.e: java.lang.String h>;

        if $r2 != $r1 goto label47;

     label39:
        $i0 = virtualinvoke $r10.<org.json.JSONObject: int getInt(java.lang.String)>("st");

     label40:
        lookupswitch($i0)
        {
            case 0: goto label42;
            case 1: goto label45;
            case 2: goto label01;
            default: goto label41;
        };

     label41:
        return;

     label42:
        staticinvoke <com.donson.momark.b.q: void b(org.json.JSONObject,android.content.Context,com.donson.momark.a.r,com.donson.momark.a.u)>($r10, $r0, $r3, $r4);

     label43:
        return;

     label44:
        $r20 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" ReturnInfoParser.parseAdInfo 40005:init interface data format error.", $r20);

        $r22 = new com.donson.momark.a.a.y;

        specialinvoke $r22.<com.donson.momark.a.a.y: void <init>(int)>(40005);

        virtualinvoke $r4.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r22);

        return;

     label45:
        staticinvoke <com.donson.momark.b.q: void a(org.json.JSONObject,android.content.Context,com.donson.momark.a.r,com.donson.momark.a.u)>($r10, $r0, $r3, $r4);

     label46:
        return;

     label47:
        $r1 = <com.donson.momark.util.e: java.lang.String j>;

        if $r2 == $r1 goto label48;

        $r1 = <com.donson.momark.util.e: java.lang.String w>;

        if $r2 == $r1 goto label48;

        $r1 = <com.donson.momark.util.e: java.lang.String b>;

     label48:
        return;

        catch java.io.UnsupportedEncodingException from label03 to label04 with label20;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label20;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label20;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label20;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label20;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label20;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label20;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label20;
        catch org.json.JSONException from label03 to label04 with label36;
        catch org.json.JSONException from label05 to label06 with label36;
        catch org.json.JSONException from label07 to label08 with label36;
        catch org.json.JSONException from label10 to label11 with label36;
        catch org.json.JSONException from label12 to label13 with label36;
        catch org.json.JSONException from label14 to label15 with label36;
        catch org.json.JSONException from label16 to label17 with label36;
        catch org.json.JSONException from label18 to label19 with label36;
        catch org.json.JSONException from label22 to label23 with label32;
        catch org.json.JSONException from label24 to label25 with label32;
        catch org.json.JSONException from label26 to label27 with label32;
        catch org.json.JSONException from label28 to label29 with label32;
        catch org.json.JSONException from label30 to label31 with label32;
        catch java.lang.Exception from label22 to label23 with label37;
        catch java.lang.Exception from label24 to label25 with label37;
        catch java.lang.Exception from label26 to label27 with label37;
        catch java.lang.Exception from label28 to label29 with label37;
        catch java.lang.Exception from label30 to label31 with label37;
        catch java.io.UnsupportedEncodingException from label34 to label35 with label20;
        catch org.json.JSONException from label34 to label35 with label36;
        catch org.json.JSONException from label39 to label40 with label44;
        catch org.json.JSONException from label42 to label43 with label44;
        catch org.json.JSONException from label45 to label46 with label44;
    }

    private static void a(org.json.JSONObject, android.content.Context, com.donson.momark.a.r, com.donson.momark.a.u)
    {
        android.widget.ImageView $r15, $r25;
        com.donson.momark.a.a.y $r28;
        org.json.JSONObject $r0, $r10;
        boolean $z0;
        java.lang.Exception $r21;
        com.donson.momark.a.q $r8;
        java.lang.StringBuilder $r22, $r29;
        com.donson.momark.a.r $r2;
        com.donson.momark.a.u $r3;
        android.content.Context $r1;
        com.donson.momark.util.r $r17, $r27;
        java.util.HashMap $r6, $r23;
        java.util.ArrayList $r4, $r5, $r13, $r14, $r24;
        com.donson.momark.view.view.v $r16, $r26;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r11, $r12, $r20;
        com.donson.momark.a.a.a $r7;
        android.graphics.Bitmap $r19;
        java.lang.Object $r18;
        org.json.JSONArray $r9;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: com.donson.momark.a.r;

        $r3 := @parameter3: com.donson.momark.a.u;

     label01:
        $r7 = $r2.<com.donson.momark.a.r: com.donson.momark.a.a.a e>;

     label02:
        <com.donson.momark.b.q: com.donson.momark.a.a.a a> = $r7;

     label03:
        $r8 = $r2.<com.donson.momark.a.r: com.donson.momark.a.q j>;

     label04:
        <com.donson.momark.b.q: com.donson.momark.a.q b> = $r8;

     label05:
        staticinvoke <com.donson.momark.util.t: void d(java.lang.String,java.lang.String)>("ReturnInfoParser.parsePic", "===========================================parsePic");

        $r9 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("pic");

        $r10 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

        $r11 = virtualinvoke $r10.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("a");

        $i0 = virtualinvoke $r11.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

     label06:
        $i0 = $i0 + 1;

     label07:
        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $i0 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>("id");

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("gif");

     label08:
        if $z0 == 0 goto label59;

     label09:
        $r7 = $r2.<com.donson.momark.a.r: com.donson.momark.a.a.a e>;

        virtualinvoke $r7.<com.donson.momark.a.a.a: void a(boolean)>(1);

     label10:
        $r4 = new java.util.ArrayList;

        $r13 = $r4;

     label11:
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r9 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("con");

     label12:
        $r5 = new java.util.ArrayList;

        $r4 = $r5;

     label13:
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

     label14:
        $r14 = new java.util.ArrayList;

        $r5 = $r14;

     label15:
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

     label16:
        $r23 = new java.util.HashMap;

        $r6 = $r23;

     label17:
        specialinvoke $r23.<java.util.HashMap: void <init>()>();

     label18:
        $i1 = 0;

     label19:
        $i2 = virtualinvoke $r9.<org.json.JSONArray: int length()>();

     label20:
        if $i1 < $i2 goto label62;

        $r24 = new java.util.ArrayList;

        $r14 = $r24;

     label21:
        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

     label22:
        $i1 = 0;

     label23:
        $i2 = virtualinvoke $r9.<org.json.JSONArray: int length()>();

     label24:
        if $i1 < $i2 goto label70;

        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

        $r25 = new android.widget.ImageView;

        $r15 = $r25;

     label25:
        specialinvoke $r25.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        virtualinvoke $r8.<com.donson.momark.a.q: void e(android.widget.ImageView)>($r15);

     label26:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

        $r26 = new com.donson.momark.view.view.v;

        $r16 = $r26;

     label27:
        specialinvoke $r26.<com.donson.momark.view.view.v: void <init>(android.content.Context,int)>($r1, $i0);

        virtualinvoke $r8.<com.donson.momark.a.q: void a(com.donson.momark.view.view.v)>($r16);

        $r7 = $r2.<com.donson.momark.a.r: com.donson.momark.a.a.a e>;

        $z0 = virtualinvoke $r7.<com.donson.momark.a.a.a: boolean c()>();

     label28:
        if $z0 != 0 goto label73;

        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

        $r27 = new com.donson.momark.util.r;

        $r17 = $r27;

     label29:
        specialinvoke $r27.<com.donson.momark.util.r: void <init>()>();

        $r18 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (java.lang.String) $r18;

        $r19 = virtualinvoke $r17.<com.donson.momark.util.r: android.graphics.Bitmap a(java.lang.String,int,com.donson.momark.a.u)>($r11, 6, $r3);

        virtualinvoke $r8.<com.donson.momark.a.q: void d(android.graphics.Bitmap)>($r19);

     label30:
        $i1 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>("err");

        $i2 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>("st");

        $i3 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>("nx");

        $i4 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>("t");

        $r11 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("link");

        $r12 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("s");

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean isNull(java.lang.String)>("z");

     label31:
        if $z0 != 0 goto label35;

     label32:
        $r20 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("z");

     label33:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label34:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void e(java.lang.String)>($r20);

     label35:
        $r2.<com.donson.momark.a.r: boolean f> = 0;

     label36:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label37:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void a(int)>($i1);

     label38:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label39:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void d(int)>($i0);

     label40:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label41:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void g(int)>($i2);

     label42:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label43:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void e(int)>($i3);

     label44:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label45:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void h(int)>($i4);

     label46:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label47:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void a(java.lang.String)>($r12);

     label48:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label49:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void e(java.util.List)>($r13);

     label50:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label51:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void d(java.util.List)>($r4);

     label52:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label53:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void d(java.lang.String)>($r11);

     label54:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

     label55:
        virtualinvoke $r8.<com.donson.momark.a.q: void a(java.util.List)>($r5);

     label56:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

     label57:
        virtualinvoke $r8.<com.donson.momark.a.q: void a(java.util.Map)>($r6);

     label58:
        return;

     label59:
        $r7 = $r2.<com.donson.momark.a.r: com.donson.momark.a.a.a e>;

        virtualinvoke $r7.<com.donson.momark.a.a.a: void a(boolean)>(0);

     label60:
        goto label10;

     label61:
        $r21 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" ReturnInfoParser.parsePic 40006:advertise type is pic, data parse error.", $r21);

        $r28 = new com.donson.momark.a.a.y;

        specialinvoke $r28.<com.donson.momark.a.a.y: void <init>(int)>(40006);

        virtualinvoke $r3.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r28);

        return;

     label62:
        $r10 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i1);

        $r11 = virtualinvoke $r10.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("img");

     label63:
        $r25 = new android.widget.ImageView;

        $r15 = $r25;

     label64:
        specialinvoke $r25.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

     label65:
        $r27 = new com.donson.momark.util.r;

        $r17 = $r27;

     label66:
        specialinvoke $r27.<com.donson.momark.util.r: void <init>()>();

        $r19 = virtualinvoke $r17.<com.donson.momark.util.r: android.graphics.Bitmap a(java.lang.String,int,com.donson.momark.a.u)>($r11, 6, $r3);

        virtualinvoke $r15.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r19);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r15);

     label67:
        $r29 = new java.lang.StringBuilder;

        $r22 = $r29;

     label68:
        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("--------------------imgStr=");

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.donson.momark.util.t: void d(java.lang.String,java.lang.String)>("donson.momark", $r12);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r15);

     label69:
        $i1 = $i1 + 1;

        goto label19;

     label70:
        $r25 = new android.widget.ImageView;

        $r15 = $r25;

     label71:
        specialinvoke $r25.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

     label72:
        $i1 = $i1 + 1;

        goto label23;

     label73:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

     label74:
        $r16 = virtualinvoke $r8.<com.donson.momark.a.q: com.donson.momark.view.view.v h()>();

        $r18 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (java.lang.String) $r18;

        virtualinvoke $r16.<com.donson.momark.view.view.v: void a(int,java.lang.String,com.donson.momark.a.u)>($i0, $r11, $r3);

     label75:
        goto label30;

        catch java.lang.Exception from label01 to label02 with label61;
        catch java.lang.Exception from label03 to label04 with label61;
        catch java.lang.Exception from label05 to label06 with label61;
        catch java.lang.Exception from label07 to label08 with label61;
        catch java.lang.Exception from label09 to label10 with label61;
        catch java.lang.Exception from label11 to label12 with label61;
        catch java.lang.Exception from label13 to label14 with label61;
        catch java.lang.Exception from label15 to label16 with label61;
        catch java.lang.Exception from label17 to label18 with label61;
        catch java.lang.Exception from label19 to label20 with label61;
        catch java.lang.Exception from label21 to label22 with label61;
        catch java.lang.Exception from label23 to label24 with label61;
        catch java.lang.Exception from label25 to label26 with label61;
        catch java.lang.Exception from label27 to label28 with label61;
        catch java.lang.Exception from label29 to label31 with label61;
        catch java.lang.Exception from label32 to label33 with label61;
        catch java.lang.Exception from label34 to label36 with label61;
        catch java.lang.Exception from label37 to label38 with label61;
        catch java.lang.Exception from label39 to label40 with label61;
        catch java.lang.Exception from label41 to label42 with label61;
        catch java.lang.Exception from label43 to label44 with label61;
        catch java.lang.Exception from label45 to label46 with label61;
        catch java.lang.Exception from label47 to label48 with label61;
        catch java.lang.Exception from label49 to label50 with label61;
        catch java.lang.Exception from label51 to label52 with label61;
        catch java.lang.Exception from label53 to label54 with label61;
        catch java.lang.Exception from label55 to label56 with label61;
        catch java.lang.Exception from label57 to label58 with label61;
        catch java.lang.Exception from label59 to label60 with label61;
        catch java.lang.Exception from label62 to label63 with label61;
        catch java.lang.Exception from label64 to label65 with label61;
        catch java.lang.Exception from label66 to label67 with label61;
        catch java.lang.Exception from label68 to label69 with label61;
        catch java.lang.Exception from label71 to label72 with label61;
        catch java.lang.Exception from label74 to label75 with label61;
    }

    private static void b(org.json.JSONObject, android.content.Context, com.donson.momark.a.r, com.donson.momark.a.u)
    {
        android.widget.ImageView $r16, $r27;
        com.donson.momark.a.a.y $r30;
        org.json.JSONObject $r0, $r11;
        boolean $z0;
        java.lang.CharSequence $r21;
        java.lang.Exception $r24;
        com.donson.momark.a.q $r8;
        android.widget.TextView $r19, $r22, $r29;
        com.donson.momark.a.r $r2;
        com.donson.momark.a.u $r3;
        android.content.Context $r1;
        com.donson.momark.util.r $r17, $r28;
        java.util.HashMap $r6, $r26;
        java.util.ArrayList $r4, $r5, $r10, $r14, $r25;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r12, $r13, $r15, $r23;
        com.donson.momark.a.a.a $r7;
        android.graphics.Bitmap $r18;
        java.lang.Object $r20;
        org.json.JSONArray $r9;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: com.donson.momark.a.r;

        $r3 := @parameter3: com.donson.momark.a.u;

        $r7 = $r2.<com.donson.momark.a.r: com.donson.momark.a.a.a e>;

        <com.donson.momark.b.q: com.donson.momark.a.a.a a> = $r7;

        $r8 = $r2.<com.donson.momark.a.r: com.donson.momark.a.q j>;

        <com.donson.momark.b.q: com.donson.momark.a.q b> = $r8;

     label01:
        staticinvoke <com.donson.momark.util.t: void d(java.lang.String,java.lang.String)>("ReturnInfoParser.parseTextPic", "===========================================parseTextPic");

        $r9 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("at");

     label02:
        $r14 = new java.util.ArrayList;

        $r10 = $r14;

     label03:
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r11 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

        $r12 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("a");

        $r11 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

        $r13 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("b");

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r9 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("pic");

     label04:
        $r4 = new java.util.ArrayList;

        $r14 = $r4;

     label05:
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r11 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

        $r12 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("l");

        $r11 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

        $r13 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("r");

        $r11 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

        $r15 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("b");

        $r9 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("con");

     label06:
        $r5 = new java.util.ArrayList;

        $r4 = $r5;

     label07:
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

     label08:
        $r25 = new java.util.ArrayList;

        $r5 = $r25;

     label09:
        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

     label10:
        $r26 = new java.util.HashMap;

        $r6 = $r26;

     label11:
        specialinvoke $r26.<java.util.HashMap: void <init>()>();

        $i0 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>("id");

     label12:
        $i1 = 0;

     label13:
        $i2 = virtualinvoke $r9.<org.json.JSONArray: int length()>();

     label14:
        if $i1 < $i2 goto label65;

     label15:
        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r12);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

     label16:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

        $r27 = new android.widget.ImageView;

        $r16 = $r27;

     label17:
        specialinvoke $r27.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        virtualinvoke $r8.<com.donson.momark.a.q: void a(android.widget.ImageView)>($r16);

     label18:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

        $r27 = new android.widget.ImageView;

        $r16 = $r27;

     label19:
        specialinvoke $r27.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        virtualinvoke $r8.<com.donson.momark.a.q: void d(android.widget.ImageView)>($r16);

     label20:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

        $r27 = new android.widget.ImageView;

        $r16 = $r27;

     label21:
        specialinvoke $r27.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        virtualinvoke $r8.<com.donson.momark.a.q: void e(android.widget.ImageView)>($r16);

     label22:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

        $r28 = new com.donson.momark.util.r;

        $r17 = $r28;

     label23:
        specialinvoke $r28.<com.donson.momark.util.r: void <init>()>();

        $r18 = virtualinvoke $r17.<com.donson.momark.util.r: android.graphics.Bitmap a(java.lang.String,int,com.donson.momark.a.u)>($r12, 7, $r3);

        virtualinvoke $r8.<com.donson.momark.a.q: void a(android.graphics.Bitmap)>($r18);

     label24:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

        $r28 = new com.donson.momark.util.r;

        $r17 = $r28;

     label25:
        specialinvoke $r28.<com.donson.momark.util.r: void <init>()>();

        $r18 = virtualinvoke $r17.<com.donson.momark.util.r: android.graphics.Bitmap a(java.lang.String,int,com.donson.momark.a.u)>($r15, 6, $r3);

        virtualinvoke $r8.<com.donson.momark.a.q: void d(android.graphics.Bitmap)>($r18);

     label26:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

        $r28 = new com.donson.momark.util.r;

        $r17 = $r28;

     label27:
        specialinvoke $r28.<com.donson.momark.util.r: void <init>()>();

        $r18 = virtualinvoke $r17.<com.donson.momark.util.r: android.graphics.Bitmap a(java.lang.String,int,com.donson.momark.a.u)>($r13, 7, $r3);

        virtualinvoke $r8.<com.donson.momark.a.q: void e(android.graphics.Bitmap)>($r18);

        $i1 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>("err");

        $i2 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>("nx");

        $i3 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>("st");

        $i4 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>("t");

        $r12 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("s");

        $r13 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("link");

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean isNull(java.lang.String)>("z");

     label28:
        if $z0 != 0 goto label32;

     label29:
        $r15 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("z");

     label30:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label31:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void e(java.lang.String)>($r15);

     label32:
        $r22 = new android.widget.TextView;

        $r19 = $r22;

     label33:
        specialinvoke $r22.<android.widget.TextView: void <init>(android.content.Context)>($r1);

        $r20 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        $r21 = (java.lang.CharSequence) $r20;

        virtualinvoke $r19.<android.widget.TextView: void setText(java.lang.CharSequence)>($r21);

     label34:
        $r29 = new android.widget.TextView;

        $r22 = $r29;

     label35:
        specialinvoke $r29.<android.widget.TextView: void <init>(android.content.Context)>($r1);

        $r20 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(1);

        $r21 = (java.lang.CharSequence) $r20;

        virtualinvoke $r22.<android.widget.TextView: void setText(java.lang.CharSequence)>($r21);

        $r2.<com.donson.momark.a.r: boolean f> = 0;

     label36:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label37:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void a(int)>($i1);

     label38:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label39:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void d(int)>($i0);

     label40:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label41:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void e(int)>($i2);

     label42:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label43:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void g(int)>($i3);

     label44:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label45:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void a(java.util.List)>($r10);

     label46:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label47:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void e(java.util.List)>($r14);

     label48:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label49:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void d(java.lang.String)>($r13);

     label50:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label51:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void h(int)>($i4);

     label52:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label53:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void a(java.lang.String)>($r12);

     label54:
        $r7 = <com.donson.momark.b.q: com.donson.momark.a.a.a a>;

     label55:
        virtualinvoke $r7.<com.donson.momark.a.a.a: void d(java.util.List)>($r4);

     label56:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

     label57:
        virtualinvoke $r8.<com.donson.momark.a.q: void a(android.widget.TextView)>($r19);

     label58:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

     label59:
        virtualinvoke $r8.<com.donson.momark.a.q: void d(android.widget.TextView)>($r22);

     label60:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

     label61:
        virtualinvoke $r8.<com.donson.momark.a.q: void a(java.util.List)>($r5);

     label62:
        $r8 = <com.donson.momark.b.q: com.donson.momark.a.q b>;

     label63:
        virtualinvoke $r8.<com.donson.momark.a.q: void a(java.util.Map)>($r6);

     label64:
        return;

     label65:
        $r11 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i1);

        $r23 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("img");

     label66:
        $r27 = new android.widget.ImageView;

        $r16 = $r27;

     label67:
        specialinvoke $r27.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        $r17 = staticinvoke <com.donson.momark.util.r: com.donson.momark.util.r a()>();

        $r18 = virtualinvoke $r17.<com.donson.momark.util.r: android.graphics.Bitmap a(java.lang.String,int,com.donson.momark.a.u)>($r23, 6, $r3);

        virtualinvoke $r16.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r18);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r23);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r16);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r16);

     label68:
        $i1 = $i1 + 1;

        goto label13;

     label69:
        $r24 := @caughtexception;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.Throwable)>(" ReturnInfoParser.parseTextPic 40007\uff1aadvertise type is textpic, data parse error.", $r24);

        $r30 = new com.donson.momark.a.a.y;

        specialinvoke $r30.<com.donson.momark.a.a.y: void <init>(int)>(40007);

        virtualinvoke $r3.<com.donson.momark.a.u: void a(com.donson.momark.a.a.y)>($r30);

        return;

        catch java.lang.Exception from label01 to label02 with label69;
        catch java.lang.Exception from label03 to label04 with label69;
        catch java.lang.Exception from label05 to label06 with label69;
        catch java.lang.Exception from label07 to label08 with label69;
        catch java.lang.Exception from label09 to label10 with label69;
        catch java.lang.Exception from label11 to label12 with label69;
        catch java.lang.Exception from label13 to label14 with label69;
        catch java.lang.Exception from label15 to label16 with label69;
        catch java.lang.Exception from label17 to label18 with label69;
        catch java.lang.Exception from label19 to label20 with label69;
        catch java.lang.Exception from label21 to label22 with label69;
        catch java.lang.Exception from label23 to label24 with label69;
        catch java.lang.Exception from label25 to label26 with label69;
        catch java.lang.Exception from label27 to label28 with label69;
        catch java.lang.Exception from label29 to label30 with label69;
        catch java.lang.Exception from label31 to label32 with label69;
        catch java.lang.Exception from label33 to label34 with label69;
        catch java.lang.Exception from label35 to label36 with label69;
        catch java.lang.Exception from label37 to label38 with label69;
        catch java.lang.Exception from label39 to label40 with label69;
        catch java.lang.Exception from label41 to label42 with label69;
        catch java.lang.Exception from label43 to label44 with label69;
        catch java.lang.Exception from label45 to label46 with label69;
        catch java.lang.Exception from label47 to label48 with label69;
        catch java.lang.Exception from label49 to label50 with label69;
        catch java.lang.Exception from label51 to label52 with label69;
        catch java.lang.Exception from label53 to label54 with label69;
        catch java.lang.Exception from label55 to label56 with label69;
        catch java.lang.Exception from label57 to label58 with label69;
        catch java.lang.Exception from label59 to label60 with label69;
        catch java.lang.Exception from label61 to label62 with label69;
        catch java.lang.Exception from label63 to label64 with label69;
        catch java.lang.Exception from label65 to label66 with label69;
        catch java.lang.Exception from label67 to label68 with label69;
    }
}
