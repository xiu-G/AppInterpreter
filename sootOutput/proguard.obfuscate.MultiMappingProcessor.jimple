public class proguard.obfuscate.MultiMappingProcessor extends java.lang.Object implements proguard.obfuscate.MappingProcessor
{
    private final proguard.obfuscate.MappingProcessor[] mappingProcessors;

    public void <init>(proguard.obfuscate.MappingProcessor[])
    {
        proguard.obfuscate.MappingProcessor[] $r1;
        proguard.obfuscate.MultiMappingProcessor r0;

        r0 := @this: proguard.obfuscate.MultiMappingProcessor;

        $r1 := @parameter0: proguard.obfuscate.MappingProcessor[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.obfuscate.MultiMappingProcessor: proguard.obfuscate.MappingProcessor[] mappingProcessors> = $r1;

        return;
    }

    public boolean processClassMapping(java.lang.String, java.lang.String)
    {
        proguard.obfuscate.MappingProcessor[] $r3;
        proguard.obfuscate.MultiMappingProcessor r0;
        proguard.obfuscate.MappingProcessor $r4;
        int $i0, $i1;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: proguard.obfuscate.MultiMappingProcessor;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = 0;

        $z1 = 0;

     label1:
        $r3 = r0.<proguard.obfuscate.MultiMappingProcessor: proguard.obfuscate.MappingProcessor[] mappingProcessors>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label2;

        $r3 = r0.<proguard.obfuscate.MultiMappingProcessor: proguard.obfuscate.MappingProcessor[] mappingProcessors>;

        $r4 = $r3[$i0];

        $z0 = interfaceinvoke $r4.<proguard.obfuscate.MappingProcessor: boolean processClassMapping(java.lang.String,java.lang.String)>($r1, $r2);

        $z1 = $z1 | $z0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $z1;
    }

    public void processFieldMapping(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        proguard.obfuscate.MappingProcessor[] $r5;
        proguard.obfuscate.MultiMappingProcessor r0;
        proguard.obfuscate.MappingProcessor $r6;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: proguard.obfuscate.MultiMappingProcessor;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $i0 = 0;

     label1:
        $r5 = r0.<proguard.obfuscate.MultiMappingProcessor: proguard.obfuscate.MappingProcessor[] mappingProcessors>;

        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label2;

        $r5 = r0.<proguard.obfuscate.MultiMappingProcessor: proguard.obfuscate.MappingProcessor[] mappingProcessors>;

        $r6 = $r5[$i0];

        interfaceinvoke $r6.<proguard.obfuscate.MappingProcessor: void processFieldMapping(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void processMethodMapping(java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        proguard.obfuscate.MappingProcessor[] $r6;
        proguard.obfuscate.MultiMappingProcessor r0;
        proguard.obfuscate.MappingProcessor $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2, $r3, $r4, $r5;

        r0 := @this: proguard.obfuscate.MultiMappingProcessor;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.lang.String;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: java.lang.String;

        $r5 := @parameter6: java.lang.String;

        $i2 = 0;

     label1:
        $r6 = r0.<proguard.obfuscate.MultiMappingProcessor: proguard.obfuscate.MappingProcessor[] mappingProcessors>;

        $i3 = lengthof $r6;

        if $i2 >= $i3 goto label2;

        $r6 = r0.<proguard.obfuscate.MultiMappingProcessor: proguard.obfuscate.MappingProcessor[] mappingProcessors>;

        $r7 = $r6[$i2];

        interfaceinvoke $r7.<proguard.obfuscate.MappingProcessor: void processMethodMapping(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $i0, $i1, $r2, $r3, $r4, $r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }
}
