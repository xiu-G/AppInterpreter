public abstract class com.parse.CountCallback extends com.parse.k
{

    public void <init>()
    {
        com.parse.CountCallback r0;

        r0 := @this: com.parse.CountCallback;

        specialinvoke r0.<com.parse.k: void <init>()>();

        return;
    }

    public abstract void done(int, com.parse.ParseException);

    void internalDone(java.lang.Integer, com.parse.ParseException)
    {
        com.parse.ParseException $r2;
        int $i0;
        com.parse.CountCallback r0;
        java.lang.Integer $r1;

        r0 := @this: com.parse.CountCallback;

        $r1 := @parameter0: java.lang.Integer;

        $r2 := @parameter1: com.parse.ParseException;

        if $r2 != null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.parse.CountCallback: void done(int,com.parse.ParseException)>($i0, null);

        return;

     label1:
        $i0 = -1;

        virtualinvoke r0.<com.parse.CountCallback: void done(int,com.parse.ParseException)>($i0, $r2);

        return;
    }

    volatile void internalDone(java.lang.Object, com.parse.ParseException)
    {
        com.parse.ParseException $r1;
        com.parse.CountCallback r0;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @this: com.parse.CountCallback;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.parse.ParseException;

        $r3 = (java.lang.Integer) $r2;

        virtualinvoke r0.<com.parse.CountCallback: void internalDone(java.lang.Integer,com.parse.ParseException)>($r3, $r1);

        return;
    }
}
