class cs.gson.TypeAdapter$1 extends cs.gson.TypeAdapter
{
    final cs.gson.TypeAdapter this$0;

    void <init>(cs.gson.TypeAdapter)
    {
        cs.gson.TypeAdapter $r1;
        cs.gson.TypeAdapter$1 r0;

        r0 := @this: cs.gson.TypeAdapter$1;

        $r1 := @parameter0: cs.gson.TypeAdapter;

        r0.<cs.gson.TypeAdapter$1: cs.gson.TypeAdapter this$0> = $r1;

        specialinvoke r0.<cs.gson.TypeAdapter: void <init>()>();

        return;
    }

    public java.lang.Object read(cs.gson.stream.JsonReader) throws java.io.IOException
    {
        cs.gson.TypeAdapter $r4;
        cs.gson.TypeAdapter$1 r0;
        java.lang.Object $r5;
        cs.gson.stream.JsonToken $r2, $r3;
        cs.gson.stream.JsonReader $r1;

        r0 := @this: cs.gson.TypeAdapter$1;

        $r1 := @parameter0: cs.gson.stream.JsonReader;

        $r3 = virtualinvoke $r1.<cs.gson.stream.JsonReader: cs.gson.stream.JsonToken peek()>();

        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken NULL>;

        if $r3 != $r2 goto label1;

        virtualinvoke $r1.<cs.gson.stream.JsonReader: void nextNull()>();

        return null;

     label1:
        $r4 = r0.<cs.gson.TypeAdapter$1: cs.gson.TypeAdapter this$0>;

        $r5 = virtualinvoke $r4.<cs.gson.TypeAdapter: java.lang.Object read(cs.gson.stream.JsonReader)>($r1);

        return $r5;
    }

    public void write(cs.gson.stream.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        cs.gson.TypeAdapter $r3;
        cs.gson.TypeAdapter$1 r0;
        java.lang.Object r2;
        cs.gson.stream.JsonWriter $r1;

        r0 := @this: cs.gson.TypeAdapter$1;

        $r1 := @parameter0: cs.gson.stream.JsonWriter;

        r2 := @parameter1: java.lang.Object;

        if r2 != null goto label1;

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter nullValue()>();

        return;

     label1:
        $r3 = r0.<cs.gson.TypeAdapter$1: cs.gson.TypeAdapter this$0>;

        virtualinvoke $r3.<cs.gson.TypeAdapter: void write(cs.gson.stream.JsonWriter,java.lang.Object)>($r1, r2);

        return;
    }
}
