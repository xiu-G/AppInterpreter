public class org.kxml2.kdom.Document extends org.kxml2.kdom.Node
{
    java.lang.String encoding;
    protected int rootIndex;
    java.lang.Boolean standalone;

    public void <init>()
    {
        int $i0;
        org.kxml2.kdom.Document r0;

        r0 := @this: org.kxml2.kdom.Document;

        specialinvoke r0.<org.kxml2.kdom.Node: void <init>()>();

        $i0 = -1;

        r0.<org.kxml2.kdom.Document: int rootIndex> = $i0;

        return;
    }

    public void addChild(int, int, java.lang.Object)
    {
        org.kxml2.kdom.Document r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;

        r0 := @this: org.kxml2.kdom.Document;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

        if $i1 != 2 goto label2;

        r0.<org.kxml2.kdom.Document: int rootIndex> = $i0;

     label1:
        specialinvoke r0.<org.kxml2.kdom.Node: void addChild(int,int,java.lang.Object)>($i0, $i1, $r1);

        return;

     label2:
        $i2 = r0.<org.kxml2.kdom.Document: int rootIndex>;

        if $i2 < $i0 goto label1;

        $i2 = r0.<org.kxml2.kdom.Document: int rootIndex>;

        $i2 = $i2 + 1;

        r0.<org.kxml2.kdom.Document: int rootIndex> = $i2;

        goto label1;
    }

    public java.lang.String getEncoding()
    {
        org.kxml2.kdom.Document r0;
        java.lang.String r1;

        r0 := @this: org.kxml2.kdom.Document;

        r1 = r0.<org.kxml2.kdom.Document: java.lang.String encoding>;

        return r1;
    }

    public java.lang.String getName()
    {
        org.kxml2.kdom.Document r0;

        r0 := @this: org.kxml2.kdom.Document;

        return "#document";
    }

    public org.kxml2.kdom.Element getRootElement()
    {
        org.kxml2.kdom.Document r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.RuntimeException $r3;
        org.kxml2.kdom.Element $r2;

        r0 := @this: org.kxml2.kdom.Document;

        $i0 = r0.<org.kxml2.kdom.Document: int rootIndex>;

        $i1 = -1;

        if $i0 != $i1 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Document has no root element!");

        throw $r3;

     label1:
        $i0 = r0.<org.kxml2.kdom.Document: int rootIndex>;

        $r1 = virtualinvoke r0.<org.kxml2.kdom.Document: java.lang.Object getChild(int)>($i0);

        $r2 = (org.kxml2.kdom.Element) $r1;

        return $r2;
    }

    public java.lang.Boolean getStandalone()
    {
        java.lang.Boolean r1;
        org.kxml2.kdom.Document r0;

        r0 := @this: org.kxml2.kdom.Document;

        r1 = r0.<org.kxml2.kdom.Document: java.lang.Boolean standalone>;

        return r1;
    }

    public void parse(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.kxml2.kdom.Document r0;
        int $i0;
        java.lang.Boolean $r4;
        java.lang.Object $r3;
        java.lang.String $r2;
        java.lang.RuntimeException $r5;
        org.xmlpull.v1.XmlPullParser $r1;

        r0 := @this: org.kxml2.kdom.Document;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(0, null, null);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextToken()>();

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getInputEncoding()>();

        r0.<org.kxml2.kdom.Document: java.lang.String encoding> = $r2;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)>("http://xmlpull.org/v1/doc/properties.html#xmldecl-standalone");

        $r4 = (java.lang.Boolean) $r3;

        r0.<org.kxml2.kdom.Document: java.lang.Boolean standalone> = $r4;

        specialinvoke r0.<org.kxml2.kdom.Node: void parse(org.xmlpull.v1.XmlPullParser)>($r1);

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 1 goto label1;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Document end expected!");

        throw $r5;

     label1:
        return;
    }

    public void removeChild(int)
    {
        org.kxml2.kdom.Document r0;
        int $i0, $i1, $i2;

        r0 := @this: org.kxml2.kdom.Document;

        $i0 := @parameter0: int;

        $i1 = r0.<org.kxml2.kdom.Document: int rootIndex>;

        if $i0 != $i1 goto label2;

        $i1 = -1;

        r0.<org.kxml2.kdom.Document: int rootIndex> = $i1;

     label1:
        specialinvoke r0.<org.kxml2.kdom.Node: void removeChild(int)>($i0);

        return;

     label2:
        $i1 = r0.<org.kxml2.kdom.Document: int rootIndex>;

        if $i0 >= $i1 goto label1;

        $i1 = r0.<org.kxml2.kdom.Document: int rootIndex>;

        $i2 = -1;

        $i1 = $i1 + $i2;

        r0.<org.kxml2.kdom.Document: int rootIndex> = $i1;

        goto label1;
    }

    public void setEncoding(java.lang.String)
    {
        org.kxml2.kdom.Document r0;
        java.lang.String $r1;

        r0 := @this: org.kxml2.kdom.Document;

        $r1 := @parameter0: java.lang.String;

        r0.<org.kxml2.kdom.Document: java.lang.String encoding> = $r1;

        return;
    }

    public void setStandalone(java.lang.Boolean)
    {
        java.lang.Boolean $r1;
        org.kxml2.kdom.Document r0;

        r0 := @this: org.kxml2.kdom.Document;

        $r1 := @parameter0: java.lang.Boolean;

        r0.<org.kxml2.kdom.Document: java.lang.Boolean standalone> = $r1;

        return;
    }

    public void write(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        org.kxml2.kdom.Document r0;
        java.lang.Boolean $r3;
        java.lang.String $r2;
        org.xmlpull.v1.XmlSerializer $r1;

        r0 := @this: org.kxml2.kdom.Document;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<org.kxml2.kdom.Document: java.lang.String encoding>;

        $r3 = r0.<org.kxml2.kdom.Document: java.lang.Boolean standalone>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($r2, $r3);

        virtualinvoke r0.<org.kxml2.kdom.Document: void writeChildren(org.xmlpull.v1.XmlSerializer)>($r1);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }
}
