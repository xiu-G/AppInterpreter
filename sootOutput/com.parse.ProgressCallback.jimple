public abstract class com.parse.ProgressCallback extends com.parse.k
{
    java.lang.Integer maxProgressSoFar;

    public void <init>()
    {
        com.parse.ProgressCallback r0;
        java.lang.Integer $r1;

        r0 := @this: com.parse.ProgressCallback;

        specialinvoke r0.<com.parse.k: void <init>()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r0.<com.parse.ProgressCallback: java.lang.Integer maxProgressSoFar> = $r1;

        return;
    }

    public abstract void done(java.lang.Integer);

    final void internalDone(java.lang.Integer, com.parse.ParseException)
    {
        com.parse.ProgressCallback r0;
        com.parse.ParseException $r2;
        int $i0, $i1;
        java.lang.Integer $r1, $r3;

        r0 := @this: com.parse.ProgressCallback;

        $r1 := @parameter0: java.lang.Integer;

        $r2 := @parameter1: com.parse.ParseException;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $r3 = r0.<com.parse.ProgressCallback: java.lang.Integer maxProgressSoFar>;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        if $i0 <= $i1 goto label1;

        r0.<com.parse.ProgressCallback: java.lang.Integer maxProgressSoFar> = $r1;

        virtualinvoke r0.<com.parse.ProgressCallback: void done(java.lang.Integer)>($r1);

     label1:
        return;
    }

    volatile void internalDone(java.lang.Object, com.parse.ParseException)
    {
        com.parse.ProgressCallback r0;
        com.parse.ParseException $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @this: com.parse.ProgressCallback;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: com.parse.ParseException;

        $r3 = (java.lang.Integer) $r2;

        virtualinvoke r0.<com.parse.ProgressCallback: void internalDone(java.lang.Integer,com.parse.ParseException)>($r3, $r1);

        return;
    }
}
