public abstract class com.mobclix.android.sdk.MobclixContactsCursorEntityIterator extends java.lang.Object implements com.mobclix.android.sdk.MobclixContactsEntityIterator
{
    private final android.database.Cursor mCursor;
    private boolean mIsClosed;

    public void <init>(android.database.Cursor)
    {
        com.mobclix.android.sdk.MobclixContactsCursorEntityIterator r0;
        android.database.Cursor $r1;

        r0 := @this: com.mobclix.android.sdk.MobclixContactsCursorEntityIterator;

        $r1 := @parameter0: android.database.Cursor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: boolean mIsClosed> = 0;

        r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: android.database.Cursor mCursor> = $r1;

        $r1 = r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: android.database.Cursor mCursor>;

        interfaceinvoke $r1.<android.database.Cursor: boolean moveToFirst()>();

        return;
    }

    public final void close()
    {
        java.lang.IllegalStateException $r1;
        com.mobclix.android.sdk.MobclixContactsCursorEntityIterator r0;
        boolean $z0;
        android.database.Cursor $r2;

        r0 := @this: com.mobclix.android.sdk.MobclixContactsCursorEntityIterator;

        $z0 = r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: boolean mIsClosed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closing when already closed");

        throw $r1;

     label1:
        r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: boolean mIsClosed> = 1;

        $r2 = r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: android.database.Cursor mCursor>;

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return;
    }

    public abstract android.content.Entity getEntityAndIncrementCursor(android.database.Cursor) throws android.os.RemoteException;

    public final boolean hasNext()
    {
        java.lang.IllegalStateException $r1;
        com.mobclix.android.sdk.MobclixContactsCursorEntityIterator r0;
        boolean $z0;
        android.database.Cursor $r2;

        r0 := @this: com.mobclix.android.sdk.MobclixContactsCursorEntityIterator;

        $z0 = r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: boolean mIsClosed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("calling hasNext() when the iterator is closed");

        throw $r1;

     label1:
        $r2 = r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: android.database.Cursor mCursor>;

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean isAfterLast()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public android.content.Entity next()
    {
        java.lang.Throwable r1;
        android.content.Entity $r4;
        java.lang.IllegalStateException $r2;
        com.mobclix.android.sdk.MobclixContactsCursorEntityIterator r0;
        java.lang.RuntimeException $r5;
        boolean $z0;
        android.database.Cursor $r3;

        r0 := @this: com.mobclix.android.sdk.MobclixContactsCursorEntityIterator;

        $z0 = r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: boolean mIsClosed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("calling next() when the iterator is closed");

        throw $r2;

     label1:
        $z0 = virtualinvoke r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("you may only call next() if hasNext() is true");

        throw $r2;

     label2:
        $r3 = r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: android.database.Cursor mCursor>;

     label3:
        $r4 = virtualinvoke r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>($r3);

     label4:
        return $r4;

     label5:
        r1 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("caught a remote exception, this process will die soon", r1);

        throw $r5;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public volatile java.lang.Object next()
    {
        android.content.Entity $r1;
        com.mobclix.android.sdk.MobclixContactsCursorEntityIterator r0;

        r0 := @this: com.mobclix.android.sdk.MobclixContactsCursorEntityIterator;

        $r1 = virtualinvoke r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: android.content.Entity next()>();

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        com.mobclix.android.sdk.MobclixContactsCursorEntityIterator r0;

        r0 := @this: com.mobclix.android.sdk.MobclixContactsCursorEntityIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("remove not supported by EntityIterators");

        throw $r1;
    }

    public final void reset()
    {
        java.lang.IllegalStateException $r1;
        com.mobclix.android.sdk.MobclixContactsCursorEntityIterator r0;
        boolean $z0;
        android.database.Cursor $r2;

        r0 := @this: com.mobclix.android.sdk.MobclixContactsCursorEntityIterator;

        $z0 = r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: boolean mIsClosed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("calling reset() when the iterator is closed");

        throw $r1;

     label1:
        $r2 = r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: android.database.Cursor mCursor>;

        interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

        return;
    }
}
