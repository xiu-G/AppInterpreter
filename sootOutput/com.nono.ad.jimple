final class com.nono.ad extends android.os.AsyncTask
{
    final com.nono.TheConnect a;

    void <init>(com.nono.TheConnect)
    {
        com.nono.ad r0;
        com.nono.TheConnect $r1;

        r0 := @this: com.nono.ad;

        $r1 := @parameter0: com.nono.TheConnect;

        r0.<com.nono.ad: com.nono.TheConnect a> = $r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    private transient java.lang.Boolean a()
    {
        byte[] $r16;
        java.lang.IllegalStateException $r31;
        java.lang.Integer $r10;
        com.nono.c $r9;
        com.nono.d $r20, $r29;
        com.nono.ad r0;
        boolean $z0;
        com.nono.af $r5;
        org.apache.http.HttpEntity $r11;
        com.nono.TheConnect $r1, $r8;
        java.io.FileNotFoundException $r30;
        java.util.List $r22;
        java.lang.StringBuilder $r19, $r28;
        java.lang.Throwable $r17, $r23, $r24;
        android.content.Context $r2;
        java.lang.Object[] $r6;
        android.widget.Toast $r21;
        int $i0, $i1;
        java.lang.Boolean $r4;
        java.lang.String $r3, $r7;
        java.io.FileOutputStream $r14, $r26;
        java.io.IOException $r32;
        java.io.FileInputStream $r18, $r27;
        java.io.File $r12, $r13, $r25;
        java.io.InputStream $r15;

        r0 := @this: com.nono.ad;

        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $r3 = staticinvoke <com.nono.Tools: java.lang.String getADS_ID(android.content.Context)>($r2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 1 goto label01;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r4;

     label01:
        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $z0 = staticinvoke <com.nono.Tools: boolean isConnect(android.content.Context)>($r2);

        if $z0 != 0 goto label02;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r4;

     label02:
        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $r5 = staticinvoke <com.nono.af: com.nono.af a(android.content.Context)>($r2);

        $r3 = $r5.<com.nono.af: java.lang.String j>;

        $r6 = newarray (java.lang.Object)[4];

        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $r7 = staticinvoke <com.nono.Tools: java.lang.String getADS_ID(android.content.Context)>($r2);

        $r6[0] = $r7;

        $r6[1] = "1";

        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $r1 = staticinvoke <com.nono.TheConnect: com.nono.TheConnect getInstance(android.content.Context)>($r2);

        $r8 = r0.<com.nono.ad: com.nono.TheConnect a>;

        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r8);

        $r9 = virtualinvoke $r1.<com.nono.TheConnect: com.nono.c getAdManager(android.content.Context)>($r2);

        $i0 = virtualinvoke $r9.<com.nono.c: int c()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[2] = $r10;

        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $r7 = staticinvoke <com.nono.Tools: java.lang.String getAPP_ID(android.content.Context)>($r2);

        $r6[3] = $r7;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r6);

        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $r11 = staticinvoke <com.nono.Tools: org.apache.http.HttpEntity connectToURLRandom(android.content.Context,java.lang.String)>($r2, $r3);

        if $r11 != null goto label03;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r4;

     label03:
        $r25 = new java.io.File;

        $r12 = $r25;

        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $r13 = virtualinvoke $r2.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, "temp.json");

        $r26 = new java.io.FileOutputStream;

        $r14 = $r26;

     label04:
        specialinvoke $r26.<java.io.FileOutputStream: void <init>(java.io.File)>($r12);

        $r15 = interfaceinvoke $r11.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label05:
        $r16 = newarray (byte)[1024];

     label06:
        $i0 = lengthof $r16;

     label07:
        $i0 = virtualinvoke $r15.<java.io.InputStream: int read(byte[],int,int)>($r16, 0, $i0);

     label08:
        $i1 = -1;

        if $i0 == $i1 goto label13;

     label09:
        virtualinvoke $r14.<java.io.FileOutputStream: void write(byte[],int,int)>($r16, 0, $i0);

     label10:
        goto label06;

     label11:
        $r17 := @caughtexception;

        $r30 = (java.io.FileNotFoundException) $r17;

        virtualinvoke $r30.<java.io.FileNotFoundException: void printStackTrace()>();

     label12:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r4;

     label13:
        virtualinvoke $r14.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r15.<java.io.InputStream: void close()>();

     label14:
        $r27 = new java.io.FileInputStream;

        $r18 = $r27;

     label15:
        specialinvoke $r27.<java.io.FileInputStream: void <init>(java.io.File)>($r12);

        $r3 = staticinvoke <com.nono.Tools: java.lang.String toString(java.io.InputStream)>($r18);

        virtualinvoke $r18.<java.io.InputStream: void close()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

     label16:
        if $z0 != 0 goto label45;

        $r28 = new java.lang.StringBuilder;

        $r19 = $r28;

     label17:
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("offer ad:");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nono.Logger: void d(java.lang.String)>($r7);

     label18:
        $r29 = new com.nono.d;

        $r20 = $r29;

     label19:
        specialinvoke $r29.<com.nono.d: void <init>()>();

     label20:
        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

     label21:
        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        virtualinvoke $r20.<com.nono.d: void a(android.content.Context,java.lang.String)>($r2, $r3);

     label22:
        $z0 = $r20.<com.nono.d: boolean a>;

        if $z0 != 0 goto label26;

     label23:
        $z0 = staticinvoke <com.nono.TheConnect: boolean isTest()>();

     label24:
        if $z0 == 0 goto label26;

        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

     label25:
        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $r21 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r2, "\u89e3\u6790\u6570\u636e\u51fa\u9519", 1);

        virtualinvoke $r21.<android.widget.Toast: void show()>();

     label26:
        $r22 = $r20.<com.nono.d: java.util.List d>;

        if $r22 == null goto label45;

        $r22 = $r20.<com.nono.d: java.util.List d>;

     label27:
        $i0 = interfaceinvoke $r22.<java.util.List: int size()>();

     label28:
        if $i0 <= 0 goto label45;

        $r28 = new java.lang.StringBuilder;

        $r19 = $r28;

     label29:
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("offer ad updated adVer:");

     label30:
        $i0 = $r20.<com.nono.d: int b>;

     label31:
        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" adVer2:");

     label32:
        $i0 = $r20.<com.nono.d: int c>;

     label33:
        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size:");

     label34:
        $r22 = $r20.<com.nono.d: java.util.List d>;

     label35:
        $i0 = interfaceinvoke $r22.<java.util.List: int size()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.nono.Logger: void d(java.lang.String)>($r3);

     label36:
        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

     label37:
        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $r13 = virtualinvoke $r2.<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>("wall_offers.json");

        $z0 = staticinvoke <com.nono.Tools: boolean moveTo(java.io.File,java.io.File)>($r13, $r12);

     label38:
        if $z0 == 0 goto label45;

        $r1 = r0.<com.nono.ad: com.nono.TheConnect a>;

     label39:
        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r1);

        $r1 = staticinvoke <com.nono.TheConnect: com.nono.TheConnect getInstance(android.content.Context)>($r2);

     label40:
        $r8 = r0.<com.nono.ad: com.nono.TheConnect a>;

     label41:
        $r2 = staticinvoke <com.nono.TheConnect: android.content.Context b(com.nono.TheConnect)>($r8);

        $r9 = virtualinvoke $r1.<com.nono.TheConnect: com.nono.c getAdManager(android.content.Context)>($r2);

     label42:
        $i0 = $r20.<com.nono.d: int c>;

     label43:
        virtualinvoke $r9.<com.nono.c: void a(int)>($i0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

     label44:
        return $r4;

     label45:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label46:
        return $r4;

     label47:
        $r23 := @caughtexception;

        $r31 = (java.lang.IllegalStateException) $r23;

        virtualinvoke $r31.<java.lang.IllegalStateException: void printStackTrace()>();

        goto label12;

     label48:
        $r24 := @caughtexception;

        $r32 = (java.io.IOException) $r24;

        virtualinvoke $r32.<java.io.IOException: void printStackTrace()>();

        goto label12;

        catch java.io.FileNotFoundException from label04 to label05 with label11;
        catch java.io.FileNotFoundException from label07 to label08 with label11;
        catch java.io.FileNotFoundException from label09 to label10 with label11;
        catch java.lang.IllegalStateException from label04 to label05 with label47;
        catch java.lang.IllegalStateException from label07 to label08 with label47;
        catch java.lang.IllegalStateException from label09 to label10 with label47;
        catch java.io.IOException from label04 to label05 with label48;
        catch java.io.IOException from label07 to label08 with label48;
        catch java.io.IOException from label09 to label10 with label48;
        catch java.io.FileNotFoundException from label13 to label14 with label11;
        catch java.io.FileNotFoundException from label15 to label16 with label11;
        catch java.io.FileNotFoundException from label17 to label18 with label11;
        catch java.io.FileNotFoundException from label19 to label20 with label11;
        catch java.io.FileNotFoundException from label21 to label22 with label11;
        catch java.io.FileNotFoundException from label23 to label24 with label11;
        catch java.io.FileNotFoundException from label25 to label26 with label11;
        catch java.io.FileNotFoundException from label27 to label28 with label11;
        catch java.io.FileNotFoundException from label29 to label30 with label11;
        catch java.io.FileNotFoundException from label31 to label32 with label11;
        catch java.io.FileNotFoundException from label33 to label34 with label11;
        catch java.io.FileNotFoundException from label35 to label36 with label11;
        catch java.io.FileNotFoundException from label37 to label38 with label11;
        catch java.io.FileNotFoundException from label39 to label40 with label11;
        catch java.io.FileNotFoundException from label41 to label42 with label11;
        catch java.io.FileNotFoundException from label43 to label44 with label11;
        catch java.io.FileNotFoundException from label45 to label46 with label11;
        catch java.lang.IllegalStateException from label13 to label14 with label47;
        catch java.lang.IllegalStateException from label15 to label16 with label47;
        catch java.lang.IllegalStateException from label17 to label18 with label47;
        catch java.lang.IllegalStateException from label19 to label20 with label47;
        catch java.lang.IllegalStateException from label21 to label22 with label47;
        catch java.lang.IllegalStateException from label23 to label24 with label47;
        catch java.lang.IllegalStateException from label25 to label26 with label47;
        catch java.lang.IllegalStateException from label27 to label28 with label47;
        catch java.lang.IllegalStateException from label29 to label30 with label47;
        catch java.lang.IllegalStateException from label31 to label32 with label47;
        catch java.lang.IllegalStateException from label33 to label34 with label47;
        catch java.lang.IllegalStateException from label35 to label36 with label47;
        catch java.lang.IllegalStateException from label37 to label38 with label47;
        catch java.lang.IllegalStateException from label39 to label40 with label47;
        catch java.lang.IllegalStateException from label41 to label42 with label47;
        catch java.lang.IllegalStateException from label43 to label44 with label47;
        catch java.lang.IllegalStateException from label45 to label46 with label47;
        catch java.io.IOException from label13 to label14 with label48;
        catch java.io.IOException from label15 to label16 with label48;
        catch java.io.IOException from label17 to label18 with label48;
        catch java.io.IOException from label19 to label20 with label48;
        catch java.io.IOException from label21 to label22 with label48;
        catch java.io.IOException from label23 to label24 with label48;
        catch java.io.IOException from label25 to label26 with label48;
        catch java.io.IOException from label27 to label28 with label48;
        catch java.io.IOException from label29 to label30 with label48;
        catch java.io.IOException from label31 to label32 with label48;
        catch java.io.IOException from label33 to label34 with label48;
        catch java.io.IOException from label35 to label36 with label48;
        catch java.io.IOException from label37 to label38 with label48;
        catch java.io.IOException from label39 to label40 with label48;
        catch java.io.IOException from label41 to label42 with label48;
        catch java.io.IOException from label43 to label44 with label48;
        catch java.io.IOException from label45 to label46 with label48;
    }

    protected final java.lang.Object doInBackground(java.lang.Object[])
    {
        com.nono.ad r0;
        java.lang.Boolean $r2;
        java.lang.Object[] $r1;

        r0 := @this: com.nono.ad;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = specialinvoke r0.<com.nono.ad: java.lang.Boolean a()>();

        return $r2;
    }
}
