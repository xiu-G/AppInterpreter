class com.mobclix.android.sdk.MobclixContactsSdk5$EntityIteratorImpl extends com.mobclix.android.sdk.MobclixContactsCursorEntityIterator
{
    private static final java.lang.String[] DATA_KEYS;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[19];

        $r0[0] = "data1";

        $r0[1] = "data2";

        $r0[2] = "data3";

        $r0[3] = "data4";

        $r0[4] = "data5";

        $r0[5] = "data6";

        $r0[6] = "data7";

        $r0[7] = "data8";

        $r0[8] = "data9";

        $r0[9] = "data10";

        $r0[10] = "data11";

        $r0[11] = "data12";

        $r0[12] = "data13";

        $r0[13] = "data14";

        $r0[14] = "data15";

        $r0[15] = "data_sync1";

        $r0[16] = "data_sync2";

        $r0[17] = "data_sync3";

        $r0[18] = "data_sync4";

        <com.mobclix.android.sdk.MobclixContactsSdk5$EntityIteratorImpl: java.lang.String[] DATA_KEYS> = $r0;

        return;
    }

    public void <init>(android.database.Cursor)
    {
        com.mobclix.android.sdk.MobclixContactsSdk5$EntityIteratorImpl r0;
        android.database.Cursor $r1;

        r0 := @this: com.mobclix.android.sdk.MobclixContactsSdk5$EntityIteratorImpl;

        $r1 := @parameter0: android.database.Cursor;

        specialinvoke r0.<com.mobclix.android.sdk.MobclixContactsCursorEntityIterator: void <init>(android.database.Cursor)>($r1);

        return;
    }

    public android.content.Entity getEntityAndIncrementCursor(android.database.Cursor) throws android.os.RemoteException
    {
        java.lang.Throwable r3;
        byte[] $r10;
        android.net.Uri $r8;
        long $l2, $l3;
        java.lang.String[] $r7;
        android.content.Entity r2;
        byte $b4;
        java.lang.Long $r6;
        int $i0, $i1, $i5, $i6;
        java.lang.String r4, $r9;
        android.database.Cursor $r1;
        boolean $z0;
        com.mobclix.android.sdk.MobclixContactsSdk5$EntityIteratorImpl r0;
        android.content.ContentValues r5;

        r0 := @this: com.mobclix.android.sdk.MobclixContactsSdk5$EntityIteratorImpl;

        $r1 := @parameter0: android.database.Cursor;

        $i1 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_id");

        $l2 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i1);

        r5 = new android.content.ContentValues;

        specialinvoke r5.<android.content.ContentValues: void <init>()>();

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "account_name");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "account_type");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "_id");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "dirty");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "version");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "sourceid");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "sync1");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "sync2");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "sync3");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "sync4");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "deleted");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "contact_id");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "starred");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "is_restricted");

        r2 = new android.content.Entity;

        specialinvoke r2.<android.content.Entity: void <init>(android.content.ContentValues)>(r5);

     label1:
        $l3 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i1);

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label2;

        return r2;

     label2:
        r5 = new android.content.ContentValues;

        specialinvoke r5.<android.content.ContentValues: void <init>()>();

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("data_id");

        $l3 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i0);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_id", $r6);

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "res_package");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "mimetype");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "is_primary");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "is_super_primary");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "data_version");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "group_sourceid");

        staticinvoke <com.mobclix.android.sdk.MobclixContactsSdk5: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>($r1, r5, "data_version");

        $r7 = <com.mobclix.android.sdk.MobclixContactsSdk5$EntityIteratorImpl: java.lang.String[] DATA_KEYS>;

        $i0 = lengthof $r7;

        $i5 = 0;

     label3:
        if $i5 < $i0 goto label4;

        $r8 = <android.provider.ContactsContract$Data: android.net.Uri CONTENT_URI>;

        virtualinvoke r2.<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>($r8, r5);

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label1;

        return r2;

     label4:
        r4 = $r7[$i5];

        $i6 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>(r4);

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean isNull(int)>($i6);

        if $z0 != 0 goto label6;

     label5:
        $r9 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i6);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>(r4, $r9);

     label6:
        $i5 = $i5 + 1;

        goto label3;

     label7:
        r3 := @caughtexception;

        $r10 = interfaceinvoke $r1.<android.database.Cursor: byte[] getBlob(int)>($i6);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,byte[])>(r4, $r10);

        goto label6;

        catch android.database.sqlite.SQLiteException from label5 to label6 with label7;
    }
}
