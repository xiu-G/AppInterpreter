public final class lq extends java.lang.Object
{

    public void <init>()
    {
        lq r0;

        r0 := @this: lq;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String a(java.net.URL)
    {
        java.lang.Throwable $r6, $r7;
        java.net.URL $r0;
        java.io.IOException $r12;
        java.io.InputStreamReader $r1, $r8;
        java.lang.StringBuffer $r3, $r9;
        int $i0;
        char[] $r4;
        java.lang.String $r5, $r10;
        java.io.UnsupportedEncodingException $r11;
        java.io.InputStream $r2;

        $r0 := @parameter0: java.net.URL;

        $r8 = new java.io.InputStreamReader;

        $r1 = $r8;

     label01:
        $r2 = virtualinvoke $r0.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2);

     label02:
        $r9 = new java.lang.StringBuffer;

        $r3 = $r9;

     label03:
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

     label04:
        $r4 = newarray (char)[131072];

     label05:
        $i0 = virtualinvoke $r1.<java.io.InputStreamReader: int read(char[])>($r4);

     label06:
        if $i0 == -1 goto label10;

        $r10 = new java.lang.String;

        $r5 = $r10;

     label07:
        specialinvoke $r10.<java.lang.String: void <init>(char[],int,int)>($r4, 0, $i0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label08:
        goto label05;

     label09:
        $r6 := @caughtexception;

        $r11 = (java.io.UnsupportedEncodingException) $r6;

        virtualinvoke $r11.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return "";

     label10:
        virtualinvoke $r1.<java.io.InputStreamReader: void close()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label11:
        return $r5;

     label12:
        $r7 := @caughtexception;

        $r12 = (java.io.IOException) $r7;

        virtualinvoke $r12.<java.io.IOException: void printStackTrace()>();

        return "";

        catch java.io.UnsupportedEncodingException from label01 to label02 with label09;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label09;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label09;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label09;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label09;
        catch java.io.IOException from label10 to label11 with label12;
    }

    public static java.util.HashMap a(java.lang.String)
    {
        java.util.HashMap $r1, $r5;
        char $c3;
        java.lang.Exception $r4;
        int $i0, $i1, $i2;
        java.lang.String $r0, $r2, $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

        $r5 = new java.util.HashMap;

        $r1 = $r5;

     label01:
        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\s", "");

     label02:
        $r2 = "";

        $i1 = 0;

     label03:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

     label04:
        if $i0 >= $i2 goto label19;

     label05:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label06:
        $i2 = (int) $c3;

        if $i2 != 59 goto label10;

     label07:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

     label08:
        $i1 = $i0 + 1;

     label09:
        $i0 = $i0 + 1;

        goto label03;

     label10:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

     label11:
        $i2 = $i2 - 1;

        if $i0 != $i2 goto label15;

     label12:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

     label13:
        goto label09;

     label14:
        $r4 := @caughtexception;

        $r0 = virtualinvoke $r4.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("cssParser:cssParseFromInline", $r0);

        return null;

     label15:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label16:
        $i2 = (int) $c3;

        if $i2 != 58 goto label09;

     label17:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

     label18:
        $i1 = $i0 + 1;

        goto label09;

     label19:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Exception from label15 to label16 with label14;
        catch java.lang.Exception from label17 to label18 with label14;
    }

    public static java.lang.String b(java.lang.String)
    {
        java.lang.Throwable $r2;
        java.net.MalformedURLException $r4;
        java.net.URL $r1, $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r3 = new java.net.URL;

        $r1 = $r3;

     label1:
        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r0 = staticinvoke <lq: java.lang.String a(java.net.URL)>($r1);

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r4 = (java.net.MalformedURLException) $r2;

        virtualinvoke $r4.<java.net.MalformedURLException: void printStackTrace()>();

        return "";

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }
}
