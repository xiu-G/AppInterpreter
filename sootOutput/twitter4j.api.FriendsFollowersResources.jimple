public interface  twitter4j.api.FriendsFollowersResources extends java.lang.Object
{

    public abstract twitter4j.User createFriendship(long);

    public abstract twitter4j.User createFriendship(long, boolean);

    public abstract twitter4j.User createFriendship(java.lang.String);

    public abstract twitter4j.User createFriendship(java.lang.String, boolean);

    public abstract twitter4j.User destroyFriendship(long);

    public abstract twitter4j.User destroyFriendship(java.lang.String);

    public abstract twitter4j.IDs getFollowersIDs(long);

    public abstract twitter4j.IDs getFollowersIDs(long, long);

    public abstract twitter4j.IDs getFollowersIDs(java.lang.String, long);

    public abstract twitter4j.PagableResponseList getFollowersList(long, long);

    public abstract twitter4j.PagableResponseList getFollowersList(java.lang.String, long);

    public abstract twitter4j.IDs getFriendsIDs(long);

    public abstract twitter4j.IDs getFriendsIDs(long, long);

    public abstract twitter4j.IDs getFriendsIDs(java.lang.String, long);

    public abstract twitter4j.PagableResponseList getFriendsList(long, long);

    public abstract twitter4j.PagableResponseList getFriendsList(java.lang.String, long);

    public abstract twitter4j.IDs getIncomingFriendships(long);

    public abstract twitter4j.IDs getOutgoingFriendships(long);

    public abstract twitter4j.ResponseList lookupFriendships(long[]);

    public abstract twitter4j.ResponseList lookupFriendships(java.lang.String[]);

    public abstract twitter4j.Relationship showFriendship(long, long);

    public abstract twitter4j.Relationship showFriendship(java.lang.String, java.lang.String);

    public abstract twitter4j.Relationship updateFriendship(long, boolean, boolean);

    public abstract twitter4j.Relationship updateFriendship(java.lang.String, boolean, boolean);
}
