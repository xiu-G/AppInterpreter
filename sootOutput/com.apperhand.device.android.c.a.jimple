public final class com.apperhand.device.android.c.a extends java.lang.Object implements com.apperhand.device.a.d.d
{
    private static final com.apperhand.device.android.c.a a;
    private java.util.Map b;
    private java.util.Map c;
    private java.util.concurrent.locks.ReadWriteLock d;

    static void <clinit>()
    {
        com.apperhand.device.android.c.a $r0;

        $r0 = new com.apperhand.device.android.c.a;

        specialinvoke $r0.<com.apperhand.device.android.c.a: void <init>()>();

        <com.apperhand.device.android.c.a: com.apperhand.device.android.c.a a> = $r0;

        return;
    }

    private void <init>()
    {
        com.apperhand.device.android.c.a r0;
        java.util.HashMap $r1;
        java.util.concurrent.locks.ReentrantReadWriteLock $r2;

        r0 := @this: com.apperhand.device.android.c.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.apperhand.device.android.c.a: java.util.Map b> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.apperhand.device.android.c.a: java.util.Map c> = $r1;

        $r2 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();

        r0.<com.apperhand.device.android.c.a: java.util.concurrent.locks.ReadWriteLock d> = $r2;

        return;
    }

    public static final com.apperhand.device.android.c.a a()
    {
        com.apperhand.device.android.c.a r0;

        r0 = <com.apperhand.device.android.c.a: com.apperhand.device.android.c.a a>;

        return r0;
    }

    public final java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r9, $r10;
        java.util.HashMap $r8;
        java.util.concurrent.locks.Lock $r4, $r7;
        java.util.Map $r5;
        com.apperhand.device.android.c.a r0;
        java.lang.Object $r6;
        java.lang.String $r1, $r2;
        java.util.concurrent.locks.ReadWriteLock $r3;
        boolean $z0;

        r0 := @this: com.apperhand.device.android.c.a;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.apperhand.device.android.c.a: java.util.concurrent.locks.ReadWriteLock d>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        $r5 = r0.<com.apperhand.device.android.c.a: java.util.Map b>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>("ACTIVATED");

     label02:
        if $z0 == 0 goto label05;

     label03:
        $r5 = r0.<com.apperhand.device.android.c.a: java.util.Map b>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("ACTIVATED");

        $r1 = (java.lang.String) $r6;

     label04:
        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r1;

     label05:
        $r3 = r0.<com.apperhand.device.android.c.a: java.util.concurrent.locks.ReadWriteLock d>;

        $r7 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>();

     label06:
        $r5 = r0.<com.apperhand.device.android.c.a: java.util.Map c>;

     label07:
        if $r5 != null goto label09;

     label08:
        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<com.apperhand.device.android.c.a: java.util.Map c> = $r8;

     label09:
        $r5 = r0.<com.apperhand.device.android.c.a: java.util.Map c>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ACTIVATED", "ACTIVATED");

     label10:
        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

     label11:
        $r1 = "false";

        goto label04;

     label12:
        $r9 := @caughtexception;

     label13:
        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r9;

     label14:
        $r10 := @caughtexception;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label13 to label14 with label14;
    }

    public final void a(android.content.Context)
    {
        java.lang.Throwable $r6;
        android.content.Context $r1;
        java.util.concurrent.locks.Lock $r3;
        android.content.SharedPreferences $r4;
        java.util.Map $r5;
        com.apperhand.device.android.c.a r0;
        java.util.concurrent.locks.ReadWriteLock $r2;

        r0 := @this: com.apperhand.device.android.c.a;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<com.apperhand.device.android.c.a: java.util.concurrent.locks.ReadWriteLock d>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r4 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.apperhand.parameters", 0);

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences: java.util.Map getAll()>();

        r0.<com.apperhand.device.android.c.a: java.util.Map b> = $r5;

     label2:
        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label3:
        $r6 := @caughtexception;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.util.Collection b()
    {
        com.apperhand.device.android.c.a r0;
        java.util.Collection $r1;
        java.util.Map $r2;

        r0 := @this: com.apperhand.device.android.c.a;

        $r2 = r0.<com.apperhand.device.android.c.a: java.util.Map c>;

        if $r2 == null goto label1;

        $r2 = r0.<com.apperhand.device.android.c.a: java.util.Map c>;

        $r1 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        return $r1;

     label1:
        return null;
    }

    public final void b(android.content.Context)
    {
        android.content.SharedPreferences$Editor $r5;
        java.lang.Throwable $r12;
        android.content.Context $r1;
        java.util.Iterator $r8;
        java.util.Set $r7;
        java.util.concurrent.locks.Lock $r3;
        android.content.SharedPreferences $r4;
        java.util.Map $r6;
        com.apperhand.device.android.c.a r0;
        java.lang.Object $r9;
        java.lang.String $r10, $r11;
        java.util.concurrent.locks.ReadWriteLock $r2;
        boolean $z0;

        r0 := @this: com.apperhand.device.android.c.a;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<com.apperhand.device.android.c.a: java.util.concurrent.locks.ReadWriteLock d>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r4 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.apperhand.parameters", 0);

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r6 = r0.<com.apperhand.device.android.c.a: java.util.Map b>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label7;

     label4:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.String) $r9;

        $r6 = r0.<com.apperhand.device.android.c.a: java.util.Map b>;

        $r9 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r11 = (java.lang.String) $r9;

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r10, $r11);

     label5:
        goto label2;

     label6:
        $r12 := @caughtexception;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r12;

     label7:
        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: boolean commit()>();

     label8:
        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final boolean b(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r7;
        java.util.HashMap $r6;
        java.util.concurrent.locks.Lock $r4;
        java.util.Map $r5;
        com.apperhand.device.android.c.a r0;
        int $i0;
        java.lang.String $r1, $r2;
        java.util.concurrent.locks.ReadWriteLock $r3;

        r0 := @this: com.apperhand.device.android.c.a;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.apperhand.device.android.c.a: java.util.concurrent.locks.ReadWriteLock d>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r5 = r0.<com.apperhand.device.android.c.a: java.util.Map b>;

     label2:
        if $r5 != null goto label4;

     label3:
        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<com.apperhand.device.android.c.a: java.util.Map b> = $r6;

     label4:
        $r5 = r0.<com.apperhand.device.android.c.a: java.util.Map b>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label5:
        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        $r5 = r0.<com.apperhand.device.android.c.a: java.util.Map c>;

        if $r5 == null goto label6;

        $r5 = r0.<com.apperhand.device.android.c.a: java.util.Map c>;

        $i0 = interfaceinvoke $r5.<java.util.Map: int size()>();

        if $i0 <= 0 goto label6;

        $r5 = r0.<com.apperhand.device.android.c.a: java.util.Map c>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label6:
        return 1;

     label7:
        $r7 := @caughtexception;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
    }
}
