public class proguard.ProGuard extends java.lang.Object
{
    public static final java.lang.String VERSION;
    private final proguard.Configuration configuration;
    private final proguard.classfile.ClassPool libraryClassPool;
    private proguard.classfile.ClassPool programClassPool;

    public void <init>(proguard.Configuration)
    {
        proguard.Configuration $r1;
        proguard.classfile.ClassPool $r2;
        proguard.ProGuard r0;

        r0 := @this: proguard.ProGuard;

        $r1 := @parameter0: proguard.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new proguard.classfile.ClassPool;

        specialinvoke $r2.<proguard.classfile.ClassPool: void <init>()>();

        r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool> = $r2;

        $r2 = new proguard.classfile.ClassPool;

        specialinvoke $r2.<proguard.classfile.ClassPool: void <init>()>();

        r0.<proguard.ProGuard: proguard.classfile.ClassPool libraryClassPool> = $r2;

        r0.<proguard.ProGuard: proguard.Configuration configuration> = $r1;

        return;
    }

    private void closePrintStream(java.io.PrintStream)
    {
        java.io.PrintStream $r1, $r2;
        proguard.ProGuard r0;

        r0 := @this: proguard.ProGuard;

        $r1 := @parameter0: java.io.PrintStream;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        if $r1 != $r2 goto label1;

        virtualinvoke $r1.<java.io.PrintStream: void flush()>();

        return;

     label1:
        virtualinvoke $r1.<java.io.PrintStream: void close()>();

        return;
    }

    private java.io.PrintStream createPrintStream(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.PrintStream $r4;
        proguard.ProGuard r0;
        java.io.FileOutputStream $r3;
        java.io.File $r1;
        java.io.BufferedOutputStream $r2;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 := @parameter0: java.io.File;

        $z0 = specialinvoke r0.<proguard.ProGuard: boolean isFile(java.io.File)>($r1);

        if $z0 == 0 goto label1;

        $r4 = new java.io.PrintStream;

        $r2 = new java.io.BufferedOutputStream;

        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r3);

        specialinvoke $r4.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r2);

        return $r4;

     label1:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        return $r4;
    }

    private void dump() throws java.io.IOException
    {
        java.io.PrintStream $r2;
        java.lang.Throwable $r8;
        java.io.File $r4;
        proguard.classfile.ClassPool $r6;
        proguard.ProGuard r0;
        java.lang.StringBuffer $r3;
        proguard.Configuration $r1;
        java.lang.String $r5;
        proguard.classfile.visitor.ClassPrinter $r7;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r1.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Printing classes to [");

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r1.<proguard.Configuration: java.io.File dump>;

        $r5 = specialinvoke r0.<proguard.ProGuard: java.lang.String fileName(java.io.File)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]...");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r1.<proguard.Configuration: java.io.File dump>;

        $r2 = specialinvoke r0.<proguard.ProGuard: java.io.PrintStream createPrintStream(java.io.File)>($r4);

     label2:
        $r6 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        $r7 = new proguard.classfile.visitor.ClassPrinter;

        specialinvoke $r7.<proguard.classfile.visitor.ClassPrinter: void <init>(java.io.PrintStream)>($r2);

        virtualinvoke $r6.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r7);

     label3:
        specialinvoke r0.<proguard.ProGuard: void closePrintStream(java.io.PrintStream)>($r2);

        return;

     label4:
        $r8 := @caughtexception;

        specialinvoke r0.<proguard.ProGuard: void closePrintStream(java.io.PrintStream)>($r2);

        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private java.lang.String fileName(java.io.File)
    {
        proguard.ProGuard r0;
        java.lang.String $r2;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 := @parameter0: java.io.File;

        $z0 = specialinvoke r0.<proguard.ProGuard: boolean isFile(java.io.File)>($r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;

     label1:
        return "standard output";
    }

    private void initialize() throws java.io.IOException
    {
        proguard.classfile.ClassPool $r1, $r5;
        java.io.PrintStream $r3;
        proguard.Initializer $r4;
        proguard.ProGuard r0;
        proguard.Configuration $r2;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Initializing...");

     label1:
        $r4 = new proguard.Initializer;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        specialinvoke $r4.<proguard.Initializer: void <init>(proguard.Configuration)>($r2);

        $r5 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        $r1 = r0.<proguard.ProGuard: proguard.classfile.ClassPool libraryClassPool>;

        virtualinvoke $r4.<proguard.Initializer: void execute(proguard.classfile.ClassPool,proguard.classfile.ClassPool)>($r5, $r1);

        return;
    }

    private void inlineSubroutines()
    {
        java.io.PrintStream $r2;
        proguard.classfile.ClassPool $r4;
        proguard.ProGuard r0;
        proguard.Configuration $r1;
        proguard.preverify.SubroutineInliner $r3;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r1.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Inlining subroutines...");

     label1:
        $r3 = new proguard.preverify.SubroutineInliner;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        specialinvoke $r3.<proguard.preverify.SubroutineInliner: void <init>(proguard.Configuration)>($r1);

        $r4 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        virtualinvoke $r3.<proguard.preverify.SubroutineInliner: void execute(proguard.classfile.ClassPool)>($r4);

        return;
    }

    private boolean isFile(java.io.File)
    {
        proguard.ProGuard r0;
        int $i0;
        java.lang.String $r2;
        java.io.File $r1;

        r0 := @this: proguard.ProGuard;

        $r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r1;
        java.lang.Throwable $r5;
        java.lang.String[] $r0;
        java.lang.Exception $r6;
        proguard.ProGuard $r4;
        java.lang.StringBuffer $r7;
        int $i0;
        proguard.Configuration $r2;
        proguard.ConfigurationParser $r3;
        java.lang.String $r8;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        $i0 = lengthof $r0;

        if $i0 != 0 goto label01;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("ProGuard, version 4.5.1");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Usage: java proguard.ProGuard [options ...]");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label01:
        $r2 = new proguard.Configuration;

        specialinvoke $r2.<proguard.Configuration: void <init>()>();

        $r3 = new proguard.ConfigurationParser;

     label02:
        specialinvoke $r3.<proguard.ConfigurationParser: void <init>(java.lang.String[])>($r0);

     label03:
        virtualinvoke $r3.<proguard.ConfigurationParser: void parse(proguard.Configuration)>($r2);

     label04:
        virtualinvoke $r3.<proguard.ConfigurationParser: void close()>();

     label05:
        $r4 = new proguard.ProGuard;

     label06:
        specialinvoke $r4.<proguard.ProGuard: void <init>(proguard.Configuration)>($r2);

        virtualinvoke $r4.<proguard.ProGuard: void execute()>();

     label07:
        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

     label08:
        $r5 := @caughtexception;

     label09:
        virtualinvoke $r3.<proguard.ConfigurationParser: void close()>();

        throw $r5;

     label10:
        $r6 := @caughtexception;

        $z0 = $r2.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label12;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label11:
        staticinvoke <java.lang.System: void exit(int)>(1);

        goto label07;

     label12:
        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error: ");

        $r8 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r8);

        goto label11;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label09 to label10 with label10;
    }

    private void obfuscate() throws java.io.IOException
    {
        java.io.PrintStream $r2;
        proguard.obfuscate.Obfuscator $r6;
        java.io.File $r3;
        proguard.classfile.ClassPool $r7, $r8;
        proguard.ProGuard r0;
        java.lang.StringBuffer $r4;
        proguard.Configuration $r1;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r1.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label2;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Obfuscating...");

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r3 = $r1.<proguard.Configuration: java.io.File applyMapping>;

        if $r3 == null goto label1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Applying mapping [");

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r3 = $r1.<proguard.Configuration: java.io.File applyMapping>;

        $r5 = specialinvoke r0.<proguard.ProGuard: java.lang.String fileName(java.io.File)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r3 = $r1.<proguard.Configuration: java.io.File printMapping>;

        if $r3 == null goto label2;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Printing mapping to [");

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r3 = $r1.<proguard.Configuration: java.io.File printMapping>;

        $r5 = specialinvoke r0.<proguard.ProGuard: java.lang.String fileName(java.io.File)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]...");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label2:
        $r6 = new proguard.obfuscate.Obfuscator;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        specialinvoke $r6.<proguard.obfuscate.Obfuscator: void <init>(proguard.Configuration)>($r1);

        $r7 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        $r8 = r0.<proguard.ProGuard: proguard.classfile.ClassPool libraryClassPool>;

        virtualinvoke $r6.<proguard.obfuscate.Obfuscator: void execute(proguard.classfile.ClassPool,proguard.classfile.ClassPool)>($r7, $r8);

        return;
    }

    private boolean optimize() throws java.io.IOException
    {
        proguard.classfile.ClassPool $r1, $r5;
        java.io.PrintStream $r3;
        proguard.optimize.Optimizer $r4;
        proguard.ProGuard r0;
        proguard.Configuration $r2;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Optimizing...");

     label1:
        $r4 = new proguard.optimize.Optimizer;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        specialinvoke $r4.<proguard.optimize.Optimizer: void <init>(proguard.Configuration)>($r2);

        $r5 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        $r1 = r0.<proguard.ProGuard: proguard.classfile.ClassPool libraryClassPool>;

        $z0 = virtualinvoke $r4.<proguard.optimize.Optimizer: boolean execute(proguard.classfile.ClassPool,proguard.classfile.ClassPool)>($r5, $r1);

        return $z0;
    }

    private void preverify()
    {
        java.io.PrintStream $r2;
        proguard.classfile.ClassPool $r4;
        proguard.ProGuard r0;
        proguard.preverify.Preverifier $r3;
        proguard.Configuration $r1;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r1.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Preverifying...");

     label1:
        $r3 = new proguard.preverify.Preverifier;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        specialinvoke $r3.<proguard.preverify.Preverifier: void <init>(proguard.Configuration)>($r1);

        $r4 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        virtualinvoke $r3.<proguard.preverify.Preverifier: void execute(proguard.classfile.ClassPool)>($r4);

        return;
    }

    private void printConfiguration() throws java.io.IOException
    {
        java.io.PrintStream $r2;
        java.lang.Throwable $r7;
        java.io.File $r4;
        proguard.ProGuard r0;
        java.lang.StringBuffer $r3;
        proguard.ConfigurationWriter $r6;
        proguard.Configuration $r1;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r1.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Printing configuration to [");

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r1.<proguard.Configuration: java.io.File printConfiguration>;

        $r5 = specialinvoke r0.<proguard.ProGuard: java.lang.String fileName(java.io.File)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]...");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r1.<proguard.Configuration: java.io.File printConfiguration>;

        $r2 = specialinvoke r0.<proguard.ProGuard: java.io.PrintStream createPrintStream(java.io.File)>($r4);

     label2:
        $r6 = new proguard.ConfigurationWriter;

        specialinvoke $r6.<proguard.ConfigurationWriter: void <init>(java.io.OutputStream)>($r2);

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        virtualinvoke $r6.<proguard.ConfigurationWriter: void write(proguard.Configuration)>($r1);

     label3:
        specialinvoke r0.<proguard.ProGuard: void closePrintStream(java.io.PrintStream)>($r2);

        return;

     label4:
        $r7 := @caughtexception;

        specialinvoke r0.<proguard.ProGuard: void closePrintStream(java.io.PrintStream)>($r2);

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void printSeeds() throws java.io.IOException
    {
        java.io.PrintStream $r3;
        java.lang.Throwable $r11;
        proguard.classfile.visitor.SimpleClassPrinter $r7;
        java.io.IOException $r5;
        java.io.File $r6;
        proguard.classfile.ClassPool $r10;
        java.util.List $r4;
        proguard.classfile.visitor.ClassPoolVisitor $r9;
        proguard.ProGuard r0;
        proguard.Configuration $r2;
        proguard.classfile.visitor.ProgramMemberFilter $r1;
        boolean $z0;
        proguard.classfile.visitor.ProgramClassFilter $r8;

        r0 := @this: proguard.ProGuard;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Printing kept classes, fields, and methods...");

     label1:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r2.<proguard.Configuration: java.util.List keep>;

        if $r4 != null goto label2;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("You have to specify \'-keep\' options for the shrinking step.");

        throw $r5;

     label2:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r6 = $r2.<proguard.Configuration: java.io.File printSeeds>;

        $r3 = specialinvoke r0.<proguard.ProGuard: java.io.PrintStream createPrintStream(java.io.File)>($r6);

     label3:
        $r7 = new proguard.classfile.visitor.SimpleClassPrinter;

        specialinvoke $r7.<proguard.classfile.visitor.SimpleClassPrinter: void <init>(boolean,java.io.PrintStream)>(0, $r3);

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r2.<proguard.Configuration: java.util.List keep>;

        $r8 = new proguard.classfile.visitor.ProgramClassFilter;

        specialinvoke $r8.<proguard.classfile.visitor.ProgramClassFilter: void <init>(proguard.classfile.visitor.ClassVisitor)>($r7);

        $r1 = new proguard.classfile.visitor.ProgramMemberFilter;

        specialinvoke $r1.<proguard.classfile.visitor.ProgramMemberFilter: void <init>(proguard.classfile.visitor.MemberVisitor)>($r7);

        $r9 = staticinvoke <proguard.ClassSpecificationVisitorFactory: proguard.classfile.visitor.ClassPoolVisitor createClassPoolVisitor(java.util.List,proguard.classfile.visitor.ClassVisitor,proguard.classfile.visitor.MemberVisitor,boolean,boolean,boolean)>($r4, $r8, $r1, 1, 1, 1);

        $r10 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        virtualinvoke $r10.<proguard.classfile.ClassPool: void accept(proguard.classfile.visitor.ClassPoolVisitor)>($r9);

        $r10 = r0.<proguard.ProGuard: proguard.classfile.ClassPool libraryClassPool>;

        virtualinvoke $r10.<proguard.classfile.ClassPool: void accept(proguard.classfile.visitor.ClassPoolVisitor)>($r9);

     label4:
        specialinvoke r0.<proguard.ProGuard: void closePrintStream(java.io.PrintStream)>($r3);

        return;

     label5:
        $r11 := @caughtexception;

        specialinvoke r0.<proguard.ProGuard: void closePrintStream(java.io.PrintStream)>($r3);

        throw $r11;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void readInput() throws java.io.IOException
    {
        proguard.classfile.ClassPool $r1, $r5;
        java.io.PrintStream $r3;
        proguard.ProGuard r0;
        proguard.Configuration $r2;
        proguard.InputReader $r4;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Reading input...");

     label1:
        $r4 = new proguard.InputReader;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        specialinvoke $r4.<proguard.InputReader: void <init>(proguard.Configuration)>($r2);

        $r5 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        $r1 = r0.<proguard.ProGuard: proguard.classfile.ClassPool libraryClassPool>;

        virtualinvoke $r4.<proguard.InputReader: void execute(proguard.classfile.ClassPool,proguard.classfile.ClassPool)>($r5, $r1);

        return;
    }

    private void shrink() throws java.io.IOException
    {
        java.io.PrintStream $r2;
        proguard.shrink.Shrinker $r7;
        java.io.File $r4;
        proguard.classfile.ClassPool $r8, $r9;
        java.util.List $r3;
        proguard.ProGuard r0;
        java.lang.StringBuffer $r5;
        proguard.Configuration $r1;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r1.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label2;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Shrinking...");

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r3 = $r1.<proguard.Configuration: java.util.List whyAreYouKeeping>;

        if $r3 == null goto label1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Explaining why classes and class members are being kept...");

     label1:
        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r1.<proguard.Configuration: java.io.File printUsage>;

        if $r4 == null goto label2;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Printing usage to [");

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r1.<proguard.Configuration: java.io.File printUsage>;

        $r6 = specialinvoke r0.<proguard.ProGuard: java.lang.String fileName(java.io.File)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]...");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label2:
        $r7 = new proguard.shrink.Shrinker;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        specialinvoke $r7.<proguard.shrink.Shrinker: void <init>(proguard.Configuration)>($r1);

        $r8 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        $r9 = r0.<proguard.ProGuard: proguard.classfile.ClassPool libraryClassPool>;

        $r8 = virtualinvoke $r7.<proguard.shrink.Shrinker: proguard.classfile.ClassPool execute(proguard.classfile.ClassPool,proguard.classfile.ClassPool)>($r8, $r9);

        r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool> = $r8;

        return;
    }

    private void sortClassElements()
    {
        proguard.classfile.ClassPool $r1;
        proguard.classfile.editor.ClassElementSorter $r2;
        proguard.ProGuard r0;

        r0 := @this: proguard.ProGuard;

        $r1 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        $r2 = new proguard.classfile.editor.ClassElementSorter;

        specialinvoke $r2.<proguard.classfile.editor.ClassElementSorter: void <init>()>();

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r2);

        return;
    }

    private void target() throws java.io.IOException
    {
        java.io.PrintStream $r2;
        proguard.classfile.ClassPool $r4;
        proguard.ProGuard r0;
        proguard.Configuration $r1;
        proguard.Targeter $r3;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r1.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Setting target versions...");

     label1:
        $r3 = new proguard.Targeter;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        specialinvoke $r3.<proguard.Targeter: void <init>(proguard.Configuration)>($r1);

        $r4 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        virtualinvoke $r3.<proguard.Targeter: void execute(proguard.classfile.ClassPool)>($r4);

        return;
    }

    private void writeOutput() throws java.io.IOException
    {
        java.io.PrintStream $r2;
        proguard.classfile.ClassPool $r4;
        proguard.ProGuard r0;
        proguard.Configuration $r1;
        proguard.OutputWriter $r3;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r1.<proguard.Configuration: boolean verbose>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Writing output...");

     label1:
        $r3 = new proguard.OutputWriter;

        $r1 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        specialinvoke $r3.<proguard.OutputWriter: void <init>(proguard.Configuration)>($r1);

        $r4 = r0.<proguard.ProGuard: proguard.classfile.ClassPool programClassPool>;

        virtualinvoke $r3.<proguard.OutputWriter: void execute(proguard.classfile.ClassPool)>($r4);

        return;
    }

    public void execute() throws java.io.IOException
    {
        java.io.PrintStream $r1;
        proguard.ClassPath $r4;
        java.io.File $r3;
        proguard.ProGuard r0;
        proguard.Configuration $r2;
        proguard.UpToDateChecker $r5;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: proguard.ProGuard;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("ProGuard, version 4.5.1");

        staticinvoke <proguard.GPL: void check()>();

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r3 = $r2.<proguard.Configuration: java.io.File printConfiguration>;

        if $r3 == null goto label01;

        specialinvoke r0.<proguard.ProGuard: void printConfiguration()>();

     label01:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r2.<proguard.Configuration: proguard.ClassPath programJars>;

        if $r4 == null goto label02;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r2.<proguard.Configuration: proguard.ClassPath programJars>;

        $z0 = virtualinvoke $r4.<proguard.ClassPath: boolean hasOutput()>();

        if $z0 == 0 goto label02;

        $r5 = new proguard.UpToDateChecker;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        specialinvoke $r5.<proguard.UpToDateChecker: void <init>(proguard.Configuration)>($r2);

        $z0 = virtualinvoke $r5.<proguard.UpToDateChecker: boolean check()>();

        if $z0 == 0 goto label02;

        return;

     label02:
        specialinvoke r0.<proguard.ProGuard: void readInput()>();

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean shrink>;

        if $z0 != 0 goto label03;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean optimize>;

        if $z0 != 0 goto label03;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean obfuscate>;

        if $z0 != 0 goto label03;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean preverify>;

        if $z0 == 0 goto label04;

     label03:
        specialinvoke r0.<proguard.ProGuard: void initialize()>();

     label04:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $i0 = $r2.<proguard.Configuration: int targetClassVersion>;

        if $i0 == 0 goto label05;

        specialinvoke r0.<proguard.ProGuard: void target()>();

     label05:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r3 = $r2.<proguard.Configuration: java.io.File printSeeds>;

        if $r3 == null goto label06;

        specialinvoke r0.<proguard.ProGuard: void printSeeds()>();

     label06:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean shrink>;

        if $z0 == 0 goto label07;

        specialinvoke r0.<proguard.ProGuard: void shrink()>();

     label07:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean preverify>;

        if $z0 == 0 goto label08;

        specialinvoke r0.<proguard.ProGuard: void inlineSubroutines()>();

     label08:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean optimize>;

        if $z0 == 0 goto label10;

        $i0 = 0;

     label09:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $i1 = $r2.<proguard.Configuration: int optimizationPasses>;

        if $i0 >= $i1 goto label10;

        $z0 = specialinvoke r0.<proguard.ProGuard: boolean optimize()>();

        if $z0 != 0 goto label16;

     label10:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean obfuscate>;

        if $z0 == 0 goto label11;

        specialinvoke r0.<proguard.ProGuard: void obfuscate()>();

     label11:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean preverify>;

        if $z0 == 0 goto label12;

        specialinvoke r0.<proguard.ProGuard: void preverify()>();

     label12:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean shrink>;

        if $z0 != 0 goto label13;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean optimize>;

        if $z0 != 0 goto label13;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean obfuscate>;

        if $z0 != 0 goto label13;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean preverify>;

        if $z0 == 0 goto label14;

     label13:
        specialinvoke r0.<proguard.ProGuard: void sortClassElements()>();

     label14:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r4 = $r2.<proguard.Configuration: proguard.ClassPath programJars>;

        $z0 = virtualinvoke $r4.<proguard.ClassPath: boolean hasOutput()>();

        if $z0 == 0 goto label15;

        specialinvoke r0.<proguard.ProGuard: void writeOutput()>();

     label15:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r3 = $r2.<proguard.Configuration: java.io.File dump>;

        if $r3 == null goto label18;

        specialinvoke r0.<proguard.ProGuard: void dump()>();

        return;

     label16:
        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $z0 = $r2.<proguard.Configuration: boolean shrink>;

        if $z0 == 0 goto label17;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r2.<proguard.Configuration: java.io.File printUsage> = null;

        $r2 = r0.<proguard.ProGuard: proguard.Configuration configuration>;

        $r2.<proguard.Configuration: java.util.List whyAreYouKeeping> = null;

        specialinvoke r0.<proguard.ProGuard: void shrink()>();

     label17:
        $i0 = $i0 + 1;

        goto label09;

     label18:
        return;
    }

    public static void <clinit>()
    {
        <proguard.ProGuard: java.lang.String VERSION> = "ProGuard, version 4.5.1";

        return;
    }
}
