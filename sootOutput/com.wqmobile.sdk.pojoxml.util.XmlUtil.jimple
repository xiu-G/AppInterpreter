public class com.wqmobile.sdk.pojoxml.util.XmlUtil extends java.lang.Object
{

    public void <init>()
    {
        com.wqmobile.sdk.pojoxml.util.XmlUtil r0;

        r0 := @this: com.wqmobile.sdk.pojoxml.util.XmlUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String createEmptyElement(java.lang.String, int)
    {
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        $r2 = staticinvoke <com.wqmobile.sdk.pojoxml.util.XmlUtil: java.lang.String getSpace(int)>($i0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/>");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String createEmptyElementWithNL(java.lang.String, int)
    {
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("<");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/>");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String createEmptyElementWithNL(java.lang.String, java.lang.String, int)
    {
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("<");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/>");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getCloseTag(java.lang.String, int)
    {
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("</");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getCloseTagWithNL(java.lang.String, int)
    {
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("</");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getElement(java.lang.String, java.lang.String, int)
    {
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("<");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getElementWithNL(java.lang.String, java.lang.String, java.lang.String, int)
    {
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <com.wqmobile.sdk.pojoxml.util.XmlUtil: java.lang.String createEmptyElementWithNL(java.lang.String,int)>($r0, $i0);

        return $r0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("<");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getEncoding(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return "UTF-8";

     label1:
        return $r0;
    }

    public static java.lang.String getSpace(int)
    {
        int $i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.String r0;

        $i0 := @parameter0: int;

        r0 = "";

        i1 = 0;

     label1:
        if i1 < $i0 goto label2;

        return r0;

     label2:
        $r1 = new java.lang.StringBuilder;

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = i1 + 1;

        goto label1;
    }

    public static java.lang.String getStartTag(java.lang.String, int)
    {
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("<");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getStartTag(java.lang.String, java.lang.String, int)
    {
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("<");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getStartTagWithNL(java.lang.String, java.lang.String, int)
    {
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("<");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
}
