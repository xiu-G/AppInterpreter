class c.a.c.c$e extends android.content.BroadcastReceiver
{
    private static java.util.concurrent.atomic.AtomicReference b;
    private final android.content.Context a;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReference $r0;

        $r0 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        <c.a.c.c$e: java.util.concurrent.atomic.AtomicReference b> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        c.a.c.c$e r0;
        android.content.Context $r1;

        r0 := @this: c.a.c.c$e;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        r0.<c.a.c.c$e: android.content.Context a> = $r1;

        return;
    }

    static void a(android.content.Context)
    {
        android.content.Context $r0;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <c.a.c.c$e: void b(android.content.Context)>($r0);

        return;
    }

    private static void b(android.content.Context)
    {
        c.a.c.c$e $r3;
        android.content.Context $r0;
        android.content.IntentFilter $r4;
        java.lang.Object $r2;
        java.util.concurrent.atomic.AtomicReference $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = <c.a.c.c$e: java.util.concurrent.atomic.AtomicReference b>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r2 != null goto label1;

        $r3 = new c.a.c.c$e;

        specialinvoke $r3.<c.a.c.c$e: void <init>(android.content.Context)>($r0);

        $r1 = <c.a.c.c$e: java.util.concurrent.atomic.AtomicReference b>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, $r3);

        if $z0 == 0 goto label1;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        virtualinvoke $r0.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, $r4);

     label1:
        return;
    }

    public void c()
    {
        c.a.c.c$e r0;
        android.content.Context $r1;

        r0 := @this: c.a.c.c$e;

        $r1 = r0.<c.a.c.c$e: android.content.Context a>;

        virtualinvoke $r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>(r0);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        java.lang.Throwable $r9;
        android.content.Context $r1;
        java.util.Iterator $r6;
        java.util.Collection $r5;
        android.content.Intent $r2;
        c.a.c.c$e r0;
        c.a.c.c $r8;
        java.util.Map $r4;
        java.lang.Object $r3, $r7;
        boolean $z0;

        r0 := @this: c.a.c.c$e;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        $r3 = staticinvoke <c.a.c.c: java.lang.Object a()>();

        entermonitor $r3;

     label1:
        $r4 = <c.a.c.c: java.util.Map k>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (c.a.c.c) $r7;

        staticinvoke <c.a.c.c: void b(c.a.c.c)>($r8);

        goto label2;

     label3:
        exitmonitor $r3;

     label4:
        virtualinvoke r0.<c.a.c.c$e: void c()>();

        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor $r3;

     label7:
        goto label8;

     label8:
        throw $r9;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
