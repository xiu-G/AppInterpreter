public final class com.skt.wifiagent.AssistCrypto extends java.lang.Object
{
    private static final java.lang.String HEX;
    private static final java.lang.String algorithm;
    private static final java.lang.String initialVectorParam;
    private static final java.lang.String keyString;

    public void <init>()
    {
        com.skt.wifiagent.AssistCrypto r0;

        r0 := @this: com.skt.wifiagent.AssistCrypto;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void appendHex(java.lang.StringBuffer, byte)
    {
        byte $b0;
        java.lang.StringBuffer $r0;
        int $i1;
        char $c2;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.StringBuffer;

        $b0 := @parameter1: byte;

        $r1 = "0123456789ABCDEF";

        $i1 = (int) $b0;

        $i1 = $i1 >> 4;

        $i1 = $i1 & 15;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r1 = "0123456789ABCDEF";

        $b0 = $b0 & 15;

        $i1 = (int) $b0;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        return;
    }

    protected static java.lang.String decrypt(byte[]) throws java.lang.Exception
    {
        byte[] $r0, $r2;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r1 = "758353266#MSISDN";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r0 = staticinvoke <com.skt.wifiagent.AssistCrypto: byte[] decrypt(byte[],byte[])>($r2, $r0);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r0);

        return $r1;
    }

    private static byte[] decrypt(byte[], byte[]) throws java.lang.Exception
    {
        byte[] $r0, $r1;
        javax.crypto.spec.IvParameterSpec r2;
        javax.crypto.spec.SecretKeySpec r3;
        java.lang.String $r5;
        javax.crypto.Cipher $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        r3 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "AES");

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/NoPadding");

        r2 = new javax.crypto.spec.IvParameterSpec;

        $r5 = "ABC1234567890DEF";

        $r0 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        specialinvoke r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0);

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, r3, r2);

        $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r0;
    }

    protected static byte[] encrypt(byte[]) throws java.lang.Exception
    {
        byte[] $r0, $r2;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r1 = "758353266#MSISDN";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r0 = staticinvoke <com.skt.wifiagent.AssistCrypto: byte[] encrypt(byte[],byte[])>($r2, $r0);

        return $r0;
    }

    private static byte[] encrypt(byte[], byte[]) throws java.lang.Exception
    {
        byte[] $r0, $r1;
        javax.crypto.spec.IvParameterSpec r2;
        javax.crypto.spec.SecretKeySpec r3;
        java.lang.String $r5;
        javax.crypto.Cipher $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        r3 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "AES");

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/NoPadding");

        r2 = new javax.crypto.spec.IvParameterSpec;

        $r5 = "ABC1234567890DEF";

        $r0 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        specialinvoke r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0);

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, r3, r2);

        $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r0;
    }

    protected static java.lang.String fromHex(java.lang.String)
    {
        byte[] $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.String;

        $r2 = staticinvoke <com.skt.wifiagent.AssistCrypto: byte[] toByte(java.lang.String)>($r0);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        return $r1;
    }

    protected static byte[] toByte(java.lang.String)
    {
        byte[] r1;
        java.lang.Integer $r3;
        byte $b4;
        int i0, i1, $i2, $i3;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i0 = i0 / 2;

        r1 = newarray (byte)[i0];

        i1 = 0;

     label1:
        if i1 < i0 goto label2;

        return r1;

     label2:
        $i2 = i1 * 2;

        $i3 = i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r2, 16);

        $b4 = virtualinvoke $r3.<java.lang.Integer: byte byteValue()>();

        r1[i1] = $b4;

        i1 = i1 + 1;

        goto label1;
    }

    protected static java.lang.String toHex(java.lang.String)
    {
        byte[] $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r0 = staticinvoke <com.skt.wifiagent.AssistCrypto: java.lang.String toHex(byte[])>($r1);

        return $r0;
    }

    protected static java.lang.String toHex(byte[])
    {
        byte[] $r0;
        byte $b2;
        java.lang.StringBuffer r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return "";

     label1:
        r1 = new java.lang.StringBuffer;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label3;

        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label3:
        $b2 = $r0[$i0];

        staticinvoke <com.skt.wifiagent.AssistCrypto: void appendHex(java.lang.StringBuffer,byte)>(r1, $b2);

        $i0 = $i0 + 1;

        goto label2;
    }

    public static void <clinit>()
    {
        <com.skt.wifiagent.AssistCrypto: java.lang.String keyString> = "758353266#MSISDN";

        <com.skt.wifiagent.AssistCrypto: java.lang.String initialVectorParam> = "ABC1234567890DEF";

        <com.skt.wifiagent.AssistCrypto: java.lang.String algorithm> = "AES/CBC/NoPadding";

        <com.skt.wifiagent.AssistCrypto: java.lang.String HEX> = "0123456789ABCDEF";

        return;
    }
}
