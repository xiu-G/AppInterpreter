public final class ao extends java.lang.Object implements ak
{
    private aj a;
    private e b;
    private long c;
    private int d;
    private int e;
    private int f;
    private byte[] g;
    private long h;

    public void <init>(aj, e)
    {
        byte[] $r4;
        e $r2;
        aj $r1;
        java.io.IOException $r3;
        long $l0, $l1;
        ao r0;
        boolean $z0;

        r0 := @this: ao;

        $r1 := @parameter0: aj;

        $r2 := @parameter1: e;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ao: aj a> = null;

        r0.<ao: e b> = null;

        r0.<ao: long c> = 0L;

        r0.<ao: int d> = 0;

        r0.<ao: int e> = 0;

        r0.<ao: int f> = 0;

        r0.<ao: byte[] g> = null;

        r0.<ao: long h> = -1L;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("input parameter is null");

        throw $r3;

     label2:
        $z0 = specialinvoke r0.<ao: boolean a(aj,e)>($r1, $r2);

        if $z0 != 0 goto label3;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("count padding size fail");

        throw $r3;

     label3:
        r0.<ao: e b> = $r2;

        r0.<ao: aj a> = $r1;

        $l0 = $r1.<aj: long d>;

        $l1 = $r1.<aj: long c>;

        $l0 = $l0 - $l1;

        r0.<ao: long c> = $l0;

        $r4 = newarray (byte)[16];

        r0.<ao: byte[] g> = $r4;

        return;
    }

    public void <init>(java.lang.String, long, long, e)
    {
        java.lang.Throwable $r6;
        java.io.RandomAccessFile $r4;
        byte[] $r7;
        e $r2;
        aj $r3, $r8;
        long $l0, $l1;
        java.io.IOException $r5, $r9;
        ao r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: ao;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r2 := @parameter3: e;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ao: aj a> = null;

        r0.<ao: e b> = null;

        r0.<ao: long c> = 0L;

        r0.<ao: int d> = 0;

        r0.<ao: int e> = 0;

        r0.<ao: int f> = 0;

        r0.<ao: byte[] g> = null;

        r0.<ao: long h> = -1L;

        $r8 = new aj;

        specialinvoke $r8.<aj: void <init>(java.lang.String,long,long)>($r1, $l0, $l1);

        r0.<ao: aj a> = $r8;

        $r3 = r0.<ao: aj a>;

        $z0 = specialinvoke r0.<ao: boolean a(aj,e)>($r3, $r2);

        if $z0 != 0 goto label4;

        $r3 = r0.<ao: aj a>;

        $r4 = $r3.<aj: java.io.RandomAccessFile b>;

        if $r4 == null goto label2;

        $r4 = $r3.<aj: java.io.RandomAccessFile b>;

     label1:
        virtualinvoke $r4.<java.io.RandomAccessFile: void close()>();

     label2:
        $r3.<aj: java.io.RandomAccessFile b> = null;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("count padding size fail");

        throw $r9;

     label3:
        $r6 := @caughtexception;

        $r5 = (java.io.IOException) $r6;

        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

        goto label2;

     label4:
        $r3 = r0.<ao: aj a>;

        $l1 = $r3.<aj: long d>;

        $l0 = $r3.<aj: long c>;

        $l0 = $l1 - $l0;

        r0.<ao: long c> = $l0;

        $r7 = newarray (byte)[16];

        r0.<ao: byte[] g> = $r7;

        r0.<ao: e b> = $r2;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private boolean a(aj, e)
    {
        java.io.RandomAccessFile $r3;
        byte[] $r6;
        e $r2;
        aj $r1;
        long $l0, $l1;
        java.io.IOException $r4, $r7;
        ao r0;
        java.lang.Exception $r5;
        byte $b3;
        int $i2, $i4;
        boolean $z0;

        r0 := @this: ao;

        $r1 := @parameter0: aj;

        $r2 := @parameter1: e;

        $l0 = $r1.<aj: long d>;

        $l1 = $r1.<aj: long c>;

        $l0 = $l0 - $l1;

        $i2 = (int) $l0;

        $i2 = $i2 % 512;

        if $i2 != 0 goto label21;

        $l0 = $l0 - 512L;

     label01:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

     label02:
        if $r3 != null goto label05;

        $r7 = new java.io.IOException;

        $r4 = $r7;

     label03:
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r4;

     label04:
        $r5 := @caughtexception;

        return 0;

     label05:
        $b3 = $l0 cmp 0L;

        $i2 = (int) $b3;

        if $i2 >= 0 goto label07;

        $r7 = new java.io.IOException;

        $r4 = $r7;

     label06:
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the pos is less than zero");

        throw $r4;

     label07:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        $l1 = $r1.<aj: long c>;

     label08:
        $l0 = $l0 + $l1;

     label09:
        virtualinvoke $r3.<java.io.RandomAccessFile: void seek(long)>($l0);

     label10:
        $i2 = 512;

     label11:
        interfaceinvoke $r2.<e: void a()>();

        $r6 = newarray (byte)[$i2];

        $i4 = lengthof $r6;

        $i4 = virtualinvoke $r1.<aj: int a(byte[],int,int)>($r6, 0, $i4);

     label12:
        if $i4 != $i2 goto label38;

     label13:
        $i4 = interfaceinvoke $r2.<e: int a(byte[],int,int,byte[],int,boolean)>($r6, 0, $i2, $r6, 0, 1);

     label14:
        if $i2 < $i4 goto label37;

        $i2 = $i2 - $i4;

     label15:
        r0.<ao: int d> = $i2;

     label16:
        $z0 = 1;

     label17:
        interfaceinvoke $r2.<e: void a()>();

     label18:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

     label19:
        if $r3 != null goto label31;

        $r7 = new java.io.IOException;

        $r4 = $r7;

     label20:
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r4;

     label21:
        $l1 = (long) $i2;

        $l0 = $l0 - $l1;

     label22:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

     label23:
        if $r3 != null goto label25;

        $r7 = new java.io.IOException;

        $r4 = $r7;

     label24:
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r4;

     label25:
        $b3 = $l0 cmp 0L;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label27;

        $r7 = new java.io.IOException;

        $r4 = $r7;

     label26:
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the pos is less than zero");

        throw $r4;

     label27:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        $l1 = $r1.<aj: long c>;

     label28:
        $l0 = $l0 + $l1;

     label29:
        virtualinvoke $r3.<java.io.RandomAccessFile: void seek(long)>($l0);

     label30:
        goto label11;

     label31:
        $i2 = (int) 0;

        if $i2 >= 0 goto label33;

        $r7 = new java.io.IOException;

        $r4 = $r7;

     label32:
        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the pos is less than zero");

        throw $r4;

     label33:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        $l0 = $r1.<aj: long c>;

     label34:
        $l0 = $l0 + 0L;

     label35:
        virtualinvoke $r3.<java.io.RandomAccessFile: void seek(long)>($l0);

     label36:
        return $z0;

     label37:
        $z0 = 0;

        goto label17;

     label38:
        $z0 = 0;

        goto label18;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Exception from label03 to label04 with label04;
        catch java.lang.Exception from label06 to label08 with label04;
        catch java.lang.Exception from label09 to label10 with label04;
        catch java.lang.Exception from label11 to label12 with label04;
        catch java.lang.Exception from label13 to label14 with label04;
        catch java.lang.Exception from label15 to label16 with label04;
        catch java.lang.Exception from label17 to label19 with label04;
        catch java.lang.Exception from label20 to label21 with label04;
        catch java.lang.Exception from label22 to label23 with label04;
        catch java.lang.Exception from label24 to label25 with label04;
        catch java.lang.Exception from label26 to label28 with label04;
        catch java.lang.Exception from label29 to label30 with label04;
        catch java.lang.Exception from label32 to label34 with label04;
        catch java.lang.Exception from label35 to label36 with label04;
    }

    private int b(byte[], int, int)
    {
        byte[] $r1, $r4, $r6;
        java.io.RandomAccessFile $r3;
        long $l2, $l3;
        byte $b4;
        int $i0, $i1, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0;
        e $r5;
        aj $r2;
        java.io.IOException $r7;
        ao r0;

        r0 := @this: ao;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<ao: aj a>;

        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label01;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r7;

     label01:
        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        $l2 = virtualinvoke $r3.<java.io.RandomAccessFile: long getFilePointer()>();

        $l3 = (long) $i1;

        $l2 = $l2 + $l3;

        $l3 = $r2.<aj: long d>;

        $b4 = $l2 cmp $l3;

        $i5 = (int) $b4;

        if $i5 < 0 goto label03;

        $z0 = 1;

     label02:
        $i5 = r0.<ao: int d>;

        if $i1 != $i5 goto label04;

        if $z0 != 1 goto label04;

        return -1;

     label03:
        $z0 = 0;

        goto label02;

     label04:
        $i5 = r0.<ao: int e>;

        if $i5 <= 0 goto label38;

        $i5 = r0.<ao: int e>;

        if $i5 > $i1 goto label06;

        $r4 = r0.<ao: byte[] g>;

        $i5 = r0.<ao: int e>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r1, $i0, $i5);

        $i5 = r0.<ao: int e>;

        $i6 = r0.<ao: int e>;

        $i1 = $i1 - $i6;

        r0.<ao: int e> = 0;

        if $i1 == 0 goto label39;

     label05:
        $i6 = r0.<ao: int f>;

        if $i6 <= 0 goto label37;

        $i6 = r0.<ao: int f>;

        $i6 = 512 - $i6;

        if $i1 <= $i6 goto label37;

        $r2 = r0.<ao: aj a>;

        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label07;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r7;

     label06:
        $r4 = r0.<ao: byte[] g>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r1, $i0, $i1);

        $i0 = r0.<ao: int e>;

        $i0 = $i0 - $i1;

        r0.<ao: int e> = $i0;

        $r1 = r0.<ao: byte[] g>;

        $r4 = r0.<ao: byte[] g>;

        $i0 = r0.<ao: int e>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r4, 0, $i0);

        return $i1;

     label07:
        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        $l2 = virtualinvoke $r3.<java.io.RandomAccessFile: long getFilePointer()>();

        $l3 = (long) $i6;

        $l2 = $l2 + $l3;

        $l3 = $r2.<aj: long d>;

        $b4 = $l2 cmp $l3;

        $i7 = (int) $b4;

        if $i7 < 0 goto label09;

        $z0 = 1;

     label08:
        $r2 = r0.<ao: aj a>;

        $i7 = $i0 + $i5;

        $i6 = virtualinvoke $r2.<aj: int a(byte[],int,int)>($r1, $i7, $i6);

        $r5 = r0.<ao: e b>;

        $i7 = $i0 + $i5;

        $i8 = $i0 + $i5;

        $i7 = interfaceinvoke $r5.<e: int a(byte[],int,int,byte[],int,boolean)>($r1, $i7, $i6, $r1, $i8, $z0);

        $r5 = r0.<ao: e b>;

        interfaceinvoke $r5.<e: void a()>();

        r0.<ao: int f> = 0;

        $i5 = $i5 + $i7;

        if $z0 == 0 goto label11;

        $i0 = r0.<ao: int d>;

        $i1 = $i6 - $i7;

        if $i0 == $i1 goto label10;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("decrypt fail, isn\'t the last block buffer");

        throw $r7;

     label09:
        $z0 = 0;

        goto label08;

     label10:
        return $i5;

     label11:
        if $i6 == $i7 goto label12;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("decrypt fail, input data length isn\'t the same with output data length");

        throw $r7;

     label12:
        $i6 = $i1 - $i7;

     label13:
        $i1 = $i6 / 512;

        $i7 = $i6 % 512;

        $i6 = 0;

     label14:
        if $i6 >= $i1 goto label21;

        $r2 = r0.<ao: aj a>;

        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label15;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r7;

     label15:
        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        $l2 = virtualinvoke $r3.<java.io.RandomAccessFile: long getFilePointer()>();

        $l2 = $l2 + 512L;

        $l3 = $r2.<aj: long d>;

        $b4 = $l2 cmp $l3;

        $i8 = (int) $b4;

        if $i8 < 0 goto label17;

        $z0 = 1;

     label16:
        $r2 = r0.<ao: aj a>;

        $i8 = $i5 + $i0;

        $i8 = virtualinvoke $r2.<aj: int a(byte[],int,int)>($r1, $i8, 512);

        $r5 = r0.<ao: e b>;

        $i9 = $i5 + $i0;

        $i10 = $i5 + $i0;

        $i9 = interfaceinvoke $r5.<e: int a(byte[],int,int,byte[],int,boolean)>($r1, $i9, $i8, $r1, $i10, $z0);

        $i5 = $i5 + $i9;

        $r5 = r0.<ao: e b>;

        interfaceinvoke $r5.<e: void a()>();

        if $z0 == 0 goto label19;

        $i0 = r0.<ao: int d>;

        $i1 = $i8 - $i9;

        if $i0 == $i1 goto label18;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("decrypt fail, isn\'t the last block buffer");

        throw $r7;

     label17:
        $z0 = 0;

        goto label16;

     label18:
        return $i5;

     label19:
        if $i8 == $i9 goto label20;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("decrypt fail, input data length isn\'t the same with output data length");

        throw $r7;

     label20:
        $i6 = $i6 + 1;

        goto label14;

     label21:
        if $i7 <= 0 goto label36;

        $i6 = $i7 / 16;

        $i1 = $i7 % 16;

        if $i6 <= 0 goto label27;

        $r2 = r0.<ao: aj a>;

        $i7 = $i6 << 4;

        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label22;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r7;

     label22:
        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        $l2 = virtualinvoke $r3.<java.io.RandomAccessFile: long getFilePointer()>();

        $l3 = (long) $i7;

        $l2 = $l2 + $l3;

        $l3 = $r2.<aj: long d>;

        $b4 = $l2 cmp $l3;

        $i7 = (int) $b4;

        if $i7 < 0 goto label24;

        $z0 = 1;

     label23:
        $r2 = r0.<ao: aj a>;

        $i7 = $i0 + $i5;

        $i8 = $i6 << 4;

        $i7 = virtualinvoke $r2.<aj: int a(byte[],int,int)>($r1, $i7, $i8);

        $r5 = r0.<ao: e b>;

        $i8 = $i0 + $i5;

        $i9 = $i0 + $i5;

        $i8 = interfaceinvoke $r5.<e: int a(byte[],int,int,byte[],int,boolean)>($r1, $i8, $i7, $r1, $i9, $z0);

        $i5 = $i5 + $i8;

        if $z0 == 0 goto label25;

        $i9 = r0.<ao: int d>;

        $i7 = $i7 - $i8;

        if $i9 == $i7 goto label26;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("decrypt fail, isn\'t the last block buffer");

        throw $r7;

     label24:
        $z0 = 0;

        goto label23;

     label25:
        if $i7 == $i8 goto label26;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("decrypt fail, input data length isn\'t the same with output data length");

        throw $r7;

     label26:
        $i7 = r0.<ao: int f>;

        $i6 = $i6 << 4;

        $i6 = $i7 + $i6;

        r0.<ao: int f> = $i6;

     label27:
        if $i1 <= 0 goto label35;

        $r2 = r0.<ao: aj a>;

        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label28;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r7;

     label28:
        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        $l2 = virtualinvoke $r3.<java.io.RandomAccessFile: long getFilePointer()>();

        $l2 = $l2 + 16L;

        $l3 = $r2.<aj: long d>;

        $b4 = $l2 cmp $l3;

        $i6 = (int) $b4;

        if $i6 < 0 goto label30;

        $z0 = 1;

     label29:
        $r2 = r0.<ao: aj a>;

        $r4 = r0.<ao: byte[] g>;

        $i7 = virtualinvoke $r2.<aj: int a(byte[],int,int)>($r4, 0, 16);

        $r5 = r0.<ao: e b>;

        $r4 = r0.<ao: byte[] g>;

        $r6 = r0.<ao: byte[] g>;

        $i6 = interfaceinvoke $r5.<e: int a(byte[],int,int,byte[],int,boolean)>($r4, 0, $i7, $r6, 0, $z0);

        r0.<ao: int e> = $i6;

        if $z0 == 0 goto label33;

        $i1 = r0.<ao: int d>;

        $i7 = $i7 - $i6;

        if $i1 == $i7 goto label31;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("decrypt fail, isn\'t the last block buffer");

        throw $r7;

     label30:
        $z0 = 0;

        goto label29;

     label31:
        $i1 = lengthof $r1;

        $i7 = $i0 + $i5;

        $i7 = $i7 + $i6;

        if $i1 >= $i7 goto label32;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("outer buffer is too small");

        throw $r7;

     label32:
        $r4 = r0.<ao: byte[] g>;

        $i0 = $i0 + $i5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r1, $i0, $i6);

        r0.<ao: int e> = 0;

        r0.<ao: int f> = 0;

        $i0 = $i6 + $i5;

        return $i0;

     label33:
        if $i7 == $i6 goto label34;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("decrypt fail, input data length isn\'t the same with output data length");

        throw $r7;

     label34:
        $r4 = r0.<ao: byte[] g>;

        $i0 = $i0 + $i5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r1, $i0, $i1);

        $i0 = r0.<ao: int e>;

        $i0 = $i0 - $i1;

        r0.<ao: int e> = $i0;

        $r1 = r0.<ao: byte[] g>;

        $r4 = r0.<ao: byte[] g>;

        $i0 = r0.<ao: int e>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r4, 0, $i0);

        $i0 = $i5 + $i1;

        $i1 = r0.<ao: int f>;

        $i1 = $i1 + 16;

        r0.<ao: int f> = $i1;

        return $i0;

     label35:
        return $i5;

     label36:
        return $i5;

     label37:
        $i6 = $i1;

        goto label13;

     label38:
        $i5 = 0;

        goto label05;

     label39:
        return $i5;
    }

    public final int a()
    {
        java.io.RandomAccessFile $r3;
        int $i2;
        aj $r1;
        long $l0, $l1;
        java.io.IOException $r2;
        ao r0;

        r0 := @this: ao;

        $r1 = r0.<ao: aj a>;

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("the file stream was closed");

        throw $r2;

     label1:
        $r1 = r0.<ao: aj a>;

        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r2;

     label2:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        $l1 = virtualinvoke $r3.<java.io.RandomAccessFile: long getFilePointer()>();

        $l0 = $r1.<aj: long c>;

        $l0 = $l1 - $l0;

        $i2 = r0.<ao: int e>;

        $l1 = (long) $i2;

        $l0 = $l0 - $l1;

        $l1 = r0.<ao: long c>;

        $l0 = $l1 - $l0;

        $i2 = r0.<ao: int d>;

        $l1 = (long) $i2;

        $l0 = $l0 - $l1;

        $i2 = (int) $l0;

        if $i2 <= 0 goto label3;

        return $i2;

     label3:
        return 0;
    }

    public final int a(byte[], int, int)
    {
        byte[] $r1;
        java.io.RandomAccessFile $r3;
        java.lang.IndexOutOfBoundsException $r7;
        long $l2, $l3, $l6;
        java.lang.NullPointerException $r6;
        byte $b5;
        int $i0, $i1, $i4;
        java.lang.String $r5;
        aj $r2;
        java.io.IOException $r8;
        ao r0;
        java.lang.Exception $r4;

        r0 := @this: ao;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label01;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>()>();

        throw $r6;

     label01:
        if $i0 < 0 goto label02;

        if $i1 < 0 goto label02;

        $i4 = lengthof $r1;

        $i4 = $i4 - $i0;

        if $i1 <= $i4 goto label03;

     label02:
        $r7 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r7;

     label03:
        if $i1 != 0 goto label04;

        return 0;

     label04:
        $r2 = r0.<ao: aj a>;

        if $r2 != null goto label05;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("the file stream was closed");

        throw $r8;

     label05:
        $r2 = r0.<ao: aj a>;

        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label06;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r8;

     label06:
        $r3 = $r2.<aj: java.io.RandomAccessFile b>;

        $l3 = virtualinvoke $r3.<java.io.RandomAccessFile: long getFilePointer()>();

        $l2 = $r2.<aj: long c>;

        $l2 = $l3 - $l2;

        $l3 = r0.<ao: long c>;

        $b5 = $l2 cmp $l3;

        $i4 = (int) $b5;

        if $i4 < 0 goto label07;

        return -1;

     label07:
        $l3 = (long) $i1;

        $l6 = $l3 + $l2;

        $l3 = r0.<ao: long c>;

        $b5 = $l6 cmp $l3;

        $i4 = (int) $b5;

        if $i4 <= 0 goto label08;

        $l3 = r0.<ao: long c>;

        $l2 = $l3 - $l2;

        $i1 = (int) $l2;

     label08:
        $i0 = specialinvoke r0.<ao: int b(byte[],int,int)>($r1, $i0, $i1);

     label09:
        return $i0;

     label10:
        $r4 := @caughtexception;

        $r8 = new java.io.IOException;

        $r5 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r8;

        catch java.lang.Exception from label08 to label09 with label10;
    }

    public final long a(long)
    {
        java.io.RandomAccessFile $r2;
        byte[] $r4;
        e $r3;
        aj $r1;
        java.lang.Error $r6;
        long $l0, $l1, $l3, $l5, $l6;
        java.io.IOException $r5;
        ao r0;
        byte $b2;
        int $i4, $i7;

        r0 := @this: ao;

        $l0 := @parameter0: long;

        $b2 = $l0 cmp 0L;

        $i4 = (int) $b2;

        if $i4 > 0 goto label1;

        return 0L;

     label1:
        $r1 = r0.<ao: aj a>;

        if $r1 != null goto label2;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the file stream was closed");

        throw $r5;

     label2:
        $r1 = r0.<ao: aj a>;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r2 != null goto label3;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r5;

     label3:
        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        $l3 = virtualinvoke $r2.<java.io.RandomAccessFile: long getFilePointer()>();

        $l1 = $r1.<aj: long c>;

        $l1 = $l3 - $l1;

        $i4 = r0.<ao: int e>;

        $l3 = (long) $i4;

        $l1 = $l1 - $l3;

        $l3 = r0.<ao: long c>;

        $i4 = r0.<ao: int d>;

        $l5 = (long) $i4;

        $l3 = $l3 - $l5;

        $b2 = $l1 cmp $l3;

        $i4 = (int) $b2;

        if $i4 < 0 goto label4;

        return 0L;

     label4:
        $l3 = $l1 + $l0;

        $l5 = r0.<ao: long c>;

        $i4 = r0.<ao: int d>;

        $l6 = (long) $i4;

        $l5 = $l5 - $l6;

        $b2 = $l3 cmp $l5;

        $i4 = (int) $b2;

        if $i4 <= 0 goto label5;

        $l0 = r0.<ao: long c>;

        $i4 = r0.<ao: int d>;

        $l3 = (long) $i4;

        $l0 = $l0 - $l3;

        $l0 = $l0 - $l1;

     label5:
        r0.<ao: int e> = 0;

        $r3 = r0.<ao: e b>;

        interfaceinvoke $r3.<e: void a()>();

        r0.<ao: int f> = 0;

        $l3 = $l0 + $l1;

        $l3 = $l3 / 512L;

        $l1 = $l1 + $l0;

        $i4 = (int) $l1;

        $i4 = $i4 % 512;

        $r1 = r0.<ao: aj a>;

        $l3 = $l3 << 9;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r2 != null goto label6;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r5;

     label6:
        $b2 = $l3 cmp 0L;

        $i7 = (int) $b2;

        if $i7 >= 0 goto label7;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the pos is less than zero");

        throw $r5;

     label7:
        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        $l1 = $r1.<aj: long c>;

        $l1 = $l3 + $l1;

        virtualinvoke $r2.<java.io.RandomAccessFile: void seek(long)>($l1);

        $r4 = newarray (byte)[$i4];

        $i7 = virtualinvoke r0.<ao: int a(byte[],int,int)>($r4, 0, $i4);

        if $i7 == $i4 goto label8;

        $r6 = new java.lang.Error;

        specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>("discard data fail");

        throw $r6;

     label8:
        return $l0;
    }

    public final void a(boolean)
    {
        java.io.RandomAccessFile $r3;
        byte[] $r4;
        e $r2;
        aj $r1;
        java.lang.Error $r6;
        long $l1, $l4;
        java.io.IOException $r5;
        ao r0;
        byte $b0;
        int $i2, $i3, $i5;
        boolean $z0;

        r0 := @this: ao;

        $z0 := @parameter0: boolean;

        $r1 = r0.<ao: aj a>;

        if $r1 != null goto label01;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the file stream was closed");

        throw $r5;

     label01:
        if $z0 == 0 goto label05;

        r0.<ao: int e> = 0;

        $r2 = r0.<ao: e b>;

        interfaceinvoke $r2.<e: void a()>();

        r0.<ao: int f> = 0;

        $r1 = r0.<ao: aj a>;

        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label02;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r5;

     label02:
        $b0 = 0L cmp 0L;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label03;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the pos is less than zero");

        throw $r5;

     label03:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        $l1 = $r1.<aj: long c>;

        $l1 = $l1 + 0L;

        virtualinvoke $r3.<java.io.RandomAccessFile: void seek(long)>($l1);

     label04:
        r0.<ao: long h> = -1L;

        return;

     label05:
        $l1 = r0.<ao: long h>;

        $b0 = $l1 cmp 0L;

        $i2 = (int) $b0;

        if $i2 < 0 goto label04;

        r0.<ao: int e> = 0;

        $r2 = r0.<ao: e b>;

        interfaceinvoke $r2.<e: void a()>();

        r0.<ao: int f> = 0;

        $l1 = r0.<ao: long h>;

        $i2 = (int) $l1;

        $i3 = $i2 / 512;

        $l1 = r0.<ao: long h>;

        $i2 = (int) $l1;

        $i2 = $i2 % 512;

        $r1 = r0.<ao: aj a>;

        $i3 = $i3 << 9;

        $l1 = (long) $i3;

        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label06;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r5;

     label06:
        $b0 = $l1 cmp 0L;

        $i3 = (int) $b0;

        if $i3 >= 0 goto label07;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the pos is less than zero");

        throw $r5;

     label07:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        $l4 = $r1.<aj: long c>;

        $l1 = $l1 + $l4;

        virtualinvoke $r3.<java.io.RandomAccessFile: void seek(long)>($l1);

        if $i2 <= 0 goto label04;

        $r4 = newarray (byte)[$i2];

        $i3 = virtualinvoke r0.<ao: int a(byte[],int,int)>($r4, 0, $i2);

        if $i3 == $i2 goto label04;

        $r1 = r0.<ao: aj a>;

        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r3 != null goto label08;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r5;

     label08:
        $r3 = $r1.<aj: java.io.RandomAccessFile b>;

        $l1 = virtualinvoke $r3.<java.io.RandomAccessFile: long getFilePointer()>();

        $l4 = $r1.<aj: long d>;

        $b0 = $l1 cmp $l4;

        $i5 = (int) $b0;

        if $i5 < 0 goto label10;

        $z0 = 1;

     label09:
        if $z0 == 0 goto label11;

        $i5 = r0.<ao: int d>;

        $i2 = $i2 - $i3;

        if $i5 == $i2 goto label04;

        $r6 = new java.lang.Error;

        specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>("discard data fail(wrong padding data)");

        throw $r6;

     label10:
        $z0 = 0;

        goto label09;

     label11:
        $r6 = new java.lang.Error;

        specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>("discard data fail");

        throw $r6;
    }

    public final void b()
    {
        java.lang.Throwable $r3;
        java.io.RandomAccessFile $r2;
        aj $r1;
        java.io.IOException $r4;
        ao r0;

        r0 := @this: ao;

        $r1 = r0.<ao: aj a>;

        if $r1 == null goto label3;

        $r1 = r0.<ao: aj a>;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r2 == null goto label2;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

     label1:
        virtualinvoke $r2.<java.io.RandomAccessFile: void close()>();

     label2:
        $r1.<aj: java.io.RandomAccessFile b> = null;

     label3:
        r0.<ao: aj a> = null;

        return;

     label4:
        $r3 := @caughtexception;

        $r4 = (java.io.IOException) $r3;

        virtualinvoke $r4.<java.io.IOException: void printStackTrace()>();

        goto label2;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public final void c()
    {
        java.lang.Throwable $r4;
        java.io.RandomAccessFile $r2;
        aj $r1;
        long $l0, $l1;
        java.io.IOException $r3;
        ao r0;
        int $i2;

        r0 := @this: ao;

        $r1 = r0.<ao: aj a>;

        if $r1 == null goto label6;

        $r1 = r0.<ao: aj a>;

        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

        if $r2 != null goto label3;

        $r3 = new java.io.IOException;

     label1:
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("the file was closed");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        return;

     label3:
        $r2 = $r1.<aj: java.io.RandomAccessFile b>;

     label4:
        $l1 = virtualinvoke $r2.<java.io.RandomAccessFile: long getFilePointer()>();

     label5:
        $l0 = $r1.<aj: long c>;

        $l0 = $l1 - $l0;

        $i2 = r0.<ao: int e>;

        $l1 = (long) $i2;

        $l0 = $l0 - $l1;

        r0.<ao: long h> = $l0;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label2;
        catch java.io.IOException from label4 to label5 with label2;
    }

    public final boolean d()
    {
        byte $b1;
        int $i2;
        long $l0;
        ao r0;

        r0 := @this: ao;

        $l0 = r0.<ao: long h>;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final long e()
    {
        int $i1;
        long $l0, $l2;
        ao r0;

        r0 := @this: ao;

        $l0 = r0.<ao: long c>;

        $i1 = r0.<ao: int d>;

        $l2 = (long) $i1;

        $l0 = $l0 - $l2;

        return $l0;
    }
}
