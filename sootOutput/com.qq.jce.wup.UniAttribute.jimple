public class com.qq.jce.wup.UniAttribute extends com.qq.taf.jce.JceStruct
{
    static final boolean $assertionsDisabled;
    protected java.util.HashMap _data;
    com.qq.taf.jce.JceInputStream _is;
    private java.util.HashMap cachedClassName;
    private java.util.HashMap cachedData;
    protected java.lang.String encodeName;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        $r0 = class "Lcom/qq/jce/wup/UniAttribute;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.qq.jce.wup.UniAttribute: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void <init>()
    {
        com.qq.jce.wup.UniAttribute r0;
        com.qq.taf.jce.JceInputStream $r2;
        java.util.HashMap $r1;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        specialinvoke r0.<com.qq.taf.jce.JceStruct: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(128);

        r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedClassName> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(128);

        r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData> = $r1;

        r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName> = "GBK";

        $r2 = new com.qq.taf.jce.JceInputStream;

        specialinvoke $r2.<com.qq.taf.jce.JceInputStream: void <init>()>();

        r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is> = $r2;

        return;
    }

    public void <init>(java.util.HashMap)
    {
        com.qq.taf.jce.JceInputStream $r3;
        com.qq.jce.wup.UniAttribute r0;
        java.util.HashMap r1, $r2;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        r1 := @parameter0: java.util.HashMap;

        specialinvoke r0.<com.qq.taf.jce.JceStruct: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(128);

        r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedClassName> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(128);

        r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData> = $r2;

        r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName> = "GBK";

        $r3 = new com.qq.taf.jce.JceInputStream;

        specialinvoke $r3.<com.qq.taf.jce.JceInputStream: void <init>()>();

        r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is> = $r3;

        r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data> = r1;

        return;
    }

    private void checkObjectType(java.util.ArrayList, java.lang.Object)
    {
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.lang.IllegalArgumentException $r5;
        java.util.ArrayList r1;
        java.util.List r6;
        java.util.Map r7;
        int $i0;
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object $r2, $r10;
        java.lang.Class $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String toString()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only byte[] is supported");

        throw $r5;

     label1:
        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r2);

        if $i0 <= 0 goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("java.util.List");

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r2, 0);

        specialinvoke r0.<com.qq.jce.wup.UniAttribute: void checkObjectType(java.util.ArrayList,java.lang.Object)>(r1, $r2);

        return;

     label2:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("Array");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("?");

        return;

     label3:
        $z0 = $r2 instanceof java.lang.reflect.Array;

        if $z0 == 0 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can not support Array, please use List");

        throw $r5;

     label4:
        $z0 = $r2 instanceof java.util.List;

        if $z0 == 0 goto label6;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("java.util.List");

        r6 = (java.util.List) $r2;

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        if $i0 <= 0 goto label5;

        $r2 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0);

        specialinvoke r0.<com.qq.jce.wup.UniAttribute: void checkObjectType(java.util.ArrayList,java.lang.Object)>(r1, $r2);

        return;

     label5:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("?");

        return;

     label6:
        $z0 = $r2 instanceof java.util.Map;

        if $z0 == 0 goto label8;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("java.util.Map");

        r7 = (java.util.Map) $r2;

        $i0 = interfaceinvoke r7.<java.util.Map: int size()>();

        if $i0 <= 0 goto label7;

        $r8 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        $r2 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        specialinvoke r0.<com.qq.jce.wup.UniAttribute: void checkObjectType(java.util.ArrayList,java.lang.Object)>(r1, $r10);

        return;

     label7:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("?");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("?");

        return;

     label8:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return;
    }

    private java.lang.Object getCacheProxy(java.lang.String)
    {
        com.qq.jce.wup.UniAttribute r0;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedClassName>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedClassName>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        return $r3;

     label1:
        $r3 = staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: java.lang.Object createClassByUni(java.lang.String)>($r1);

        $r2 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedClassName>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $r3;
    }

    private void saveDataCache(java.lang.String, java.lang.Object)
    {
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        java.lang.String $r1;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("res", $r2);

        return;
    }

    public void clearCacheData()
    {
        com.qq.jce.wup.UniAttribute r0;
        java.util.HashMap $r1;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.Throwable r1;
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object $r2;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $z0 = <com.qq.jce.wup.UniAttribute: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean containsKey(java.lang.String)
    {
        com.qq.jce.wup.UniAttribute r0;
        java.util.HashMap $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public void decode(byte[])
    {
        byte[] $r1;
        com.qq.taf.jce.JceInputStream $r4;
        com.qq.jce.wup.UniAttribute r0;
        java.util.HashMap r2, r3;
        java.lang.String $r5;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: byte[];

        $r4 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        virtualinvoke $r4.<com.qq.taf.jce.JceInputStream: void warp(byte[])>($r1);

        $r4 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        $r5 = r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName>;

        virtualinvoke $r4.<com.qq.taf.jce.JceInputStream: int setServerEncoding(java.lang.String)>($r5);

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>(int)>(1);

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>(int)>(1);

        $r1 = newarray (byte)[0];

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("", $r1);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("", r3);

        $r4 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        r2 = virtualinvoke $r4.<com.qq.taf.jce.JceInputStream: java.util.HashMap readMap(java.util.Map,int,boolean)>(r2, 0, 0);

        r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data> = r2;

        return;
    }

    public void display(java.lang.StringBuilder, int)
    {
        int $i0;
        com.qq.taf.jce.JceDisplayer r2;
        com.qq.jce.wup.UniAttribute r0;
        java.lang.StringBuilder $r1;
        java.util.HashMap $r3;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        r2 = new com.qq.taf.jce.JceDisplayer;

        specialinvoke r2.<com.qq.taf.jce.JceDisplayer: void <init>(java.lang.StringBuilder,int)>($r1, $i0);

        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        virtualinvoke r2.<com.qq.taf.jce.JceDisplayer: com.qq.taf.jce.JceDisplayer display(java.util.Map,java.lang.String)>($r3, "_data");

        return;
    }

    public byte[] encode()
    {
        byte[] $r5;
        com.qq.jce.wup.UniAttribute r0;
        java.util.HashMap $r3;
        java.lang.String $r2;
        com.qq.taf.jce.JceOutputStream r1;
        java.nio.ByteBuffer $r4;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        r1 = new com.qq.taf.jce.JceOutputStream;

        specialinvoke r1.<com.qq.taf.jce.JceOutputStream: void <init>(int)>(0);

        $r2 = r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName>;

        virtualinvoke r1.<com.qq.taf.jce.JceOutputStream: int setServerEncoding(java.lang.String)>($r2);

        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        virtualinvoke r1.<com.qq.taf.jce.JceOutputStream: void write(java.util.Map,int)>($r3, 0);

        $r4 = virtualinvoke r1.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer getByteBuffer()>();

        $r5 = staticinvoke <com.qq.taf.jce.JceUtil: byte[] getJceBufArray(java.nio.ByteBuffer)>($r4);

        return $r5;
    }

    public boolean equals(java.lang.Object)
    {
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object $r1;
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.Object;

        r0 = (com.qq.jce.wup.UniAttribute) $r1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r2 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $z0 = staticinvoke <com.qq.taf.jce.JceUtil: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $z0;
    }

    public java.lang.Object get(java.lang.String) throws com.qq.jce.wup.ObjectCreateException
    {
        byte[] r6;
        java.util.Map$Entry r9;
        java.util.Iterator $r8;
        com.qq.jce.wup.ObjectCreateException $r11;
        java.util.Set $r7;
        java.util.HashMap $r3;
        java.lang.Exception r2;
        com.qq.taf.jce.JceInputStream $r10;
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object $r4;
        java.lang.String $r1, r5;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        return $r4;

     label2:
        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.util.HashMap) $r4;

        r5 = null;

        r6 = newarray (byte)[0];

        $r7 = virtualinvoke $r3.<java.util.HashMap: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r4;

        $r4 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (byte[]) $r4;

     label3:
        $r4 = specialinvoke r0.<com.qq.jce.wup.UniAttribute: java.lang.Object getCacheProxy(java.lang.String)>(r5);

        $r10 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        virtualinvoke $r10.<com.qq.taf.jce.JceInputStream: void warp(byte[])>(r6);

        $r10 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        r5 = r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName>;

        virtualinvoke $r10.<com.qq.taf.jce.JceInputStream: int setServerEncoding(java.lang.String)>(r5);

        $r10 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        $r4 = virtualinvoke $r10.<com.qq.taf.jce.JceInputStream: java.lang.Object read(java.lang.Object,int,boolean)>($r4, 0, 1);

        specialinvoke r0.<com.qq.jce.wup.UniAttribute: void saveDataCache(java.lang.String,java.lang.Object)>($r1, $r4);

     label4:
        return $r4;

     label5:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        $r11 = new com.qq.jce.wup.ObjectCreateException;

        specialinvoke $r11.<com.qq.jce.wup.ObjectCreateException: void <init>(java.lang.Exception)>(r2);

        throw $r11;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.Object get(java.lang.String, java.lang.Object)
    {
        byte[] r7;
        java.util.Map$Entry r10;
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.util.HashMap $r4;
        java.lang.Exception r2;
        com.qq.taf.jce.JceInputStream $r11;
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object r3, $r5;
        java.lang.String $r1, r6;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r4 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return r3;

     label1:
        $r4 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r4 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        r3 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        return r3;

     label2:
        $r4 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.HashMap) $r5;

        r6 = "";

        r7 = newarray (byte)[0];

        $r8 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r5;

        $r5 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (byte[]) $r5;

     label3:
        $r5 = specialinvoke r0.<com.qq.jce.wup.UniAttribute: java.lang.Object getCacheProxy(java.lang.String)>(r6);

        $r11 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        virtualinvoke $r11.<com.qq.taf.jce.JceInputStream: void warp(byte[])>(r7);

        $r11 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        r6 = r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName>;

        virtualinvoke $r11.<com.qq.taf.jce.JceInputStream: int setServerEncoding(java.lang.String)>(r6);

        $r11 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        $r5 = virtualinvoke $r11.<com.qq.taf.jce.JceInputStream: java.lang.Object read(java.lang.Object,int,boolean)>($r5, 0, 1);

        specialinvoke r0.<com.qq.jce.wup.UniAttribute: void saveDataCache(java.lang.String,java.lang.Object)>($r1, $r5);

     label4:
        return $r5;

     label5:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        specialinvoke r0.<com.qq.jce.wup.UniAttribute: void saveDataCache(java.lang.String,java.lang.Object)>($r1, r3);

        return r3;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.Object getByClass(java.lang.String, java.lang.Object) throws com.qq.jce.wup.ObjectCreateException
    {
        byte[] r6;
        java.util.Map$Entry r9;
        java.util.Iterator $r8;
        com.qq.jce.wup.ObjectCreateException $r12;
        java.util.Set $r7;
        java.util.HashMap $r4;
        java.lang.Exception r3;
        com.qq.taf.jce.JceInputStream $r11;
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object r2, $r5;
        java.lang.String $r1, r10;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>("res");

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>("res");

        if $z0 == 0 goto label2;

        $r4 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        r2 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("res");

        return r2;

     label2:
        $r4 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("res");

        $r4 = (java.util.HashMap) $r5;

        r6 = newarray (byte)[0];

        $r7 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (java.lang.String) $r5;

        $r5 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (byte[]) $r5;

     label3:
        $r11 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        virtualinvoke $r11.<com.qq.taf.jce.JceInputStream: void warp(byte[])>(r6);

        $r11 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        r10 = r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName>;

        virtualinvoke $r11.<com.qq.taf.jce.JceInputStream: int setServerEncoding(java.lang.String)>(r10);

        $r11 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        r2 = virtualinvoke $r11.<com.qq.taf.jce.JceInputStream: java.lang.Object read(java.lang.Object,int,boolean)>(r2, 0, 1);

        specialinvoke r0.<com.qq.jce.wup.UniAttribute: void saveDataCache(java.lang.String,java.lang.Object)>("res", r2);

     label4:
        return r2;

     label5:
        r3 := @caughtexception;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        $r12 = new com.qq.jce.wup.ObjectCreateException;

        specialinvoke $r12.<com.qq.jce.wup.ObjectCreateException: void <init>(java.lang.Exception)>(r3);

        throw $r12;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.String getEncodeName()
    {
        com.qq.jce.wup.UniAttribute r0;
        java.lang.String r1;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        r1 = r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName>;

        return r1;
    }

    public java.lang.Object getJceStruct(java.lang.String) throws com.qq.jce.wup.ObjectCreateException
    {
        byte[] r6;
        java.util.Map$Entry r9;
        java.util.Iterator $r8;
        com.qq.jce.wup.ObjectCreateException $r12;
        java.util.Set $r7;
        java.util.HashMap $r3;
        java.lang.Exception r2;
        com.qq.taf.jce.JceInputStream $r10;
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object $r4;
        java.lang.String $r1, r5;
        com.qq.taf.jce.JceStruct r11;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        return $r4;

     label2:
        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.util.HashMap) $r4;

        r5 = null;

        r6 = newarray (byte)[0];

        $r7 = virtualinvoke $r3.<java.util.HashMap: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r4;

        $r4 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (byte[]) $r4;

     label3:
        $r4 = specialinvoke r0.<com.qq.jce.wup.UniAttribute: java.lang.Object getCacheProxy(java.lang.String)>(r5);

        $r10 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        virtualinvoke $r10.<com.qq.taf.jce.JceInputStream: void warp(byte[])>(r6);

        $r10 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        r5 = r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName>;

        virtualinvoke $r10.<com.qq.taf.jce.JceInputStream: int setServerEncoding(java.lang.String)>(r5);

        $r10 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        r11 = (com.qq.taf.jce.JceStruct) $r4;

        r11 = virtualinvoke $r10.<com.qq.taf.jce.JceInputStream: com.qq.taf.jce.JceStruct directRead(com.qq.taf.jce.JceStruct,int,boolean)>(r11, 0, 1);

        specialinvoke r0.<com.qq.jce.wup.UniAttribute: void saveDataCache(java.lang.String,java.lang.Object)>($r1, r11);

     label4:
        return r11;

     label5:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        $r12 = new com.qq.jce.wup.ObjectCreateException;

        specialinvoke $r12.<com.qq.jce.wup.ObjectCreateException: void <init>(java.lang.Exception)>(r2);

        throw $r12;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.util.Set getKeySet()
    {
        com.qq.jce.wup.UniAttribute r0;
        java.util.Set $r2;
        java.util.HashMap $r1;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        return $r2;
    }

    public boolean isEmpty()
    {
        com.qq.jce.wup.UniAttribute r0;
        java.util.HashMap $r1;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean isEmpty()>();

        return $z0;
    }

    public void put(java.lang.String, java.lang.Object)
    {
        byte[] $r9;
        java.util.HashMap r5, $r10;
        java.lang.IllegalArgumentException $r6;
        java.nio.ByteBuffer $r8;
        java.util.ArrayList r4;
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object r2;
        java.lang.String $r1, $r7;
        com.qq.taf.jce.JceOutputStream r3;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        goto label1;

     label1:
        if r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("put value can not is null");

        throw $r6;

     label2:
        $z0 = r2 instanceof java.util.Set;

        if $z0 == 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can not support Set");

        throw $r6;

     label3:
        r3 = new com.qq.taf.jce.JceOutputStream;

        specialinvoke r3.<com.qq.taf.jce.JceOutputStream: void <init>()>();

        $r7 = r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName>;

        virtualinvoke r3.<com.qq.taf.jce.JceOutputStream: int setServerEncoding(java.lang.String)>($r7);

        virtualinvoke r3.<com.qq.taf.jce.JceOutputStream: void write(java.lang.Object,int)>(r2, 0);

        $r8 = virtualinvoke r3.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer getByteBuffer()>();

        $r9 = staticinvoke <com.qq.taf.jce.JceUtil: byte[] getJceBufArray(java.nio.ByteBuffer)>($r8);

        r5 = new java.util.HashMap;

        specialinvoke r5.<java.util.HashMap: void <init>(int)>(1);

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>(1);

        specialinvoke r0.<com.qq.jce.wup.UniAttribute: void checkObjectType(java.util.ArrayList,java.lang.Object)>(r4, r2);

        $r7 = staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: java.lang.String transTypeList(java.util.ArrayList)>(r4);

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r9);

        $r10 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap cachedData>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>("req");

        $r10 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("req", r5);

        return;
    }

    public void readFrom(com.qq.taf.jce.JceInputStream)
    {
        byte[] r3, $r5;
        java.util.HashMap r2, $r6;
        com.qq.taf.jce.JceInputStream $r1;
        byte $b0;
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object $r7;
        java.lang.Byte $r4;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: com.qq.taf.jce.JceInputStream;

        r2 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        virtualinvoke r2.<java.util.HashMap: void clear()>();

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        r3 = newarray (byte)[1];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        $r5 = r3;

        $b0 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        $r5[0] = $b0;

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("", r3);

        $r6 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("", r2);

        r2 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $r7 = virtualinvoke $r1.<com.qq.taf.jce.JceInputStream: java.lang.Object read(java.lang.Object,int,boolean)>(r2, 0, 1);

        r2 = (java.util.HashMap) $r7;

        r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data> = r2;

        return;
    }

    public java.lang.Object remove(java.lang.String) throws com.qq.jce.wup.ObjectCreateException
    {
        byte[] r5;
        java.util.Map$Entry r8;
        java.util.Iterator $r7;
        com.qq.jce.wup.ObjectCreateException $r10;
        java.util.Set $r6;
        java.util.HashMap $r3;
        java.lang.Exception r2;
        com.qq.taf.jce.JceInputStream $r9;
        com.qq.jce.wup.UniAttribute r0;
        java.lang.Object $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r3 = (java.util.HashMap) $r4;

        $r1 = "";

        r5 = newarray (byte)[0];

        $r6 = virtualinvoke $r3.<java.util.HashMap: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r1 = (java.lang.String) $r4;

        $r4 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (byte[]) $r4;

     label2:
        $r4 = staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: java.lang.Object createClassByUni(java.lang.String)>($r1);

        $r9 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        virtualinvoke $r9.<com.qq.taf.jce.JceInputStream: void warp(byte[])>(r5);

        $r9 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        $r1 = r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName>;

        virtualinvoke $r9.<com.qq.taf.jce.JceInputStream: int setServerEncoding(java.lang.String)>($r1);

        $r9 = r0.<com.qq.jce.wup.UniAttribute: com.qq.taf.jce.JceInputStream _is>;

        $r4 = virtualinvoke $r9.<com.qq.taf.jce.JceInputStream: java.lang.Object read(java.lang.Object,int,boolean)>($r4, 0, 1);

     label3:
        return $r4;

     label4:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        $r10 = new com.qq.jce.wup.ObjectCreateException;

        specialinvoke $r10.<com.qq.jce.wup.ObjectCreateException: void <init>(java.lang.Exception)>(r2);

        throw $r10;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void setEncodeName(java.lang.String)
    {
        com.qq.jce.wup.UniAttribute r0;
        java.lang.String $r1;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: java.lang.String;

        r0.<com.qq.jce.wup.UniAttribute: java.lang.String encodeName> = "UTF-8";

        return;
    }

    public int size()
    {
        int $i0;
        com.qq.jce.wup.UniAttribute r0;
        java.util.HashMap $r1;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        return $i0;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream)
    {
        com.qq.jce.wup.UniAttribute r0;
        java.util.HashMap $r2;
        com.qq.taf.jce.JceOutputStream $r1;

        r0 := @this: com.qq.jce.wup.UniAttribute;

        $r1 := @parameter0: com.qq.taf.jce.JceOutputStream;

        $r2 = r0.<com.qq.jce.wup.UniAttribute: java.util.HashMap _data>;

        virtualinvoke $r1.<com.qq.taf.jce.JceOutputStream: void write(java.util.Map,int)>($r2, 0);

        return;
    }
}
