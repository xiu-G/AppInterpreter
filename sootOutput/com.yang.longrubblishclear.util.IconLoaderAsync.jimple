public class com.yang.longrubblishclear.util.IconLoaderAsync extends java.lang.Object
{
    private android.graphics.drawable.Drawable defaultIcon;
    private boolean firstLoad;
    final android.os.Handler handler;
    private java.lang.Object lock;
    private boolean mAllowLoad;
    private int mStartLoadLimit;
    private int mStopLoadLimit;
    private android.content.pm.PackageManager pm;

    public void <init>(android.content.Context)
    {
        com.yang.longrubblishclear.util.IconLoaderAsync r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r4;
        android.os.Handler $r3;
        java.lang.Object $r2;
        android.graphics.drawable.Drawable $r6;
        android.content.res.Resources $r5;

        r0 := @this: com.yang.longrubblishclear.util.IconLoaderAsync;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: java.lang.Object lock> = $r2;

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: boolean mAllowLoad> = 1;

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: boolean firstLoad> = 1;

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: int mStartLoadLimit> = 0;

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: int mStopLoadLimit> = 0;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: android.os.Handler handler> = $r3;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: android.content.pm.PackageManager pm> = $r4;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301651);

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: android.graphics.drawable.Drawable defaultIcon> = $r6;

        return;
    }

    static boolean access$0(com.yang.longrubblishclear.util.IconLoaderAsync)
    {
        com.yang.longrubblishclear.util.IconLoaderAsync $r0;
        boolean z0;

        $r0 := @parameter0: com.yang.longrubblishclear.util.IconLoaderAsync;

        z0 = $r0.<com.yang.longrubblishclear.util.IconLoaderAsync: boolean mAllowLoad>;

        return z0;
    }

    static java.lang.Object access$1(com.yang.longrubblishclear.util.IconLoaderAsync)
    {
        com.yang.longrubblishclear.util.IconLoaderAsync $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.yang.longrubblishclear.util.IconLoaderAsync;

        r1 = $r0.<com.yang.longrubblishclear.util.IconLoaderAsync: java.lang.Object lock>;

        return r1;
    }

    static boolean access$2(com.yang.longrubblishclear.util.IconLoaderAsync)
    {
        com.yang.longrubblishclear.util.IconLoaderAsync $r0;
        boolean z0;

        $r0 := @parameter0: com.yang.longrubblishclear.util.IconLoaderAsync;

        z0 = $r0.<com.yang.longrubblishclear.util.IconLoaderAsync: boolean firstLoad>;

        return z0;
    }

    static void access$3(com.yang.longrubblishclear.util.IconLoaderAsync, android.content.pm.ApplicationInfo, com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener, int, int)
    {
        com.yang.longrubblishclear.util.IconLoaderAsync $r0;
        int $i0, $i1;
        android.content.pm.ApplicationInfo $r1;
        com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener $r2;

        $r0 := @parameter0: com.yang.longrubblishclear.util.IconLoaderAsync;

        $r1 := @parameter1: android.content.pm.ApplicationInfo;

        $r2 := @parameter2: com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        specialinvoke $r0.<com.yang.longrubblishclear.util.IconLoaderAsync: void doLoadIcon(android.content.pm.ApplicationInfo,com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener,int,int)>($r1, $r2, $i0, $i1);

        return;
    }

    static int access$4(com.yang.longrubblishclear.util.IconLoaderAsync)
    {
        int i0;
        com.yang.longrubblishclear.util.IconLoaderAsync $r0;

        $r0 := @parameter0: com.yang.longrubblishclear.util.IconLoaderAsync;

        i0 = $r0.<com.yang.longrubblishclear.util.IconLoaderAsync: int mStopLoadLimit>;

        return i0;
    }

    static int access$5(com.yang.longrubblishclear.util.IconLoaderAsync)
    {
        int i0;
        com.yang.longrubblishclear.util.IconLoaderAsync $r0;

        $r0 := @parameter0: com.yang.longrubblishclear.util.IconLoaderAsync;

        i0 = $r0.<com.yang.longrubblishclear.util.IconLoaderAsync: int mStartLoadLimit>;

        return i0;
    }

    private void doLoadIcon(android.content.pm.ApplicationInfo, com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener, int, int)
    {
        com.yang.longrubblishclear.util.IconLoaderAsync r0;
        android.graphics.drawable.Drawable $r5;
        android.os.Handler $r4;
        int $i0, $i1;
        com.yang.longrubblishclear.util.IconLoaderAsync$2 $r3;
        android.content.pm.ApplicationInfo $r1;
        com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener $r2;

        r0 := @this: com.yang.longrubblishclear.util.IconLoaderAsync;

        $r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 := @parameter1: com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r5 = specialinvoke r0.<com.yang.longrubblishclear.util.IconLoaderAsync: android.graphics.drawable.Drawable loadIcon(android.content.pm.ApplicationInfo)>($r1);

        $r4 = r0.<com.yang.longrubblishclear.util.IconLoaderAsync: android.os.Handler handler>;

        $r3 = new com.yang.longrubblishclear.util.IconLoaderAsync$2;

        specialinvoke $r3.<com.yang.longrubblishclear.util.IconLoaderAsync$2: void <init>(com.yang.longrubblishclear.util.IconLoaderAsync,com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener,android.graphics.drawable.Drawable,android.content.pm.ApplicationInfo,int,int)>(r0, $r2, $r5, $r1, $i0, $i1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private android.graphics.drawable.Drawable loadIcon(android.content.pm.ApplicationInfo)
    {
        com.yang.longrubblishclear.util.IconLoaderAsync r0;
        com.yang.longrubblishclear.util.ApkCacheHelper $r4;
        java.lang.CharSequence $r8;
        android.content.pm.PackageManager $r6;
        android.graphics.drawable.Drawable $r7, $r10;
        com.yang.longrubblishclear.util.SystemUninstallerApp $r3;
        java.lang.String $r2, $r9;
        android.content.pm.ApplicationInfo $r1;
        com.yang.longrubblishclear.util.ApkCacheHelper$ApkCache $r5;

        r0 := @this: com.yang.longrubblishclear.util.IconLoaderAsync;

        $r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r3 = staticinvoke <com.yang.longrubblishclear.util.SystemUninstallerApp: com.yang.longrubblishclear.util.SystemUninstallerApp getInstance()>();

        $r4 = virtualinvoke $r3.<com.yang.longrubblishclear.util.SystemUninstallerApp: com.yang.longrubblishclear.util.ApkCacheHelper getApkCacheHelper()>();

        $r2 = $r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r5 = virtualinvoke $r4.<com.yang.longrubblishclear.util.ApkCacheHelper: com.yang.longrubblishclear.util.ApkCacheHelper$ApkCache load(java.lang.String)>($r2);

        if $r5 == null goto label1;

        $r7 = $r5.<com.yang.longrubblishclear.util.ApkCacheHelper$ApkCache: android.graphics.drawable.Drawable icon>;

        return $r7;

     label1:
        $r6 = r0.<com.yang.longrubblishclear.util.IconLoaderAsync: android.content.pm.PackageManager pm>;

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>($r1);

        $r6 = r0.<com.yang.longrubblishclear.util.IconLoaderAsync: android.content.pm.PackageManager pm>;

        $r8 = virtualinvoke $r6.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r1);

        $r9 = interfaceinvoke $r8.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = staticinvoke <com.yang.longrubblishclear.util.SystemUninstallerApp: com.yang.longrubblishclear.util.SystemUninstallerApp getInstance()>();

        $r4 = virtualinvoke $r3.<com.yang.longrubblishclear.util.SystemUninstallerApp: com.yang.longrubblishclear.util.ApkCacheHelper getApkCacheHelper()>();

        $r2 = $r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        if $r7 != null goto label3;

        $r10 = r0.<com.yang.longrubblishclear.util.IconLoaderAsync: android.graphics.drawable.Drawable defaultIcon>;

     label2:
        virtualinvoke $r4.<com.yang.longrubblishclear.util.ApkCacheHelper: boolean save(java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>($r2, $r10, $r9);

        return $r7;

     label3:
        $r10 = $r7;

        goto label2;
    }

    public void loadIcon(java.lang.Integer, java.lang.Integer, android.content.pm.ApplicationInfo, com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener)
    {
        com.yang.longrubblishclear.util.IconLoaderAsync r0;
        com.yang.longrubblishclear.util.IconLoaderAsync$1 $r5;
        java.lang.Integer $r1, $r2;
        android.content.pm.ApplicationInfo $r3;
        com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener $r4;

        r0 := @this: com.yang.longrubblishclear.util.IconLoaderAsync;

        $r1 := @parameter0: java.lang.Integer;

        $r2 := @parameter1: java.lang.Integer;

        $r3 := @parameter2: android.content.pm.ApplicationInfo;

        $r4 := @parameter3: com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener;

        $r5 = new com.yang.longrubblishclear.util.IconLoaderAsync$1;

        specialinvoke $r5.<com.yang.longrubblishclear.util.IconLoaderAsync$1: void <init>(com.yang.longrubblishclear.util.IconLoaderAsync,android.content.pm.ApplicationInfo,com.yang.longrubblishclear.util.IconLoaderAsync$OnIconLoadListener,java.lang.Integer,java.lang.Integer)>(r0, $r3, $r4, $r1, $r2);

        virtualinvoke $r5.<com.yang.longrubblishclear.util.IconLoaderAsync$1: void start()>();

        return;
    }

    public void lock()
    {
        com.yang.longrubblishclear.util.IconLoaderAsync r0;

        r0 := @this: com.yang.longrubblishclear.util.IconLoaderAsync;

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: boolean mAllowLoad> = 0;

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: boolean firstLoad> = 0;

        return;
    }

    public void restore()
    {
        com.yang.longrubblishclear.util.IconLoaderAsync r0;

        r0 := @this: com.yang.longrubblishclear.util.IconLoaderAsync;

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: boolean mAllowLoad> = 1;

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: boolean firstLoad> = 1;

        return;
    }

    public void setLoadLimit(int, int)
    {
        int $i0, $i1;
        com.yang.longrubblishclear.util.IconLoaderAsync r0;

        r0 := @this: com.yang.longrubblishclear.util.IconLoaderAsync;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 <= $i1 goto label1;

        return;

     label1:
        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: int mStartLoadLimit> = $i0;

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: int mStopLoadLimit> = $i1;

        return;
    }

    public void unlock()
    {
        java.lang.Throwable $r3;
        com.yang.longrubblishclear.util.IconLoaderAsync r0;
        java.lang.Object $r1, $r2;

        r0 := @this: com.yang.longrubblishclear.util.IconLoaderAsync;

        r0.<com.yang.longrubblishclear.util.IconLoaderAsync: boolean mAllowLoad> = 1;

        $r1 = r0.<com.yang.longrubblishclear.util.IconLoaderAsync: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.yang.longrubblishclear.util.IconLoaderAsync: java.lang.Object lock>;

        virtualinvoke $r2.<java.lang.Object: void notifyAll()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
