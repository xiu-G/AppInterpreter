class com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator extends java.lang.Object implements com.google.zxing.common.Comparator
{

    private void <init>()
    {
        com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator r0;

        r0 := @this: com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1)
    {
        com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1 $r1;
        com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator r0;

        r0 := @this: com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator;

        $r1 := @parameter0: com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1;

        specialinvoke r0.<com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator r0;
        byte $b0;
        int $i1;
        float $f0, $f1;
        java.lang.Object $r1, $r2;
        com.google.zxing.qrcode.detector.FinderPattern $r3;
        double $d0;

        r0 := @this: com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (com.google.zxing.qrcode.detector.FinderPattern) $r2;

        $f0 = virtualinvoke $r3.<com.google.zxing.qrcode.detector.FinderPattern: float getEstimatedModuleSize()>();

        $r3 = (com.google.zxing.qrcode.detector.FinderPattern) $r1;

        $f1 = virtualinvoke $r3.<com.google.zxing.qrcode.detector.FinderPattern: float getEstimatedModuleSize()>();

        $f0 = $f0 - $f1;

        $d0 = (double) $f0;

        $b0 = $d0 cmpg 0.0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        return -1;

     label1:
        $d0 = (double) $f0;

        $b0 = $d0 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }
}
