public class com.google.mygson.reflect.TypeToken extends java.lang.Object
{
    final int hashCode;
    final java.lang.Class rawType;
    final java.lang.reflect.Type type;

    protected void <init>()
    {
        com.google.mygson.reflect.TypeToken r0;
        java.lang.reflect.Type $r2;
        int $i0;
        java.lang.Class $r1;

        r0 := @this: com.google.mygson.reflect.TypeToken;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <com.google.mygson.reflect.TypeToken: java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)>($r1);

        r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type> = $r2;

        $r2 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $r1 = staticinvoke <com.google.mygson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r2);

        r0.<com.google.mygson.reflect.TypeToken: java.lang.Class rawType> = $r1;

        $r2 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        r0.<com.google.mygson.reflect.TypeToken: int hashCode> = $i0;

        return;
    }

    void <init>(java.lang.reflect.Type)
    {
        com.google.mygson.reflect.TypeToken r0;
        java.lang.reflect.Type $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.Class $r3;

        r0 := @this: com.google.mygson.reflect.TypeToken;

        $r1 := @parameter0: java.lang.reflect.Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.mygson.internal.$Gson$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r1 = (java.lang.reflect.Type) $r2;

        $r1 = staticinvoke <com.google.mygson.internal.$Gson$Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>($r1);

        r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type> = $r1;

        $r1 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $r3 = staticinvoke <com.google.mygson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r1);

        r0.<com.google.mygson.reflect.TypeToken: java.lang.Class rawType> = $r3;

        $r1 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        r0.<com.google.mygson.reflect.TypeToken: int hashCode> = $i0;

        return;
    }

    private static transient java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class[])
    {
        java.lang.Class[] r1;
        java.lang.AssertionError $r6;
        java.lang.reflect.Type $r0;
        int i0, i1;
        java.lang.Class r2;
        java.lang.StringBuilder r3, $r5;
        java.lang.String $r4;

        $r0 := @parameter0: java.lang.reflect.Type;

        r1 := @parameter1: java.lang.Class[];

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unexpected type. Expected one of: ");

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("but got: ");

        r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", for type token: ");

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r6 = new java.lang.AssertionError;

        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        return $r6;
    }

    public static com.google.mygson.reflect.TypeToken get(java.lang.Class)
    {
        java.lang.Class r0;
        com.google.mygson.reflect.TypeToken $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new com.google.mygson.reflect.TypeToken;

        specialinvoke $r1.<com.google.mygson.reflect.TypeToken: void <init>(java.lang.reflect.Type)>(r0);

        return $r1;
    }

    public static com.google.mygson.reflect.TypeToken get(java.lang.reflect.Type)
    {
        com.google.mygson.reflect.TypeToken $r1;
        java.lang.reflect.Type $r0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 = new com.google.mygson.reflect.TypeToken;

        specialinvoke $r1.<com.google.mygson.reflect.TypeToken: void <init>(java.lang.reflect.Type)>($r0);

        return $r1;
    }

    static java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)
    {
        java.lang.reflect.ParameterizedType r3;
        java.lang.reflect.Type $r1;
        java.lang.reflect.Type[] $r4;
        java.lang.Class r0;
        java.lang.RuntimeException $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Missing type parameter.");

        throw $r2;

     label1:
        r3 = (java.lang.reflect.ParameterizedType) $r1;

        $r4 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r1 = $r4[0];

        $r1 = staticinvoke <com.google.mygson.internal.$Gson$Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>($r1);

        return $r1;
    }

    private static boolean isAssignableFrom(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)
    {
        java.lang.reflect.GenericArrayType $r0;
        java.util.HashMap $r6;
        java.lang.reflect.ParameterizedType r4;
        java.lang.reflect.Type r1, $r2;
        java.lang.Object r3;
        java.lang.Class r5;
        boolean $z0;

        r1 := @parameter0: java.lang.reflect.Type;

        $r0 := @parameter1: java.lang.reflect.GenericArrayType;

        $r2 = interfaceinvoke $r0.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $z0 = $r2 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label5;

        r3 = r1;

        $z0 = r1 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label2;

        $r0 = (java.lang.reflect.GenericArrayType) r1;

        r3 = interfaceinvoke $r0.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

     label1:
        r4 = (java.lang.reflect.ParameterizedType) $r2;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r1 = (java.lang.reflect.Type) r3;

        $z0 = staticinvoke <com.google.mygson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)>(r1, r4, $r6);

        return $z0;

     label2:
        $z0 = r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        r5 = (java.lang.Class) r1;

     label3:
        $z0 = virtualinvoke r5.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label4;

        r5 = virtualinvoke r5.<java.lang.Class: java.lang.Class getComponentType()>();

        goto label3;

     label4:
        r3 = r5;

        goto label1;

     label5:
        return 1;
    }

    private static boolean isAssignableFrom(java.lang.reflect.Type, java.lang.reflect.ParameterizedType, java.util.Map)
    {
        java.lang.reflect.TypeVariable r3, r8;
        java.util.HashMap $r11;
        java.lang.reflect.ParameterizedType $r1, r5;
        java.lang.reflect.Type $r0;
        java.lang.reflect.TypeVariable[] $r7;
        java.util.Map r2;
        int i0, $i1;
        java.lang.reflect.Type[] $r6;
        java.lang.Class $r4;
        java.lang.Object $r10;
        java.lang.String $r9;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $r1 := @parameter1: java.lang.reflect.ParameterizedType;

        r2 := @parameter2: java.util.Map;

        if $r0 != null goto label01;

        return 0;

     label01:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label02;

        return 1;

     label02:
        $r4 = staticinvoke <com.google.mygson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r0);

        r5 = null;

        $z0 = $r0 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label03;

        r5 = (java.lang.reflect.ParameterizedType) $r0;

     label03:
        if r5 == null goto label08;

        $r6 = interfaceinvoke r5.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        i0 = 0;

     label04:
        $i1 = lengthof $r6;

        if i0 >= $i1 goto label07;

        $r0 = $r6[i0];

        r3 = $r7[i0];

     label05:
        $z0 = $r0 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label06;

        r8 = (java.lang.reflect.TypeVariable) $r0;

        $r9 = interfaceinvoke r8.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r0 = (java.lang.reflect.Type) $r10;

        goto label05;

     label06:
        $r9 = interfaceinvoke r3.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r0);

        i0 = i0 + 1;

        goto label04;

     label07:
        $z0 = staticinvoke <com.google.mygson.reflect.TypeToken: boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)>(r5, $r1, r2);

        if $z0 == 0 goto label08;

        return 1;

     label08:
        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>();

        i0 = lengthof $r6;

        $i1 = 0;

     label09:
        if $i1 >= i0 goto label11;

        $r0 = $r6[$i1];

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>(java.util.Map)>(r2);

        $z0 = staticinvoke <com.google.mygson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)>($r0, $r1, $r11);

        if $z0 == 0 goto label10;

        return 1;

     label10:
        $i1 = $i1 + 1;

        goto label09;

     label11:
        $r0 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>();

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>(java.util.Map)>(r2);

        $z0 = staticinvoke <com.google.mygson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)>($r0, $r1, $r11);

        return $z0;
    }

    private static boolean matches(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map)
    {
        java.lang.reflect.Type $r0, $r2;
        java.util.Map r1;
        java.lang.reflect.TypeVariable $r3;
        java.lang.Object $r5;
        java.lang.String $r4;
        boolean $z0;

        $r2 := @parameter0: java.lang.reflect.Type;

        $r0 := @parameter1: java.lang.reflect.Type;

        r1 := @parameter2: java.util.Map;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $z0 = $r2 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.reflect.TypeVariable) $r2;

        $r4 = interfaceinvoke $r3.<java.lang.reflect.TypeVariable: java.lang.String getName()>();

        $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean typeEquals(java.lang.reflect.ParameterizedType, java.lang.reflect.ParameterizedType, java.util.Map)
    {
        java.lang.reflect.ParameterizedType $r0, $r1;
        java.lang.reflect.Type $r3, $r4;
        java.util.Map r2;
        java.lang.reflect.Type[] $r5, $r6;
        int i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.ParameterizedType;

        $r1 := @parameter1: java.lang.reflect.ParameterizedType;

        r2 := @parameter2: java.util.Map;

        $r3 = interfaceinvoke $r0.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r4 = interfaceinvoke $r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r0.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r6 = interfaceinvoke $r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r5;

        if i0 >= $i1 goto label3;

        $r3 = $r5[i0];

        $r4 = $r6[i0];

        $z0 = staticinvoke <com.google.mygson.reflect.TypeToken: boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)>($r3, $r4, r2);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    public final boolean equals(java.lang.Object)
    {
        com.google.mygson.reflect.TypeToken r0;
        java.lang.reflect.Type $r1, $r3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.google.mygson.reflect.TypeToken;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof com.google.mygson.reflect.TypeToken;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        r0 = (com.google.mygson.reflect.TypeToken) $r2;

        $r1 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $z0 = staticinvoke <com.google.mygson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>($r3, $r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.lang.Class getRawType()
    {
        java.lang.Class r1;
        com.google.mygson.reflect.TypeToken r0;

        r0 := @this: com.google.mygson.reflect.TypeToken;

        r1 = r0.<com.google.mygson.reflect.TypeToken: java.lang.Class rawType>;

        return r1;
    }

    public final java.lang.reflect.Type getType()
    {
        com.google.mygson.reflect.TypeToken r0;
        java.lang.reflect.Type r1;

        r0 := @this: com.google.mygson.reflect.TypeToken;

        r1 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        return r1;
    }

    public final int hashCode()
    {
        int i0;
        com.google.mygson.reflect.TypeToken r0;

        r0 := @this: com.google.mygson.reflect.TypeToken;

        i0 = r0.<com.google.mygson.reflect.TypeToken: int hashCode>;

        return i0;
    }

    public boolean isAssignableFrom(com.google.mygson.reflect.TypeToken)
    {
        com.google.mygson.reflect.TypeToken r0, r1;
        java.lang.reflect.Type $r2;
        boolean $z0;

        r0 := @this: com.google.mygson.reflect.TypeToken;

        r1 := @parameter0: com.google.mygson.reflect.TypeToken;

        $r2 = virtualinvoke r1.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type getType()>();

        $z0 = virtualinvoke r0.<com.google.mygson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)>($r2);

        return $z0;
    }

    public boolean isAssignableFrom(java.lang.Class)
    {
        java.lang.Class r1;
        com.google.mygson.reflect.TypeToken r0;
        boolean $z0;

        r0 := @this: com.google.mygson.reflect.TypeToken;

        r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<com.google.mygson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)>(r1);

        return $z0;
    }

    public boolean isAssignableFrom(java.lang.reflect.Type)
    {
        java.lang.reflect.GenericArrayType $r7;
        java.lang.Class[] $r8;
        java.util.HashMap $r6;
        java.lang.AssertionError $r9;
        com.google.mygson.reflect.TypeToken r0;
        java.lang.reflect.ParameterizedType $r5;
        java.lang.reflect.Type $r1, $r2;
        java.lang.Class $r3, $r4;
        boolean $z0;

        r0 := @this: com.google.mygson.reflect.TypeToken;

        $r1 := @parameter0: java.lang.reflect.Type;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r2 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $z0 = $r2 instanceof java.lang.Class;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.google.mygson.reflect.TypeToken: java.lang.Class rawType>;

        $r4 = staticinvoke <com.google.mygson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r1);

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        return $z0;

     label3:
        $r2 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $z0 = $r2 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $r5 = (java.lang.reflect.ParameterizedType) $r2;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $z0 = staticinvoke <com.google.mygson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)>($r1, $r5, $r6);

        return $z0;

     label4:
        $r2 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $z0 = $r2 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label7;

        $r3 = r0.<com.google.mygson.reflect.TypeToken: java.lang.Class rawType>;

        $r4 = staticinvoke <com.google.mygson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r1);

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 == 0 goto label6;

        $r2 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $r7 = (java.lang.reflect.GenericArrayType) $r2;

        $z0 = staticinvoke <com.google.mygson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)>($r1, $r7);

        if $z0 == 0 goto label6;

        $z0 = 1;

     label5:
        return $z0;

     label6:
        $z0 = 0;

        goto label5;

     label7:
        $r1 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $r8 = newarray (java.lang.Class)[3];

        $r8[0] = class "Ljava/lang/Class;";

        $r8[1] = class "Ljava/lang/reflect/ParameterizedType;";

        $r8[2] = class "Ljava/lang/reflect/GenericArrayType;";

        $r9 = staticinvoke <com.google.mygson.reflect.TypeToken: java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])>($r1, $r8);

        throw $r9;
    }

    public final java.lang.String toString()
    {
        java.lang.String $r1;
        com.google.mygson.reflect.TypeToken r0;
        java.lang.reflect.Type $r2;

        r0 := @this: com.google.mygson.reflect.TypeToken;

        $r2 = r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type type>;

        $r1 = staticinvoke <com.google.mygson.internal.$Gson$Types: java.lang.String typeToString(java.lang.reflect.Type)>($r2);

        return $r1;
    }
}
