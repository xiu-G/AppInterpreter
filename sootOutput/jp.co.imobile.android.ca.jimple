final class jp.co.imobile.android.ca extends java.lang.Object implements java.util.concurrent.ThreadFactory
{

    void <init>()
    {
        jp.co.imobile.android.ca r0;

        r0 := @this: jp.co.imobile.android.ca;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Thread newThread(java.lang.Runnable)
    {
        jp.co.imobile.android.ca r0;
        java.lang.Runnable $r1;
        java.lang.Thread$UncaughtExceptionHandler $r6;
        java.util.concurrent.atomic.AtomicInteger $r4;
        java.lang.Thread $r2;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;

        r0 := @this: jp.co.imobile.android.ca;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = new java.lang.Thread;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("i-mobile SDK #");

        $r4 = staticinvoke <jp.co.imobile.android.by: java.util.concurrent.atomic.AtomicInteger d()>();

        $i0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r1, $r5);

        $r6 = staticinvoke <jp.co.imobile.android.by: java.lang.Thread$UncaughtExceptionHandler e()>();

        virtualinvoke $r2.<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r6);

        return $r2;
    }
}
