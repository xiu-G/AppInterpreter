public class proguard.classfile.visitor.ExceptionHandlerFilter extends java.lang.Object implements proguard.classfile.attribute.visitor.ExceptionInfoVisitor
{
    private final int endOffset;
    private final proguard.classfile.attribute.visitor.ExceptionInfoVisitor exceptionInfoVisitor;
    private final int startOffset;

    public void <init>(int, int, proguard.classfile.attribute.visitor.ExceptionInfoVisitor)
    {
        proguard.classfile.attribute.visitor.ExceptionInfoVisitor $r1;
        proguard.classfile.visitor.ExceptionHandlerFilter r0;
        int $i0, $i1;

        r0 := @this: proguard.classfile.visitor.ExceptionHandlerFilter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: proguard.classfile.attribute.visitor.ExceptionInfoVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.visitor.ExceptionHandlerFilter: int startOffset> = $i0;

        r0.<proguard.classfile.visitor.ExceptionHandlerFilter: int endOffset> = $i1;

        r0.<proguard.classfile.visitor.ExceptionHandlerFilter: proguard.classfile.attribute.visitor.ExceptionInfoVisitor exceptionInfoVisitor> = $r1;

        return;
    }

    public void visitExceptionInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.ExceptionInfo)
    {
        proguard.classfile.attribute.visitor.ExceptionInfoVisitor $r5;
        proguard.classfile.visitor.ExceptionHandlerFilter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.ExceptionInfo $r4;

        r0 := @this: proguard.classfile.visitor.ExceptionHandlerFilter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.ExceptionInfo;

        $i0 = $r4.<proguard.classfile.attribute.ExceptionInfo: int u2handlerPC>;

        $i1 = r0.<proguard.classfile.visitor.ExceptionHandlerFilter: int startOffset>;

        if $i0 < $i1 goto label1;

        $i1 = r0.<proguard.classfile.visitor.ExceptionHandlerFilter: int endOffset>;

        if $i0 >= $i1 goto label1;

        $r5 = r0.<proguard.classfile.visitor.ExceptionHandlerFilter: proguard.classfile.attribute.visitor.ExceptionInfoVisitor exceptionInfoVisitor>;

        interfaceinvoke $r5.<proguard.classfile.attribute.visitor.ExceptionInfoVisitor: void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo)>($r1, $r2, $r3, $r4);

     label1:
        return;
    }
}
