final class a.d extends java.lang.Object
{
    static final int a;
    static final int b;
    private static final int c;

    static void <clinit>()
    {
        int $i0;
        java.lang.Runtime $r0;

        $r0 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i0 = virtualinvoke $r0.<java.lang.Runtime: int availableProcessors()>();

        <a.d: int c> = $i0;

        $i0 = $i0 + 1;

        <a.d: int a> = $i0;

        $i0 = <a.d: int c>;

        $i0 = $i0 * 2;

        $i0 = $i0 + 1;

        <a.d: int b> = $i0;

        return;
    }

    public static java.util.concurrent.ExecutorService a()
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ThreadPoolExecutor $r0;
        int $i0, $i1;
        java.util.concurrent.LinkedBlockingQueue $r2;

        $r0 = new java.util.concurrent.ThreadPoolExecutor;

        $i1 = <a.d: int a>;

        $i0 = <a.d: int b>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r2 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(128);

        specialinvoke $r0.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>($i1, $i0, 1L, $r1, $r2);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label1;

        virtualinvoke $r0.<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(1);

     label1:
        return $r0;
    }
}
