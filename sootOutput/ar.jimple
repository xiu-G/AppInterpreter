public final class ar extends al
{
    private java.util.Vector a;

    public void <init>(ae, ba, u, int, as)
    {
        long $l2, $l3, $l4;
        java.lang.NullPointerException $r10;
        java.util.Vector $r7;
        int $i0, $i1;
        java.lang.String $r5;
        ad $r12;
        ae $r1;
        af $r8, $r13;
        e $r14;
        ag $r11;
        aj $r9;
        java.io.IOException $r15;
        ao $r16;
        aq $r6;
        ar r0;
        as $r4;
        u $r3;
        ba $r2;

        r0 := @this: ar;

        $r1 := @parameter0: ae;

        $r2 := @parameter1: ba;

        $r3 := @parameter2: u;

        $i0 := @parameter3: int;

        $r4 := @parameter4: as;

        specialinvoke r0.<al: void <init>(ae,u,int,as)>($r1, $r3, $i0, $r4);

        $r7 = new java.util.Vector;

        specialinvoke $r7.<java.util.Vector: void <init>()>();

        r0.<ar: java.util.Vector a> = $r7;

        $i0 = staticinvoke <am: int a()>();

        $i1 = <am: int a>;

        if $i0 != $i1 goto label1;

        $r7 = r0.<ar: java.util.Vector a>;

        $r6 = new aq;

        $r8 = $r1.<ae: af e>;

        $r9 = new aj;

        $r5 = $r8.<af: java.lang.String e>;

        $l2 = $r8.<af: long f>;

        $l3 = $r8.<af: long f>;

        $l4 = $r8.<af: long d>;

        $l3 = $l4 + $l3;

        specialinvoke $r9.<aj: void <init>(java.lang.String,long,long)>($r5, $l2, $l3);

        specialinvoke $r6.<aq: void <init>(aj)>($r9);

        virtualinvoke $r7.<java.util.Vector: boolean add(java.lang.Object)>($r6);

        return;

     label1:
        $i0 = staticinvoke <am: int a()>();

        $i1 = <am: int b>;

        if $i0 != $i1 goto label5;

        if $r2 != null goto label2;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("no container info");

        throw $r10;

     label2:
        $r8 = $r1.<ae: af e>;

        $r11 = $r1.<ae: ag d>;

        $r12 = $r11.<ag: ad d>;

        $r5 = $r12.<ad: java.lang.String e>;

        $r13 = $r1.<ae: af e>;

        $r14 = staticinvoke <al: e a(java.lang.String,af,u,as)>($r5, $r13, $r3, $r4);

        if $r14 != null goto label3;

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("get decryptor fail");

        throw $r15;

     label3:
        $l3 = $r8.<af: long f>;

        $i0 = $r2.<ba: int a>;

        $l2 = (long) $i0;

        $l2 = $l3 + $l2;

        $i0 = $r2.<ba: int a>;

        if $i0 <= 0 goto label4;

        $i0 = <am: int c>;

        staticinvoke <am: void a(int)>($i0);

        $r6 = new aq;

        $r5 = $r8.<af: java.lang.String e>;

        specialinvoke $r6.<aq: void <init>(java.lang.String,long,long)>($r5, $l3, $l2);

        $r7 = r0.<ar: java.util.Vector a>;

        virtualinvoke $r7.<java.util.Vector: boolean add(java.lang.Object)>($r6);

     label4:
        $r16 = new ao;

        $r5 = $r8.<af: java.lang.String e>;

        $l3 = $r8.<af: long f>;

        $l4 = $r8.<af: long d>;

        $l3 = $l4 + $l3;

        specialinvoke $r16.<ao: void <init>(java.lang.String,long,long,e)>($r5, $l2, $l3, $r14);

        $r7 = r0.<ar: java.util.Vector a>;

        virtualinvoke $r7.<java.util.Vector: boolean add(java.lang.Object)>($r16);

     label5:
        return;
    }

    public final long a()
    {
        java.lang.Throwable $r4;
        long $l0, $l3;
        ak $r3;
        ar r0;
        java.util.Vector $r1;
        int $i1, $i2;
        java.lang.Object $r2;

        r0 := @this: ar;

        entermonitor r0;

        $l0 = 0L;

        $i1 = 0;

     label1:
        $r1 = r0.<ar: java.util.Vector a>;

        $i2 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i1 >= $i2 goto label3;

        $r1 = r0.<ar: java.util.Vector a>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i1);

        $r3 = (ak) $r2;

        $l3 = interfaceinvoke $r3.<ak: long e()>();

     label2:
        $l0 = $l0 + $l3;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        exitmonitor r0;

        return $l0;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public final byte[] a(byte[], int)
    {
        int $i0;
        ar r0;
        byte[] $r1;

        r0 := @this: ar;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return null;
    }

    public final int available()
    {
        java.lang.Throwable $r4;
        ak $r3;
        ar r0;
        java.util.Vector $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;

        r0 := @this: ar;

        entermonitor r0;

        $i0 = 0;

        $i1 = 0;

     label1:
        $r1 = r0.<ar: java.util.Vector a>;

        $i2 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i2 goto label3;

        $r1 = r0.<ar: java.util.Vector a>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r3 = (ak) $r2;

        $i2 = interfaceinvoke $r3.<ak: int a()>();

     label2:
        $i0 = $i0 + 1;

        $i1 = $i2 + $i1;

        goto label1;

     label3:
        exitmonitor r0;

        return $i1;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public final byte[] b(byte[], int)
    {
        int $i0;
        ar r0;
        byte[] $r1;

        r0 := @this: ar;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        return null;
    }

    public final void close()
    {
        java.lang.Throwable $r4;
        ar r0;
        java.util.Vector $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        ak $r3;

        r0 := @this: ar;

        entermonitor r0;

        $i0 = 0;

     label1:
        $r1 = r0.<ar: java.util.Vector a>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label3;

        $r1 = r0.<ar: java.util.Vector a>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r3 = (ak) $r2;

        interfaceinvoke $r3.<ak: void b()>();

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public final void mark(int)
    {
        java.lang.Throwable $r4;
        ak $r3;
        ar r0;
        java.util.Vector $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: ar;

        $i0 := @parameter0: int;

        entermonitor r0;

        $i0 = 0;

     label1:
        $r1 = r0.<ar: java.util.Vector a>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label3;

        $r1 = r0.<ar: java.util.Vector a>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r3 = (ak) $r2;

        interfaceinvoke $r3.<ak: void c()>();

        $r1 = r0.<ar: java.util.Vector a>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r3 = (ak) $r2;

        $z0 = interfaceinvoke $r3.<ak: boolean d()>();

     label2:
        if $z0 != 0 goto label3;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public final int read(byte[], int, int)
    {
        java.lang.Throwable $r5;
        byte[] $r1;
        ak $r4;
        ar r0;
        java.util.Vector $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r3;

        r0 := @this: ar;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i4 = 0;

        entermonitor r0;

        if $i1 != 0 goto label2;

     label1:
        exitmonitor r0;

        return $i4;

     label2:
        $i5 = 0;

        $i4 = 0;

     label3:
        $r2 = r0.<ar: java.util.Vector a>;

        $i2 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i5 >= $i2 goto label6;

        $r2 = r0.<ar: java.util.Vector a>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object get(int)>($i5);

        $r4 = (ak) $r3;

        $i2 = 0 + $i4;

        $i3 = $i1 - $i4;

        $i2 = interfaceinvoke $r4.<ak: int a(byte[],int,int)>($r1, $i2, $i3);

     label4:
        if $i2 <= 0 goto label5;

        $i4 = $i2 + $i4;

     label5:
        if $i4 == $i1 goto label6;

        $i5 = $i5 + 1;

        goto label3;

     label6:
        if $i4 != 0 goto label1;

        $i4 = -1;

        goto label1;

     label7:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public final void reset()
    {
        java.lang.Throwable $r4;
        ak $r3;
        ar r0;
        java.util.Vector $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: ar;

        entermonitor r0;

        $i0 = 0;

     label1:
        $r1 = r0.<ar: java.util.Vector a>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label5;

        $r1 = r0.<ar: java.util.Vector a>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r3 = (ak) $r2;

        $z0 = interfaceinvoke $r3.<ak: boolean d()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<ar: java.util.Vector a>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r3 = (ak) $r2;

        interfaceinvoke $r3.<ak: void a(boolean)>(0);

        $i0 = $i0 + 1;

     label2:
        $r1 = r0.<ar: java.util.Vector a>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label5;

        $r1 = r0.<ar: java.util.Vector a>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r3 = (ak) $r2;

        interfaceinvoke $r3.<ak: void a(boolean)>(1);

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        exitmonitor r0;

        return;

     label6:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label6;
    }

    public final long skip(long)
    {
        java.lang.Throwable $r4;
        long $l0, $l1, $l4;
        ak $r3;
        ar r0;
        java.util.Vector $r1;
        byte $b5;
        int $i2, $i3;
        java.lang.Object $r2;

        r0 := @this: ar;

        $l0 := @parameter0: long;

        entermonitor r0;

        $l1 = 0L;

        $i2 = 0;

     label1:
        $r1 = r0.<ar: java.util.Vector a>;

        $i3 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i2 >= $i3 goto label3;

        $r1 = r0.<ar: java.util.Vector a>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>($i2);

        $r3 = (ak) $r2;

        $l4 = $l0 - $l1;

        $l4 = interfaceinvoke $r3.<ak: long a(long)>($l4);

     label2:
        $l1 = $l1 + $l4;

        $b5 = $l1 cmp $l0;

        if $b5 == 0 goto label3;

        $i2 = $i2 + 1;

        goto label1;

     label3:
        exitmonitor r0;

        return $l1;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
