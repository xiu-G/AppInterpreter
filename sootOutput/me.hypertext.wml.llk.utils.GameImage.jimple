public class me.hypertext.wml.llk.utils.GameImage extends java.lang.Object
{
    private static me.hypertext.wml.llk.utils.GameImage a;
    public java.util.List aniImgList;
    public java.util.List aniImgSpr;
    public android.graphics.Bitmap[] baozaMap;
    public android.graphics.Bitmap batter;
    public android.graphics.Bitmap[] batterNumber;
    public java.util.List bigImgList;
    public java.util.List bigImgSpr;
    public android.graphics.Bitmap bit;
    public android.graphics.Bitmap[] fashBit;
    public java.util.Map guanKaMap;
    public android.graphics.Bitmap[] guanka;
    public android.graphics.Bitmap[] levelNumber;
    public java.util.Map linkBit;
    public java.util.List minPokerList;
    public android.graphics.Bitmap[] number;
    public java.util.List pokerList;
    public android.graphics.Bitmap pross;
    public android.graphics.Bitmap[] score;
    public android.graphics.Bitmap[] scoreGuanka;
    public java.util.Map scoreGuankaMap;
    public android.graphics.Bitmap[] timeBit;

    public void <init>()
    {
        me.hypertext.wml.llk.utils.GameImage r0;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static me.hypertext.wml.llk.utils.GameImage getInstand()
    {
        me.hypertext.wml.llk.utils.GameImage $r0;

        $r0 = <me.hypertext.wml.llk.utils.GameImage: me.hypertext.wml.llk.utils.GameImage a>;

        if $r0 != null goto label1;

        $r0 = new me.hypertext.wml.llk.utils.GameImage;

        specialinvoke $r0.<me.hypertext.wml.llk.utils.GameImage: void <init>()>();

        <me.hypertext.wml.llk.utils.GameImage: me.hypertext.wml.llk.utils.GameImage a> = $r0;

     label1:
        $r0 = <me.hypertext.wml.llk.utils.GameImage: me.hypertext.wml.llk.utils.GameImage a>;

        return $r0;
    }

    public void getBaozaImg(android.content.Context)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.graphics.Bitmap[] $r2;
        android.graphics.Bitmap $r6;
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r4;
        me.hypertext.wml.llk.info.Poker $r5;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] baozaMap>;

        if $r2 != null goto label1;

        $r3 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map bitMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("baoza");

        $r5 = (me.hypertext.wml.llk.info.Poker) $r4;

        $r2 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] parseImg(android.content.Context,me.hypertext.wml.llk.info.Poker)>($r1, $r5);

        r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] baozaMap> = $r2;

     label1:
        $r2 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] baozaMap>;

        $r6 = $r2[0];

        $i0 = virtualinvoke $r6.<android.graphics.Bitmap: int getWidth()>();

        <me.hypertext.wml.llk.utils.GameConfig: int baozaWidth> = $i0;

        $r2 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] baozaMap>;

        $r6 = $r2[0];

        $i0 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();

        <me.hypertext.wml.llk.utils.GameConfig: int baozaHeight> = $i0;

        return;
    }

    public void getBatterNumberImg(android.content.Context)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.graphics.Bitmap[] $r3;
        android.graphics.Bitmap $r8, $r9;
        java.util.Map $r4;
        int $i0, $i1;
        float $f0, $f1;
        java.lang.Object $r5;
        android.graphics.Matrix $r2;
        me.hypertext.wml.llk.info.Poker $r6;
        android.content.res.Resources $r7;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r3 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] batterNumber>;

        if $r3 != null goto label1;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map bitMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("Batternumber");

        $r6 = (me.hypertext.wml.llk.info.Poker) $r5;

        $r3 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] parseImg(android.content.Context,me.hypertext.wml.llk.info.Poker)>($r1, $r6);

        r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] batterNumber> = $r3;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r7, 2130837508);

        r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap batter> = $r8;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        $f0 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        $f1 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        virtualinvoke $r2.<android.graphics.Matrix: void setScale(float,float)>($f0, $f1);

        $r8 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap batter>;

        $r9 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap batter>;

        $i0 = virtualinvoke $r9.<android.graphics.Bitmap: int getWidth()>();

        $r9 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap batter>;

        $i1 = virtualinvoke $r9.<android.graphics.Bitmap: int getHeight()>();

        $r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r8, 0, 0, $i0, $i1, $r2, 1);

        r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap batter> = $r8;

     label1:
        return;
    }

    public void getClearImg(android.content.Context)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.graphics.Bitmap[] $r12, $r13, $r14, $r15, $r16, $r17;
        java.util.HashMap $r5;
        java.util.Map $r4;
        int $i0, $i1, $i2, $i3;
        android.graphics.Matrix $r2, $r3;
        me.hypertext.wml.llk.info.Poker $r7, $r8;
        boolean $z0;
        android.graphics.Bitmap $r10, $r11, $r18, $r19;
        float $f0, $f1;
        java.lang.Object $r6;
        android.content.res.Resources $r9;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r4 = r0.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        if $r4 == null goto label1;

        return;

     label1:
        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit> = $r5;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map bitMap>;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("line");

        $r7 = (me.hypertext.wml.llk.info.Poker) $r6;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map bitMap>;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("corner");

        $r8 = (me.hypertext.wml.llk.info.Poker) $r6;

        $r9 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r9, 2130837556);

        $r9 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r11 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r9, 2130837526);

        $i0 = virtualinvoke $r7.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        $i1 = virtualinvoke $r7.<me.hypertext.wml.llk.info.Poker: int getVerNum()>();

        $i0 = $i0 * $i1;

        $r12 = newarray (android.graphics.Bitmap)[$i0];

        $i0 = virtualinvoke $r7.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        $i1 = virtualinvoke $r7.<me.hypertext.wml.llk.info.Poker: int getVerNum()>();

        $i0 = $i0 * $i1;

        $r13 = newarray (android.graphics.Bitmap)[$i0];

        $i0 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        $i1 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getVerNum()>();

        $i0 = $i0 * $i1;

        $r14 = newarray (android.graphics.Bitmap)[$i0];

        $i0 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        $i1 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getVerNum()>();

        $i0 = $i0 * $i1;

        $r15 = newarray (android.graphics.Bitmap)[$i0];

        $i0 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        $i1 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getVerNum()>();

        $i0 = $i0 * $i1;

        $r16 = newarray (android.graphics.Bitmap)[$i0];

        $i0 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        $i1 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getVerNum()>();

        $i0 = $i0 * $i1;

        $r17 = newarray (android.graphics.Bitmap)[$i0];

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        $f0 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        $f1 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        virtualinvoke $r2.<android.graphics.Matrix: void setScale(float,float)>($f0, $f1);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r3.<android.graphics.Matrix: boolean postRotate(float)>(90.0F);

        $i0 = 0;

     label2:
        $i1 = virtualinvoke $r7.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        if $i0 < $i1 goto label4;

        $r4 = r0.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("horiz", $r12);

        $r4 = r0.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("vertical", $r13);

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        if $i0 < $i1 goto label6;

        $r4 = r0.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rightBottom", $r14);

        $r4 = r0.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rightTop", $r15);

        $r4 = r0.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("leftTop", $r16);

        $r4 = r0.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("leftBottom", $r17);

        return;

     label4:
        $i1 = virtualinvoke $r7.<me.hypertext.wml.llk.info.Poker: int getWidth()>();

        $i1 = $i1 * $i0;

        $i2 = virtualinvoke $r7.<me.hypertext.wml.llk.info.Poker: int getWidth()>();

        $i3 = virtualinvoke $r7.<me.hypertext.wml.llk.info.Poker: int getHeight()>();

        $r18 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>($r10, $i1, 0, $i2, $i3);

        $i1 = virtualinvoke $r18.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r18.<android.graphics.Bitmap: int getHeight()>();

        $r19 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r18, 0, 0, $i1, $i2, $r2, 1);

        $r12[$i0] = $r19;

        $i1 = virtualinvoke $r18.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r18.<android.graphics.Bitmap: int getHeight()>();

        $r19 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r18, 0, 0, $i1, $i2, $r3, 1);

        $r13[$i0] = $r19;

        $z0 = virtualinvoke $r18.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 != 0 goto label5;

        virtualinvoke $r18.<android.graphics.Bitmap: void recycle()>();

     label5:
        $i0 = $i0 + 1;

        goto label2;

     label6:
        $i1 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getWidth()>();

        $i1 = $i1 * $i0;

        $i2 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getWidth()>();

        $i3 = virtualinvoke $r8.<me.hypertext.wml.llk.info.Poker: int getHeight()>();

        $r10 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>($r11, $i1, 0, $i2, $i3);

        $i1 = virtualinvoke $r10.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r10.<android.graphics.Bitmap: int getHeight()>();

        $r18 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r10, 0, 0, $i1, $i2, $r3, 1);

        $r17[$i0] = $r18;

        $r18 = $r17[$i0];

        $i1 = virtualinvoke $r10.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r10.<android.graphics.Bitmap: int getHeight()>();

        $r18 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r18, 0, 0, $i1, $i2, $r3, 1);

        $r16[$i0] = $r18;

        $r18 = $r16[$i0];

        $i1 = virtualinvoke $r10.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r10.<android.graphics.Bitmap: int getHeight()>();

        $r18 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r18, 0, 0, $i1, $i2, $r3, 1);

        $r15[$i0] = $r18;

        $i1 = virtualinvoke $r10.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r10.<android.graphics.Bitmap: int getHeight()>();

        $r18 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r10, 0, 0, $i1, $i2, $r2, 1);

        $r14[$i0] = $r18;

        $z0 = virtualinvoke $r10.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 != 0 goto label7;

        virtualinvoke $r10.<android.graphics.Bitmap: void recycle()>();

     label7:
        $i0 = $i0 + 1;

        goto label3;
    }

    public void getDaojuImg(android.content.Context)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.graphics.Bitmap[] $r3;
        int[] $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        me.hypertext.wml.llk.view.Sprite $r11;
        java.lang.String $r8, $r9;
        android.graphics.Matrix $r2;
        me.hypertext.wml.llk.info.Poker $r6;
        boolean $z0;
        java.util.List $r4;
        android.graphics.Bitmap $r10, $r13, $r14;
        float $f0, $f1;
        java.lang.Object $r5;
        android.content.res.Resources $r7;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        $f0 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        $f0 = $f0 * 2.0F;

        $f0 = $f0 / 3.0F;

        $f1 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        $f1 = $f1 * 2.0F;

        $f1 = $f1 / 3.0F;

        virtualinvoke $r2.<android.graphics.Matrix: void setScale(float,float)>($f0, $f1);

        $i1 = 0;

     label1:
        if $i1 < 4 goto label2;

        return;

     label2:
        $r4 = r0.<me.hypertext.wml.llk.utils.GameImage: java.util.List pokerList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i1);

        $r6 = (me.hypertext.wml.llk.info.Poker) $r5;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: java.lang.String getImagefile()>();

        $r9 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $i2 = virtualinvoke $r7.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r8, "drawable", $r9);

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r7, $i2);

        $i2 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: int getVerNum()>();

        $i3 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        $i2 = $i2 * $i3;

        $r3 = newarray (android.graphics.Bitmap)[$i2];

        $i2 = 0;

     label3:
        $i3 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: int getVerNum()>();

        if $i2 < $i3 goto label4;

        virtualinvoke $r10.<android.graphics.Bitmap: void recycle()>();

        $r11 = new me.hypertext.wml.llk.view.Sprite;

        $r12 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: int[] getTime()>();

        specialinvoke $r11.<me.hypertext.wml.llk.view.Sprite: void <init>(android.graphics.Bitmap[],int[])>($r3, $r12);

        $r4 = r0.<me.hypertext.wml.llk.utils.GameImage: java.util.List aniImgSpr>;

        interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>($i1, $r11);

        $i1 = $i1 + 1;

        goto label1;

     label4:
        $i3 = 0;

     label5:
        $i0 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        if $i3 < $i0 goto label6;

        $i2 = $i2 + 1;

        goto label3;

     label6:
        $i0 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: int getWidth()>();

        $i0 = $i0 * $i3;

        $i4 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: int getHeight()>();

        $i4 = $i4 * $i2;

        $i5 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: int getWidth()>();

        $i6 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: int getHeight()>();

        $r13 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>($r10, $i0, $i4, $i5, $i6);

        $i0 = virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        $i0 = $i0 * $i2;

        $i0 = $i3 + $i0;

        $i4 = virtualinvoke $r13.<android.graphics.Bitmap: int getWidth()>();

        $i5 = virtualinvoke $r13.<android.graphics.Bitmap: int getHeight()>();

        $r14 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r13, 0, 0, $i4, $i5, $r2, 1);

        $r3[$i0] = $r14;

        $z0 = virtualinvoke $r13.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 != 0 goto label7;

        virtualinvoke $r13.<android.graphics.Bitmap: void recycle()>();

     label7:
        $i3 = $i3 + 1;

        goto label5;
    }

    public void getFashImg(android.content.Context)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.graphics.Bitmap $r4;
        android.graphics.Bitmap[] $r2;
        android.content.res.Resources $r3;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] fashBit>;

        if $r2 != null goto label1;

        $r2 = newarray (android.graphics.Bitmap)[1];

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r3, 2130837648);

        $r2[0] = $r4;

        r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] fashBit> = $r2;

     label1:
        return;
    }

    public java.util.List getImg(android.content.Context, java.util.List)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        java.util.Iterator $r5;
        android.graphics.Bitmap[] $r8;
        java.util.ArrayList $r3;
        java.util.List $r2;
        int[] $r9;
        me.hypertext.wml.llk.view.Sprite $r4;
        java.lang.Object $r6;
        me.hypertext.wml.llk.info.Poker $r7;
        boolean $z0;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.util.List;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r3;

     label2:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (me.hypertext.wml.llk.info.Poker) $r6;

        $r4 = new me.hypertext.wml.llk.view.Sprite;

        $r8 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] parseImg(android.content.Context,me.hypertext.wml.llk.info.Poker)>($r1, $r7);

        $r9 = virtualinvoke $r7.<me.hypertext.wml.llk.info.Poker: int[] getTime()>();

        specialinvoke $r4.<me.hypertext.wml.llk.view.Sprite: void <init>(android.graphics.Bitmap[],int[])>($r8, $r9);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;
    }

    public void getLevelImg(android.content.Context)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.graphics.Bitmap[] $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        me.hypertext.wml.llk.info.Poker $r5;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] levelNumber>;

        if $r2 != null goto label1;

        $r3 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map bitMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("levelnumber");

        $r5 = (me.hypertext.wml.llk.info.Poker) $r4;

        $r2 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] parseImg(android.content.Context,me.hypertext.wml.llk.info.Poker)>($r1, $r5);

        r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] levelNumber> = $r2;

     label1:
        return;
    }

    public void getNumberImg(android.content.Context)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.graphics.Bitmap[] $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        me.hypertext.wml.llk.info.Poker $r5;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] number>;

        if $r2 != null goto label1;

        $r3 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map bitMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("topnumber");

        $r5 = (me.hypertext.wml.llk.info.Poker) $r4;

        $r2 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] parseImg(android.content.Context,me.hypertext.wml.llk.info.Poker)>($r1, $r5);

        r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] number> = $r2;

     label1:
        return;
    }

    public void getScoreImg(android.content.Context)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.graphics.Bitmap[] $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        me.hypertext.wml.llk.info.Poker $r5;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] score>;

        if $r2 != null goto label1;

        $r3 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map bitMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("score");

        $r5 = (me.hypertext.wml.llk.info.Poker) $r4;

        $r2 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] parseImg(android.content.Context,me.hypertext.wml.llk.info.Poker)>($r1, $r5);

        r0.<me.hypertext.wml.llk.utils.GameImage: android.graphics.Bitmap[] score> = $r2;

     label1:
        return;
    }

    public android.graphics.Bitmap parseImg(android.content.Context, me.hypertext.wml.llk.info.ImageInfo, int)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        me.hypertext.wml.llk.info.ImageInfo $r2;
        android.graphics.Bitmap $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.graphics.Matrix $r3;
        android.content.res.Resources $r4;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: me.hypertext.wml.llk.info.ImageInfo;

        $i0 := @parameter2: int;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r4, $i0);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        $f0 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        $f1 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        virtualinvoke $r3.<android.graphics.Matrix: void setScale(float,float)>($f0, $f1);

        $i0 = virtualinvoke $r2.<me.hypertext.wml.llk.info.ImageInfo: int getXPos()>();

        $i1 = virtualinvoke $r2.<me.hypertext.wml.llk.info.ImageInfo: int getYPos()>();

        $i2 = virtualinvoke $r2.<me.hypertext.wml.llk.info.ImageInfo: int getWidth()>();

        $i3 = virtualinvoke $r2.<me.hypertext.wml.llk.info.ImageInfo: int getHeight()>();

        $r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>($r5, $i0, $i1, $i2, $i3);

        $i0 = virtualinvoke $r6.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();

        $r7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r6, 0, 0, $i0, $i1, $r3, 1);

        virtualinvoke $r5.<android.graphics.Bitmap: void recycle()>();

        virtualinvoke $r6.<android.graphics.Bitmap: void recycle()>();

        return $r7;
    }

    public android.graphics.Bitmap[] parseImg(android.content.Context, me.hypertext.wml.llk.info.Poker)
    {
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.graphics.Bitmap[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r6, $r7;
        android.graphics.Matrix $r3;
        me.hypertext.wml.llk.info.Poker $r2;
        boolean $z0;
        android.graphics.Bitmap $r8, $r9, $r10;
        float $f0, $f1;
        android.content.res.Resources $r5;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: me.hypertext.wml.llk.info.Poker;

        $i1 = virtualinvoke $r2.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        $i2 = virtualinvoke $r2.<me.hypertext.wml.llk.info.Poker: int getVerNum()>();

        $i1 = $i1 * $i2;

        $r4 = newarray (android.graphics.Bitmap)[$i1];

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r2.<me.hypertext.wml.llk.info.Poker: java.lang.String getImagefile()>();

        $r7 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $i1 = virtualinvoke $r5.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r6, "drawable", $r7);

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r5, $i1);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        $f0 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        $f1 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        virtualinvoke $r3.<android.graphics.Matrix: void setScale(float,float)>($f0, $f1);

        $i1 = 0;

     label1:
        $i2 = virtualinvoke $r2.<me.hypertext.wml.llk.info.Poker: int getVerNum()>();

        if $i1 < $i2 goto label2;

        virtualinvoke $r8.<android.graphics.Bitmap: void recycle()>();

        return $r4;

     label2:
        $i2 = 0;

     label3:
        $i0 = virtualinvoke $r2.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        if $i2 < $i0 goto label4;

        $i1 = $i1 + 1;

        goto label1;

     label4:
        $i0 = virtualinvoke $r2.<me.hypertext.wml.llk.info.Poker: int getWidth()>();

        $i0 = $i0 * $i2;

        $i3 = virtualinvoke $r2.<me.hypertext.wml.llk.info.Poker: int getHeight()>();

        $i3 = $i3 * $i1;

        $i4 = virtualinvoke $r2.<me.hypertext.wml.llk.info.Poker: int getWidth()>();

        $i5 = virtualinvoke $r2.<me.hypertext.wml.llk.info.Poker: int getHeight()>();

        $r9 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>($r8, $i0, $i3, $i4, $i5);

        $i0 = virtualinvoke $r2.<me.hypertext.wml.llk.info.Poker: int getHorNum()>();

        $i0 = $i0 * $i1;

        $i0 = $i2 + $i0;

        $i3 = virtualinvoke $r9.<android.graphics.Bitmap: int getWidth()>();

        $i4 = virtualinvoke $r9.<android.graphics.Bitmap: int getHeight()>();

        $r10 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r9, 0, 0, $i3, $i4, $r3, 1);

        $r4[$i0] = $r10;

        $z0 = virtualinvoke $r9.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 != 0 goto label5;

        virtualinvoke $r9.<android.graphics.Bitmap: void recycle()>();

     label5:
        $i2 = $i2 + 1;

        goto label3;
    }

    public void parseImgByXml(android.content.Context)
    {
        java.lang.Throwable $r9;
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.content.res.XmlResourceParser $r4;
        java.util.HashMap $r10;
        java.util.Map $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r5, $r7;
        me.hypertext.wml.llk.info.Poker $r6, $r11;
        boolean $z0;
        java.io.IOException $r12;
        org.xmlpull.v1.XmlPullParserException $r8;
        android.content.res.Resources $r3;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $r2 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map bitMap>;

        if $r2 == null goto label01;

        return;

     label01:
        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(2131034113);

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        <me.hypertext.wml.llk.utils.GameConfig: java.util.Map bitMap> = $r10;

     label02:
        $i0 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: int getEventType()>();

     label03:
        if $i0 == 1 goto label17;

     label04:
        $i0 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: int getEventType()>();

     label05:
        if $i0 != 2 goto label13;

     label06:
        $r5 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("Image");

     label07:
        if $z0 == 0 goto label13;

     label08:
        $r5 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(0);

     label09:
        $r11 = new me.hypertext.wml.llk.info.Poker;

        $r6 = $r11;

     label10:
        $r7 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r7 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r7 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r7 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(4);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r7 = interfaceinvoke $r4.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(5);

        specialinvoke $r11.<me.hypertext.wml.llk.info.Poker: void <init>(int,int,int,int,java.lang.String)>($i0, $i1, $i2, $i3, $r7);

     label11:
        $r2 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map bitMap>;

     label12:
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

     label13:
        interfaceinvoke $r4.<android.content.res.XmlResourceParser: int next()>();

     label14:
        goto label02;

     label15:
        $r8 := @caughtexception;

        virtualinvoke $r8.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return;

     label16:
        $r9 := @caughtexception;

        $r12 = (java.io.IOException) $r9;

        virtualinvoke $r12.<java.io.IOException: void printStackTrace()>();

     label17:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label14 with label15;
        catch java.io.IOException from label02 to label03 with label16;
        catch java.io.IOException from label04 to label05 with label16;
        catch java.io.IOException from label06 to label07 with label16;
        catch java.io.IOException from label08 to label09 with label16;
        catch java.io.IOException from label10 to label11 with label16;
        catch java.io.IOException from label12 to label14 with label16;
    }

    public java.util.List parseImgInfoByXml(android.content.Context, int)
    {
        java.lang.Throwable $r9;
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.content.res.XmlResourceParser $r5;
        java.util.ArrayList $r2, $r10;
        int[] $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r7;
        me.hypertext.wml.llk.info.Poker $r6, $r11;
        boolean $z0;
        java.io.IOException $r12;
        org.xmlpull.v1.XmlPullParserException $r8;
        android.content.res.Resources $r4;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r10 = new java.util.ArrayList;

        $r2 = $r10;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

        $r6 = null;

        $r3 = newarray (int)[0];

        $i1 = 0;

        $i2 = 0;

        $i0 = 0;

     label01:
        $i3 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: int getEventType()>();

     label02:
        if $i3 != 1 goto label03;

        return $r2;

     label03:
        $i3 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: int getEventType()>();

     label04:
        if $i3 != 2 goto label16;

     label05:
        $r7 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("Image");

     label06:
        if $z0 == 0 goto label11;

     label07:
        $r7 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r7 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

     label08:
        $r11 = new me.hypertext.wml.llk.info.Poker;

     label09:
        $r7 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(0);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r7 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(1);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r7 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(4);

        specialinvoke $r11.<me.hypertext.wml.llk.info.Poker: void <init>(int,int,int,int,java.lang.String)>($i0, $i3, $i1, $i2, $r7);

     label10:
        $i0 = $i1 * $i2;

        $r3 = newarray (int)[$i0];

        $r6 = $r11;

        $i0 = 0;

     label11:
        $r7 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("Time");

     label12:
        if $z0 == 0 goto label16;

     label13:
        $r7 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String nextText()>();

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

     label14:
        $r3[$i0] = $i3;

        $i0 = $i0 + 1;

        $i3 = $i1 * $i2;

        if $i0 != $i3 goto label16;

     label15:
        virtualinvoke $r6.<me.hypertext.wml.llk.info.Poker: void setTime(int[])>($r3);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label16:
        interfaceinvoke $r5.<android.content.res.XmlResourceParser: int next()>();

     label17:
        goto label01;

     label18:
        $r8 := @caughtexception;

        virtualinvoke $r8.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return $r2;

     label19:
        $r9 := @caughtexception;

        $r12 = (java.io.IOException) $r9;

        virtualinvoke $r12.<java.io.IOException: void printStackTrace()>();

        return $r2;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label17 with label18;
        catch java.io.IOException from label01 to label02 with label19;
        catch java.io.IOException from label03 to label04 with label19;
        catch java.io.IOException from label05 to label06 with label19;
        catch java.io.IOException from label07 to label08 with label19;
        catch java.io.IOException from label09 to label10 with label19;
        catch java.io.IOException from label11 to label12 with label19;
        catch java.io.IOException from label13 to label14 with label19;
        catch java.io.IOException from label15 to label17 with label19;
    }

    public java.util.Map parseImgInfoByXml(android.content.Context, int, int)
    {
        java.lang.Throwable $r12;
        android.content.Context $r1;
        me.hypertext.wml.llk.utils.GameImage r0;
        android.content.res.XmlResourceParser $r5;
        java.util.HashMap $r3, $r13;
        me.hypertext.wml.llk.info.ImageInfo $r8, $r15;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r7, $r9;
        android.graphics.Matrix $r2, $r14;
        boolean $z0;
        java.io.IOException $r16;
        org.xmlpull.v1.XmlPullParserException $r11;
        android.graphics.Bitmap $r6, $r10;
        float $f0, $f1;
        android.content.res.Resources $r4;

        r0 := @this: me.hypertext.wml.llk.utils.GameImage;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r13 = new java.util.HashMap;

        $r3 = $r13;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r4, $i1);

        $r14 = new android.graphics.Matrix;

        $r2 = $r14;

        specialinvoke $r14.<android.graphics.Matrix: void <init>()>();

        $f0 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        $f1 = <me.hypertext.wml.llk.utils.GameConfig: float widthScale>;

        virtualinvoke $r2.<android.graphics.Matrix: void setScale(float,float)>($f0, $f1);

     label01:
        $i0 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: int getEventType()>();

     label02:
        if $i0 != 1 goto label05;

     label03:
        virtualinvoke $r6.<android.graphics.Bitmap: void recycle()>();

     label04:
        return $r3;

     label05:
        $i0 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: int getEventType()>();

     label06:
        if $i0 != 2 goto label14;

     label07:
        $r7 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("Image");

     label08:
        if $z0 == 0 goto label14;

     label09:
        $r7 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(0);

     label10:
        $r15 = new me.hypertext.wml.llk.info.ImageInfo;

        $r8 = $r15;

     label11:
        $r9 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r9 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r9 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r9 = interfaceinvoke $r5.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(int)>(4);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        specialinvoke $r15.<me.hypertext.wml.llk.info.ImageInfo: void <init>(java.lang.String,int,int,int,int)>($r7, $i0, $i1, $i2, $i3);

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r7);

     label12:
        if $z0 != 0 goto label14;

     label13:
        $i0 = virtualinvoke $r8.<me.hypertext.wml.llk.info.ImageInfo: int getXPos()>();

        $i1 = virtualinvoke $r8.<me.hypertext.wml.llk.info.ImageInfo: int getYPos()>();

        $i2 = virtualinvoke $r8.<me.hypertext.wml.llk.info.ImageInfo: int getWidth()>();

        $i3 = virtualinvoke $r8.<me.hypertext.wml.llk.info.ImageInfo: int getHeight()>();

        $r10 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>($r6, $i0, $i1, $i2, $i3);

        $i0 = virtualinvoke $r10.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r10.<android.graphics.Bitmap: int getHeight()>();

        $r10 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r10, 0, 0, $i0, $i1, $r2, 1);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10);

     label14:
        interfaceinvoke $r5.<android.content.res.XmlResourceParser: int next()>();

     label15:
        goto label01;

     label16:
        $r11 := @caughtexception;

        virtualinvoke $r11.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        return $r3;

     label17:
        $r12 := @caughtexception;

        $r16 = (java.io.IOException) $r12;

        virtualinvoke $r16.<java.io.IOException: void printStackTrace()>();

        return $r3;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label15 with label16;
        catch java.io.IOException from label01 to label02 with label17;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.io.IOException from label05 to label06 with label17;
        catch java.io.IOException from label07 to label08 with label17;
        catch java.io.IOException from label09 to label10 with label17;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.io.IOException from label13 to label15 with label17;
    }
}
