public class com.baidu.appx.f.h extends java.lang.Object
{
    private int a;
    private com.baidu.appx.f.i$a b;
    private org.json.JSONObject c;

    public void <init>(int, com.baidu.appx.f.i$a, org.json.JSONObject)
    {
        org.json.JSONObject $r2;
        int $i0;
        com.baidu.appx.f.h r0;
        com.baidu.appx.f.i$a $r1;

        r0 := @this: com.baidu.appx.f.h;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.baidu.appx.f.i$a;

        $r2 := @parameter2: org.json.JSONObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.baidu.appx.f.h: int a> = 0;

        r0.<com.baidu.appx.f.h: com.baidu.appx.f.i$a b> = null;

        r0.<com.baidu.appx.f.h: org.json.JSONObject c> = null;

        r0.<com.baidu.appx.f.h: int a> = $i0;

        r0.<com.baidu.appx.f.h: com.baidu.appx.f.i$a b> = $r1;

        r0.<com.baidu.appx.f.h: org.json.JSONObject c> = $r2;

        return;
    }

    private byte[] a(int, byte[])
    {
        byte[] $r1;
        int $i0, $i1, $i2;
        com.baidu.appx.f.h r0;
        java.lang.String $r3;
        java.lang.Exception r2;

        r0 := @this: com.baidu.appx.f.h;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $r3 = staticinvoke <com.baidu.appx.b.d: java.lang.String b(byte[])>($r1);

        if $r3 == null goto label6;

     label1:
        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

     label2:
        $i2 = $i0 + 4;

        if $i1 < $i2 goto label6;

        $i1 = $i0 + 4;

     label3:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r1 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

     label4:
        return $r1;

     label5:
        r2 := @caughtexception;

        staticinvoke <com.baidu.appx.g.i: void a(java.lang.Exception)>(r2);

     label6:
        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private byte[] b()
    {
        byte[] r2, $r3, $r6;
        java.lang.Exception r1;
        byte $b2;
        int i0, $i1;
        com.baidu.appx.f.h r0;
        java.lang.String $r5;

        r0 := @this: com.baidu.appx.f.h;

        i0 = 32;

        r2 = newarray (byte)[74];

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r2, 0);

        $r3 = staticinvoke <com.baidu.appx.f.d: byte[] a()>();

        if $r3 == null goto label1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, 32);

     label1:
        $i1 = <com.baidu.appx.f.d: int a>;

        $r3 = staticinvoke <com.baidu.appx.b.b: byte[] a(int)>($i1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 32, 2);

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw_java_lang_Exception_2()>();

        $b2 = (byte) 0;

        r2[34] = $b2;

        $i1 = r0.<com.baidu.appx.f.h: int a>;

        $r3 = staticinvoke <com.baidu.appx.b.b: byte[] a(int)>($i1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 35, 2);

        $r3 = null;

     label2:
        $r5 = staticinvoke <com.baidu.appx.f.d: java.lang.String b()>();

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

     label3:
        $r3 = $r6;

     label4:
        $i1 = lengthof $r3;

        if $i1 <= 32 goto label7;

     label5:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 42, i0);

        return r2;

     label6:
        r1 := @caughtexception;

        staticinvoke <com.baidu.appx.g.i: void a(java.lang.Exception)>(r1);

        goto label4;

     label7:
        i0 = lengthof $r3;

        goto label5;

        catch java.lang.Exception from label2 to label3 with label6;
    }

    private byte[] c()
    {
        byte[] $r4;
        org.json.JSONObject $r2;
        com.baidu.appx.f.h r0;
        java.lang.String $r3;
        java.lang.Exception r1;

        r0 := @this: com.baidu.appx.f.h;

        $r2 = r0.<com.baidu.appx.f.h: org.json.JSONObject c>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.baidu.appx.f.h: org.json.JSONObject c>;

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

     label2:
        return $r4;

     label3:
        r1 := @caughtexception;

        staticinvoke <com.baidu.appx.g.i: void a(java.lang.Exception)>(r1);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private int d()
    {
        int $i0;
        java.util.Random r1;
        com.baidu.appx.f.h r0;

        r0 := @this: com.baidu.appx.f.h;

        r1 = new java.util.Random;

        specialinvoke r1.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(29);

        return $i0;
    }

    public byte[] a()
    {
        byte[] r1, $r2, $r4;
        com.baidu.appx.f.i$a $r3;
        byte $b1;
        int i0, $i2;
        com.baidu.appx.f.h r0;

        r0 := @this: com.baidu.appx.f.h;

        $r2 = specialinvoke r0.<com.baidu.appx.f.h: byte[] b()>();

        r1 = specialinvoke r0.<com.baidu.appx.f.h: byte[] c()>();

        $r3 = r0.<com.baidu.appx.f.h: com.baidu.appx.f.i$a b>;

        $r4 = interfaceinvoke $r3.<com.baidu.appx.f.i$a: byte[] a(byte[])>(r1);

        i0 = 0;

        if $r4 == null goto label1;

        i0 = specialinvoke r0.<com.baidu.appx.f.h: int d()>();

        r1 = specialinvoke r0.<com.baidu.appx.f.h: byte[] a(int,byte[])>(i0, r1);

        $b1 = (byte) i0;

        $r2[37] = $b1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r2, 38, 4);

        i0 = lengthof $r4;

     label1:
        $i2 = lengthof $r2;

        $i2 = $i2 + i0;

        r1 = newarray (byte)[$i2];

        $i2 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2);

        if $r4 == null goto label2;

        $i2 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, $i2, i0);

     label2:
        return r1;
    }
}
