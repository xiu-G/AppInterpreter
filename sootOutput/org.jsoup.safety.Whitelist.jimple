public class org.jsoup.safety.Whitelist extends java.lang.Object
{
    private java.util.Map attributes;
    private java.util.Map enforcedAttributes;
    private boolean preserveRelativeLinks;
    private java.util.Map protocols;
    private java.util.Set tagNames;

    public void <init>()
    {
        org.jsoup.safety.Whitelist r0;
        java.util.HashSet $r1;
        java.util.HashMap $r2;

        r0 := @this: org.jsoup.safety.Whitelist;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.jsoup.safety.Whitelist: java.util.Map attributes> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes> = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.jsoup.safety.Whitelist: java.util.Map protocols> = $r2;

        r0.<org.jsoup.safety.Whitelist: boolean preserveRelativeLinks> = 0;

        return;
    }

    public static org.jsoup.safety.Whitelist basic()
    {
        org.jsoup.safety.Whitelist $r0;
        java.lang.String[] $r1;

        $r0 = new org.jsoup.safety.Whitelist;

        specialinvoke $r0.<org.jsoup.safety.Whitelist: void <init>()>();

        $r1 = newarray (java.lang.String)[23];

        $r1[0] = "a";

        $r1[1] = "b";

        $r1[2] = "blockquote";

        $r1[3] = "br";

        $r1[4] = "cite";

        $r1[5] = "code";

        $r1[6] = "dd";

        $r1[7] = "dl";

        $r1[8] = "dt";

        $r1[9] = "em";

        $r1[10] = "i";

        $r1[11] = "li";

        $r1[12] = "ol";

        $r1[13] = "p";

        $r1[14] = "pre";

        $r1[15] = "q";

        $r1[16] = "small";

        $r1[17] = "strike";

        $r1[18] = "strong";

        $r1[19] = "sub";

        $r1[20] = "sup";

        $r1[21] = "u";

        $r1[22] = "ul";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r1);

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "href";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("a", $r1);

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "cite";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("blockquote", $r1);

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "cite";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("q", $r1);

        $r1 = newarray (java.lang.String)[4];

        $r1[0] = "ftp";

        $r1[1] = "http";

        $r1[2] = "https";

        $r1[3] = "mailto";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("a", "href", $r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "http";

        $r1[1] = "https";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("blockquote", "cite", $r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "http";

        $r1[1] = "https";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("cite", "cite", $r1);

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String)>("a", "rel", "nofollow");

        return $r0;
    }

    public static org.jsoup.safety.Whitelist basicWithImages()
    {
        org.jsoup.safety.Whitelist $r0;
        java.lang.String[] $r1;

        $r0 = staticinvoke <org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist basic()>();

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "img";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r1);

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "align";

        $r1[1] = "alt";

        $r1[2] = "height";

        $r1[3] = "src";

        $r1[4] = "title";

        $r1[5] = "width";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("img", $r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "http";

        $r1[1] = "https";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("img", "src", $r1);

        return $r0;
    }

    public static org.jsoup.safety.Whitelist none()
    {
        org.jsoup.safety.Whitelist $r0;

        $r0 = new org.jsoup.safety.Whitelist;

        specialinvoke $r0.<org.jsoup.safety.Whitelist: void <init>()>();

        return $r0;
    }

    public static org.jsoup.safety.Whitelist relaxed()
    {
        org.jsoup.safety.Whitelist $r0;
        java.lang.String[] $r1;

        $r0 = new org.jsoup.safety.Whitelist;

        specialinvoke $r0.<org.jsoup.safety.Whitelist: void <init>()>();

        $r1 = newarray (java.lang.String)[41];

        $r1[0] = "a";

        $r1[1] = "b";

        $r1[2] = "blockquote";

        $r1[3] = "br";

        $r1[4] = "caption";

        $r1[5] = "cite";

        $r1[6] = "code";

        $r1[7] = "col";

        $r1[8] = "colgroup";

        $r1[9] = "dd";

        $r1[10] = "div";

        $r1[11] = "dl";

        $r1[12] = "dt";

        $r1[13] = "em";

        $r1[14] = "h1";

        $r1[15] = "h2";

        $r1[16] = "h3";

        $r1[17] = "h4";

        $r1[18] = "h5";

        $r1[19] = "h6";

        $r1[20] = "i";

        $r1[21] = "img";

        $r1[22] = "li";

        $r1[23] = "ol";

        $r1[24] = "p";

        $r1[25] = "pre";

        $r1[26] = "q";

        $r1[27] = "small";

        $r1[28] = "strike";

        $r1[29] = "strong";

        $r1[30] = "sub";

        $r1[31] = "sup";

        $r1[32] = "table";

        $r1[33] = "tbody";

        $r1[34] = "td";

        $r1[35] = "tfoot";

        $r1[36] = "th";

        $r1[37] = "thead";

        $r1[38] = "tr";

        $r1[39] = "u";

        $r1[40] = "ul";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "href";

        $r1[1] = "title";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("a", $r1);

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "cite";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("blockquote", $r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "span";

        $r1[1] = "width";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("col", $r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "span";

        $r1[1] = "width";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("colgroup", $r1);

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "align";

        $r1[1] = "alt";

        $r1[2] = "height";

        $r1[3] = "src";

        $r1[4] = "title";

        $r1[5] = "width";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("img", $r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "start";

        $r1[1] = "type";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("ol", $r1);

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "cite";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("q", $r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "summary";

        $r1[1] = "width";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("table", $r1);

        $r1 = newarray (java.lang.String)[5];

        $r1[0] = "abbr";

        $r1[1] = "axis";

        $r1[2] = "colspan";

        $r1[3] = "rowspan";

        $r1[4] = "width";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("td", $r1);

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "abbr";

        $r1[1] = "axis";

        $r1[2] = "colspan";

        $r1[3] = "rowspan";

        $r1[4] = "scope";

        $r1[5] = "width";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("th", $r1);

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "type";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("ul", $r1);

        $r1 = newarray (java.lang.String)[4];

        $r1[0] = "ftp";

        $r1[1] = "http";

        $r1[2] = "https";

        $r1[3] = "mailto";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("a", "href", $r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "http";

        $r1[1] = "https";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("blockquote", "cite", $r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "http";

        $r1[1] = "https";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("img", "src", $r1);

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "http";

        $r1[1] = "https";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("q", "cite", $r1);

        return $r0;
    }

    public static org.jsoup.safety.Whitelist simpleText()
    {
        org.jsoup.safety.Whitelist $r0;
        java.lang.String[] $r1;

        $r0 = new org.jsoup.safety.Whitelist;

        specialinvoke $r0.<org.jsoup.safety.Whitelist: void <init>()>();

        $r1 = newarray (java.lang.String)[5];

        $r1[0] = "b";

        $r1[1] = "em";

        $r1[2] = "i";

        $r1[3] = "strong";

        $r1[4] = "u";

        $r0 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r1);

        return $r0;
    }

    private boolean testValidProtocol(org.jsoup.nodes.Element, org.jsoup.nodes.Attribute, java.util.Set)
    {
        org.jsoup.safety.Whitelist r0;
        org.jsoup.safety.Whitelist$Protocol r8;
        java.util.Iterator $r6;
        java.util.Set r3;
        org.jsoup.nodes.Attribute $r2;
        org.jsoup.nodes.Element $r1;
        int $i0;
        java.lang.Object $r7;
        java.lang.StringBuilder $r9;
        java.lang.String $r4, $r5, $r10;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Whitelist;

        $r1 := @parameter0: org.jsoup.nodes.Element;

        $r2 := @parameter1: org.jsoup.nodes.Attribute;

        r3 := @parameter2: java.util.Set;

        $r4 = virtualinvoke $r2.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        $r5 = virtualinvoke $r1.<org.jsoup.nodes.Element: java.lang.String absUrl(java.lang.String)>($r4);

        $r4 = $r5;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r4 = virtualinvoke $r2.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();

     label1:
        $z0 = r0.<org.jsoup.safety.Whitelist: boolean preserveRelativeLinks>;

        if $z0 != 0 goto label2;

        virtualinvoke $r2.<org.jsoup.nodes.Attribute: java.lang.String setValue(java.lang.String)>($r4);

     label2:
        $r6 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.jsoup.safety.Whitelist$Protocol) $r7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r8.<org.jsoup.safety.Whitelist$Protocol: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>($r5);

        if $z0 == 0 goto label3;

        return 1;

     label4:
        return 0;
    }

    public transient org.jsoup.safety.Whitelist addAttributes(java.lang.String, java.lang.String[])
    {
        org.jsoup.safety.Whitelist r0;
        org.jsoup.safety.Whitelist$AttributeKey $r6;
        java.util.Set $r5;
        java.lang.String[] $r2;
        java.util.HashSet r3;
        org.jsoup.safety.Whitelist$TagName $r4;
        java.util.Map $r7;
        int i0, i1;
        java.lang.Object $r8;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Whitelist;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r1);

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r2);

        i0 = lengthof $r2;

        if i0 <= 0 goto label4;

        $z0 = 1;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "No attributes supplied.");

        $r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r1);

        $r5 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r5 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label2:
        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        i0 = lengthof $r2;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r1 = $r2[i1];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r1);

        $r6 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>($r1);

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label3;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        $r7 = r0.<org.jsoup.safety.Whitelist: java.util.Map attributes>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

        $r7 = r0.<org.jsoup.safety.Whitelist: java.util.Map attributes>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r5 = (java.util.Set) $r8;

        interfaceinvoke $r5.<java.util.Set: boolean addAll(java.util.Collection)>(r3);

        return r0;

     label6:
        $r7 = r0.<org.jsoup.safety.Whitelist: java.util.Map attributes>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r3);

        return r0;
    }

    public org.jsoup.safety.Whitelist addEnforcedAttribute(java.lang.String, java.lang.String, java.lang.String)
    {
        org.jsoup.safety.Whitelist r0;
        org.jsoup.safety.Whitelist$AttributeKey $r7;
        java.util.Set $r6;
        java.util.HashMap r4;
        org.jsoup.safety.Whitelist$AttributeValue $r8;
        org.jsoup.safety.Whitelist$TagName $r5;
        java.util.Map $r9;
        java.lang.Object $r10;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Whitelist;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r1);

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r2);

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r3);

        $r5 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r1);

        $r6 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r6 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r5);

     label1:
        $r7 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>($r2);

        $r8 = staticinvoke <org.jsoup.safety.Whitelist$AttributeValue: org.jsoup.safety.Whitelist$AttributeValue valueOf(java.lang.String)>($r3);

        $r9 = r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;

        $z0 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r9 = r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r9 = (java.util.Map) $r10;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        return r0;

     label2:
        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        $r9 = r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r4);

        return r0;
    }

    public transient org.jsoup.safety.Whitelist addProtocols(java.lang.String, java.lang.String, java.lang.String[])
    {
        org.jsoup.safety.Whitelist$AttributeKey $r5;
        java.lang.String[] $r3;
        java.util.HashMap $r10;
        java.util.HashSet $r11;
        org.jsoup.safety.Whitelist$TagName $r4;
        java.util.Map $r6;
        int i0, i1;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.jsoup.safety.Whitelist r0;
        org.jsoup.safety.Whitelist$Protocol $r9;
        java.util.Set $r12;
        java.lang.Object $r7, r8;

        r0 := @this: org.jsoup.safety.Whitelist;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r1);

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r2);

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r3);

        $r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r1);

        $r5 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>($r2);

        $r6 = r0.<org.jsoup.safety.Whitelist: java.util.Map protocols>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $r6 = r0.<org.jsoup.safety.Whitelist: java.util.Map protocols>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r7 = (java.util.Map) $r7;

     label1:
        $r6 = (java.util.Map) $r7;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        $r6 = (java.util.Map) $r7;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r8 = (java.util.Set) $r7;

     label2:
        i0 = lengthof $r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        $r1 = $r3[i1];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r1);

        $r9 = staticinvoke <org.jsoup.safety.Whitelist$Protocol: org.jsoup.safety.Whitelist$Protocol valueOf(java.lang.String)>($r1);

        $r12 = (java.util.Set) r8;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label3;

     label4:
        $r10 = new java.util.HashMap;

        $r7 = $r10;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        $r6 = r0.<org.jsoup.safety.Whitelist: java.util.Map protocols>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r7);

        goto label1;

     label5:
        $r11 = new java.util.HashSet;

        r8 = $r11;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        $r6 = (java.util.Map) $r7;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r8);

        goto label2;

     label6:
        return r0;
    }

    public transient org.jsoup.safety.Whitelist addTags(java.lang.String[])
    {
        org.jsoup.safety.Whitelist r0;
        org.jsoup.safety.Whitelist$TagName $r4;
        int i0, i1;
        java.util.Set $r3;
        java.lang.String[] $r1;
        java.lang.String r2;

        r0 := @this: org.jsoup.safety.Whitelist;

        $r1 := @parameter0: java.lang.String[];

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r1);

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r1[i1];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(r2);

        $r3 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        $r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>(r2);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    org.jsoup.nodes.Attributes getEnforcedAttributes(java.lang.String)
    {
        org.jsoup.safety.Whitelist r0;
        org.jsoup.nodes.Attributes r2;
        org.jsoup.safety.Whitelist$AttributeKey $r9;
        java.util.Map$Entry r8;
        java.util.Iterator $r7;
        java.util.Set $r6;
        org.jsoup.safety.Whitelist$AttributeValue $r10;
        org.jsoup.safety.Whitelist$TagName $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.String $r1, $r11;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Whitelist;

        $r1 := @parameter0: java.lang.String;

        r2 = new org.jsoup.nodes.Attributes;

        specialinvoke r2.<org.jsoup.nodes.Attributes: void <init>()>();

        $r3 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r1);

        $r4 = r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r0.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r4 = (java.util.Map) $r5;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (org.jsoup.safety.Whitelist$AttributeKey) $r5;

        $r1 = virtualinvoke $r9.<org.jsoup.safety.Whitelist$AttributeKey: java.lang.String toString()>();

        $r5 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (org.jsoup.safety.Whitelist$AttributeValue) $r5;

        $r11 = virtualinvoke $r10.<org.jsoup.safety.Whitelist$AttributeValue: java.lang.String toString()>();

        virtualinvoke r2.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>($r1, $r11);

        goto label1;

     label2:
        return r2;
    }

    boolean isSafeAttribute(java.lang.String, org.jsoup.nodes.Element, org.jsoup.nodes.Attribute)
    {
        org.jsoup.safety.Whitelist r0;
        org.jsoup.safety.Whitelist$AttributeKey $r6;
        java.util.Set $r9;
        org.jsoup.nodes.Attribute $r3;
        org.jsoup.nodes.Element $r2;
        org.jsoup.safety.Whitelist$TagName $r4;
        java.util.Map $r7;
        java.lang.Object $r8;
        java.lang.String $r1, $r5;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Whitelist;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.jsoup.nodes.Element;

        $r3 := @parameter2: org.jsoup.nodes.Attribute;

        $r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r1);

        $r5 = virtualinvoke $r3.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        $r6 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>($r5);

        $r7 = r0.<org.jsoup.safety.Whitelist: java.util.Map attributes>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $r7 = r0.<org.jsoup.safety.Whitelist: java.util.Map attributes>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r9 = (java.util.Set) $r8;

        $z0 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        $r7 = r0.<org.jsoup.safety.Whitelist: java.util.Map protocols>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

        $r7 = r0.<org.jsoup.safety.Whitelist: java.util.Map protocols>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r7 = (java.util.Map) $r8;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (java.util.Set) $r8;

        $z0 = specialinvoke r0.<org.jsoup.safety.Whitelist: boolean testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)>($r2, $r3, $r9);

        if $z0 == 0 goto label3;

     label1:
        $z0 = 1;

     label2:
        return $z0;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(":all");

        if $z0 != 0 goto label5;

        $z0 = virtualinvoke r0.<org.jsoup.safety.Whitelist: boolean isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute)>(":all", $r2, $r3);

        if $z0 != 0 goto label6;

     label5:
        return 0;

     label6:
        return 1;
    }

    protected boolean isSafeTag(java.lang.String)
    {
        org.jsoup.safety.Whitelist r0;
        org.jsoup.safety.Whitelist$TagName $r3;
        java.util.Set $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Whitelist;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        $r3 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public org.jsoup.safety.Whitelist preserveRelativeLinks(boolean)
    {
        org.jsoup.safety.Whitelist r0;
        boolean $z0;

        r0 := @this: org.jsoup.safety.Whitelist;

        $z0 := @parameter0: boolean;

        r0.<org.jsoup.safety.Whitelist: boolean preserveRelativeLinks> = $z0;

        return r0;
    }
}
