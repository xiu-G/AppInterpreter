public class u.aly.m extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{
    private java.lang.Thread$UncaughtExceptionHandler a;
    private u.aly.t b;

    public void <init>()
    {
        java.lang.Thread$UncaughtExceptionHandler $r1;
        u.aly.m r0;

        r0 := @this: u.aly.m;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        if $r1 != r0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        r0.<u.aly.m: java.lang.Thread$UncaughtExceptionHandler a> = $r1;

        staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>(r0);

        return;
    }

    private void a(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        u.aly.m r0;
        u.aly.t $r2;
        boolean $z0;

        r0 := @this: u.aly.m;

        $r1 := @parameter0: java.lang.Throwable;

        $z0 = <com.umeng.analytics.AnalyticsConfig: boolean CATCH_EXCEPTION>;

        if $z0 == 0 goto label1;

        $r2 = r0.<u.aly.m: u.aly.t b>;

        interfaceinvoke $r2.<u.aly.t: void a(java.lang.Throwable)>($r1);

        return;

     label1:
        $r2 = r0.<u.aly.m: u.aly.t b>;

        interfaceinvoke $r2.<u.aly.t: void a(java.lang.Throwable)>(null);

        return;
    }

    public void a(u.aly.t)
    {
        u.aly.t $r1;
        u.aly.m r0;

        r0 := @this: u.aly.m;

        $r1 := @parameter0: u.aly.t;

        r0.<u.aly.m: u.aly.t b> = $r1;

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        java.lang.Thread$UncaughtExceptionHandler $r3, $r4;
        u.aly.m r0;
        java.lang.Thread $r1;

        r0 := @this: u.aly.m;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<u.aly.m: void a(java.lang.Throwable)>($r2);

        $r3 = r0.<u.aly.m: java.lang.Thread$UncaughtExceptionHandler a>;

        if $r3 == null goto label1;

        $r4 = r0.<u.aly.m: java.lang.Thread$UncaughtExceptionHandler a>;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        if $r4 == $r3 goto label1;

        $r3 = r0.<u.aly.m: java.lang.Thread$UncaughtExceptionHandler a>;

        interfaceinvoke $r3.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

     label1:
        return;
    }
}
