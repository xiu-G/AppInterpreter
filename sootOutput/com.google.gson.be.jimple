final class com.google.gson.be extends java.lang.Object
{

    private void <init>()
    {
        com.google.gson.be r0;

        r0 := @this: com.google.gson.be;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.gson.bb a(java.lang.reflect.Field, java.lang.reflect.Type)
    {
        java.lang.reflect.Type $r1, $r3;
        java.lang.Class $r2;
        com.google.gson.bb $r4;
        java.lang.reflect.Field $r0;

        $r0 := @parameter0: java.lang.reflect.Field;

        $r1 := @parameter1: java.lang.reflect.Type;

        $r2 = staticinvoke <com.google.gson.bg: java.lang.Class b(java.lang.reflect.Type)>($r1);

        $r3 = virtualinvoke $r0.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        $r1 = staticinvoke <com.google.gson.be: java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Class)>($r3, $r1, $r2);

        $r4 = new com.google.gson.bb;

        specialinvoke $r4.<com.google.gson.bb: void <init>(java.lang.reflect.Type)>($r1);

        return $r4;
    }

    public static com.google.gson.bc a(java.lang.reflect.Type)
    {
        com.google.gson.bc $r1;
        java.lang.reflect.Type $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.reflect.Type;

        $z0 = staticinvoke <com.google.gson.bg: boolean a(java.lang.reflect.Type)>($r0);

        staticinvoke <com.google.gson.at: void a(boolean)>($z0);

        $r1 = new com.google.gson.bc;

        specialinvoke $r1.<com.google.gson.bc: void <init>(java.lang.reflect.Type)>($r0);

        return $r1;
    }

    private static java.lang.reflect.Type a(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.Class)
    {
        java.lang.reflect.GenericArrayType $r8;
        java.lang.IllegalStateException $r13;
        java.lang.reflect.WildcardType $r17;
        int $i0, $i1;
        java.lang.String $r16;
        com.google.gson.ar $r7;
        boolean $z0;
        java.lang.UnsupportedOperationException $r14;
        java.lang.reflect.TypeVariable $r10, $r12;
        java.lang.IllegalArgumentException $r18;
        java.lang.reflect.ParameterizedType $r3;
        java.lang.reflect.Type $r1, $r2, $r6;
        java.lang.reflect.TypeVariable[] $r11;
        java.lang.reflect.Type[] $r4, $r5;
        com.google.gson.m $r9;
        java.lang.Class $r0;
        java.lang.StringBuilder $r15;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r0 := @parameter2: java.lang.Class;

        $i0 = 0;

     label01:
        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label02;

        return $r1;

     label02:
        $z0 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label05;

        $r3 = (java.lang.reflect.ParameterizedType) $r1;

        $r1 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>();

        $r4 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        staticinvoke <com.google.gson.at: void a(java.lang.Object)>($r4);

        $i1 = lengthof $r4;

        $r5 = newarray (java.lang.reflect.Type)[$i1];

     label03:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label04;

        $r6 = $r4[$i0];

        $r6 = staticinvoke <com.google.gson.be: java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Class)>($r6, $r2, $r0);

        $r5[$i0] = $r6;

        $i0 = $i0 + 1;

        goto label03;

     label04:
        $r2 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $r7 = new com.google.gson.ar;

        specialinvoke $r7.<com.google.gson.ar: void <init>(java.lang.reflect.Type,java.lang.reflect.Type[],java.lang.reflect.Type)>($r2, $r5, $r1);

        return $r7;

     label05:
        $z0 = $r1 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label08;

        $r8 = (java.lang.reflect.GenericArrayType) $r1;

        $r1 = interfaceinvoke $r8.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r2 = staticinvoke <com.google.gson.be: java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Class)>($r1, $r2, $r0);

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label06;

        return $r8;

     label06:
        $z0 = $r2 instanceof java.lang.Class;

        if $z0 == 0 goto label07;

        $r0 = staticinvoke <com.google.gson.bg: java.lang.Class b(java.lang.reflect.Type)>($r2);

        $r0 = staticinvoke <com.google.gson.bg: java.lang.Class a(java.lang.Class)>($r0);

        return $r0;

     label07:
        $r9 = new com.google.gson.m;

        specialinvoke $r9.<com.google.gson.m: void <init>(java.lang.reflect.Type)>($r2);

        return $r9;

     label08:
        $z0 = $r1 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label13;

        $z0 = $r2 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label12;

        $r10 = (java.lang.reflect.TypeVariable) $r1;

        $r11 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $r3 = (java.lang.reflect.ParameterizedType) $r2;

        $i0 = 0;

     label09:
        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label11;

        $r12 = $r11[$i0];

        $z0 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label10;

        $r4 = interfaceinvoke $r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r1 = $r4[$i0];

        return $r1;

     label10:
        $i0 = $i0 + 1;

        goto label09;

     label11:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("How can the type variable not be present in the class declaration!");

        throw $r13;

     label12:
        $r14 = new java.lang.UnsupportedOperationException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting parameterized type, got ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n Are you missing the use of TypeToken idiom?\n See ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r16);

        throw $r14;

     label13:
        $z0 = $r1 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label14;

        $r17 = (java.lang.reflect.WildcardType) $r1;

        $r4 = interfaceinvoke $r17.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        $r1 = $r4[0];

        goto label01;

     label14:
        $r18 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type \'");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not a Class, ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ParameterizedType, GenericArrayType or TypeVariable. Can\'t extract type.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r18;
    }
}
