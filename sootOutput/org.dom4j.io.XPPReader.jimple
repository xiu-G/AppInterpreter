public class org.dom4j.io.XPPReader extends java.lang.Object
{
    private org.dom4j.io.DispatchHandler dispatchHandler;
    private org.dom4j.DocumentFactory factory;
    private org.gjt.xpp.XmlPullParserFactory xppFactory;
    private org.gjt.xpp.XmlPullParser xppParser;

    public void <init>()
    {
        org.dom4j.io.XPPReader r0;

        r0 := @this: org.dom4j.io.XPPReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.dom4j.DocumentFactory)
    {
        org.dom4j.io.XPPReader r0;
        org.dom4j.DocumentFactory $r1;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: org.dom4j.DocumentFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.io.XPPReader: org.dom4j.DocumentFactory factory> = $r1;

        return;
    }

    public void addHandler(java.lang.String, org.dom4j.ElementHandler)
    {
        org.dom4j.ElementHandler $r2;
        java.lang.String $r1;
        org.dom4j.io.DispatchHandler $r3;
        org.dom4j.io.XPPReader r0;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.dom4j.ElementHandler;

        $r3 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.io.DispatchHandler getDispatchHandler()>();

        virtualinvoke $r3.<org.dom4j.io.DispatchHandler: void addHandler(java.lang.String,org.dom4j.ElementHandler)>($r1, $r2);

        return;
    }

    protected java.io.Reader createReader(java.io.InputStream) throws java.io.IOException
    {
        java.io.BufferedReader $r2;
        org.dom4j.io.XPPReader r0;
        java.io.InputStreamReader $r3;
        java.io.InputStream $r1;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1);

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3);

        return $r2;
    }

    protected org.dom4j.io.DispatchHandler getDispatchHandler()
    {
        org.dom4j.io.DispatchHandler $r1;
        org.dom4j.io.XPPReader r0;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 = r0.<org.dom4j.io.XPPReader: org.dom4j.io.DispatchHandler dispatchHandler>;

        if $r1 != null goto label1;

        $r1 = new org.dom4j.io.DispatchHandler;

        specialinvoke $r1.<org.dom4j.io.DispatchHandler: void <init>()>();

        r0.<org.dom4j.io.XPPReader: org.dom4j.io.DispatchHandler dispatchHandler> = $r1;

     label1:
        $r1 = r0.<org.dom4j.io.XPPReader: org.dom4j.io.DispatchHandler dispatchHandler>;

        return $r1;
    }

    public org.dom4j.DocumentFactory getDocumentFactory()
    {
        org.dom4j.io.XPPReader r0;
        org.dom4j.DocumentFactory $r1;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 = r0.<org.dom4j.io.XPPReader: org.dom4j.DocumentFactory factory>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <org.dom4j.DocumentFactory: org.dom4j.DocumentFactory getInstance()>();

        r0.<org.dom4j.io.XPPReader: org.dom4j.DocumentFactory factory> = $r1;

     label1:
        $r1 = r0.<org.dom4j.io.XPPReader: org.dom4j.DocumentFactory factory>;

        return $r1;
    }

    public org.gjt.xpp.XmlPullParserFactory getXPPFactory() throws org.gjt.xpp.XmlPullParserException
    {
        org.dom4j.io.XPPReader r0;
        org.gjt.xpp.XmlPullParserFactory $r1;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 = r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParserFactory xppFactory>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <org.gjt.xpp.XmlPullParserFactory: org.gjt.xpp.XmlPullParserFactory newInstance()>();

        r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParserFactory xppFactory> = $r1;

     label1:
        $r1 = r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParserFactory xppFactory>;

        return $r1;
    }

    public org.gjt.xpp.XmlPullParser getXPPParser() throws org.gjt.xpp.XmlPullParserException
    {
        org.gjt.xpp.XmlPullParser $r1;
        org.dom4j.io.XPPReader r0;
        org.gjt.xpp.XmlPullParserFactory $r2;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 = r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParser xppParser>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParserFactory getXPPFactory()>();

        $r1 = virtualinvoke $r2.<org.gjt.xpp.XmlPullParserFactory: org.gjt.xpp.XmlPullParser newPullParser()>();

        r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParser xppParser> = $r1;

     label1:
        $r1 = r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParser xppParser>;

        return $r1;
    }

    protected org.dom4j.Document parseDocument() throws org.dom4j.DocumentException, java.io.IOException, org.gjt.xpp.XmlPullParserException
    {
        org.dom4j.Document $r3;
        org.gjt.xpp.XmlEndTag $r7;
        org.dom4j.io.XPPReader r0;
        org.gjt.xpp.XmlPullParserFactory $r6;
        org.dom4j.DocumentFactory $r2;
        org.dom4j.DocumentException $r13;
        byte $b0;
        java.lang.StringBuffer $r8, $r12;
        int $i1;
        java.lang.String $r9;
        org.gjt.xpp.XmlPullParser $r5;
        org.dom4j.xpp.ProxyXmlStartTag r1, $r11;
        org.dom4j.Element r4, $r10;

        r0 := @this: org.dom4j.io.XPPReader;

        $r2 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.DocumentFactory getDocumentFactory()>();

        $r3 = virtualinvoke $r2.<org.dom4j.DocumentFactory: org.dom4j.Document createDocument()>();

        r4 = null;

        $r5 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParser getXPPParser()>();

        interfaceinvoke $r5.<org.gjt.xpp.XmlPullParser: void setNamespaceAware(boolean)>(1);

        $r11 = new org.dom4j.xpp.ProxyXmlStartTag;

        r1 = $r11;

        specialinvoke $r11.<org.dom4j.xpp.ProxyXmlStartTag: void <init>()>();

        $r6 = r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParserFactory xppFactory>;

        $r7 = virtualinvoke $r6.<org.gjt.xpp.XmlPullParserFactory: org.gjt.xpp.XmlEndTag newEndTag()>();

     label1:
        $b0 = interfaceinvoke $r5.<org.gjt.xpp.XmlPullParser: byte next()>();

        $i1 = (int) $b0;

        lookupswitch($i1)
        {
            case 1: goto label9;
            case 2: goto label3;
            case 3: goto label6;
            case 4: goto label7;
            default: goto label2;
        };

     label2:
        $r13 = new org.dom4j.DocumentException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error: unknown type: ");

        $i1 = (int) $b0;

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<org.dom4j.DocumentException: void <init>(java.lang.String)>($r9);

        throw $r13;

     label3:
        interfaceinvoke $r5.<org.gjt.xpp.XmlPullParser: void readStartTag(org.gjt.xpp.XmlStartTag)>(r1);

        $r10 = virtualinvoke r1.<org.dom4j.xpp.ProxyXmlStartTag: org.dom4j.Element getElement()>();

        if r4 == null goto label5;

        interfaceinvoke r4.<org.dom4j.Element: void add(org.dom4j.Element)>($r10);

     label4:
        r4 = $r10;

        goto label1;

     label5:
        interfaceinvoke $r3.<org.dom4j.Document: void add(org.dom4j.Element)>($r10);

        goto label4;

     label6:
        interfaceinvoke $r5.<org.gjt.xpp.XmlPullParser: void readEndTag(org.gjt.xpp.XmlEndTag)>($r7);

        if r4 == null goto label1;

        r4 = interfaceinvoke r4.<org.dom4j.Element: org.dom4j.Element getParent()>();

        goto label1;

     label7:
        $r9 = interfaceinvoke $r5.<org.gjt.xpp.XmlPullParser: java.lang.String readContent()>();

        if r4 == null goto label8;

        interfaceinvoke r4.<org.dom4j.Element: org.dom4j.Element addText(java.lang.String)>($r9);

        goto label1;

     label8:
        $r13 = new org.dom4j.DocumentException;

        specialinvoke $r13.<org.dom4j.DocumentException: void <init>(java.lang.String)>("Cannot have text content outside of the root document");

        throw $r13;

     label9:
        return $r3;
    }

    public org.dom4j.Document read(java.io.File) throws org.dom4j.DocumentException, java.io.IOException, org.gjt.xpp.XmlPullParserException
    {
        org.dom4j.Document $r5;
        java.io.FileReader $r2;
        java.lang.String $r3;
        java.io.BufferedReader $r4;
        org.dom4j.io.XPPReader r0;
        java.io.File $r1;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: java.io.File;

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = new java.io.BufferedReader;

        $r2 = new java.io.FileReader;

        specialinvoke $r2.<java.io.FileReader: void <init>(java.io.File)>($r1);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);

        $r5 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.Reader,java.lang.String)>($r4, $r3);

        return $r5;
    }

    public org.dom4j.Document read(java.io.InputStream) throws org.dom4j.DocumentException, java.io.IOException, org.gjt.xpp.XmlPullParserException
    {
        org.dom4j.Document $r3;
        java.io.Reader $r2;
        org.dom4j.io.XPPReader r0;
        java.io.InputStream $r1;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.dom4j.io.XPPReader: java.io.Reader createReader(java.io.InputStream)>($r1);

        $r3 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.Reader)>($r2);

        return $r3;
    }

    public org.dom4j.Document read(java.io.InputStream, java.lang.String) throws org.dom4j.DocumentException, java.io.IOException, org.gjt.xpp.XmlPullParserException
    {
        org.dom4j.Document $r4;
        java.lang.String $r2;
        java.io.Reader $r3;
        org.dom4j.io.XPPReader r0;
        java.io.InputStream $r1;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.dom4j.io.XPPReader: java.io.Reader createReader(java.io.InputStream)>($r1);

        $r4 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.Reader,java.lang.String)>($r3, $r2);

        return $r4;
    }

    public org.dom4j.Document read(java.io.Reader) throws org.dom4j.DocumentException, java.io.IOException, org.gjt.xpp.XmlPullParserException
    {
        org.dom4j.Document $r3;
        org.gjt.xpp.XmlPullParser $r2;
        java.io.Reader $r1;
        org.dom4j.io.XPPReader r0;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: java.io.Reader;

        $r2 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParser getXPPParser()>();

        interfaceinvoke $r2.<org.gjt.xpp.XmlPullParser: void setInput(java.io.Reader)>($r1);

        $r3 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.Document parseDocument()>();

        return $r3;
    }

    public org.dom4j.Document read(java.io.Reader, java.lang.String) throws org.dom4j.DocumentException, java.io.IOException, org.gjt.xpp.XmlPullParserException
    {
        org.dom4j.Document $r3;
        java.io.Reader $r1;
        java.lang.String $r2;
        org.dom4j.io.XPPReader r0;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: java.io.Reader;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.Reader)>($r1);

        interfaceinvoke $r3.<org.dom4j.Document: void setName(java.lang.String)>($r2);

        return $r3;
    }

    public org.dom4j.Document read(java.lang.String) throws org.dom4j.DocumentException, java.io.IOException, org.gjt.xpp.XmlPullParserException
    {
        org.dom4j.Document $r3;
        java.net.URL $r2;
        int $i0;
        java.lang.String $r1;
        org.dom4j.io.XPPReader r0;
        java.io.File $r4;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(58);

        if $i0 < 0 goto label1;

        $r2 = new java.net.URL;

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.Document read(java.net.URL)>($r2);

        return $r3;

     label1:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.File)>($r4);

        return $r3;
    }

    public org.dom4j.Document read(java.net.URL) throws org.dom4j.DocumentException, java.io.IOException, org.gjt.xpp.XmlPullParserException
    {
        org.dom4j.Document $r5;
        java.net.URL $r1;
        java.lang.String $r2;
        java.io.Reader $r4;
        org.dom4j.io.XPPReader r0;
        java.io.InputStream $r3;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String toExternalForm()>();

        $r3 = virtualinvoke $r1.<java.net.URL: java.io.InputStream openStream()>();

        $r4 = virtualinvoke r0.<org.dom4j.io.XPPReader: java.io.Reader createReader(java.io.InputStream)>($r3);

        $r5 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.Reader,java.lang.String)>($r4, $r2);

        return $r5;
    }

    public org.dom4j.Document read(char[]) throws org.dom4j.DocumentException, java.io.IOException, org.gjt.xpp.XmlPullParserException
    {
        org.dom4j.Document $r3;
        char[] $r1;
        org.gjt.xpp.XmlPullParser $r2;
        org.dom4j.io.XPPReader r0;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: char[];

        $r2 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParser getXPPParser()>();

        interfaceinvoke $r2.<org.gjt.xpp.XmlPullParser: void setInput(char[])>($r1);

        $r3 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.Document parseDocument()>();

        return $r3;
    }

    public void removeHandler(java.lang.String)
    {
        java.lang.String $r1;
        org.dom4j.io.DispatchHandler $r2;
        org.dom4j.io.XPPReader r0;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.io.DispatchHandler getDispatchHandler()>();

        virtualinvoke $r2.<org.dom4j.io.DispatchHandler: org.dom4j.ElementHandler removeHandler(java.lang.String)>($r1);

        return;
    }

    public void setDefaultHandler(org.dom4j.ElementHandler)
    {
        org.dom4j.io.DispatchHandler $r2;
        org.dom4j.io.XPPReader r0;
        org.dom4j.ElementHandler $r1;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: org.dom4j.ElementHandler;

        $r2 = virtualinvoke r0.<org.dom4j.io.XPPReader: org.dom4j.io.DispatchHandler getDispatchHandler()>();

        virtualinvoke $r2.<org.dom4j.io.DispatchHandler: void setDefaultHandler(org.dom4j.ElementHandler)>($r1);

        return;
    }

    protected void setDispatchHandler(org.dom4j.io.DispatchHandler)
    {
        org.dom4j.io.DispatchHandler $r1;
        org.dom4j.io.XPPReader r0;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: org.dom4j.io.DispatchHandler;

        r0.<org.dom4j.io.XPPReader: org.dom4j.io.DispatchHandler dispatchHandler> = $r1;

        return;
    }

    public void setDocumentFactory(org.dom4j.DocumentFactory)
    {
        org.dom4j.io.XPPReader r0;
        org.dom4j.DocumentFactory $r1;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: org.dom4j.DocumentFactory;

        r0.<org.dom4j.io.XPPReader: org.dom4j.DocumentFactory factory> = $r1;

        return;
    }

    public void setXPPFactory(org.gjt.xpp.XmlPullParserFactory)
    {
        org.dom4j.io.XPPReader r0;
        org.gjt.xpp.XmlPullParserFactory $r1;

        r0 := @this: org.dom4j.io.XPPReader;

        $r1 := @parameter0: org.gjt.xpp.XmlPullParserFactory;

        r0.<org.dom4j.io.XPPReader: org.gjt.xpp.XmlPullParserFactory xppFactory> = $r1;

        return;
    }
}
