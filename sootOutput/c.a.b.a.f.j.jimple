public final class c.a.b.a.f.j extends java.lang.Object
{

    public static java.lang.Object a(c.a.b.a.f.g)
    {
        c.a.b.a.f.j$a $r2;
        c.a.b.a.f.g $r0;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: c.a.b.a.f.g;

        staticinvoke <com.google.android.gms.common.internal.o: void h()>();

        staticinvoke <com.google.android.gms.common.internal.o: java.lang.Object k(java.lang.Object,java.lang.Object)>($r0, "Task must not be null");

        $z0 = virtualinvoke $r0.<c.a.b.a.f.g: boolean j()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <c.a.b.a.f.j: java.lang.Object e(c.a.b.a.f.g)>($r0);

        return $r1;

     label1:
        $r2 = new c.a.b.a.f.j$a;

        specialinvoke $r2.<c.a.b.a.f.j$a: void <init>(c.a.b.a.f.a0)>(null);

        staticinvoke <c.a.b.a.f.j: void d(c.a.b.a.f.g,c.a.b.a.f.j$b)>($r0, $r2);

        virtualinvoke $r2.<c.a.b.a.f.j$a: void b()>();

        $r1 = staticinvoke <c.a.b.a.f.j: java.lang.Object e(c.a.b.a.f.g)>($r0);

        return $r1;
    }

    public static java.lang.Object b(c.a.b.a.f.g, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r0;
        c.a.b.a.f.j$a $r3;
        c.a.b.a.f.g $r1;
        java.util.concurrent.TimeoutException $r4;
        long $l0;
        java.lang.Object $r2;
        boolean $z0;

        $r1 := @parameter0: c.a.b.a.f.g;

        $l0 := @parameter1: long;

        $r0 := @parameter2: java.util.concurrent.TimeUnit;

        staticinvoke <com.google.android.gms.common.internal.o: void h()>();

        staticinvoke <com.google.android.gms.common.internal.o: java.lang.Object k(java.lang.Object,java.lang.Object)>($r1, "Task must not be null");

        staticinvoke <com.google.android.gms.common.internal.o: java.lang.Object k(java.lang.Object,java.lang.Object)>($r0, "TimeUnit must not be null");

        $z0 = virtualinvoke $r1.<c.a.b.a.f.g: boolean j()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <c.a.b.a.f.j: java.lang.Object e(c.a.b.a.f.g)>($r1);

        return $r2;

     label1:
        $r3 = new c.a.b.a.f.j$a;

        specialinvoke $r3.<c.a.b.a.f.j$a: void <init>(c.a.b.a.f.a0)>(null);

        staticinvoke <c.a.b.a.f.j: void d(c.a.b.a.f.g,c.a.b.a.f.j$b)>($r1, $r3);

        $z0 = virtualinvoke $r3.<c.a.b.a.f.j$a: boolean e(long,java.util.concurrent.TimeUnit)>(30000L, $r0);

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <c.a.b.a.f.j: java.lang.Object e(c.a.b.a.f.g)>($r1);

        return $r2;

     label2:
        $r4 = new java.util.concurrent.TimeoutException;

        specialinvoke $r4.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>("Timed out waiting for Task");

        throw $r4;
    }

    public static c.a.b.a.f.g c(java.lang.Object)
    {
        java.lang.Object $r0;
        c.a.b.a.f.z $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = new c.a.b.a.f.z;

        specialinvoke $r1.<c.a.b.a.f.z: void <init>()>();

        virtualinvoke $r1.<c.a.b.a.f.z: void n(java.lang.Object)>($r0);

        return $r1;
    }

    private static void d(c.a.b.a.f.g, c.a.b.a.f.j$b)
    {
        c.a.b.a.f.g $r0;
        java.util.concurrent.Executor $r2;
        c.a.b.a.f.j$b $r1;

        $r0 := @parameter0: c.a.b.a.f.g;

        $r1 := @parameter1: c.a.b.a.f.j$b;

        $r2 = <c.a.b.a.f.i: java.util.concurrent.Executor a>;

        virtualinvoke $r0.<c.a.b.a.f.g: c.a.b.a.f.g c(java.util.concurrent.Executor,c.a.b.a.f.d)>($r2, $r1);

        $r2 = <c.a.b.a.f.i: java.util.concurrent.Executor a>;

        virtualinvoke $r0.<c.a.b.a.f.g: c.a.b.a.f.g b(java.util.concurrent.Executor,c.a.b.a.f.c)>($r2, $r1);

        $r2 = <c.a.b.a.f.i: java.util.concurrent.Executor a>;

        virtualinvoke $r0.<c.a.b.a.f.g: c.a.b.a.f.g a(java.util.concurrent.Executor,c.a.b.a.f.b)>($r2, $r1);

        return;
    }

    private static java.lang.Object e(c.a.b.a.f.g)
    {
        java.util.concurrent.ExecutionException $r3;
        java.util.concurrent.CancellationException $r2;
        c.a.b.a.f.g $r0;
        java.lang.Object $r1;
        java.lang.Exception $r4;
        boolean $z0;

        $r0 := @parameter0: c.a.b.a.f.g;

        $z0 = virtualinvoke $r0.<c.a.b.a.f.g: boolean k()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<c.a.b.a.f.g: java.lang.Object g()>();

        return $r1;

     label1:
        $z0 = virtualinvoke $r0.<c.a.b.a.f.g: boolean i()>();

        if $z0 == 0 goto label2;

        $r2 = new java.util.concurrent.CancellationException;

        specialinvoke $r2.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>("Task is already canceled");

        throw $r2;

     label2:
        $r3 = new java.util.concurrent.ExecutionException;

        $r4 = virtualinvoke $r0.<c.a.b.a.f.g: java.lang.Exception f()>();

        specialinvoke $r3.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r4);

        throw $r3;
    }
}
