public class com.snowbee.core.Date.TimeUtils extends java.lang.Object
{
    public static final int DAYS_PER_WEEK;
    public static final int HALF_DAYS_PER_DAY;
    public static final int HOURS_PER_DAY;
    public static final int HOURS_PER_HALF_DAY;
    public static final int MILLISECONDS_PER_DAY;
    public static final int MILLISECONDS_PER_HALF_DAY;
    public static final int MILLISECONDS_PER_HOUR;
    public static final int MILLISECONDS_PER_MINUTE;
    public static final int MILLISECONDS_PER_SECOND;
    public static final int MILLISECONDS_PER_WEEK;
    public static final int MINUTES_PER_HOUR;
    public static final int SECONDS_PER_MINUTE;
    public static final java.util.Calendar calendar;
    public static final java.text.SimpleDateFormat defaultFormatter;
    public static final java.text.SimpleDateFormat facebookFormatter;
    public static final java.text.SimpleDateFormat gReaderFormatter;
    public static final java.text.SimpleDateFormat niceDateStampFormatter;
    public static final java.text.SimpleDateFormat niceTimeStampAMPMFormatter;
    public static final java.text.SimpleDateFormat niceTimeStampFormatter;
    public static final java.text.SimpleDateFormat twitterFormatter;
    public static final java.text.SimpleDateFormat twitterFormatterGingerbread;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r1;
        java.util.Calendar $r0;

        <com.snowbee.core.Date.TimeUtils: int SECONDS_PER_MINUTE> = 60;

        <com.snowbee.core.Date.TimeUtils: int MINUTES_PER_HOUR> = 60;

        <com.snowbee.core.Date.TimeUtils: int MILLISECONDS_PER_WEEK> = 604800000;

        <com.snowbee.core.Date.TimeUtils: int MILLISECONDS_PER_SECOND> = 1000;

        <com.snowbee.core.Date.TimeUtils: int MILLISECONDS_PER_MINUTE> = 60000;

        <com.snowbee.core.Date.TimeUtils: int MILLISECONDS_PER_HOUR> = 3600000;

        <com.snowbee.core.Date.TimeUtils: int MILLISECONDS_PER_HALF_DAY> = 43200000;

        <com.snowbee.core.Date.TimeUtils: int MILLISECONDS_PER_DAY> = 86400000;

        <com.snowbee.core.Date.TimeUtils: int HOURS_PER_HALF_DAY> = 12;

        <com.snowbee.core.Date.TimeUtils: int HOURS_PER_DAY> = 24;

        <com.snowbee.core.Date.TimeUtils: int HALF_DAYS_PER_DAY> = 2;

        <com.snowbee.core.Date.TimeUtils: int DAYS_PER_WEEK> = 7;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MM dd HH:mm:ss Z yyyy");

        <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat twitterFormatterGingerbread> = $r1;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("EEE MMM dd HH:mm:ss Z yyyy");

        <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat twitterFormatter> = $r1;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ssZ");

        <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat facebookFormatter> = $r1;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'");

        <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat gReaderFormatter> = $r1;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MMM dd");

        <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat niceDateStampFormatter> = $r1;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MMM dd, HH:mm");

        <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat niceTimeStampFormatter> = $r1;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MMM dd, hh:mm a");

        <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat niceTimeStampAMPMFormatter> = $r1;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("EEE, MMM dd \'at\' hh:mm a");

        <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat defaultFormatter> = $r1;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        <com.snowbee.core.Date.TimeUtils: java.util.Calendar calendar> = $r0;

        return;
    }

    public void <init>()
    {
        com.snowbee.core.Date.TimeUtils r0;

        r0 := @this: com.snowbee.core.Date.TimeUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int addDate(java.lang.Long, int)
    {
        java.util.Calendar $r1;
        java.lang.Long $r0;
        java.util.Date $r2;
        int $i0;
        long $l1;

        $r0 := @parameter0: java.lang.Long;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r2 = new java.util.Date;

        $l1 = virtualinvoke $r0.<java.lang.Long: long longValue()>();

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l1);

        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>($r2);

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(5, $i0);

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        return $i0;
    }

    public static int addDate(java.util.Date, int)
    {
        int $i0;
        java.util.Calendar $r1;
        java.util.Date $r0;

        $r0 := @parameter0: java.util.Date;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>($r0);

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(5, 1);

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        return $i0;
    }

    public static java.util.Date getDate(long)
    {
        long $l0;
        java.util.Date $r0;

        $l0 := @parameter0: long;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l0);

        return $r0;
    }

    public static java.lang.String getDateHeader(com.snowbee.core.Date.DefaultTimeFormatter, long, long, long)
    {
        long $l0, $l1, $l2;
        java.lang.String $r1, $r2;
        com.snowbee.core.Date.DefaultTimeFormatter $r0;
        boolean $z0;

        $r0 := @parameter0: com.snowbee.core.Date.DefaultTimeFormatter;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $l2 := @parameter3: long;

        $l1 = staticinvoke <com.snowbee.core.Date.TimeUtils: long utcToLocal(long)>($l1);

        $r1 = virtualinvoke $r0.<com.snowbee.core.Date.DefaultTimeFormatter: java.lang.String relativeYear(long)>($l0);

        $r2 = virtualinvoke $r0.<com.snowbee.core.Date.DefaultTimeFormatter: java.lang.String relativeYear(long)>($l1);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<com.snowbee.core.Date.DefaultTimeFormatter: java.lang.String relativeDateString(long,boolean)>($l1, 0);

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<com.snowbee.core.Date.DefaultTimeFormatter: java.lang.String relativeDateString(long,boolean)>($l1, 1);

        return $r1;
    }

    public static int getDayOfLastMonth(int, int)
    {
        int $i0, $i1;
        java.util.Calendar $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(5, 10);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(2, $i1);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(1, $i0);

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(2, -1);

        $i0 = virtualinvoke $r0.<java.util.Calendar: int getActualMaximum(int)>(5);

        return $i0;
    }

    public static int getDayOfLastWeek(int, int)
    {
        int $i0, $i1;
        java.util.Calendar $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(5, 10);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(2, $i1);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(1, $i0);

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(2, -1);

        $i0 = staticinvoke <com.snowbee.core.Date.TimeUtils: int getDayOfLastMonth(int,int)>($i0, $i1);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(5, $i0);

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(7);

        return $i0;
    }

    public static int getDayOfMonth(int, int)
    {
        int $i0, $i1;
        java.util.Calendar $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(5, 10);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(2, $i1);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(1, $i0);

        $i0 = virtualinvoke $r0.<java.util.Calendar: int getActualMaximum(int)>(5);

        return $i0;
    }

    public static int getDayOfWeek(java.util.Date)
    {
        int $i0;
        java.util.Calendar $r1;
        java.util.Date $r0;

        $r0 := @parameter0: java.util.Date;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>($r0);

        $i0 = virtualinvoke $r1.<java.util.Calendar: int getActualMaximum(int)>(7);

        return $i0;
    }

    public static java.util.Date getFacebookTimeStamp(java.lang.String)
    {
        java.util.Date $r2;
        java.text.ParsePosition r1;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.text.ParsePosition;

        specialinvoke r1.<java.text.ParsePosition: void <init>(int)>(0);

        $r3 = <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat facebookFormatter>;

        $r2 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>($r0, r1);

        return $r2;
    }

    public static java.util.Date getGReaderTimeStamp(java.lang.String)
    {
        java.util.Date $r2;
        java.text.ParsePosition r1;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.text.ParsePosition;

        specialinvoke r1.<java.text.ParsePosition: void <init>(int)>(0);

        $r3 = <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat gReaderFormatter>;

        $r2 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>($r0, r1);

        return $r2;
    }

    public static java.lang.String getGmailTimeStamp(long)
    {
        java.util.Date r0;
        java.text.SimpleDateFormat $r2;
        long $l0;
        java.lang.String $r1;

        $l0 := @parameter0: long;

        r0 = new java.util.Date;

        specialinvoke r0.<java.util.Date: void <init>(long)>($l0);

        $r2 = <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat niceDateStampFormatter>;

        $r1 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r0);

        return $r1;
    }

    public static int getMonth(java.util.Date)
    {
        int $i0;
        java.util.Calendar $r1;
        java.util.Date $r0;

        $r0 := @parameter0: java.util.Date;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>($r0);

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        return $i0;
    }

    public static java.lang.String getNiceDuration(com.snowbee.core.Date.DefaultTimeFormatter, long, long, boolean, long)
    {
        long $l0, $l1, $l2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        com.snowbee.core.Date.DefaultTimeFormatter $r0;
        boolean $z0;

        $r0 := @parameter0: com.snowbee.core.Date.DefaultTimeFormatter;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $z0 := @parameter3: boolean;

        $l2 := @parameter4: long;

        if $z0 == 0 goto label1;

        return "All day";

     label1:
        $l0 = staticinvoke <com.snowbee.core.Date.TimeUtils: long utcToLocal(long)>($l1);

        $l1 = staticinvoke <com.snowbee.core.Date.TimeUtils: long utcToLocal(long)>($l2);

        $r1 = new java.lang.StringBuilder;

        $r2 = virtualinvoke $r0.<com.snowbee.core.Date.DefaultTimeFormatter: java.lang.String relativeTimeString(long)>($l0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r2 = virtualinvoke $r0.<com.snowbee.core.Date.DefaultTimeFormatter: java.lang.String relativeTimeString(long)>($l1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String getNiceTimeStamp(long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.Date $r7;
        long l0, l1, l2, l3;
        byte b4;
        int $i5;
        java.lang.StringBuilder r6, $r8;
        java.lang.String r0, $r1, $r2, r3, r4, r5;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r1 := @parameter5: java.lang.String;

        $r2 := @parameter6: java.lang.String;

        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>()>();

        l1 = virtualinvoke $r7.<java.util.Date: long getTime()>();

        l0 = staticinvoke <com.snowbee.core.Date.TimeUtils: long utcToLocal(long)>(l0);

        l1 = staticinvoke <com.snowbee.core.Date.TimeUtils: long utcToLocal(long)>(l1);

        l0 = l1 - l0;

        l2 = l0 / 1000L;

        l1 = l2 / 60L;

        l0 = l1 / 60L;

        l3 = l0 / 24L;

        b4 = l3 cmp 0L;

        $i5 = (int) b4;

        if $i5 <= 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l3);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);

        r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r0 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        b4 = l3 cmp 1L;

        $i5 = (int) b4;

        if $i5 <= 0 goto label2;

        $r8 = new java.lang.StringBuilder;

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        r0 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r8 = new java.lang.StringBuilder;

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r0 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return r0;

     label3:
        b4 = l0 cmp 1L;

        if b4 != 0 goto label4;

        l3 = 0L;

        r0 = "about an hour";

        goto label1;

     label4:
        b4 = l0 cmp 0L;

        $i5 = (int) b4;

        if $i5 <= 0 goto label5;

        l3 = l0;

        $r8 = new java.lang.StringBuilder;

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r0 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label5:
        b4 = l1 cmp 0L;

        $i5 = (int) b4;

        if $i5 <= 0 goto label6;

        l3 = l1;

        $r8 = new java.lang.StringBuilder;

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r0 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label6:
        l3 = l2;

        $r8 = new java.lang.StringBuilder;

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l2);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r0 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }

    public static java.lang.String getNiceTimeStamp(long, boolean)
    {
        java.util.Date $r1;
        java.text.SimpleDateFormat $r0;
        long $l0;
        java.lang.String $r2;
        boolean $z0;

        $l0 := @parameter0: long;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r0 = <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat niceTimeStampFormatter>;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r2 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        return $r2;

     label1:
        $r0 = <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat niceTimeStampAMPMFormatter>;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r2 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        return $r2;
    }

    public static java.lang.String getNiceTimeStamp(java.util.Date, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.Date $r0;
        long $l0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 := @parameter0: java.util.Date;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: java.lang.String;

        $r6 := @parameter6: java.lang.String;

        $l0 = virtualinvoke $r0.<java.util.Date: long getTime()>();

        $r1 = staticinvoke <com.snowbee.core.Date.TimeUtils: java.lang.String getNiceTimeStamp(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($l0, $r1, $r2, $r3, $r4, $r5, $r6);

        return $r1;
    }

    public static java.lang.String getNiceTimeStampMessage(long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        long $l0;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5;
        boolean $z0;

        $l0 := @parameter0: long;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: java.lang.String;

        $r5 := @parameter6: java.lang.String;

        $z0 := @parameter7: boolean;

        $r0 = staticinvoke <com.snowbee.core.Date.TimeUtils: java.lang.String getNiceTimeStampMessage(boolean,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(1, $l0, $r0, $r1, $r2, $r3, $r4, $r5, $z0);

        return $r0;
    }

    public static java.lang.String getNiceTimeStampMessage(boolean, long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        long $l0;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1;

        $z0 := @parameter0: boolean;

        $l0 := @parameter1: long;

        $r0 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.String;

        $r2 := @parameter4: java.lang.String;

        $r3 := @parameter5: java.lang.String;

        $r4 := @parameter6: java.lang.String;

        $r5 := @parameter7: java.lang.String;

        $z1 := @parameter8: boolean;

        $r0 = staticinvoke <com.snowbee.core.Date.TimeUtils: java.lang.String getNiceTimeStamp(long,boolean)>($l0, $z1);

        return $r0;
    }

    public static java.lang.String getTimeStamp(java.util.Date)
    {
        java.text.SimpleDateFormat $r2;
        java.lang.String $r1;
        java.util.Date $r0;

        $r0 := @parameter0: java.util.Date;

        $r2 = <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat defaultFormatter>;

        $r1 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r0);

        return $r1;
    }

    public static java.util.Date getTwitterTimeStamp(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Date $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.snowbee.core.Utils: boolean IsGingerbread()>();

        $r1 = staticinvoke <com.snowbee.core.Date.TimeUtils: java.util.Date getTwitterTimeStamp(java.lang.String,boolean)>($r0, $z0);

        return $r1;
    }

    public static java.util.Date getTwitterTimeStamp(java.lang.String, boolean)
    {
        java.util.Date $r3;
        java.text.ParsePosition r0;
        java.text.SimpleDateFormat $r2;
        java.lang.String $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        r0 = new java.text.ParsePosition;

        specialinvoke r0.<java.text.ParsePosition: void <init>(int)>(0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Sun ", "");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Mon ", "");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Tue ", "");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Wed ", "");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Thu ", "");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Fri ", "");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Sat ", "");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Jan", "01");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Feb", "02");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Mar", "03");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Apr", "04");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("May", "05");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Jun", "06");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Jul", "07");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Aug", "08");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Sep", "09");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Oct", "10");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Nov", "11");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("Dec", "12");

        $r2 = <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat twitterFormatterGingerbread>;

        $r3 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>($r1, r0);

        return $r3;

     label1:
        $r2 = <com.snowbee.core.Date.TimeUtils: java.text.SimpleDateFormat twitterFormatter>;

        $r3 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>($r1, r0);

        return $r3;
    }

    public static int getYear(java.util.Date)
    {
        int $i0;
        java.util.Calendar $r1;
        java.util.Date $r0;

        $r0 := @parameter0: java.util.Date;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>($r0);

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        return $i0;
    }

    public static long roundDownTo(long, long)
    {
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l1 = $l0 % $l1;

        $l0 = $l0 - $l1;

        return $l0;
    }

    public static long utcToLocal(long)
    {
        java.util.Calendar $r1;
        java.util.Date r0;
        int $i1;
        long $l0, $l2;

        $l0 := @parameter0: long;

        r0 = new java.util.Date;

        specialinvoke r0.<java.util.Date: void <init>(long)>($l0);

        $r1 = <com.snowbee.core.Date.TimeUtils: java.util.Calendar calendar>;

        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>(r0);

        $r1 = <com.snowbee.core.Date.TimeUtils: java.util.Calendar calendar>;

        $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        $r1 = <com.snowbee.core.Date.TimeUtils: java.util.Calendar calendar>;

        $i1 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(15);

        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        $r1 = <com.snowbee.core.Date.TimeUtils: java.util.Calendar calendar>;

        $i1 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(16);

        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        return $l0;
    }

    public static java.lang.String utcToString(long)
    {
        long $l0;
        java.lang.String $r1;
        java.util.Date r0;

        $l0 := @parameter0: long;

        r0 = new java.util.Date;

        specialinvoke r0.<java.util.Date: void <init>(long)>($l0);

        $r1 = staticinvoke <com.snowbee.core.Date.TimeUtils: java.lang.String getTimeStamp(java.util.Date)>(r0);

        return $r1;
    }
}
