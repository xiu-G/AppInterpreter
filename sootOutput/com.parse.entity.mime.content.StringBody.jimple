public class com.parse.entity.mime.content.StringBody extends com.parse.entity.mime.content.AbstractContentBody
{
    private final java.nio.charset.Charset charset;
    private final byte[] content;

    public void <init>(java.lang.String)
    {
        com.parse.entity.mime.content.StringBody r0;
        java.lang.String $r1;

        r0 := @this: com.parse.entity.mime.content.StringBody;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.parse.entity.mime.content.StringBody: void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset)>($r1, "text/plain", null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.nio.charset.Charset)
    {
        com.parse.entity.mime.content.StringBody r0;
        byte[] $r5;
        java.nio.charset.Charset $r3;
        java.lang.String $r1, $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.parse.entity.mime.content.StringBody;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.nio.charset.Charset;

        specialinvoke r0.<com.parse.entity.mime.content.AbstractContentBody: void <init>(java.lang.String)>("text/plain");

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Text may not be null");

        throw $r4;

     label1:
        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        $r2 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r2);

        r0.<com.parse.entity.mime.content.StringBody: byte[] content> = $r5;

        r0.<com.parse.entity.mime.content.StringBody: java.nio.charset.Charset charset> = $r3;

        return;
    }

    public void <init>(java.lang.String, java.nio.charset.Charset)
    {
        com.parse.entity.mime.content.StringBody r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        r0 := @this: com.parse.entity.mime.content.StringBody;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        specialinvoke r0.<com.parse.entity.mime.content.StringBody: void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset)>($r1, "text/plain", $r2);

        return;
    }

    public static com.parse.entity.mime.content.StringBody create(java.lang.String)
    {
        com.parse.entity.mime.content.StringBody $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.entity.mime.content.StringBody: com.parse.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset)>($r0, null, null);

        return $r1;
    }

    public static com.parse.entity.mime.content.StringBody create(java.lang.String, java.lang.String, java.nio.charset.Charset)
    {
        com.parse.entity.mime.content.StringBody $r4;
        java.lang.Throwable $r5;
        java.nio.charset.Charset $r2;
        java.lang.StringBuilder $r6;
        java.lang.String $r0, $r1;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.nio.charset.Charset;

        $r4 = new com.parse.entity.mime.content.StringBody;

     label1:
        specialinvoke $r4.<com.parse.entity.mime.content.StringBody: void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset)>($r0, $r1, $r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Charset ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r0, $r5);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static com.parse.entity.mime.content.StringBody create(java.lang.String, java.nio.charset.Charset)
    {
        com.parse.entity.mime.content.StringBody $r2;
        java.lang.String $r0;
        java.nio.charset.Charset $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.nio.charset.Charset;

        $r2 = staticinvoke <com.parse.entity.mime.content.StringBody: com.parse.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset)>($r0, null, $r1);

        return $r2;
    }

    public java.lang.String getCharset()
    {
        com.parse.entity.mime.content.StringBody r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        r0 := @this: com.parse.entity.mime.content.StringBody;

        $r2 = r0.<com.parse.entity.mime.content.StringBody: java.nio.charset.Charset charset>;

        $r1 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        return $r1;
    }

    public long getContentLength()
    {
        com.parse.entity.mime.content.StringBody r0;
        byte[] $r1;
        int $i0;
        long $l1;

        r0 := @this: com.parse.entity.mime.content.StringBody;

        $r1 = r0.<com.parse.entity.mime.content.StringBody: byte[] content>;

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        return $l1;
    }

    public java.lang.String getFilename()
    {
        com.parse.entity.mime.content.StringBody r0;

        r0 := @this: com.parse.entity.mime.content.StringBody;

        return null;
    }

    public java.io.Reader getReader()
    {
        com.parse.entity.mime.content.StringBody r0;
        byte[] $r3;
        java.io.ByteArrayInputStream $r2;
        java.nio.charset.Charset $r4;
        java.io.InputStreamReader $r1;

        r0 := @this: com.parse.entity.mime.content.StringBody;

        $r1 = new java.io.InputStreamReader;

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = r0.<com.parse.entity.mime.content.StringBody: byte[] content>;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        $r4 = r0.<com.parse.entity.mime.content.StringBody: java.nio.charset.Charset charset>;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r2, $r4);

        return $r1;
    }

    public java.lang.String getTransferEncoding()
    {
        com.parse.entity.mime.content.StringBody r0;

        r0 := @this: com.parse.entity.mime.content.StringBody;

        return "8bit";
    }

    public void writeTo(java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        byte[] $r3;
        java.lang.IllegalArgumentException $r4;
        com.parse.entity.mime.content.StringBody r0;
        java.io.ByteArrayInputStream $r2, $r5;
        int $i0, $i1;

        r0 := @this: com.parse.entity.mime.content.StringBody;

        $r1 := @parameter0: java.io.OutputStream;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output stream may not be null");

        throw $r4;

     label1:
        $r5 = new java.io.ByteArrayInputStream;

        $r2 = $r5;

        $r3 = r0.<com.parse.entity.mime.content.StringBody: byte[] content>;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        $r3 = newarray (byte)[4096];

     label2:
        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r3);

        $i1 = -1;

        if $i0 == $i1 goto label3;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0);

        goto label2;

     label3:
        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public void writeTo(java.io.OutputStream, int)
    {
        com.parse.entity.mime.content.StringBody r0;
        java.io.OutputStream $r1;
        int $i0;

        r0 := @this: com.parse.entity.mime.content.StringBody;

        $r1 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.parse.entity.mime.content.StringBody: void writeTo(java.io.OutputStream)>($r1);

        return;
    }
}
