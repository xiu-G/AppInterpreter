public class hw.ats.common.model.Ad extends java.lang.Object
{
    public java.lang.String image;
    public java.lang.String url;

    public void <init>()
    {
        hw.ats.common.model.Ad r0;

        r0 := @this: hw.ats.common.model.Ad;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<hw.ats.common.model.Ad: java.lang.String image> = null;

        r0.<hw.ats.common.model.Ad: java.lang.String url> = null;

        return;
    }

    private hw.ats.common.model.Ad bind(android.database.Cursor)
    {
        hw.ats.common.model.Ad r0;
        int $i0;
        java.lang.String $r2;
        android.database.Cursor $r1;

        r0 := @this: hw.ats.common.model.Ad;

        $r1 := @parameter0: android.database.Cursor;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("image");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Ad: java.lang.String image> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("url");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Ad: java.lang.String url> = $r2;

        return r0;
    }

    public static void clear(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r0;
        java.lang.Exception $r1;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM ad");

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static hw.ats.common.model.Ad load(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r5;
        hw.ats.common.model.Ad $r3;
        java.lang.Exception $r4, $r6, $r7;
        android.database.sqlite.SQLiteDatabase $r0;
        android.database.Cursor r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 = null;

     label01:
        $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT * FROM ad LIMIT 1", null);

     label02:
        r1 = $r2;

     label03:
        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label06:
        return null;

     label07:
        $r3 = new hw.ats.common.model.Ad;

        specialinvoke $r3.<hw.ats.common.model.Ad: void <init>()>();

        $r3 = specialinvoke $r3.<hw.ats.common.model.Ad: hw.ats.common.model.Ad bind(android.database.Cursor)>($r2);

     label08:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label09:
        return $r3;

     label10:
        $r4 := @caughtexception;

        return $r3;

     label11:
        $r5 := @caughtexception;

     label12:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label13:
        throw $r5;

     label14:
        $r6 := @caughtexception;

        goto label06;

     label15:
        $r7 := @caughtexception;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label15;
    }

    public boolean exist(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r5;
        hw.ats.common.model.Ad r0;
        java.lang.Exception $r4, $r6, $r7;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        android.database.Cursor r2, $r3;
        boolean $z0;

        r0 := @this: hw.ats.common.model.Ad;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = null;

     label01:
        $r3 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT COUNT(*) FROM ad", null);

     label02:
        r2 = $r3;

     label03:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label06:
        return 0;

     label07:
        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getInt(int)>(0);

     label08:
        if $i0 <= 0 goto label12;

        $z0 = 1;

     label09:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label10:
        return $z0;

     label11:
        $r4 := @caughtexception;

        return $z0;

     label12:
        $z0 = 0;

        goto label09;

     label13:
        $r5 := @caughtexception;

     label14:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label15:
        throw $r5;

     label16:
        $r6 := @caughtexception;

        goto label06;

     label17:
        $r7 := @caughtexception;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label14 to label15 with label17;
    }

    public void insert(android.database.sqlite.SQLiteDatabase)
    {
        hw.ats.common.model.Ad r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.ContentValues r2;
        java.lang.String $r3;
        java.lang.Exception $r4;

        r0 := @this: hw.ats.common.model.Ad;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = new android.content.ContentValues;

     label1:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $r3 = r0.<hw.ats.common.model.Ad: java.lang.String image>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("image", $r3);

        $r3 = r0.<hw.ats.common.model.Ad: java.lang.String url>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("url", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("ad", null, r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void update(android.database.sqlite.SQLiteDatabase)
    {
        hw.ats.common.model.Ad r0;
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.ContentValues r2;
        java.lang.String $r3;
        java.lang.Exception $r4;

        r0 := @this: hw.ats.common.model.Ad;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = new android.content.ContentValues;

     label1:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $r3 = r0.<hw.ats.common.model.Ad: java.lang.String image>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("image", $r3);

        $r3 = r0.<hw.ats.common.model.Ad: java.lang.String url>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("url", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("ad", r2, null, null);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
