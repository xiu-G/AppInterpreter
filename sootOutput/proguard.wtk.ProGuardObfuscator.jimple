public class proguard.wtk.ProGuardObfuscator extends java.lang.Object implements com.sun.kvem.environment.Obfuscator
{
    private static final java.lang.String DEFAULT_CONFIGURATION;

    public void <init>()
    {
        proguard.wtk.ProGuardObfuscator r0;

        r0 := @this: proguard.wtk.ProGuardObfuscator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private proguard.ClassPath classPath(java.lang.String)
    {
        proguard.wtk.ProGuardObfuscator r0;
        proguard.ClassPath $r2;
        java.io.File $r4;
        proguard.ClassPathEntry $r3;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r5, $r6;

        r0 := @this: proguard.wtk.ProGuardObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 = new proguard.ClassPath;

        specialinvoke $r2.<proguard.ClassPath: void <init>()>();

        $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("path.separator");

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>($r5, $i0);

        $i2 = $i1;

        if $i1 >= 0 goto label2;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label2:
        $r3 = new proguard.ClassPathEntry;

        $r4 = new java.io.File;

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r6);

        specialinvoke $r3.<proguard.ClassPathEntry: void <init>(java.io.File,boolean)>($r4, 0);

        virtualinvoke $r2.<proguard.ClassPath: boolean add(proguard.ClassPathEntry)>($r3);

        $i0 = $i2 + 1;

        goto label1;

     label3:
        return $r2;
    }

    public void createScriptFile(java.io.File, java.io.File)
    {
        proguard.wtk.ProGuardObfuscator r0;
        java.io.File $r1, $r2;

        r0 := @this: proguard.wtk.ProGuardObfuscator;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        return;
    }

    public void run(java.io.File, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        proguard.wtk.ProGuardObfuscator r0;
        java.lang.Throwable $r18;
        java.net.URL $r11;
        proguard.ClassPath $r12;
        proguard.ClassPathEntry $r13;
        proguard.ConfigurationParser $r9;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;
        java.io.IOException $r17;
        java.io.File $r1, $r14;
        proguard.ProGuard $r15;
        proguard.Configuration $r8;
        java.lang.Class $r10;
        proguard.ParseException $r16;

        r0 := @this: proguard.wtk.ProGuardObfuscator;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: java.lang.String;

        $r7 := @parameter6: java.lang.String;

        $r8 = new proguard.Configuration;

        specialinvoke $r8.<proguard.Configuration: void <init>()>();

        $r9 = new proguard.ConfigurationParser;

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.net.URL getResource(java.lang.String)>("default.pro");

        specialinvoke $r9.<proguard.ConfigurationParser: void <init>(java.net.URL)>($r11);

     label01:
        virtualinvoke $r9.<proguard.ConfigurationParser: void parse(proguard.Configuration)>($r8);

        $r12 = specialinvoke r0.<proguard.wtk.ProGuardObfuscator: proguard.ClassPath classPath(java.lang.String)>($r6);

     label02:
        $r8.<proguard.Configuration: proguard.ClassPath libraryJars> = $r12;

        $r12 = new proguard.ClassPath;

     label03:
        specialinvoke $r12.<proguard.ClassPath: void <init>()>();

     label04:
        $r8.<proguard.Configuration: proguard.ClassPath programJars> = $r12;

        $r12 = $r8.<proguard.Configuration: proguard.ClassPath programJars>;

        $r13 = new proguard.ClassPathEntry;

        $r14 = new java.io.File;

     label05:
        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r4);

        specialinvoke $r13.<proguard.ClassPathEntry: void <init>(java.io.File,boolean)>($r14, 0);

        virtualinvoke $r12.<proguard.ClassPath: boolean add(proguard.ClassPathEntry)>($r13);

     label06:
        $r12 = $r8.<proguard.Configuration: proguard.ClassPath programJars>;

        $r13 = new proguard.ClassPathEntry;

     label07:
        specialinvoke $r13.<proguard.ClassPathEntry: void <init>(java.io.File,boolean)>($r1, 1);

        virtualinvoke $r12.<proguard.ClassPath: boolean add(proguard.ClassPathEntry)>($r13);

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, "windows", 0, 7);

     label08:
        if $z0 != 0 goto label12;

        $z0 = 1;

     label09:
        $r8.<proguard.Configuration: boolean useMixedCaseClassNames> = $z0;

        $r15 = new proguard.ProGuard;

     label10:
        specialinvoke $r15.<proguard.ProGuard: void <init>(proguard.Configuration)>($r8);

        virtualinvoke $r15.<proguard.ProGuard: void execute()>();

     label11:
        virtualinvoke $r9.<proguard.ConfigurationParser: void close()>();

        return;

     label12:
        $z0 = 0;

        goto label09;

     label13:
        $r16 := @caughtexception;

     label14:
        $r17 = new java.io.IOException;

        $r2 = virtualinvoke $r16.<proguard.ParseException: java.lang.String getMessage()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r17;

     label15:
        $r18 := @caughtexception;

        virtualinvoke $r9.<proguard.ConfigurationParser: void close()>();

        throw $r18;

        catch proguard.ParseException from label01 to label02 with label13;
        catch proguard.ParseException from label03 to label04 with label13;
        catch proguard.ParseException from label05 to label06 with label13;
        catch proguard.ParseException from label07 to label08 with label13;
        catch proguard.ParseException from label10 to label11 with label13;
        catch java.lang.Throwable from label01 to label08 with label15;
        catch java.lang.Throwable from label09 to label11 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
    }

    public static void <clinit>()
    {
        <proguard.wtk.ProGuardObfuscator: java.lang.String DEFAULT_CONFIGURATION> = "default.pro";

        return;
    }
}
