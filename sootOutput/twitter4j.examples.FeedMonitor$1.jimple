class twitter4j.examples.FeedMonitor$1 extends java.lang.Object implements java.util.Comparator
{
    private final twitter4j.examples.FeedMonitor this$0;

    void <init>(twitter4j.examples.FeedMonitor)
    {
        twitter4j.examples.FeedMonitor $r1;
        twitter4j.examples.FeedMonitor$1 r0;

        r0 := @this: twitter4j.examples.FeedMonitor$1;

        $r1 := @parameter0: twitter4j.examples.FeedMonitor;

        r0.<twitter4j.examples.FeedMonitor$1: twitter4j.examples.FeedMonitor this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(com.sun.syndication.feed.synd.SyndEntry, com.sun.syndication.feed.synd.SyndEntry)
    {
        com.sun.syndication.feed.synd.SyndEntry $r1, $r2;
        java.util.Date $r3, $r4;
        int $i0;
        twitter4j.examples.FeedMonitor$1 r0;

        r0 := @this: twitter4j.examples.FeedMonitor$1;

        $r1 := @parameter0: com.sun.syndication.feed.synd.SyndEntry;

        $r2 := @parameter1: com.sun.syndication.feed.synd.SyndEntry;

        $r3 = interfaceinvoke $r1.<com.sun.syndication.feed.synd.SyndEntry: java.util.Date getPublishedDate()>();

        $r4 = interfaceinvoke $r2.<com.sun.syndication.feed.synd.SyndEntry: java.util.Date getPublishedDate()>();

        $i0 = virtualinvoke $r3.<java.util.Date: int compareTo(java.util.Date)>($r4);

        return $i0;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        com.sun.syndication.feed.synd.SyndEntry $r3, $r4;
        int $i0;
        java.lang.Object $r1, $r2;
        twitter4j.examples.FeedMonitor$1 r0;

        r0 := @this: twitter4j.examples.FeedMonitor$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (com.sun.syndication.feed.synd.SyndEntry) $r1;

        $r4 = (com.sun.syndication.feed.synd.SyndEntry) $r2;

        $i0 = virtualinvoke r0.<twitter4j.examples.FeedMonitor$1: int compare(com.sun.syndication.feed.synd.SyndEntry,com.sun.syndication.feed.synd.SyndEntry)>($r3, $r4);

        return $i0;
    }
}
