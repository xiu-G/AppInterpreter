class com.millennialmedia.android.AccelerometerHelper extends java.lang.Object
{
    private static android.hardware.SensorEventListener accelerometerEventListener;
    private static int interval;
    private static boolean isEnabled;
    private static com.millennialmedia.android.AccelerometerListener listener;
    private static android.hardware.SensorManager sensorManager;
    private static float threshold;

    static void <clinit>()
    {
        com.millennialmedia.android.AccelerometerHelper$1 $r0;

        <com.millennialmedia.android.AccelerometerHelper: float threshold> = 0.2F;

        <com.millennialmedia.android.AccelerometerHelper: int interval> = 1000;

        <com.millennialmedia.android.AccelerometerHelper: boolean isEnabled> = 0;

        $r0 = new com.millennialmedia.android.AccelerometerHelper$1;

        specialinvoke $r0.<com.millennialmedia.android.AccelerometerHelper$1: void <init>()>();

        <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorEventListener accelerometerEventListener> = $r0;

        return;
    }

    void <init>()
    {
        com.millennialmedia.android.AccelerometerHelper r0;

        r0 := @this: com.millennialmedia.android.AccelerometerHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static com.millennialmedia.android.AccelerometerListener access$000()
    {
        com.millennialmedia.android.AccelerometerListener r0;

        r0 = <com.millennialmedia.android.AccelerometerHelper: com.millennialmedia.android.AccelerometerListener listener>;

        return r0;
    }

    static float access$100()
    {
        float f0;

        f0 = <com.millennialmedia.android.AccelerometerHelper: float threshold>;

        return f0;
    }

    static int access$200()
    {
        int i0;

        i0 = <com.millennialmedia.android.AccelerometerHelper: int interval>;

        return i0;
    }

    public static boolean isListening()
    {
        boolean z0;

        z0 = <com.millennialmedia.android.AccelerometerHelper: boolean isEnabled>;

        return z0;
    }

    static void startListening(com.millennialmedia.android.AccelerometerListener)
    {
        android.content.Context $r1;
        android.hardware.SensorManager $r3, $r5;
        com.millennialmedia.android.AccelerometerListener $r0;
        java.lang.Boolean $r7;
        java.lang.Object $r2;
        android.hardware.SensorEventListener $r4;
        android.hardware.Sensor $r6;
        boolean $z0;

        $r0 := @parameter0: com.millennialmedia.android.AccelerometerListener;

        $r1 = staticinvoke <com.millennialmedia.android.MMAdViewOverlayActivity: android.content.Context getContext()>();

        if $r1 == null goto label2;

        $r1 = staticinvoke <com.millennialmedia.android.MMAdViewOverlayActivity: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("sensor");

        $r3 = (android.hardware.SensorManager) $r2;

        <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorManager sensorManager> = $r3;

        $r3 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorManager sensorManager>;

        $r4 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorEventListener accelerometerEventListener>;

        $r5 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorManager sensorManager>;

        $r6 = virtualinvoke $r5.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(1);

        $z0 = virtualinvoke $r3.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>($r4, $r6, 1);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MillennialMediaAdSDK", "Accelerometer not supported by this device. Unregistering listener.");

        $r3 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorManager sensorManager>;

        $r4 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorEventListener accelerometerEventListener>;

        $r5 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorManager sensorManager>;

        $r6 = virtualinvoke $r5.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(1);

        virtualinvoke $r3.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>($r4, $r6);

        return;

     label1:
        <com.millennialmedia.android.AccelerometerHelper: boolean isEnabled> = 1;

        <com.millennialmedia.android.AccelerometerHelper: com.millennialmedia.android.AccelerometerListener listener> = $r0;

        return;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MillennialMediaAdSDK", "Null context in accelerometer helper");

        return;
    }

    static void stopListening()
    {
        android.hardware.SensorManager $r2, $r3;
        android.hardware.SensorEventListener $r0;
        android.hardware.Sensor $r1;
        java.lang.Exception $r4;

        <com.millennialmedia.android.AccelerometerHelper: boolean isEnabled> = 0;

        $r2 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorManager sensorManager>;

        if $r2 == null goto label4;

        $r0 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorEventListener accelerometerEventListener>;

        if $r0 == null goto label4;

        $r2 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorManager sensorManager>;

        $r0 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorEventListener accelerometerEventListener>;

        $r3 = <com.millennialmedia.android.AccelerometerHelper: android.hardware.SensorManager sensorManager>;

     label1:
        $r1 = virtualinvoke $r3.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(1);

        virtualinvoke $r2.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>($r0, $r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
