public class proguard.optimize.info.PackageVisibleMemberContainingClassMarker extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.MemberVisitor
{

    public void <init>()
    {
        proguard.optimize.info.PackageVisibleMemberContainingClassMarker r0;

        r0 := @this: proguard.optimize.info.PackageVisibleMemberContainingClassMarker;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        return;
    }

    public static boolean containsPackageVisibleMembers(proguard.classfile.Clazz)
    {
        proguard.optimize.info.ClassOptimizationInfo $r1;
        proguard.classfile.Clazz $r0;
        boolean $z0;

        $r0 := @parameter0: proguard.classfile.Clazz;

        $r1 = staticinvoke <proguard.optimize.info.ClassOptimizationInfo: proguard.optimize.info.ClassOptimizationInfo getClassOptimizationInfo(proguard.classfile.Clazz)>($r0);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<proguard.optimize.info.ClassOptimizationInfo: boolean containsPackageVisibleMembers()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static void setPackageVisibleMembers(proguard.classfile.Clazz)
    {
        proguard.optimize.info.ClassOptimizationInfo $r1;
        proguard.classfile.Clazz $r0;

        $r0 := @parameter0: proguard.classfile.Clazz;

        $r1 = staticinvoke <proguard.optimize.info.ClassOptimizationInfo: proguard.optimize.info.ClassOptimizationInfo getClassOptimizationInfo(proguard.classfile.Clazz)>($r0);

        if $r1 == null goto label1;

        virtualinvoke $r1.<proguard.optimize.info.ClassOptimizationInfo: void setContainsPackageVisibleMembers()>();

     label1:
        return;
    }

    public void visitAnyMember(proguard.classfile.Clazz, proguard.classfile.Member)
    {
        proguard.classfile.Clazz $r1;
        proguard.optimize.info.PackageVisibleMemberContainingClassMarker r0;
        int $i0;
        proguard.classfile.Member $r2;

        r0 := @this: proguard.optimize.info.PackageVisibleMemberContainingClassMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Member;

        $i0 = interfaceinvoke $r2.<proguard.classfile.Member: int getAccessFlags()>();

        $i0 = $i0 & 3;

        if $i0 != 0 goto label1;

        staticinvoke <proguard.optimize.info.PackageVisibleMemberContainingClassMarker: void setPackageVisibleMembers(proguard.classfile.Clazz)>($r1);

     label1:
        return;
    }
}
