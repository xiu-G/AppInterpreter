class com.actionbarsherlock.widget.ActivityChooserModel extends android.database.DataSetObservable
{
    private static final java.lang.String ATTRIBUTE_ACTIVITY;
    private static final java.lang.String ATTRIBUTE_TIME;
    private static final java.lang.String ATTRIBUTE_WEIGHT;
    private static final boolean DEBUG;
    private static final int DEFAULT_ACTIVITY_INFLATION;
    private static final float DEFAULT_HISTORICAL_RECORD_WEIGHT;
    public static final java.lang.String DEFAULT_HISTORY_FILE_NAME;
    public static final int DEFAULT_HISTORY_MAX_LENGTH;
    private static final java.lang.String HISTORY_FILE_EXTENSION;
    private static final int INVALID_INDEX;
    private static final java.lang.String LOG_TAG;
    private static final java.util.concurrent.Executor SERIAL_EXECUTOR;
    private static final java.lang.String TAG_HISTORICAL_RECORD;
    private static final java.lang.String TAG_HISTORICAL_RECORDS;
    private static final java.util.Map sDataModelRegistry;
    private static final java.lang.Object sRegistryLock;
    private final java.util.List mActivites;
    private com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy;
    private com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter;
    private boolean mCanReadHistoricalData;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final java.util.List mHistoricalRecords;
    private boolean mHistoricalRecordsChanged;
    private final java.lang.String mHistoryFileName;
    private int mHistoryMaxSize;
    private final java.lang.Object mInstanceLock;
    private android.content.Intent mIntent;
    private boolean mReadShareHistoryCalled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r4;

        <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String TAG_HISTORICAL_RECORDS> = "historical-records";

        <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String TAG_HISTORICAL_RECORD> = "historical-record";

        <com.actionbarsherlock.widget.ActivityChooserModel: int INVALID_INDEX> = -1;

        <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String HISTORY_FILE_EXTENSION> = ".xml";

        <com.actionbarsherlock.widget.ActivityChooserModel: int DEFAULT_HISTORY_MAX_LENGTH> = 50;

        <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String DEFAULT_HISTORY_FILE_NAME> = "activity_choser_model_history.xml";

        <com.actionbarsherlock.widget.ActivityChooserModel: float DEFAULT_HISTORICAL_RECORD_WEIGHT> = 1.0F;

        <com.actionbarsherlock.widget.ActivityChooserModel: int DEFAULT_ACTIVITY_INFLATION> = 5;

        <com.actionbarsherlock.widget.ActivityChooserModel: boolean DEBUG> = 0;

        <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_WEIGHT> = "weight";

        <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_TIME> = "time";

        <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_ACTIVITY> = "activity";

        $r0 = class "Lcom/actionbarsherlock/widget/ActivityChooserModel;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String LOG_TAG> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object sRegistryLock> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <com.actionbarsherlock.widget.ActivityChooserModel: java.util.Map sDataModelRegistry> = $r3;

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        <com.actionbarsherlock.widget.ActivityChooserModel: java.util.concurrent.Executor SERIAL_EXECUTOR> = $r4;

        return;
    }

    private void <init>(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        java.util.ArrayList $r4;
        com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter $r5;
        android.os.Handler $r6;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.database.DataSetObservable: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mHistoricalRecords> = $r4;

        $r5 = new com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter;

        specialinvoke $r5.<com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter)>(r0, null);

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter> = $r5;

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: int mHistoryMaxSize> = 50;

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mReadShareHistoryCalled> = 0;

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>()>();

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.os.Handler mHandler> = $r6;

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Context mContext> = $r1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 != 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String mHistoryFileName> = $r2;

        return;

     label1:
        r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String mHistoryFileName> = $r2;

        return;
    }

    static android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel)
    {
        android.content.Context r1;
        com.actionbarsherlock.widget.ActivityChooserModel $r0;

        $r0 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel;

        r1 = $r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Context mContext>;

        return r1;
    }

    static java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel)
    {
        com.actionbarsherlock.widget.ActivityChooserModel $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel;

        r1 = $r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        return r1;
    }

    static java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel)
    {
        com.actionbarsherlock.widget.ActivityChooserModel $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel;

        r1 = $r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        return r1;
    }

    static java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel)
    {
        com.actionbarsherlock.widget.ActivityChooserModel $r0;
        java.util.List r1;

        $r0 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel;

        r1 = $r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        return r1;
    }

    static void access$4(com.actionbarsherlock.widget.ActivityChooserModel, boolean)
    {
        com.actionbarsherlock.widget.ActivityChooserModel $r0;
        boolean $z0;

        $r0 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel;

        $z0 := @parameter1: boolean;

        $r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        return;
    }

    static android.os.Handler access$5(com.actionbarsherlock.widget.ActivityChooserModel)
    {
        com.actionbarsherlock.widget.ActivityChooserModel $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel;

        r1 = $r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.os.Handler mHandler>;

        return r1;
    }

    static void access$6(com.actionbarsherlock.widget.ActivityChooserModel)
    {
        com.actionbarsherlock.widget.ActivityChooserModel $r0;

        $r0 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel;

        specialinvoke $r0.<com.actionbarsherlock.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsLocked()>();

        return;
    }

    static void access$7(com.actionbarsherlock.widget.ActivityChooserModel)
    {
        com.actionbarsherlock.widget.ActivityChooserModel $r0;

        $r0 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel;

        specialinvoke $r0.<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>();

        return;
    }

    static java.lang.String access$8()
    {
        java.lang.String r0;

        r0 = <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        return r0;
    }

    private boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)
    {
        java.lang.Throwable $r4;
        java.util.List $r3;
        com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord $r1;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord;

        $r2 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r2;

     label1:
        $r3 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsLocked()>();

        specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void persistHistoricalData()>();

        specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>();

     label2:
        exitmonitor $r2;

     label3:
        return $z0;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r2;

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r6;
        android.content.Context $r0;
        java.util.Map $r3;
        java.lang.Object $r2, $r4;
        com.actionbarsherlock.widget.ActivityChooserModel $r5;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object sRegistryLock>;

        entermonitor $r2;

     label1:
        $r3 = <com.actionbarsherlock.widget.ActivityChooserModel: java.util.Map sDataModelRegistry>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.actionbarsherlock.widget.ActivityChooserModel) $r4;

        if $r5 != null goto label2;

        $r5 = new com.actionbarsherlock.widget.ActivityChooserModel;

        specialinvoke $r5.<com.actionbarsherlock.widget.ActivityChooserModel: void <init>(android.content.Context,java.lang.String)>($r0, $r1);

        $r3 = <com.actionbarsherlock.widget.ActivityChooserModel: java.util.Map sDataModelRegistry>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

     label2:
        specialinvoke $r5.<com.actionbarsherlock.widget.ActivityChooserModel: void readHistoricalData()>();

        exitmonitor $r2;

     label3:
        return $r5;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r2;

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private void loadActivitiesLocked()
    {
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        android.content.Intent $r3;
        android.content.pm.ResolveInfo $r8;
        java.util.List $r1, $r6;
        int $i0, $i1;
        java.lang.Object $r7;
        com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo $r2;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r3 == null goto label3;

        $r4 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent>;

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r3, 0);

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>();

        return;

     label2:
        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i1);

        $r8 = (android.content.pm.ResolveInfo) $r7;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $r2 = new com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo;

        specialinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,android.content.pm.ResolveInfo)>(r0, $r8);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void notifyChanged()>();

        return;
    }

    private void persistHistoricalData()
    {
        java.lang.Throwable $r3;
        java.lang.IllegalStateException $r2;
        java.util.concurrent.Executor $r5;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister $r6;
        java.lang.Object $r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r1;

     label1:
        $z0 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mReadShareHistoryCalled>;

        if $z0 != 0 goto label3;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No preceding call to #readHistoricalData");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor $r1;

        throw $r3;

     label3:
        $z0 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged>;

        if $z0 != 0 goto label5;

        exitmonitor $r1;

     label4:
        return;

     label5:
        r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 0;

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        $r4 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label6;

        $r5 = <com.actionbarsherlock.widget.ActivityChooserModel: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r6 = new com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister;

        specialinvoke $r6.<com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister)>(r0, null);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label6:
        exitmonitor $r1;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label7 with label2;
    }

    private void pruneExcessiveHistoricalRecordsLocked()
    {
        java.util.List $r1;
        int $i0, $i1;
        com.actionbarsherlock.widget.ActivityChooserModel r0;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: int mHistoryMaxSize>;

        $i0 = $i0 - $i1;

        if $i0 > 0 goto label1;

        return;

     label1:
        r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(0);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    private void readHistoricalData()
    {
        java.lang.Throwable $r5;
        java.util.concurrent.Executor $r4;
        com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader $r2;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        java.lang.Object $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r1;

     label1:
        $z0 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mCanReadHistoricalData>;

        if $z0 == 0 goto label2;

        $z0 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged>;

        if $z0 != 0 goto label4;

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 0;

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean mReadShareHistoryCalled> = 1;

        $r3 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label5;

        $r4 = <com.actionbarsherlock.widget.ActivityChooserModel: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r2 = new com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader;

        specialinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)>(r0, null);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

     label5:
        exitmonitor $r1;

     label6:
        return;

     label7:
        $r5 := @caughtexception;

        exitmonitor $r1;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
    }

    private void sortActivities()
    {
        java.lang.Throwable $r6;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        android.content.Intent $r2;
        java.util.List $r3, $r5;
        java.lang.Object $r1;
        com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter $r4;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r1;

     label1:
        $r4 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        if $r4 == null goto label2;

        $r3 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        $r2 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent>;

        $r3 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $r5 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        interfaceinvoke $r4.<com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter: void sort(android.content.Intent,java.util.List,java.util.List)>($r2, $r3, $r5);

        virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void notifyChanged()>();

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public android.content.Intent chooseActivity(int)
    {
        com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord $r12;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        android.content.Intent $r9, $r10;
        long $l1;
        int $i0;
        android.content.pm.ActivityInfo $r6;
        java.lang.String $r7, $r8;
        boolean $z0;
        android.content.ComponentName $r1;
        com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener $r11;
        android.content.pm.ResolveInfo $r5;
        java.util.List $r2;
        java.lang.Object $r3;
        com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo $r4;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $i0 := @parameter0: int;

        $r2 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) $r3;

        $r1 = new android.content.ComponentName;

        $r5 = $r4.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r6 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = $r6.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r5 = $r4.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r6 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = $r6.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r8);

        $r9 = new android.content.Intent;

        $r10 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent>;

        specialinvoke $r9.<android.content.Intent: void <init>(android.content.Intent)>($r10);

        virtualinvoke $r9.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r1);

        $r11 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy>;

        if $r11 == null goto label1;

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(android.content.Intent)>($r9);

        $r11 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy>;

        $z0 = interfaceinvoke $r11.<com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener: boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent)>(r0, $r10);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r12 = new com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r12.<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>($r1, $l1, 1.0F);

        specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)>($r12);

        return $r9;
    }

    public android.content.pm.ResolveInfo getActivity(int)
    {
        java.lang.Throwable $r5;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        android.content.pm.ResolveInfo r6;
        java.util.List $r3;
        int $i0;
        java.lang.Object $r1, $r2;
        com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo $r4;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $i0 := @parameter0: int;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $r2 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) $r2;

        r6 = $r4.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getActivityCount()
    {
        java.lang.Throwable $r3;
        java.util.List $r2;
        int $i0;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        java.lang.Object $r1;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getActivityIndex(android.content.pm.ResolveInfo)
    {
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        android.content.pm.ResolveInfo $r1, $r5;
        java.util.List $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo $r4;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 := @parameter0: android.content.pm.ResolveInfo;

        $r2 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return -1;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) $r3;

        $r5 = $r4.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        if $r5 != $r1 goto label3;

        return $i1;

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public android.content.pm.ResolveInfo getDefaultActivity()
    {
        java.lang.Throwable $r5;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        android.content.pm.ResolveInfo r6;
        java.util.List $r2;
        java.lang.Object $r1, $r3;
        com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo $r4;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) $r3;

        r6 = $r4.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        exitmonitor $r1;

        return null;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public int getHistoryMaxSize()
    {
        java.lang.Throwable $r2;
        int i0;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        java.lang.Object $r1;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r1;

     label1:
        i0 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: int mHistoryMaxSize>;

        exitmonitor $r1;

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getHistorySize()
    {
        java.lang.Throwable $r3;
        java.util.List $r2;
        int $i0;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        java.lang.Object $r1;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.content.Intent getIntent()
    {
        java.lang.Throwable $r2;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        java.lang.Object $r1;
        android.content.Intent r3;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r1;

     label1:
        r3 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent>;

        exitmonitor $r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setActivitySorter(com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter)
    {
        java.lang.Throwable $r4;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        java.lang.Object $r2;
        com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter $r1, $r3;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter;

        $r2 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r2;

     label1:
        $r3 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        if $r3 != $r1 goto label3;

        exitmonitor $r2;

     label2:
        return;

     label3:
        r0.<com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter> = $r1;

        specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>();

        exitmonitor $r2;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r2;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setDefaultActivity(int)
    {
        com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord $r10;
        android.content.ComponentName $r5;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        long $l1;
        android.content.pm.ResolveInfo $r6;
        java.util.List $r1;
        int $i0;
        android.content.pm.ActivityInfo $r7;
        float $f0, $f1;
        java.lang.Object $r2;
        java.lang.String $r8, $r9;
        com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo $r3, $r4;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $i0 := @parameter0: int;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) $r2;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List mActivites>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) $r2;

        if $r4 == null goto label2;

        $f0 = $r4.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: float weight>;

        $f1 = $r3.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: float weight>;

        $f0 = $f0 - $f1;

        $f0 = $f0 + 5.0F;

     label1:
        $r5 = new android.content.ComponentName;

        $r6 = $r3.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r8 = $r7.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r6 = $r3.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r9 = $r7.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r5.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r8, $r9);

        $r10 = new com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r10.<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>($r5, $l1, $f0);

        specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)>($r10);

        return;

     label2:
        $f0 = 1.0F;

        goto label1;
    }

    public void setHistoryMaxSize(int)
    {
        java.lang.Throwable $r2;
        int $i0, $i1;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        java.lang.Object $r1;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $i0 := @parameter0: int;

        $r1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r1;

     label1:
        $i1 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: int mHistoryMaxSize>;

        if $i1 != $i0 goto label3;

        exitmonitor $r1;

     label2:
        return;

     label3:
        r0.<com.actionbarsherlock.widget.ActivityChooserModel: int mHistoryMaxSize> = $i0;

        specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsLocked()>();

        specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>();

        exitmonitor $r1;

     label4:
        return;

     label5:
        $r2 := @caughtexception;

        exitmonitor $r1;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setIntent(android.content.Intent)
    {
        java.lang.Throwable $r4;
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        android.content.Intent $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 := @parameter0: android.content.Intent;

        $r2 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor $r2;

     label1:
        $r3 = r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r3 != $r1 goto label3;

        exitmonitor $r2;

     label2:
        return;

     label3:
        r0.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent> = $r1;

        specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void loadActivitiesLocked()>();

        exitmonitor $r2;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r2;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener)
    {
        com.actionbarsherlock.widget.ActivityChooserModel r0;
        com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener $r1;

        r0 := @this: com.actionbarsherlock.widget.ActivityChooserModel;

        $r1 := @parameter0: com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener;

        r0.<com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy> = $r1;

        return;
    }
}
