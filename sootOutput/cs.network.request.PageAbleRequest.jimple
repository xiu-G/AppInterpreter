public abstract class cs.network.request.PageAbleRequest extends cs.network.request.AbstractRequest
{
    private int maxresult;
    private int page;
    private java.util.Map parrams;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        java.util.HashMap $r2;
        cs.network.request.PageAbleRequest r0;

        r0 := @this: cs.network.request.PageAbleRequest;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<cs.network.request.AbstractRequest: void <init>(android.content.Context)>($r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<cs.network.request.PageAbleRequest: java.util.Map parrams> = $r2;

        r0.<cs.network.request.PageAbleRequest: int page> = 1;

        r0.<cs.network.request.PageAbleRequest: int maxresult> = 10;

        return;
    }

    public int getMaxresult()
    {
        int i0;
        cs.network.request.PageAbleRequest r0;

        r0 := @this: cs.network.request.PageAbleRequest;

        i0 = r0.<cs.network.request.PageAbleRequest: int maxresult>;

        return i0;
    }

    public int getPage()
    {
        int i0;
        cs.network.request.PageAbleRequest r0;

        r0 := @this: cs.network.request.PageAbleRequest;

        i0 = r0.<cs.network.request.PageAbleRequest: int page>;

        return i0;
    }

    public java.util.Map getParrams()
    {
        cs.network.request.PageAbleRequest r0;
        java.util.Map $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: cs.network.request.PageAbleRequest;

        $r1 = r0.<cs.network.request.PageAbleRequest: java.util.Map parrams>;

        $i0 = virtualinvoke r0.<cs.network.request.PageAbleRequest: int getPage()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("page", $r2);

        $r1 = r0.<cs.network.request.PageAbleRequest: java.util.Map parrams>;

        $i0 = virtualinvoke r0.<cs.network.request.PageAbleRequest: int getMaxresult()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("maxresult", $r2);

        $r1 = r0.<cs.network.request.PageAbleRequest: java.util.Map parrams>;

        return $r1;
    }

    protected void put(java.lang.String, java.lang.Object)
    {
        cs.network.request.PageAbleRequest r0;
        java.util.Map $r3;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: cs.network.request.PageAbleRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        if $r2 == null goto label1;

        $r3 = r0.<cs.network.request.PageAbleRequest: java.util.Map parrams>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label1:
        return;
    }

    public void setMaxresult(int)
    {
        int $i0;
        cs.network.request.PageAbleRequest r0;

        r0 := @this: cs.network.request.PageAbleRequest;

        $i0 := @parameter0: int;

        r0.<cs.network.request.PageAbleRequest: int maxresult> = $i0;

        return;
    }

    public void setPage(int)
    {
        int $i0;
        cs.network.request.PageAbleRequest r0;

        r0 := @this: cs.network.request.PageAbleRequest;

        $i0 := @parameter0: int;

        r0.<cs.network.request.PageAbleRequest: int page> = $i0;

        return;
    }
}
