public class org.mozilla.universalchardet.prober.statemachine.UTF8SMModel extends org.mozilla.universalchardet.prober.statemachine.SMModel
{
    public static final int UTF8_CLASS_FACTOR;
    private static int[] utf8CharLenTable;
    private static int[] utf8ClassTable;
    private static int[] utf8StateTable;

    static void <clinit>()
    {
        int $i0;
        int[] $r0;

        <org.mozilla.universalchardet.prober.statemachine.UTF8SMModel: int UTF8_CLASS_FACTOR> = 16;

        $r0 = newarray (int)[32];

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[0] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 0, 0);

        $r0[1] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[2] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 0, 1, 1, 1, 1);

        $r0[3] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[4] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[5] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[6] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[7] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[8] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[9] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[10] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[11] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[12] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[13] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[14] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[15] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(2, 2, 2, 2, 3, 3, 3, 3);

        $r0[16] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(4, 4, 4, 4, 4, 4, 4, 4);

        $r0[17] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(4, 4, 4, 4, 4, 4, 4, 4);

        $r0[18] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(4, 4, 4, 4, 4, 4, 4, 4);

        $r0[19] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(5, 5, 5, 5, 5, 5, 5, 5);

        $r0[20] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(5, 5, 5, 5, 5, 5, 5, 5);

        $r0[21] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(5, 5, 5, 5, 5, 5, 5, 5);

        $r0[22] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(5, 5, 5, 5, 5, 5, 5, 5);

        $r0[23] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(0, 0, 6, 6, 6, 6, 6, 6);

        $r0[24] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(6, 6, 6, 6, 6, 6, 6, 6);

        $r0[25] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(6, 6, 6, 6, 6, 6, 6, 6);

        $r0[26] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(6, 6, 6, 6, 6, 6, 6, 6);

        $r0[27] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(7, 8, 8, 8, 8, 8, 8, 8);

        $r0[28] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(8, 8, 8, 8, 8, 9, 8, 8);

        $r0[29] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(10, 11, 11, 11, 11, 11, 11, 11);

        $r0[30] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(12, 13, 13, 13, 14, 15, 0, 0);

        $r0[31] = $i0;

        <org.mozilla.universalchardet.prober.statemachine.UTF8SMModel: int[] utf8ClassTable> = $r0;

        $r0 = newarray (int)[26];

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 0, 1, 1, 1, 1, 12, 10);

        $r0[0] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(9, 11, 8, 7, 6, 5, 4, 3);

        $r0[1] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[2] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[3] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(2, 2, 2, 2, 2, 2, 2, 2);

        $r0[4] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(2, 2, 2, 2, 2, 2, 2, 2);

        $r0[5] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 5, 5, 5, 5, 1, 1);

        $r0[6] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[7] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 5, 5, 5, 1, 1);

        $r0[8] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[9] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 7, 7, 7, 7, 1, 1);

        $r0[10] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[11] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 7, 7, 1, 1);

        $r0[12] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[13] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 9, 9, 9, 9, 1, 1);

        $r0[14] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[15] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 9, 1, 1);

        $r0[16] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[17] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 12, 12, 12, 12, 1, 1);

        $r0[18] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[19] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 12, 1, 1);

        $r0[20] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[21] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 12, 12, 12, 1, 1, 1);

        $r0[22] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[23] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 0, 0, 0, 0, 1, 1);

        $r0[24] = $i0;

        $i0 = staticinvoke <org.mozilla.universalchardet.prober.statemachine.PkgInt: int pack4bits(int,int,int,int,int,int,int,int)>(1, 1, 1, 1, 1, 1, 1, 1);

        $r0[25] = $i0;

        <org.mozilla.universalchardet.prober.statemachine.UTF8SMModel: int[] utf8StateTable> = $r0;

        $r0 = newarray (int)[16];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 0;

        $r0[3] = 0;

        $r0[4] = 0;

        $r0[5] = 0;

        $r0[6] = 2;

        $r0[7] = 3;

        $r0[8] = 3;

        $r0[9] = 3;

        $r0[10] = 4;

        $r0[11] = 4;

        $r0[12] = 5;

        $r0[13] = 5;

        $r0[14] = 6;

        $r0[15] = 6;

        <org.mozilla.universalchardet.prober.statemachine.UTF8SMModel: int[] utf8CharLenTable> = $r0;

        return;
    }

    public void <init>()
    {
        int[] $r2;
        org.mozilla.universalchardet.prober.statemachine.PkgInt $r1, $r3;
        org.mozilla.universalchardet.prober.statemachine.UTF8SMModel r0;
        java.lang.String $r4;

        r0 := @this: org.mozilla.universalchardet.prober.statemachine.UTF8SMModel;

        $r1 = new org.mozilla.universalchardet.prober.statemachine.PkgInt;

        $r2 = <org.mozilla.universalchardet.prober.statemachine.UTF8SMModel: int[] utf8ClassTable>;

        specialinvoke $r1.<org.mozilla.universalchardet.prober.statemachine.PkgInt: void <init>(int,int,int,int,int[])>(3, 7, 2, 15, $r2);

        $r3 = new org.mozilla.universalchardet.prober.statemachine.PkgInt;

        $r2 = <org.mozilla.universalchardet.prober.statemachine.UTF8SMModel: int[] utf8StateTable>;

        specialinvoke $r3.<org.mozilla.universalchardet.prober.statemachine.PkgInt: void <init>(int,int,int,int,int[])>(3, 7, 2, 15, $r2);

        $r2 = <org.mozilla.universalchardet.prober.statemachine.UTF8SMModel: int[] utf8CharLenTable>;

        $r4 = <org.mozilla.universalchardet.Constants: java.lang.String CHARSET_UTF_8>;

        specialinvoke r0.<org.mozilla.universalchardet.prober.statemachine.SMModel: void <init>(org.mozilla.universalchardet.prober.statemachine.PkgInt,int,org.mozilla.universalchardet.prober.statemachine.PkgInt,int[],java.lang.String)>($r1, 16, $r3, $r2, $r4);

        return;
    }
}
