public class proguard.obfuscate.Obfuscator extends java.lang.Object
{
    private final proguard.Configuration configuration;

    public void <init>(proguard.Configuration)
    {
        proguard.obfuscate.Obfuscator r0;
        proguard.Configuration $r1;

        r0 := @this: proguard.obfuscate.Obfuscator;

        $r1 := @parameter0: proguard.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration> = $r1;

        return;
    }

    private boolean isFile(java.io.File)
    {
        proguard.obfuscate.Obfuscator r0;
        int $i0;
        java.lang.String $r2;
        java.io.File $r1;

        r0 := @this: proguard.obfuscate.Obfuscator;

        $r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void execute(proguard.classfile.ClassPool, proguard.classfile.ClassPool) throws java.io.IOException
    {
        proguard.obfuscate.MappingReader $r41;
        proguard.obfuscate.MemberNameConflictFixer $r59;
        proguard.classfile.visitor.AllMemberVisitor $r9, $r32;
        proguard.classfile.attribute.visitor.AllAttributeVisitor $r35;
        proguard.classfile.attribute.visitor.AttributeNameFilter $r11, $r48;
        proguard.classfile.ClassPool $r1, $r2;
        proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor $r71;
        proguard.obfuscate.NameAndTypeShrinker $r74;
        proguard.obfuscate.ClassObfuscator $r50;
        proguard.obfuscate.SimpleNameFactory $r21, $r51;
        proguard.classfile.util.MethodLinker $r30;
        proguard.classfile.constant.visitor.AllConstantVisitor $r69;
        proguard.obfuscate.MappingProcessor[] $r14;
        proguard.classfile.visitor.ClassVisitor[] $r26;
        proguard.util.StringMatcher $r17;
        proguard.classfile.visitor.ClassCleaner $r29;
        proguard.classfile.visitor.ClassPoolVisitor $r8;
        proguard.classfile.visitor.MultiClassVisitor $r61;
        proguard.obfuscate.MemberNameCollector $r52;
        proguard.Configuration $r3;
        proguard.obfuscate.SpecialNameFactory $r24, $r54;
        proguard.util.ListParser $r47;
        proguard.classfile.visitor.ClassHierarchyTraveler $r58;
        java.io.BufferedOutputStream $r63;
        proguard.obfuscate.ParameterNameMarker $r36;
        java.lang.StringBuffer $r15, $r44;
        java.lang.String $r16, $r20;
        proguard.obfuscate.DictionaryNameFactory $r18, $r19, $r49;
        proguard.obfuscate.ClassRenamer $r65;
        java.io.FileOutputStream $r62;
        java.io.IOException $r28;
        java.io.File $r5;
        proguard.obfuscate.SourceFileRenamer $r72;
        proguard.classfile.editor.MemberReferenceFixer $r67;
        proguard.obfuscate.MemberObfuscator $r53;
        proguard.classfile.editor.AccessFixer $r68;
        proguard.classfile.visitor.AllMethodVisitor $r38;
        proguard.obfuscate.Utf8UsageMarker $r75;
        proguard.classfile.visitor.BottomClassFilter $r45;
        proguard.classfile.editor.InnerClassesAccessFixer $r70;
        boolean $z0, $z1;
        proguard.classfile.util.WarningPrinter $r12, $r40;
        proguard.classfile.attribute.visitor.RequiredAttributeFilter $r34;
        proguard.obfuscate.Obfuscator r0;
        proguard.obfuscate.MemberNameFilter $r37;
        java.util.List $r4;
        proguard.classfile.editor.ClassReferenceFixer $r66;
        proguard.obfuscate.MultiMappingProcessor $r43;
        proguard.util.NameParser $r46;
        proguard.obfuscate.MappingPrinter $r64;
        proguard.obfuscate.NameFactory $r22;
        proguard.classfile.visitor.ClassVisitor $r6;
        proguard.obfuscate.NameMarker $r7, $r31;
        java.util.HashMap $r23, $r25, $r55;
        proguard.obfuscate.MemberSpecialNameFilter $r56;
        proguard.obfuscate.AttributeUsageMarker $r10, $r33;
        int $i0;
        proguard.obfuscate.AttributeShrinker $r39;
        java.io.PrintStream $r13, $r27;
        proguard.obfuscate.MappingKeeper $r42;
        proguard.obfuscate.NameAndTypeUsageMarker $r73;
        proguard.obfuscate.Utf8Shrinker $r76;
        proguard.obfuscate.MapCleaner $r60;
        proguard.classfile.visitor.MemberAccessFilter $r57;

        r0 := @this: proguard.obfuscate.Obfuscator;

        $r1 := @parameter0: proguard.classfile.ClassPool;

        $r2 := @parameter1: proguard.classfile.ClassPool;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List keep>;

        if $r4 != null goto label01;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File applyMapping>;

        if $r5 != null goto label01;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File printMapping>;

        if $r5 != null goto label01;

        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("You have to specify \'-keep\' options for the obfuscation step.");

        throw $r28;

     label01:
        $r29 = new proguard.classfile.visitor.ClassCleaner;

        specialinvoke $r29.<proguard.classfile.visitor.ClassCleaner: void <init>()>();

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r29);

        $r29 = new proguard.classfile.visitor.ClassCleaner;

        specialinvoke $r29.<proguard.classfile.visitor.ClassCleaner: void <init>()>();

        virtualinvoke $r2.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r29);

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean useUniqueClassMemberNames>;

        if $z0 == 0 goto label05;

        $r9 = new proguard.classfile.visitor.AllMemberVisitor;

        $r6 = $r9;

        $r30 = new proguard.classfile.util.MethodLinker;

        specialinvoke $r30.<proguard.classfile.util.MethodLinker: void <init>()>();

        specialinvoke $r9.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r30);

     label02:
        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r6);

        virtualinvoke $r2.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r6);

        $r31 = new proguard.obfuscate.NameMarker;

        $r7 = $r31;

        specialinvoke $r31.<proguard.obfuscate.NameMarker: void <init>()>();

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List keep>;

        $r8 = staticinvoke <proguard.ClassSpecificationVisitorFactory: proguard.classfile.visitor.ClassPoolVisitor createClassPoolVisitor(java.util.List,proguard.classfile.visitor.ClassVisitor,proguard.classfile.visitor.MemberVisitor,boolean,boolean,boolean)>($r4, $r7, $r7, 0, 0, 1);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void accept(proguard.classfile.visitor.ClassPoolVisitor)>($r8);

        virtualinvoke $r2.<proguard.classfile.ClassPool: void accept(proguard.classfile.visitor.ClassPoolVisitor)>($r8);

        virtualinvoke $r2.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r7);

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r7);

        virtualinvoke $r2.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r32);

        $r33 = new proguard.obfuscate.AttributeUsageMarker;

        $r10 = $r33;

        specialinvoke $r33.<proguard.obfuscate.AttributeUsageMarker: void <init>()>();

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List keepAttributes>;

        if $r4 != null goto label06;

        $r11 = null;

     label03:
        $r35 = new proguard.classfile.attribute.visitor.AllAttributeVisitor;

        $r34 = new proguard.classfile.attribute.visitor.RequiredAttributeFilter;

        specialinvoke $r34.<proguard.classfile.attribute.visitor.RequiredAttributeFilter: void <init>(proguard.classfile.attribute.visitor.AttributeVisitor,proguard.classfile.attribute.visitor.AttributeVisitor)>($r10, $r11);

        specialinvoke $r35.<proguard.classfile.attribute.visitor.AllAttributeVisitor: void <init>(boolean,proguard.classfile.attribute.visitor.AttributeVisitor)>(1, $r34);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r35);

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean keepParameterNames>;

        if $z0 == 0 goto label04;

        $r38 = new proguard.classfile.visitor.AllMethodVisitor;

        $r37 = new proguard.obfuscate.MemberNameFilter;

        $r35 = new proguard.classfile.attribute.visitor.AllAttributeVisitor;

        $r36 = new proguard.obfuscate.ParameterNameMarker;

        specialinvoke $r36.<proguard.obfuscate.ParameterNameMarker: void <init>()>();

        specialinvoke $r35.<proguard.classfile.attribute.visitor.AllAttributeVisitor: void <init>(boolean,proguard.classfile.attribute.visitor.AttributeVisitor)>(1, $r36);

        specialinvoke $r37.<proguard.obfuscate.MemberNameFilter: void <init>(proguard.classfile.visitor.MemberVisitor)>($r35);

        specialinvoke $r38.<proguard.classfile.visitor.AllMethodVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r37);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r38);

     label04:
        $r39 = new proguard.obfuscate.AttributeShrinker;

        specialinvoke $r39.<proguard.obfuscate.AttributeShrinker: void <init>()>();

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r39);

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File applyMapping>;

        if $r5 == null goto label07;

        $r40 = new proguard.classfile.util.WarningPrinter;

        $r12 = $r40;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List warn>;

        specialinvoke $r40.<proguard.classfile.util.WarningPrinter: void <init>(java.io.PrintStream,java.util.List)>($r13, $r4);

        $r41 = new proguard.obfuscate.MappingReader;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File applyMapping>;

        specialinvoke $r41.<proguard.obfuscate.MappingReader: void <init>(java.io.File)>($r5);

        $r43 = new proguard.obfuscate.MultiMappingProcessor;

        $r14 = newarray (proguard.obfuscate.MappingProcessor)[2];

        $r42 = new proguard.obfuscate.MappingKeeper;

        specialinvoke $r42.<proguard.obfuscate.MappingKeeper: void <init>(proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter)>($r1, $r12);

        $r14[0] = $r42;

        $r42 = new proguard.obfuscate.MappingKeeper;

        specialinvoke $r42.<proguard.obfuscate.MappingKeeper: void <init>(proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter)>($r2, null);

        $r14[1] = $r42;

        specialinvoke $r43.<proguard.obfuscate.MultiMappingProcessor: void <init>(proguard.obfuscate.MappingProcessor[])>($r14);

        virtualinvoke $r41.<proguard.obfuscate.MappingReader: void pump(proguard.obfuscate.MappingProcessor)>($r43);

        $i0 = virtualinvoke $r12.<proguard.classfile.util.WarningPrinter: int getWarningCount()>();

        if $i0 <= 0 goto label07;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Warning: there were ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r15 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" kept classes and class members that were remapped anyway.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("         You should adapt your configuration or edit the mapping file.");

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean ignoreWarnings>;

        if $z0 != 0 goto label07;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("         If you are sure this remapping won\'t hurt,");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("         you could try your luck using the \'-ignorewarnings\' option.");

        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("Please correct the above warnings first.");

        throw $r28;

     label05:
        $r45 = new proguard.classfile.visitor.BottomClassFilter;

        $r6 = $r45;

        $r30 = new proguard.classfile.util.MethodLinker;

        specialinvoke $r30.<proguard.classfile.util.MethodLinker: void <init>()>();

        specialinvoke $r45.<proguard.classfile.visitor.BottomClassFilter: void <init>(proguard.classfile.visitor.ClassVisitor)>($r30);

        goto label02;

     label06:
        $r48 = new proguard.classfile.attribute.visitor.AttributeNameFilter;

        $r11 = $r48;

        $r47 = new proguard.util.ListParser;

        $r46 = new proguard.util.NameParser;

        specialinvoke $r46.<proguard.util.NameParser: void <init>()>();

        specialinvoke $r47.<proguard.util.ListParser: void <init>(proguard.util.StringParser)>($r46);

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List keepAttributes>;

        $r17 = virtualinvoke $r47.<proguard.util.ListParser: proguard.util.StringMatcher parse(java.util.List)>($r4);

        specialinvoke $r48.<proguard.classfile.attribute.visitor.AttributeNameFilter: void <init>(proguard.util.StringMatcher,proguard.classfile.attribute.visitor.AttributeVisitor)>($r17, $r10);

        goto label03;

     label07:
        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File classObfuscationDictionary>;

        if $r5 == null goto label12;

        $r19 = new proguard.obfuscate.DictionaryNameFactory;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File classObfuscationDictionary>;

        specialinvoke $r19.<proguard.obfuscate.DictionaryNameFactory: void <init>(java.io.File,proguard.obfuscate.NameFactory)>($r5, null);

        $r18 = $r19;

     label08:
        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File packageObfuscationDictionary>;

        if $r5 == null goto label13;

        $r49 = new proguard.obfuscate.DictionaryNameFactory;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File packageObfuscationDictionary>;

        specialinvoke $r49.<proguard.obfuscate.DictionaryNameFactory: void <init>(java.io.File,proguard.obfuscate.NameFactory)>($r5, null);

        $r19 = $r49;

     label09:
        $r50 = new proguard.obfuscate.ClassObfuscator;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean useMixedCaseClassNames>;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List keepPackageNames>;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r16 = $r3.<proguard.Configuration: java.lang.String flattenPackageHierarchy>;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r20 = $r3.<proguard.Configuration: java.lang.String repackageClasses>;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z1 = $r3.<proguard.Configuration: boolean allowAccessModification>;

        specialinvoke $r50.<proguard.obfuscate.ClassObfuscator: void <init>(proguard.classfile.ClassPool,proguard.obfuscate.DictionaryNameFactory,proguard.obfuscate.DictionaryNameFactory,boolean,java.util.List,java.lang.String,java.lang.String,boolean)>($r1, $r18, $r19, $z0, $r4, $r16, $r20, $z1);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r50);

        $r51 = new proguard.obfuscate.SimpleNameFactory;

        $r21 = $r51;

        specialinvoke $r51.<proguard.obfuscate.SimpleNameFactory: void <init>()>();

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File obfuscationDictionary>;

        if $r5 == null goto label21;

        $r19 = new proguard.obfuscate.DictionaryNameFactory;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File obfuscationDictionary>;

        specialinvoke $r19.<proguard.obfuscate.DictionaryNameFactory: void <init>(java.io.File,proguard.obfuscate.NameFactory)>($r5, $r21);

        $r22 = $r19;

     label10:
        $r40 = new proguard.classfile.util.WarningPrinter;

        $r12 = $r40;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r4 = $r3.<proguard.Configuration: java.util.List warn>;

        specialinvoke $r40.<proguard.classfile.util.WarningPrinter: void <init>(java.io.PrintStream,java.util.List)>($r13, $r4);

        $r25 = new java.util.HashMap;

        $r23 = $r25;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean useUniqueClassMemberNames>;

        if $z0 == 0 goto label14;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r23);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r52);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r32);

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r53 = new proguard.obfuscate.MemberObfuscator;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r53.<proguard.obfuscate.MemberObfuscator: void <init>(boolean,proguard.obfuscate.NameFactory,java.util.Map)>($z0, $r22, $r23);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r53);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r32);

     label11:
        $r54 = new proguard.obfuscate.SpecialNameFactory;

        $r24 = $r54;

        $r51 = new proguard.obfuscate.SimpleNameFactory;

        specialinvoke $r51.<proguard.obfuscate.SimpleNameFactory: void <init>()>();

        specialinvoke $r54.<proguard.obfuscate.SpecialNameFactory: void <init>(proguard.obfuscate.NameFactory)>($r51);

        $r55 = new java.util.HashMap;

        $r25 = $r55;

        specialinvoke $r55.<java.util.HashMap: void <init>()>();

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r56 = new proguard.obfuscate.MemberSpecialNameFilter;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r25);

        specialinvoke $r56.<proguard.obfuscate.MemberSpecialNameFilter: void <init>(proguard.classfile.visitor.MemberVisitor)>($r52);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r56);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r32);

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r56 = new proguard.obfuscate.MemberSpecialNameFilter;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r25);

        specialinvoke $r56.<proguard.obfuscate.MemberSpecialNameFilter: void <init>(proguard.classfile.visitor.MemberVisitor)>($r52);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r56);

        virtualinvoke $r2.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r32);

        $r61 = new proguard.classfile.visitor.MultiClassVisitor;

        $r26 = newarray (proguard.classfile.visitor.ClassVisitor)[4];

        $r58 = new proguard.classfile.visitor.ClassHierarchyTraveler;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r57 = new proguard.classfile.visitor.MemberAccessFilter;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r23);

        specialinvoke $r57.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(2, 0, $r52);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r57);

        specialinvoke $r58.<proguard.classfile.visitor.ClassHierarchyTraveler: void <init>(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(1, 0, 0, 1, $r32);

        $r26[0] = $r58;

        $r58 = new proguard.classfile.visitor.ClassHierarchyTraveler;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r57 = new proguard.classfile.visitor.MemberAccessFilter;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r23);

        specialinvoke $r57.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(0, 2, $r52);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r57);

        specialinvoke $r58.<proguard.classfile.visitor.ClassHierarchyTraveler: void <init>(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(1, 1, 1, 0, $r32);

        $r26[1] = $r58;

        $r58 = new proguard.classfile.visitor.ClassHierarchyTraveler;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r57 = new proguard.classfile.visitor.MemberAccessFilter;

        $r59 = new proguard.obfuscate.MemberNameConflictFixer;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        $r53 = new proguard.obfuscate.MemberObfuscator;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z1 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r53.<proguard.obfuscate.MemberObfuscator: void <init>(boolean,proguard.obfuscate.NameFactory,java.util.Map)>($z1, $r24, $r25);

        specialinvoke $r59.<proguard.obfuscate.MemberNameConflictFixer: void <init>(boolean,java.util.Map,proguard.classfile.util.WarningPrinter,proguard.obfuscate.MemberObfuscator)>($z0, $r23, $r12, $r53);

        specialinvoke $r57.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(0, 2, $r59);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r57);

        specialinvoke $r58.<proguard.classfile.visitor.ClassHierarchyTraveler: void <init>(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(1, 1, 1, 0, $r32);

        $r26[2] = $r58;

        $r60 = new proguard.obfuscate.MapCleaner;

        specialinvoke $r60.<proguard.obfuscate.MapCleaner: void <init>(java.util.Map)>($r23);

        $r26[3] = $r60;

        specialinvoke $r61.<proguard.classfile.visitor.MultiClassVisitor: void <init>(proguard.classfile.visitor.ClassVisitor[])>($r26);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r61);

        $r61 = new proguard.classfile.visitor.MultiClassVisitor;

        $r26 = newarray (proguard.classfile.visitor.ClassVisitor)[4];

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r23);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r52);

        $r26[0] = $r32;

        $r58 = new proguard.classfile.visitor.ClassHierarchyTraveler;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r57 = new proguard.classfile.visitor.MemberAccessFilter;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r23);

        specialinvoke $r57.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(0, 2, $r52);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r57);

        specialinvoke $r58.<proguard.classfile.visitor.ClassHierarchyTraveler: void <init>(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(0, 1, 1, 0, $r32);

        $r26[1] = $r58;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r57 = new proguard.classfile.visitor.MemberAccessFilter;

        $r59 = new proguard.obfuscate.MemberNameConflictFixer;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        $r53 = new proguard.obfuscate.MemberObfuscator;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z1 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r53.<proguard.obfuscate.MemberObfuscator: void <init>(boolean,proguard.obfuscate.NameFactory,java.util.Map)>($z1, $r24, $r25);

        specialinvoke $r59.<proguard.obfuscate.MemberNameConflictFixer: void <init>(boolean,java.util.Map,proguard.classfile.util.WarningPrinter,proguard.obfuscate.MemberObfuscator)>($z0, $r23, $r12, $r53);

        specialinvoke $r57.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(2, 0, $r59);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r57);

        $r26[2] = $r32;

        $r60 = new proguard.obfuscate.MapCleaner;

        specialinvoke $r60.<proguard.obfuscate.MapCleaner: void <init>(java.util.Map)>($r23);

        $r26[3] = $r60;

        specialinvoke $r61.<proguard.classfile.visitor.MultiClassVisitor: void <init>(proguard.classfile.visitor.ClassVisitor[])>($r26);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r61);

        $i0 = virtualinvoke $r12.<proguard.classfile.util.WarningPrinter: int getWarningCount()>();

        if $i0 <= 0 goto label15;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Warning: there were ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r15 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" conflicting class member name mappings.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("         Your configuration may be inconsistent.");

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean ignoreWarnings>;

        if $z0 != 0 goto label15;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("         If you are sure the conflicts are harmless,");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("         you could try your luck using the \'-ignorewarnings\' option.");

        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("Please correct the above warnings first.");

        throw $r28;

     label12:
        $r18 = null;

        goto label08;

     label13:
        $r19 = null;

        goto label09;

     label14:
        $r61 = new proguard.classfile.visitor.MultiClassVisitor;

        $r26 = newarray (proguard.classfile.visitor.ClassVisitor)[4];

        $r58 = new proguard.classfile.visitor.ClassHierarchyTraveler;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r57 = new proguard.classfile.visitor.MemberAccessFilter;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r23);

        specialinvoke $r57.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(2, 0, $r52);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r57);

        specialinvoke $r58.<proguard.classfile.visitor.ClassHierarchyTraveler: void <init>(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(1, 0, 0, 1, $r32);

        $r26[0] = $r58;

        $r58 = new proguard.classfile.visitor.ClassHierarchyTraveler;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r57 = new proguard.classfile.visitor.MemberAccessFilter;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r23);

        specialinvoke $r57.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(0, 2, $r52);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r57);

        specialinvoke $r58.<proguard.classfile.visitor.ClassHierarchyTraveler: void <init>(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(1, 1, 1, 1, $r32);

        $r26[1] = $r58;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r57 = new proguard.classfile.visitor.MemberAccessFilter;

        $r53 = new proguard.obfuscate.MemberObfuscator;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r53.<proguard.obfuscate.MemberObfuscator: void <init>(boolean,proguard.obfuscate.NameFactory,java.util.Map)>($z0, $r22, $r23);

        specialinvoke $r57.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(0, 2, $r53);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r57);

        $r26[2] = $r32;

        $r60 = new proguard.obfuscate.MapCleaner;

        specialinvoke $r60.<proguard.obfuscate.MapCleaner: void <init>(java.util.Map)>($r23);

        $r26[3] = $r60;

        specialinvoke $r61.<proguard.classfile.visitor.MultiClassVisitor: void <init>(proguard.classfile.visitor.ClassVisitor[])>($r26);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r61);

        $r61 = new proguard.classfile.visitor.MultiClassVisitor;

        $r26 = newarray (proguard.classfile.visitor.ClassVisitor)[4];

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r23);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r52);

        $r26[0] = $r32;

        $r58 = new proguard.classfile.visitor.ClassHierarchyTraveler;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r57 = new proguard.classfile.visitor.MemberAccessFilter;

        $r52 = new proguard.obfuscate.MemberNameCollector;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r52.<proguard.obfuscate.MemberNameCollector: void <init>(boolean,java.util.Map)>($z0, $r23);

        specialinvoke $r57.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(0, 2, $r52);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r57);

        specialinvoke $r58.<proguard.classfile.visitor.ClassHierarchyTraveler: void <init>(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor)>(0, 1, 1, 0, $r32);

        $r26[1] = $r58;

        $r32 = new proguard.classfile.visitor.AllMemberVisitor;

        $r57 = new proguard.classfile.visitor.MemberAccessFilter;

        $r53 = new proguard.obfuscate.MemberObfuscator;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean overloadAggressively>;

        specialinvoke $r53.<proguard.obfuscate.MemberObfuscator: void <init>(boolean,proguard.obfuscate.NameFactory,java.util.Map)>($z0, $r22, $r23);

        specialinvoke $r57.<proguard.classfile.visitor.MemberAccessFilter: void <init>(int,int,proguard.classfile.visitor.MemberVisitor)>(2, 0, $r53);

        specialinvoke $r32.<proguard.classfile.visitor.AllMemberVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r57);

        $r26[2] = $r32;

        $r60 = new proguard.obfuscate.MapCleaner;

        specialinvoke $r60.<proguard.obfuscate.MapCleaner: void <init>(java.util.Map)>($r23);

        $r26[3] = $r60;

        specialinvoke $r61.<proguard.classfile.visitor.MultiClassVisitor: void <init>(proguard.classfile.visitor.ClassVisitor[])>($r26);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r61);

        goto label11;

     label15:
        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File printMapping>;

        if $r5 == null goto label17;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File printMapping>;

        $z0 = specialinvoke r0.<proguard.obfuscate.Obfuscator: boolean isFile(java.io.File)>($r5);

        if $z0 == 0 goto label20;

        $r27 = new java.io.PrintStream;

        $r13 = $r27;

        $r63 = new java.io.BufferedOutputStream;

        $r62 = new java.io.FileOutputStream;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r5 = $r3.<proguard.Configuration: java.io.File printMapping>;

        specialinvoke $r62.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

        specialinvoke $r63.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r62);

        specialinvoke $r27.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r63);

     label16:
        $r64 = new proguard.obfuscate.MappingPrinter;

        specialinvoke $r64.<proguard.obfuscate.MappingPrinter: void <init>(java.io.PrintStream)>($r13);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAcceptAlphabetically(proguard.classfile.visitor.ClassVisitor)>($r64);

        $r27 = <java.lang.System: java.io.PrintStream out>;

        if $r13 == $r27 goto label17;

        virtualinvoke $r13.<java.io.PrintStream: void close()>();

     label17:
        $r65 = new proguard.obfuscate.ClassRenamer;

        specialinvoke $r65.<proguard.obfuscate.ClassRenamer: void <init>()>();

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r65);

        $r65 = new proguard.obfuscate.ClassRenamer;

        specialinvoke $r65.<proguard.obfuscate.ClassRenamer: void <init>()>();

        virtualinvoke $r2.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r65);

        $r66 = new proguard.classfile.editor.ClassReferenceFixer;

        specialinvoke $r66.<proguard.classfile.editor.ClassReferenceFixer: void <init>(boolean)>(0);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r66);

        $r66 = new proguard.classfile.editor.ClassReferenceFixer;

        specialinvoke $r66.<proguard.classfile.editor.ClassReferenceFixer: void <init>(boolean)>(0);

        virtualinvoke $r2.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r66);

        $r67 = new proguard.classfile.editor.MemberReferenceFixer;

        specialinvoke $r67.<proguard.classfile.editor.MemberReferenceFixer: void <init>()>();

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r67);

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r16 = $r3.<proguard.Configuration: java.lang.String repackageClasses>;

        if $r16 == null goto label18;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $z0 = $r3.<proguard.Configuration: boolean allowAccessModification>;

        if $z0 == 0 goto label18;

        $r69 = new proguard.classfile.constant.visitor.AllConstantVisitor;

        $r68 = new proguard.classfile.editor.AccessFixer;

        specialinvoke $r68.<proguard.classfile.editor.AccessFixer: void <init>()>();

        specialinvoke $r69.<proguard.classfile.constant.visitor.AllConstantVisitor: void <init>(proguard.classfile.constant.visitor.ConstantVisitor)>($r68);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r69);

        $r35 = new proguard.classfile.attribute.visitor.AllAttributeVisitor;

        $r71 = new proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor;

        $r70 = new proguard.classfile.editor.InnerClassesAccessFixer;

        specialinvoke $r70.<proguard.classfile.editor.InnerClassesAccessFixer: void <init>()>();

        specialinvoke $r71.<proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor: void <init>(proguard.classfile.attribute.visitor.InnerClassesInfoVisitor)>($r70);

        specialinvoke $r35.<proguard.classfile.attribute.visitor.AllAttributeVisitor: void <init>(proguard.classfile.attribute.visitor.AttributeVisitor)>($r71);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r35);

     label18:
        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r16 = $r3.<proguard.Configuration: java.lang.String newSourceFileAttribute>;

        if $r16 == null goto label19;

        $r72 = new proguard.obfuscate.SourceFileRenamer;

        $r3 = r0.<proguard.obfuscate.Obfuscator: proguard.Configuration configuration>;

        $r16 = $r3.<proguard.Configuration: java.lang.String newSourceFileAttribute>;

        specialinvoke $r72.<proguard.obfuscate.SourceFileRenamer: void <init>(java.lang.String)>($r16);

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r72);

     label19:
        $r73 = new proguard.obfuscate.NameAndTypeUsageMarker;

        specialinvoke $r73.<proguard.obfuscate.NameAndTypeUsageMarker: void <init>()>();

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r73);

        $r74 = new proguard.obfuscate.NameAndTypeShrinker;

        specialinvoke $r74.<proguard.obfuscate.NameAndTypeShrinker: void <init>()>();

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r74);

        $r75 = new proguard.obfuscate.Utf8UsageMarker;

        specialinvoke $r75.<proguard.obfuscate.Utf8UsageMarker: void <init>()>();

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r75);

        $r76 = new proguard.obfuscate.Utf8Shrinker;

        specialinvoke $r76.<proguard.obfuscate.Utf8Shrinker: void <init>()>();

        virtualinvoke $r1.<proguard.classfile.ClassPool: void classesAccept(proguard.classfile.visitor.ClassVisitor)>($r76);

        return;

     label20:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        goto label16;

     label21:
        $r22 = $r21;

        goto label10;
    }
}
