final class twitter4j.IDsJSONImpl extends twitter4j.TwitterResponseImpl implements twitter4j.IDs
{
    private static final long serialVersionUID;
    private int[] ids;
    private long nextCursor;
    private long previousCursor;

    private void <init>(twitter4j.http.HttpResponse) throws twitter4j.TwitterException
    {
        twitter4j.IDsJSONImpl r0;
        twitter4j.http.HttpResponse $r1;

        r0 := @this: twitter4j.IDsJSONImpl;

        $r1 := @parameter0: twitter4j.http.HttpResponse;

        specialinvoke r0.<twitter4j.TwitterResponseImpl: void <init>(twitter4j.http.HttpResponse)>($r1);

        r0.<twitter4j.IDsJSONImpl: long previousCursor> = -1L;

        r0.<twitter4j.IDsJSONImpl: long nextCursor> = -1L;

        return;
    }

    static twitter4j.IDs getBlockIDs(twitter4j.http.HttpResponse) throws twitter4j.TwitterException
    {
        java.lang.Throwable r3;
        twitter4j.org.json.JSONArray $r4;
        java.lang.Exception $r11;
        twitter4j.IDsJSONImpl r1, $r8;
        int[] $r5;
        twitter4j.http.HttpResponse $r0;
        java.lang.StringBuffer $r7, $r9;
        int $i0, $i1;
        twitter4j.org.json.JSONException r2;
        twitter4j.TwitterException $r10;
        java.lang.String $r6;

        $r0 := @parameter0: twitter4j.http.HttpResponse;

        $r8 = new twitter4j.IDsJSONImpl;

        r1 = $r8;

        specialinvoke $r8.<twitter4j.IDsJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r0);

     label01:
        $r4 = virtualinvoke $r0.<twitter4j.http.HttpResponse: twitter4j.org.json.JSONArray asJSONArray()>();

        $i0 = virtualinvoke $r4.<twitter4j.org.json.JSONArray: int length()>();

     label02:
        $r5 = newarray (int)[$i0];

        r1.<twitter4j.IDsJSONImpl: int[] ids> = $r5;

        $i0 = 0;

     label03:
        $i1 = virtualinvoke $r4.<twitter4j.org.json.JSONArray: int length()>();

     label04:
        if $i0 >= $i1 goto label13;

        $r5 = r1.<twitter4j.IDsJSONImpl: int[] ids>;

     label05:
        $r6 = virtualinvoke $r4.<twitter4j.org.json.JSONArray: java.lang.String getString(int)>($i0);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

     label06:
        $r5[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label03;

     label07:
        r3 := @caughtexception;

        $r10 = new twitter4j.TwitterException;

        $r9 = new java.lang.StringBuffer;

        $r7 = $r9;

     label08:
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Twitter API returned malformed response: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        $r11 = (java.lang.Exception) r3;

     label10:
        specialinvoke $r10.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception)>($r6, $r11);

     label11:
        throw $r10;

     label12:
        r2 := @caughtexception;

        $r10 = new twitter4j.TwitterException;

        specialinvoke $r10.<twitter4j.TwitterException: void <init>(java.lang.Exception)>(r2);

        throw $r10;

     label13:
        return r1;

        catch twitter4j.org.json.JSONException from label01 to label02 with label12;
        catch twitter4j.org.json.JSONException from label03 to label04 with label12;
        catch java.lang.NumberFormatException from label05 to label06 with label07;
        catch twitter4j.org.json.JSONException from label05 to label06 with label12;
        catch twitter4j.org.json.JSONException from label08 to label09 with label12;
        catch twitter4j.org.json.JSONException from label10 to label11 with label12;
    }

    static twitter4j.IDs getFriendsIDs(twitter4j.http.HttpResponse) throws twitter4j.TwitterException
    {
        java.lang.Throwable r3;
        long $l2;
        int[] $r6;
        twitter4j.http.HttpResponse $r0;
        java.lang.StringBuffer $r8, $r10;
        int $i0, $i1;
        twitter4j.TwitterException $r11;
        java.lang.String $r7;
        twitter4j.org.json.JSONArray $r5;
        twitter4j.org.json.JSONObject $r4;
        java.lang.Exception $r12;
        twitter4j.IDsJSONImpl r1, $r9;
        twitter4j.org.json.JSONException r2;

        $r0 := @parameter0: twitter4j.http.HttpResponse;

        $r9 = new twitter4j.IDsJSONImpl;

        r1 = $r9;

        specialinvoke $r9.<twitter4j.IDsJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r0);

        $r4 = virtualinvoke $r0.<twitter4j.http.HttpResponse: twitter4j.org.json.JSONObject asJSONObject()>();

     label01:
        $r5 = virtualinvoke $r4.<twitter4j.org.json.JSONObject: twitter4j.org.json.JSONArray getJSONArray(java.lang.String)>("ids");

        $i0 = virtualinvoke $r5.<twitter4j.org.json.JSONArray: int length()>();

     label02:
        $r6 = newarray (int)[$i0];

        r1.<twitter4j.IDsJSONImpl: int[] ids> = $r6;

        $i0 = 0;

     label03:
        $i1 = virtualinvoke $r5.<twitter4j.org.json.JSONArray: int length()>();

     label04:
        if $i0 >= $i1 goto label13;

        $r6 = r1.<twitter4j.IDsJSONImpl: int[] ids>;

     label05:
        $r7 = virtualinvoke $r5.<twitter4j.org.json.JSONArray: java.lang.String getString(int)>($i0);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

     label06:
        $r6[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label03;

     label07:
        r3 := @caughtexception;

        $r11 = new twitter4j.TwitterException;

        $r10 = new java.lang.StringBuffer;

        $r8 = $r10;

     label08:
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Twitter API returned malformed response: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        $r12 = (java.lang.Exception) r3;

     label10:
        specialinvoke $r11.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception)>($r7, $r12);

     label11:
        throw $r11;

     label12:
        r2 := @caughtexception;

        $r11 = new twitter4j.TwitterException;

        specialinvoke $r11.<twitter4j.TwitterException: void <init>(java.lang.Exception)>(r2);

        throw $r11;

     label13:
        $l2 = staticinvoke <twitter4j.ParseUtil: long getLong(java.lang.String,twitter4j.org.json.JSONObject)>("previous_cursor", $r4);

     label14:
        r1.<twitter4j.IDsJSONImpl: long previousCursor> = $l2;

     label15:
        $l2 = staticinvoke <twitter4j.ParseUtil: long getLong(java.lang.String,twitter4j.org.json.JSONObject)>("next_cursor", $r4);

     label16:
        r1.<twitter4j.IDsJSONImpl: long nextCursor> = $l2;

        return r1;

        catch twitter4j.org.json.JSONException from label01 to label02 with label12;
        catch twitter4j.org.json.JSONException from label03 to label04 with label12;
        catch java.lang.NumberFormatException from label05 to label06 with label07;
        catch twitter4j.org.json.JSONException from label05 to label06 with label12;
        catch twitter4j.org.json.JSONException from label08 to label09 with label12;
        catch twitter4j.org.json.JSONException from label10 to label11 with label12;
        catch twitter4j.org.json.JSONException from label13 to label14 with label12;
        catch twitter4j.org.json.JSONException from label15 to label16 with label12;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.IDsJSONImpl r0;
        int[] $r3, $r4;
        java.lang.Object $r1;
        twitter4j.IDs r2;
        boolean $z0;

        r0 := @this: twitter4j.IDsJSONImpl;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof twitter4j.IDs;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (twitter4j.IDs) $r1;

        $r3 = r0.<twitter4j.IDsJSONImpl: int[] ids>;

        $r4 = interfaceinvoke r2.<twitter4j.IDs: int[] getIDs()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r3, $r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int[] getIDs()
    {
        twitter4j.IDsJSONImpl r0;
        int[] r1;

        r0 := @this: twitter4j.IDsJSONImpl;

        r1 = r0.<twitter4j.IDsJSONImpl: int[] ids>;

        return r1;
    }

    public long getNextCursor()
    {
        twitter4j.IDsJSONImpl r0;
        long l0;

        r0 := @this: twitter4j.IDsJSONImpl;

        l0 = r0.<twitter4j.IDsJSONImpl: long nextCursor>;

        return l0;
    }

    public long getPreviousCursor()
    {
        twitter4j.IDsJSONImpl r0;
        long l0;

        r0 := @this: twitter4j.IDsJSONImpl;

        l0 = r0.<twitter4j.IDsJSONImpl: long previousCursor>;

        return l0;
    }

    public boolean hasNext()
    {
        twitter4j.IDsJSONImpl r0;
        long $l0;
        byte $b1;

        r0 := @this: twitter4j.IDsJSONImpl;

        $l0 = r0.<twitter4j.IDsJSONImpl: long nextCursor>;

        $b1 = 0L cmp $l0;

        if $b1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasPrevious()
    {
        twitter4j.IDsJSONImpl r0;
        long $l0;
        byte $b1;

        r0 := @this: twitter4j.IDsJSONImpl;

        $l0 = r0.<twitter4j.IDsJSONImpl: long previousCursor>;

        $b1 = 0L cmp $l0;

        if $b1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        twitter4j.IDsJSONImpl r0;
        int[] $r1;

        r0 := @this: twitter4j.IDsJSONImpl;

        $r1 = r0.<twitter4j.IDsJSONImpl: int[] ids>;

        if $r1 == null goto label1;

        $r1 = r0.<twitter4j.IDsJSONImpl: int[] ids>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r1);

        return $i0;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        twitter4j.IDsJSONImpl r0;
        int[] $r2;
        java.lang.StringBuffer $r1;
        long $l0;
        java.lang.String $r3;

        r0 := @this: twitter4j.IDsJSONImpl;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IDsJSONImpl{ids=");

        $r2 = r0.<twitter4j.IDsJSONImpl: int[] ids>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", previousCursor=");

        $l0 = r0.<twitter4j.IDsJSONImpl: long previousCursor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", nextCursor=");

        $l0 = r0.<twitter4j.IDsJSONImpl: long nextCursor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <twitter4j.IDsJSONImpl: long serialVersionUID> = -6585026560164704953L;

        return;
    }
}
