public class proguard.classfile.editor.InterfaceAdder extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.constant.visitor.ConstantVisitor
{
    private final proguard.classfile.editor.ConstantAdder constantAdder;
    private final proguard.classfile.editor.InterfacesEditor interfacesEditor;

    public void <init>(proguard.classfile.ProgramClass)
    {
        proguard.classfile.editor.ConstantAdder $r2;
        proguard.classfile.editor.InterfaceAdder r0;
        proguard.classfile.editor.InterfacesEditor $r3;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.editor.InterfaceAdder;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        $r2 = new proguard.classfile.editor.ConstantAdder;

        specialinvoke $r2.<proguard.classfile.editor.ConstantAdder: void <init>(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.editor.InterfaceAdder: proguard.classfile.editor.ConstantAdder constantAdder> = $r2;

        $r3 = new proguard.classfile.editor.InterfacesEditor;

        specialinvoke $r3.<proguard.classfile.editor.InterfacesEditor: void <init>(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.editor.InterfaceAdder: proguard.classfile.editor.InterfacesEditor interfacesEditor> = $r3;

        return;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.editor.ConstantAdder $r4;
        proguard.classfile.constant.ClassConstant $r2;
        proguard.classfile.editor.InterfaceAdder r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.editor.InterfacesEditor $r3;
        int $i0;

        r0 := @this: proguard.classfile.editor.InterfaceAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r3 = r0.<proguard.classfile.editor.InterfaceAdder: proguard.classfile.editor.InterfacesEditor interfacesEditor>;

        $r4 = r0.<proguard.classfile.editor.InterfaceAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i0 = virtualinvoke $r4.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant)>($r1, $r2);

        virtualinvoke $r3.<proguard.classfile.editor.InterfacesEditor: void addInterface(int)>($i0);

        return;
    }
}
