public class com.umeng.newxp.net.g extends com.umeng.common.net.t
{
    private static final java.lang.String n;
    public int a;
    public int b;
    public int c;
    public java.lang.String d;
    public int e;
    public int f;
    public int g;
    public java.lang.String h;
    public java.lang.String i;
    public int j;
    public int k;
    public java.util.List l;
    public org.json.JSONObject m;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Lcom/umeng/newxp/net/g;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <com.umeng.newxp.net.g: java.lang.String n> = $r0;

        return;
    }

    public void <init>(org.json.JSONObject)
    {
        org.json.JSONObject $r1;
        com.umeng.newxp.net.g r0;

        r0 := @this: com.umeng.newxp.net.g;

        $r1 := @parameter0: org.json.JSONObject;

        specialinvoke r0.<com.umeng.common.net.t: void <init>(org.json.JSONObject)>($r1);

        r0.<com.umeng.newxp.net.g: int e> = 0;

        r0.<com.umeng.newxp.net.g: java.lang.String i> = "";

        r0.<com.umeng.newxp.net.g: int j> = -1;

        r0.<com.umeng.newxp.net.g: int k> = 0;

        r0.<com.umeng.newxp.net.g: org.json.JSONObject m> = $r1;

        specialinvoke r0.<com.umeng.newxp.net.g: void a(org.json.JSONObject)>($r1);

        return;
    }

    private void a(org.json.JSONObject)
    {
        com.umeng.newxp.net.g r0;
        java.util.ArrayList $r11;
        org.json.JSONException $r10;
        org.json.JSONObject $r1, $r6;
        int $i0, $i1;
        java.lang.String $r3, $r9;
        boolean $z0;
        java.util.List $r2;
        com.umeng.newxp.Promoter $r7;
        float $f0;
        java.lang.Object $r5;
        java.lang.StringBuilder $r8, $r12;
        org.json.JSONArray $r4;

        r0 := @this: com.umeng.newxp.net.g;

        $r1 := @parameter0: org.json.JSONObject;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.umeng.newxp.net.g: java.util.List l> = $r11;

        if $r1 != null goto label01;

        $r3 = <com.umeng.newxp.common.ExchangeConstants: java.lang.String LOG_TAG>;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String)>($r3, "failed requesting");

        return;

     label01:
        $i0 = virtualinvoke $r1.<org.json.JSONObject: int getInt(java.lang.String)>("status");

     label02:
        r0.<com.umeng.newxp.net.g: int a> = $i0;

        $i0 = r0.<com.umeng.newxp.net.g: int a>;

        if 1 != $i0 goto label15;

     label03:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("promoters");

     label04:
        if $z0 == 0 goto label15;

     label05:
        $r4 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("promoters");

     label06:
        $i0 = 0;

     label07:
        $i1 = virtualinvoke $r4.<org.json.JSONArray: int length()>();

     label08:
        if $i0 >= $i1 goto label17;

     label09:
        $r5 = virtualinvoke $r4.<org.json.JSONArray: java.lang.Object get(int)>($i0);

     label10:
        $r6 = (org.json.JSONObject) $r5;

     label11:
        $r7 = staticinvoke <com.umeng.newxp.Promoter: com.umeng.newxp.Promoter getPromoterFromJson(org.json.JSONObject)>($r6);

     label12:
        $r2 = r0.<com.umeng.newxp.net.g: java.util.List l>;

     label13:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7);

     label14:
        $i0 = $i0 + 1;

        goto label07;

     label15:
        $r3 = <com.umeng.newxp.common.ExchangeConstants: java.lang.String LOG_TAG>;

     label16:
        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String)>($r3, "failed requesting");

     label17:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("filter");

     label18:
        if $z0 == 0 goto label21;

     label19:
        $i0 = virtualinvoke $r1.<org.json.JSONObject: int getInt(java.lang.String)>("filter");

     label20:
        r0.<com.umeng.newxp.net.g: int c> = $i0;

     label21:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("show_size");

     label22:
        if $z0 == 0 goto label25;

     label23:
        $i0 = virtualinvoke $r1.<org.json.JSONObject: int getInt(java.lang.String)>("show_size");

     label24:
        r0.<com.umeng.newxp.net.g: int b> = $i0;

     label25:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("sid");

     label26:
        if $z0 == 0 goto label29;

     label27:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("sid");

     label28:
        r0.<com.umeng.newxp.net.g: java.lang.String d> = $r3;

     label29:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("interval");

     label30:
        if $z0 == 0 goto label33;

     label31:
        $i0 = virtualinvoke $r1.<org.json.JSONObject: int getInt(java.lang.String)>("interval");

     label32:
        r0.<com.umeng.newxp.net.g: int e> = $i0;

     label33:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("preload");

     label34:
        if $z0 == 0 goto label37;

     label35:
        $i0 = virtualinvoke $r1.<org.json.JSONObject: int getInt(java.lang.String)>("preload");

     label36:
        r0.<com.umeng.newxp.net.g: int g> = $i0;

     label37:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("landing_image");

     label38:
        if $z0 == 0 goto label41;

     label39:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("landing_image");

     label40:
        r0.<com.umeng.newxp.net.g: java.lang.String h> = $r3;

     label41:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("opensize");

     label42:
        if $z0 == 0 goto label47;

     label43:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("opensize");

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3);

     label44:
        $f0 = $f0 / 100.0F;

        $r12 = new java.lang.StringBuilder;

        $r8 = $r12;

     label45:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label46:
        r0.<com.umeng.newxp.net.g: java.lang.String i> = $r3;

     label47:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("more");

     label48:
        if $z0 == 0 goto label51;

     label49:
        $i0 = virtualinvoke $r1.<org.json.JSONObject: int getInt(java.lang.String)>("more");

     label50:
        r0.<com.umeng.newxp.net.g: int f> = $i0;

     label51:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("template");

     label52:
        if $z0 == 0 goto label57;

     label53:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("template");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

     label54:
        if $z0 != 0 goto label62;

        $r9 = "iconlist";

     label55:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label56:
        if $z0 == 0 goto label62;

        r0.<com.umeng.newxp.net.g: int k> = 1;

     label57:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("new_num");

     label58:
        if $z0 == 0 goto label63;

     label59:
        $i0 = virtualinvoke $r1.<org.json.JSONObject: int getInt(java.lang.String)>("new_num");

     label60:
        r0.<com.umeng.newxp.net.g: int j> = $i0;

        return;

     label61:
        $r10 := @caughtexception;

        $r3 = <com.umeng.newxp.net.g: java.lang.String n>;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "Parse json error", $r10);

        return;

     label62:
        r0.<com.umeng.newxp.net.g: int k> = 0;

        goto label57;

     label63:
        r0.<com.umeng.newxp.net.g: int j> = -1;

        return;

        catch org.json.JSONException from label01 to label02 with label61;
        catch org.json.JSONException from label03 to label04 with label61;
        catch org.json.JSONException from label05 to label06 with label61;
        catch org.json.JSONException from label07 to label08 with label61;
        catch org.json.JSONException from label09 to label10 with label61;
        catch org.json.JSONException from label11 to label12 with label61;
        catch org.json.JSONException from label13 to label14 with label61;
        catch org.json.JSONException from label16 to label18 with label61;
        catch org.json.JSONException from label19 to label20 with label61;
        catch org.json.JSONException from label21 to label22 with label61;
        catch org.json.JSONException from label23 to label24 with label61;
        catch org.json.JSONException from label25 to label26 with label61;
        catch org.json.JSONException from label27 to label28 with label61;
        catch org.json.JSONException from label29 to label30 with label61;
        catch org.json.JSONException from label31 to label32 with label61;
        catch org.json.JSONException from label33 to label34 with label61;
        catch org.json.JSONException from label35 to label36 with label61;
        catch org.json.JSONException from label37 to label38 with label61;
        catch org.json.JSONException from label39 to label40 with label61;
        catch org.json.JSONException from label41 to label42 with label61;
        catch org.json.JSONException from label43 to label44 with label61;
        catch org.json.JSONException from label45 to label46 with label61;
        catch org.json.JSONException from label47 to label48 with label61;
        catch org.json.JSONException from label49 to label50 with label61;
        catch org.json.JSONException from label51 to label52 with label61;
        catch org.json.JSONException from label53 to label54 with label61;
        catch org.json.JSONException from label55 to label56 with label61;
        catch org.json.JSONException from label57 to label58 with label61;
        catch org.json.JSONException from label59 to label60 with label61;
    }
}
