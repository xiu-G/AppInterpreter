public class com.parse.entity.mime.content.FileBody extends com.parse.entity.mime.content.AbstractContentBody
{
    private final java.lang.String charset;
    private final java.io.File file;
    private final java.lang.String filename;

    public void <init>(java.io.File)
    {
        com.parse.entity.mime.content.FileBody r0;
        java.io.File $r1;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<com.parse.entity.mime.content.FileBody: void <init>(java.io.File,java.lang.String)>($r1, "application/octet-stream");

        return;
    }

    public void <init>(java.io.File, java.lang.String)
    {
        java.lang.String $r2;
        com.parse.entity.mime.content.FileBody r0;
        java.io.File $r1;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.parse.entity.mime.content.FileBody: void <init>(java.io.File,java.lang.String,java.lang.String)>($r1, $r2, null);

        return;
    }

    public void <init>(java.io.File, java.lang.String, java.lang.String)
    {
        java.lang.String $r2, $r3;
        com.parse.entity.mime.content.FileBody r0;
        java.io.File $r1;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.parse.entity.mime.content.FileBody: void <init>(java.io.File,java.lang.String,java.lang.String,java.lang.String)>($r1, null, $r2, $r3);

        return;
    }

    public void <init>(java.io.File, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;
        com.parse.entity.mime.content.FileBody r0;
        java.io.File $r1;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke r0.<com.parse.entity.mime.content.AbstractContentBody: void <init>(java.lang.String)>($r3);

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File may not be null");

        throw $r5;

     label1:
        r0.<com.parse.entity.mime.content.FileBody: java.io.File file> = $r1;

        if $r2 == null goto label3;

        r0.<com.parse.entity.mime.content.FileBody: java.lang.String filename> = $r2;

     label2:
        r0.<com.parse.entity.mime.content.FileBody: java.lang.String charset> = $r4;

        return;

     label3:
        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        r0.<com.parse.entity.mime.content.FileBody: java.lang.String filename> = $r2;

        goto label2;
    }

    public java.lang.String getCharset()
    {
        java.lang.String r1;
        com.parse.entity.mime.content.FileBody r0;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        r1 = r0.<com.parse.entity.mime.content.FileBody: java.lang.String charset>;

        return r1;
    }

    public long getContentLength()
    {
        long $l0;
        com.parse.entity.mime.content.FileBody r0;
        java.io.File $r1;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        $r1 = r0.<com.parse.entity.mime.content.FileBody: java.io.File file>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }

    public java.io.File getFile()
    {
        com.parse.entity.mime.content.FileBody r0;
        java.io.File r1;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        r1 = r0.<com.parse.entity.mime.content.FileBody: java.io.File file>;

        return r1;
    }

    public java.lang.String getFilename()
    {
        java.lang.String r1;
        com.parse.entity.mime.content.FileBody r0;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        r1 = r0.<com.parse.entity.mime.content.FileBody: java.lang.String filename>;

        return r1;
    }

    public java.io.InputStream getInputStream()
    {
        java.io.FileInputStream $r1;
        com.parse.entity.mime.content.FileBody r0;
        java.io.File $r2;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        $r1 = new java.io.FileInputStream;

        $r2 = r0.<com.parse.entity.mime.content.FileBody: java.io.File file>;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        return $r1;
    }

    public java.lang.String getTransferEncoding()
    {
        com.parse.entity.mime.content.FileBody r0;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        return "binary";
    }

    public void writeTo(java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        java.lang.Throwable $r5;
        byte[] $r4;
        java.io.FileInputStream $r2, $r7;
        java.lang.IllegalArgumentException $r6;
        com.parse.entity.mime.content.FileBody r0;
        java.io.File $r3;
        int $i0, $i1;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        $r1 := @parameter0: java.io.OutputStream;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output stream may not be null");

        throw $r6;

     label1:
        $r7 = new java.io.FileInputStream;

        $r2 = $r7;

        $r3 = r0.<com.parse.entity.mime.content.FileBody: java.io.File file>;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        $r4 = newarray (byte)[4096];

     label2:
        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r4);

     label3:
        $i1 = -1;

        if $i0 == $i1 goto label7;

     label4:
        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r4, 0, $i0);

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

        throw $r5;

     label7:
        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

     label8:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void writeTo(java.io.OutputStream, int)
    {
        java.io.OutputStream $r1;
        int $i0;
        com.parse.entity.mime.content.FileBody r0;

        r0 := @this: com.parse.entity.mime.content.FileBody;

        $r1 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.parse.entity.mime.content.FileBody: void writeTo(java.io.OutputStream)>($r1);

        return;
    }
}
