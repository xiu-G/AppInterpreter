public class com.hp.hpl.sparta.xpath.SimpleStreamTokenizer extends java.lang.Object
{
    private static final int QUOTE;
    public static final int TT_EOF;
    public static final int TT_NUMBER;
    public static final int TT_WORD;
    private static final int WHITESPACE;
    private final java.lang.StringBuffer buf_;
    private final int[] charType_;
    private char inQuote_;
    private int nextType_;
    public int nval;
    private boolean pushedBack_;
    private final java.io.Reader reader_;
    public java.lang.String sval;
    public int ttype;

    public void <init>(java.io.Reader) throws java.io.IOException
    {
        com.hp.hpl.sparta.xpath.SimpleStreamTokenizer r0;
        int[] $r2;
        java.lang.StringBuffer $r3;
        int $i0, $i1;
        java.io.Reader $r1;

        r0 := @this: com.hp.hpl.sparta.xpath.SimpleStreamTokenizer;

        $r1 := @parameter0: java.io.Reader;

        $i0 = 0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype> = -2147483648;

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nval> = -2147483648;

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval> = "";

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.StringBuffer buf_> = $r3;

        $r2 = newarray (int)[256];

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int[] charType_> = $r2;

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: boolean pushedBack_> = 0;

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: char inQuote_> = 0;

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.io.Reader reader_> = $r1;

     label1:
        $r2 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int[] charType_>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label2;

        virtualinvoke r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        return;

     label2:
        if 65 > $i0 goto label3;

        if $i0 <= 90 goto label5;

     label3:
        if 97 > $i0 goto label4;

        if $i0 <= 122 goto label5;

     label4:
        if $i0 != 45 goto label7;

     label5:
        $r2 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int[] charType_>;

        $i1 = -3;

        $r2[$i0] = $i1;

     label6:
        $i0 = $i0 + 1;

        $i0 = (char) $i0;

        goto label1;

     label7:
        if 48 > $i0 goto label8;

        if $i0 > 57 goto label8;

        $r2 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int[] charType_>;

        $i1 = -2;

        $r2[$i0] = $i1;

        goto label6;

     label8:
        if $i0 < 0 goto label9;

        if $i0 > 32 goto label9;

        $r2 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int[] charType_>;

        $i1 = -5;

        $r2[$i0] = $i1;

        goto label6;

     label9:
        $r2 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int[] charType_>;

        $r2[$i0] = $i0;

        goto label6;
    }

    public int nextToken() throws java.io.IOException
    {
        char $c1;
        java.io.IOException $r5;
        java.io.Reader $r1;
        com.hp.hpl.sparta.xpath.SimpleStreamTokenizer r0;
        int[] $r2;
        java.lang.StringBuffer $r3;
        int $i0, $i2, $i3, $i4;
        java.lang.String $r4;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.sparta.xpath.SimpleStreamTokenizer;

        $z0 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: boolean pushedBack_>;

        if $z0 == 0 goto label01;

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: boolean pushedBack_> = 0;

        $i0 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        return $i0;

     label01:
        $i0 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextType_>;

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype> = $i0;

     label02:
        $z0 = 0;

     label03:
        $r1 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.io.Reader reader_>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        $i2 = -1;

        if $i0 != $i2 goto label19;

        $c1 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: char inQuote_>;

        if $c1 == 0 goto label04;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Unterminated quote");

        throw $r5;

     label04:
        $i2 = -1;

     label05:
        $c1 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: char inQuote_>;

        if $c1 != 0 goto label20;

        $i3 = -5;

        if $i2 != $i3 goto label20;

        $z1 = 1;

     label06:
        if $z0 != 0 goto label07;

        if $z1 == 0 goto label21;

     label07:
        $z0 = 1;

     label08:
        if $z1 != 0 goto label03;

        if $i2 == 39 goto label09;

        if $i2 != 34 goto label10;

     label09:
        $c1 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: char inQuote_>;

        if $c1 != 0 goto label22;

        $c1 = (char) $i2;

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: char inQuote_> = $c1;

     label10:
        $c1 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: char inQuote_>;

        if $c1 == 0 goto label11;

        $c1 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: char inQuote_>;

        $i2 = (int) $c1;

     label11:
        if $z0 != 0 goto label13;

        $i3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        $i4 = -1;

        if $i3 < $i4 goto label12;

        $i3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i3 == 39 goto label12;

        $i3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i3 != 34 goto label13;

     label12:
        $i3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i3 == $i2 goto label23;

     label13:
        $z0 = 1;

     label14:
        if $z0 == 0 goto label17;

        $i3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        lookupswitch($i3)
        {
            case -3: goto label24;
            case -2: goto label26;
            case 34: goto label25;
            case 39: goto label25;
            default: goto label15;
        };

     label15:
        $i3 = -5;

        if $i2 == $i3 goto label17;

        $i3 = -6;

        if $i2 != $i3 goto label27;

        $i3 = $i0;

     label16:
        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextType_> = $i3;

     label17:
        lookupswitch($i2)
        {
            case -3: goto label28;
            case -2: goto label28;
            case 34: goto label28;
            case 39: goto label28;
            default: goto label18;
        };

     label18:
        if $z0 == 0 goto label02;

        $i0 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        return $i0;

     label19:
        $r2 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int[] charType_>;

        $i2 = $r2[$i0];

        goto label05;

     label20:
        $z1 = 0;

        goto label06;

     label21:
        $z0 = 0;

        goto label08;

     label22:
        $c1 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: char inQuote_>;

        $i3 = (int) $c1;

        if $i3 != $i2 goto label10;

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: char inQuote_> = 0;

        goto label10;

     label23:
        $z0 = 0;

        goto label14;

     label24:
        $r3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.StringBuffer buf_>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval> = $r4;

        $r3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.StringBuffer buf_>;

        virtualinvoke $r3.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label15;

     label25:
        $r3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.StringBuffer buf_>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.StringBuffer buf_>;

        $i3 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        $i4 = -1;

        $i3 = $i3 + $i4;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(1, $i3);

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval> = $r4;

        $r3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.StringBuffer buf_>;

        virtualinvoke $r3.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label15;

     label26:
        $r3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.StringBuffer buf_>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nval> = $i3;

        $r3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.StringBuffer buf_>;

        virtualinvoke $r3.<java.lang.StringBuffer: void setLength(int)>(0);

        goto label15;

     label27:
        $i3 = $i2;

        goto label16;

     label28:
        $r3 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.StringBuffer buf_>;

        $c1 = (char) $i0;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label18;
    }

    public void ordinaryChar(char)
    {
        com.hp.hpl.sparta.xpath.SimpleStreamTokenizer r0;
        int[] $r1;
        int $i1, $i2;
        char $c0;

        r0 := @this: com.hp.hpl.sparta.xpath.SimpleStreamTokenizer;

        $c0 := @parameter0: char;

        $r1 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int[] charType_>;

        $i1 = (int) $c0;

        $i2 = (int) $c0;

        $r1[$i1] = $i2;

        return;
    }

    public void pushBack()
    {
        com.hp.hpl.sparta.xpath.SimpleStreamTokenizer r0;

        r0 := @this: com.hp.hpl.sparta.xpath.SimpleStreamTokenizer;

        r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: boolean pushedBack_> = 1;

        return;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.sparta.xpath.SimpleStreamTokenizer r0;
        java.lang.StringBuffer $r1;
        int $i0;
        char $c1;
        java.lang.String $r2;

        r0 := @this: com.hp.hpl.sparta.xpath.SimpleStreamTokenizer;

        $i0 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        lookupswitch($i0)
        {
            case -3: goto label3;
            case -2: goto label2;
            case -1: goto label5;
            case 34: goto label3;
            case 39: goto label4;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $i0 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        $c1 = (char) $i0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label2:
        $i0 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nval>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r2;

     label3:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r2 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label4:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r2 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label5:
        return "(EOF)";
    }

    public void wordChars(char, char)
    {
        com.hp.hpl.sparta.xpath.SimpleStreamTokenizer r0;
        int[] $r1;
        int $i2, $i3;
        char $c0, $c1;

        r0 := @this: com.hp.hpl.sparta.xpath.SimpleStreamTokenizer;

        $c1 := @parameter0: char;

        $c0 := @parameter1: char;

     label1:
        $i2 = (int) $c1;

        $i3 = (int) $c0;

        if $i2 <= $i3 goto label2;

        return;

     label2:
        $r1 = r0.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int[] charType_>;

        $i2 = (int) $c1;

        $i3 = -3;

        $r1[$i2] = $i3;

        $i2 = (int) $c1;

        $i2 = $i2 + 1;

        $c1 = (char) $i2;

        goto label1;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int WHITESPACE> = -5;

        <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int TT_WORD> = -3;

        <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int TT_NUMBER> = -2;

        <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int TT_EOF> = -1;

        <com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int QUOTE> = -6;

        return;
    }
}
