class net.adlayout.ad.util.CacheUtil$1 extends java.lang.Thread
{
    private final byte[] val$fileDatas;
    private final java.lang.String val$httpUrl;

    void <init>(java.lang.String, byte[])
    {
        byte[] $r2;
        java.lang.String $r1;
        net.adlayout.ad.util.CacheUtil$1 r0;

        r0 := @this: net.adlayout.ad.util.CacheUtil$1;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        r0.<net.adlayout.ad.util.CacheUtil$1: java.lang.String val$httpUrl> = $r1;

        r0.<net.adlayout.ad.util.CacheUtil$1: byte[] val$fileDatas> = $r2;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable r1;
        byte[] $r5;
        java.io.FileOutputStream r3, $r7;
        java.io.IOException $r8;
        net.adlayout.ad.util.CacheUtil$1 r0;
        java.io.File r2, $r6;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: net.adlayout.ad.util.CacheUtil$1;

        $r4 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label24;

        $r4 = r0.<net.adlayout.ad.util.CacheUtil$1: java.lang.String val$httpUrl>;

     label01:
        $r4 = staticinvoke <net.adlayout.ad.util.CacheUtil: java.lang.String access$0(java.lang.String)>($r4);

     label02:
        if $r4 == null goto label24;

     label03:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

     label04:
        if $z0 == 0 goto label05;

        return;

     label05:
        $r6 = new java.io.File;

        r2 = $r6;

     label06:
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>("/sdcard/adlayoutcache/");

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

     label07:
        if $z0 != 0 goto label09;

     label08:
        virtualinvoke r2.<java.io.File: boolean mkdir()>();

     label09:
        $r6 = new java.io.File;

        r2 = $r6;

     label10:
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>("/sdcard/adlayoutcache/76811a6bc7bc5ed5/");

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

     label11:
        if $z0 != 0 goto label13;

     label12:
        virtualinvoke r2.<java.io.File: boolean mkdir()>();

     label13:
        $r6 = new java.io.File;

        r2 = $r6;

     label14:
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>("/sdcard/adlayoutcache/76811a6bc7bc5ed5/", $r4);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

     label15:
        if $z0 == 0 goto label17;

     label16:
        virtualinvoke r2.<java.io.File: boolean delete()>();

     label17:
        virtualinvoke r2.<java.io.File: boolean createNewFile()>();

     label18:
        $r7 = new java.io.FileOutputStream;

        r3 = $r7;

     label19:
        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

     label20:
        $r5 = r0.<net.adlayout.ad.util.CacheUtil$1: byte[] val$fileDatas>;

     label21:
        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[])>($r5);

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label22:
        return;

     label23:
        r1 := @caughtexception;

        $r8 = (java.io.IOException) r1;

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

     label24:
        return;

        catch java.io.IOException from label01 to label02 with label23;
        catch java.io.IOException from label03 to label04 with label23;
        catch java.io.IOException from label06 to label07 with label23;
        catch java.io.IOException from label08 to label09 with label23;
        catch java.io.IOException from label10 to label11 with label23;
        catch java.io.IOException from label12 to label13 with label23;
        catch java.io.IOException from label14 to label15 with label23;
        catch java.io.IOException from label16 to label18 with label23;
        catch java.io.IOException from label19 to label20 with label23;
        catch java.io.IOException from label21 to label22 with label23;
    }
}
