class com.mobclix.android.sdk.Mobclix$SessionPolling extends java.util.TimerTask
{
    final com.mobclix.android.sdk.Mobclix this$0;

    private void <init>(com.mobclix.android.sdk.Mobclix)
    {
        com.mobclix.android.sdk.Mobclix$SessionPolling r0;
        com.mobclix.android.sdk.Mobclix $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix$SessionPolling;

        $r1 := @parameter0: com.mobclix.android.sdk.Mobclix;

        r0.<com.mobclix.android.sdk.Mobclix$SessionPolling: com.mobclix.android.sdk.Mobclix this$0> = $r1;

        specialinvoke r0.<java.util.TimerTask: void <init>()>();

        return;
    }

    void <init>(com.mobclix.android.sdk.Mobclix, com.mobclix.android.sdk.Mobclix$SessionPolling)
    {
        com.mobclix.android.sdk.Mobclix$SessionPolling r0, $r2;
        com.mobclix.android.sdk.Mobclix $r1;

        r0 := @this: com.mobclix.android.sdk.Mobclix$SessionPolling;

        $r1 := @parameter0: com.mobclix.android.sdk.Mobclix;

        $r2 := @parameter1: com.mobclix.android.sdk.Mobclix$SessionPolling;

        specialinvoke r0.<com.mobclix.android.sdk.Mobclix$SessionPolling: void <init>(com.mobclix.android.sdk.Mobclix)>($r1);

        return;
    }

    public boolean isTopTask()
    {
        android.app.ActivityManager$RunningTaskInfo $r6;
        com.mobclix.android.sdk.Mobclix$SessionPolling r0;
        android.content.Context $r2;
        android.app.ActivityManager r4;
        android.content.ComponentName $r7;
        java.lang.Exception $r10;
        java.util.List $r5;
        java.lang.Object $r3;
        com.mobclix.android.sdk.Mobclix $r1;
        java.lang.String $r8, $r9;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix$SessionPolling;

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix$SessionPolling: com.mobclix.android.sdk.Mobclix this$0>;

        $r2 = staticinvoke <com.mobclix.android.sdk.Mobclix: android.content.Context access$14(com.mobclix.android.sdk.Mobclix)>($r1);

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        r4 = (android.app.ActivityManager) $r3;

        $r5 = virtualinvoke r4.<android.app.ActivityManager: java.util.List getRunningTasks(int)>(1);

        $r3 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (android.app.ActivityManager$RunningTaskInfo) $r3;

        $r7 = $r6.<android.app.ActivityManager$RunningTaskInfo: android.content.ComponentName topActivity>;

        $r8 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r1 = r0.<com.mobclix.android.sdk.Mobclix$SessionPolling: com.mobclix.android.sdk.Mobclix this$0>;

        $r2 = staticinvoke <com.mobclix.android.sdk.Mobclix: android.content.Context access$14(com.mobclix.android.sdk.Mobclix)>($r1);

        $r9 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

     label2:
        return $z0;

     label3:
        $r10 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void run()
    {
        java.lang.Throwable $r2;
        com.mobclix.android.sdk.Mobclix$SessionPolling r0;
        com.mobclix.android.sdk.Mobclix $r1;
        boolean $z0;

        r0 := @this: com.mobclix.android.sdk.Mobclix$SessionPolling;

        entermonitor r0;

     label1:
        $r1 = r0.<com.mobclix.android.sdk.Mobclix$SessionPolling: com.mobclix.android.sdk.Mobclix this$0>;

        $z0 = virtualinvoke r0.<com.mobclix.android.sdk.Mobclix$SessionPolling: boolean isTopTask()>();

        staticinvoke <com.mobclix.android.sdk.Mobclix: void access$22(com.mobclix.android.sdk.Mobclix,boolean)>($r1, $z0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
