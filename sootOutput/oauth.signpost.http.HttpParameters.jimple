public class oauth.signpost.http.HttpParameters extends java.lang.Object implements java.util.Map, java.io.Serializable
{
    private java.util.TreeMap wrappedMap;

    public void <init>()
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r1;

        r0 := @this: oauth.signpost.http.HttpParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap> = $r1;

        return;
    }

    public void clear()
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r1;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        virtualinvoke $r1.<java.util.TreeMap: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $z0 = virtualinvoke $r2.<java.util.TreeMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Iterator $r4;
        java.util.SortedSet r6;
        java.util.Collection $r3;
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r2;
        java.lang.Object $r1, $r5;
        boolean $z0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r3 = virtualinvoke $r2.<java.util.TreeMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.SortedSet) $r5;

        $z0 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r1;
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r2;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r2 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.util.Set entrySet()>();

        return $r1;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        java.lang.Object $r1;
        oauth.signpost.http.HttpParameters r0;
        java.util.SortedSet $r2;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.util.SortedSet get(java.lang.Object)>($r1);

        return $r2;
    }

    public java.util.SortedSet get(java.lang.Object)
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r2;
        java.util.SortedSet $r3;
        java.lang.Object $r1;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.util.SortedSet) $r1;

        return $r3;
    }

    public java.lang.String getAsHeaderElement(java.lang.String)
    {
        oauth.signpost.http.HttpParameters r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.lang.String getFirst(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String getAsQueryString(java.lang.Object)
    {
        java.util.Iterator $r6;
        java.util.Set r5;
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r4;
        java.lang.StringBuilder r1, $r7;
        java.lang.Object r2;
        java.lang.String r3, $r8;
        boolean $z0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        r2 := @parameter0: java.lang.Object;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        r3 = (java.lang.String) r2;

        r3 = staticinvoke <oauth.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>(r3);

        $r4 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        r2 = virtualinvoke $r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.util.Set) r2;

        if r5 != null goto label1;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return r3;

     label1:
        $r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        r2 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) r2;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        goto label2;

     label3:
        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return r3;
    }

    public java.lang.String getFirst(java.lang.Object)
    {
        java.lang.Object $r1;
        java.lang.String $r2;
        oauth.signpost.http.HttpParameters r0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.lang.String getFirst(java.lang.Object,boolean)>($r1, 0);

        return $r2;
    }

    public java.lang.String getFirst(java.lang.Object, boolean)
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r2;
        java.util.SortedSet r3;
        java.lang.Object $r1;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r2 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (java.util.SortedSet) $r1;

        if r3 == null goto label1;

        $z1 = interfaceinvoke r3.<java.util.SortedSet: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = interfaceinvoke r3.<java.util.SortedSet: java.lang.Object first()>();

        r4 = (java.lang.String) $r1;

        goto label3;

     label3:
        return r4;
    }

    public boolean isEmpty()
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r1;
        boolean $z0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $z0 = virtualinvoke $r1.<java.util.TreeMap: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r1;
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r2;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r2 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.util.Set keySet()>();

        return $r1;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.SortedSet $r1;
        java.lang.Object $r2, $r3;
        java.lang.String $r4;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) $r2;

        $r1 = (java.util.SortedSet) $r3;

        $r1 = virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.util.SortedSet put(java.lang.String,java.util.SortedSet)>($r4, $r1);

        return $r1;
    }

    public java.lang.String put(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        oauth.signpost.http.HttpParameters r0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.lang.String put(java.lang.String,java.lang.String,boolean)>($r1, $r2, 0);

        return $r1;
    }

    public java.lang.String put(java.lang.String, java.lang.String, boolean)
    {
        java.util.SortedSet $r6;
        java.util.TreeSet $r5;
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r3;
        java.lang.Object $r4;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r4 = virtualinvoke $r3.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.SortedSet) $r4;

        if $r4 != null goto label2;

        $r5 = new java.util.TreeSet;

        $r4 = $r5;

        specialinvoke $r5.<java.util.TreeSet: void <init>()>();

        $r3 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <oauth.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r1);

     label1:
        virtualinvoke $r3.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label2:
        if $r2 == null goto label4;

        if $z0 == 0 goto label3;

        $r2 = staticinvoke <oauth.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r2);

     label3:
        $r6 = (java.util.SortedSet) $r4;

        interfaceinvoke $r6.<java.util.SortedSet: boolean add(java.lang.Object)>($r2);

     label4:
        return $r2;
    }

    public java.util.SortedSet put(java.lang.String, java.util.SortedSet)
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.SortedSet r2;
        java.util.TreeMap $r4;
        java.lang.Object $r3;
        java.lang.String $r1;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.SortedSet;

        $r4 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r3 = virtualinvoke $r4.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r2);

        r2 = (java.util.SortedSet) $r3;

        return r2;
    }

    public java.util.SortedSet put(java.lang.String, java.util.SortedSet, boolean)
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.SortedSet r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.String $r1, r5;
        boolean $z0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.SortedSet;

        $z0 := @parameter2: boolean;

        virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.util.SortedSet remove(java.lang.Object)>($r1);

        $r3 = interfaceinvoke r2.<java.util.SortedSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.lang.String put(java.lang.String,java.lang.String,boolean)>($r1, r5, 1);

        goto label1;

     label2:
        r2 = virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.util.SortedSet get(java.lang.Object)>($r1);

        return r2;
    }

    public void putAll(java.util.Map)
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r2;
        java.util.Map r1;

        r0 := @this: oauth.signpost.http.HttpParameters;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        virtualinvoke $r2.<java.util.TreeMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public void putAll(java.util.Map, boolean)
    {
        java.util.Iterator $r3;
        java.util.SortedSet $r6;
        java.util.Set $r2;
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r7;
        java.util.Map r1;
        java.lang.Object $r4;
        java.lang.String r5;
        boolean $z0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        r1 := @parameter0: java.util.Map;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r6 = (java.util.SortedSet) $r4;

        virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.util.SortedSet put(java.lang.String,java.util.SortedSet,boolean)>(r5, $r6, 1);

        goto label1;

     label2:
        $r7 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        virtualinvoke $r7.<java.util.TreeMap: void putAll(java.util.Map)>(r1);

     label3:
        return;
    }

    public void putAll(java.lang.String[], boolean)
    {
        oauth.signpost.http.HttpParameters r0;
        int i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.String[];

        $z0 := @parameter1: boolean;

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        $i1 = $i1 + -1;

        if i0 >= $i1 goto label2;

        $r2 = $r1[i0];

        $i1 = i0 + 1;

        $r3 = $r1[$i1];

        virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.lang.String put(java.lang.String,java.lang.String,boolean)>($r2, $r3, 1);

        i0 = i0 + 2;

        goto label1;

     label2:
        return;
    }

    public void putMap(java.util.Map)
    {
        java.util.Iterator $r3;
        java.util.SortedSet $r6;
        java.util.Collection $r8;
        java.util.Set $r2;
        java.util.TreeSet $r9;
        oauth.signpost.http.HttpParameters r0;
        java.util.Map r1;
        java.lang.Object $r4, $r7;
        java.lang.String r5;
        boolean $z0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        r1 := @parameter0: java.util.Map;

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.util.SortedSet get(java.lang.Object)>(r5);

        $r4 = $r6;

        if $r6 != null goto label2;

        $r9 = new java.util.TreeSet;

        $r4 = $r9;

        specialinvoke $r9.<java.util.TreeSet: void <init>()>();

        $r6 = (java.util.SortedSet) $r4;

        virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.util.SortedSet put(java.lang.String,java.util.SortedSet)>(r5, $r6);

     label2:
        $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r8 = (java.util.Collection) $r7;

        $r6 = (java.util.SortedSet) $r4;

        interfaceinvoke $r6.<java.util.SortedSet: boolean addAll(java.util.Collection)>($r8);

        goto label1;

     label3:
        return;
    }

    public java.lang.String putNull(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        oauth.signpost.http.HttpParameters r0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.lang.String put(java.lang.String,java.lang.String)>($r1, $r2);

        return $r1;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        java.lang.Object $r1;
        oauth.signpost.http.HttpParameters r0;
        java.util.SortedSet $r2;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<oauth.signpost.http.HttpParameters: java.util.SortedSet remove(java.lang.Object)>($r1);

        return $r2;
    }

    public java.util.SortedSet remove(java.lang.Object)
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r2;
        java.util.SortedSet $r3;
        java.lang.Object $r1;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r3 = (java.util.SortedSet) $r1;

        return $r3;
    }

    public int size()
    {
        java.util.Iterator $r3;
        java.util.SortedSet $r6;
        java.util.Set $r2;
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r1;
        int i0, $i1;
        java.lang.Object $r4;
        java.lang.String r5;
        boolean $z0;

        r0 := @this: oauth.signpost.http.HttpParameters;

        i0 = 0;

        $r1 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r2 = virtualinvoke $r1.<java.util.TreeMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r1 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r4 = virtualinvoke $r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r5);

        $r6 = (java.util.SortedSet) $r4;

        $i1 = interfaceinvoke $r6.<java.util.SortedSet: int size()>();

        i0 = i0 + $i1;

        goto label1;

     label2:
        return i0;
    }

    public java.util.Collection values()
    {
        oauth.signpost.http.HttpParameters r0;
        java.util.TreeMap $r2;
        java.util.Collection $r1;

        r0 := @this: oauth.signpost.http.HttpParameters;

        $r2 = r0.<oauth.signpost.http.HttpParameters: java.util.TreeMap wrappedMap>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.util.Collection values()>();

        return $r1;
    }
}
