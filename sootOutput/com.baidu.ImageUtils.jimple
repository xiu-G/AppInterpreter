public class com.baidu.ImageUtils extends java.lang.Object
{
    private static java.util.Map cacheAssetsPicture;
    private static int densityDpi;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.baidu.ImageUtils: java.util.Map cacheAssetsPicture> = $r0;

        <com.baidu.ImageUtils: int densityDpi> = 0;

        return;
    }

    public void <init>()
    {
        com.baidu.ImageUtils r0;

        r0 := @this: com.baidu.ImageUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.drawable.Drawable bitmap2drawable(android.content.Context, android.graphics.Bitmap)
    {
        android.content.Context $r0;
        android.view.WindowManager r5;
        android.graphics.drawable.BitmapDrawable r2;
        android.util.DisplayMetrics r3;
        android.graphics.Bitmap $r1;
        int $i0;
        android.view.Display $r6;
        float $f0, $f1;
        java.lang.Object $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.graphics.Bitmap;

        $i0 = <com.baidu.ImageUtils: int densityDpi>;

        if $i0 != 0 goto label1;

        r3 = new android.util.DisplayMetrics;

        specialinvoke r3.<android.util.DisplayMetrics: void <init>()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r5 = (android.view.WindowManager) $r4;

        $r6 = interfaceinvoke r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r6.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r3);

        $i0 = r3.<android.util.DisplayMetrics: int densityDpi>;

        <com.baidu.ImageUtils: int densityDpi> = $i0;

     label1:
        r2 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke r2.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r1);

        $i0 = <com.baidu.ImageUtils: int densityDpi>;

        $f0 = (float) $i0;

        $i0 = <com.baidu.ImageUtils: int densityDpi>;

        $f1 = (float) $i0;

        $f1 = $f1 * 1.0F;

        $f1 = $f1 / 240.0F;

        $f0 = $f0 * $f1;

        $i0 = (int) $f0;

        virtualinvoke r2.<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>($i0);

        return r2;
    }

    public static void bitmapStroe(android.graphics.Bitmap, com.baidu.ImageUtils$ImageType, java.lang.String)
    {
        java.lang.Throwable $r8;
        java.io.FileOutputStream r4;
        com.baidu.ImageUtils$ImageType $r1, $r6;
        java.io.File r3, $r5;
        android.graphics.Bitmap $r0;
        android.graphics.Bitmap$CompressFormat $r7;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $r1 := @parameter1: com.baidu.ImageUtils$ImageType;

        $r2 := @parameter2: java.lang.String;

        r3 = new java.io.File;

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r2);

     label01:
        $r5 = virtualinvoke r3.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label02:
        if $z0 != 0 goto label04;

     label03:
        virtualinvoke $r5.<java.io.File: boolean mkdirs()>();

     label04:
        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

     label05:
        if $z0 != 0 goto label07;

     label06:
        virtualinvoke r3.<java.io.File: boolean createNewFile()>();

     label07:
        r4 = new java.io.FileOutputStream;

     label08:
        specialinvoke r4.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

     label09:
        $r6 = <com.baidu.ImageUtils$ImageType: com.baidu.ImageUtils$ImageType png>;

        if $r1 != $r6 goto label14;

        $r7 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

     label10:
        $z0 = virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r7, 100, r4);

     label11:
        if $z0 == 0 goto label16;

     label12:
        virtualinvoke r4.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

     label13:
        return;

     label14:
        $r7 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        goto label10;

     label15:
        $r8 := @caughtexception;

     label16:
        return;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.io.IOException from label03 to label05 with label15;
        catch java.io.IOException from label06 to label07 with label15;
        catch java.io.IOException from label08 to label09 with label15;
        catch java.io.IOException from label10 to label11 with label15;
        catch java.io.IOException from label12 to label13 with label15;
    }

    public static android.graphics.Bitmap getAssetsBitmap(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r9;
        android.content.Context $r0;
        android.content.res.AssetManager $r6;
        android.graphics.Bitmap r3, $r8;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.String $r1;
        java.lang.ref.SoftReference $r2;
        boolean $z0;
        java.io.InputStream $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r3 = null;

        $r4 = <com.baidu.ImageUtils: java.util.Map cacheAssetsPicture>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r4 = <com.baidu.ImageUtils: java.util.Map cacheAssetsPicture>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r2 = (java.lang.ref.SoftReference) $r5;

        $r5 = virtualinvoke $r2.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r3 = (android.graphics.Bitmap) $r5;

     label1:
        if r3 != null goto label7;

     label2:
        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r7 = virtualinvoke $r6.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

        $r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r7);

     label3:
        r3 = $r8;

        $r4 = <com.baidu.ImageUtils: java.util.Map cacheAssetsPicture>;

        $r2 = new java.lang.ref.SoftReference;

     label4:
        specialinvoke $r2.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r8);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label5:
        return $r8;

     label6:
        $r9 := @caughtexception;

     label7:
        return r3;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public static android.graphics.drawable.Drawable getAssetsDrawable(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.graphics.Bitmap $r2;
        java.lang.String $r1;
        android.graphics.drawable.Drawable $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.baidu.ImageUtils: android.graphics.Bitmap getAssetsBitmap(android.content.Context,java.lang.String)>($r0, $r1);

        $r3 = staticinvoke <com.baidu.ImageUtils: android.graphics.drawable.Drawable bitmap2drawable(android.content.Context,android.graphics.Bitmap)>($r0, $r2);

        return $r3;
    }

    public static android.graphics.Bitmap getBitmap(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        android.graphics.Bitmap $r3;
        java.lang.String $r1;
        java.io.FileInputStream r2;
        android.graphics.Bitmap$Config $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r2 = new java.io.FileInputStream;

     label1:
        specialinvoke r2.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(50, 50, $r5);

        return $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static android.graphics.Bitmap getBitmapFromUrl(java.lang.String)
    {
        java.lang.Throwable $r9;
        java.io.BufferedInputStream r1;
        java.net.URL r2;
        android.graphics.Bitmap r5, $r8;
        java.net.URLConnection $r6;
        java.lang.String $r0, $r3, $r4;
        boolean $z0;
        java.io.InputStream $r7;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r3 = "";

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        r5 = null;

        r2 = new java.net.URL;

     label3:
        specialinvoke r2.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r6 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>();

        $r7 = virtualinvoke $r6.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label4:
        r1 = new java.io.BufferedInputStream;

     label5:
        specialinvoke r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r7);

        $r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r1);

     label6:
        r5 = $r8;

     label7:
        virtualinvoke r1.<java.io.BufferedInputStream: void close()>();

     label8:
        return $r8;

     label9:
        $r9 := @caughtexception;

        return r5;

        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label6 with label9;
        catch java.io.IOException from label7 to label8 with label9;
    }

    public static android.graphics.drawable.Drawable getDrawable(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.graphics.Bitmap $r2;
        java.lang.String $r1;
        android.graphics.drawable.Drawable $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.baidu.ImageUtils: android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String)>($r0, $r1);

        $r3 = staticinvoke <com.baidu.ImageUtils: android.graphics.drawable.Drawable bitmap2drawable(android.content.Context,android.graphics.Bitmap)>($r0, $r2);

        return $r3;
    }
}
