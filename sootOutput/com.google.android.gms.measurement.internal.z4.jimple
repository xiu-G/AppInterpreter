public final class com.google.android.gms.measurement.internal.z4 extends com.google.android.gms.measurement.internal.x5
{
    private static final java.util.concurrent.atomic.AtomicLong l;
    private com.google.android.gms.measurement.internal.d5 c;
    private com.google.android.gms.measurement.internal.d5 d;
    private final java.util.concurrent.PriorityBlockingQueue e;
    private final java.util.concurrent.BlockingQueue f;
    private final java.lang.Thread$UncaughtExceptionHandler g;
    private final java.lang.Thread$UncaughtExceptionHandler h;
    private final java.lang.Object i;
    private final java.util.concurrent.Semaphore j;
    private volatile boolean k;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicLong $r0;

        $r0 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(-9223372036854775808L);

        <com.google.android.gms.measurement.internal.z4: java.util.concurrent.atomic.AtomicLong l> = $r0;

        return;
    }

    void <init>(com.google.android.gms.measurement.internal.c5)
    {
        com.google.android.gms.measurement.internal.z4 r0;
        java.util.concurrent.Semaphore $r3;
        com.google.android.gms.measurement.internal.c5 $r1;
        java.lang.Object $r2;
        com.google.android.gms.measurement.internal.b5 $r6;
        java.util.concurrent.LinkedBlockingQueue $r5;
        java.util.concurrent.PriorityBlockingQueue $r4;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        $r1 := @parameter0: com.google.android.gms.measurement.internal.c5;

        specialinvoke r0.<com.google.android.gms.measurement.internal.x5: void <init>(com.google.android.gms.measurement.internal.c5)>($r1);

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.google.android.gms.measurement.internal.z4: java.lang.Object i> = $r2;

        $r3 = new java.util.concurrent.Semaphore;

        specialinvoke $r3.<java.util.concurrent.Semaphore: void <init>(int)>(2);

        r0.<com.google.android.gms.measurement.internal.z4: java.util.concurrent.Semaphore j> = $r3;

        $r4 = new java.util.concurrent.PriorityBlockingQueue;

        specialinvoke $r4.<java.util.concurrent.PriorityBlockingQueue: void <init>()>();

        r0.<com.google.android.gms.measurement.internal.z4: java.util.concurrent.PriorityBlockingQueue e> = $r4;

        $r5 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r5.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<com.google.android.gms.measurement.internal.z4: java.util.concurrent.BlockingQueue f> = $r5;

        $r6 = new com.google.android.gms.measurement.internal.b5;

        specialinvoke $r6.<com.google.android.gms.measurement.internal.b5: void <init>(com.google.android.gms.measurement.internal.z4,java.lang.String)>(r0, "Thread death: Uncaught exception on worker thread");

        r0.<com.google.android.gms.measurement.internal.z4: java.lang.Thread$UncaughtExceptionHandler g> = $r6;

        $r6 = new com.google.android.gms.measurement.internal.b5;

        specialinvoke $r6.<com.google.android.gms.measurement.internal.b5: void <init>(com.google.android.gms.measurement.internal.z4,java.lang.String)>(r0, "Thread death: Uncaught exception on network thread");

        r0.<com.google.android.gms.measurement.internal.z4: java.lang.Thread$UncaughtExceptionHandler h> = $r6;

        return;
    }

    static com.google.android.gms.measurement.internal.d5 A(com.google.android.gms.measurement.internal.z4, com.google.android.gms.measurement.internal.d5)
    {
        com.google.android.gms.measurement.internal.d5 $r1;
        com.google.android.gms.measurement.internal.z4 $r0;

        $r0 := @parameter0: com.google.android.gms.measurement.internal.z4;

        $r1 := @parameter1: com.google.android.gms.measurement.internal.d5;

        $r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 d> = null;

        return null;
    }

    static boolean D(com.google.android.gms.measurement.internal.z4)
    {
        com.google.android.gms.measurement.internal.z4 $r0;
        boolean z0;

        $r0 := @parameter0: com.google.android.gms.measurement.internal.z4;

        z0 = $r0.<com.google.android.gms.measurement.internal.z4: boolean k>;

        return z0;
    }

    static java.lang.Object E(com.google.android.gms.measurement.internal.z4)
    {
        com.google.android.gms.measurement.internal.z4 $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.google.android.gms.measurement.internal.z4;

        r1 = $r0.<com.google.android.gms.measurement.internal.z4: java.lang.Object i>;

        return r1;
    }

    static com.google.android.gms.measurement.internal.d5 F(com.google.android.gms.measurement.internal.z4)
    {
        com.google.android.gms.measurement.internal.d5 r1;
        com.google.android.gms.measurement.internal.z4 $r0;

        $r0 := @parameter0: com.google.android.gms.measurement.internal.z4;

        r1 = $r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 c>;

        return r1;
    }

    static com.google.android.gms.measurement.internal.d5 G(com.google.android.gms.measurement.internal.z4)
    {
        com.google.android.gms.measurement.internal.d5 r1;
        com.google.android.gms.measurement.internal.z4 $r0;

        $r0 := @parameter0: com.google.android.gms.measurement.internal.z4;

        r1 = $r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 d>;

        return r1;
    }

    static java.util.concurrent.atomic.AtomicLong I()
    {
        java.util.concurrent.atomic.AtomicLong r0;

        r0 = <com.google.android.gms.measurement.internal.z4: java.util.concurrent.atomic.AtomicLong l>;

        return r0;
    }

    static com.google.android.gms.measurement.internal.d5 u(com.google.android.gms.measurement.internal.z4, com.google.android.gms.measurement.internal.d5)
    {
        com.google.android.gms.measurement.internal.d5 $r1;
        com.google.android.gms.measurement.internal.z4 $r0;

        $r0 := @parameter0: com.google.android.gms.measurement.internal.z4;

        $r1 := @parameter1: com.google.android.gms.measurement.internal.d5;

        $r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 c> = null;

        return null;
    }

    static java.util.concurrent.Semaphore x(com.google.android.gms.measurement.internal.z4)
    {
        com.google.android.gms.measurement.internal.z4 $r0;
        java.util.concurrent.Semaphore r1;

        $r0 := @parameter0: com.google.android.gms.measurement.internal.z4;

        r1 = $r0.<com.google.android.gms.measurement.internal.z4: java.util.concurrent.Semaphore j>;

        return r1;
    }

    private final void y(com.google.android.gms.measurement.internal.a5)
    {
        java.lang.Throwable $r6;
        com.google.android.gms.measurement.internal.z4 r0;
        java.lang.Thread$UncaughtExceptionHandler $r5;
        com.google.android.gms.measurement.internal.d5 $r4;
        java.lang.Object $r1;
        com.google.android.gms.measurement.internal.a5 $r3;
        java.util.concurrent.PriorityBlockingQueue $r2;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        $r3 := @parameter0: com.google.android.gms.measurement.internal.a5;

        $r1 = r0.<com.google.android.gms.measurement.internal.z4: java.lang.Object i>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.google.android.gms.measurement.internal.z4: java.util.concurrent.PriorityBlockingQueue e>;

        virtualinvoke $r2.<java.util.concurrent.PriorityBlockingQueue: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 c>;

        if $r4 != null goto label2;

        $r4 = new com.google.android.gms.measurement.internal.d5;

        $r2 = r0.<com.google.android.gms.measurement.internal.z4: java.util.concurrent.PriorityBlockingQueue e>;

        specialinvoke $r4.<com.google.android.gms.measurement.internal.d5: void <init>(com.google.android.gms.measurement.internal.z4,java.lang.String,java.util.concurrent.BlockingQueue)>(r0, "Measurement Worker", $r2);

        r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 c> = $r4;

        $r5 = r0.<com.google.android.gms.measurement.internal.z4: java.lang.Thread$UncaughtExceptionHandler g>;

        virtualinvoke $r4.<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r5);

        $r4 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 c>;

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        goto label3;

     label2:
        $r4 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 c>;

        virtualinvoke $r4.<com.google.android.gms.measurement.internal.d5: void a()>();

     label3:
        exitmonitor $r1;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final java.util.concurrent.Future B(java.util.concurrent.Callable)
    {
        com.google.android.gms.measurement.internal.z4 r0;
        java.lang.Thread $r2;
        com.google.android.gms.measurement.internal.d5 $r4;
        java.util.concurrent.Callable $r3;
        com.google.android.gms.measurement.internal.a5 $r1;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        $r3 := @parameter0: java.util.concurrent.Callable;

        virtualinvoke r0.<com.google.android.gms.measurement.internal.x5: void p()>();

        staticinvoke <com.google.android.gms.common.internal.o: java.lang.Object j(java.lang.Object)>($r3);

        $r1 = new com.google.android.gms.measurement.internal.a5;

        specialinvoke $r1.<com.google.android.gms.measurement.internal.a5: void <init>(com.google.android.gms.measurement.internal.z4,java.util.concurrent.Callable,boolean,java.lang.String)>(r0, $r3, 1, "Task exception on worker thread");

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 c>;

        if $r2 != $r4 goto label1;

        virtualinvoke $r1.<java.util.concurrent.FutureTask: void run()>();

        return $r1;

     label1:
        specialinvoke r0.<com.google.android.gms.measurement.internal.z4: void y(com.google.android.gms.measurement.internal.a5)>($r1);

        return $r1;
    }

    public final void C(java.lang.Runnable)
    {
        java.lang.Throwable $r7;
        com.google.android.gms.measurement.internal.d5 $r5;
        java.util.concurrent.BlockingQueue $r4;
        com.google.android.gms.measurement.internal.a5 $r2;
        java.lang.Runnable $r1;
        com.google.android.gms.measurement.internal.z4 r0;
        java.lang.Thread$UncaughtExceptionHandler $r6;
        java.lang.Object $r3;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        $r1 := @parameter0: java.lang.Runnable;

        virtualinvoke r0.<com.google.android.gms.measurement.internal.x5: void p()>();

        staticinvoke <com.google.android.gms.common.internal.o: java.lang.Object j(java.lang.Object)>($r1);

        $r2 = new com.google.android.gms.measurement.internal.a5;

        specialinvoke $r2.<com.google.android.gms.measurement.internal.a5: void <init>(com.google.android.gms.measurement.internal.z4,java.lang.Runnable,boolean,java.lang.String)>(r0, $r1, 0, "Task exception on network thread");

        $r3 = r0.<com.google.android.gms.measurement.internal.z4: java.lang.Object i>;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.google.android.gms.measurement.internal.z4: java.util.concurrent.BlockingQueue f>;

        interfaceinvoke $r4.<java.util.concurrent.BlockingQueue: boolean add(java.lang.Object)>($r2);

        $r5 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 d>;

        if $r5 != null goto label2;

        $r5 = new com.google.android.gms.measurement.internal.d5;

        $r4 = r0.<com.google.android.gms.measurement.internal.z4: java.util.concurrent.BlockingQueue f>;

        specialinvoke $r5.<com.google.android.gms.measurement.internal.d5: void <init>(com.google.android.gms.measurement.internal.z4,java.lang.String,java.util.concurrent.BlockingQueue)>(r0, "Measurement Network", $r4);

        r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 d> = $r5;

        $r6 = r0.<com.google.android.gms.measurement.internal.z4: java.lang.Thread$UncaughtExceptionHandler h>;

        virtualinvoke $r5.<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r6);

        $r5 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 d>;

        virtualinvoke $r5.<java.lang.Thread: void start()>();

        goto label3;

     label2:
        $r5 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 d>;

        virtualinvoke $r5.<com.google.android.gms.measurement.internal.d5: void a()>();

     label3:
        exitmonitor $r3;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r3;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final boolean H()
    {
        com.google.android.gms.measurement.internal.d5 $r1;
        com.google.android.gms.measurement.internal.z4 r0;
        java.lang.Thread $r2;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 c>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final void b()
    {
        com.google.android.gms.measurement.internal.z4 r0;
        java.lang.IllegalStateException $r3;
        java.lang.Thread $r1;
        com.google.android.gms.measurement.internal.d5 $r2;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 d>;

        if $r1 != $r2 goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Call expected from network thread");

        throw $r3;
    }

    public final void c()
    {
        com.google.android.gms.measurement.internal.z4 r0;
        java.lang.IllegalStateException $r3;
        java.lang.Thread $r1;
        com.google.android.gms.measurement.internal.d5 $r2;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 c>;

        if $r1 != $r2 goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Call expected from worker thread");

        throw $r3;
    }

    protected final boolean s()
    {
        com.google.android.gms.measurement.internal.z4 r0;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        return 0;
    }

    final java.lang.Object v(java.util.concurrent.atomic.AtomicReference, long, java.lang.String, java.lang.Runnable)
    {
        java.lang.Throwable $r1, $r10;
        long $l0;
        com.google.android.gms.measurement.internal.a4 $r8;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Runnable $r4;
        com.google.android.gms.measurement.internal.z4 r0, $r5;
        com.google.android.gms.measurement.internal.y3 $r7;
        int $i1;
        java.lang.Object $r6;
        java.lang.String $r3, $r9;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        $r2 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        $l0 := @parameter1: long;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.Runnable;

        entermonitor $r2;

     label01:
        $r5 = virtualinvoke r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.z4 k()>();

        virtualinvoke $r5.<com.google.android.gms.measurement.internal.z4: void z(java.lang.Runnable)>($r4);

     label02:
        virtualinvoke $r2.<java.lang.Object: void wait(long)>(15000L);

     label03:
        exitmonitor $r2;

     label04:
        $r6 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r6 != null goto label14;

        $r7 = virtualinvoke r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.y3 m()>();

        $r8 = virtualinvoke $r7.<com.google.android.gms.measurement.internal.y3: com.google.android.gms.measurement.internal.a4 J()>();

        $r9 = "Timed out waiting for ";

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 == 0 goto label05;

        $r3 = virtualinvoke $r9.<java.lang.String: java.lang.String concat(java.lang.String)>($r3);

        goto label06;

     label05:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(java.lang.String)>("Timed out waiting for ");

     label06:
        virtualinvoke $r8.<com.google.android.gms.measurement.internal.a4: void a(java.lang.String)>($r3);

        return $r6;

     label07:
        $r7 = virtualinvoke r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.y3 m()>();

        $r8 = virtualinvoke $r7.<com.google.android.gms.measurement.internal.y3: com.google.android.gms.measurement.internal.a4 J()>();

        $r9 = "Interrupted waiting for ";

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 == 0 goto label08;

        $r3 = virtualinvoke $r9.<java.lang.String: java.lang.String concat(java.lang.String)>($r3);

        goto label09;

     label08:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(java.lang.String)>("Interrupted waiting for ");

     label09:
        virtualinvoke $r8.<com.google.android.gms.measurement.internal.a4: void a(java.lang.String)>($r3);

        exitmonitor $r2;

     label10:
        return null;

     label11:
        $r10 := @caughtexception;

        exitmonitor $r2;

     label12:
        throw $r10;

     label13:
        $r1 := @caughtexception;

        goto label07;

     label14:
        return $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.InterruptedException from label02 to label03 with label13;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label07 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public final java.util.concurrent.Future w(java.util.concurrent.Callable)
    {
        com.google.android.gms.measurement.internal.d5 $r4;
        java.util.concurrent.Callable $r2;
        com.google.android.gms.measurement.internal.a4 $r7;
        com.google.android.gms.measurement.internal.a5 $r1;
        java.util.concurrent.PriorityBlockingQueue $r5;
        com.google.android.gms.measurement.internal.z4 r0;
        com.google.android.gms.measurement.internal.y3 $r6;
        java.lang.Thread $r3;
        boolean $z0;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        $r2 := @parameter0: java.util.concurrent.Callable;

        virtualinvoke r0.<com.google.android.gms.measurement.internal.x5: void p()>();

        staticinvoke <com.google.android.gms.common.internal.o: java.lang.Object j(java.lang.Object)>($r2);

        $r1 = new com.google.android.gms.measurement.internal.a5;

        specialinvoke $r1.<com.google.android.gms.measurement.internal.a5: void <init>(com.google.android.gms.measurement.internal.z4,java.util.concurrent.Callable,boolean,java.lang.String)>(r0, $r2, 0, "Task exception on worker thread");

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.d5 c>;

        if $r3 != $r4 goto label2;

        $r5 = r0.<com.google.android.gms.measurement.internal.z4: java.util.concurrent.PriorityBlockingQueue e>;

        $z0 = virtualinvoke $r5.<java.util.concurrent.PriorityBlockingQueue: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r0.<com.google.android.gms.measurement.internal.z4: com.google.android.gms.measurement.internal.y3 m()>();

        $r7 = virtualinvoke $r6.<com.google.android.gms.measurement.internal.y3: com.google.android.gms.measurement.internal.a4 J()>();

        virtualinvoke $r7.<com.google.android.gms.measurement.internal.a4: void a(java.lang.String)>("Callable skipped the worker queue.");

     label1:
        virtualinvoke $r1.<java.util.concurrent.FutureTask: void run()>();

        return $r1;

     label2:
        specialinvoke r0.<com.google.android.gms.measurement.internal.z4: void y(com.google.android.gms.measurement.internal.a5)>($r1);

        return $r1;
    }

    public final void z(java.lang.Runnable)
    {
        com.google.android.gms.measurement.internal.z4 r0;
        com.google.android.gms.measurement.internal.a5 $r2;
        java.lang.Runnable $r1;

        r0 := @this: com.google.android.gms.measurement.internal.z4;

        $r1 := @parameter0: java.lang.Runnable;

        virtualinvoke r0.<com.google.android.gms.measurement.internal.x5: void p()>();

        staticinvoke <com.google.android.gms.common.internal.o: java.lang.Object j(java.lang.Object)>($r1);

        $r2 = new com.google.android.gms.measurement.internal.a5;

        specialinvoke $r2.<com.google.android.gms.measurement.internal.a5: void <init>(com.google.android.gms.measurement.internal.z4,java.lang.Runnable,boolean,java.lang.String)>(r0, $r1, 0, "Task exception on worker thread");

        specialinvoke r0.<com.google.android.gms.measurement.internal.z4: void y(com.google.android.gms.measurement.internal.a5)>($r2);

        return;
    }
}
