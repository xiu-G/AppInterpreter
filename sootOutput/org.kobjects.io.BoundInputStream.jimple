public class org.kobjects.io.BoundInputStream extends java.io.InputStream
{
    java.io.InputStream is;
    int remaining;

    public void <init>(java.io.InputStream, int)
    {
        int $i0;
        org.kobjects.io.BoundInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.kobjects.io.BoundInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.kobjects.io.BoundInputStream: java.io.InputStream is> = $r1;

        r0.<org.kobjects.io.BoundInputStream: int remaining> = $i0;

        return;
    }

    public int available() throws java.io.IOException
    {
        int $i0, $i1;
        org.kobjects.io.BoundInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.kobjects.io.BoundInputStream;

        $r1 = r0.<org.kobjects.io.BoundInputStream: java.io.InputStream is>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        $i1 = r0.<org.kobjects.io.BoundInputStream: int remaining>;

        if $i0 >= $i1 goto label1;

        return $i0;

     label1:
        $i0 = r0.<org.kobjects.io.BoundInputStream: int remaining>;

        return $i0;
    }

    public void close()
    {
        java.lang.Throwable $r2;
        org.kobjects.io.BoundInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.kobjects.io.BoundInputStream;

        $r1 = r0.<org.kobjects.io.BoundInputStream: java.io.InputStream is>;

     label1:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int read() throws java.io.IOException
    {
        int $i0;
        org.kobjects.io.BoundInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.kobjects.io.BoundInputStream;

        $i0 = r0.<org.kobjects.io.BoundInputStream: int remaining>;

        if $i0 > 0 goto label1;

        return -1;

     label1:
        $i0 = r0.<org.kobjects.io.BoundInputStream: int remaining>;

        $i0 = $i0 + -1;

        r0.<org.kobjects.io.BoundInputStream: int remaining> = $i0;

        $r1 = r0.<org.kobjects.io.BoundInputStream: java.io.InputStream is>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] $r1;
        int $i0, $i1, $i2;
        org.kobjects.io.BoundInputStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.kobjects.io.BoundInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = r0.<org.kobjects.io.BoundInputStream: int remaining>;

        if $i1 <= $i2 goto label1;

        $i1 = r0.<org.kobjects.io.BoundInputStream: int remaining>;

     label1:
        $r2 = r0.<org.kobjects.io.BoundInputStream: java.io.InputStream is>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        if $i0 <= 0 goto label2;

        $i1 = r0.<org.kobjects.io.BoundInputStream: int remaining>;

        $i1 = $i1 - $i0;

        r0.<org.kobjects.io.BoundInputStream: int remaining> = $i1;

     label2:
        return $i0;
    }
}
