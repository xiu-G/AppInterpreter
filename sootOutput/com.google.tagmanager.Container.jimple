public class com.google.tagmanager.Container extends java.lang.Object
{
    static final boolean ENABLE_CONTAINER_DEBUG_MODE;
    static final int MAX_NUMBER_OF_TOKENS;
    static final int MINIMUM_REFRESH_PERIOD_BURST_MODE_MS;
    static final long MINIMUM_REFRESH_PERIOD_MS;
    static final long REFRESH_PERIOD_ON_FAILURE_MS;
    static final long REFRESH_PERIOD_ON_SUCCESS_MS;
    private com.google.tagmanager.Clock mClock;
    private final java.lang.String mContainerId;
    private final android.content.Context mContext;
    private com.google.tagmanager.CtfeHost mCtfeHost;
    private volatile java.lang.String mCtfeServerAddress;
    private volatile java.lang.String mCtfeUrlPathAndQuery;
    com.google.tagmanager.LoadCallback mDiskLoadCallback;
    private java.util.Map mFunctionCallMacroHandlers;
    private java.util.Map mFunctionCallTagHandlers;
    private volatile com.google.analytics.containertag.proto.Serving$Resource mLastLoadedResource;
    private volatile long mLastRefreshMethodCalledTime;
    private volatile long mLastRefreshTime;
    com.google.tagmanager.LoadCallback mNetworkLoadCallback;
    private com.google.tagmanager.Container$ResourceLoaderScheduler mNetworkLoadScheduler;
    private volatile int mNumTokens;
    private volatile int mResourceFormatVersion;
    private com.google.tagmanager.Container$ResourceStorage mResourceStorage;
    private volatile java.lang.String mResourceVersion;
    private com.google.tagmanager.Runtime mRuntime;
    private final com.google.tagmanager.TagManager mTagManager;
    private com.google.tagmanager.Container$Callback mUserCallback;

    void <init>(android.content.Context, java.lang.String, com.google.tagmanager.TagManager)
    {
        android.content.Context $r1;
        com.google.tagmanager.ResourceStorageImpl $r4;
        com.google.tagmanager.Container r0;
        com.google.tagmanager.TagManager $r3;
        java.lang.String $r2;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.google.tagmanager.TagManager;

        $r4 = new com.google.tagmanager.ResourceStorageImpl;

        specialinvoke $r4.<com.google.tagmanager.ResourceStorageImpl: void <init>(android.content.Context,java.lang.String)>($r1, $r2);

        specialinvoke r0.<com.google.tagmanager.Container: void <init>(android.content.Context,java.lang.String,com.google.tagmanager.TagManager,com.google.tagmanager.Container$ResourceStorage)>($r1, $r2, $r3, $r4);

        return;
    }

    void <init>(android.content.Context, java.lang.String, com.google.tagmanager.TagManager, com.google.tagmanager.Container$ResourceStorage)
    {
        android.content.Context $r1;
        com.google.tagmanager.Container r0;
        com.google.tagmanager.TagManager $r3;
        com.google.tagmanager.CtfeHost $r5;
        java.util.HashMap $r6;
        java.lang.String $r2;
        com.google.tagmanager.Container$ResourceStorage $r4;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.google.tagmanager.TagManager;

        $r4 := @parameter3: com.google.tagmanager.Container$ResourceStorage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.tagmanager.Container: java.lang.String mResourceVersion> = "";

        r0.<com.google.tagmanager.Container: int mResourceFormatVersion> = 0;

        $r5 = new com.google.tagmanager.CtfeHost;

        specialinvoke $r5.<com.google.tagmanager.CtfeHost: void <init>()>();

        r0.<com.google.tagmanager.Container: com.google.tagmanager.CtfeHost mCtfeHost> = $r5;

        r0.<com.google.tagmanager.Container: android.content.Context mContext> = $r1;

        r0.<com.google.tagmanager.Container: java.lang.String mContainerId> = $r2;

        r0.<com.google.tagmanager.Container: com.google.tagmanager.TagManager mTagManager> = $r3;

        r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceStorage mResourceStorage> = $r4;

        r0.<com.google.tagmanager.Container: int mNumTokens> = 30;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<com.google.tagmanager.Container: java.util.Map mFunctionCallMacroHandlers> = $r6;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<com.google.tagmanager.Container: java.util.Map mFunctionCallTagHandlers> = $r6;

        specialinvoke r0.<com.google.tagmanager.Container: void createInitialContainer()>();

        return;
    }

    static void access$000(com.google.tagmanager.Container, com.google.tagmanager.Container$RefreshType)
    {
        com.google.tagmanager.Container$RefreshType $r1;
        com.google.tagmanager.Container $r0;

        $r0 := @parameter0: com.google.tagmanager.Container;

        $r1 := @parameter1: com.google.tagmanager.Container$RefreshType;

        specialinvoke $r0.<com.google.tagmanager.Container: void callRefreshBegin(com.google.tagmanager.Container$RefreshType)>($r1);

        return;
    }

    static void access$100(com.google.tagmanager.Container, com.google.analytics.containertag.proto.Serving$Resource, boolean)
    {
        com.google.analytics.containertag.proto.Serving$Resource $r1;
        com.google.tagmanager.Container $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.tagmanager.Container;

        $r1 := @parameter1: com.google.analytics.containertag.proto.Serving$Resource;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<com.google.tagmanager.Container: void initEvaluators(com.google.analytics.containertag.proto.Serving$Resource,boolean)>($r1, $z0);

        return;
    }

    static long access$200(com.google.tagmanager.Container)
    {
        long l0;
        com.google.tagmanager.Container $r0;

        $r0 := @parameter0: com.google.tagmanager.Container;

        l0 = $r0.<com.google.tagmanager.Container: long mLastRefreshTime>;

        return l0;
    }

    static long access$202(com.google.tagmanager.Container, long)
    {
        long $l0;
        com.google.tagmanager.Container $r0;

        $r0 := @parameter0: com.google.tagmanager.Container;

        $l0 := @parameter1: long;

        $r0.<com.google.tagmanager.Container: long mLastRefreshTime> = $l0;

        return $l0;
    }

    static void access$300(com.google.tagmanager.Container, com.google.tagmanager.Container$RefreshType)
    {
        com.google.tagmanager.Container$RefreshType $r1;
        com.google.tagmanager.Container $r0;

        $r0 := @parameter0: com.google.tagmanager.Container;

        $r1 := @parameter1: com.google.tagmanager.Container$RefreshType;

        specialinvoke $r0.<com.google.tagmanager.Container: void callRefreshSuccess(com.google.tagmanager.Container$RefreshType)>($r1);

        return;
    }

    static void access$400(com.google.tagmanager.Container, com.google.tagmanager.Container$RefreshType, com.google.tagmanager.Container$RefreshFailure)
    {
        com.google.tagmanager.Container$RefreshType $r1;
        com.google.tagmanager.Container$RefreshFailure $r2;
        com.google.tagmanager.Container $r0;

        $r0 := @parameter0: com.google.tagmanager.Container;

        $r1 := @parameter1: com.google.tagmanager.Container$RefreshType;

        $r2 := @parameter2: com.google.tagmanager.Container$RefreshFailure;

        specialinvoke $r0.<com.google.tagmanager.Container: void callRefreshFailure(com.google.tagmanager.Container$RefreshType,com.google.tagmanager.Container$RefreshFailure)>($r1, $r2);

        return;
    }

    static com.google.analytics.containertag.proto.Serving$Resource access$500(com.google.tagmanager.Container)
    {
        com.google.analytics.containertag.proto.Serving$Resource r1;
        com.google.tagmanager.Container $r0;

        $r0 := @parameter0: com.google.tagmanager.Container;

        r1 = $r0.<com.google.tagmanager.Container: com.google.analytics.containertag.proto.Serving$Resource mLastLoadedResource>;

        return r1;
    }

    static boolean access$600(com.google.tagmanager.Container)
    {
        com.google.tagmanager.Container $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.tagmanager.Container;

        $z0 = specialinvoke $r0.<com.google.tagmanager.Container: boolean isContainerPreview()>();

        return $z0;
    }

    static void access$700(com.google.tagmanager.Container, com.google.analytics.containertag.proto.Serving$Resource)
    {
        com.google.analytics.containertag.proto.Serving$Resource $r1;
        com.google.tagmanager.Container $r0;

        $r0 := @parameter0: com.google.tagmanager.Container;

        $r1 := @parameter1: com.google.analytics.containertag.proto.Serving$Resource;

        specialinvoke $r0.<com.google.tagmanager.Container: void saveResourceToDisk(com.google.analytics.containertag.proto.Serving$Resource)>($r1);

        return;
    }

    private void callRefreshBegin(com.google.tagmanager.Container$RefreshType)
    {
        com.google.tagmanager.Container$RefreshType $r1;
        java.lang.Throwable $r3;
        com.google.tagmanager.Container r0;
        com.google.tagmanager.Container$Callback $r2;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: com.google.tagmanager.Container$RefreshType;

        entermonitor r0;

     label1:
        $r2 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$Callback mUserCallback>;

        if $r2 == null goto label2;

        $r2 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$Callback mUserCallback>;

        interfaceinvoke $r2.<com.google.tagmanager.Container$Callback: void containerRefreshBegin(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType)>(r0, $r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void callRefreshFailure(com.google.tagmanager.Container$RefreshType, com.google.tagmanager.Container$RefreshFailure)
    {
        com.google.tagmanager.Container$RefreshType $r1;
        java.lang.Throwable $r4;
        com.google.tagmanager.Container r0;
        com.google.tagmanager.Container$Callback $r3;
        com.google.tagmanager.Container$RefreshFailure $r2;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: com.google.tagmanager.Container$RefreshType;

        $r2 := @parameter1: com.google.tagmanager.Container$RefreshFailure;

        entermonitor r0;

     label1:
        $r3 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$Callback mUserCallback>;

        if $r3 == null goto label2;

        $r3 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$Callback mUserCallback>;

        interfaceinvoke $r3.<com.google.tagmanager.Container$Callback: void containerRefreshFailure(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType,com.google.tagmanager.Container$RefreshFailure)>(r0, $r1, $r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void callRefreshSuccess(com.google.tagmanager.Container$RefreshType)
    {
        com.google.tagmanager.Container$RefreshType $r1;
        java.lang.Throwable $r5;
        com.google.tagmanager.Container r0;
        java.lang.StringBuilder $r2;
        com.google.tagmanager.Container$Callback $r3;
        java.lang.String $r4;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: com.google.tagmanager.Container$RefreshType;

        entermonitor r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("calling containerRefreshSuccess(");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): mUserCallback = ");

        $r3 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$Callback mUserCallback>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void v(java.lang.String)>($r4);

        $r3 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$Callback mUserCallback>;

        if $r3 == null goto label2;

        $r3 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$Callback mUserCallback>;

        interfaceinvoke $r3.<com.google.tagmanager.Container$Callback: void containerRefreshSuccess(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType)>(r0, $r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void createInitialContainer()
    {
        com.google.tagmanager.Container$ResourceStorage $r3;
        com.google.analytics.containertag.proto.Serving$Resource $r4;
        com.google.tagmanager.ResourceUtil$ExpandedResource $r5, $r6;
        com.google.tagmanager.Container r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        com.google.tagmanager.ResourceUtil$ExpandedResourceBuilder $r7;

        r0 := @this: com.google.tagmanager.Container;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("tagmanager/");

        $r2 = r0.<com.google.tagmanager.Container: java.lang.String mContainerId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceStorage mResourceStorage>;

        $r4 = interfaceinvoke $r3.<com.google.tagmanager.Container$ResourceStorage: com.google.analytics.containertag.proto.Serving$Resource loadResourceFromContainerAsset(java.lang.String)>($r2);

        if $r4 == null goto label1;

        specialinvoke r0.<com.google.tagmanager.Container: void initEvaluators(com.google.analytics.containertag.proto.Serving$Resource,boolean)>($r4, 1);

        return;

     label1:
        $r3 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceStorage mResourceStorage>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = interfaceinvoke $r3.<com.google.tagmanager.Container$ResourceStorage: com.google.tagmanager.ResourceUtil$ExpandedResource loadExpandedResourceFromJsonAsset(java.lang.String)>($r2);

        $r6 = $r5;

        if $r5 != null goto label2;

        staticinvoke <com.google.tagmanager.Log: void w(java.lang.String)>("No default container found; creating an empty container.");

        $r7 = staticinvoke <com.google.tagmanager.ResourceUtil$ExpandedResource: com.google.tagmanager.ResourceUtil$ExpandedResourceBuilder newBuilder()>();

        $r6 = virtualinvoke $r7.<com.google.tagmanager.ResourceUtil$ExpandedResourceBuilder: com.google.tagmanager.ResourceUtil$ExpandedResource build()>();

     label2:
        specialinvoke r0.<com.google.tagmanager.Container: void initEvaluatorsWithExpandedResource(com.google.tagmanager.ResourceUtil$ExpandedResource)>($r6);

        return;
    }

    private com.google.tagmanager.Runtime getRuntime()
    {
        java.lang.Throwable $r1;
        com.google.tagmanager.Runtime r2;
        com.google.tagmanager.Container r0;

        r0 := @this: com.google.tagmanager.Container;

        entermonitor r0;

     label1:
        r2 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Runtime mRuntime>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void initEvaluators(com.google.analytics.containertag.proto.Serving$Resource, boolean)
    {
        com.google.tagmanager.ResourceUtil$ExpandedResource $r2;
        com.google.tagmanager.ResourceUtil$InvalidResourceException $r3;
        com.google.tagmanager.Container r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        com.google.analytics.containertag.proto.Serving$Resource $r1;
        boolean $z0;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: com.google.analytics.containertag.proto.Serving$Resource;

        $z0 := @parameter1: boolean;

     label1:
        $r2 = staticinvoke <com.google.tagmanager.ResourceUtil: com.google.tagmanager.ResourceUtil$ExpandedResource getExpandedResource(com.google.analytics.containertag.proto.Serving$Resource)>($r1);

     label2:
        if $z0 != 0 goto label3;

        r0.<com.google.tagmanager.Container: com.google.analytics.containertag.proto.Serving$Resource mLastLoadedResource> = $r1;

     label3:
        specialinvoke r0.<com.google.tagmanager.Container: void initEvaluatorsWithExpandedResource(com.google.tagmanager.ResourceUtil$ExpandedResource)>($r2);

        return;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Not loading resource: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it is invalid: ");

        $r5 = virtualinvoke $r3.<com.google.tagmanager.ResourceUtil$InvalidResourceException: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>($r5);

        return;

        catch com.google.tagmanager.ResourceUtil$InvalidResourceException from label1 to label2 with label4;
    }

    private void initEvaluatorsWithExpandedResource(com.google.tagmanager.ResourceUtil$ExpandedResource)
    {
        android.content.Context $r2;
        com.google.tagmanager.TagManager $r8;
        com.google.tagmanager.EventInfoDistributor $r6;
        com.google.tagmanager.DataLayer $r9;
        com.google.tagmanager.Container$FunctionCallMacroHandlerAdapter $r3;
        com.google.tagmanager.ResourceUtil$ExpandedResource $r1;
        com.google.tagmanager.Container$FunctionCallTagHandlerAdapter $r4;
        com.google.tagmanager.Runtime $r7;
        com.google.tagmanager.Container r0;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: com.google.tagmanager.ResourceUtil$ExpandedResource;

        $r5 = virtualinvoke $r1.<com.google.tagmanager.ResourceUtil$ExpandedResource: java.lang.String getVersion()>();

        r0.<com.google.tagmanager.Container: java.lang.String mResourceVersion> = $r5;

        $i0 = virtualinvoke $r1.<com.google.tagmanager.ResourceUtil$ExpandedResource: int getResourceFormatVersion()>();

        r0.<com.google.tagmanager.Container: int mResourceFormatVersion> = $i0;

        $r5 = r0.<com.google.tagmanager.Container: java.lang.String mResourceVersion>;

        $r6 = virtualinvoke r0.<com.google.tagmanager.Container: com.google.tagmanager.EventInfoDistributor createEventInfoDistributor(java.lang.String)>($r5);

        $r7 = new com.google.tagmanager.Runtime;

        $r2 = r0.<com.google.tagmanager.Container: android.content.Context mContext>;

        $r8 = r0.<com.google.tagmanager.Container: com.google.tagmanager.TagManager mTagManager>;

        $r9 = virtualinvoke $r8.<com.google.tagmanager.TagManager: com.google.tagmanager.DataLayer getDataLayer()>();

        $r3 = new com.google.tagmanager.Container$FunctionCallMacroHandlerAdapter;

        specialinvoke $r3.<com.google.tagmanager.Container$FunctionCallMacroHandlerAdapter: void <init>(com.google.tagmanager.Container,com.google.tagmanager.Container$1)>(r0, null);

        $r4 = new com.google.tagmanager.Container$FunctionCallTagHandlerAdapter;

        specialinvoke $r4.<com.google.tagmanager.Container$FunctionCallTagHandlerAdapter: void <init>(com.google.tagmanager.Container,com.google.tagmanager.Container$1)>(r0, null);

        specialinvoke $r7.<com.google.tagmanager.Runtime: void <init>(android.content.Context,com.google.tagmanager.ResourceUtil$ExpandedResource,com.google.tagmanager.DataLayer,com.google.tagmanager.CustomFunctionCall$CustomEvaluator,com.google.tagmanager.CustomFunctionCall$CustomEvaluator,com.google.tagmanager.EventInfoDistributor)>($r2, $r1, $r9, $r3, $r4, $r6);

        specialinvoke r0.<com.google.tagmanager.Container: void setRuntime(com.google.tagmanager.Runtime)>($r7);

        return;
    }

    private boolean isContainerPreview()
    {
        com.google.tagmanager.PreviewManager$PreviewMode $r2, $r3;
        com.google.tagmanager.Container r0;
        java.lang.String $r4, $r5;
        com.google.tagmanager.PreviewManager $r1;
        boolean $z0;

        r0 := @this: com.google.tagmanager.Container;

        $r1 = staticinvoke <com.google.tagmanager.PreviewManager: com.google.tagmanager.PreviewManager getInstance()>();

        $r2 = virtualinvoke $r1.<com.google.tagmanager.PreviewManager: com.google.tagmanager.PreviewManager$PreviewMode getPreviewMode()>();

        $r3 = <com.google.tagmanager.PreviewManager$PreviewMode: com.google.tagmanager.PreviewManager$PreviewMode CONTAINER>;

        if $r2 == $r3 goto label1;

        $r2 = virtualinvoke $r1.<com.google.tagmanager.PreviewManager: com.google.tagmanager.PreviewManager$PreviewMode getPreviewMode()>();

        $r3 = <com.google.tagmanager.PreviewManager$PreviewMode: com.google.tagmanager.PreviewManager$PreviewMode CONTAINER_DEBUG>;

        if $r2 != $r3 goto label2;

     label1:
        $r4 = r0.<com.google.tagmanager.Container: java.lang.String mContainerId>;

        $r5 = virtualinvoke $r1.<com.google.tagmanager.PreviewManager: java.lang.String getContainerId()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean isDefaultContainerRefreshMode()
    {
        com.google.tagmanager.Container r0;
        com.google.tagmanager.TagManager $r3;
        com.google.tagmanager.TagManager$RefreshMode $r1, $r2;

        r0 := @this: com.google.tagmanager.Container;

        $r3 = r0.<com.google.tagmanager.Container: com.google.tagmanager.TagManager mTagManager>;

        $r2 = virtualinvoke $r3.<com.google.tagmanager.TagManager: com.google.tagmanager.TagManager$RefreshMode getRefreshMode()>();

        $r1 = <com.google.tagmanager.TagManager$RefreshMode: com.google.tagmanager.TagManager$RefreshMode DEFAULT_CONTAINER>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void saveResourceToDisk(com.google.analytics.containertag.proto.Serving$Resource)
    {
        java.lang.Throwable $r5;
        com.google.tagmanager.Container r0;
        com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder $r3;
        long $l0;
        com.google.tagmanager.Container$ResourceStorage $r2;
        com.google.analytics.containertag.proto.Serving$Resource $r1;
        com.google.tagmanager.proto.Resource$ResourceWithMetadata $r4;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: com.google.analytics.containertag.proto.Serving$Resource;

        entermonitor r0;

     label1:
        $r2 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceStorage mResourceStorage>;

        if $r2 == null goto label2;

        $r2 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceStorage mResourceStorage>;

        $r3 = staticinvoke <com.google.tagmanager.proto.Resource$ResourceWithMetadata: com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder newBuilder()>();

        $l0 = virtualinvoke r0.<com.google.tagmanager.Container: long getLastRefreshTime()>();

        $r3 = virtualinvoke $r3.<com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder: com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder setTimeStamp(long)>($l0);

        $r3 = virtualinvoke $r3.<com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder: com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder setResource(com.google.analytics.containertag.proto.Serving$Resource)>($r1);

        $r4 = virtualinvoke $r3.<com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder: com.google.tagmanager.proto.Resource$ResourceWithMetadata build()>();

        interfaceinvoke $r2.<com.google.tagmanager.Container$ResourceStorage: void saveResourceToDiskInBackground(com.google.tagmanager.proto.Resource$ResourceWithMetadata)>($r4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void setRuntime(com.google.tagmanager.Runtime)
    {
        java.lang.Throwable $r2;
        com.google.tagmanager.Runtime $r1;
        com.google.tagmanager.Container r0;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: com.google.tagmanager.Runtime;

        entermonitor r0;

     label1:
        r0.<com.google.tagmanager.Container: com.google.tagmanager.Runtime mRuntime> = $r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean useAvailableToken(long)
    {
        byte $b3;
        com.google.tagmanager.Container r0;
        int $i1, $i4;
        long $l0, $l2;
        double $d0;

        r0 := @this: com.google.tagmanager.Container;

        $l0 := @parameter0: long;

        $l2 = r0.<com.google.tagmanager.Container: long mLastRefreshMethodCalledTime>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        $i1 = r0.<com.google.tagmanager.Container: int mNumTokens>;

        $i4 = -1;

        $i1 = $i1 + $i4;

        r0.<com.google.tagmanager.Container: int mNumTokens> = $i1;

        return 1;

     label1:
        $l2 = r0.<com.google.tagmanager.Container: long mLastRefreshMethodCalledTime>;

        $l0 = $l0 - $l2;

        $b3 = $l0 cmp 5000L;

        $i1 = (int) $b3;

        if $i1 >= 0 goto label2;

        return 0;

     label2:
        $i1 = r0.<com.google.tagmanager.Container: int mNumTokens>;

        if $i1 >= 30 goto label3;

        $l0 = $l0 / 900000L;

        $d0 = (double) $l0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i4 = (int) $d0;

        $i1 = r0.<com.google.tagmanager.Container: int mNumTokens>;

        $i1 = $i4 + $i1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(30, $i1);

        r0.<com.google.tagmanager.Container: int mNumTokens> = $i1;

     label3:
        $i1 = r0.<com.google.tagmanager.Container: int mNumTokens>;

        if $i1 <= 0 goto label4;

        $i1 = r0.<com.google.tagmanager.Container: int mNumTokens>;

        $i4 = -1;

        $i1 = $i1 + $i4;

        r0.<com.google.tagmanager.Container: int mNumTokens> = $i1;

        return 1;

     label4:
        return 0;
    }

    public void close()
    {
        java.lang.Throwable $r7;
        com.google.tagmanager.TagManager $r3;
        com.google.tagmanager.Container$ResourceLoaderScheduler $r1;
        com.google.tagmanager.Container$ResourceStorage $r2;
        java.lang.Exception $r5;
        com.google.tagmanager.Container r0;
        java.lang.StringBuilder $r6;
        java.lang.String $r4;

        r0 := @this: com.google.tagmanager.Container;

        entermonitor r0;

     label01:
        $r1 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceLoaderScheduler mNetworkLoadScheduler>;

     label02:
        if $r1 == null goto label04;

     label03:
        $r1 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceLoaderScheduler mNetworkLoadScheduler>;

        interfaceinvoke $r1.<com.google.tagmanager.Container$ResourceLoaderScheduler: void close()>();

     label04:
        r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceLoaderScheduler mNetworkLoadScheduler> = null;

        $r2 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceStorage mResourceStorage>;

     label05:
        if $r2 == null goto label07;

     label06:
        $r2 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceStorage mResourceStorage>;

        interfaceinvoke $r2.<com.google.tagmanager.Container$ResourceStorage: void close()>();

     label07:
        r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceStorage mResourceStorage> = null;

        r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$Callback mUserCallback> = null;

        $r3 = r0.<com.google.tagmanager.Container: com.google.tagmanager.TagManager mTagManager>;

        $r4 = r0.<com.google.tagmanager.Container: java.lang.String mContainerId>;

        virtualinvoke $r3.<com.google.tagmanager.TagManager: boolean removeContainer(java.lang.String)>($r4);

     label08:
        r0.<com.google.tagmanager.Container: com.google.tagmanager.Runtime mRuntime> = null;

     label09:
        exitmonitor r0;

        return;

     label10:
        $r5 := @caughtexception;

     label11:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Calling close() threw an exception: ");

        $r4 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>($r4);

     label12:
        goto label08;

     label13:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label05 with label10;
        catch java.lang.Exception from label06 to label08 with label10;
        catch java.lang.Throwable from label01 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    com.google.tagmanager.EventInfoDistributor createEventInfoDistributor(java.lang.String)
    {
        com.google.tagmanager.PreviewManager$PreviewMode $r2, $r4;
        com.google.tagmanager.Container r0;
        java.lang.String $r1;
        com.google.tagmanager.PreviewManager $r3;
        com.google.tagmanager.NoopEventInfoDistributor $r5;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.google.tagmanager.PreviewManager: com.google.tagmanager.PreviewManager getInstance()>();

        $r4 = virtualinvoke $r3.<com.google.tagmanager.PreviewManager: com.google.tagmanager.PreviewManager$PreviewMode getPreviewMode()>();

        $r2 = <com.google.tagmanager.PreviewManager$PreviewMode: com.google.tagmanager.PreviewManager$PreviewMode CONTAINER_DEBUG>;

        virtualinvoke $r4.<com.google.tagmanager.PreviewManager$PreviewMode: boolean equals(java.lang.Object)>($r2);

        $r5 = new com.google.tagmanager.NoopEventInfoDistributor;

        specialinvoke $r5.<com.google.tagmanager.NoopEventInfoDistributor: void <init>()>();

        return $r5;
    }

    void evaluateTags(java.lang.String)
    {
        com.google.tagmanager.Runtime $r2;
        java.lang.String $r1;
        com.google.tagmanager.Container r0;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.google.tagmanager.Container: com.google.tagmanager.Runtime getRuntime()>();

        virtualinvoke $r2.<com.google.tagmanager.Runtime: void evaluateTags(java.lang.String)>($r1);

        return;
    }

    public boolean getBoolean(java.lang.String)
    {
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value $r6;
        java.lang.Exception $r7;
        com.google.tagmanager.Runtime $r2;
        com.google.tagmanager.Container r0;
        java.lang.Boolean $r3;
        java.lang.Object $r5;
        java.lang.StringBuilder $r8;
        java.lang.String $r1;
        com.google.tagmanager.ObjectAndStatic $r4;
        boolean $z0;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.google.tagmanager.Container: com.google.tagmanager.Runtime getRuntime()>();

        if $r2 != null goto label1;

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>("getBoolean called for closed container.");

        $r3 = staticinvoke <com.google.tagmanager.Types: java.lang.Boolean getDefaultBoolean()>();

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        $r4 = virtualinvoke $r2.<com.google.tagmanager.Runtime: com.google.tagmanager.ObjectAndStatic evaluateMacroReference(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<com.google.tagmanager.ObjectAndStatic: java.lang.Object getObject()>();

        $r6 = (com.google.analytics.midtier.proto.containertag.TypeSystem$Value) $r5;

        $r3 = staticinvoke <com.google.tagmanager.Types: java.lang.Boolean valueToBoolean(com.google.analytics.midtier.proto.containertag.TypeSystem$Value)>($r6);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Calling getBoolean() threw an exception: ");

        $r1 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Returning default value.");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>($r1);

        $r3 = staticinvoke <com.google.tagmanager.Types: java.lang.Boolean getDefaultBoolean()>();

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String getContainerId()
    {
        java.lang.String r1;
        com.google.tagmanager.Container r0;

        r0 := @this: com.google.tagmanager.Container;

        r1 = r0.<com.google.tagmanager.Container: java.lang.String mContainerId>;

        return r1;
    }

    java.lang.String getCtfeUrlPathAndQuery()
    {
        java.lang.String r1;
        com.google.tagmanager.Container r0;

        r0 := @this: com.google.tagmanager.Container;

        r1 = r0.<com.google.tagmanager.Container: java.lang.String mCtfeUrlPathAndQuery>;

        return r1;
    }

    public double getDouble(java.lang.String)
    {
        java.lang.Double $r3;
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value $r6;
        java.lang.Exception $r7;
        com.google.tagmanager.Runtime $r2;
        com.google.tagmanager.Container r0;
        java.lang.Object $r5;
        java.lang.StringBuilder $r8;
        java.lang.String $r1;
        com.google.tagmanager.ObjectAndStatic $r4;
        double $d0;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.google.tagmanager.Container: com.google.tagmanager.Runtime getRuntime()>();

        if $r2 != null goto label1;

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>("getDouble called for closed container.");

        $r3 = staticinvoke <com.google.tagmanager.Types: java.lang.Double getDefaultDouble()>();

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d0;

     label1:
        $r4 = virtualinvoke $r2.<com.google.tagmanager.Runtime: com.google.tagmanager.ObjectAndStatic evaluateMacroReference(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<com.google.tagmanager.ObjectAndStatic: java.lang.Object getObject()>();

        $r6 = (com.google.analytics.midtier.proto.containertag.TypeSystem$Value) $r5;

        $r3 = staticinvoke <com.google.tagmanager.Types: java.lang.Double valueToDouble(com.google.analytics.midtier.proto.containertag.TypeSystem$Value)>($r6);

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

     label2:
        return $d0;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Calling getDouble() threw an exception: ");

        $r1 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Returning default value.");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>($r1);

        $r3 = staticinvoke <com.google.tagmanager.Types: java.lang.Double getDefaultDouble()>();

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public com.google.tagmanager.Container$FunctionCallMacroHandler getFunctionCallMacroHandler(java.lang.String)
    {
        java.lang.Throwable $r5;
        com.google.tagmanager.Container r0;
        java.util.Map $r3;
        java.lang.Object $r2;
        java.lang.String $r1;
        com.google.tagmanager.Container$FunctionCallMacroHandler $r4;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = r0.<com.google.tagmanager.Container: java.util.Map mFunctionCallMacroHandlers>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.google.tagmanager.Container$FunctionCallMacroHandler) $r2;

     label2:
        exitmonitor r0;

        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.google.tagmanager.Container$FunctionCallTagHandler getFunctionCallTagHandler(java.lang.String)
    {
        java.lang.Throwable $r5;
        com.google.tagmanager.Container$FunctionCallTagHandler $r4;
        com.google.tagmanager.Container r0;
        java.util.Map $r3;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = r0.<com.google.tagmanager.Container: java.util.Map mFunctionCallTagHandlers>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.google.tagmanager.Container$FunctionCallTagHandler) $r2;

     label2:
        exitmonitor r0;

        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getLastRefreshTime()
    {
        long l0;
        com.google.tagmanager.Container r0;

        r0 := @this: com.google.tagmanager.Container;

        l0 = r0.<com.google.tagmanager.Container: long mLastRefreshTime>;

        return l0;
    }

    public long getLong(java.lang.String)
    {
        long $l0;
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value $r6;
        java.lang.Exception $r7;
        com.google.tagmanager.Runtime $r2;
        java.lang.Long $r3;
        com.google.tagmanager.Container r0;
        java.lang.Object $r5;
        java.lang.StringBuilder $r8;
        java.lang.String $r1;
        com.google.tagmanager.ObjectAndStatic $r4;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.google.tagmanager.Container: com.google.tagmanager.Runtime getRuntime()>();

        if $r2 != null goto label1;

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>("getLong called for closed container.");

        $r3 = staticinvoke <com.google.tagmanager.Types: java.lang.Long getDefaultInt64()>();

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        return $l0;

     label1:
        $r4 = virtualinvoke $r2.<com.google.tagmanager.Runtime: com.google.tagmanager.ObjectAndStatic evaluateMacroReference(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<com.google.tagmanager.ObjectAndStatic: java.lang.Object getObject()>();

        $r6 = (com.google.analytics.midtier.proto.containertag.TypeSystem$Value) $r5;

        $r3 = staticinvoke <com.google.tagmanager.Types: java.lang.Long valueToInt64(com.google.analytics.midtier.proto.containertag.TypeSystem$Value)>($r6);

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

     label2:
        return $l0;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Calling getLong() threw an exception: ");

        $r1 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Returning default value.");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>($r1);

        $r3 = staticinvoke <com.google.tagmanager.Types: java.lang.Long getDefaultInt64()>();

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        return $l0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    java.lang.String getResourceVersion()
    {
        java.lang.String r1;
        com.google.tagmanager.Container r0;

        r0 := @this: com.google.tagmanager.Container;

        r1 = r0.<com.google.tagmanager.Container: java.lang.String mResourceVersion>;

        return r1;
    }

    public java.lang.String getString(java.lang.String)
    {
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value $r5;
        java.lang.Exception $r6;
        com.google.tagmanager.Runtime $r2;
        com.google.tagmanager.Container r0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7;
        java.lang.String $r1;
        com.google.tagmanager.ObjectAndStatic $r3;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.google.tagmanager.Container: com.google.tagmanager.Runtime getRuntime()>();

        if $r2 != null goto label1;

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>("getString called for closed container.");

        $r1 = staticinvoke <com.google.tagmanager.Types: java.lang.String getDefaultString()>();

        return $r1;

     label1:
        $r3 = virtualinvoke $r2.<com.google.tagmanager.Runtime: com.google.tagmanager.ObjectAndStatic evaluateMacroReference(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<com.google.tagmanager.ObjectAndStatic: java.lang.Object getObject()>();

        $r5 = (com.google.analytics.midtier.proto.containertag.TypeSystem$Value) $r4;

        $r1 = staticinvoke <com.google.tagmanager.Types: java.lang.String valueToString(com.google.analytics.midtier.proto.containertag.TypeSystem$Value)>($r5);

     label2:
        return $r1;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Calling getString() threw an exception: ");

        $r1 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Returning default value.");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>($r1);

        $r1 = staticinvoke <com.google.tagmanager.Types: java.lang.String getDefaultString()>();

        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean isDefault()
    {
        long $l0;
        byte $b1;
        com.google.tagmanager.Container r0;

        r0 := @this: com.google.tagmanager.Container;

        $l0 = virtualinvoke r0.<com.google.tagmanager.Container: long getLastRefreshTime()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void load(com.google.tagmanager.Container$Callback)
    {
        android.content.Context $r4;
        com.google.tagmanager.Container$1 $r2;
        com.google.tagmanager.Container r0;
        com.google.tagmanager.ResourceLoaderSchedulerImpl $r3;
        com.google.tagmanager.Container$Callback $r1;
        com.google.tagmanager.CtfeHost $r6;
        java.lang.String $r5;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: com.google.tagmanager.Container$Callback;

        $r2 = new com.google.tagmanager.Container$1;

        specialinvoke $r2.<com.google.tagmanager.Container$1: void <init>(com.google.tagmanager.Container)>(r0);

        $r3 = new com.google.tagmanager.ResourceLoaderSchedulerImpl;

        $r4 = r0.<com.google.tagmanager.Container: android.content.Context mContext>;

        $r5 = r0.<com.google.tagmanager.Container: java.lang.String mContainerId>;

        $r6 = r0.<com.google.tagmanager.Container: com.google.tagmanager.CtfeHost mCtfeHost>;

        specialinvoke $r3.<com.google.tagmanager.ResourceLoaderSchedulerImpl: void <init>(android.content.Context,java.lang.String,com.google.tagmanager.CtfeHost)>($r4, $r5, $r6);

        virtualinvoke r0.<com.google.tagmanager.Container: void load(com.google.tagmanager.Container$Callback,com.google.tagmanager.Container$ResourceLoaderScheduler,com.google.tagmanager.Clock)>($r1, $r3, $r2);

        return;
    }

    void load(com.google.tagmanager.Container$Callback, com.google.tagmanager.Container$ResourceLoaderScheduler, com.google.tagmanager.Clock)
    {
        java.lang.Throwable $r8;
        com.google.tagmanager.Container$3 $r11;
        com.google.tagmanager.Container$2 $r9;
        com.google.tagmanager.Container$ResourceLoaderScheduler $r2;
        java.lang.RuntimeException $r5;
        com.google.tagmanager.Container$ResourceStorage $r10;
        com.google.tagmanager.Clock $r3;
        com.google.tagmanager.Container r0;
        com.google.tagmanager.Container$Callback $r1;
        com.google.tagmanager.LoadCallback $r4;
        java.lang.StringBuilder $r6;
        com.google.tagmanager.CtfeHost $r13;
        java.lang.String $r7;
        com.google.tagmanager.PreviewManager $r12;
        boolean $z0;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: com.google.tagmanager.Container$Callback;

        $r2 := @parameter1: com.google.tagmanager.Container$ResourceLoaderScheduler;

        $r3 := @parameter2: com.google.tagmanager.Clock;

        entermonitor r0;

     label1:
        $r4 = r0.<com.google.tagmanager.Container: com.google.tagmanager.LoadCallback mDiskLoadCallback>;

        if $r4 == null goto label3;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Container already loaded: container ID: ");

        $r7 = r0.<com.google.tagmanager.Container: java.lang.String mContainerId>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label2:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

     label3:
        r0.<com.google.tagmanager.Container: com.google.tagmanager.Clock mClock> = $r3;

        r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$Callback mUserCallback> = $r1;

        $r9 = new com.google.tagmanager.Container$2;

        specialinvoke $r9.<com.google.tagmanager.Container$2: void <init>(com.google.tagmanager.Container,com.google.tagmanager.Clock)>(r0, $r3);

        r0.<com.google.tagmanager.Container: com.google.tagmanager.LoadCallback mDiskLoadCallback> = $r9;

        $z0 = specialinvoke r0.<com.google.tagmanager.Container: boolean isDefaultContainerRefreshMode()>();

        if $z0 == 0 goto label5;

        staticinvoke <com.google.tagmanager.Log: void i(java.lang.String)>("Container is in DEFAULT_CONTAINER mode. Use default container.");

     label4:
        exitmonitor r0;

        return;

     label5:
        $r10 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceStorage mResourceStorage>;

        $r4 = r0.<com.google.tagmanager.Container: com.google.tagmanager.LoadCallback mDiskLoadCallback>;

        interfaceinvoke $r10.<com.google.tagmanager.Container$ResourceStorage: void setLoadCallback(com.google.tagmanager.LoadCallback)>($r4);

        $r11 = new com.google.tagmanager.Container$3;

        specialinvoke $r11.<com.google.tagmanager.Container$3: void <init>(com.google.tagmanager.Container,com.google.tagmanager.Clock)>(r0, $r3);

        r0.<com.google.tagmanager.Container: com.google.tagmanager.LoadCallback mNetworkLoadCallback> = $r11;

        $r4 = r0.<com.google.tagmanager.Container: com.google.tagmanager.LoadCallback mNetworkLoadCallback>;

        interfaceinvoke $r2.<com.google.tagmanager.Container$ResourceLoaderScheduler: void setLoadCallback(com.google.tagmanager.LoadCallback)>($r4);

        $z0 = specialinvoke r0.<com.google.tagmanager.Container: boolean isContainerPreview()>();

        if $z0 == 0 goto label6;

        $r12 = staticinvoke <com.google.tagmanager.PreviewManager: com.google.tagmanager.PreviewManager getInstance()>();

        $r7 = virtualinvoke $r12.<com.google.tagmanager.PreviewManager: java.lang.String getCTFEUrlPath()>();

        r0.<com.google.tagmanager.Container: java.lang.String mCtfeUrlPathAndQuery> = $r7;

        $r7 = r0.<com.google.tagmanager.Container: java.lang.String mCtfeUrlPathAndQuery>;

        interfaceinvoke $r2.<com.google.tagmanager.Container$ResourceLoaderScheduler: void setCtfeURLPathAndQuery(java.lang.String)>($r7);

     label6:
        $r7 = r0.<com.google.tagmanager.Container: java.lang.String mCtfeServerAddress>;

        if $r7 == null goto label7;

        $r13 = r0.<com.google.tagmanager.Container: com.google.tagmanager.CtfeHost mCtfeHost>;

        $r7 = r0.<com.google.tagmanager.Container: java.lang.String mCtfeServerAddress>;

        virtualinvoke $r13.<com.google.tagmanager.CtfeHost: void setCtfeServerAddress(java.lang.String)>($r7);

     label7:
        r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceLoaderScheduler mNetworkLoadScheduler> = $r2;

        $r10 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceStorage mResourceStorage>;

        interfaceinvoke $r10.<com.google.tagmanager.Container$ResourceStorage: void loadResourceFromDiskInBackground()>();

     label8:
        goto label4;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label8 with label2;
    }

    void loadAfterDelay(long)
    {
        java.lang.Throwable $r4;
        com.google.tagmanager.Container r0;
        com.google.tagmanager.Container$ResourceLoaderScheduler $r1;
        long $l0;
        java.lang.String $r3;
        com.google.analytics.containertag.proto.Serving$Resource $r2;
        boolean $z0;

        r0 := @this: com.google.tagmanager.Container;

        $l0 := @parameter0: long;

        entermonitor r0;

     label1:
        $r1 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceLoaderScheduler mNetworkLoadScheduler>;

        if $r1 == null goto label3;

        $z0 = specialinvoke r0.<com.google.tagmanager.Container: boolean isDefaultContainerRefreshMode()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<com.google.tagmanager.Container: com.google.analytics.containertag.proto.Serving$Resource mLastLoadedResource>;

        if $r2 != null goto label4;

        $r3 = null;

     label2:
        $r1 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceLoaderScheduler mNetworkLoadScheduler>;

        interfaceinvoke $r1.<com.google.tagmanager.Container$ResourceLoaderScheduler: void loadAfterDelay(long,java.lang.String)>($l0, $r3);

     label3:
        exitmonitor r0;

        return;

     label4:
        $r2 = r0.<com.google.tagmanager.Container: com.google.analytics.containertag.proto.Serving$Resource mLastLoadedResource>;

        $r3 = virtualinvoke $r2.<com.google.analytics.containertag.proto.Serving$Resource: java.lang.String getVersion()>();

     label5:
        goto label2;

     label6:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void refresh()
    {
        java.lang.Throwable $r5;
        long $l0;
        java.lang.Exception $r3;
        com.google.tagmanager.Clock $r6;
        com.google.tagmanager.Runtime $r2;
        com.google.tagmanager.Container r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.google.tagmanager.Container;

        entermonitor r0;

     label01:
        $r2 = specialinvoke r0.<com.google.tagmanager.Container: com.google.tagmanager.Runtime getRuntime()>();

        if $r2 != null goto label03;

        staticinvoke <com.google.tagmanager.Log: void w(java.lang.String)>("refresh called for closed container");

     label02:
        exitmonitor r0;

        return;

     label03:
        $z0 = specialinvoke r0.<com.google.tagmanager.Container: boolean isDefaultContainerRefreshMode()>();

     label04:
        if $z0 == 0 goto label11;

     label05:
        staticinvoke <com.google.tagmanager.Log: void w(java.lang.String)>("Container is in DEFAULT_CONTAINER mode. Refresh request is ignored.");

     label06:
        goto label02;

     label07:
        $r3 := @caughtexception;

     label08:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Calling refresh() throws an exception: ");

        $r4 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>($r4);

     label09:
        goto label02;

     label10:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

     label11:
        $r6 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Clock mClock>;

        $l0 = interfaceinvoke $r6.<com.google.tagmanager.Clock: long currentTimeMillis()>();

        $z0 = specialinvoke r0.<com.google.tagmanager.Container: boolean useAvailableToken(long)>($l0);

     label12:
        if $z0 == 0 goto label15;

     label13:
        staticinvoke <com.google.tagmanager.Log: void v(java.lang.String)>("Container refresh requested");

        virtualinvoke r0.<com.google.tagmanager.Container: void loadAfterDelay(long)>(0L);

        r0.<com.google.tagmanager.Container: long mLastRefreshMethodCalledTime> = $l0;

     label14:
        goto label02;

     label15:
        staticinvoke <com.google.tagmanager.Log: void v(java.lang.String)>("Container refresh was called too often. Ignored.");

     label16:
        goto label02;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Throwable from label03 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Exception from label11 to label12 with label07;
        catch java.lang.Exception from label13 to label14 with label07;
        catch java.lang.Exception from label15 to label16 with label07;
        catch java.lang.Throwable from label11 to label16 with label10;
    }

    public void registerFunctionCallMacroHandler(java.lang.String, com.google.tagmanager.Container$FunctionCallMacroHandler)
    {
        java.lang.Throwable $r4;
        com.google.tagmanager.Container r0;
        java.util.Map $r3;
        java.lang.String $r1;
        com.google.tagmanager.Container$FunctionCallMacroHandler $r2;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.tagmanager.Container$FunctionCallMacroHandler;

        entermonitor r0;

     label1:
        $r3 = r0.<com.google.tagmanager.Container: java.util.Map mFunctionCallMacroHandlers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void registerFunctionCallTagHandler(java.lang.String, com.google.tagmanager.Container$FunctionCallTagHandler)
    {
        java.lang.Throwable $r4;
        com.google.tagmanager.Container$FunctionCallTagHandler $r2;
        com.google.tagmanager.Container r0;
        java.util.Map $r3;
        java.lang.String $r1;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.tagmanager.Container$FunctionCallTagHandler;

        entermonitor r0;

     label1:
        $r3 = r0.<com.google.tagmanager.Container: java.util.Map mFunctionCallTagHandlers>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void setCtfeServerAddress(java.lang.String)
    {
        java.lang.Throwable $r3;
        com.google.tagmanager.Container r0;
        com.google.tagmanager.CtfeHost $r2;
        java.lang.String $r1;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        r0.<com.google.tagmanager.Container: java.lang.String mCtfeServerAddress> = $r1;

        if $r1 == null goto label2;

        $r2 = r0.<com.google.tagmanager.Container: com.google.tagmanager.CtfeHost mCtfeHost>;

        virtualinvoke $r2.<com.google.tagmanager.CtfeHost: void setCtfeServerAddress(java.lang.String)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void setCtfeUrlPathAndQuery(java.lang.String)
    {
        java.lang.Throwable $r3;
        com.google.tagmanager.Container r0;
        com.google.tagmanager.Container$ResourceLoaderScheduler $r2;
        java.lang.String $r1;

        r0 := @this: com.google.tagmanager.Container;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        r0.<com.google.tagmanager.Container: java.lang.String mCtfeUrlPathAndQuery> = $r1;

        $r2 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceLoaderScheduler mNetworkLoadScheduler>;

        if $r2 == null goto label2;

        $r2 = r0.<com.google.tagmanager.Container: com.google.tagmanager.Container$ResourceLoaderScheduler mNetworkLoadScheduler>;

        interfaceinvoke $r2.<com.google.tagmanager.Container$ResourceLoaderScheduler: void setCtfeURLPathAndQuery(java.lang.String)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.google.tagmanager.Container: long REFRESH_PERIOD_ON_SUCCESS_MS> = 43200000L;

        <com.google.tagmanager.Container: long REFRESH_PERIOD_ON_FAILURE_MS> = 3600000L;

        <com.google.tagmanager.Container: long MINIMUM_REFRESH_PERIOD_MS> = 900000L;

        <com.google.tagmanager.Container: int MINIMUM_REFRESH_PERIOD_BURST_MODE_MS> = 5000;

        <com.google.tagmanager.Container: int MAX_NUMBER_OF_TOKENS> = 30;

        <com.google.tagmanager.Container: boolean ENABLE_CONTAINER_DEBUG_MODE> = 0;

        return;
    }
}
