public class com.ffcs.android.mc.BusinessFunction extends java.lang.Object
{
    private static final java.util.concurrent.atomic.AtomicBoolean atomicInit;
    private static final java.util.concurrent.atomic.AtomicBoolean atomicRef;
    public static com.ffcs.android.mc.BusinessFunction function;
    private final long RESP_WAIT_TIME_OUT;
    private com.ffcs.android.mc.IBaseIntentService baseIntentService;
    private android.content.Context context;
    private com.ffcs.android.mc.ICoreService coreService;
    private com.ffcs.android.mc.util.FutureImpl futureBusiness;
    private com.ffcs.android.mc.IUpdate iUpdate;
    private boolean isJarLoad;
    private int maxCount;
    private java.io.File optimizedDexOutputPath;
    private java.lang.String path;
    private com.ffcs.android.mc.IReceiver receiver;
    private com.ffcs.android.mc.IRegistration registration;
    private com.ffcs.android.mc.ISMSOrder smsOrder;
    private final java.lang.String version;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicBoolean $r0;

        $r0 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        <com.ffcs.android.mc.BusinessFunction: java.util.concurrent.atomic.AtomicBoolean atomicInit> = $r0;

        $r0 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        <com.ffcs.android.mc.BusinessFunction: java.util.concurrent.atomic.AtomicBoolean atomicRef> = $r0;

        return;
    }

    private void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.ffcs.android.mc.util.FutureImpl $r2;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ffcs.android.mc.BusinessFunction: int maxCount> = 0;

        r0.<com.ffcs.android.mc.BusinessFunction: java.lang.String version> = "v3.0.0";

        $r2 = new com.ffcs.android.mc.util.FutureImpl;

        specialinvoke $r2.<com.ffcs.android.mc.util.FutureImpl: void <init>()>();

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.util.FutureImpl futureBusiness> = $r2;

        r0.<com.ffcs.android.mc.BusinessFunction: long RESP_WAIT_TIME_OUT> = 30000L;

        r0.<com.ffcs.android.mc.BusinessFunction: boolean isJarLoad> = 0;

        r0.<com.ffcs.android.mc.BusinessFunction: android.content.Context context> = $r1;

        return;
    }

    private boolean checkLoad() throws java.lang.Exception
    {
        java.lang.Throwable $r5;
        com.ffcs.android.mc.BusinessFunction r0;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.Exception $r4;
        boolean $z0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("isJarLoad = ");

        $z0 = r0.<com.ffcs.android.mc.BusinessFunction: boolean isJarLoad>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.ffcs.android.mc.util.McLog: void d(java.lang.String)>($r2);

        $z0 = r0.<com.ffcs.android.mc.BusinessFunction: boolean isJarLoad>;

        if $z0 != 0 goto label5;

        $r3 = <com.ffcs.android.mc.BusinessFunction: java.util.concurrent.atomic.AtomicBoolean atomicInit>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label7;

     label1:
        $z0 = r0.<com.ffcs.android.mc.BusinessFunction: boolean isJarLoad>;

     label2:
        if $z0 != 0 goto label4;

     label3:
        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: void initSDK()>();

     label4:
        $r3 = <com.ffcs.android.mc.BusinessFunction: java.util.concurrent.atomic.AtomicBoolean atomicInit>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

     label5:
        $z0 = r0.<com.ffcs.android.mc.BusinessFunction: boolean isJarLoad>;

        if $z0 != 0 goto label8;

        $r4 = new java.lang.Exception;

        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("SDK load exception");

        throw $r4;

     label6:
        $r5 := @caughtexception;

        $r3 = <com.ffcs.android.mc.BusinessFunction: java.util.concurrent.atomic.AtomicBoolean atomicInit>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        throw $r5;

     label7:
        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: void waitResp()>();

        goto label5;

     label8:
        $z0 = r0.<com.ffcs.android.mc.BusinessFunction: boolean isJarLoad>;

        return $z0;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    private void copyFile()
    {
        java.lang.Throwable r2;
        java.io.PrintStream $r8;
        byte[] r1;
        android.content.Context $r6;
        java.io.FileOutputStream r4, $r10;
        java.io.IOException $r11;
        java.lang.Exception r3;
        java.io.File $r9;
        android.content.res.AssetManager $r7;
        com.ffcs.android.mc.BusinessFunction r0;
        int $i0;
        java.io.InputStream r5;
        boolean $z0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        r5 = null;

     label01:
        $r6 = r0.<com.ffcs.android.mc.BusinessFunction: android.content.Context context>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label02:
        if $r7 == null goto label05;

     label03:
        r5 = virtualinvoke $r7.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("mc.jar");

     label04:
        if r5 != null goto label09;

        $r6 = r0.<com.ffcs.android.mc.BusinessFunction: android.content.Context context>;

        $z0 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: boolean checkNetWorkAll(android.content.Context)>($r6);

        if $z0 == 0 goto label20;

        staticinvoke <com.ffcs.android.mc.util.McLog: void d(java.lang.String)>("donw sdk from server");

        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: void downSdk(java.lang.String)>("http://update.mimsc.com/mcpush/app/mc.do?action=checkUpdate");

        return;

     label05:
        $r8 = <java.lang.System: java.io.PrintStream out>;

     label06:
        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("context.getAssets()==null");

     label07:
        goto label04;

     label08:
        r3 := @caughtexception;

        r5 = null;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        goto label04;

     label09:
        staticinvoke <com.ffcs.android.mc.util.McLog: void d(java.lang.String)>("copy from assets");

     label10:
        $r10 = new java.io.FileOutputStream;

        r4 = $r10;

        $r9 = r0.<com.ffcs.android.mc.BusinessFunction: java.io.File optimizedDexOutputPath>;

     label11:
        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>($r9);

     label12:
        r1 = newarray (byte)[1024];

     label13:
        $i0 = virtualinvoke r5.<java.io.InputStream: int read(byte[])>(r1);

     label14:
        if $i0 != -1 goto label18;

     label15:
        virtualinvoke r4.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r5.<java.io.InputStream: void close()>();

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

        virtualinvoke r0.<com.ffcs.android.mc.BusinessFunction: void loadSDK()>();

     label16:
        return;

     label17:
        r2 := @caughtexception;

        $r11 = (java.io.IOException) r2;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        return;

     label18:
        virtualinvoke r4.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

     label19:
        goto label13;

     label20:
        return;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label17;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.io.IOException from label13 to label14 with label17;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label18 to label19 with label17;
    }

    private void delFile()
    {
        com.ffcs.android.mc.BusinessFunction r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.io.File r1;
        boolean $z0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        r1 = r0.<com.ffcs.android.mc.BusinessFunction: java.io.File optimizedDexOutputPath>;

        virtualinvoke r1.<java.io.File: boolean delete()>();

        r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<com.ffcs.android.mc.BusinessFunction: java.lang.String path>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/mc.dex");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    private void downSdk(java.lang.String)
    {
        android.content.Context $r5;
        org.json.JSONException r10, r11;
        org.json.JSONObject r2, r3, $r12;
        android.telephony.TelephonyManager r7;
        int $i0;
        java.lang.String $r1, $r4, $r8;
        boolean $z0;
        com.ffcs.android.mc.BusinessFunction r0;
        java.lang.Object $r6;
        java.lang.StringBuilder $r9, $r13;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        $r1 := @parameter0: java.lang.String;

        r2 = new org.json.JSONObject;

        r3 = r2;

     label01:
        specialinvoke r2.<org.json.JSONObject: void <init>()>();

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("v", "v3.0.0");

        $r4 = virtualinvoke r3.<org.json.JSONObject: java.lang.String toString()>();

        $r1 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: java.lang.String executePost(java.lang.String,java.lang.String)>("http://update.mimsc.com/mcpush/app/mc.do?action=checkUpdate", $r4);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label02:
        if $z0 != 0 goto label22;

        r2 = new org.json.JSONObject;

        r3 = r2;

     label03:
        specialinvoke r2.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $i0 = virtualinvoke r3.<org.json.JSONObject: int getInt(java.lang.String)>("r");

     label04:
        if $i0 != 50001 goto label22;

        $r5 = r0.<com.ffcs.android.mc.BusinessFunction: android.content.Context context>;

     label05:
        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

     label06:
        r7 = (android.telephony.TelephonyManager) $r6;

     label07:
        $r1 = virtualinvoke r7.<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>();

        $r4 = virtualinvoke r7.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

     label08:
        $r12 = new org.json.JSONObject;

        r2 = $r12;

     label09:
        specialinvoke $r12.<org.json.JSONObject: void <init>()>();

     label10:
        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("imei", $r4);

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("imsi", $r1);

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("pn", "com.ffcs.android.mc");

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("ov", "v3.0.0");

        $r1 = virtualinvoke r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("nv");

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("nv", $r1);

     label11:
        $r1 = virtualinvoke r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("u");

        $r4 = virtualinvoke r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("m");

     label12:
        $r5 = r0.<com.ffcs.android.mc.BusinessFunction: android.content.Context context>;

     label13:
        $r8 = virtualinvoke r2.<org.json.JSONObject: java.lang.String toString()>();

        $z0 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: boolean sdkDownload(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>($r5, $r1, $r4, $r8);

     label14:
        if $z0 == 0 goto label21;

        $r13 = new java.lang.StringBuilder;

        $r9 = $r13;

     label15:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("sdk donwLoad success! nv=");

        $r1 = virtualinvoke r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("nv");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.ffcs.android.mc.util.McLog: void d(java.lang.String)>($r1);

        virtualinvoke r0.<com.ffcs.android.mc.BusinessFunction: void loadSDK()>();

     label16:
        return;

     label17:
        r10 := @caughtexception;

     label18:
        virtualinvoke r10.<org.json.JSONException: void printStackTrace()>();

     label19:
        goto label11;

     label20:
        r11 := @caughtexception;

        $r1 = virtualinvoke r11.<org.json.JSONException: java.lang.String toString()>();

        staticinvoke <com.ffcs.android.mc.util.McExceptionUtil: void put(java.lang.String)>($r1);

        virtualinvoke r11.<org.json.JSONException: void printStackTrace()>();

        return;

     label21:
        staticinvoke <com.ffcs.android.mc.util.McLog: void d(java.lang.String)>("sdk donwLoad fail! ");

     label22:
        return;

        catch org.json.JSONException from label01 to label02 with label20;
        catch org.json.JSONException from label03 to label04 with label20;
        catch org.json.JSONException from label05 to label06 with label20;
        catch org.json.JSONException from label07 to label08 with label20;
        catch org.json.JSONException from label09 to label10 with label20;
        catch org.json.JSONException from label10 to label11 with label17;
        catch org.json.JSONException from label11 to label12 with label20;
        catch org.json.JSONException from label13 to label14 with label20;
        catch org.json.JSONException from label15 to label16 with label20;
        catch org.json.JSONException from label18 to label19 with label20;
        catch org.json.JSONException from label21 to label22 with label20;
    }

    public static com.ffcs.android.mc.BusinessFunction getInstance(android.content.Context)
    {
        java.lang.Throwable $r3;
        android.content.Context $r0;
        com.ffcs.android.mc.BusinessFunction $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.BusinessFunction function>;

        if $r1 != null goto label6;

     label1:
        $r2 = <com.ffcs.android.mc.BusinessFunction: java.util.concurrent.atomic.AtomicBoolean atomicRef>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

     label2:
        $r1 = <com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.BusinessFunction function>;

     label3:
        if $r1 != null goto label5;

     label4:
        $r1 = new com.ffcs.android.mc.BusinessFunction;

        specialinvoke $r1.<com.ffcs.android.mc.BusinessFunction: void <init>(android.content.Context)>($r0);

        <com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.BusinessFunction function> = $r1;

     label5:
        $r2 = <com.ffcs.android.mc.BusinessFunction: java.util.concurrent.atomic.AtomicBoolean atomicRef>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

     label6:
        $r1 = <com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.BusinessFunction function>;

        return $r1;

     label7:
        $r3 := @caughtexception;

        $r2 = <com.ffcs.android.mc.BusinessFunction: java.util.concurrent.atomic.AtomicBoolean atomicRef>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    private void initSDK()
    {
        android.content.Context $r1;
        com.ffcs.android.mc.BusinessFunction r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        java.io.File $r3;
        boolean $z0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        virtualinvoke r0.<com.ffcs.android.mc.BusinessFunction: void reset()>();

        $r1 = r0.<com.ffcs.android.mc.BusinessFunction: android.content.Context context>;

        $r2 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: java.lang.String getPath(android.content.Context)>($r1);

        r0.<com.ffcs.android.mc.BusinessFunction: java.lang.String path> = $r2;

        $r2 = r0.<com.ffcs.android.mc.BusinessFunction: java.lang.String path>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        staticinvoke <com.ffcs.android.mc.util.McLog: void d(java.lang.String)>("path is null");

        return;

     label1:
        $r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        $r2 = r0.<com.ffcs.android.mc.BusinessFunction: java.lang.String path>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mc.jar");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r2);

        r0.<com.ffcs.android.mc.BusinessFunction: java.io.File optimizedDexOutputPath> = $r3;

        $r3 = r0.<com.ffcs.android.mc.BusinessFunction: java.io.File optimizedDexOutputPath>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        staticinvoke <com.ffcs.android.mc.util.McLog: void d(java.lang.String)>("copy file");

        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: void copyFile()>();

        return;

     label2:
        staticinvoke <com.ffcs.android.mc.util.McLog: void d(java.lang.String)>("load SDK");

        virtualinvoke r0.<com.ffcs.android.mc.BusinessFunction: void loadSDK()>();

        return;
    }

    private void waitResp()
    {
        java.util.concurrent.TimeUnit $r2;
        com.ffcs.android.mc.BusinessFunction r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        com.ffcs.android.mc.util.FutureImpl $r3;
        java.lang.Exception r1;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

     label1:
        $r3 = r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.util.FutureImpl futureBusiness>;

     label2:
        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

     label3:
        virtualinvoke $r3.<com.ffcs.android.mc.util.FutureImpl: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(30000L, $r2);

     label4:
        return;

     label5:
        r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("waitInitResp exception:");

        $r5 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.ffcs.android.mc.util.McLog: void e(java.lang.String)>($r5);

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void destry()
    {
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IBaseIntentService baseIntentService> = null;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.ICoreService coreService> = null;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IRegistration registration> = null;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IReceiver receiver> = null;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IUpdate iUpdate> = null;

        r0.<com.ffcs.android.mc.BusinessFunction: boolean isJarLoad> = 0;

        <com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.BusinessFunction function> = null;

        return;
    }

    public com.ffcs.android.mc.IBaseIntentService getBaseIntentService() throws java.lang.Exception
    {
        com.ffcs.android.mc.IBaseIntentService r1;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: boolean checkLoad()>();

        r1 = r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IBaseIntentService baseIntentService>;

        return r1;
    }

    public com.ffcs.android.mc.ICoreService getCoreService() throws java.lang.Exception
    {
        com.ffcs.android.mc.ICoreService r1;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: boolean checkLoad()>();

        r1 = r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.ICoreService coreService>;

        return r1;
    }

    public com.ffcs.android.mc.IReceiver getReceiver() throws java.lang.Exception
    {
        com.ffcs.android.mc.IReceiver r1;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: boolean checkLoad()>();

        r1 = r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IReceiver receiver>;

        return r1;
    }

    public com.ffcs.android.mc.IRegistration getRegistration() throws java.lang.Exception
    {
        com.ffcs.android.mc.IRegistration r1;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: boolean checkLoad()>();

        r1 = r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IRegistration registration>;

        return r1;
    }

    public com.ffcs.android.mc.ISMSOrder getSmsOrder() throws java.lang.Exception
    {
        com.ffcs.android.mc.ISMSOrder r1;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: boolean checkLoad()>();

        r1 = r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.ISMSOrder smsOrder>;

        return r1;
    }

    public com.ffcs.android.mc.IUpdate getiUpdate() throws java.lang.Exception
    {
        com.ffcs.android.mc.IUpdate r1;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: boolean checkLoad()>();

        r1 = r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IUpdate iUpdate>;

        return r1;
    }

    public void loadSDK()
    {
        android.content.Context $r6;
        com.ffcs.android.mc.IReceiver $r13;
        com.ffcs.android.mc.IUpdate $r14;
        int $i0;
        java.lang.String $r4, $r5;
        dalvik.system.DexClassLoader r1;
        com.ffcs.android.mc.IRegistration $r12;
        com.ffcs.android.mc.util.FutureImpl $r16;
        java.lang.Exception r2;
        java.io.File $r3;
        com.ffcs.android.mc.ISMSOrder $r15;
        com.ffcs.android.mc.BusinessFunction r0;
        com.ffcs.android.mc.IBaseIntentService $r10;
        java.lang.Class $r8;
        java.lang.Object $r9;
        com.ffcs.android.mc.ICoreService $r11;
        java.lang.StringBuilder $r17;
        java.lang.ClassLoader $r7;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        r1 = new dalvik.system.DexClassLoader;

     label1:
        $r3 = r0.<com.ffcs.android.mc.BusinessFunction: java.io.File optimizedDexOutputPath>;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = r0.<com.ffcs.android.mc.BusinessFunction: java.lang.String path>;

        $r6 = r0.<com.ffcs.android.mc.BusinessFunction: android.content.Context context>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        specialinvoke r1.<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>($r4, $r5, null, $r7);

        $r8 = virtualinvoke r1.<dalvik.system.DexClassLoader: java.lang.Class loadClass(java.lang.String)>("com.ffcs.android.mc.BaseIntentService");

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Object newInstance()>();

        $r10 = (com.ffcs.android.mc.IBaseIntentService) $r9;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IBaseIntentService baseIntentService> = $r10;

        $r8 = virtualinvoke r1.<dalvik.system.DexClassLoader: java.lang.Class loadClass(java.lang.String)>("com.ffcs.android.mc.CoreService");

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Object newInstance()>();

        $r11 = (com.ffcs.android.mc.ICoreService) $r9;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.ICoreService coreService> = $r11;

        $r8 = virtualinvoke r1.<dalvik.system.DexClassLoader: java.lang.Class loadClass(java.lang.String)>("com.ffcs.android.mc.Registration");

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Object newInstance()>();

        $r12 = (com.ffcs.android.mc.IRegistration) $r9;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IRegistration registration> = $r12;

        $r8 = virtualinvoke r1.<dalvik.system.DexClassLoader: java.lang.Class loadClass(java.lang.String)>("com.ffcs.android.mc.Receiver");

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Object newInstance()>();

        $r13 = (com.ffcs.android.mc.IReceiver) $r9;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IReceiver receiver> = $r13;

        $r8 = virtualinvoke r1.<dalvik.system.DexClassLoader: java.lang.Class loadClass(java.lang.String)>("com.ffcs.android.mc.Update");

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Object newInstance()>();

        $r14 = (com.ffcs.android.mc.IUpdate) $r9;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.IUpdate iUpdate> = $r14;

        $r8 = virtualinvoke r1.<dalvik.system.DexClassLoader: java.lang.Class loadClass(java.lang.String)>("com.ffcs.android.mc.SMSOrder");

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Object newInstance()>();

        $r15 = (com.ffcs.android.mc.ISMSOrder) $r9;

        r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.ISMSOrder smsOrder> = $r15;

        $r16 = r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.util.FutureImpl futureBusiness>;

        virtualinvoke $r16.<com.ffcs.android.mc.util.FutureImpl: void setResult(java.lang.Object)>("true");

        r0.<com.ffcs.android.mc.BusinessFunction: boolean isJarLoad> = 1;

        staticinvoke <com.ffcs.android.mc.util.McLog: void d(java.lang.String)>("load SDK success");

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("load SDK fail:");

        $i0 = r0.<com.ffcs.android.mc.BusinessFunction: int maxCount>;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.ffcs.android.mc.util.McLog: void d(java.lang.String)>($r4);

        $i0 = r0.<com.ffcs.android.mc.BusinessFunction: int maxCount>;

        $i0 = $i0 + 1;

        r0.<com.ffcs.android.mc.BusinessFunction: int maxCount> = $i0;

        $i0 = r0.<com.ffcs.android.mc.BusinessFunction: int maxCount>;

        if $i0 >= 5 goto label4;

        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: void delFile()>();

        specialinvoke r0.<com.ffcs.android.mc.BusinessFunction: void copyFile()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void onCreatService(android.content.Context) throws java.lang.Exception
    {
        android.content.Context $r1;
        com.ffcs.android.mc.ICoreService $r2;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.ICoreService getCoreService()>();

        interfaceinvoke $r2.<com.ffcs.android.mc.ICoreService: void createService(android.content.Context)>($r1);

        return;
    }

    public void onStartService(android.content.Intent) throws java.lang.Exception
    {
        android.content.Intent $r1;
        com.ffcs.android.mc.ICoreService $r2;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        $r1 := @parameter0: android.content.Intent;

        $r2 = virtualinvoke r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.ICoreService getCoreService()>();

        interfaceinvoke $r2.<com.ffcs.android.mc.ICoreService: void startService(android.content.Intent)>($r1);

        return;
    }

    public void reLoadSDK(android.content.Context)
    {
        android.content.Context $r1;
        android.content.Intent r2;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        $r1 := @parameter0: android.content.Context;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.ffcs.android.mc.LoadSDK");

        virtualinvoke $r1.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r2);

        return;
    }

    public void reset()
    {
        com.ffcs.android.mc.util.FutureImpl $r1;
        com.ffcs.android.mc.BusinessFunction r0;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        r0.<com.ffcs.android.mc.BusinessFunction: boolean isJarLoad> = 0;

        $r1 = r0.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.util.FutureImpl futureBusiness>;

        virtualinvoke $r1.<com.ffcs.android.mc.util.FutureImpl: void reset()>();

        return;
    }

    public void startCoreService()
    {
        android.content.Context $r3;
        com.ffcs.android.mc.BusinessFunction r0;
        android.content.Intent r1;
        java.lang.String $r2;

        r0 := @this: com.ffcs.android.mc.BusinessFunction;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.ffcs.android.mc.service.APP_START");

        $r3 = r0.<com.ffcs.android.mc.BusinessFunction: android.content.Context context>;

        $r2 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>($r2);

        $r3 = r0.<com.ffcs.android.mc.BusinessFunction: android.content.Context context>;

        virtualinvoke $r3.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r1);

        return;
    }
}
