public class proguard.classfile.attribute.preverification.StackMapAttribute extends proguard.classfile.attribute.Attribute
{
    public proguard.classfile.attribute.preverification.FullFrame[] stackMapFrames;
    public int u2stackMapFramesCount;

    public void <init>()
    {
        proguard.classfile.attribute.preverification.StackMapAttribute r0;

        r0 := @this: proguard.classfile.attribute.preverification.StackMapAttribute;

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>()>();

        return;
    }

    public void <init>(int, proguard.classfile.attribute.preverification.FullFrame[])
    {
        int $i0;
        proguard.classfile.attribute.preverification.StackMapAttribute r0;
        proguard.classfile.attribute.preverification.FullFrame[] $r1;

        r0 := @this: proguard.classfile.attribute.preverification.StackMapAttribute;

        $i0 := @parameter0: int;

        $r1 := @parameter1: proguard.classfile.attribute.preverification.FullFrame[];

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>()>();

        r0.<proguard.classfile.attribute.preverification.StackMapAttribute: int u2stackMapFramesCount> = $i0;

        r0.<proguard.classfile.attribute.preverification.StackMapAttribute: proguard.classfile.attribute.preverification.FullFrame[] stackMapFrames> = $r1;

        return;
    }

    public void <init>(proguard.classfile.attribute.preverification.FullFrame[])
    {
        int $i0;
        proguard.classfile.attribute.preverification.StackMapAttribute r0;
        proguard.classfile.attribute.preverification.FullFrame[] $r1;

        r0 := @this: proguard.classfile.attribute.preverification.StackMapAttribute;

        $r1 := @parameter0: proguard.classfile.attribute.preverification.FullFrame[];

        $i0 = lengthof $r1;

        specialinvoke r0.<proguard.classfile.attribute.preverification.StackMapAttribute: void <init>(int,proguard.classfile.attribute.preverification.FullFrame[])>($i0, $r1);

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.attribute.preverification.StackMapAttribute r0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.visitor.AttributeVisitor $r4;

        r0 := @this: proguard.classfile.attribute.preverification.StackMapAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.visitor.AttributeVisitor;

        interfaceinvoke $r4.<proguard.classfile.attribute.visitor.AttributeVisitor: void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute)>($r1, $r2, $r3, r0);

        return;
    }

    public void stackMapFramesAccept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor)
    {
        proguard.classfile.attribute.preverification.StackMapAttribute r0;
        proguard.classfile.attribute.preverification.FullFrame $r5;
        proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.FullFrame[] $r6;

        r0 := @this: proguard.classfile.attribute.preverification.StackMapAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor;

        $i1 = 0;

     label1:
        $i0 = r0.<proguard.classfile.attribute.preverification.StackMapAttribute: int u2stackMapFramesCount>;

        if $i1 >= $i0 goto label2;

        $r6 = r0.<proguard.classfile.attribute.preverification.StackMapAttribute: proguard.classfile.attribute.preverification.FullFrame[] stackMapFrames>;

        $r5 = $r6[$i1];

        $i0 = virtualinvoke $r5.<proguard.classfile.attribute.preverification.FullFrame: int getOffsetDelta()>();

        interfaceinvoke $r4.<proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor: void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame)>($r1, $r2, $r3, $i0, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
}
