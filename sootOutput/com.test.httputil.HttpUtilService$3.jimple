class com.test.httputil.HttpUtilService$3 extends java.util.TimerTask
{
    final com.test.httputil.HttpUtilService this$0;

    void <init>(com.test.httputil.HttpUtilService)
    {
        com.test.httputil.HttpUtilService $r1;
        com.test.httputil.HttpUtilService$3 r0;

        r0 := @this: com.test.httputil.HttpUtilService$3;

        $r1 := @parameter0: com.test.httputil.HttpUtilService;

        r0.<com.test.httputil.HttpUtilService$3: com.test.httputil.HttpUtilService this$0> = $r1;

        specialinvoke r0.<java.util.TimerTask: void <init>()>();

        return;
    }

    public void run()
    {
        java.util.Date $r2;
        java.lang.String $r3;
        com.test.httputil.HttpUtilService$3 r0;
        java.lang.Exception r1;

        r0 := @this: com.test.httputil.HttpUtilService$3;

        $r2 = new java.util.Date;

     label1:
        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r3 = virtualinvoke $r2.<java.util.Date: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r3);

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r3 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r3);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
