public class kw extends lb
{

    public void <init>()
    {
        kw r0;

        r0 := @this: kw;

        specialinvoke r0.<lb: void <init>()>();

        return;
    }

    private static void a(org.htmlparser.Tag, kq)
    {
        kk $r2;
        kl $r9;
        kq $r1;
        kr $r4;
        org.htmlparser.lexer.Cursor $r5;
        org.htmlparser.Tag $r0, $r3;
        java.util.Vector $r8;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @parameter0: org.htmlparser.Tag;

        $r1 := @parameter1: kq;

        $r3 = interfaceinvoke $r0.<org.htmlparser.Tag: org.htmlparser.Tag getEndTag()>();

        if $r3 != null goto label1;

        $r4 = virtualinvoke $r1.<kq: kr a()>();

        $r5 = virtualinvoke $r1.<kq: org.htmlparser.lexer.Cursor b()>();

        $i0 = virtualinvoke $r5.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = interfaceinvoke $r0.<org.htmlparser.Tag: java.lang.String getRawTagName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.util.Vector;

        specialinvoke $r8.<java.util.Vector: void <init>()>();

        $r2 = new kk;

        specialinvoke $r2.<kk: void <init>(java.lang.String,java.lang.String)>($r7, null);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        $r9 = virtualinvoke $r1.<kq: kl c()>();

        $r3 = interfaceinvoke $r9.<kl: org.htmlparser.Tag a(kr,int,int,java.util.Vector)>($r4, $i0, $i0, $r8);

        interfaceinvoke $r0.<org.htmlparser.Tag: void setEndTag(org.htmlparser.Tag)>($r3);

     label1:
        $r3 = interfaceinvoke $r0.<org.htmlparser.Tag: org.htmlparser.Tag getEndTag()>();

        interfaceinvoke $r3.<org.htmlparser.Tag: void setParent(org.htmlparser.Node)>($r0);

        interfaceinvoke $r0.<org.htmlparser.Tag: void doSemanticAction()>();

        return;
    }

    private static boolean a(org.htmlparser.Tag, org.htmlparser.Tag)
    {
        java.lang.String[] $r3;
        org.htmlparser.Tag $r0, $r1;
        int $i0, $i1;
        java.lang.String $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: org.htmlparser.Tag;

        $r1 := @parameter1: org.htmlparser.Tag;

        $r2 = interfaceinvoke $r1.<org.htmlparser.Tag: java.lang.String getTagName()>();

        $z0 = interfaceinvoke $r1.<org.htmlparser.Tag: boolean isEndTag()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r0.<org.htmlparser.Tag: java.lang.String[] getEndTagEnders()>();

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label5;

        $r4 = $r3[$i0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label4;

        return 1;

     label3:
        $r3 = interfaceinvoke $r0.<org.htmlparser.Tag: java.lang.String[] getEnders()>();

        goto label1;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        return 0;
    }

    public org.htmlparser.Tag a(org.htmlparser.Tag, kq, lg)
    {
        org.htmlparser.Node[] $r8;
        java.util.Vector $r12, $r17;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r7;
        boolean $z0;
        kk $r18;
        kl $r13;
        kq $r2;
        kr $r14;
        kw r0;
        org.htmlparser.Node $r4, $r15;
        kx $r10;
        org.htmlparser.Tag $r1, $r5, $r9;
        lg $r3, $r11, $r16;

        r0 := @this: kw;

        $r1 := @parameter0: org.htmlparser.Tag;

        $r2 := @parameter1: kq;

        $r3 := @parameter2: lg;

        $z0 = interfaceinvoke $r1.<org.htmlparser.Tag: boolean isEmptyXmlTag()>();

        if $z0 == 0 goto label02;

        interfaceinvoke $r1.<org.htmlparser.Tag: void setEndTag(org.htmlparser.Tag)>($r1);

     label01:
        staticinvoke <kw: void a(org.htmlparser.Tag,kq)>($r1, $r2);

        return $r1;

     label02:
        $r4 = virtualinvoke $r2.<kq: org.htmlparser.Node f()>();

        if $r4 == null goto label29;

        $z0 = $r4 instanceof org.htmlparser.Tag;

        if $z0 == 0 goto label27;

        $r5 = (org.htmlparser.Tag) $r4;

        $r6 = interfaceinvoke $r5.<org.htmlparser.Tag: java.lang.String getTagName()>();

        $z0 = interfaceinvoke $r5.<org.htmlparser.Tag: boolean isEndTag()>();

        if $z0 == 0 goto label06;

        $r7 = interfaceinvoke $r1.<org.htmlparser.Tag: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label06;

        interfaceinvoke $r1.<org.htmlparser.Tag: void setEndTag(org.htmlparser.Tag)>($r5);

        $r5 = $r1;

        $r4 = null;

     label03:
        if $r4 != null goto label32;

        $i0 = $r3.<lg: int b>;

        if $i0 == 0 goto label32;

        $i1 = $i0 - 1;

        $r8 = $r3.<lg: org.htmlparser.Node[] a>;

        $r4 = $r8[$i1];

        $z0 = $r4 instanceof org.htmlparser.Tag;

        if $z0 == 0 goto label31;

        $r9 = (org.htmlparser.Tag) $r4;

        $r1 = $r9;

        $r10 = interfaceinvoke $r9.<org.htmlparser.Tag: kx getThisScanner()>();

        if $r10 != r0 goto label30;

        $i0 = $i0 - 1;

        virtualinvoke $r3.<lg: org.htmlparser.Node a(int)>($i0);

        staticinvoke <kw: void a(org.htmlparser.Tag,kq)>($r5, $r2);

        $r11 = interfaceinvoke $r9.<org.htmlparser.Tag: lg getChildren()>();

        if $r11 != null goto label04;

        $r16 = new lg;

        specialinvoke $r16.<lg: void <init>()>();

        interfaceinvoke $r9.<org.htmlparser.Tag: void setChildren(lg)>($r16);

     label04:
        interfaceinvoke $r5.<org.htmlparser.Node: void setParent(org.htmlparser.Node)>($r9);

        $r11 = interfaceinvoke $r9.<org.htmlparser.Tag: lg getChildren()>();

        virtualinvoke $r11.<lg: void a(org.htmlparser.Node)>($r5);

     label05:
        if $r4 != null goto label02;

        goto label01;

     label06:
        $z0 = staticinvoke <kw: boolean a(org.htmlparser.Tag,org.htmlparser.Tag)>($r1, $r5);

        if $z0 == 0 goto label07;

        $i0 = interfaceinvoke $r5.<org.htmlparser.Tag: int getStartPosition()>();

        virtualinvoke $r2.<kq: void a(int)>($i0);

        $r5 = $r1;

        $r4 = null;

        goto label03;

     label07:
        $z0 = interfaceinvoke $r5.<org.htmlparser.Tag: boolean isEndTag()>();

        if $z0 != 0 goto label14;

        $r10 = interfaceinvoke $r5.<org.htmlparser.Tag: kx getThisScanner()>();

        if $r10 == null goto label12;

        if $r10 != r0 goto label10;

        $z0 = interfaceinvoke $r5.<org.htmlparser.Tag: boolean isEmptyXmlTag()>();

        if $z0 == 0 goto label09;

        interfaceinvoke $r5.<org.htmlparser.Tag: void setEndTag(org.htmlparser.Tag)>($r5);

        staticinvoke <kw: void a(org.htmlparser.Tag,kq)>($r5, $r2);

        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        if $r11 != null goto label08;

        $r16 = new lg;

        specialinvoke $r16.<lg: void <init>()>();

        interfaceinvoke $r1.<org.htmlparser.Tag: void setChildren(lg)>($r16);

     label08:
        interfaceinvoke $r5.<org.htmlparser.Node: void setParent(org.htmlparser.Node)>($r1);

        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        virtualinvoke $r11.<lg: void a(org.htmlparser.Node)>($r5);

        $r5 = $r1;

        goto label03;

     label09:
        virtualinvoke $r3.<lg: void a(org.htmlparser.Node)>($r1);

        goto label03;

     label10:
        $r5 = interfaceinvoke $r10.<kx: org.htmlparser.Tag a(org.htmlparser.Tag,kq,lg)>($r5, $r2, $r3);

        $r4 = $r5;

        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        if $r11 != null goto label11;

        $r16 = new lg;

        specialinvoke $r16.<lg: void <init>()>();

        interfaceinvoke $r1.<org.htmlparser.Tag: void setChildren(lg)>($r16);

     label11:
        interfaceinvoke $r5.<org.htmlparser.Node: void setParent(org.htmlparser.Node)>($r1);

        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        virtualinvoke $r11.<lg: void a(org.htmlparser.Node)>($r5);

        $r5 = $r1;

        goto label03;

     label12:
        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        if $r11 != null goto label13;

        $r16 = new lg;

        specialinvoke $r16.<lg: void <init>()>();

        interfaceinvoke $r1.<org.htmlparser.Tag: void setChildren(lg)>($r16);

     label13:
        interfaceinvoke $r5.<org.htmlparser.Node: void setParent(org.htmlparser.Node)>($r1);

        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        virtualinvoke $r11.<lg: void a(org.htmlparser.Node)>($r5);

        $r5 = $r1;

        goto label03;

     label14:
        $r17 = new java.util.Vector;

        $r12 = $r17;

        specialinvoke $r17.<java.util.Vector: void <init>()>();

        $r18 = new kk;

        specialinvoke $r18.<kk: void <init>(java.lang.String,java.lang.String)>($r6, null);

        virtualinvoke $r12.<java.util.Vector: void addElement(java.lang.Object)>($r18);

        $r13 = virtualinvoke $r2.<kq: kl c()>();

        $r14 = virtualinvoke $r2.<kq: kr a()>();

        $i0 = interfaceinvoke $r5.<org.htmlparser.Tag: int getStartPosition()>();

        $i1 = interfaceinvoke $r5.<org.htmlparser.Tag: int getEndPosition()>();

        $r9 = interfaceinvoke $r13.<kl: org.htmlparser.Tag a(kr,int,int,java.util.Vector)>($r14, $i0, $i1, $r12);

        $r10 = interfaceinvoke $r9.<org.htmlparser.Tag: kx getThisScanner()>();

        if $r10 == null goto label25;

        if $r10 != r0 goto label25;

        $i0 = $r3.<lg: int b>;

        $i1 = $i0 - 1;

        $i0 = -1;

     label15:
        if -1 != $i0 goto label18;

        if $i1 < 0 goto label18;

        $r8 = $r3.<lg: org.htmlparser.Node[] a>;

        $r15 = $r8[$i1];

        $r9 = (org.htmlparser.Tag) $r15;

        $r7 = interfaceinvoke $r9.<org.htmlparser.Tag: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label17;

        $i0 = $i1;

     label16:
        $i1 = $i1 + -1;

        goto label15;

     label17:
        $z0 = staticinvoke <kw: boolean a(org.htmlparser.Tag,org.htmlparser.Tag)>($r9, $r5);

        if $z0 == 0 goto label16;

        $i0 = $i1;

        goto label16;

     label18:
        if -1 == $i0 goto label23;

        staticinvoke <kw: void a(org.htmlparser.Tag,kq)>($r1, $r2);

        $i1 = $r3.<lg: int b>;

        $i1 = $i1 - 1;

        $r8 = $r3.<lg: org.htmlparser.Node[] a>;

        $r4 = $r8[$i1];

        $r5 = (org.htmlparser.Tag) $r4;

        $r11 = interfaceinvoke $r5.<org.htmlparser.Tag: lg getChildren()>();

        if $r11 != null goto label19;

        $r16 = new lg;

        specialinvoke $r16.<lg: void <init>()>();

        interfaceinvoke $r5.<org.htmlparser.Tag: void setChildren(lg)>($r16);

     label19:
        interfaceinvoke $r1.<org.htmlparser.Node: void setParent(org.htmlparser.Node)>($r5);

        $r11 = interfaceinvoke $r5.<org.htmlparser.Tag: lg getChildren()>();

        virtualinvoke $r11.<lg: void a(org.htmlparser.Node)>($r1);

        $i1 = $r3.<lg: int b>;

        $i1 = $i1 - 1;

     label20:
        if $i1 <= $i0 goto label22;

        $r4 = virtualinvoke $r3.<lg: org.htmlparser.Node a(int)>($i1);

        $r1 = (org.htmlparser.Tag) $r4;

        staticinvoke <kw: void a(org.htmlparser.Tag,kq)>($r1, $r2);

        $i2 = $i1 - 1;

        $r8 = $r3.<lg: org.htmlparser.Node[] a>;

        $r4 = $r8[$i2];

        $r5 = (org.htmlparser.Tag) $r4;

        $r11 = interfaceinvoke $r5.<org.htmlparser.Tag: lg getChildren()>();

        if $r11 != null goto label21;

        $r16 = new lg;

        specialinvoke $r16.<lg: void <init>()>();

        interfaceinvoke $r5.<org.htmlparser.Tag: void setChildren(lg)>($r16);

     label21:
        interfaceinvoke $r1.<org.htmlparser.Node: void setParent(org.htmlparser.Node)>($r5);

        $r11 = interfaceinvoke $r5.<org.htmlparser.Tag: lg getChildren()>();

        virtualinvoke $r11.<lg: void a(org.htmlparser.Node)>($r1);

        $i1 = $i1 + -1;

        goto label20;

     label22:
        $r4 = virtualinvoke $r3.<lg: org.htmlparser.Node a(int)>($i0);

        $r5 = (org.htmlparser.Tag) $r4;

        $r4 = null;

        goto label03;

     label23:
        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        if $r11 != null goto label24;

        $r16 = new lg;

        specialinvoke $r16.<lg: void <init>()>();

        interfaceinvoke $r1.<org.htmlparser.Tag: void setChildren(lg)>($r16);

     label24:
        interfaceinvoke $r5.<org.htmlparser.Node: void setParent(org.htmlparser.Node)>($r1);

        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        virtualinvoke $r11.<lg: void a(org.htmlparser.Node)>($r5);

        $r5 = $r1;

        goto label03;

     label25:
        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        if $r11 != null goto label26;

        $r16 = new lg;

        specialinvoke $r16.<lg: void <init>()>();

        interfaceinvoke $r1.<org.htmlparser.Tag: void setChildren(lg)>($r16);

     label26:
        interfaceinvoke $r5.<org.htmlparser.Node: void setParent(org.htmlparser.Node)>($r1);

        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        virtualinvoke $r11.<lg: void a(org.htmlparser.Node)>($r5);

        $r5 = $r1;

        goto label03;

     label27:
        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        if $r11 != null goto label28;

        $r16 = new lg;

        specialinvoke $r16.<lg: void <init>()>();

        interfaceinvoke $r1.<org.htmlparser.Tag: void setChildren(lg)>($r16);

     label28:
        interfaceinvoke $r4.<org.htmlparser.Node: void setParent(org.htmlparser.Node)>($r1);

        $r11 = interfaceinvoke $r1.<org.htmlparser.Tag: lg getChildren()>();

        virtualinvoke $r11.<lg: void a(org.htmlparser.Node)>($r4);

        interfaceinvoke $r4.<org.htmlparser.Node: void doSemanticAction()>();

     label29:
        $r5 = $r1;

        goto label03;

     label30:
        $r1 = $r5;

        $r4 = null;

        goto label05;

     label31:
        $r1 = $r5;

        $r4 = null;

        goto label05;

     label32:
        $r1 = $r5;

        goto label05;
    }
}
