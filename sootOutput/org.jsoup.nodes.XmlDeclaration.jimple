public class org.jsoup.nodes.XmlDeclaration extends org.jsoup.nodes.Node
{
    private static final java.lang.String DECL_KEY;
    private final boolean isProcessingInstruction;

    public void <init>(java.lang.String, java.lang.String, boolean)
    {
        org.jsoup.nodes.Attributes $r3;
        java.lang.String $r1, $r2;
        org.jsoup.nodes.XmlDeclaration r0;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<org.jsoup.nodes.Node: void <init>(java.lang.String)>($r2);

        $r3 = r0.<org.jsoup.nodes.XmlDeclaration: org.jsoup.nodes.Attributes attributes>;

        virtualinvoke $r3.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>("declaration", $r1);

        r0.<org.jsoup.nodes.XmlDeclaration: boolean isProcessingInstruction> = $z0;

        return;
    }

    public java.lang.String getWholeDeclaration()
    {
        org.jsoup.nodes.Attributes $r2;
        java.lang.String $r1;
        org.jsoup.nodes.XmlDeclaration r0;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        $r2 = r0.<org.jsoup.nodes.XmlDeclaration: org.jsoup.nodes.Attributes attributes>;

        $r1 = virtualinvoke $r2.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("declaration");

        return $r1;
    }

    public java.lang.String nodeName()
    {
        org.jsoup.nodes.XmlDeclaration r0;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        return "#declaration";
    }

    void outerHtmlHead(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Document$OutputSettings $r2;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        org.jsoup.nodes.XmlDeclaration r0;
        boolean $z0;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $z0 = r0.<org.jsoup.nodes.XmlDeclaration: boolean isProcessingInstruction>;

        if $z0 == 0 goto label2;

        $r3 = "!";

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke r0.<org.jsoup.nodes.XmlDeclaration: java.lang.String getWholeDeclaration()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        return;

     label2:
        $r3 = "?";

        goto label1;
    }

    void outerHtmlTail(java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings)
    {
        org.jsoup.nodes.Document$OutputSettings $r2;
        int $i0;
        java.lang.StringBuilder $r1;
        org.jsoup.nodes.XmlDeclaration r0;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.jsoup.nodes.Document$OutputSettings;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.jsoup.nodes.XmlDeclaration r0;

        r0 := @this: org.jsoup.nodes.XmlDeclaration;

        $r1 = virtualinvoke r0.<org.jsoup.nodes.XmlDeclaration: java.lang.String outerHtml()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.jsoup.nodes.XmlDeclaration: java.lang.String DECL_KEY> = "declaration";

        return;
    }
}
