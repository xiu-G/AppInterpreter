public class org.htmlparser.tags.ScriptTag extends org.htmlparser.tags.CompositeTag
{
    private static final java.lang.String[] l;
    private static final java.lang.String[] m;
    protected java.lang.String k;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "SCRIPT";

        <org.htmlparser.tags.ScriptTag: java.lang.String[] l> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "BODY";

        $r0[1] = "HTML";

        <org.htmlparser.tags.ScriptTag: java.lang.String[] m> = $r0;

        return;
    }

    public void <init>()
    {
        org.htmlparser.tags.ScriptTag r0;
        kz $r1;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        specialinvoke r0.<org.htmlparser.tags.CompositeTag: void <init>()>();

        $r1 = new kz;

        specialinvoke $r1.<kz: void <init>()>();

        virtualinvoke r0.<org.htmlparser.tags.ScriptTag: void setThisScanner(kx)>($r1);

        return;
    }

    protected final void a(java.lang.StringBuffer, boolean)
    {
        ll $r3;
        org.htmlparser.tags.ScriptTag r0;
        org.htmlparser.Node $r4;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        $r1 := @parameter0: java.lang.StringBuffer;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getScriptCode()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getScriptCode()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return;

     label1:
        $r3 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: ll children()>();

     label2:
        $z1 = interfaceinvoke $r3.<ll: boolean a()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<ll: org.htmlparser.Node b()>();

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke $r4.<org.htmlparser.Node: int getStartPosition()>();

        $i1 = interfaceinvoke $r4.<org.htmlparser.Node: int getEndPosition()>();

        if $i0 == $i1 goto label2;

     label3:
        $r2 = interfaceinvoke $r4.<org.htmlparser.Node: java.lang.String toHtml(boolean)>($z0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        goto label2;

     label4:
        return;
    }

    public java.lang.String[] getEndTagEnders()
    {
        java.lang.String[] r1;
        org.htmlparser.tags.ScriptTag r0;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        r1 = <org.htmlparser.tags.ScriptTag: java.lang.String[] m>;

        return r1;
    }

    public java.lang.String[] getIds()
    {
        java.lang.String[] r1;
        org.htmlparser.tags.ScriptTag r0;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        r1 = <org.htmlparser.tags.ScriptTag: java.lang.String[] l>;

        return r1;
    }

    public java.lang.String getLanguage()
    {
        java.lang.String $r1;
        org.htmlparser.tags.ScriptTag r0;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getAttribute(java.lang.String)>("LANGUAGE");

        return $r1;
    }

    public java.lang.String getScriptCode()
    {
        java.lang.String $r1;
        org.htmlparser.tags.ScriptTag r0;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        $r1 = r0.<org.htmlparser.tags.ScriptTag: java.lang.String k>;

        if $r1 == null goto label1;

        $r1 = r0.<org.htmlparser.tags.ScriptTag: java.lang.String k>;

        return $r1;

     label1:
        $r1 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getChildrenHTML()>();

        return $r1;
    }

    public java.lang.String getType()
    {
        java.lang.String $r1;
        org.htmlparser.tags.ScriptTag r0;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        $r1 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getAttribute(java.lang.String)>("TYPE");

        return $r1;
    }

    public void setLanguage(java.lang.String)
    {
        java.lang.String $r1;
        org.htmlparser.tags.ScriptTag r0;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.htmlparser.tags.ScriptTag: void setAttribute(java.lang.String,java.lang.String)>("LANGUAGE", $r1);

        return;
    }

    public void setScriptCode(java.lang.String)
    {
        java.lang.String $r1;
        org.htmlparser.tags.ScriptTag r0;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        $r1 := @parameter0: java.lang.String;

        r0.<org.htmlparser.tags.ScriptTag: java.lang.String k> = $r1;

        return;
    }

    public void setType(java.lang.String)
    {
        java.lang.String $r1;
        org.htmlparser.tags.ScriptTag r0;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.htmlparser.tags.ScriptTag: void setAttribute(java.lang.String,java.lang.String)>("TYPE", $r1);

        return;
    }

    public java.lang.String toString()
    {
        org.htmlparser.tags.ScriptTag r0;
        java.lang.StringBuffer $r1;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;

        r0 := @this: org.htmlparser.tags.ScriptTag;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Script Node : \n");

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getLanguage()>();

        if $r2 != null goto label1;

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getType()>();

        if $r2 == null goto label3;

     label1:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Properties -->\n");

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getLanguage()>();

        if $r2 == null goto label2;

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getLanguage()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Language : ");

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getLanguage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label2:
        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getType()>();

        if $r2 == null goto label3;

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getType()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Type : ");

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getType()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Code\n");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("****\n");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<org.htmlparser.tags.ScriptTag: java.lang.String getScriptCode()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
