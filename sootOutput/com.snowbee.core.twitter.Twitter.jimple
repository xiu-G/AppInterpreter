public class com.snowbee.core.twitter.Twitter extends java.lang.Object
{
    private java.lang.String API_PATH;
    public oauth.signpost.OAuthConsumer consumer;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        oauth.signpost.OAuthConsumer $r6;
        java.lang.String $r1, $r2, $r3, $r4;
        com.snowbee.core.twitter.Twitter r0;
        oauth.signpost.commonshttp.CommonsHttpOAuthConsumer $r5;

        r0 := @this: com.snowbee.core.twitter.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.snowbee.core.twitter.Twitter: java.lang.String API_PATH> = "http://api.twitter.com/1/";

        $r5 = new oauth.signpost.commonshttp.CommonsHttpOAuthConsumer;

        specialinvoke $r5.<oauth.signpost.commonshttp.CommonsHttpOAuthConsumer: void <init>(java.lang.String,java.lang.String)>("R07fUzuHPmoCDBLGkZoxQ", "lzZxn7f3d2TLYRbQSJYlhG5obiruuQmX1j7g4JCzh0");

        r0.<com.snowbee.core.twitter.Twitter: oauth.signpost.OAuthConsumer consumer> = $r5;

        $r6 = r0.<com.snowbee.core.twitter.Twitter: oauth.signpost.OAuthConsumer consumer>;

        interfaceinvoke $r6.<oauth.signpost.OAuthConsumer: void setTokenWithSecret(java.lang.String,java.lang.String)>($r3, $r4);

        return;
    }

    private static java.lang.String encodeUrl(android.os.Bundle)
    {
        android.os.Bundle $r0;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.lang.StringBuilder r1, $r6;
        java.lang.Object $r5;
        java.lang.String $r4, $r7;
        boolean z0, $z1;

        $r0 := @parameter0: android.os.Bundle;

        if $r0 != null goto label1;

        return "";

     label1:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        z0 = 1;

        $r2 = virtualinvoke $r0.<android.os.Bundle: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r5;

        if z0 == 0 goto label5;

        z0 = 0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

     label4:
        $r6 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        goto label2;

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        goto label4;
    }

    private static java.lang.String read(java.io.InputStream) throws java.io.IOException
    {
        java.lang.StringBuilder r2;
        java.io.BufferedReader r1;
        java.lang.String $r4;
        java.io.InputStreamReader $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        r1 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r3, 1000);

        $r4 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label1:
        if $r4 != null goto label2;

        virtualinvoke r1.<java.io.BufferedReader: void close()>();

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label1;
    }

    public java.lang.String request(java.lang.String, android.os.Bundle, java.util.List, java.lang.String)
    {
        java.util.List r3;
        android.os.Bundle $r2;
        java.lang.String $r1, $r4;
        com.snowbee.core.twitter.Twitter r0;

        r0 := @this: com.snowbee.core.twitter.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: java.util.List;

        $r4 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<com.snowbee.core.twitter.Twitter: java.lang.String requestPost(java.lang.String,android.os.Bundle,java.util.List)>($r1, $r2, r3);

        return $r1;
    }

    public java.lang.String requestGet(java.lang.String, android.os.Bundle)
    {
        org.apache.http.impl.client.DefaultHttpClient r4, $r21;
        java.lang.Throwable $r15, $r16, $r17;
        org.apache.http.client.ClientProtocolException $r22;
        android.os.Bundle $r2;
        org.apache.http.params.BasicHttpParams r5, $r20;
        java.lang.String $r1, $r7;
        com.snowbee.core.twitter.Twitter r0;
        oauth.signpost.exception.OAuthCommunicationException $r14;
        oauth.signpost.exception.OAuthExpectationFailedException $r13;
        org.apache.http.HttpEntity $r10;
        java.io.IOException $r23;
        org.apache.http.client.methods.HttpGet r3, $r19;
        oauth.signpost.OAuthConsumer $r8;
        org.apache.http.HttpResponse $r9;
        java.lang.StringBuilder $r6, $r18;
        oauth.signpost.exception.OAuthMessageSignerException $r12;
        java.io.InputStream $r11;

        r0 := @this: com.snowbee.core.twitter.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        $r19 = new org.apache.http.client.methods.HttpGet;

        r3 = $r19;

        $r18 = new java.lang.StringBuilder;

        $r7 = r0.<com.snowbee.core.twitter.Twitter: java.lang.String API_PATH>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = staticinvoke <com.snowbee.core.twitter.Twitter: java.lang.String encodeUrl(android.os.Bundle)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

        $r8 = r0.<com.snowbee.core.twitter.Twitter: oauth.signpost.OAuthConsumer consumer>;

     label01:
        interfaceinvoke $r8.<oauth.signpost.OAuthConsumer: oauth.signpost.http.HttpRequest sign(java.lang.Object)>(r3);

     label02:
        $r20 = new org.apache.http.params.BasicHttpParams;

        r5 = $r20;

     label03:
        specialinvoke $r20.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r5, 10000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r5, 12000);

     label04:
        $r21 = new org.apache.http.impl.client.DefaultHttpClient;

        r4 = $r21;

     label05:
        specialinvoke $r21.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r5);

        $r9 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r3);

     label06:
        $r1 = "";

     label07:
        $r10 = interfaceinvoke $r9.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r7 = staticinvoke <com.snowbee.core.twitter.Twitter: java.lang.String read(java.io.InputStream)>($r11);

     label08:
        $r1 = $r7;

     label09:
        virtualinvoke r3.<org.apache.http.client.methods.HttpGet: void abort()>();

     label10:
        return $r1;

     label11:
        $r12 := @caughtexception;

        virtualinvoke $r12.<oauth.signpost.exception.OAuthMessageSignerException: void printStackTrace()>();

     label12:
        return "";

     label13:
        $r13 := @caughtexception;

        virtualinvoke $r13.<oauth.signpost.exception.OAuthExpectationFailedException: void printStackTrace()>();

        goto label12;

     label14:
        $r14 := @caughtexception;

        virtualinvoke $r14.<oauth.signpost.exception.OAuthCommunicationException: void printStackTrace()>();

        goto label12;

     label15:
        $r15 := @caughtexception;

        $r22 = (org.apache.http.client.ClientProtocolException) $r15;

        virtualinvoke $r22.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();

        goto label12;

     label16:
        $r16 := @caughtexception;

        $r23 = (java.io.IOException) $r16;

        virtualinvoke $r23.<java.io.IOException: void printStackTrace()>();

        goto label12;

     label17:
        $r17 := @caughtexception;

        goto label09;

        catch oauth.signpost.exception.OAuthMessageSignerException from label01 to label02 with label11;
        catch oauth.signpost.exception.OAuthMessageSignerException from label03 to label04 with label11;
        catch oauth.signpost.exception.OAuthMessageSignerException from label05 to label06 with label11;
        catch oauth.signpost.exception.OAuthExpectationFailedException from label01 to label02 with label13;
        catch oauth.signpost.exception.OAuthExpectationFailedException from label03 to label04 with label13;
        catch oauth.signpost.exception.OAuthExpectationFailedException from label05 to label06 with label13;
        catch oauth.signpost.exception.OAuthCommunicationException from label01 to label02 with label14;
        catch oauth.signpost.exception.OAuthCommunicationException from label03 to label04 with label14;
        catch oauth.signpost.exception.OAuthCommunicationException from label05 to label06 with label14;
        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label15;
        catch org.apache.http.client.ClientProtocolException from label03 to label04 with label15;
        catch org.apache.http.client.ClientProtocolException from label05 to label06 with label15;
        catch java.io.IOException from label01 to label02 with label16;
        catch java.io.IOException from label03 to label04 with label16;
        catch java.io.IOException from label05 to label06 with label16;
        catch java.io.FileNotFoundException from label07 to label08 with label17;
        catch oauth.signpost.exception.OAuthMessageSignerException from label07 to label08 with label11;
        catch oauth.signpost.exception.OAuthExpectationFailedException from label07 to label08 with label13;
        catch oauth.signpost.exception.OAuthCommunicationException from label07 to label08 with label14;
        catch org.apache.http.client.ClientProtocolException from label07 to label08 with label15;
        catch java.io.IOException from label07 to label08 with label16;
        catch oauth.signpost.exception.OAuthMessageSignerException from label09 to label10 with label11;
        catch oauth.signpost.exception.OAuthExpectationFailedException from label09 to label10 with label13;
        catch oauth.signpost.exception.OAuthCommunicationException from label09 to label10 with label14;
        catch org.apache.http.client.ClientProtocolException from label09 to label10 with label15;
        catch java.io.IOException from label09 to label10 with label16;
    }

    public java.lang.String requestPost(java.lang.String, android.os.Bundle, java.util.List)
    {
        org.apache.http.impl.client.DefaultHttpClient r4, $r20;
        java.lang.Throwable $r12;
        org.apache.http.client.methods.HttpPost r6, $r17;
        android.os.Bundle $r2;
        org.apache.http.params.BasicHttpParams r5, $r19;
        org.apache.http.client.entity.UrlEncodedFormEntity $r10, $r18;
        java.lang.String $r1, $r8;
        com.snowbee.core.twitter.Twitter r0;
        oauth.signpost.exception.OAuthCommunicationException $r15;
        oauth.signpost.exception.OAuthExpectationFailedException $r14;
        java.io.IOException $r21;
        java.util.List r3;
        org.apache.http.params.HttpParams $r9;
        oauth.signpost.OAuthConsumer $r11;
        java.lang.StringBuilder $r7, $r16;
        oauth.signpost.exception.OAuthMessageSignerException $r13;

        r0 := @this: com.snowbee.core.twitter.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: java.util.List;

        $r17 = new org.apache.http.client.methods.HttpPost;

        r6 = $r17;

        $r16 = new java.lang.StringBuilder;

        $r8 = r0.<com.snowbee.core.twitter.Twitter: java.lang.String API_PATH>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r7 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = staticinvoke <com.snowbee.core.twitter.Twitter: java.lang.String encodeUrl(android.os.Bundle)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r1);

     label01:
        $r9 = virtualinvoke r6.<org.apache.http.client.methods.HttpPost: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r9.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.expect-continue", 0);

     label02:
        $r18 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        $r10 = $r18;

     label03:
        specialinvoke $r18.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>(r3, "UTF-8");

        virtualinvoke r6.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r10);

     label04:
        $r11 = r0.<com.snowbee.core.twitter.Twitter: oauth.signpost.OAuthConsumer consumer>;

     label05:
        interfaceinvoke $r11.<oauth.signpost.OAuthConsumer: oauth.signpost.http.HttpRequest sign(java.lang.Object)>(r6);

     label06:
        $r19 = new org.apache.http.params.BasicHttpParams;

        r5 = $r19;

     label07:
        specialinvoke $r19.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r5, 10000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r5, 12000);

     label08:
        $r20 = new org.apache.http.impl.client.DefaultHttpClient;

        r4 = $r20;

     label09:
        specialinvoke $r20.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r5);

        virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r6);

        virtualinvoke r6.<org.apache.http.client.methods.HttpPost: void abort()>();

     label10:
        return "";

     label11:
        $r12 := @caughtexception;

        $r21 = (java.io.IOException) $r12;

        virtualinvoke $r21.<java.io.IOException: void printStackTrace()>();

        goto label10;

     label12:
        $r13 := @caughtexception;

        virtualinvoke $r13.<oauth.signpost.exception.OAuthMessageSignerException: void printStackTrace()>();

        goto label10;

     label13:
        $r14 := @caughtexception;

        virtualinvoke $r14.<oauth.signpost.exception.OAuthExpectationFailedException: void printStackTrace()>();

        goto label10;

     label14:
        $r15 := @caughtexception;

        virtualinvoke $r15.<oauth.signpost.exception.OAuthCommunicationException: void printStackTrace()>();

        goto label10;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch oauth.signpost.exception.OAuthMessageSignerException from label01 to label02 with label12;
        catch oauth.signpost.exception.OAuthMessageSignerException from label03 to label04 with label12;
        catch oauth.signpost.exception.OAuthMessageSignerException from label05 to label06 with label12;
        catch oauth.signpost.exception.OAuthMessageSignerException from label07 to label08 with label12;
        catch oauth.signpost.exception.OAuthMessageSignerException from label09 to label10 with label12;
        catch oauth.signpost.exception.OAuthExpectationFailedException from label01 to label02 with label13;
        catch oauth.signpost.exception.OAuthExpectationFailedException from label03 to label04 with label13;
        catch oauth.signpost.exception.OAuthExpectationFailedException from label05 to label06 with label13;
        catch oauth.signpost.exception.OAuthExpectationFailedException from label07 to label08 with label13;
        catch oauth.signpost.exception.OAuthExpectationFailedException from label09 to label10 with label13;
        catch oauth.signpost.exception.OAuthCommunicationException from label01 to label02 with label14;
        catch oauth.signpost.exception.OAuthCommunicationException from label03 to label04 with label14;
        catch oauth.signpost.exception.OAuthCommunicationException from label05 to label06 with label14;
        catch oauth.signpost.exception.OAuthCommunicationException from label07 to label08 with label14;
        catch oauth.signpost.exception.OAuthCommunicationException from label09 to label10 with label14;
    }
}
