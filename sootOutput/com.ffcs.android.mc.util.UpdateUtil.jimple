public class com.ffcs.android.mc.util.UpdateUtil extends java.lang.Object
{
    private static final java.lang.String DEFAULT_CHARSET;
    private static final int DEFAULT_REQ_TIME_OUT;
    private static final int DEFAULT_SO_TIME_OUT;

    public void <init>()
    {
        com.ffcs.android.mc.util.UpdateUtil r0;

        r0 := @this: com.ffcs.android.mc.util.UpdateUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean checkNetWorkAll(android.content.Context)
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean checkSdCardStatus()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $r1 = "mounted";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String downFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        byte[] r6;
        org.apache.http.client.methods.HttpPost r10, $r32;
        java.io.BufferedInputStream r4, $r34;
        org.apache.http.StatusLine $r18;
        boolean $z0;
        org.apache.http.HttpEntity $r19;
        org.apache.http.entity.StringEntity r11, $r33;
        java.lang.Throwable r21, r22, r23, r24, r25, r26, $r27, r28, r29, r30, r31;
        org.apache.http.client.ClientProtocolException $r38;
        java.io.BufferedOutputStream r5, $r37;
        org.apache.http.client.HttpClient $r16;
        int $i0;
        java.lang.String $r0, $r1, $r2, $r3, r12;
        java.io.FileOutputStream r8, r14, $r36;
        java.io.IOException $r39;
        java.io.File r7, r9, r15, $r35;
        org.apache.http.HttpResponse $r17;
        java.io.InputStream r13, $r20;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        r12 = null;

        r13 = null;

        r14 = null;

        r15 = null;

     label01:
        $r16 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: org.apache.http.client.HttpClient getHttpClient(int,int)>(-1, -1);

     label02:
        $r32 = new org.apache.http.client.methods.HttpPost;

     label03:
        r10 = $r32;

     label04:
        specialinvoke $r32.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r0);

     label05:
        $r33 = new org.apache.http.entity.StringEntity;

     label06:
        r11 = $r33;

     label07:
        specialinvoke $r33.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r3, "UTF-8");

        virtualinvoke r10.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>(r11);

        $r17 = interfaceinvoke $r16.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r10);

        $r18 = interfaceinvoke $r17.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r18.<org.apache.http.StatusLine: int getStatusCode()>();

     label08:
        if 200 != $i0 goto label35;

     label09:
        $r19 = interfaceinvoke $r17.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label10:
        if $r19 == null goto label35;

     label11:
        $r20 = interfaceinvoke $r19.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label12:
        r13 = $r20;

     label13:
        $r34 = new java.io.BufferedInputStream;

     label14:
        r4 = $r34;

     label15:
        specialinvoke $r34.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r20);

     label16:
        r7 = new java.io.File;

     label17:
        r9 = r7;

     label18:
        specialinvoke r7.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke r9.<java.io.File: boolean exists()>();

     label19:
        if $z0 != 0 goto label21;

     label20:
        virtualinvoke r9.<java.io.File: boolean mkdir()>();

     label21:
        $r35 = new java.io.File;

     label22:
        r7 = $r35;

     label23:
        specialinvoke $r35.<java.io.File: void <init>(java.io.File,java.lang.String)>(r9, "/temp.jar");

     label24:
        $r36 = new java.io.FileOutputStream;

     label25:
        r8 = $r36;

     label26:
        specialinvoke $r36.<java.io.FileOutputStream: void <init>(java.io.File)>(r7);

     label27:
        $r37 = new java.io.BufferedOutputStream;

     label28:
        r5 = $r37;

     label29:
        specialinvoke $r37.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r8);

     label30:
        r6 = newarray (byte)[1024];

     label31:
        $i0 = virtualinvoke r4.<java.io.BufferedInputStream: int read(byte[])>(r6);

     label32:
        if $i0 > 0 goto label40;

     label33:
        virtualinvoke r5.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke r8.<java.io.FileOutputStream: void flush()>();

        $r0 = virtualinvoke r7.<java.io.File: java.lang.String getAbsolutePath()>();

     label34:
        r12 = $r0;

        r14 = r8;

     label35:
        if r13 == null goto label37;

     label36:
        virtualinvoke r13.<java.io.InputStream: void close()>();

     label37:
        if r14 == null goto label86;

     label38:
        virtualinvoke r14.<java.io.FileOutputStream: void close()>();

     label39:
        return r12;

     label40:
        virtualinvoke r5.<java.io.BufferedOutputStream: void write(byte[],int,int)>(r6, 0, $i0);

     label41:
        goto label31;

     label42:
        r21 := @caughtexception;

        r14 = r8;

     label43:
        $r38 = (org.apache.http.client.ClientProtocolException) r21;

        virtualinvoke $r38.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();

     label44:
        if r13 == null goto label46;

     label45:
        virtualinvoke r13.<java.io.InputStream: void close()>();

     label46:
        if r14 == null goto label87;

     label47:
        virtualinvoke r14.<java.io.FileOutputStream: void close()>();

     label48:
        return null;

     label49:
        r22 := @caughtexception;

        $r39 = (java.io.IOException) r22;

        virtualinvoke $r39.<java.io.IOException: void printStackTrace()>();

        return null;

     label50:
        r23 := @caughtexception;

        $r39 = (java.io.IOException) r23;

        virtualinvoke $r39.<java.io.IOException: void printStackTrace()>();

        goto label46;

     label51:
        r24 := @caughtexception;

     label52:
        $r39 = (java.io.IOException) r24;

        virtualinvoke $r39.<java.io.IOException: void printStackTrace()>();

     label53:
        if r15 == null goto label57;

     label54:
        $z0 = virtualinvoke r15.<java.io.File: boolean exists()>();

     label55:
        if $z0 == 0 goto label57;

     label56:
        virtualinvoke r15.<java.io.File: boolean delete()>();

     label57:
        if r13 == null goto label59;

     label58:
        virtualinvoke r13.<java.io.InputStream: void close()>();

     label59:
        if r14 == null goto label87;

     label60:
        virtualinvoke r14.<java.io.FileOutputStream: void close()>();

     label61:
        return null;

     label62:
        r25 := @caughtexception;

        $r39 = (java.io.IOException) r25;

        virtualinvoke $r39.<java.io.IOException: void printStackTrace()>();

        return null;

     label63:
        r26 := @caughtexception;

        $r39 = (java.io.IOException) r26;

        virtualinvoke $r39.<java.io.IOException: void printStackTrace()>();

        goto label59;

     label64:
        $r27 := @caughtexception;

     label65:
        if r13 == null goto label67;

     label66:
        virtualinvoke r13.<java.io.InputStream: void close()>();

     label67:
        if r14 == null goto label69;

     label68:
        virtualinvoke r14.<java.io.FileOutputStream: void close()>();

     label69:
        throw $r27;

     label70:
        r28 := @caughtexception;

        $r39 = (java.io.IOException) r28;

        virtualinvoke $r39.<java.io.IOException: void printStackTrace()>();

        goto label67;

     label71:
        r29 := @caughtexception;

        $r39 = (java.io.IOException) r29;

        virtualinvoke $r39.<java.io.IOException: void printStackTrace()>();

        goto label69;

     label72:
        r30 := @caughtexception;

        $r39 = (java.io.IOException) r30;

        virtualinvoke $r39.<java.io.IOException: void printStackTrace()>();

        goto label37;

     label73:
        r31 := @caughtexception;

        $r39 = (java.io.IOException) r31;

        virtualinvoke $r39.<java.io.IOException: void printStackTrace()>();

        return r12;

     label74:
        $r27 := @caughtexception;

        goto label65;

     label75:
        $r27 := @caughtexception;

        goto label65;

     label76:
        $r27 := @caughtexception;

        r14 = r8;

        goto label65;

     label77:
        $r27 := @caughtexception;

        r14 = r8;

        goto label65;

     label78:
        r24 := @caughtexception;

        goto label52;

     label79:
        r24 := @caughtexception;

        r15 = r7;

        goto label52;

     label80:
        r24 := @caughtexception;

        r15 = r7;

        r14 = r8;

        goto label52;

     label81:
        r24 := @caughtexception;

        r15 = r7;

        r14 = r8;

        goto label52;

     label82:
        r21 := @caughtexception;

        goto label43;

     label83:
        r21 := @caughtexception;

        goto label43;

     label84:
        r21 := @caughtexception;

        goto label43;

     label85:
        r21 := @caughtexception;

        r14 = r8;

        goto label43;

     label86:
        return r12;

     label87:
        return null;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label82;
        catch org.apache.http.client.ClientProtocolException from label04 to label05 with label82;
        catch org.apache.http.client.ClientProtocolException from label07 to label08 with label82;
        catch org.apache.http.client.ClientProtocolException from label09 to label10 with label82;
        catch org.apache.http.client.ClientProtocolException from label11 to label12 with label82;
        catch org.apache.http.client.ClientProtocolException from label15 to label16 with label82;
        catch java.io.IOException from label01 to label02 with label51;
        catch java.io.IOException from label04 to label05 with label51;
        catch java.io.IOException from label07 to label08 with label51;
        catch java.io.IOException from label09 to label10 with label51;
        catch java.io.IOException from label11 to label12 with label51;
        catch java.io.IOException from label15 to label16 with label51;
        catch java.lang.Throwable from label01 to label03 with label64;
        catch java.lang.Throwable from label04 to label06 with label64;
        catch java.lang.Throwable from label07 to label08 with label64;
        catch java.lang.Throwable from label09 to label10 with label64;
        catch java.lang.Throwable from label11 to label12 with label64;
        catch java.lang.Throwable from label13 to label14 with label64;
        catch java.lang.Throwable from label15 to label16 with label64;
        catch org.apache.http.client.ClientProtocolException from label18 to label19 with label83;
        catch org.apache.http.client.ClientProtocolException from label20 to label21 with label83;
        catch org.apache.http.client.ClientProtocolException from label23 to label24 with label83;
        catch java.io.IOException from label18 to label19 with label78;
        catch java.io.IOException from label20 to label21 with label78;
        catch java.io.IOException from label23 to label24 with label78;
        catch java.lang.Throwable from label16 to label17 with label74;
        catch java.lang.Throwable from label18 to label19 with label74;
        catch java.lang.Throwable from label20 to label22 with label74;
        catch java.lang.Throwable from label23 to label24 with label74;
        catch org.apache.http.client.ClientProtocolException from label26 to label27 with label84;
        catch java.io.IOException from label26 to label27 with label79;
        catch java.lang.Throwable from label24 to label25 with label75;
        catch java.lang.Throwable from label26 to label27 with label75;
        catch org.apache.http.client.ClientProtocolException from label29 to label30 with label85;
        catch java.io.IOException from label29 to label30 with label80;
        catch java.lang.Throwable from label27 to label28 with label76;
        catch java.lang.Throwable from label29 to label30 with label76;
        catch org.apache.http.client.ClientProtocolException from label31 to label32 with label42;
        catch org.apache.http.client.ClientProtocolException from label33 to label34 with label42;
        catch java.io.IOException from label31 to label32 with label81;
        catch java.io.IOException from label33 to label34 with label81;
        catch java.lang.Throwable from label31 to label32 with label77;
        catch java.lang.Throwable from label33 to label34 with label77;
        catch java.io.IOException from label36 to label37 with label72;
        catch java.io.IOException from label38 to label39 with label73;
        catch org.apache.http.client.ClientProtocolException from label40 to label41 with label42;
        catch java.io.IOException from label40 to label41 with label81;
        catch java.lang.Throwable from label40 to label41 with label77;
        catch java.lang.Throwable from label43 to label44 with label64;
        catch java.io.IOException from label45 to label46 with label50;
        catch java.io.IOException from label47 to label48 with label49;
        catch java.lang.Throwable from label52 to label53 with label64;
        catch java.lang.Throwable from label54 to label55 with label64;
        catch java.lang.Throwable from label56 to label57 with label64;
        catch java.io.IOException from label58 to label59 with label63;
        catch java.io.IOException from label60 to label61 with label62;
        catch java.io.IOException from label66 to label67 with label70;
        catch java.io.IOException from label68 to label69 with label71;
    }

    public static java.lang.String executePost(java.lang.String, java.lang.String)
    {
        java.io.PrintStream $r6;
        org.apache.http.client.methods.HttpPost r3;
        org.apache.http.HttpEntity $r10;
        org.apache.http.entity.StringEntity r4;
        org.apache.http.StatusLine $r9;
        java.lang.Exception r2;
        org.apache.http.client.HttpClient $r5;
        int $i0;
        org.apache.http.HttpResponse $r8;
        java.lang.StringBuilder $r7;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label01:
        $r5 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: org.apache.http.client.HttpClient getHttpClient(int,int)>(30000, 10000);

     label02:
        r3 = new org.apache.http.client.methods.HttpPost;

     label03:
        specialinvoke r3.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("http://update.mimsc.com/mcpush/app/mc.do?action=checkUpdate");

        virtualinvoke r3.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Content-type", "text/plain; charset=UTF-8");

     label04:
        r4 = new org.apache.http.entity.StringEntity;

     label05:
        specialinvoke r4.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r1, "UTF-8");

        virtualinvoke r3.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>(r4);

     label06:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(" httpclient.execute(post)::>>");

        $r0 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r0);

        $r8 = interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r3);

     label08:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("response.toString()::");

        $r0 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r0);

        $r9 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r9.<org.apache.http.StatusLine: int getStatusCode()>();

     label10:
        if 200 != $i0 goto label16;

     label11:
        $r10 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label12:
        if $r10 == null goto label16;

     label13:
        $r0 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>($r10, "UTF-8");

     label14:
        return $r0;

     label15:
        r2 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>(r2);

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

     label16:
        return null;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    private static org.apache.http.client.HttpClient getHttpClient(int, int)
    {
        org.apache.http.impl.client.DefaultHttpClient r1;
        org.apache.http.params.BasicHttpParams r0;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0 = new org.apache.http.params.BasicHttpParams;

        specialinvoke r0.<org.apache.http.params.BasicHttpParams: void <init>()>();

        if $i0 <= 0 goto label1;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r0, $i0);

     label1:
        if $i1 <= 0 goto label2;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r0, $i1);

     label2:
        r1 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke r1.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r0);

        return r1;
    }

    public static java.lang.String getPath(android.content.Context)
    {
        android.content.Context $r0, $r3;
        java.io.File r1;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r5;
        java.lang.String r2, $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        r2 = "";

     label01:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        r1 = virtualinvoke $r3.<android.content.Context: java.io.File getFilesDir()>();

     label02:
        if r1 == null goto label06;

     label03:
        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

     label04:
        r2 = $r4;

     label05:
        return r2;

     label06:
        $z0 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: boolean checkSdCardStatus()>();

     label07:
        if $z0 == 0 goto label15;

        $r5 = new java.lang.StringBuilder;

     label08:
        r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/");

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        r2 = $r4;

        r1 = new java.io.File;

     label10:
        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

     label11:
        if $z0 != 0 goto label05;

     label12:
        virtualinvoke r1.<java.io.File: boolean mkdir()>();

     label13:
        goto label05;

     label14:
        $r6 := @caughtexception;

        goto label05;

     label15:
        return "";

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public static java.lang.String getSdCardRootPath()
    {
        java.lang.String $r1;
        java.io.File $r0;

        $r0 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        return $r1;
    }

    public static boolean sdkDownload(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Throwable r4;
        android.content.Context $r0;
        java.io.IOException $r11;
        java.io.File r5, r8, $r10;
        java.lang.StringBuilder $r7, $r9;
        java.lang.String $r1, $r2, $r3, $r6;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r6 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: java.lang.String getPath(android.content.Context)>($r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $r1 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: java.lang.String downFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r6, "/temp.jar", $r3);

        r8 = new java.io.File;

        r5 = r8;

        $r9 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mc.jar");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r8.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label10;

        $r10 = new java.io.File;

        r8 = $r10;

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r1);

     label02:
        $r1 = staticinvoke <com.ffcs.android.mc.util.MD5Util: java.lang.String getFileMD5String_deprecated(java.io.File)>(r8);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label03:
        if $z0 == 0 goto label14;

     label04:
        $z0 = virtualinvoke r5.<java.io.File: boolean exists()>();

     label05:
        if $z0 == 0 goto label11;

     label06:
        $z0 = virtualinvoke r5.<java.io.File: boolean delete()>();

     label07:
        if $z0 == 0 goto label09;

     label08:
        virtualinvoke r8.<java.io.File: boolean renameTo(java.io.File)>(r5);

     label09:
        return 1;

     label10:
        return 0;

     label11:
        virtualinvoke r8.<java.io.File: boolean renameTo(java.io.File)>(r5);

     label12:
        goto label09;

     label13:
        r4 := @caughtexception;

        $r11 = (java.io.IOException) r4;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        return 0;

     label14:
        virtualinvoke r8.<java.io.File: boolean delete()>();

     label15:
        return 0;

        catch java.io.IOException from label02 to label03 with label13;
        catch java.io.IOException from label04 to label05 with label13;
        catch java.io.IOException from label06 to label07 with label13;
        catch java.io.IOException from label08 to label09 with label13;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label14 to label15 with label13;
    }

    public static void <clinit>()
    {
        <com.ffcs.android.mc.util.UpdateUtil: int DEFAULT_SO_TIME_OUT> = 10000;

        <com.ffcs.android.mc.util.UpdateUtil: int DEFAULT_REQ_TIME_OUT> = 30000;

        <com.ffcs.android.mc.util.UpdateUtil: java.lang.String DEFAULT_CHARSET> = "UTF-8";

        return;
    }
}
