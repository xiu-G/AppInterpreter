public class com.actionbarsherlock.internal.view.menu.MenuBuilder extends java.lang.Object implements com.actionbarsherlock.view.Menu
{
    private static final java.lang.String ACTION_VIEW_STATES_KEY;
    private static final java.lang.String EXPANDED_ACTION_VIEW_ID;
    private static final java.lang.String PRESENTER_KEY;
    private static final int[] sCategoryToOrder;
    private java.util.ArrayList mActionItems;
    private com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback;
    private final android.content.Context mContext;
    private android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo;
    private int mDefaultShowAsAction;
    private com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem;
    android.graphics.drawable.Drawable mHeaderIcon;
    java.lang.CharSequence mHeaderTitle;
    android.view.View mHeaderView;
    private boolean mIsActionItemsStale;
    private boolean mIsClosing;
    private boolean mIsVisibleItemsStale;
    private java.util.ArrayList mItems;
    private boolean mItemsChangedWhileDispatchPrevented;
    private java.util.ArrayList mNonActionItems;
    private boolean mOptionalIconsVisible;
    private java.util.concurrent.CopyOnWriteArrayList mPresenters;
    private boolean mPreventDispatchingItemsChanged;
    private boolean mQwertyMode;
    private final android.content.res.Resources mResources;
    private boolean mShortcutsVisible;
    private java.util.ArrayList mTempShortcutItemList;
    private java.util.ArrayList mVisibleItems;

    static void <clinit>()
    {
        int[] $r0;

        <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String PRESENTER_KEY> = "android:menu:presenters";

        <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String EXPANDED_ACTION_VIEW_ID> = "android:menu:expandedactionview";

        <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String ACTION_VIEW_STATES_KEY> = "android:menu:actionviewstates";

        $r0 = newarray (int)[6];

        $r0[0] = 1;

        $r0[1] = 4;

        $r0[2] = 5;

        $r0[3] = 3;

        $r0[4] = 2;

        <com.actionbarsherlock.internal.view.menu.MenuBuilder: int[] sCategoryToOrder> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        android.content.res.Resources $r2;
        java.util.ArrayList $r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int mDefaultShowAsAction> = 0;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged> = 0;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented> = 0;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mOptionalIconsVisible> = 0;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsClosing> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mTempShortcutItemList> = $r3;

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters> = $r4;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context mContext> = $r1;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources mResources> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mVisibleItems> = $r3;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsVisibleItemsStale> = 1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mActionItems> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems> = $r3;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsActionItemsStale> = 1;

        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)>(1);

        return;
    }

    private com.actionbarsherlock.view.MenuItem addInternal(int, int, int, java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r2;
        java.util.ArrayList $r4, $r5;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.ContextMenu$ContextMenuInfo $r3;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 := @parameter3: java.lang.CharSequence;

        $i4 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuBuilder: int getOrdering(int)>($i2);

        $r2 = new com.actionbarsherlock.internal.view.menu.MenuItemImpl;

        $i3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int mDefaultShowAsAction>;

        specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void <init>(com.actionbarsherlock.internal.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)>(r0, $i0, $i1, $i2, $i4, $r1, $i3);

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo>;

        if $r3 == null goto label1;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo>;

        virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)>($r3);

     label1:
        $r4 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r5 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $i0 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findInsertIndex(java.util.ArrayList,int)>($r5, $i4);

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, $r2);

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

        return $r2;
    }

    private void dispatchPresenterUpdate(boolean)
    {
        java.util.Iterator $r2;
        com.actionbarsherlock.internal.view.menu.MenuPresenter $r5;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        boolean $z0, $z1;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $z1 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

        return;

     label3:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.ref.WeakReference) $r3;

        $r3 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (com.actionbarsherlock.internal.view.menu.MenuPresenter) $r3;

        if $r5 != null goto label4;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r4);

        goto label2;

     label4:
        interfaceinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuPresenter: void updateMenuView(boolean)>($z0);

        goto label2;
    }

    private void dispatchRestoreInstanceState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.os.Parcelable $r8;
        java.util.Iterator $r4;
        com.actionbarsherlock.internal.view.menu.MenuPresenter $r7;
        android.util.SparseArray $r2;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r6;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = virtualinvoke $r1.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:menu:presenters");

        if $r2 == null goto label4;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.ref.WeakReference) $r5;

        $r5 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (com.actionbarsherlock.internal.view.menu.MenuPresenter) $r5;

        if $r7 != null goto label3;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r6);

        goto label2;

     label3:
        $i0 = interfaceinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuPresenter: int getId()>();

        if $i0 <= 0 goto label2;

        $r5 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r8 = (android.os.Parcelable) $r5;

        if $r8 == null goto label2;

        interfaceinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>($r8);

        goto label2;

     label4:
        return;
    }

    private void dispatchSaveInstanceState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.os.Parcelable $r8;
        java.util.Iterator $r4;
        com.actionbarsherlock.internal.view.menu.MenuPresenter $r7;
        android.util.SparseArray $r2;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r6;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.os.Bundle;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        virtualinvoke $r1.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>("android:menu:presenters", $r2);

        return;

     label3:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.ref.WeakReference) $r5;

        $r5 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (com.actionbarsherlock.internal.view.menu.MenuPresenter) $r5;

        if $r7 != null goto label4;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r6);

        goto label2;

     label4:
        $i0 = interfaceinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuPresenter: int getId()>();

        if $i0 <= 0 goto label2;

        $r8 = interfaceinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuPresenter: android.os.Parcelable onSaveInstanceState()>();

        if $r8 == null goto label2;

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r8);

        goto label2;
    }

    private boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)
    {
        java.util.Iterator $r3;
        com.actionbarsherlock.internal.view.menu.MenuPresenter $r6;
        com.actionbarsherlock.internal.view.menu.SubMenuBuilder $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r5;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0, $z1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.internal.view.menu.SubMenuBuilder;

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

        $z0 = 0;

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        return $z0;

     label3:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.ref.WeakReference) $r4;

        $r4 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (com.actionbarsherlock.internal.view.menu.MenuPresenter) $r4;

        if $r6 != null goto label4;

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r5);

        goto label2;

     label4:
        if $z0 != 0 goto label2;

        $z0 = interfaceinvoke $r6.<com.actionbarsherlock.internal.view.menu.MenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>($r1);

        goto label2;
    }

    private static int findInsertIndex(java.util.ArrayList, int)
    {
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r2;
        java.util.ArrayList $r0;

        $r0 := @parameter0: java.util.ArrayList;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $i1 = $i1 + -1;

     label1:
        if $i1 >= 0 goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r2 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r1;

        $i2 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getOrdering()>();

        if $i2 > $i0 goto label3;

        $i0 = $i1 + 1;

        return $i0;

     label3:
        $i1 = $i1 + -1;

        goto label1;
    }

    private static int getOrdering(int)
    {
        int[] $r0;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;

        $i0 := @parameter0: int;

        $i1 = -65536 & $i0;

        $i1 = $i1 >> 16;

        if $i1 < 0 goto label1;

        $r0 = <com.actionbarsherlock.internal.view.menu.MenuBuilder: int[] sCategoryToOrder>;

        $i2 = lengthof $r0;

        if $i1 < $i2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("order does not contain a valid category.");

        throw $r1;

     label2:
        $r0 = <com.actionbarsherlock.internal.view.menu.MenuBuilder: int[] sCategoryToOrder>;

        $i1 = $r0[$i1];

        $i1 = $i1 << 16;

        $i0 = 65535 & $i0;

        $i0 = $i1 | $i0;

        return $i0;
    }

    private void removeItemAtInt(int, boolean)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        if $i0 < 0 goto label2;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 < $i1 goto label1;

        return;

     label1:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

     label2:
        return;
    }

    private void setHeaderInternal(int, java.lang.CharSequence, int, android.graphics.drawable.Drawable, android.view.View)
    {
        java.lang.CharSequence $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1;
        android.view.View $r3;
        android.graphics.drawable.Drawable $r2;
        android.content.res.Resources $r4;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.CharSequence;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.graphics.drawable.Drawable;

        $r3 := @parameter4: android.view.View;

        $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()>();

        goto label3;

     label1:
        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0);

        return;

     label2:
        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.view.View mHeaderView> = null;

        goto label1;

     label3:
        if $r1 == null goto label2;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.CharSequence mHeaderTitle> = $r1;

        goto label2;
    }

    private void setShortcutsVisibleInner(boolean)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        android.content.res.Configuration $r2;
        int $i0;
        boolean $z0, $z1;
        android.content.res.Resources $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $z0 := @parameter0: boolean;

        $z1 = 1;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources mResources>;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r2.<android.content.res.Configuration: int keyboard>;

        if $i0 == 1 goto label2;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources mResources>;

        $i0 = <com.actionbarsherlock.R$bool: int abs__config_showMenuShortcutsWhenKeyboardPresent>;

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>($i0);

        if $z0 == 0 goto label2;

     label1:
        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mShortcutsVisible> = $z1;

        return;

     label2:
        $z1 = 0;

        goto label1;
    }

    public com.actionbarsherlock.view.MenuItem add(int)
    {
        com.actionbarsherlock.view.MenuItem $r3;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0;
        java.lang.String $r2;
        android.content.res.Resources $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources mResources>;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r3 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>(0, 0, 0, $r2);

        return $r3;
    }

    public com.actionbarsherlock.view.MenuItem add(int, int, int, int)
    {
        com.actionbarsherlock.view.MenuItem $r3;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2;
        android.content.res.Resources $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources mResources>;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i3);

        $r3 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r2);

        return $r3;
    }

    public com.actionbarsherlock.view.MenuItem add(int, int, int, java.lang.CharSequence)
    {
        com.actionbarsherlock.view.MenuItem $r2;
        java.lang.CharSequence $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 := @parameter3: java.lang.CharSequence;

        $r2 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r1);

        return $r2;
    }

    public com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence)
    {
        com.actionbarsherlock.view.MenuItem $r2;
        java.lang.CharSequence $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>(0, 0, 0, $r1);

        return $r2;
    }

    public int addIntentOptions(int, int, int, android.content.ComponentName, android.content.Intent[], android.content.Intent, int, com.actionbarsherlock.view.MenuItem[])
    {
        android.content.Context $r5;
        com.actionbarsherlock.view.MenuItem[] $r4;
        android.content.pm.PackageManager $r6;
        android.content.Intent $r3, $r10, $r11;
        android.graphics.drawable.Drawable $r18;
        com.actionbarsherlock.view.MenuItem $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.content.pm.ActivityInfo $r12;
        android.content.Intent[] $r2;
        java.lang.String $r14, $r15;
        java.lang.CharSequence $r16;
        android.content.ComponentName $r1;
        android.content.pm.ResolveInfo $r9;
        java.util.List $r7;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.lang.Object $r8;
        android.content.pm.ApplicationInfo $r13;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 := @parameter3: android.content.ComponentName;

        $r2 := @parameter4: android.content.Intent[];

        $r3 := @parameter5: android.content.Intent;

        $i3 := @parameter6: int;

        $r4 := @parameter7: com.actionbarsherlock.view.MenuItem[];

        $r5 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>($r1, $r2, $r3, 0);

        if $r7 == null goto label4;

        $i4 = interfaceinvoke $r7.<java.util.List: int size()>();

     label1:
        $i3 = $i3 & 1;

        if $i3 != 0 goto label2;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeGroup(int)>($i0);

     label2:
        $i3 = 0;

     label3:
        if $i3 < $i4 goto label5;

        return $i4;

     label4:
        $i4 = 0;

        goto label1;

     label5:
        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i3);

        $r9 = (android.content.pm.ResolveInfo) $r8;

        $r10 = new android.content.Intent;

        $i5 = $r9.<android.content.pm.ResolveInfo: int specificIndex>;

        if $i5 >= 0 goto label8;

        $r11 = $r3;

     label6:
        specialinvoke $r10.<android.content.Intent: void <init>(android.content.Intent)>($r11);

        $r1 = new android.content.ComponentName;

        $r12 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r13 = $r12.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = $r13.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r12 = $r9.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r15 = $r12.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r14, $r15);

        virtualinvoke $r10.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r1);

        $r16 = virtualinvoke $r9.<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r6);

        $r17 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r16);

        $r18 = virtualinvoke $r9.<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>($r6);

        $r17 = interfaceinvoke $r17.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable)>($r18);

        $r17 = interfaceinvoke $r17.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent)>($r10);

        if $r4 == null goto label7;

        $i5 = $r9.<android.content.pm.ResolveInfo: int specificIndex>;

        if $i5 < 0 goto label7;

        $i5 = $r9.<android.content.pm.ResolveInfo: int specificIndex>;

        $r4[$i5] = $r17;

     label7:
        $i3 = $i3 + 1;

        goto label3;

     label8:
        $i5 = $r9.<android.content.pm.ResolveInfo: int specificIndex>;

        $r11 = $r2[$i5];

        goto label6;
    }

    public void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)
    {
        android.content.Context $r4;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        com.actionbarsherlock.internal.view.menu.MenuPresenter $r1;
        java.lang.ref.WeakReference $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.internal.view.menu.MenuPresenter;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r2);

        $r4 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context mContext>;

        interfaceinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>($r4, r0);

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsActionItemsStale> = 1;

        return;
    }

    public com.actionbarsherlock.view.SubMenu addSubMenu(int)
    {
        com.actionbarsherlock.view.SubMenu $r3;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0;
        java.lang.String $r2;
        android.content.res.Resources $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources mResources>;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>(0, 0, 0, $r2);

        return $r3;
    }

    public com.actionbarsherlock.view.SubMenu addSubMenu(int, int, int, int)
    {
        com.actionbarsherlock.view.SubMenu $r3;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2;
        android.content.res.Resources $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources mResources>;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i3);

        $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r2);

        return $r3;
    }

    public com.actionbarsherlock.view.SubMenu addSubMenu(int, int, int, java.lang.CharSequence)
    {
        android.content.Context $r3;
        java.lang.CharSequence $r1;
        com.actionbarsherlock.internal.view.menu.SubMenuBuilder $r2;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r5;
        com.actionbarsherlock.view.MenuItem $r4;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 := @parameter3: java.lang.CharSequence;

        $r4 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r1);

        $r5 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r4;

        $r2 = new com.actionbarsherlock.internal.view.menu.SubMenuBuilder;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context mContext>;

        specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>($r3, r0, $r5);

        virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>($r2);

        return $r2;
    }

    public com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        com.actionbarsherlock.view.SubMenu $r2;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>(0, 0, 0, $r1);

        return $r2;
    }

    public boolean bindNativeOverflow(android.view.Menu, android.view.MenuItem$OnMenuItemClickListener, java.util.HashMap)
    {
        java.util.HashMap $r3;
        android.content.Intent $r15;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r7, $r16;
        android.graphics.drawable.Drawable $r14;
        java.util.ArrayList $r4;
        android.view.MenuItem $r13;
        com.actionbarsherlock.view.SubMenu $r10;
        android.view.Menu $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        android.view.MenuItem$OnMenuItemClickListener $r2;
        java.util.Iterator $r5, $r12;
        java.lang.CharSequence $r8;
        char $c3;
        android.view.SubMenu $r9;
        com.actionbarsherlock.internal.view.menu.SubMenuBuilder $r11;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.lang.Object $r6;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.view.Menu;

        $r2 := @parameter1: android.view.MenuItem$OnMenuItemClickListener;

        $r3 := @parameter2: java.util.HashMap;

        $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>();

        if $r4 == null goto label01;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 0 goto label02;

     label01:
        return 0;

     label02:
        interfaceinvoke $r1.<android.view.Menu: void clear()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = 0;

     label03:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r6;

        $z1 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>();

        if $z1 == 0 goto label03;

        $z0 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>();

        if $z0 == 0 goto label09;

        $i0 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        $i1 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>();

        $i2 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getOrder()>();

        $r8 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>();

        $r9 = interfaceinvoke $r1.<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r8);

        $r10 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.SubMenu getSubMenu()>();

        $r11 = (com.actionbarsherlock.internal.view.menu.SubMenuBuilder) $r10;

        $r4 = virtualinvoke $r11.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: java.util.ArrayList getVisibleItems()>();

        $r12 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label07;

        $r13 = interfaceinvoke $r9.<android.view.SubMenu: android.view.MenuItem getItem()>();

     label05:
        $r14 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>($r14);

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r2);

        $z0 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z0);

        $r15 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>($r15);

        $c3 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setNumericShortcut(char)>($c3);

        $c3 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>($c3);

        $r8 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>($r8);

        $z0 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isCheckable()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setCheckable(boolean)>($z0);

        $z0 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isChecked()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>($z0);

        $z0 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>();

        if $z0 == 0 goto label06;

        $i0 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        interfaceinvoke $r1.<android.view.Menu: void setGroupCheckable(int,boolean,boolean)>($i0, 1, 1);

     label06:
        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r7);

        $z0 = 1;

        goto label03;

     label07:
        $r6 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r6;

        $i0 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        $i1 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>();

        $i2 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getOrder()>();

        $r8 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>();

        $r13 = interfaceinvoke $r9.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r8);

        $r14 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>($r14);

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r2);

        $z0 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z0);

        $r15 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>($r15);

        $c3 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setNumericShortcut(char)>($c3);

        $c3 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>($c3);

        $r8 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>($r8);

        $z0 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isCheckable()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setCheckable(boolean)>($z0);

        $z0 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isChecked()>();

        interfaceinvoke $r13.<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>($z0);

        $z0 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>();

        if $z0 == 0 goto label08;

        $i0 = virtualinvoke $r16.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        interfaceinvoke $r9.<android.view.SubMenu: void setGroupCheckable(int,boolean,boolean)>($i0, 1, 1);

     label08:
        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r16);

        goto label04;

     label09:
        $i0 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        $i1 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>();

        $i2 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getOrder()>();

        $r8 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>();

        $r13 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r8);

        goto label05;

     label10:
        return $z0;
    }

    public void changeMenuMode()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback>;

        if $r1 == null goto label1;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback>;

        interfaceinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>(r0);

     label1:
        return;
    }

    public void clear()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem>;

        if $r1 == null goto label1;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem>;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>($r1);

     label1:
        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

        return;
    }

    public void clearAll()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged> = 1;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void clear()>();

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void clearHeader()>();

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged> = 0;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented> = 0;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

        return;
    }

    public void clearHeader()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.graphics.drawable.Drawable mHeaderIcon> = null;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.CharSequence mHeaderTitle> = null;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.view.View mHeaderView> = null;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0);

        return;
    }

    public void close()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(1);

        return;
    }

    final void close(boolean)
    {
        java.util.Iterator $r2;
        com.actionbarsherlock.internal.view.menu.MenuPresenter $r5;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;
        boolean $z0, $z1;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsClosing>;

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsClosing> = 1;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsClosing> = 0;

        return;

     label3:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.ref.WeakReference) $r3;

        $r3 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (com.actionbarsherlock.internal.view.menu.MenuPresenter) $r3;

        if $r5 != null goto label4;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r4);

        goto label2;

     label4:
        interfaceinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuPresenter: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>(r0, $z0);

        goto label2;
    }

    public boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)
    {
        java.util.Iterator $r4;
        com.actionbarsherlock.internal.view.menu.MenuPresenter $r7;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r1, $r3;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r6;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0, $z1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.internal.view.menu.MenuItemImpl;

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem>;

        if $r3 == $r1 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $r4 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

        $z0 = 0;

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label4;

     label3:
        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

        if $z0 == 0 goto label7;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem> = null;

        return $z0;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.ref.WeakReference) $r5;

        $r5 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (com.actionbarsherlock.internal.view.menu.MenuPresenter) $r5;

        if $r7 != null goto label5;

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r6);

        goto label2;

     label5:
        $z1 = interfaceinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>(r0, $r1);

        $z0 = $z1;

        if $z1 != 0 goto label3;

        $z0 = $z1;

        goto label2;

     label6:
        return 0;

     label7:
        return $z0;
    }

    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder, com.actionbarsherlock.view.MenuItem)
    {
        com.actionbarsherlock.view.MenuItem $r2;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0, $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback $r3;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r2 := @parameter1: com.actionbarsherlock.view.MenuItem;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback>;

        if $r3 == null goto label1;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback>;

        $z0 = interfaceinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>($r1, $r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)
    {
        java.util.Iterator $r3;
        com.actionbarsherlock.internal.view.menu.MenuPresenter $r6;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r5;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0, $z1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.internal.view.menu.MenuItemImpl;

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

        $z0 = 0;

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label4;

     label3:
        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

        if $z0 == 0 goto label6;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem> = $r1;

        return $z0;

     label4:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.ref.WeakReference) $r4;

        $r4 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (com.actionbarsherlock.internal.view.menu.MenuPresenter) $r4;

        if $r6 != null goto label5;

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r5);

        goto label2;

     label5:
        $z1 = interfaceinvoke $r6.<com.actionbarsherlock.internal.view.menu.MenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>(r0, $r1);

        $z0 = $z1;

        if $z1 != 0 goto label3;

        $z0 = $z1;

        goto label2;

     label6:
        return $z0;
    }

    public int findGroupIndex(int)
    {
        int $i0;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)>($i0, 0);

        return $i0;
    }

    public int findGroupIndex(int, int)
    {
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r3;
        java.util.ArrayList $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>();

        if $i1 >= 0 goto label1;

        $i1 = 0;

     label1:
        if $i1 < $i2 goto label2;

        $i0 = -1;

        return $i0;

     label2:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        if $i3 != $i0 goto label3;

        return $i1;

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public com.actionbarsherlock.view.MenuItem findItem(int)
    {
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r3;
        java.util.ArrayList $r1;
        com.actionbarsherlock.view.MenuItem $r5;
        com.actionbarsherlock.view.SubMenu $r4;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>();

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label2;

        return null;

     label2:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>();

        if $i3 == $i0 goto label4;

        $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.SubMenu getSubMenu()>();

        $r5 = interfaceinvoke $r4.<com.actionbarsherlock.view.SubMenu: com.actionbarsherlock.view.MenuItem findItem(int)>($i0);

        if $r5 != null goto label5;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        return $r3;

     label5:
        return $r5;
    }

    public int findItemIndex(int)
    {
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r3;
        java.util.ArrayList $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>();

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label2;

        $i0 = -1;

        return $i0;

     label2:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>();

        if $i3 != $i0 goto label3;

        return $i2;

     label3:
        $i2 = $i2 + 1;

        goto label1;
    }

    com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r5;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, $i3, $i6, $i7;
        boolean $z0;
        android.view.KeyCharacterMap$KeyData $r3, $r7;
        char $c4, $c5;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        char[] $r6;
        java.lang.Object $r4;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mTempShortcutItemList>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)>($r2, $i0, $r1);

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return null;

     label01:
        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getMetaState()>();

        $r7 = new android.view.KeyCharacterMap$KeyData;

        $r3 = $r7;

        specialinvoke $r7.<android.view.KeyCharacterMap$KeyData: void <init>()>();

        virtualinvoke $r1.<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap$KeyData)>($r3);

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i2 != 1 goto label02;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r5 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r4;

        return $r5;

     label02:
        $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>();

        $i3 = 0;

     label03:
        if $i3 < $i2 goto label04;

        return null;

     label04:
        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r4;

        if $z0 == 0 goto label09;

        $c4 = virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>();

     label05:
        $r6 = $r3.<android.view.KeyCharacterMap$KeyData: char[] meta>;

        $c5 = $r6[0];

        $i6 = (int) $c4;

        $i7 = (int) $c5;

        if $i6 != $i7 goto label06;

        $i6 = $i1 & 2;

        if $i6 == 0 goto label10;

     label06:
        $r6 = $r3.<android.view.KeyCharacterMap$KeyData: char[] meta>;

        $c5 = $r6[2];

        $i6 = (int) $c4;

        $i7 = (int) $c5;

        if $i6 != $i7 goto label07;

        $i6 = $i1 & 2;

        if $i6 != 0 goto label10;

     label07:
        if $z0 == 0 goto label08;

        $i6 = (int) $c4;

        if $i6 != 8 goto label08;

        if $i0 == 67 goto label10;

     label08:
        $i3 = $i3 + 1;

        goto label03;

     label09:
        $c4 = virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>();

        goto label05;

     label10:
        return $r5;
    }

    void findItemsWithShortcutForKey(java.util.List, int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r2;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r6;
        java.util.ArrayList $r4;
        com.actionbarsherlock.view.SubMenu $r7;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        boolean $z0, $z1;
        android.view.KeyCharacterMap$KeyData $r3, $r10;
        char $c4, $c6;
        java.util.List $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0, $r8;
        char[] $r9;
        java.lang.Object $r5;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.KeyEvent;

        $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>();

        $i1 = virtualinvoke $r2.<android.view.KeyEvent: int getMetaState()>();

        $r10 = new android.view.KeyCharacterMap$KeyData;

        $r3 = $r10;

        specialinvoke $r10.<android.view.KeyCharacterMap$KeyData: void <init>()>();

        $z1 = virtualinvoke $r2.<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap$KeyData)>($r3);

        if $z1 != 0 goto label1;

        if $i0 == 67 goto label1;

        return;

     label1:
        $r4 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i3 = 0;

     label2:
        if $i3 >= $i2 goto label8;

        $r4 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r6 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r5;

        $z1 = virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>();

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.SubMenu getSubMenu()>();

        $r8 = (com.actionbarsherlock.internal.view.menu.MenuBuilder) $r7;

        virtualinvoke $r8.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)>($r1, $i0, $r2);

     label3:
        if $z0 == 0 goto label7;

        $c4 = virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>();

     label4:
        $i5 = $i1 & 5;

        if $i5 != 0 goto label6;

        if $c4 == 0 goto label6;

        $r9 = $r3.<android.view.KeyCharacterMap$KeyData: char[] meta>;

        $c6 = $r9[0];

        $i5 = (int) $c4;

        $i7 = (int) $c6;

        if $i5 == $i7 goto label5;

        $r9 = $r3.<android.view.KeyCharacterMap$KeyData: char[] meta>;

        $c6 = $r9[2];

        $i5 = (int) $c4;

        $i7 = (int) $c6;

        if $i5 == $i7 goto label5;

        if $z0 == 0 goto label6;

        $i5 = (int) $c4;

        if $i5 != 8 goto label6;

        if $i0 != 67 goto label6;

     label5:
        $z1 = virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>();

        if $z1 == 0 goto label6;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

     label6:
        $i3 = $i3 + 1;

        goto label2;

     label7:
        $c4 = virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>();

        goto label4;

     label8:
        return;
    }

    public void flagActionItems()
    {
        java.util.Iterator $r2;
        com.actionbarsherlock.internal.view.menu.MenuPresenter $r6;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r7;
        java.util.ArrayList $r3, $r8;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r5;
        boolean $z0, $z1;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $z0 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsActionItemsStale>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

        $z0 = 0;

     label02:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label05;

        if $z0 == 0 goto label10;

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mActionItems>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>();

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label03:
        if $i1 < $i0 goto label07;

     label04:
        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsActionItemsStale> = 0;

        return;

     label05:
        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.ref.WeakReference) $r4;

        $r4 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (com.actionbarsherlock.internal.view.menu.MenuPresenter) $r4;

        if $r6 != null goto label06;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r5);

        goto label02;

     label06:
        $z1 = interfaceinvoke $r6.<com.actionbarsherlock.internal.view.menu.MenuPresenter: boolean flagActionItems()>();

        $z0 = $z1 | $z0;

        goto label02;

     label07:
        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r4;

        $z0 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionButton()>();

        if $z0 == 0 goto label09;

        $r8 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mActionItems>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label08:
        $i1 = $i1 + 1;

        goto label03;

     label09:
        $r8 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label08;

     label10:
        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mActionItems>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r3 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems>;

        $r8 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>();

        virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r8);

        goto label04;
    }

    java.util.ArrayList getActionItems()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.util.ArrayList r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()>();

        r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mActionItems>;

        return r1;
    }

    protected java.lang.String getActionViewStatesKey()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        return "android:menu:actionviewstates";
    }

    public android.content.Context getContext()
    {
        android.content.Context r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context mContext>;

        return r1;
    }

    public com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem>;

        return r1;
    }

    public android.graphics.drawable.Drawable getHeaderIcon()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.graphics.drawable.Drawable mHeaderIcon>;

        return r1;
    }

    public java.lang.CharSequence getHeaderTitle()
    {
        java.lang.CharSequence r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.CharSequence mHeaderTitle>;

        return r1;
    }

    public android.view.View getHeaderView()
    {
        android.view.View r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.view.View mHeaderView>;

        return r1;
    }

    public com.actionbarsherlock.view.MenuItem getItem(int)
    {
        com.actionbarsherlock.view.MenuItem $r3;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (com.actionbarsherlock.view.MenuItem) $r1;

        return $r3;
    }

    java.util.ArrayList getNonActionItems()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.util.ArrayList r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()>();

        r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems>;

        return r1;
    }

    boolean getOptionalIconsVisible()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        boolean z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        z0 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mOptionalIconsVisible>;

        return z0;
    }

    android.content.res.Resources getResources()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        android.content.res.Resources r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources mResources>;

        return r1;
    }

    public com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        return r0;
    }

    java.util.ArrayList getVisibleItems()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1;
        java.lang.Object $r2;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r3;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $z0 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsVisibleItemsStale>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mVisibleItems>;

        return $r1;

     label1:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mVisibleItems>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsVisibleItemsStale> = 0;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsActionItemsStale> = 1;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mVisibleItems>;

        return $r1;

     label3:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r2;

        $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mVisibleItems>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label4:
        $i1 = $i1 + 1;

        goto label2;
    }

    public boolean hasVisibleItems()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1;
        java.lang.Object $r2;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r3;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return 0;

     label2:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r2;

        $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    boolean isQwertyMode()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        boolean z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        z0 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mQwertyMode>;

        return z0;
    }

    public boolean isShortcutKey(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r2;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)>($i0, $r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isShortcutsVisible()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        boolean z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        z0 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mShortcutsVisible>;

        return z0;
    }

    void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.internal.view.menu.MenuItemImpl;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsActionItemsStale> = 1;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

        return;
    }

    void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.internal.view.menu.MenuItemImpl;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsVisibleItemsStale> = 1;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

        return;
    }

    void onItemsChanged(boolean)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        boolean $z0, $z1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged>;

        if $z1 != 0 goto label2;

        if $z0 == 0 goto label1;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsVisibleItemsStale> = 1;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mIsActionItemsStale> = 1;

     label1:
        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)>($z0);

        return;

     label2:
        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented> = 1;

        return;
    }

    public boolean performIdentifierAction(int, int)
    {
        com.actionbarsherlock.view.MenuItem $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>($i0);

        $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>($r1, $i1);

        return $z0;
    }

    public boolean performItemAction(com.actionbarsherlock.view.MenuItem, int)
    {
        com.actionbarsherlock.view.ActionProvider $r5;
        com.actionbarsherlock.internal.view.menu.SubMenuBuilder $r4;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r2;
        com.actionbarsherlock.view.MenuItem $r1;
        com.actionbarsherlock.view.SubMenu $r3;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.view.MenuItem;

        $i0 := @parameter1: int;

        $r2 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r1;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()>();

        $z1 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()>();

        if $z1 == 0 goto label3;

        $z1 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean expandActionView()>();

        $z0 = $z1 | $z0;

        if $z0 == 0 goto label6;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(1);

        return $z0;

     label3:
        $z1 = interfaceinvoke $r1.<com.actionbarsherlock.view.MenuItem: boolean hasSubMenu()>();

        if $z1 == 0 goto label5;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(0);

        $r3 = interfaceinvoke $r1.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.SubMenu getSubMenu()>();

        $r4 = (com.actionbarsherlock.internal.view.menu.SubMenuBuilder) $r3;

        $r5 = interfaceinvoke $r1.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.ActionProvider getActionProvider()>();

        if $r5 == null goto label4;

        $z1 = virtualinvoke $r5.<com.actionbarsherlock.view.ActionProvider: boolean hasSubMenu()>();

        if $z1 == 0 goto label4;

        virtualinvoke $r5.<com.actionbarsherlock.view.ActionProvider: void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu)>($r4);

     label4:
        $z1 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>($r4);

        $z0 = $z1 | $z0;

        if $z0 != 0 goto label6;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(1);

        return $z0;

     label5:
        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(1);

     label6:
        return $z0;
    }

    public boolean performShortcut(int, android.view.KeyEvent, int)
    {
        android.view.KeyEvent $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1;
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r2;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)>($i0, $r1);

        $z0 = 0;

        if $r2 == null goto label1;

        $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>($r2, $i1);

     label1:
        $i0 = $i1 & 2;

        if $i0 == 0 goto label2;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(1);

     label2:
        return $z0;
    }

    public void removeGroup(int)
    {
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r3;
        java.util.ArrayList $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r2;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int)>($i0);

        if $i3 < 0 goto label4;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = $i1 - $i3;

        $i4 = 0;

     label1:
        $i1 = $i4 + 1;

        if $i4 >= $i2 goto label2;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r3 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r2;

        $i4 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        if $i4 == $i0 goto label3;

     label2:
        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

        return;

     label3:
        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)>($i3, 0);

        $i4 = $i1;

        goto label1;

     label4:
        return;
    }

    public void removeItem(int)
    {
        int $i0;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int findItemIndex(int)>($i0);

        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)>($i0, 1);

        return;
    }

    public void removeItemAt(int)
    {
        int $i0;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)>($i0, 1);

        return;
    }

    public void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)
    {
        java.util.Iterator $r3;
        com.actionbarsherlock.internal.view.menu.MenuPresenter $r1, $r6;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r5;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.internal.view.menu.MenuPresenter;

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.ref.WeakReference) $r4;

        $r4 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (com.actionbarsherlock.internal.view.menu.MenuPresenter) $r4;

        if $r6 == null goto label3;

        if $r6 != $r1 goto label1;

     label3:
        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>($r5);

        goto label1;
    }

    public void restoreActionViewStates(android.os.Bundle)
    {
        android.os.Bundle $r1;
        com.actionbarsherlock.internal.view.menu.SubMenuBuilder $r7;
        com.actionbarsherlock.view.MenuItem $r4;
        android.util.SparseArray $r3;
        com.actionbarsherlock.view.SubMenu $r6;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2;
        android.view.View $r5;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.os.Bundle;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>();

        $r3 = virtualinvoke $r1.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>($r2);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label2;

        if $r3 == null goto label7;

     label2:
        $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>();

        $i1 = 0;

     label3:
        if $i1 < $i0 goto label4;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("android:menu:expandedactionview");

        if $i0 <= 0 goto label7;

        $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>($i0);

        if $r4 == null goto label7;

        interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: boolean expandActionView()>();

        return;

     label4:
        $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>($i1);

        $r5 = interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: android.view.View getActionView()>();

        if $r5 == null goto label5;

        $i2 = virtualinvoke $r5.<android.view.View: int getId()>();

        if $i2 == -1 goto label5;

        virtualinvoke $r5.<android.view.View: void restoreHierarchyState(android.util.SparseArray)>($r3);

     label5:
        $z0 = interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: boolean hasSubMenu()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.SubMenu getSubMenu()>();

        $r7 = (com.actionbarsherlock.internal.view.menu.SubMenuBuilder) $r6;

        virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void restoreActionViewStates(android.os.Bundle)>($r1);

     label6:
        $i1 = $i1 + 1;

        goto label3;

     label7:
        return;
    }

    public void restorePresenterStates(android.os.Bundle)
    {
        android.os.Bundle $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchRestoreInstanceState(android.os.Bundle)>($r1);

        return;
    }

    public void saveActionViewStates(android.os.Bundle)
    {
        android.os.Bundle $r1;
        com.actionbarsherlock.internal.view.menu.SubMenuBuilder $r7;
        com.actionbarsherlock.view.MenuItem $r4;
        android.util.SparseArray $r2, $r8;
        com.actionbarsherlock.view.SubMenu $r6;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2;
        android.view.View $r5;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.os.Bundle;

        $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>();

        $i1 = 0;

        $r2 = null;

     label1:
        if $i1 < $i0 goto label2;

        if $r2 == null goto label6;

        $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>();

        virtualinvoke $r1.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>($r3, $r2);

        return;

     label2:
        $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>($i1);

        $r5 = interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: android.view.View getActionView()>();

        if $r5 == null goto label4;

        $i2 = virtualinvoke $r5.<android.view.View: int getId()>();

        if $i2 == -1 goto label4;

        if $r2 != null goto label3;

        $r8 = new android.util.SparseArray;

        $r2 = $r8;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

     label3:
        virtualinvoke $r5.<android.view.View: void saveHierarchyState(android.util.SparseArray)>($r2);

        $z0 = interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: boolean isActionViewExpanded()>();

        if $z0 == 0 goto label4;

        $i2 = interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: int getItemId()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android:menu:expandedactionview", $i2);

     label4:
        $z0 = interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: boolean hasSubMenu()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.SubMenu getSubMenu()>();

        $r7 = (com.actionbarsherlock.internal.view.menu.SubMenuBuilder) $r6;

        virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void saveActionViewStates(android.os.Bundle)>($r1);

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        return;
    }

    public void savePresenterStates(android.os.Bundle)
    {
        android.os.Bundle $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchSaveInstanceState(android.os.Bundle)>($r1);

        return;
    }

    public void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback> = $r1;

        return;
    }

    public void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        android.view.ContextMenu$ContextMenuInfo $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.view.ContextMenu$ContextMenuInfo;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo> = $r1;

        return;
    }

    public com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int)
    {
        int $i0;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int mDefaultShowAsAction> = $i0;

        return r0;
    }

    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem)
    {
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r4;
        java.util.ArrayList $r2;
        com.actionbarsherlock.view.MenuItem $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: com.actionbarsherlock.view.MenuItem;

        $i0 = interfaceinvoke $r1.<com.actionbarsherlock.view.MenuItem: int getGroupId()>();

        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label2;

        return;

     label2:
        $r2 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r3;

        $i3 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        if $i3 != $i0 goto label4;

        $z0 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>();

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isCheckable()>();

        if $z0 == 0 goto label4;

        if $r4 != $r1 goto label5;

        $z0 = 1;

     label3:
        virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setCheckedInt(boolean)>($z0);

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        $z0 = 0;

        goto label3;
    }

    public void setGroupCheckable(int, boolean, boolean)
    {
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r3;
        java.util.ArrayList $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label2;

        return;

     label2:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        if $i3 != $i0 goto label3;

        virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)>(1);

        virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setCheckable(boolean)>(1);

     label3:
        $i2 = $i2 + 1;

        goto label1;
    }

    public void setGroupEnabled(int, boolean)
    {
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r3;
        java.util.ArrayList $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label2;

        return;

     label2:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        if $i3 != $i0 goto label3;

        virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setEnabled(boolean)>($z0);

     label3:
        $i2 = $i2 + 1;

        goto label1;
    }

    public void setGroupVisible(int, boolean)
    {
        com.actionbarsherlock.internal.view.menu.MenuItemImpl $r3;
        java.util.ArrayList $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = 0;

        $z1 = 0;

     label1:
        if $i2 < $i1 goto label2;

        if $z1 == 0 goto label5;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

        return;

     label2:
        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (com.actionbarsherlock.internal.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>();

        if $i3 != $i0 goto label4;

        $z2 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)>($z0);

        if $z2 == 0 goto label4;

        $z1 = 1;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        goto label3;

     label5:
        return;
    }

    protected com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int)
    {
        int $i0;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>(0, null, $i0, null, null);

        return r0;
    }

    protected com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>(0, null, 0, $r1, null);

        return r0;
    }

    protected com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int)
    {
        int $i0;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>($i0, null, 0, null, null);

        return r0;
    }

    protected com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>(0, $r1, 0, null, null);

        return r0;
    }

    protected com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
    {
        android.view.View $r1;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>(0, null, 0, null, $r1);

        return r0;
    }

    void setOptionalIconsVisible(boolean)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $z0 := @parameter0: boolean;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mOptionalIconsVisible> = $z0;

        return;
    }

    public void setQwertyMode(boolean)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $z0 := @parameter0: boolean;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mQwertyMode> = $z0;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0);

        return;
    }

    public void setShortcutsVisible(boolean)
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        boolean $z0, $z1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mShortcutsVisible>;

        if $z1 != $z0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)>($z0);

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0);

        return;
    }

    public int size()
    {
        int $i0;
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        java.util.ArrayList $r1;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $r1 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList mItems>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public void startDispatchingItemsChanged()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged> = 0;

        $z0 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented>;

        if $z0 == 0 goto label1;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented> = 0;

        virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

     label1:
        return;
    }

    public void stopDispatchingItemsChanged()
    {
        com.actionbarsherlock.internal.view.menu.MenuBuilder r0;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.view.menu.MenuBuilder;

        $z0 = r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged>;

        if $z0 != 0 goto label1;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged> = 1;

        r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented> = 0;

     label1:
        return;
    }
}
