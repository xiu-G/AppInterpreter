public final enum class com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode extends java.lang.Enum
{
    public static final enum com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode a;
    public static final enum com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode b;
    public static final enum com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode c;
    public static final enum com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode d;
    public static final enum com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode e;
    private static enum com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode f;
    private static final com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode[] g;

    static void <clinit>()
    {
        com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode[] $r1;
        com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode $r0;

        $r0 = new com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode;

        specialinvoke $r0.<com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: void <init>(java.lang.String,int)>("INVALID_PACKAGE_NAME", 0);

        <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode a> = $r0;

        $r0 = new com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode;

        specialinvoke $r0.<com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: void <init>(java.lang.String,int)>("NON_MATCHING_UID", 1);

        <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode b> = $r0;

        $r0 = new com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode;

        specialinvoke $r0.<com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: void <init>(java.lang.String,int)>("NOT_MARKET_MANAGED", 2);

        <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode c> = $r0;

        $r0 = new com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode;

        specialinvoke $r0.<com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: void <init>(java.lang.String,int)>("CHECK_IN_PROGRESS", 3);

        <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode f> = $r0;

        $r0 = new com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode;

        specialinvoke $r0.<com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: void <init>(java.lang.String,int)>("INVALID_PUBLIC_KEY", 4);

        <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode d> = $r0;

        $r0 = new com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode;

        specialinvoke $r0.<com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: void <init>(java.lang.String,int)>("MISSING_PERMISSION", 5);

        <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode e> = $r0;

        $r1 = newarray (com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)[6];

        $r0 = <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode a>;

        $r1[0] = $r0;

        $r0 = <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode b>;

        $r1[1] = $r0;

        $r0 = <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode c>;

        $r1[2] = $r0;

        $r0 = <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode f>;

        $r1[3] = $r0;

        $r0 = <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode d>;

        $r1[4] = $r0;

        $r0 = <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode e>;

        $r1[5] = $r0;

        <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode[] g> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode r0;

        r0 := @this: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode valueOf(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.Enum $r0;
        com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/android/vending/licensing/LicenseCheckerCallback$ApplicationErrorCode;", $r1);

        $r2 = (com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode) $r0;

        return $r2;
    }

    public static com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode[] values()
    {
        com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode[] $r1;
        java.lang.Object $r0;

        $r1 = <com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode[] g>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode[]) $r0;

        return $r1;
    }
}
