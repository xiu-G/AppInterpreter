public class org.blockdroid.Others.Base64EncodeDecode extends java.lang.Object
{
    private static final int SAMPSIZE;
    private static final java.lang.String TAG;
    private boolean loadSuccess;

    public void <init>()
    {
        org.blockdroid.Others.Base64EncodeDecode r0;

        r0 := @this: org.blockdroid.Others.Base64EncodeDecode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.blockdroid.Others.Base64EncodeDecode: boolean loadSuccess> = 1;

        return;
    }

    public static android.graphics.Bitmap base64toBitmap(java.lang.String)
    {
        java.lang.Throwable $r5;
        byte[] $r3;
        java.io.BufferedInputStream r1, $r8;
        java.io.IOException $r9;
        java.lang.NullPointerException $r6;
        java.io.ByteArrayInputStream r2, $r7;
        android.graphics.Bitmap $r4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r7 = new java.io.ByteArrayInputStream;

        r2 = $r7;

     label1:
        $r3 = staticinvoke <org.blockdroid.Others.Base64: byte[] decode(java.lang.String)>($r0);

        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

     label2:
        $r8 = new java.io.BufferedInputStream;

        r1 = $r8;

     label3:
        specialinvoke $r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r2);

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r1);

        virtualinvoke r2.<java.io.InputStream: void close()>();

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r9 = (java.io.IOException) $r5;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

     label6:
        return null;

     label7:
        $r6 := @caughtexception;

        goto label6;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch java.lang.NullPointerException from label3 to label4 with label7;
    }

    public static android.graphics.Bitmap base64toBitmapCompress(java.lang.String)
    {
        java.lang.Throwable $r7;
        android.graphics.Rect r4, $r12;
        byte[] $r5;
        java.io.BufferedInputStream r1, $r10;
        java.io.IOException $r13;
        java.lang.NullPointerException $r8;
        java.io.ByteArrayInputStream r2, $r9;
        android.graphics.Bitmap $r6;
        java.lang.String $r0;
        android.graphics.BitmapFactory$Options r3, $r11;

        $r0 := @parameter0: java.lang.String;

        $r9 = new java.io.ByteArrayInputStream;

        r2 = $r9;

     label01:
        $r5 = staticinvoke <org.blockdroid.Others.Base64: byte[] decode(java.lang.String)>($r0);

        specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

     label02:
        $r10 = new java.io.BufferedInputStream;

        r1 = $r10;

     label03:
        specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r2);

     label04:
        $r11 = new android.graphics.BitmapFactory$Options;

        r3 = $r11;

     label05:
        specialinvoke $r11.<android.graphics.BitmapFactory$Options: void <init>()>();

     label06:
        r3.<android.graphics.BitmapFactory$Options: int inSampleSize> = 1;

     label07:
        $r12 = new android.graphics.Rect;

        r4 = $r12;

     label08:
        specialinvoke $r12.<android.graphics.Rect: void <init>()>();

        $r6 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r1, r4, r3);

        virtualinvoke r2.<java.io.InputStream: void close()>();

     label09:
        return $r6;

     label10:
        $r7 := @caughtexception;

        $r13 = (java.io.IOException) $r7;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

     label11:
        return null;

     label12:
        $r8 := @caughtexception;

        goto label11;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.NullPointerException from label01 to label02 with label12;
        catch java.lang.NullPointerException from label03 to label04 with label12;
        catch java.lang.NullPointerException from label05 to label07 with label12;
        catch java.lang.NullPointerException from label08 to label09 with label12;
    }

    public java.lang.String bitmapToBase64Compress(android.graphics.Bitmap, int)
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream r2;
        java.lang.NullPointerException $r6;
        android.graphics.Bitmap $r1;
        org.blockdroid.Others.Base64EncodeDecode r0;
        int $i0;
        android.graphics.Bitmap$CompressFormat $r3;
        java.lang.String $r5;

        r0 := @this: org.blockdroid.Others.Base64EncodeDecode;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        r2 = new java.io.ByteArrayOutputStream;

     label1:
        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

     label2:
        $r3 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label3:
        virtualinvoke $r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r3, $i0, r2);

        $r4 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r5 = staticinvoke <org.blockdroid.Others.Base64: java.lang.String encodeBytes(byte[])>($r4);

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        return null;

        catch java.lang.NullPointerException from label1 to label2 with label5;
        catch java.lang.NullPointerException from label3 to label4 with label5;
    }

    public boolean getLoadSuccess()
    {
        org.blockdroid.Others.Base64EncodeDecode r0;
        boolean z0;

        r0 := @this: org.blockdroid.Others.Base64EncodeDecode;

        z0 = r0.<org.blockdroid.Others.Base64EncodeDecode: boolean loadSuccess>;

        return z0;
    }

    public java.lang.String imageHttpToBase64(java.lang.String)
    {
        java.lang.Throwable $r8;
        java.net.URL r2;
        java.util.regex.Matcher $r5;
        java.net.URLConnection $r6;
        org.blockdroid.Others.Base64EncodeDecode r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r4;
        java.io.InputStream r3, $r7;
        boolean $z0;

        r0 := @this: org.blockdroid.Others.Base64EncodeDecode;

        $r1 := @parameter0: java.lang.String;

        r0.<org.blockdroid.Others.Base64EncodeDecode: boolean loadSuccess> = 1;

        r3 = null;

        if $r1 == null goto label5;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("http:");

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label5;

        r2 = new java.net.URL;

     label1:
        specialinvoke r2.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r6 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r6.<java.net.URLConnection: void connect()>();

        $r7 = virtualinvoke $r6.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label2:
        r3 = $r7;

     label3:
        $r1 = virtualinvoke r0.<org.blockdroid.Others.Base64EncodeDecode: java.lang.String inStreamToBase64(java.io.InputStream)>(r3);

        return $r1;

     label4:
        $r8 := @caughtexception;

        r0.<org.blockdroid.Others.Base64EncodeDecode: boolean loadSuccess> = 0;

        goto label3;

     label5:
        return null;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public java.lang.String imageHttpToBase64Compress(java.lang.String, int, boolean)
    {
        java.lang.Throwable $r9;
        java.net.URL r2;
        java.util.regex.Matcher $r5;
        java.net.URLConnection $r6;
        android.graphics.Bitmap $r8;
        org.blockdroid.Others.Base64EncodeDecode r0;
        int $i0;
        java.lang.String $r1;
        java.util.regex.Pattern $r4;
        boolean $z0, $z1;
        java.io.InputStream r3, $r7;

        r0 := @this: org.blockdroid.Others.Base64EncodeDecode;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        r3 = null;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("http:");

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z1 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label6;

        r2 = new java.net.URL;

     label1:
        specialinvoke r2.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r6 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r6.<java.net.URLConnection: void connect()>();

        $r7 = virtualinvoke $r6.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label2:
        r3 = $r7;

     label3:
        $r1 = virtualinvoke r0.<org.blockdroid.Others.Base64EncodeDecode: java.lang.String inStreamToBase64(java.io.InputStream)>(r3);

        if $z0 == 0 goto label5;

        $r8 = staticinvoke <org.blockdroid.Others.Base64EncodeDecode: android.graphics.Bitmap base64toBitmapCompress(java.lang.String)>($r1);

     label4:
        $r1 = virtualinvoke r0.<org.blockdroid.Others.Base64EncodeDecode: java.lang.String bitmapToBase64Compress(android.graphics.Bitmap,int)>($r8, $i0);

        return $r1;

     label5:
        $r8 = staticinvoke <org.blockdroid.Others.Base64EncodeDecode: android.graphics.Bitmap base64toBitmap(java.lang.String)>($r1);

        goto label4;

     label6:
        return null;

     label7:
        $r9 := @caughtexception;

        goto label3;

        catch java.io.IOException from label1 to label2 with label7;
    }

    public java.lang.String inStreamToBase64(java.io.InputStream)
    {
        java.lang.Throwable $r5;
        byte[] r3;
        java.io.ByteArrayOutputStream r2, $r7;
        java.io.IOException $r8;
        java.lang.NullPointerException $r6;
        org.blockdroid.Others.Base64EncodeDecode r0;
        int $i0;
        java.lang.String $r4;
        java.io.InputStream $r1;

        r0 := @this: org.blockdroid.Others.Base64EncodeDecode;

        $r1 := @parameter0: java.io.InputStream;

        $r7 = new java.io.ByteArrayOutputStream;

        r2 = $r7;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r3 = newarray (byte)[16384];

     label1:
        $i0 = lengthof r3;

     label2:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, $i0);

     label3:
        if $i0 != -1 goto label6;

     label4:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void flush()>();

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        r3 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r4 = staticinvoke <org.blockdroid.Others.Base64: java.lang.String encodeBytes(byte[])>(r3);

     label5:
        return $r4;

     label6:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r3, 0, $i0);

     label7:
        goto label1;

     label8:
        $r5 := @caughtexception;

        r0.<org.blockdroid.Others.Base64EncodeDecode: boolean loadSuccess> = 0;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Base64EncodeDecode.java", "FAIL BASE64");

        $r8 = (java.io.IOException) $r5;

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

        return null;

     label9:
        $r6 := @caughtexception;

        r0.<org.blockdroid.Others.Base64EncodeDecode: boolean loadSuccess> = 0;

        return null;

        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
        catch java.lang.NullPointerException from label1 to label3 with label9;
        catch java.lang.NullPointerException from label4 to label5 with label9;
        catch java.lang.NullPointerException from label6 to label7 with label9;
    }

    public static void <clinit>()
    {
        <org.blockdroid.Others.Base64EncodeDecode: java.lang.String TAG> = "Base64EncodeDecode.java";

        <org.blockdroid.Others.Base64EncodeDecode: int SAMPSIZE> = 1;

        return;
    }
}
