public class de.greenrobot.dao.async.AsyncOperation extends java.lang.Object
{
    public static final int FLAG_MERGE_TX;
    public static final int FLAG_STOP_QUEUE_ON_EXCEPTION;
    private volatile boolean completed;
    final de.greenrobot.dao.AbstractDao dao;
    private final android.database.sqlite.SQLiteDatabase database;
    final int flags;
    volatile int mergedOperationsCount;
    final java.lang.Object parameter;
    volatile java.lang.Object result;
    int sequenceNumber;
    volatile java.lang.Throwable throwable;
    volatile long timeCompleted;
    volatile long timeStarted;
    final de.greenrobot.dao.async.AsyncOperation$OperationType type;

    void <init>(de.greenrobot.dao.async.AsyncOperation$OperationType, android.database.sqlite.SQLiteDatabase, java.lang.Object, int)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        de.greenrobot.dao.async.AsyncOperation r0;
        int $i0;
        java.lang.Object $r3;
        de.greenrobot.dao.async.AsyncOperation$OperationType $r1;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        $r1 := @parameter0: de.greenrobot.dao.async.AsyncOperation$OperationType;

        $r2 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $r3 := @parameter2: java.lang.Object;

        $i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<de.greenrobot.dao.async.AsyncOperation: de.greenrobot.dao.async.AsyncOperation$OperationType type> = $r1;

        r0.<de.greenrobot.dao.async.AsyncOperation: android.database.sqlite.SQLiteDatabase database> = $r2;

        r0.<de.greenrobot.dao.async.AsyncOperation: int flags> = $i0;

        r0.<de.greenrobot.dao.async.AsyncOperation: de.greenrobot.dao.AbstractDao dao> = null;

        r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Object parameter> = $r3;

        return;
    }

    void <init>(de.greenrobot.dao.async.AsyncOperation$OperationType, de.greenrobot.dao.AbstractDao, java.lang.Object, int)
    {
        de.greenrobot.dao.async.AsyncOperation r0;
        de.greenrobot.dao.AbstractDao $r2;
        int $i0;
        java.lang.Object $r3;
        de.greenrobot.dao.async.AsyncOperation$OperationType $r1;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        $r1 := @parameter0: de.greenrobot.dao.async.AsyncOperation$OperationType;

        $r2 := @parameter1: de.greenrobot.dao.AbstractDao;

        $r3 := @parameter2: java.lang.Object;

        $i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<de.greenrobot.dao.async.AsyncOperation: de.greenrobot.dao.async.AsyncOperation$OperationType type> = $r1;

        r0.<de.greenrobot.dao.async.AsyncOperation: int flags> = $i0;

        r0.<de.greenrobot.dao.async.AsyncOperation: de.greenrobot.dao.AbstractDao dao> = $r2;

        r0.<de.greenrobot.dao.async.AsyncOperation: android.database.sqlite.SQLiteDatabase database> = null;

        r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Object parameter> = $r3;

        return;
    }

    android.database.sqlite.SQLiteDatabase getDatabase()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        de.greenrobot.dao.async.AsyncOperation r0;
        de.greenrobot.dao.AbstractDao $r2;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        $r1 = r0.<de.greenrobot.dao.async.AsyncOperation: android.database.sqlite.SQLiteDatabase database>;

        if $r1 == null goto label1;

        $r1 = r0.<de.greenrobot.dao.async.AsyncOperation: android.database.sqlite.SQLiteDatabase database>;

        return $r1;

     label1:
        $r2 = r0.<de.greenrobot.dao.async.AsyncOperation: de.greenrobot.dao.AbstractDao dao>;

        $r1 = virtualinvoke $r2.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase getDatabase()>();

        return $r1;
    }

    public long getDuration()
    {
        de.greenrobot.dao.DaoException $r1;
        de.greenrobot.dao.async.AsyncOperation r0;
        byte $b1;
        long $l0, $l2;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        $l0 = r0.<de.greenrobot.dao.async.AsyncOperation: long timeCompleted>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r1 = new de.greenrobot.dao.DaoException;

        specialinvoke $r1.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>("This operation did not yet complete");

        throw $r1;

     label1:
        $l0 = r0.<de.greenrobot.dao.async.AsyncOperation: long timeCompleted>;

        $l2 = r0.<de.greenrobot.dao.async.AsyncOperation: long timeStarted>;

        $l0 = $l0 - $l2;

        return $l0;
    }

    public int getMergedOperationsCount()
    {
        int i0;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        i0 = r0.<de.greenrobot.dao.async.AsyncOperation: int mergedOperationsCount>;

        return i0;
    }

    public java.lang.Object getParameter()
    {
        java.lang.Object r1;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        r1 = r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Object parameter>;

        return r1;
    }

    public java.lang.Object getResult()
    {
        java.lang.Throwable $r1;
        de.greenrobot.dao.async.AsyncOperation r0;
        java.lang.Object r3;
        boolean $z0;
        de.greenrobot.dao.async.AsyncDaoException $r2;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        entermonitor r0;

     label1:
        $z0 = r0.<de.greenrobot.dao.async.AsyncOperation: boolean completed>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Object waitForCompletion()>();

     label2:
        $r1 = r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Throwable throwable>;

        if $r1 == null goto label4;

        $r2 = new de.greenrobot.dao.async.AsyncDaoException;

        $r1 = r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Throwable throwable>;

        specialinvoke $r2.<de.greenrobot.dao.async.AsyncDaoException: void <init>(de.greenrobot.dao.async.AsyncOperation,java.lang.Throwable)>(r0, $r1);

        throw $r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

     label4:
        r3 = r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Object result>;

     label5:
        exitmonitor r0;

        return r3;

        catch java.lang.Throwable from label1 to label3 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getSequenceNumber()
    {
        int i0;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        i0 = r0.<de.greenrobot.dao.async.AsyncOperation: int sequenceNumber>;

        return i0;
    }

    public java.lang.Throwable getThrowable()
    {
        java.lang.Throwable r1;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        r1 = r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Throwable throwable>;

        return r1;
    }

    public long getTimeCompleted()
    {
        long l0;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        l0 = r0.<de.greenrobot.dao.async.AsyncOperation: long timeCompleted>;

        return l0;
    }

    public long getTimeStarted()
    {
        long l0;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        l0 = r0.<de.greenrobot.dao.async.AsyncOperation: long timeStarted>;

        return l0;
    }

    public de.greenrobot.dao.async.AsyncOperation$OperationType getType()
    {
        de.greenrobot.dao.async.AsyncOperation$OperationType r1;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        r1 = r0.<de.greenrobot.dao.async.AsyncOperation: de.greenrobot.dao.async.AsyncOperation$OperationType type>;

        return r1;
    }

    public boolean isCompleted()
    {
        de.greenrobot.dao.async.AsyncOperation r0;
        boolean z0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        z0 = r0.<de.greenrobot.dao.async.AsyncOperation: boolean completed>;

        return z0;
    }

    public boolean isCompletedSucessfully()
    {
        java.lang.Throwable $r1;
        de.greenrobot.dao.async.AsyncOperation r0;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        $z0 = r0.<de.greenrobot.dao.async.AsyncOperation: boolean completed>;

        if $z0 == 0 goto label1;

        $r1 = r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Throwable throwable>;

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isFailed()
    {
        java.lang.Throwable $r1;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        $r1 = r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Throwable throwable>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isMergeTx()
    {
        int $i0;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        $i0 = r0.<de.greenrobot.dao.async.AsyncOperation: int flags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isMergeableWith(de.greenrobot.dao.async.AsyncOperation)
    {
        android.database.sqlite.SQLiteDatabase $r2, $r3;
        de.greenrobot.dao.async.AsyncOperation r0, $r1;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        $r1 := @parameter0: de.greenrobot.dao.async.AsyncOperation;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<de.greenrobot.dao.async.AsyncOperation: boolean isMergeTx()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<de.greenrobot.dao.async.AsyncOperation: boolean isMergeTx()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<de.greenrobot.dao.async.AsyncOperation: android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r3 = virtualinvoke $r1.<de.greenrobot.dao.async.AsyncOperation: android.database.sqlite.SQLiteDatabase getDatabase()>();

        if $r2 != $r3 goto label1;

        return 1;

     label1:
        return 0;
    }

    void reset()
    {
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        r0.<de.greenrobot.dao.async.AsyncOperation: long timeStarted> = 0L;

        r0.<de.greenrobot.dao.async.AsyncOperation: long timeCompleted> = 0L;

        r0.<de.greenrobot.dao.async.AsyncOperation: boolean completed> = 0;

        r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Throwable throwable> = null;

        r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Object result> = null;

        r0.<de.greenrobot.dao.async.AsyncOperation: int mergedOperationsCount> = 0;

        return;
    }

    void setCompleted()
    {
        java.lang.Throwable $r1;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        entermonitor r0;

     label1:
        r0.<de.greenrobot.dao.async.AsyncOperation: boolean completed> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setThrowable(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        de.greenrobot.dao.async.AsyncOperation r0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        $r1 := @parameter0: java.lang.Throwable;

        r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Throwable throwable> = $r1;

        return;
    }

    public java.lang.Object waitForCompletion()
    {
        java.lang.Throwable $r2, $r3;
        de.greenrobot.dao.DaoException $r1;
        de.greenrobot.dao.async.AsyncOperation r0;
        java.lang.Object r4;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        entermonitor r0;

     label1:
        $z0 = r0.<de.greenrobot.dao.async.AsyncOperation: boolean completed>;

     label2:
        if $z0 != 0 goto label8;

     label3:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label4:
        goto label1;

     label5:
        $r2 := @caughtexception;

     label6:
        $r1 = new de.greenrobot.dao.DaoException;

        specialinvoke $r1.<de.greenrobot.dao.DaoException: void <init>(java.lang.String,java.lang.Throwable)>("Interrupted while waiting for operation to complete", $r2);

        throw $r1;

     label7:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label8:
        r4 = r0.<de.greenrobot.dao.async.AsyncOperation: java.lang.Object result>;

     label9:
        exitmonitor r0;

        return r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.InterruptedException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean waitForCompletion(int)
    {
        java.lang.Throwable $r2, $r3;
        de.greenrobot.dao.DaoException $r1;
        de.greenrobot.dao.async.AsyncOperation r0;
        int $i0;
        long $l1;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.async.AsyncOperation;

        $i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $z0 = r0.<de.greenrobot.dao.async.AsyncOperation: boolean completed>;

     label2:
        if $z0 != 0 goto label4;

        $l1 = (long) $i0;

     label3:
        virtualinvoke r0.<java.lang.Object: void wait(long)>($l1);

     label4:
        $z0 = r0.<de.greenrobot.dao.async.AsyncOperation: boolean completed>;

     label5:
        exitmonitor r0;

        return $z0;

     label6:
        $r2 := @caughtexception;

     label7:
        $r1 = new de.greenrobot.dao.DaoException;

        specialinvoke $r1.<de.greenrobot.dao.DaoException: void <init>(java.lang.String,java.lang.Throwable)>("Interrupted while waiting for operation to complete", $r2);

        throw $r1;

     label8:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.InterruptedException from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    public static void <clinit>()
    {
        <de.greenrobot.dao.async.AsyncOperation: int FLAG_STOP_QUEUE_ON_EXCEPTION> = 2;

        <de.greenrobot.dao.async.AsyncOperation: int FLAG_MERGE_TX> = 1;

        return;
    }
}
