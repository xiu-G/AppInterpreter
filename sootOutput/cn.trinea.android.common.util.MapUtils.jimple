public class cn.trinea.android.common.util.MapUtils extends java.lang.Object
{
    public static final java.lang.String DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR;
    public static final java.lang.String DEFAULT_KEY_AND_VALUE_SEPARATOR;

    public void <init>()
    {
        cn.trinea.android.common.util.MapUtils r0;

        r0 := @this: cn.trinea.android.common.util.MapUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object getKeyByValue(java.util.Map, java.lang.Object)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Map $r0;
        java.util.Set $r2;
        java.lang.Object $r1, $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <cn.trinea.android.common.util.MapUtils: boolean isEmpty(java.util.Map)>($r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return null;

     label3:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = staticinvoke <cn.trinea.android.common.util.ObjectUtils: boolean isEquals(java.lang.Object,java.lang.Object)>($r4, $r1);

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r1;
    }

    public static boolean isEmpty(java.util.Map)
    {
        int $i0;
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        if $r0 == null goto label1;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static java.util.Map parseKeyAndValueToMap(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Map $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <cn.trinea.android.common.util.MapUtils: java.util.Map parseKeyAndValueToMap(java.lang.String,java.lang.String,java.lang.String,boolean)>($r0, ":", ",", 1);

        return $r1;
    }

    public static java.util.Map parseKeyAndValueToMap(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.util.HashMap $r3, $r5;
        java.lang.String[] $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r1, $r2;
        boolean $z0, $z1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $z1 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z1 == 0 goto label1;

        return null;

     label1:
        $z1 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z1 == 0 goto label2;

        $r1 = ":";

     label2:
        $z1 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r2);

        if $z1 == 0 goto label3;

        $r2 = ",";

     label3:
        $r5 = new java.util.HashMap;

        $r3 = $r5;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>($r2);

        if $r4 == null goto label8;

        $i0 = lengthof $r4;

        $i1 = 0;

     label4:
        if $i1 < $i0 goto label5;

        return $r3;

     label5:
        $r0 = $r4[$i1];

        $z1 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z1 != 0 goto label6;

        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>($r1);

        $i3 = -1;

        if $i2 == $i3 goto label6;

        if $z0 == 0 goto label7;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i2 = $i2 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i2);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        staticinvoke <cn.trinea.android.common.util.MapUtils: boolean putMapNotEmptyKey(java.util.Map,java.lang.String,java.lang.String)>($r3, $r2, $r0);

     label6:
        $i1 = $i1 + 1;

        goto label4;

     label7:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $i2 = $i2 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i2);

        staticinvoke <cn.trinea.android.common.util.MapUtils: boolean putMapNotEmptyKey(java.util.Map,java.lang.String,java.lang.String)>($r3, $r2, $r0);

        goto label6;

     label8:
        return null;
    }

    public static java.util.Map parseKeyAndValueToMap(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean $z0;
        java.util.Map $r1;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <cn.trinea.android.common.util.MapUtils: java.util.Map parseKeyAndValueToMap(java.lang.String,java.lang.String,java.lang.String,boolean)>($r0, ":", ",", $z0);

        return $r1;
    }

    public static boolean putMapNotEmptyKey(java.util.Map, java.lang.String, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r0 == null goto label1;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return 1;
    }

    public static boolean putMapNotEmptyKeyAndValue(java.util.Map, java.lang.String, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r0 == null goto label1;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return 1;
    }

    public static boolean putMapNotEmptyKeyAndValue(java.util.Map, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        if $r0 == null goto label1;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label4;

     label3:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return 1;

     label4:
        $r3 = $r2;

        goto label3;
    }

    public static boolean putMapNotNullKey(java.util.Map, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        if $r0 == null goto label1;

        if $r1 != null goto label2;

     label1:
        return 0;

     label2:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return 1;
    }

    public static boolean putMapNotNullKeyAndValue(java.util.Map, java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        if $r0 == null goto label1;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        return 0;

     label2:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return 1;
    }

    public static java.lang.String toJson(java.util.Map)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map $r0;
        int $i0;
        java.lang.StringBuilder $r1, $r7;
        java.lang.Object $r5;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        if $r0 == null goto label1;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label4:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\":");

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.lang.String) $r5;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        goto label3;
    }

    public static void <clinit>()
    {
        <cn.trinea.android.common.util.MapUtils: java.lang.String DEFAULT_KEY_AND_VALUE_SEPARATOR> = ":";

        <cn.trinea.android.common.util.MapUtils: java.lang.String DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR> = ",";

        return;
    }
}
