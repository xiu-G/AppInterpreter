class com.tencent.stat.common.l extends java.lang.Object
{

    void <init>()
    {
        com.tencent.stat.common.l r0;

        r0 := @this: com.tencent.stat.common.l;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int a()
    {
        int $i0;
        com.tencent.stat.common.m $r2;
        java.io.File[] $r0;
        java.io.File $r1;
        java.lang.Exception $r3;

        $r1 = new java.io.File;

     label1:
        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/sys/devices/system/cpu/");

     label2:
        $r2 = new com.tencent.stat.common.m;

     label3:
        specialinvoke $r2.<com.tencent.stat.common.m: void <init>()>();

        $r0 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r2);

        $i0 = lengthof $r0;

     label4:
        return $i0;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return 1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    static int b()
    {
        byte[] $r5;
        java.lang.Process $r3;
        java.lang.String[] $r1;
        java.lang.Integer $r7;
        java.lang.Exception $r8;
        int $i0, $i1;
        java.lang.StringBuilder $r6, $r11;
        java.lang.String $r0, $r12;
        java.lang.ProcessBuilder $r2, $r10;
        com.tencent.stat.common.StatLogger $r9;
        java.io.InputStream $r4;

        $i0 = 0;

        $r0 = "";

        $r1 = newarray (java.lang.String)[2];

     label01:
        $r1[0] = "/system/bin/cat";

        $r1[1] = "/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq";

     label02:
        $r10 = new java.lang.ProcessBuilder;

        $r2 = $r10;

     label03:
        specialinvoke $r10.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r1);

        $r3 = virtualinvoke $r2.<java.lang.ProcessBuilder: java.lang.Process start()>();

        $r4 = virtualinvoke $r3.<java.lang.Process: java.io.InputStream getInputStream()>();

     label04:
        $r5 = newarray (byte)[24];

     label05:
        $i1 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>($r5);

     label06:
        if $i1 == -1 goto label11;

        $r11 = new java.lang.StringBuilder;

        $r6 = $r11;

     label07:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label08:
        $r12 = new java.lang.String;

        $r0 = $r12;

     label09:
        specialinvoke $r12.<java.lang.String: void <init>(byte[])>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        goto label05;

     label11:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label12:
        if $i1 <= 0 goto label15;

     label13:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r0);

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label14:
        $i0 = $i1;

     label15:
        $i0 = $i0 * 1000;

        return $i0;

     label16:
        $r8 := @caughtexception;

        $r9 = staticinvoke <com.tencent.stat.common.k: com.tencent.stat.common.StatLogger g()>();

        virtualinvoke $r9.<com.tencent.stat.common.StatLogger: void e(java.lang.Exception)>($r8);

        goto label15;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label16;
        catch java.lang.Exception from label11 to label12 with label16;
        catch java.lang.Exception from label13 to label14 with label16;
    }

    static int c()
    {
        java.lang.Throwable $r8;
        byte[] $r5;
        java.lang.String[] $r1;
        java.lang.Integer $r7;
        int $i0, $i1;
        java.lang.String $r0, $r12;
        java.lang.ProcessBuilder $r2, $r10;
        com.tencent.stat.common.StatLogger $r9;
        java.lang.Process $r3;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r6, $r11;
        java.io.InputStream $r4;

        $i0 = 0;

        $r0 = "";

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "/system/bin/cat";

        $r1[1] = "/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq";

        $r10 = new java.lang.ProcessBuilder;

        $r2 = $r10;

     label01:
        specialinvoke $r10.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r1);

        $r3 = virtualinvoke $r2.<java.lang.ProcessBuilder: java.lang.Process start()>();

        $r4 = virtualinvoke $r3.<java.lang.Process: java.io.InputStream getInputStream()>();

     label02:
        $r5 = newarray (byte)[24];

     label03:
        $i1 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>($r5);

     label04:
        if $i1 == -1 goto label09;

        $r11 = new java.lang.StringBuilder;

        $r6 = $r11;

     label05:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label06:
        $r12 = new java.lang.String;

        $r0 = $r12;

     label07:
        specialinvoke $r12.<java.lang.String: void <init>(byte[])>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        goto label03;

     label09:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label10:
        if $i1 <= 0 goto label13;

     label11:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r0);

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label12:
        $i0 = $i1;

     label13:
        $i0 = $i0 * 1000;

        return $i0;

     label14:
        $r8 := @caughtexception;

        $r9 = staticinvoke <com.tencent.stat.common.k: com.tencent.stat.common.StatLogger g()>();

        $r13 = (java.lang.Exception) $r8;

        virtualinvoke $r9.<com.tencent.stat.common.StatLogger: void e(java.lang.Exception)>($r13);

        goto label13;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label14;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.io.IOException from label11 to label12 with label14;
    }

    static java.lang.String d()
    {
        java.lang.Throwable $r4;
        java.lang.String[] $r3;
        int $i0, $i1;
        java.io.FileReader $r0;
        java.io.BufferedReader $r1;
        java.lang.String $r2;
        com.tencent.stat.common.StatLogger $r5;

     label1:
        $r0 = new java.io.FileReader;

        specialinvoke $r0.<java.io.FileReader: void <init>(java.lang.String)>("/proc/cpuinfo");

        $r1 = new java.io.BufferedReader;

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r0);

        $r2 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":\\s+", 2);

     label2:
        $i0 = 0;

     label3:
        $i1 = lengthof $r3;

     label4:
        if $i0 >= $i1 goto label5;

        $i0 = $i0 + 1;

        goto label3;

     label5:
        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

        $r2 = $r3[1];

     label6:
        return $r2;

     label7:
        $r4 := @caughtexception;

        $r5 = staticinvoke <com.tencent.stat.common.k: com.tencent.stat.common.StatLogger g()>();

        virtualinvoke $r5.<com.tencent.stat.common.StatLogger: void e(java.lang.Object)>($r4);

        return "";

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
}
