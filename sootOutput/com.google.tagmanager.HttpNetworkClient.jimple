class com.google.tagmanager.HttpNetworkClient extends java.lang.Object implements com.google.tagmanager.NetworkClient
{
    private org.apache.http.client.HttpClient mClient;

    void <init>()
    {
        com.google.tagmanager.HttpNetworkClient r0;

        r0 := @this: com.google.tagmanager.HttpNetworkClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void closeWithClient(org.apache.http.client.HttpClient)
    {
        com.google.tagmanager.HttpNetworkClient r0;
        org.apache.http.client.HttpClient $r1;
        org.apache.http.conn.ClientConnectionManager $r2;

        r0 := @this: com.google.tagmanager.HttpNetworkClient;

        $r1 := @parameter0: org.apache.http.client.HttpClient;

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        if $r2 == null goto label1;

        $r2 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r2.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

     label1:
        return;
    }

    private java.io.InputStream handleServerResponse(org.apache.http.client.HttpClient, org.apache.http.HttpResponse)
    {
        com.google.tagmanager.HttpNetworkClient r0;
        org.apache.http.HttpEntity $r4;
        java.io.IOException $r9;
        org.apache.http.StatusLine $r3;
        java.io.FileNotFoundException $r8;
        org.apache.http.client.HttpClient $r1;
        int $i0;
        org.apache.http.HttpResponse $r2;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.io.InputStream $r5;

        r0 := @this: com.google.tagmanager.HttpNetworkClient;

        $r1 := @parameter0: org.apache.http.client.HttpClient;

        $r2 := @parameter1: org.apache.http.HttpResponse;

        $r3 = interfaceinvoke $r2.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r3.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 != 200 goto label1;

        staticinvoke <com.google.tagmanager.Log: void v(java.lang.String)>("Success response");

        $r4 = interfaceinvoke $r2.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        return $r5;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bad response: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        if $i0 != 404 goto label2;

        $r8 = new java.io.FileNotFoundException;

        specialinvoke $r8.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r8;

     label2:
        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r9;
    }

    public void close()
    {
        com.google.tagmanager.HttpNetworkClient r0;
        org.apache.http.client.HttpClient $r1;

        r0 := @this: com.google.tagmanager.HttpNetworkClient;

        $r1 = r0.<com.google.tagmanager.HttpNetworkClient: org.apache.http.client.HttpClient mClient>;

        specialinvoke r0.<com.google.tagmanager.HttpNetworkClient: void closeWithClient(org.apache.http.client.HttpClient)>($r1);

        return;
    }

    org.apache.http.client.HttpClient createNewHttpClient()
    {
        org.apache.http.impl.client.DefaultHttpClient $r2;
        com.google.tagmanager.HttpNetworkClient r0;
        org.apache.http.params.BasicHttpParams $r1;

        r0 := @this: com.google.tagmanager.HttpNetworkClient;

        $r1 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r1.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r1, 20000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r1, 20000);

        $r2 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r2.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r1);

        return $r2;
    }

    org.apache.http.client.methods.HttpPost createPostRequest(java.lang.String, byte[])
    {
        byte[] $r2;
        org.apache.http.client.methods.HttpPost $r3;
        com.google.tagmanager.HttpNetworkClient r0;
        java.lang.String $r1;
        org.apache.http.entity.ByteArrayEntity $r4;

        r0 := @this: com.google.tagmanager.HttpNetworkClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $r3 = new org.apache.http.client.methods.HttpPost;

        specialinvoke $r3.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r1);

        $r4 = new org.apache.http.entity.ByteArrayEntity;

        specialinvoke $r4.<org.apache.http.entity.ByteArrayEntity: void <init>(byte[])>($r2);

        virtualinvoke $r3.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r4);

        return $r3;
    }

    public java.io.InputStream getInputStream(java.lang.String)
    {
        com.google.tagmanager.HttpNetworkClient r0;
        org.apache.http.client.HttpClient $r2;
        org.apache.http.client.methods.HttpGet $r3;
        org.apache.http.HttpResponse $r4;
        java.lang.String $r1;
        java.io.InputStream $r5;

        r0 := @this: com.google.tagmanager.HttpNetworkClient;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.google.tagmanager.HttpNetworkClient: org.apache.http.client.HttpClient createNewHttpClient()>();

        r0.<com.google.tagmanager.HttpNetworkClient: org.apache.http.client.HttpClient mClient> = $r2;

        $r2 = r0.<com.google.tagmanager.HttpNetworkClient: org.apache.http.client.HttpClient mClient>;

        $r3 = new org.apache.http.client.methods.HttpGet;

        specialinvoke $r3.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

        $r4 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r3);

        $r2 = r0.<com.google.tagmanager.HttpNetworkClient: org.apache.http.client.HttpClient mClient>;

        $r5 = specialinvoke r0.<com.google.tagmanager.HttpNetworkClient: java.io.InputStream handleServerResponse(org.apache.http.client.HttpClient,org.apache.http.HttpResponse)>($r2, $r4);

        return $r5;
    }

    public void sendPostRequest(java.lang.String, byte[])
    {
        byte[] $r2;
        org.apache.http.client.methods.HttpPost $r4;
        com.google.tagmanager.HttpNetworkClient r0;
        org.apache.http.client.HttpClient $r3;
        org.apache.http.HttpResponse $r5;
        java.lang.String $r1;

        r0 := @this: com.google.tagmanager.HttpNetworkClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $r3 = virtualinvoke r0.<com.google.tagmanager.HttpNetworkClient: org.apache.http.client.HttpClient createNewHttpClient()>();

        $r4 = virtualinvoke r0.<com.google.tagmanager.HttpNetworkClient: org.apache.http.client.methods.HttpPost createPostRequest(java.lang.String,byte[])>($r1, $r2);

        $r5 = interfaceinvoke $r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r4);

        specialinvoke r0.<com.google.tagmanager.HttpNetworkClient: java.io.InputStream handleServerResponse(org.apache.http.client.HttpClient,org.apache.http.HttpResponse)>($r3, $r5);

        specialinvoke r0.<com.google.tagmanager.HttpNetworkClient: void closeWithClient(org.apache.http.client.HttpClient)>($r3);

        return;
    }
}
