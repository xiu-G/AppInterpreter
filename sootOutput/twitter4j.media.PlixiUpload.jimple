class twitter4j.media.PlixiUpload extends twitter4j.media.AbstractImageUploadImpl
{

    public void <init>(twitter4j.conf.Configuration, java.lang.String, twitter4j.auth.OAuthAuthorization)
    {
        twitter4j.internal.logging.Logger $r4;
        twitter4j.conf.Configuration $r1;
        twitter4j.media.PlixiUpload r0;
        java.lang.String $r2;
        twitter4j.auth.OAuthAuthorization $r3;

        r0 := @this: twitter4j.media.PlixiUpload;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.auth.OAuthAuthorization;

        specialinvoke r0.<twitter4j.media.AbstractImageUploadImpl: void <init>(twitter4j.conf.Configuration,java.lang.String,twitter4j.auth.OAuthAuthorization)>($r1, $r2, $r3);

        $r4 = <twitter4j.media.PlixiUpload: twitter4j.internal.logging.Logger logger>;

        virtualinvoke $r4.<twitter4j.internal.logging.Logger: void warn(java.lang.String)>("Lockerz is no longer providing API.");

        r0.<twitter4j.media.PlixiUpload: java.lang.String uploadUrl> = "http://api.plixi.com/api/upload.aspx";

        return;
    }

    protected java.lang.String postUpload()
    {
        twitter4j.internal.http.HttpResponse $r1;
        int $i0, $i1;
        twitter4j.media.PlixiUpload r0;
        twitter4j.TwitterException $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: twitter4j.media.PlixiUpload;

        $r1 = r0.<twitter4j.media.PlixiUpload: twitter4j.internal.http.HttpResponse httpResponse>;

        $i0 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: int getStatusCode()>();

        if $i0 == 201 goto label1;

        $r2 = new twitter4j.TwitterException;

        $r1 = r0.<twitter4j.media.PlixiUpload: twitter4j.internal.http.HttpResponse httpResponse>;

        specialinvoke $r2.<twitter4j.TwitterException: void <init>(java.lang.String,twitter4j.internal.http.HttpResponse)>("Plixi image upload returned invalid status code", $r1);

        throw $r2;

     label1:
        $r1 = r0.<twitter4j.media.PlixiUpload: twitter4j.internal.http.HttpResponse httpResponse>;

        $r3 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: java.lang.String asString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("<Error><ErrorCode>");

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("<ErrorCode>");

        $i0 = $i0 + 11;

        $i1 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String)>("</ErrorCode>");

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r2 = new twitter4j.TwitterException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Plixi image upload failed with this error message: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = r0.<twitter4j.media.PlixiUpload: twitter4j.internal.http.HttpResponse httpResponse>;

        specialinvoke $r2.<twitter4j.TwitterException: void <init>(java.lang.String,twitter4j.internal.http.HttpResponse)>($r3, $r1);

        throw $r2;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("<Status>OK</Status>");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("<MediaUrl>");

        $i0 = $i0 + 10;

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("</MediaUrl>");

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r3;

     label3:
        $r2 = new twitter4j.TwitterException;

        $r1 = r0.<twitter4j.media.PlixiUpload: twitter4j.internal.http.HttpResponse httpResponse>;

        specialinvoke $r2.<twitter4j.TwitterException: void <init>(java.lang.String,twitter4j.internal.http.HttpResponse)>("Unknown Plixi response", $r1);

        throw $r2;
    }

    protected void preUpload()
    {
        java.lang.IllegalStateException $r3;
        twitter4j.internal.http.HttpParameter $r5;
        java.util.Map $r2;
        twitter4j.media.PlixiUpload r0;
        java.lang.String $r1;
        twitter4j.internal.http.HttpParameter[] $r4, $r6;

        r0 := @this: twitter4j.media.PlixiUpload;

        $r1 = virtualinvoke r0.<twitter4j.media.PlixiUpload: java.lang.String generateVerifyCredentialsAuthorizationHeader(java.lang.String)>("https://api.twitter.com/1.1/account/verify_credentials.json");

        $r2 = r0.<twitter4j.media.PlixiUpload: java.util.Map headers>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X-Auth-Service-Provider", "https://api.twitter.com/1.1/account/verify_credentials.json");

        $r2 = r0.<twitter4j.media.PlixiUpload: java.util.Map headers>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X-Verify-Credentials-Authorization", $r1);

        $r1 = r0.<twitter4j.media.PlixiUpload: java.lang.String apiKey>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No API Key for Plixi specified. put media.providerAPIKey in twitter4j.properties.");

        throw $r3;

     label1:
        $r4 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r5 = new twitter4j.internal.http.HttpParameter;

        $r1 = r0.<twitter4j.media.PlixiUpload: java.lang.String apiKey>;

        specialinvoke $r5.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("api_key", $r1);

        $r4[0] = $r5;

        $r5 = r0.<twitter4j.media.PlixiUpload: twitter4j.internal.http.HttpParameter image>;

        $r4[1] = $r5;

        $r5 = r0.<twitter4j.media.PlixiUpload: twitter4j.internal.http.HttpParameter message>;

        if $r5 == null goto label2;

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r5 = r0.<twitter4j.media.PlixiUpload: twitter4j.internal.http.HttpParameter message>;

        $r6[0] = $r5;

        $r4 = virtualinvoke r0.<twitter4j.media.PlixiUpload: twitter4j.internal.http.HttpParameter[] appendHttpParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r6, $r4);

     label2:
        r0.<twitter4j.media.PlixiUpload: twitter4j.internal.http.HttpParameter[] postParameter> = $r4;

        return;
    }
}
