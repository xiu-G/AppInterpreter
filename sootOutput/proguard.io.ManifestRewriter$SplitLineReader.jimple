class proguard.io.ManifestRewriter$SplitLineReader extends java.io.FilterReader
{
    private char[] buffer;
    private int bufferIndex;
    private int bufferSize;

    public void <init>(java.io.Reader)
    {
        char[] $r2;
        proguard.io.ManifestRewriter$SplitLineReader r0;
        java.io.Reader $r1;

        r0 := @this: proguard.io.ManifestRewriter$SplitLineReader;

        $r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.io.FilterReader: void <init>(java.io.Reader)>($r1);

        $r2 = newarray (char)[2];

        r0.<proguard.io.ManifestRewriter$SplitLineReader: char[] buffer> = $r2;

        r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferIndex> = 0;

        r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize> = 0;

        return;
    }

    public int read() throws java.io.IOException
    {
        int $i0, $i1, $i3;
        char[] $r1;
        char $c2;
        proguard.io.ManifestRewriter$SplitLineReader r0;

        r0 := @this: proguard.io.ManifestRewriter$SplitLineReader;

     label1:
        $i0 = r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferIndex>;

        $i1 = r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize>;

        if $i0 >= $i1 goto label2;

        $r1 = r0.<proguard.io.ManifestRewriter$SplitLineReader: char[] buffer>;

        $i0 = r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferIndex>;

        $i1 = $i0 + 1;

        r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferIndex> = $i1;

        $c2 = $r1[$i0];

        $i0 = (int) $c2;

        return $i0;

     label2:
        $i0 = specialinvoke r0.<java.io.FilterReader: int read()>();

        if $i0 == 10 goto label3;

        if $i0 != 13 goto label8;

     label3:
        r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferIndex> = 0;

        r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize> = 0;

        $r1 = r0.<proguard.io.ManifestRewriter$SplitLineReader: char[] buffer>;

        $i1 = r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize>;

        $i3 = $i1 + 1;

        r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize> = $i3;

        $r1[$i1] = 10;

        $i1 = specialinvoke r0.<java.io.FilterReader: int read()>();

        if $i1 != 32 goto label4;

        r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize> = 0;

        goto label1;

     label4:
        if $i0 != 13 goto label5;

        if $i1 == 10 goto label6;

     label5:
        $r1 = r0.<proguard.io.ManifestRewriter$SplitLineReader: char[] buffer>;

        $i0 = r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize>;

        $i3 = $i0 + 1;

        r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize> = $i3;

        $c2 = (char) $i1;

        $r1[$i0] = $c2;

        goto label1;

     label6:
        $i0 = specialinvoke r0.<java.io.FilterReader: int read()>();

        if $i0 != 32 goto label7;

        r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize> = 0;

        goto label1;

     label7:
        $r1 = r0.<proguard.io.ManifestRewriter$SplitLineReader: char[] buffer>;

        $i1 = r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize>;

        $i3 = $i1 + 1;

        r0.<proguard.io.ManifestRewriter$SplitLineReader: int bufferSize> = $i3;

        $c2 = (char) $i0;

        $r1[$i1] = $c2;

        goto label1;

     label8:
        return $i0;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        char $c5;
        proguard.io.ManifestRewriter$SplitLineReader r0;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r1;

        r0 := @this: proguard.io.ManifestRewriter$SplitLineReader;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i3 = 0;

     label1:
        if $i3 >= $i1 goto label3;

        $i2 = virtualinvoke r0.<proguard.io.ManifestRewriter$SplitLineReader: int read()>();

        if $i2 != -1 goto label2;

        return $i3;

     label2:
        $i4 = $i3 + 1;

        $i3 = $i3 + $i0;

        $c5 = (char) $i2;

        $r1[$i3] = $c5;

        $i3 = $i4;

        goto label1;

     label3:
        return $i3;
    }

    public long skip(long) throws java.io.IOException
    {
        byte $b4;
        int $i1, $i2, $i5;
        long $l0, $l3;
        proguard.io.ManifestRewriter$SplitLineReader r0;

        r0 := @this: proguard.io.ManifestRewriter$SplitLineReader;

        $l0 := @parameter0: long;

        $i2 = 0;

     label1:
        $l3 = (long) $i2;

        $b4 = $l3 cmp $l0;

        $i1 = (int) $b4;

        if $i1 >= 0 goto label2;

        $i1 = virtualinvoke r0.<proguard.io.ManifestRewriter$SplitLineReader: int read()>();

        $i5 = -1;

        if $i1 != $i5 goto label3;

     label2:
        $l0 = (long) $i2;

        return $l0;

     label3:
        $i2 = $i2 + 1;

        goto label1;
    }
}
