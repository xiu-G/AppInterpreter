public class org.blockdroid.MultiTouch.TouchImageView extends android.widget.ImageView
{
    static final int DRAG;
    static final int NONE;
    private static final java.lang.String TAG;
    static final int ZOOM;
    android.content.Context context;
    android.graphics.Matrix matrix;
    android.graphics.PointF mid;
    int mode;
    float oldDist;
    android.graphics.Matrix savedMatrix;
    android.graphics.PointF start;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.graphics.PointF $r3;
        org.blockdroid.MultiTouch.TouchImageView$1 $r5;
        android.widget.ImageView$ScaleType $r4;
        android.graphics.Matrix $r2;
        org.blockdroid.MultiTouch.TouchImageView r0;

        r0 := @this: org.blockdroid.MultiTouch.TouchImageView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context)>($r1);

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix> = $r2;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix savedMatrix> = $r2;

        r0.<org.blockdroid.MultiTouch.TouchImageView: int mode> = 0;

        $r3 = new android.graphics.PointF;

        specialinvoke $r3.<android.graphics.PointF: void <init>()>();

        r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.PointF start> = $r3;

        $r3 = new android.graphics.PointF;

        specialinvoke $r3.<android.graphics.PointF: void <init>()>();

        r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.PointF mid> = $r3;

        r0.<org.blockdroid.MultiTouch.TouchImageView: float oldDist> = 1.0F;

        specialinvoke r0.<android.widget.ImageView: void setClickable(boolean)>(1);

        r0.<org.blockdroid.MultiTouch.TouchImageView: android.content.Context context> = $r1;

        $r2 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void setTranslate(float,float)>(1.0F, 1.0F);

        $r2 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke r0.<org.blockdroid.MultiTouch.TouchImageView: void setImageMatrix(android.graphics.Matrix)>($r2);

        $r4 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        virtualinvoke r0.<org.blockdroid.MultiTouch.TouchImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r4);

        $r5 = new org.blockdroid.MultiTouch.TouchImageView$1;

        specialinvoke $r5.<org.blockdroid.MultiTouch.TouchImageView$1: void <init>(org.blockdroid.MultiTouch.TouchImageView)>(r0);

        virtualinvoke r0.<org.blockdroid.MultiTouch.TouchImageView: void setOnTouchListener(android.view.View$OnTouchListener)>($r5);

        return;
    }

    static float access$0(org.blockdroid.MultiTouch.TouchImageView, org.blockdroid.MultiTouch.WrapMotionEvent)
    {
        float $f0;
        org.blockdroid.MultiTouch.WrapMotionEvent $r1;
        org.blockdroid.MultiTouch.TouchImageView $r0;

        $r0 := @parameter0: org.blockdroid.MultiTouch.TouchImageView;

        $r1 := @parameter1: org.blockdroid.MultiTouch.WrapMotionEvent;

        $f0 = specialinvoke $r0.<org.blockdroid.MultiTouch.TouchImageView: float spacing(org.blockdroid.MultiTouch.WrapMotionEvent)>($r1);

        return $f0;
    }

    static void access$1(org.blockdroid.MultiTouch.TouchImageView, android.graphics.PointF, org.blockdroid.MultiTouch.WrapMotionEvent)
    {
        android.graphics.PointF $r1;
        org.blockdroid.MultiTouch.WrapMotionEvent $r2;
        org.blockdroid.MultiTouch.TouchImageView $r0;

        $r0 := @parameter0: org.blockdroid.MultiTouch.TouchImageView;

        $r1 := @parameter1: android.graphics.PointF;

        $r2 := @parameter2: org.blockdroid.MultiTouch.WrapMotionEvent;

        specialinvoke $r0.<org.blockdroid.MultiTouch.TouchImageView: void midPoint(android.graphics.PointF,org.blockdroid.MultiTouch.WrapMotionEvent)>($r1, $r2);

        return;
    }

    private void dumpEvent(org.blockdroid.MultiTouch.WrapMotionEvent)
    {
        org.blockdroid.MultiTouch.WrapMotionEvent $r1;
        java.lang.String[] r2;
        int i0, $i1, $i2;
        float $f0;
        java.lang.StringBuilder r3, $r4;
        java.lang.String $r5;
        org.blockdroid.MultiTouch.TouchImageView r0;

        r0 := @this: org.blockdroid.MultiTouch.TouchImageView;

        $r1 := @parameter0: org.blockdroid.MultiTouch.WrapMotionEvent;

        r2 = newarray (java.lang.String)[10];

        r2[0] = "DOWN";

        r2[1] = "UP";

        r2[2] = "MOVE";

        r2[3] = "CANCEL";

        r2[4] = "OUTSIDE";

        r2[5] = "POINTER_DOWN";

        r2[6] = "POINTER_UP";

        r2[7] = "7?";

        r2[8] = "8?";

        r2[9] = "9?";

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $i1 = virtualinvoke $r1.<org.blockdroid.MultiTouch.WrapMotionEvent: int getAction()>();

        i0 = $i1 & 255;

        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("event ACTION_");

        $r5 = r2[i0];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        if i0 == 5 goto label1;

        if i0 != 6 goto label2;

     label1:
        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(pid ");

        i0 = $i1 >> 8;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label2:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<org.blockdroid.MultiTouch.WrapMotionEvent: int getPointerCount()>();

        if i0 < $i1 goto label4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Touch", $r5);

        return;

     label4:
        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(pid ");

        $i1 = virtualinvoke $r1.<org.blockdroid.MultiTouch.WrapMotionEvent: int getPointerId(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")=");

        $f0 = virtualinvoke $r1.<org.blockdroid.MultiTouch.WrapMotionEvent: float getX(int)>(i0);

        $i1 = (int) $f0;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f0 = virtualinvoke $r1.<org.blockdroid.MultiTouch.WrapMotionEvent: float getY(int)>(i0);

        $i1 = (int) $f0;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $i1 = i0 + 1;

        $i2 = virtualinvoke $r1.<org.blockdroid.MultiTouch.WrapMotionEvent: int getPointerCount()>();

        if $i1 >= $i2 goto label5;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

     label5:
        i0 = i0 + 1;

        goto label3;
    }

    private void midPoint(android.graphics.PointF, org.blockdroid.MultiTouch.WrapMotionEvent)
    {
        android.graphics.PointF $r1;
        org.blockdroid.MultiTouch.WrapMotionEvent $r2;
        float f0, f1, $f2;
        org.blockdroid.MultiTouch.TouchImageView r0;

        r0 := @this: org.blockdroid.MultiTouch.TouchImageView;

        $r1 := @parameter0: android.graphics.PointF;

        $r2 := @parameter1: org.blockdroid.MultiTouch.WrapMotionEvent;

        f0 = virtualinvoke $r2.<org.blockdroid.MultiTouch.WrapMotionEvent: float getX(int)>(0);

        f1 = virtualinvoke $r2.<org.blockdroid.MultiTouch.WrapMotionEvent: float getX(int)>(1);

        f0 = f0 + f1;

        f1 = virtualinvoke $r2.<org.blockdroid.MultiTouch.WrapMotionEvent: float getY(int)>(0);

        $f2 = virtualinvoke $r2.<org.blockdroid.MultiTouch.WrapMotionEvent: float getY(int)>(1);

        f1 = f1 + $f2;

        f0 = f0 / 2.0F;

        f1 = f1 / 2.0F;

        virtualinvoke $r1.<android.graphics.PointF: void set(float,float)>(f0, f1);

        return;
    }

    private float spacing(org.blockdroid.MultiTouch.WrapMotionEvent)
    {
        org.blockdroid.MultiTouch.WrapMotionEvent $r1;
        float f0, f1, $f2;
        org.blockdroid.MultiTouch.TouchImageView r0;

        r0 := @this: org.blockdroid.MultiTouch.TouchImageView;

        $r1 := @parameter0: org.blockdroid.MultiTouch.WrapMotionEvent;

        f0 = virtualinvoke $r1.<org.blockdroid.MultiTouch.WrapMotionEvent: float getX(int)>(0);

        f1 = virtualinvoke $r1.<org.blockdroid.MultiTouch.WrapMotionEvent: float getX(int)>(1);

        f0 = f0 - f1;

        f1 = virtualinvoke $r1.<org.blockdroid.MultiTouch.WrapMotionEvent: float getY(int)>(0);

        $f2 = virtualinvoke $r1.<org.blockdroid.MultiTouch.WrapMotionEvent: float getY(int)>(1);

        f1 = f1 - $f2;

        f0 = f0 * f0;

        f1 = f1 * f1;

        f0 = f0 + f1;

        f0 = staticinvoke <android.util.FloatMath: float sqrt(float)>(f0);

        return f0;
    }

    public void setImage(android.graphics.Bitmap, int, int)
    {
        android.graphics.PointF $r4;
        android.graphics.Bitmap $r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;
        android.graphics.Matrix $r2, $r3;
        org.blockdroid.MultiTouch.TouchImageView r0;

        r0 := @this: org.blockdroid.MultiTouch.TouchImageView;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r1);

        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $i2 = $i1 / $i2;

        $i3 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i3 = $i0 / $i3;

        if $i2 < $i3 goto label2;

        $f0 = (float) $i0;

        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i2;

        $f0 = $f0 / $f1;

     label1:
        $r2 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix savedMatrix>;

        $r3 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r3);

        $r2 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix>;

        $r3 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix savedMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r3);

        $r2 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix>;

        $r4 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.PointF mid>;

        $f1 = $r4.<android.graphics.PointF: float x>;

        $r4 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.PointF mid>;

        $f2 = $r4.<android.graphics.PointF: float y>;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postScale(float,float,float,float)>($f0, $f0, $f1, $f2);

        $r2 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke r0.<org.blockdroid.MultiTouch.TouchImageView: void setImageMatrix(android.graphics.Matrix)>($r2);

        $f1 = (float) $i1;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i1;

        $f2 = $f2 * $f0;

        $f1 = $f1 - $f2;

        $f2 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $f3 = (float) $i0;

        $f0 = $f3 * $f0;

        $f0 = $f2 - $f0;

        $f1 = $f1 / 2.0F;

        $f0 = $f0 / 2.0F;

        $r2 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix savedMatrix>;

        $r3 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r3);

        $r2 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix>;

        $r3 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix savedMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r3);

        $r2 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

        $r2 = r0.<org.blockdroid.MultiTouch.TouchImageView: android.graphics.Matrix matrix>;

        virtualinvoke r0.<org.blockdroid.MultiTouch.TouchImageView: void setImageMatrix(android.graphics.Matrix)>($r2);

        return;

     label2:
        $f0 = (float) $i1;

        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i2;

        $f0 = $f0 / $f1;

        goto label1;
    }

    public static void <clinit>()
    {
        <org.blockdroid.MultiTouch.TouchImageView: int ZOOM> = 2;

        <org.blockdroid.MultiTouch.TouchImageView: java.lang.String TAG> = "Touch";

        <org.blockdroid.MultiTouch.TouchImageView: int NONE> = 0;

        <org.blockdroid.MultiTouch.TouchImageView: int DRAG> = 1;

        return;
    }
}
