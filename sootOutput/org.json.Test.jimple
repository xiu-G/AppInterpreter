public class org.json.Test extends java.lang.Object
{

    public void <init>()
    {
        org.json.Test r0;

        r0 := @this: org.json.Test;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        org.json.Test$1Obj $r1, $r26;
        org.json.JSONObject $r2, $r8, $r28;
        org.json.JSONStringer $r5, $r27;
        boolean $z0;
        java.lang.Exception $r14, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        org.json.JSONWriter $r6;
        java.io.Writer $r16;
        java.lang.StringBuilder $r11, $r30;
        java.lang.String[] $r0;
        long $l2;
        int $i0;
        java.lang.String $r4;
        double $d0;
        java.io.PrintStream $r3;
        java.util.Iterator $r13;
        java.io.StringWriter $r15, $r32;
        org.json.JSONTokener $r12, $r31;
        char $c1;
        java.lang.Object $r9;
        org.json.JSONArray $r7, $r10, $r29;

        $r0 := @parameter0: java.lang.String[];

        $r0 = newarray (java.lang.String)[3];

     label001:
        $r0[0] = "aString";

        $r0[1] = "aNumber";

        $r0[2] = "aBoolean";

     label002:
        $r26 = new org.json.Test$1Obj;

        $r1 = $r26;

     label003:
        specialinvoke $r26.<org.json.Test$1Obj: void <init>(java.lang.String,double,boolean)>("A string, a number, and a boolean", 42.0, 1);

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<![CDATA[This is a collection of test patterns and examples for org.json.]]>  Ignore the stuff past the end.  ");

     label004:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label005:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label006:
        $r27 = new org.json.JSONStringer;

        $r5 = $r27;

     label007:
        specialinvoke $r27.<org.json.JSONStringer: void <init>()>();

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter object()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter key(java.lang.String)>("foo");

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>("bar");

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter key(java.lang.String)>("baz");

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter array()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter object()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter key(java.lang.String)>("quux");

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>("Thanks, Josh!");

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter endObject()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter endObject()>();

        $r4 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

     label008:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label009:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label010:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new org.json.JSONStringer;

        $r5 = $r27;

     label011:
        specialinvoke $r27.<org.json.JSONStringer: void <init>()>();

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter object()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter key(java.lang.String)>("a");

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter array()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter array()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter array()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>("b");

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter endObject()>();

        $r4 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label012:
        $r27 = new org.json.JSONStringer;

        $r5 = $r27;

     label013:
        specialinvoke $r27.<org.json.JSONStringer: void <init>()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter array()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter value(long)>(1L);

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter array()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter value(java.lang.Object)>(null);

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter array()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter object()>();

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("empty-array");

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter array()>();

        virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("answer");

        virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(long)>(42L);

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("null");

        virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>(null);

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("false");

        virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(boolean)>(0);

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("true");

        virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(boolean)>(1);

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("big");

        virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(double)>(1.23456789E96);

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("small");

        virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(double)>(1.23456789E-80);

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("empty-object");

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter object()>();

        virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter endObject()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("long");

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter value(long)>(9223372036854775807L);

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter endObject()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter value(java.lang.Object)>("two");

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter endArray()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter value(boolean)>(1);

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter endArray()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter value(double)>(98.6);

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter value(double)>(-100.0);

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter object()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter endObject()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter object()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter key(java.lang.String)>("one");

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter value(double)>(1.0);

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter endObject()>();

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter value(java.lang.Object)>($r1);

        virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter endArray()>();

     label014:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label015:
        $r4 = virtualinvoke $r5.<org.json.JSONStringer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label016:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new org.json.JSONArray;

        $r7 = $r10;

     label017:
        $r4 = virtualinvoke $r5.<org.json.JSONStringer: java.lang.String toString()>();

        specialinvoke $r10.<org.json.JSONArray: void <init>(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<org.json.JSONArray: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label018:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label019:
        specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.Object,java.lang.String[])>($r1, $r0);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("test", $r1);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("comment", "This object contains a test object that implements JSONString");

     label020:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label021:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label022:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label023:
        specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>("{slashes: \'///\', closetag: \'</script>\', backslash:\'\\\\\', ei: {quotes: \'\"\\\'\'},eo: {a: \'\"quoted\"\', b:\"don\'t\"}, quotes: [\"\'\", \'\"\']}");

     label024:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label025:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label026:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label027:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label028:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label029:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label030:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label031:
        specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>("/*comment*/{foo: [true, false,9876543210,    0.0, 1.00000001,  1.000000000001, 1.00000000000000001, .00000000000000001, 2.00, 0.1, 2e100, -32,[],{}, \"string\"],   to   : null, op : \'Good\',ten:10} postfix comment");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("String", "98.6");

     label032:
        $r28 = new org.json.JSONObject;

        $r8 = $r28;

     label033:
        specialinvoke $r28.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("JSONObject", $r8);

     label034:
        $r10 = new org.json.JSONArray;

        $r7 = $r10;

     label035:
        specialinvoke $r10.<org.json.JSONArray: void <init>()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("JSONArray", $r7);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("int", 57);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("double", 1.2345678901234568E29);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("true", 1);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("false", 0);

     label036:
        $r9 = <org.json.JSONObject: java.lang.Object NULL>;

     label037:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("null", $r9);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("bool", "true");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("zero", -0.0);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("\\u2028", "\u2028");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("\\u2029", "\u2029");

        $r7 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("foo");

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(int)>(666);

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(double)>(2001.99);

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>("so \"fine\".");

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>("so <fine>.");

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(boolean)>(1);

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(boolean)>(0);

     label038:
        $r29 = new org.json.JSONArray;

        $r10 = $r29;

     label039:
        specialinvoke $r29.<org.json.JSONArray: void <init>()>();

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r10);

     label040:
        $r28 = new org.json.JSONObject;

        $r8 = $r28;

     label041:
        specialinvoke $r28.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r8);

     label042:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label043:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label044:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label045:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label046:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label047:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String: ");

        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("String");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label048:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label049:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  bool: ");

        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("bool");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label050:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label051:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    to: ");

        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("to");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label052:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label053:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  true: ");

        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("true");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label054:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label055:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   foo: ");

        $r7 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("foo");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label056:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label057:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    op: ");

        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("op");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label058:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label059:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ten: ");

        $i0 = virtualinvoke $r2.<org.json.JSONObject: int getInt(java.lang.String)>("ten");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label060:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label061:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  oops: ");

        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean optBoolean(java.lang.String)>("oops");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<xml one = 1 two=\' \"2\" \'><five></five>First \t&lt;content&gt;<five></five> This is \"content\". <three>  3  </three>JSON does not preserve the sequencing of elements and contents.<three>  III  </three>  <three>  T H R E E</three><four/>Content text is an implied structure in XML. <six content=\"6\"/>JSON does not have implied structure:<seven>7</seven>everything is explicit.<![CDATA[CDATA blocks<are><supported>!]]></xml>");

     label062:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label063:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label064:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label065:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label066:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label067:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<mapping><empty/>   <class name = \"Customer\">      <field name = \"ID\" type = \"string\">         <bind-xml name=\"ID\" node=\"attribute\"/>      </field>      <field name = \"FirstName\" type = \"FirstName\"/>      <field name = \"MI\" type = \"MI\"/>      <field name = \"LastName\" type = \"LastName\"/>   </class>   <class name = \"FirstName\">      <field name = \"text\">         <bind-xml name = \"text\" node = \"text\"/>      </field>   </class>   <class name = \"MI\">      <field name = \"text\">         <bind-xml name = \"text\" node = \"text\"/>      </field>   </class>   <class name = \"LastName\">      <field name = \"text\">         <bind-xml name = \"text\" node = \"text\"/>      </field>   </class></mapping>");

     label068:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label069:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label070:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label071:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label072:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label073:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<?xml version=\"1.0\" ?><Book Author=\"Anonymous\"><Title>Sample Book</Title><Chapter id=\"1\">This is chapter 1. It is not very long or interesting.</Chapter><Chapter id=\"2\">This is chapter 2. Although it is longer than chapter 1, it is not any more interesting.</Chapter></Book>");

     label074:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label075:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label076:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label077:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label078:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label079:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<!DOCTYPE bCard \'http://www.cs.caltech.edu/~adam/schemas/bCard\'><bCard><?xml default bCard        firstname = \'\'        lastname  = \'\' company   = \'\' email = \'\' homepage  = \'\'?><bCard        firstname = \'Rohit\'        lastname  = \'Khare\'        company   = \'MCI\'        email     = \'khare@mci.net\'        homepage  = \'http://pest.w3.org/\'/><bCard        firstname = \'Adam\'        lastname  = \'Rifkin\'        company   = \'Caltech Infospheres Project\'        email     = \'adam@cs.caltech.edu\'        homepage  = \'http://www.cs.caltech.edu/~adam/\'/></bCard>");

     label080:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label081:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label082:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label083:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label084:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label085:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<?xml version=\"1.0\"?><customer>    <firstName>        <text>Fred</text>    </firstName>    <ID>fbs0001</ID>    <lastName> <text>Scerbo</text>    </lastName>    <MI>        <text>B</text>    </MI></customer>");

     label086:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label087:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label088:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label089:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label090:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label091:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<!ENTITY tp-address PUBLIC \'-//ABC University::Special Collections Library//TEXT (titlepage: name and address)//EN\' \'tpspcoll.sgm\'><list type=\'simple\'><head>Repository Address </head><item>Special Collections Library</item><item>ABC University</item><item>Main Library, 40 Circle Drive</item><item>Ourtown, Pennsylvania</item><item>17654 USA</item></list>");

     label092:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label093:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label094:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label095:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label096:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label097:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<test intertag status=ok><empty/>deluxe<blip sweet=true>&amp;&quot;toot&quot;&toot;&#x41;</blip><x>eks</x><w>bonus</w><w>bonus2</w></test>");

     label098:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label099:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label100:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label101:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label102:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label103:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.HTTP: org.json.JSONObject toJSONObject(java.lang.String)>("GET / HTTP/1.0\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-powerpoint, application/vnd.ms-excel, application/msword, */*\nAccept-Language: en-us\nUser-Agent: Mozilla/4.0 (compatible; MSIE 5.5; Windows 98; Win 9x 4.90; T312461; Q312461)\nHost: www.nokko.com\nConnection: keep-alive\nAccept-encoding: gzip, deflate\n");

     label104:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label105:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label106:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label107:
        $r4 = staticinvoke <org.json.HTTP: java.lang.String toString(org.json.JSONObject)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label108:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label109:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.HTTP: org.json.JSONObject toJSONObject(java.lang.String)>("HTTP/1.1 200 Oki Doki\nDate: Sun, 26 May 2002 17:38:52 GMT\nServer: Apache/1.3.23 (Unix) mod_perl/1.26\nKeep-Alive: timeout=15, max=100\nConnection: Keep-Alive\nTransfer-Encoding: chunked\nContent-Type: text/html\n");

     label110:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label111:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label112:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label113:
        $r4 = staticinvoke <org.json.HTTP: java.lang.String toString(org.json.JSONObject)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label114:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label115:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label116:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label117:
        specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>("{nix: null, nux: false, null: \'null\', \'Request-URI\': \'/\', Method: \'GET\', \'HTTP-Version\': \'HTTP/1.0\'}");

     label118:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label119:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label120:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label121:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isNull: ");

        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean isNull(java.lang.String)>("nix");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label122:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label123:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   has: ");

        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>("nix");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label124:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label125:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label126:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label127:
        $r4 = staticinvoke <org.json.HTTP: java.lang.String toString(org.json.JSONObject)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label128:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label129:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n\n<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/1999/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\"><SOAP-ENV:Body><ns1:doGoogleSearch xmlns:ns1=\"urn:GoogleSearch\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"><key xsi:type=\"xsd:string\">GOOGLEKEY</key> <q xsi:type=\"xsd:string\">\'+search+\'</q> <start xsi:type=\"xsd:int\">0</start> <maxResults xsi:type=\"xsd:int\">10</maxResults> <filter xsi:type=\"xsd:boolean\">true</filter> <restrict xsi:type=\"xsd:string\"></restrict> <safeSearch xsi:type=\"xsd:boolean\">false</safeSearch> <lr xsi:type=\"xsd:string\"></lr> <ie xsi:type=\"xsd:string\">latin1</ie> <oe xsi:type=\"xsd:string\">latin1</oe></ns1:doGoogleSearch></SOAP-ENV:Body></SOAP-ENV:Envelope>");

     label130:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label131:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label132:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label133:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label134:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label135:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label136:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label137:
        specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>("{Envelope: {Body: {\"ns1:doGoogleSearch\": {oe: \"latin1\", filter: true, q: \"\'+search+\'\", key: \"GOOGLEKEY\", maxResults: 10, \"SOAP-ENV:encodingStyle\": \"http://schemas.xmlsoap.org/soap/encoding/\", start: 0, ie: \"latin1\", safeSearch:false, \"xmlns:ns1\": \"urn:GoogleSearch\"}}}}");

     label138:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label139:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label140:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label141:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label142:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label143:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.CookieList: org.json.JSONObject toJSONObject(java.lang.String)>("  f%oo = b+l=ah  ; o;n%40e = t.wo ");

     label144:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label145:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label146:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label147:
        $r4 = staticinvoke <org.json.CookieList: java.lang.String toString(org.json.JSONObject)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label148:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label149:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r2 = staticinvoke <org.json.Cookie: org.json.JSONObject toJSONObject(java.lang.String)>("f%oo=blah; secure ;expires = April 24, 2002");

     label150:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label151:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label152:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label153:
        $r4 = staticinvoke <org.json.Cookie: java.lang.String toString(org.json.JSONObject)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label154:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label155:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label156:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label157:
        specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>("{script: \'It is not allowed in HTML to send a close script tag in a string<script>because it confuses browsers</script>so we insert a backslash before the /\'}");

     label158:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label159:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label160:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label161:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label162:
        $r31 = new org.json.JSONTokener;

        $r12 = $r31;

     label163:
        specialinvoke $r31.<org.json.JSONTokener: void <init>(java.lang.String)>("{op:\'test\', to:\'session\', pre:1}{op:\'test\', to:\'session\', pre:2}");

     label164:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label165:
        specialinvoke $r8.<org.json.JSONObject: void <init>(org.json.JSONTokener)>($r12);

     label166:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label167:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label168:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label169:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pre: ");

        $i0 = virtualinvoke $r2.<org.json.JSONObject: int optInt(java.lang.String)>("pre");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $c1 = virtualinvoke $r12.<org.json.JSONTokener: char skipTo(char)>(123);

     label170:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $i0 = (int) $c1;

     label171:
        virtualinvoke $r3.<java.io.PrintStream: void println(int)>($i0);

     label172:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label173:
        specialinvoke $r8.<org.json.JSONObject: void <init>(org.json.JSONTokener)>($r12);

     label174:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label175:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label176:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label177:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $r7 = staticinvoke <org.json.CDL: org.json.JSONArray toJSONArray(java.lang.String)>("No quotes, \'Single Quotes\', \"Double Quotes\"\n1,\'2\',\"3\"\n,\'It is \"good,\"\', \"It works.\"\n\n");

     label178:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label179:
        $r4 = staticinvoke <org.json.CDL: java.lang.String toString(org.json.JSONArray)>($r7);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label180:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label181:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label182:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label183:
        $r4 = virtualinvoke $r7.<org.json.JSONArray: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label184:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label185:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label186:
        $r10 = new org.json.JSONArray;

        $r7 = $r10;

     label187:
        specialinvoke $r10.<org.json.JSONArray: void <init>(java.lang.String)>(" [\"<escape>\", next is an implied null , , ok,] ");

     label188:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label189:
        $r4 = virtualinvoke $r7.<org.json.JSONArray: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label190:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label191:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label192:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label193:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r7);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label194:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label195:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label196:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label197:
        specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>("{ fun => with non-standard forms ; forgiving => This package can be used to parse formats that are similar to but not stricting conforming to JSON; why=To make it easier to migrate existing data to JSON,one = [[1.00]]; uno=[[{1=>1}]];\'+\':+6e66 ;pluses=+++;empty = \'\' , \'double\':0.666,true: TRUE, false: FALSE, null=NULL;[true] = [[!,@;*]]; string=>  o. k. ; # comment\r oct=0666; hex=0x666; dec=666; o=0999; noh=0x0x}");

     label198:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label199:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label200:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label201:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("true");

     label202:
        if $z0 == 0 goto label206;

     label203:
        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("false");

     label204:
        if $z0 != 0 goto label206;

        $r3 = <java.lang.System: java.io.PrintStream out>;

     label205:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("It\'s all good");

     label206:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label207:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label208:
        $r28 = new org.json.JSONObject;

        $r8 = $r28;

        $r0 = newarray (java.lang.String)[4];

     label209:
        $r0[0] = "dec";

        $r0[1] = "oct";

        $r0[2] = "hex";

        $r0[3] = "missing";

        specialinvoke $r28.<org.json.JSONObject: void <init>(org.json.JSONObject,java.lang.String[])>($r2, $r0);

     label210:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label211:
        $r4 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label212:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label213:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("");

     label214:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new org.json.JSONStringer;

        $r5 = $r27;

     label215:
        specialinvoke $r27.<org.json.JSONStringer: void <init>()>();

        $r6 = virtualinvoke $r5.<org.json.JSONStringer: org.json.JSONWriter array()>();

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter value(java.lang.Object)>($r8);

        $r6 = virtualinvoke $r6.<org.json.JSONWriter: org.json.JSONWriter endArray()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r6);

     label216:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label217:
        specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>("{string: \"98.6\", long: 2147483648, int: 2147483647, longer: 9223372036854775807, double: 9223372036854775808}");

     label218:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label219:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label220:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label221:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\ngetInt");

     label222:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label223:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int    ");

        $i0 = virtualinvoke $r2.<org.json.JSONObject: int getInt(java.lang.String)>("int");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label224:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label225:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("long   ");

        $i0 = virtualinvoke $r2.<org.json.JSONObject: int getInt(java.lang.String)>("long");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label226:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label227:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longer ");

        $i0 = virtualinvoke $r2.<org.json.JSONObject: int getInt(java.lang.String)>("longer");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label228:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label229:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("double ");

        $i0 = virtualinvoke $r2.<org.json.JSONObject: int getInt(java.lang.String)>("double");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label230:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label231:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("string ");

        $i0 = virtualinvoke $r2.<org.json.JSONObject: int getInt(java.lang.String)>("string");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label232:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label233:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\ngetLong");

     label234:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label235:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int    ");

        $l2 = virtualinvoke $r2.<org.json.JSONObject: long getLong(java.lang.String)>("int");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label236:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label237:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("long   ");

        $l2 = virtualinvoke $r2.<org.json.JSONObject: long getLong(java.lang.String)>("long");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label238:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label239:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longer ");

        $l2 = virtualinvoke $r2.<org.json.JSONObject: long getLong(java.lang.String)>("longer");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label240:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label241:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("double ");

        $l2 = virtualinvoke $r2.<org.json.JSONObject: long getLong(java.lang.String)>("double");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label242:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label243:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("string ");

        $l2 = virtualinvoke $r2.<org.json.JSONObject: long getLong(java.lang.String)>("string");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label244:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label245:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\ngetDouble");

     label246:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label247:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int    ");

        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("int");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label248:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label249:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("long   ");

        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("long");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label250:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label251:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longer ");

        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("longer");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label252:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label253:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("double ");

        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("double");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label254:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label255:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("string ");

        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("string");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("good sized", 9223372036854775807L);

     label256:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label257:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label258:
        $r10 = new org.json.JSONArray;

        $r7 = $r10;

     label259:
        specialinvoke $r10.<org.json.JSONArray: void <init>(java.lang.String)>("[2147483647, 2147483648, 9223372036854775807, 9223372036854775808]");

     label260:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label261:
        $r4 = virtualinvoke $r7.<org.json.JSONArray: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label262:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label263:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\nKeys: ");

        $r13 = virtualinvoke $r2.<org.json.JSONObject: java.util.Iterator keys()>();

     label264:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

     label265:
        if $z0 == 0 goto label271;

     label266:
        $r9 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r9;

     label267:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        $r11 = $r30;

     label268:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r4);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label269:
        goto label264;

     label270:
        $r14 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = virtualinvoke $r14.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;

     label271:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label272:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\naccumulate: ");

     label273:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label274:
        specialinvoke $r8.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooge", "Curly");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooge", "Larry");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooge", "Moe");

        $r7 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("stooge");

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>(5, "Shemp");

     label275:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label276:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label277:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label278:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\nwrite:");

     label279:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r32 = new java.io.StringWriter;

        $r15 = $r32;

     label280:
        specialinvoke $r32.<java.io.StringWriter: void <init>()>();

        $r16 = virtualinvoke $r2.<org.json.JSONObject: java.io.Writer write(java.io.Writer)>($r15);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r16);

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<xml empty><a></a><a>1</a><a>22</a><a>333</a></xml>");

     label281:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label282:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label283:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label284:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r2 = staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<book><chapter>Content of the first chapter</chapter><chapter>Content of the second chapter      <chapter>Content of the first subchapter</chapter>      <chapter>Content of the second subchapter</chapter></chapter><chapter>Third Chapter</chapter></book>");

     label285:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label286:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label287:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label288:
        $r4 = staticinvoke <org.json.XML: java.lang.String toString(java.lang.Object)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label289:
        $r8 = new org.json.JSONObject;

        $r2 = $r8;

     label290:
        specialinvoke $r8.<org.json.JSONObject: void <init>(java.util.Map)>(null);

     label291:
        $r10 = new org.json.JSONArray;

        $r7 = $r10;

     label292:
        specialinvoke $r10.<org.json.JSONArray: void <init>(java.util.Collection)>(null);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject append(java.lang.String,java.lang.Object)>("stooge", "Joe DeRita");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject append(java.lang.String,java.lang.Object)>("stooge", "Shemp");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooges", "Curly");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooges", "Larry");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stooges", "Moe");

        $r9 = virtualinvoke $r2.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("stooges");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>("stoogearray", $r9);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.util.Map)>("map", null);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.util.Collection)>("collection", null);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("array", $r7);

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(java.util.Map)>(null);

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(java.util.Collection)>(null);

     label293:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label294:
        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString(int)>(4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label295:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label296:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("\nTesting Exceptions: ");

     label297:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label298:
        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label299:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label300:
        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("stooge");

        virtualinvoke $r3.<java.io.PrintStream: void println(double)>($d0);

     label301:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label302:
        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label303:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label304:
        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>("howard");

        virtualinvoke $r3.<java.io.PrintStream: void println(double)>($d0);

     label305:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label306:
        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label307:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label308:
        $r2 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(null, "howard");

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r2);

     label309:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label310:
        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label311:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label312:
        $d0 = virtualinvoke $r7.<org.json.JSONArray: double getDouble(int)>(0);

        virtualinvoke $r3.<java.io.PrintStream: void println(double)>($d0);

     label313:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label314:
        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label315:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $i0 = -1;

     label316:
        $r9 = virtualinvoke $r7.<org.json.JSONArray: java.lang.Object get(int)>($i0);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r9);

     label317:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label318:
        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label319:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label320:
        $r7 = virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(double)>(#NaN);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r7);

     label321:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label322:
        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label323:
        staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<a><b>    ");

     label324:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label325:
        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label326:
        staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<a></b>    ");

     label327:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label328:
        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("Exception: ");

     label329:
        staticinvoke <org.json.XML: org.json.JSONObject toJSONObject(java.lang.String)>("<a></a    ");

     label330:
        return;

     label331:
        $r17 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

     label332:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r17);

     label333:
        return;

     label334:
        $r18 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

     label335:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r18);

     label336:
        goto label301;

     label337:
        $r19 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

     label338:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r19);

     label339:
        goto label305;

     label340:
        $r20 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

     label341:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r20);

     label342:
        goto label309;

     label343:
        $r21 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

     label344:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r21);

     label345:
        goto label313;

     label346:
        $r22 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

     label347:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r22);

     label348:
        goto label317;

     label349:
        $r23 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

     label350:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r23);

     label351:
        goto label321;

     label352:
        $r24 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

     label353:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r24);

     label354:
        goto label324;

     label355:
        $r25 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

     label356:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.Object)>($r25);

     label357:
        goto label327;

        catch java.lang.Exception from label001 to label002 with label270;
        catch java.lang.Exception from label003 to label004 with label270;
        catch java.lang.Exception from label005 to label006 with label270;
        catch java.lang.Exception from label007 to label008 with label270;
        catch java.lang.Exception from label009 to label010 with label270;
        catch java.lang.Exception from label011 to label012 with label270;
        catch java.lang.Exception from label013 to label014 with label270;
        catch java.lang.Exception from label015 to label016 with label270;
        catch java.lang.Exception from label017 to label018 with label270;
        catch java.lang.Exception from label019 to label020 with label270;
        catch java.lang.Exception from label021 to label022 with label270;
        catch java.lang.Exception from label023 to label024 with label270;
        catch java.lang.Exception from label025 to label026 with label270;
        catch java.lang.Exception from label027 to label028 with label270;
        catch java.lang.Exception from label029 to label030 with label270;
        catch java.lang.Exception from label031 to label032 with label270;
        catch java.lang.Exception from label033 to label034 with label270;
        catch java.lang.Exception from label035 to label036 with label270;
        catch java.lang.Exception from label037 to label038 with label270;
        catch java.lang.Exception from label039 to label040 with label270;
        catch java.lang.Exception from label041 to label042 with label270;
        catch java.lang.Exception from label043 to label044 with label270;
        catch java.lang.Exception from label045 to label046 with label270;
        catch java.lang.Exception from label047 to label048 with label270;
        catch java.lang.Exception from label049 to label050 with label270;
        catch java.lang.Exception from label051 to label052 with label270;
        catch java.lang.Exception from label053 to label054 with label270;
        catch java.lang.Exception from label055 to label056 with label270;
        catch java.lang.Exception from label057 to label058 with label270;
        catch java.lang.Exception from label059 to label060 with label270;
        catch java.lang.Exception from label061 to label062 with label270;
        catch java.lang.Exception from label063 to label064 with label270;
        catch java.lang.Exception from label065 to label066 with label270;
        catch java.lang.Exception from label067 to label068 with label270;
        catch java.lang.Exception from label069 to label070 with label270;
        catch java.lang.Exception from label071 to label072 with label270;
        catch java.lang.Exception from label073 to label074 with label270;
        catch java.lang.Exception from label075 to label076 with label270;
        catch java.lang.Exception from label077 to label078 with label270;
        catch java.lang.Exception from label079 to label080 with label270;
        catch java.lang.Exception from label081 to label082 with label270;
        catch java.lang.Exception from label083 to label084 with label270;
        catch java.lang.Exception from label085 to label086 with label270;
        catch java.lang.Exception from label087 to label088 with label270;
        catch java.lang.Exception from label089 to label090 with label270;
        catch java.lang.Exception from label091 to label092 with label270;
        catch java.lang.Exception from label093 to label094 with label270;
        catch java.lang.Exception from label095 to label096 with label270;
        catch java.lang.Exception from label097 to label098 with label270;
        catch java.lang.Exception from label099 to label100 with label270;
        catch java.lang.Exception from label101 to label102 with label270;
        catch java.lang.Exception from label103 to label104 with label270;
        catch java.lang.Exception from label105 to label106 with label270;
        catch java.lang.Exception from label107 to label108 with label270;
        catch java.lang.Exception from label109 to label110 with label270;
        catch java.lang.Exception from label111 to label112 with label270;
        catch java.lang.Exception from label113 to label114 with label270;
        catch java.lang.Exception from label115 to label116 with label270;
        catch java.lang.Exception from label117 to label118 with label270;
        catch java.lang.Exception from label119 to label120 with label270;
        catch java.lang.Exception from label121 to label122 with label270;
        catch java.lang.Exception from label123 to label124 with label270;
        catch java.lang.Exception from label125 to label126 with label270;
        catch java.lang.Exception from label127 to label128 with label270;
        catch java.lang.Exception from label129 to label130 with label270;
        catch java.lang.Exception from label131 to label132 with label270;
        catch java.lang.Exception from label133 to label134 with label270;
        catch java.lang.Exception from label135 to label136 with label270;
        catch java.lang.Exception from label137 to label138 with label270;
        catch java.lang.Exception from label139 to label140 with label270;
        catch java.lang.Exception from label141 to label142 with label270;
        catch java.lang.Exception from label143 to label144 with label270;
        catch java.lang.Exception from label145 to label146 with label270;
        catch java.lang.Exception from label147 to label148 with label270;
        catch java.lang.Exception from label149 to label150 with label270;
        catch java.lang.Exception from label151 to label152 with label270;
        catch java.lang.Exception from label153 to label154 with label270;
        catch java.lang.Exception from label155 to label156 with label270;
        catch java.lang.Exception from label157 to label158 with label270;
        catch java.lang.Exception from label159 to label160 with label270;
        catch java.lang.Exception from label161 to label162 with label270;
        catch java.lang.Exception from label163 to label164 with label270;
        catch java.lang.Exception from label165 to label166 with label270;
        catch java.lang.Exception from label167 to label168 with label270;
        catch java.lang.Exception from label169 to label170 with label270;
        catch java.lang.Exception from label171 to label172 with label270;
        catch java.lang.Exception from label173 to label174 with label270;
        catch java.lang.Exception from label175 to label176 with label270;
        catch java.lang.Exception from label177 to label178 with label270;
        catch java.lang.Exception from label179 to label180 with label270;
        catch java.lang.Exception from label181 to label182 with label270;
        catch java.lang.Exception from label183 to label184 with label270;
        catch java.lang.Exception from label185 to label186 with label270;
        catch java.lang.Exception from label187 to label188 with label270;
        catch java.lang.Exception from label189 to label190 with label270;
        catch java.lang.Exception from label191 to label192 with label270;
        catch java.lang.Exception from label193 to label194 with label270;
        catch java.lang.Exception from label195 to label196 with label270;
        catch java.lang.Exception from label197 to label198 with label270;
        catch java.lang.Exception from label199 to label200 with label270;
        catch java.lang.Exception from label201 to label202 with label270;
        catch java.lang.Exception from label203 to label204 with label270;
        catch java.lang.Exception from label205 to label206 with label270;
        catch java.lang.Exception from label207 to label208 with label270;
        catch java.lang.Exception from label209 to label210 with label270;
        catch java.lang.Exception from label211 to label212 with label270;
        catch java.lang.Exception from label213 to label214 with label270;
        catch java.lang.Exception from label215 to label216 with label270;
        catch java.lang.Exception from label217 to label218 with label270;
        catch java.lang.Exception from label219 to label220 with label270;
        catch java.lang.Exception from label221 to label222 with label270;
        catch java.lang.Exception from label223 to label224 with label270;
        catch java.lang.Exception from label225 to label226 with label270;
        catch java.lang.Exception from label227 to label228 with label270;
        catch java.lang.Exception from label229 to label230 with label270;
        catch java.lang.Exception from label231 to label232 with label270;
        catch java.lang.Exception from label233 to label234 with label270;
        catch java.lang.Exception from label235 to label236 with label270;
        catch java.lang.Exception from label237 to label238 with label270;
        catch java.lang.Exception from label239 to label240 with label270;
        catch java.lang.Exception from label241 to label242 with label270;
        catch java.lang.Exception from label243 to label244 with label270;
        catch java.lang.Exception from label245 to label246 with label270;
        catch java.lang.Exception from label247 to label248 with label270;
        catch java.lang.Exception from label249 to label250 with label270;
        catch java.lang.Exception from label251 to label252 with label270;
        catch java.lang.Exception from label253 to label254 with label270;
        catch java.lang.Exception from label255 to label256 with label270;
        catch java.lang.Exception from label257 to label258 with label270;
        catch java.lang.Exception from label259 to label260 with label270;
        catch java.lang.Exception from label261 to label262 with label270;
        catch java.lang.Exception from label263 to label265 with label270;
        catch java.lang.Exception from label266 to label267 with label270;
        catch java.lang.Exception from label268 to label269 with label270;
        catch java.lang.Exception from label272 to label273 with label270;
        catch java.lang.Exception from label274 to label275 with label270;
        catch java.lang.Exception from label276 to label277 with label270;
        catch java.lang.Exception from label278 to label279 with label270;
        catch java.lang.Exception from label280 to label281 with label270;
        catch java.lang.Exception from label282 to label283 with label270;
        catch java.lang.Exception from label284 to label285 with label270;
        catch java.lang.Exception from label286 to label287 with label270;
        catch java.lang.Exception from label288 to label289 with label270;
        catch java.lang.Exception from label290 to label291 with label270;
        catch java.lang.Exception from label292 to label293 with label270;
        catch java.lang.Exception from label294 to label295 with label270;
        catch java.lang.Exception from label296 to label297 with label270;
        catch java.lang.Exception from label298 to label299 with label270;
        catch java.lang.Exception from label300 to label301 with label334;
        catch java.lang.Exception from label302 to label303 with label270;
        catch java.lang.Exception from label304 to label305 with label337;
        catch java.lang.Exception from label306 to label307 with label270;
        catch java.lang.Exception from label308 to label309 with label340;
        catch java.lang.Exception from label310 to label311 with label270;
        catch java.lang.Exception from label312 to label313 with label343;
        catch java.lang.Exception from label314 to label315 with label270;
        catch java.lang.Exception from label316 to label317 with label346;
        catch java.lang.Exception from label318 to label319 with label270;
        catch java.lang.Exception from label320 to label321 with label349;
        catch java.lang.Exception from label322 to label323 with label270;
        catch java.lang.Exception from label323 to label324 with label352;
        catch java.lang.Exception from label325 to label326 with label270;
        catch java.lang.Exception from label326 to label327 with label355;
        catch java.lang.Exception from label328 to label329 with label270;
        catch java.lang.Exception from label329 to label330 with label331;
        catch java.lang.Exception from label332 to label333 with label270;
        catch java.lang.Exception from label335 to label336 with label270;
        catch java.lang.Exception from label338 to label339 with label270;
        catch java.lang.Exception from label341 to label342 with label270;
        catch java.lang.Exception from label344 to label345 with label270;
        catch java.lang.Exception from label347 to label348 with label270;
        catch java.lang.Exception from label350 to label351 with label270;
        catch java.lang.Exception from label353 to label354 with label270;
        catch java.lang.Exception from label356 to label357 with label270;
    }
}
