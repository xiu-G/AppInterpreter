public class org.kxml2.io.KXmlSerializer extends java.lang.Object implements org.xmlpull.v1.XmlSerializer
{
    private int auto;
    private int depth;
    private java.lang.String[] elementStack;
    private java.lang.String encoding;
    private boolean[] indent;
    private int[] nspCounts;
    private java.lang.String[] nspStack;
    private boolean pending;
    private boolean unicode;
    private java.io.Writer writer;

    public void <init>()
    {
        int[] $r2;
        boolean[] $r3;
        java.lang.String[] $r1;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.String)[12];

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack> = $r1;

        $r2 = newarray (int)[4];

        r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts> = $r2;

        $r1 = newarray (java.lang.String)[8];

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack> = $r1;

        $r3 = newarray (boolean)[4];

        r0.<org.kxml2.io.KXmlSerializer: boolean[] indent> = $r3;

        return;
    }

    private final void check(boolean) throws java.io.IOException
    {
        java.lang.IllegalStateException $r9;
        boolean[] $r1, $r2;
        java.lang.String[] $r6;
        org.kxml2.io.KXmlSerializer r0;
        int[] $r3, $r8;
        int $i0, $i1;
        java.io.Writer $r4;
        java.lang.String $r5, $r7;
        boolean $z0, $z1;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $z0 := @parameter0: boolean;

        $z1 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z1 != 0 goto label1;

        return;

     label1:
        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 + 1;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = $i0;

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 0;

        $r1 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = lengthof $r1;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if $i0 > $i1 goto label2;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 + 4;

        $r1 = newarray (boolean)[$i0];

        $r2 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        r0.<org.kxml2.io.KXmlSerializer: boolean[] indent> = $r1;

     label2:
        $r1 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 + -1;

        $z1 = $r2[$i1];

        $r1[$i0] = $z1;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 + -1;

        $i0 = $r3[$i0];

     label3:
        $r3 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $r3[$i1];

        if $i0 >= $i1 goto label6;

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r4.<java.io.Writer: void write(int)>(32);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("xmlns");

        $r5 = "";

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i1 = $i0 * 2;

        $r7 = $r6[$i1];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label5;

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r4.<java.io.Writer: void write(int)>(58);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i1 = $i0 * 2;

        $r5 = $r6[$i1];

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>($r5);

     label4:
        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("=\"");

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i1 = $i0 * 2;

        $i1 = $i1 + 1;

        $r5 = $r6[$i1];

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void writeEscaped(java.lang.String,int)>($r5, 34);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r4.<java.io.Writer: void write(int)>(34);

        $i0 = $i0 + 1;

        goto label3;

     label5:
        $r5 = "";

        $r7 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getNamespace()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label4;

        $r5 = "";

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i1 = $i0 * 2;

        $i1 = $i1 + 1;

        $r7 = $r6[$i1];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label4;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set default namespace for elements in no namespace");

        throw $r9;

     label6:
        $r3 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i0 = lengthof $r3;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 + 1;

        if $i0 > $i1 goto label7;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 + 8;

        $r3 = newarray (int)[$i0];

        $r8 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r3, 0, $i0);

        r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts> = $r3;

     label7:
        $r3 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 + 1;

        $r8 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $r8[$i1];

        $r3[$i0] = $i1;

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        if $z0 == 0 goto label9;

        $r5 = " />";

     label8:
        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>($r5);

        return;

     label9:
        $r5 = ">";

        goto label8;
    }

    private final java.lang.String getPrefix(java.lang.String, boolean, boolean) throws java.io.IOException
    {
        java.lang.String[] $r3;
        org.kxml2.io.KXmlSerializer r0;
        int[] $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r6, $r8;
        java.lang.String $r1, $r4, $r5, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 + 1;

        $i0 = $r2[$i0];

        $i0 = $i0 * 2;

        $i0 = $i0 + -2;

     label01:
        if $i0 < 0 goto label07;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i1 = $i0 + 1;

        $r4 = $r3[$i1];

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label06;

        if $z0 != 0 goto label02;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r4 = $r3[$i0];

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 != 0 goto label06;

     label02:
        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r4 = $r3[$i0];

        $i1 = $i0 + 2;

     label03:
        $r2 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i2 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i2 = $i2 + 1;

        $i2 = $r2[$i2];

        $i2 = $i2 * 2;

        if $i1 >= $i2 goto label04;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r5 = $r3[$i1];

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label05;

        $r4 = null;

     label04:
        if $r4 == null goto label06;

        return $r4;

     label05:
        $i1 = $i1 + 1;

        goto label03;

     label06:
        $i0 = $i0 + -2;

        goto label01;

     label07:
        if $z1 != 0 goto label08;

        return null;

     label08:
        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label10;

        $r4 = "";

     label09:
        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 0;

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>($r4, $r1);

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = $z0;

        return $r4;

     label10:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n");

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int auto>;

        $i0 = $i1 + 1;

        r0.<org.kxml2.io.KXmlSerializer: int auto> = $i0;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = $r5;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 + 1;

        $i0 = $r2[$i0];

        $i0 = $i0 * 2;

        $i0 = $i0 + -2;

     label11:
        if $i0 < 0 goto label12;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r7 = $r3[$i0];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label13;

        $r4 = null;

     label12:
        if $r4 == null goto label10;

        goto label09;

     label13:
        $i0 = $i0 + -2;

        goto label11;
    }

    private final void writeEscaped(java.lang.String, int) throws java.io.IOException
    {
        char $c3;
        org.kxml2.io.KXmlSerializer r0;
        int $i0, i1, $i2;
        java.io.Writer $r2;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r1, $r4;
        boolean $z0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        i1 = 0;

     label01:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i1 >= $i2 goto label14;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        $i2 = (int) $c3;

        lookupswitch($i2)
        {
            case 9: goto label05;
            case 10: goto label05;
            case 13: goto label05;
            case 34: goto label10;
            case 38: goto label07;
            case 39: goto label10;
            case 60: goto label09;
            case 62: goto label08;
            default: goto label02;
        };

     label02:
        $i2 = (int) $c3;

        if $i2 < 32 goto label13;

        $i2 = (int) $c3;

        if $i2 == 64 goto label13;

        $i2 = (int) $c3;

        if $i2 < 127 goto label03;

        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean unicode>;

        if $z0 == 0 goto label13;

     label03:
        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        $i2 = (int) $c3;

        virtualinvoke $r2.<java.io.Writer: void write(int)>($i2);

     label04:
        i1 = i1 + 1;

        goto label01;

     label05:
        if $i0 != -1 goto label06;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        $i2 = (int) $c3;

        virtualinvoke $r2.<java.io.Writer: void write(int)>($i2);

        goto label04;

     label06:
        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");

        $i2 = (int) $c3;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r4);

        goto label04;

     label07:
        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("&amp;");

        goto label04;

     label08:
        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("&gt;");

        goto label04;

     label09:
        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("&lt;");

        goto label04;

     label10:
        $i2 = (int) $c3;

        if $i2 != $i0 goto label02;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        $i2 = (int) $c3;

        if $i2 != 34 goto label12;

        $r4 = "&quot;";

     label11:
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r4);

        goto label04;

     label12:
        $r4 = "&apos;";

        goto label11;

     label13:
        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");

        $i2 = (int) $c3;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r4);

        goto label04;

     label14:
        return;
    }

    public org.xmlpull.v1.XmlSerializer attribute(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.IllegalStateException $r6;
        org.kxml2.io.KXmlSerializer r0;
        byte b0;
        java.io.Writer $r5;
        int $i1;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        b0 = 34;

        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("illegal position for attribute");

        throw $r6;

     label1:
        if $r3 != null goto label2;

        $r3 = "";

     label2:
        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label6;

        $r3 = "";

     label3:
        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(int)>(32);

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label4;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>($r3);

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(int)>(58);

     label4:
        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>($r1);

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(int)>(61);

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(34);

        if $i1 != -1 goto label7;

     label5:
        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(int)>(b0);

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void writeEscaped(java.lang.String,int)>($r2, b0);

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(int)>(b0);

        return r0;

     label6:
        $r3 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>($r3, 0, 1);

        goto label3;

     label7:
        b0 = 39;

        goto label5;
    }

    public void cdsect(java.lang.String) throws java.io.IOException
    {
        java.io.Writer $r2;
        java.lang.String $r1;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("<![CDATA[");

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r1);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("]]>");

        return;
    }

    public void comment(java.lang.String) throws java.io.IOException
    {
        java.io.Writer $r2;
        java.lang.String $r1;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("<!--");

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r1);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("-->");

        return;
    }

    public void docdecl(java.lang.String) throws java.io.IOException
    {
        java.io.Writer $r2;
        java.lang.String $r1;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("<!DOCTYPE");

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r1);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>(">");

        return;
    }

    public void endDocument() throws java.io.IOException
    {
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

     label1:
        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if $i0 <= 0 goto label2;

        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 * 3;

        $i0 = $i0 + -3;

        $r2 = $r1[$i0];

        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 * 3;

        $i0 = $i0 + -1;

        $r3 = $r1[$i0];

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r2, $r3);

        goto label1;

     label2:
        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: void flush()>();

        return;
    }

    public org.xmlpull.v1.XmlSerializer endTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        boolean[] $r8;
        java.lang.String[] $r3;
        java.lang.IllegalArgumentException $r11;
        org.kxml2.io.KXmlSerializer r0;
        int[] $r6, $r7;
        int $i0, $i1;
        java.io.Writer $r9;
        java.lang.StringBuilder $r5, $r10;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z0 != 0 goto label01;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 + -1;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = $i1;

     label01:
        if $r1 != null goto label02;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 * 3;

        $r4 = $r3[$i1];

        if $r4 != null goto label04;

     label02:
        if $r1 == null goto label03;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 * 3;

        $r4 = $r3[$i1];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label04;

     label03:
        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 * 3;

        $i1 = $i1 + 2;

        $r4 = $r3[$i1];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label05;

     label04:
        $r11 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</{");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> does not match start");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r11;

     label05:
        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z0 == 0 goto label07;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(1);

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 + -1;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = $i1;

     label06:
        $r6 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 + 1;

        $r7 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $r7[$i0];

        $r6[$i1] = $i0;

        return r0;

     label07:
        $r8 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 + 1;

        $z0 = $r8[$i1];

        if $z0 == 0 goto label09;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r9.<java.io.Writer: void write(java.lang.String)>("\r\n");

        $i1 = 0;

     label08:
        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if $i1 >= $i0 goto label09;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r9.<java.io.Writer: void write(java.lang.String)>("  ");

        $i1 = $i1 + 1;

        goto label08;

     label09:
        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r9.<java.io.Writer: void write(java.lang.String)>("</");

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 * 3;

        $i1 = $i1 + 1;

        $r1 = $r3[$i1];

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label10;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r9.<java.io.Writer: void write(java.lang.String)>($r1);

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r9.<java.io.Writer: void write(int)>(58);

     label10:
        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r9.<java.io.Writer: void write(java.lang.String)>($r2);

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r9.<java.io.Writer: void write(int)>(62);

        goto label06;
    }

    public void entityRef(java.lang.String) throws java.io.IOException
    {
        java.io.Writer $r2;
        java.lang.String $r1;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(int)>(38);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r1);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(int)>(59);

        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.Writer $r1;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        return;
    }

    public int getDepth()
    {
        int $i0;
        org.kxml2.io.KXmlSerializer r0;
        boolean $z0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z0 == 0 goto label1;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i0 + 1;

        return $i0;

     label1:
        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        return $i0;
    }

    public boolean getFeature(java.lang.String)
    {
        int $i0;
        boolean[] $r3;
        java.lang.String $r1, $r2;
        org.kxml2.io.KXmlSerializer r0;
        boolean $z0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 = "http://xmlpull.org/v1/doc/features.html#indent-output";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $z0 = $r3[$i0];

        return $z0;

     label1:
        return 0;
    }

    public java.lang.String getName()
    {
        int $i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $i0 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i0 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        $i0 = $i0 * 3;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r2 = $r1[$i0];

        return $r2;
    }

    public java.lang.String getNamespace()
    {
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $i0 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i0 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        $i0 = $i0 * 3;

        $i0 = $i0 + -3;

        $r2 = $r1[$i0];

        return $r2;
    }

    public java.lang.String getPrefix(java.lang.String, boolean)
    {
        java.lang.Throwable r2;
        java.io.IOException $r4;
        java.lang.String $r1;
        java.lang.RuntimeException $r3;
        org.kxml2.io.KXmlSerializer r0;
        boolean $z0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

     label1:
        $r1 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>($r1, 0, $z0);

     label2:
        return $r1;

     label3:
        r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r4 = (java.io.IOException) r2;

        $r1 = virtualinvoke $r4.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.RuntimeException $r2;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unsupported property");

        throw $r2;
    }

    public void ignorableWhitespace(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r1;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r1);

        return;
    }

    public void processingInstruction(java.lang.String) throws java.io.IOException
    {
        java.io.Writer $r2;
        java.lang.String $r1;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("<?");

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r1);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("?>");

        return;
    }

    public void setFeature(java.lang.String, boolean)
    {
        boolean[] $r3;
        java.lang.RuntimeException $r4;
        org.kxml2.io.KXmlSerializer r0;
        int $i0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = "http://xmlpull.org/v1/doc/features.html#indent-output";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $r3[$i0] = $z0;

        return;

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unsupported Feature");

        throw $r4;
    }

    public void setOutput(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        java.io.OutputStreamWriter $r4;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $r4 = new java.io.OutputStreamWriter;

        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r1);

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: void setOutput(java.io.Writer)>($r4);

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding> = null;

        goto label2;

     label2:
        return;
    }

    public void setOutput(java.io.Writer)
    {
        int[] $r2;
        java.io.Writer $r1;
        java.lang.String[] $r3;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.io.Writer;

        r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer> = $r1;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $r2[0] = 2;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $r2[1] = 2;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r3[0] = "";

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r3[1] = "";

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r3[2] = "xml";

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r3[3] = "http://www.w3.org/XML/1998/namespace";

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 0;

        r0.<org.kxml2.io.KXmlSerializer: int auto> = 0;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = 0;

        r0.<org.kxml2.io.KXmlSerializer: boolean unicode> = 0;

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String[] r1, $r6;
        org.kxml2.io.KXmlSerializer r0;
        int[] $r5;
        int i0, i1, $i2;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        if $r2 != null goto label1;

        $r2 = "";

     label1:
        if $r3 != null goto label2;

        $r3 = "";

     label2:
        $r4 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>($r3, 1, 0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return;

     label3:
        $r5 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i2 = i0 + 1;

        i0 = $r5[$i2];

        i1 = i0 + 1;

        $r5[$i2] = i1;

        i0 = i0 << 1;

        r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        i1 = lengthof r1;

        $i2 = i0 + 1;

        if i1 >= $i2 goto label4;

        r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        i1 = lengthof r1;

        i1 = i1 + 16;

        r1 = newarray (java.lang.String)[i1];

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r1, 0, i0);

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack> = r1;

     label4:
        r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        i1 = i0 + 1;

        r1[i0] = $r2;

        r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        r1[i1] = $r3;

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        java.lang.RuntimeException $r3;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported Property:");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public void startDocument(java.lang.String, java.lang.Boolean) throws java.io.IOException
    {
        java.io.Writer $r3;
        java.lang.Boolean $r2;
        java.lang.String $r1;
        org.kxml2.io.KXmlSerializer r0;
        boolean $z0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Boolean;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("<?xml version=\'1.0\' ");

        if $r1 == null goto label1;

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding> = $r1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("utf");

        if $z0 == 0 goto label1;

        r0.<org.kxml2.io.KXmlSerializer: boolean unicode> = 1;

     label1:
        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding>;

        if $r1 == null goto label2;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("encoding=\'");

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r1);

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("\' ");

     label2:
        if $r2 == null goto label4;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("standalone=\'");

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label5;

        $r1 = "yes";

     label3:
        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r1);

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("\' ");

     label4:
        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("?>");

        return;

     label5:
        $r1 = "no";

        goto label3;
    }

    public org.xmlpull.v1.XmlSerializer startTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.IllegalStateException $r11;
        java.lang.String[] r3, $r6;
        int[] $r9;
        int i0, $i1, $i2;
        java.lang.String $r1, $r2, r7, $r8, $r10;
        boolean $z0;
        boolean[] $r4;
        org.kxml2.io.KXmlSerializer r0;
        java.io.Writer $r5;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $z0 = $r4[$i1];

        if $z0 == 0 goto label2;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>("\r\n");

        $i1 = 0;

     label1:
        i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if $i1 >= i0 goto label2;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>("  ");

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i1 * 3;

        r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        i0 = lengthof r3;

        $i2 = $i1 + 3;

        if i0 >= $i2 goto label3;

        r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        i0 = lengthof r3;

        i0 = i0 + 12;

        r3 = newarray (java.lang.String)[i0];

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r3, 0, $i1);

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack> = r3;

     label3:
        if $r1 != null goto label6;

        r7 = "";

     label4:
        $r8 = "";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label8;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        i0 = $r9[i0];

     label5:
        $r9 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i2 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i2 = $i2 + 1;

        $i2 = $r9[$i2];

        if i0 >= $i2 goto label8;

        $r8 = "";

        r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i2 = i0 * 2;

        $r10 = r3[$i2];

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label7;

        $r8 = "";

        r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i2 = i0 * 2;

        $i2 = $i2 + 1;

        $r10 = r3[$i2];

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label7;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set default namespace for elements in no namespace");

        throw $r11;

     label6:
        r7 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>($r1, 1, 1);

        goto label4;

     label7:
        i0 = i0 + 1;

        goto label5;

     label8:
        r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        i0 = $i1 + 1;

        r3[$i1] = $r1;

        r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = i0 + 1;

        r3[i0] = r7;

        r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        r3[$i1] = $r2;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(int)>(60);

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z0 != 0 goto label9;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>(r7);

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(int)>(58);

     label9:
        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.Writer writer>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>($r2);

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 1;

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(java.lang.String) throws java.io.IOException
    {
        int $i0;
        boolean[] $r2;
        java.lang.String $r1;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $r2[$i0] = 0;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void writeEscaped(java.lang.String,int)>($r1, -1);

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(char[], int, int) throws java.io.IOException
    {
        int $i0, $i1;
        char[] $r1;
        java.lang.String $r2;
        org.kxml2.io.KXmlSerializer r0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, $i0, $i1);

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r2);

        return r0;
    }
}
