public class de.greenrobot.dao.internal.TableStatements extends java.lang.Object
{
    private final java.lang.String[] allColumns;
    private final android.database.sqlite.SQLiteDatabase db;
    private android.database.sqlite.SQLiteStatement deleteStatement;
    private android.database.sqlite.SQLiteStatement insertOrReplaceStatement;
    private android.database.sqlite.SQLiteStatement insertStatement;
    private final java.lang.String[] pkColumns;
    private volatile java.lang.String selectAll;
    private volatile java.lang.String selectByKey;
    private volatile java.lang.String selectByRowId;
    private volatile java.lang.String selectKeys;
    private final java.lang.String tablename;
    private android.database.sqlite.SQLiteStatement updateStatement;

    public void <init>(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[], java.lang.String[])
    {
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r3, $r4;
        java.lang.String $r2;
        de.greenrobot.dao.internal.TableStatements r0;

        r0 := @this: de.greenrobot.dao.internal.TableStatements;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r4 := @parameter3: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteDatabase db> = $r1;

        r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String tablename> = $r2;

        r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String[] allColumns> = $r3;

        r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String[] pkColumns> = $r4;

        return;
    }

    public android.database.sqlite.SQLiteStatement getDeleteStatement()
    {
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.String[] $r3;
        android.database.sqlite.SQLiteStatement $r1;
        java.lang.String $r2;
        de.greenrobot.dao.internal.TableStatements r0;

        r0 := @this: de.greenrobot.dao.internal.TableStatements;

        $r1 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement deleteStatement>;

        if $r1 != null goto label1;

        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String tablename>;

        $r3 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String[] pkColumns>;

        $r2 = staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.String createSqlDelete(java.lang.String,java.lang.String[])>($r2, $r3);

        $r4 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteDatabase db>;

        $r1 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>($r2);

        r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement deleteStatement> = $r1;

     label1:
        $r1 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement deleteStatement>;

        return $r1;
    }

    public android.database.sqlite.SQLiteStatement getInsertOrReplaceStatement()
    {
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.String[] $r1;
        android.database.sqlite.SQLiteStatement $r2;
        java.lang.String $r3;
        de.greenrobot.dao.internal.TableStatements r0;

        r0 := @this: de.greenrobot.dao.internal.TableStatements;

        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement insertOrReplaceStatement>;

        if $r2 != null goto label1;

        $r3 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String tablename>;

        $r1 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String[] allColumns>;

        $r3 = staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.String createSqlInsert(java.lang.String,java.lang.String,java.lang.String[])>("INSERT OR REPLACE INTO ", $r3, $r1);

        $r4 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteDatabase db>;

        $r2 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>($r3);

        r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement insertOrReplaceStatement> = $r2;

     label1:
        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement insertOrReplaceStatement>;

        return $r2;
    }

    public android.database.sqlite.SQLiteStatement getInsertStatement()
    {
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.String[] $r1;
        android.database.sqlite.SQLiteStatement $r2;
        java.lang.String $r3;
        de.greenrobot.dao.internal.TableStatements r0;

        r0 := @this: de.greenrobot.dao.internal.TableStatements;

        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement insertStatement>;

        if $r2 != null goto label1;

        $r3 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String tablename>;

        $r1 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String[] allColumns>;

        $r3 = staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.String createSqlInsert(java.lang.String,java.lang.String,java.lang.String[])>("INSERT INTO ", $r3, $r1);

        $r4 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteDatabase db>;

        $r2 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>($r3);

        r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement insertStatement> = $r2;

     label1:
        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement insertStatement>;

        return $r2;
    }

    public java.lang.String getSelectAll()
    {
        java.lang.String[] $r1;
        java.lang.String $r2;
        de.greenrobot.dao.internal.TableStatements r0;

        r0 := @this: de.greenrobot.dao.internal.TableStatements;

        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectAll>;

        if $r2 != null goto label1;

        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String tablename>;

        $r1 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String[] allColumns>;

        $r2 = staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.String createSqlSelect(java.lang.String,java.lang.String,java.lang.String[])>($r2, "T", $r1);

        r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectAll> = $r2;

     label1:
        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectAll>;

        return $r2;
    }

    public java.lang.String getSelectByKey()
    {
        java.lang.String[] $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;
        de.greenrobot.dao.internal.TableStatements r0;

        r0 := @this: de.greenrobot.dao.internal.TableStatements;

        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectByKey>;

        if $r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String getSelectAll()>();

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE ");

        $r1 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String[] pkColumns>;

        staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.StringBuilder appendColumnsEqValue(java.lang.StringBuilder,java.lang.String,java.lang.String[])>($r3, "T", $r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectByKey> = $r2;

     label1:
        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectByKey>;

        return $r2;
    }

    public java.lang.String getSelectByRowId()
    {
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        de.greenrobot.dao.internal.TableStatements r0;

        r0 := @this: de.greenrobot.dao.internal.TableStatements;

        $r1 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectByRowId>;

        if $r1 != null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String getSelectAll()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE ROWID=?");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectByRowId> = $r1;

     label1:
        $r1 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectByRowId>;

        return $r1;
    }

    public java.lang.String getSelectKeys()
    {
        java.lang.String[] $r1;
        java.lang.String $r2;
        de.greenrobot.dao.internal.TableStatements r0;

        r0 := @this: de.greenrobot.dao.internal.TableStatements;

        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectKeys>;

        if $r2 != null goto label1;

        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String tablename>;

        $r1 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String[] pkColumns>;

        $r2 = staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.String createSqlSelect(java.lang.String,java.lang.String,java.lang.String[])>($r2, "T", $r1);

        r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectKeys> = $r2;

     label1:
        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String selectKeys>;

        return $r2;
    }

    public android.database.sqlite.SQLiteStatement getUpdateStatement()
    {
        android.database.sqlite.SQLiteDatabase $r5;
        java.lang.String[] $r1, $r4;
        android.database.sqlite.SQLiteStatement $r2;
        java.lang.String $r3;
        de.greenrobot.dao.internal.TableStatements r0;

        r0 := @this: de.greenrobot.dao.internal.TableStatements;

        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement updateStatement>;

        if $r2 != null goto label1;

        $r3 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String tablename>;

        $r4 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String[] allColumns>;

        $r1 = r0.<de.greenrobot.dao.internal.TableStatements: java.lang.String[] pkColumns>;

        $r3 = staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.String createSqlUpdate(java.lang.String,java.lang.String[],java.lang.String[])>($r3, $r4, $r1);

        $r5 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteDatabase db>;

        $r2 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>($r3);

        r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement updateStatement> = $r2;

     label1:
        $r2 = r0.<de.greenrobot.dao.internal.TableStatements: android.database.sqlite.SQLiteStatement updateStatement>;

        return $r2;
    }
}
