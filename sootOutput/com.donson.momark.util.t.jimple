public class com.donson.momark.util.t extends com.donson.momark.util.w
{
    private static java.io.File c;
    private static java.io.File d;
    private static boolean e;

    static void <clinit>()
    {
        <com.donson.momark.util.t: boolean e> = 0;

        return;
    }

    public void <init>()
    {
        com.donson.momark.util.t r0;

        r0 := @this: com.donson.momark.util.t;

        specialinvoke r0.<com.donson.momark.util.w: void <init>()>();

        return;
    }

    public static void a(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <com.donson.momark.util.t: void a(int,java.lang.String)>(2, $r0);

        $z0 = <com.donson.momark.util.t: boolean e>;

        if $z0 == 0 goto label1;

        staticinvoke <com.donson.momark.util.t: void d(java.lang.String)>($r0);

     label1:
        return;
    }

    public static void a(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        java.io.PrintWriter $r3;
        java.io.StringWriter $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        if $r1 != null goto label1;

        return;

     label1:
        virtualinvoke $r1.<java.lang.Throwable: void printStackTrace()>();

        $r2 = new java.io.StringWriter;

        specialinvoke $r2.<java.io.StringWriter: void <init>()>();

        $r3 = new java.io.PrintWriter;

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.Writer)>($r2);

        virtualinvoke $r1.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r3);

        $r4 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.io.StringWriter: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String)>($r0);

        return;
    }

    public static void d(java.lang.String)
    {
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13;
        java.util.Date $r6, $r17;
        java.text.SimpleDateFormat $r5, $r16;
        long $l0;
        byte $b1;
        int $i2;
        java.lang.String $r0, $r8;
        boolean $z0;
        java.io.FileWriter $r1, $r3, $r15;
        java.io.IOException $r20;
        java.io.File $r2, $r14;
        java.lang.StringBuilder $r4, $r7, $r18, $r19;

        $r0 := @parameter0: java.lang.String;

        $r1 = null;

     label01:
        $r14 = new java.io.File;

     label02:
        $r2 = $r14;

     label03:
        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>("/sdcard/log");

     label04:
        <com.donson.momark.util.t: java.io.File c> = $r2;

     label05:
        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

     label06:
        $r14 = new java.io.File;

     label07:
        $r2 = $r14;

     label08:
        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>("/sdcard/log/LogInfo.txt");

     label09:
        <com.donson.momark.util.t: java.io.File d> = $r2;

     label10:
        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label11:
        if $z0 != 0 goto label15;

     label12:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("file", "file not exist");

     label13:
        $r2 = <com.donson.momark.util.t: java.io.File d>;

     label14:
        virtualinvoke $r2.<java.io.File: boolean createNewFile()>();

     label15:
        $r2 = <com.donson.momark.util.t: java.io.File d>;

     label16:
        $l0 = virtualinvoke $r2.<java.io.File: long length()>();

     label17:
        $b1 = $l0 cmp 1048576L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label22;

     label18:
        $r2 = <com.donson.momark.util.t: java.io.File d>;

     label19:
        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label20:
        $r2 = <com.donson.momark.util.t: java.io.File d>;

     label21:
        virtualinvoke $r2.<java.io.File: boolean createNewFile()>();

     label22:
        $r15 = new java.io.FileWriter;

     label23:
        $r3 = $r15;

     label24:
        $r2 = <com.donson.momark.util.t: java.io.File d>;

     label25:
        specialinvoke $r15.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r2, 1);

     label26:
        $r19 = new java.lang.StringBuilder;

     label27:
        $r4 = $r19;

     label28:
        $r16 = new java.text.SimpleDateFormat;

     label29:
        $r5 = $r16;

     label30:
        specialinvoke $r16.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss ");

     label31:
        $r17 = new java.util.Date;

     label32:
        $r6 = $r17;

     label33:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r17.<java.util.Date: void <init>(long)>($l0);

     label34:
        $r18 = new java.lang.StringBuilder;

     label35:
        $r7 = $r18;

     label36:
        $r8 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r6);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

     label37:
        $r8 = <com.donson.momark.util.t: java.lang.String b>;

     label38:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.FileWriter: java.io.Writer append(java.lang.CharSequence)>($r0);

     label39:
        virtualinvoke $r3.<java.io.FileWriter: void close()>();

     label40:
        return;

     label41:
        $r9 := @caughtexception;

     label42:
        $r20 = (java.io.IOException) $r9;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

     label43:
        if $r1 == null goto label55;

     label44:
        virtualinvoke $r1.<java.io.FileWriter: void close()>();

     label45:
        return;

     label46:
        $r10 := @caughtexception;

        $r20 = (java.io.IOException) $r10;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

        return;

     label47:
        $r11 := @caughtexception;

     label48:
        if $r1 == null goto label50;

     label49:
        virtualinvoke $r1.<java.io.FileWriter: void close()>();

     label50:
        throw $r11;

     label51:
        $r12 := @caughtexception;

        $r20 = (java.io.IOException) $r12;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

        goto label50;

     label52:
        $r13 := @caughtexception;

        $r20 = (java.io.IOException) $r13;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

        return;

     label53:
        $r11 := @caughtexception;

        $r1 = $r3;

        goto label48;

     label54:
        $r9 := @caughtexception;

        $r1 = $r3;

        goto label42;

     label55:
        return;

        catch java.io.IOException from label03 to label04 with label41;
        catch java.io.IOException from label05 to label06 with label41;
        catch java.io.IOException from label08 to label09 with label41;
        catch java.io.IOException from label10 to label11 with label41;
        catch java.io.IOException from label12 to label13 with label41;
        catch java.io.IOException from label14 to label15 with label41;
        catch java.io.IOException from label16 to label17 with label41;
        catch java.io.IOException from label19 to label20 with label41;
        catch java.io.IOException from label21 to label22 with label41;
        catch java.io.IOException from label25 to label26 with label41;
        catch java.lang.Throwable from label01 to label02 with label47;
        catch java.lang.Throwable from label03 to label07 with label47;
        catch java.lang.Throwable from label08 to label11 with label47;
        catch java.lang.Throwable from label12 to label17 with label47;
        catch java.lang.Throwable from label18 to label23 with label47;
        catch java.lang.Throwable from label24 to label26 with label47;
        catch java.io.IOException from label30 to label31 with label54;
        catch java.io.IOException from label33 to label34 with label54;
        catch java.io.IOException from label36 to label37 with label54;
        catch java.io.IOException from label38 to label39 with label54;
        catch java.lang.Throwable from label26 to label27 with label53;
        catch java.lang.Throwable from label28 to label29 with label53;
        catch java.lang.Throwable from label30 to label32 with label53;
        catch java.lang.Throwable from label33 to label35 with label53;
        catch java.lang.Throwable from label36 to label39 with label53;
        catch java.io.IOException from label39 to label40 with label52;
        catch java.lang.Throwable from label42 to label43 with label47;
        catch java.io.IOException from label44 to label45 with label46;
        catch java.io.IOException from label49 to label50 with label51;
    }

    public static void d(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.donson.momark.util.t: void a(java.lang.String,java.lang.String)>($r0, $r1);

        $z0 = <com.donson.momark.util.t: boolean e>;

        if $z0 == 0 goto label1;

        staticinvoke <com.donson.momark.util.t: void d(java.lang.String)>($r1);

     label1:
        return;
    }
}
