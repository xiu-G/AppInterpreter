public final class com.wqmobile.sdk.protocol.cmd.WQGlobal extends java.lang.Object
{
    private static java.util.Hashtable a;
    private static java.lang.String b;

    static void <clinit>()
    {
        <com.wqmobile.sdk.protocol.cmd.WQGlobal: java.lang.String b> = "com.wqmobile.sdk.protocol.cmd.";

        return;
    }

    public void <init>()
    {
        com.wqmobile.sdk.protocol.cmd.WQGlobal r0;

        r0 := @this: com.wqmobile.sdk.protocol.cmd.WQGlobal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String a()
    {
        java.lang.String r0;

        r0 = <com.wqmobile.sdk.protocol.cmd.WQGlobal: java.lang.String b>;

        return r0;
    }

    public static int byteArray2Int(byte[])
    {
        byte[] $r0;
        short $s5;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i6;

        $r0 := @parameter0: byte[];

        $i1 = 2;

        $i2 = 0;

        $i3 = lengthof $r0;

        if $i3 != 0 goto label1;

        return 0;

     label1:
        $i3 = lengthof $r0;

        if $i3 <= 2 goto label4;

     label2:
        $i3 = 0;

     label3:
        if $i3 < $i1 goto label5;

        return $i2;

     label4:
        $i1 = lengthof $r0;

        goto label2;

     label5:
        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        $i0 = $i0 - $i3;

        $b4 = $r0[$i0];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i0 = $i3 * 8;

        $i6 = (int) $s5;

        $i0 = $i6 << $i0;

        $i3 = $i3 + 1;

        $i2 = $i0 + $i2;

        goto label3;
    }

    public static long byteArray2LongCRC(byte[])
    {
        byte[] $r0;
        long $l2, $l6;
        short $s5;
        byte $b4;
        int $i0, $i1, $i3;

        $r0 := @parameter0: byte[];

        $i1 = 4;

        $l2 = 0L;

        $i0 = lengthof $r0;

        if $i0 <= 4 goto label3;

     label1:
        $i3 = 0;

     label2:
        if $i3 < $i1 goto label4;

        return $l2;

     label3:
        $i1 = lengthof $r0;

        goto label1;

     label4:
        $b4 = $r0[$i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $l6 = (long) $s5;

        $i0 = $i3 * 8;

        $l6 = $l6 << $i0;

        $l2 = $l2 + $l6;

        $i3 = $i3 + 1;

        goto label2;
    }

    public static boolean checkCRC(byte[], int, int, byte[])
    {
        byte[] $r0, $r1;
        byte $b4;
        int $i0, $i1;
        long $l2, $l3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: byte[];

        $l2 = staticinvoke <com.wqmobile.sdk.protocol.cmd.WQGlobal: long byteArray2LongCRC(byte[])>($r1);

        $l3 = staticinvoke <com.wqmobile.sdk.protocol.cmd.WQGlobal: long getCRC32Value(byte[],int,int)>($r0, 0, $i1);

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean checkCRC(byte[], byte[])
    {
        byte[] $r0, $r1;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r0;

        $z0 = staticinvoke <com.wqmobile.sdk.protocol.cmd.WQGlobal: boolean checkCRC(byte[],int,int,byte[])>($r0, 0, $i0, $r1);

        return $z0;
    }

    public static int converFromByte2UnsignInt(byte)
    {
        int $i2;
        short $s1;
        byte $b0;

        $b0 := @parameter0: byte;

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i2 = (int) $s1;

        return $i2;
    }

    public static java.lang.String convertFromByte2String(byte[])
    {
        byte[] $r0;
        byte $b2;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        char $c3;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label3;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $b2 = $r0[$i0];

        if $b2 == 0 goto label2;

        $b2 = $r0[$i0];

        $c3 = (char) $b2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i0 = $i0 + 1;

        goto label1;
    }

    public static int copyFromBytes2Bytes(byte[], int, byte[], int, int)
    {
        byte[] $r0, $r1;
        byte $b7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i4 = 0;

        if $r0 == null goto label3;

        if $r1 == null goto label3;

        if $i2 <= 0 goto label3;

        if $i0 < 0 goto label3;

        if $i1 >= 0 goto label1;

        return 0;

     label1:
        $i5 = lengthof $r0;

        $i6 = lengthof $r1;

        $i3 = $i0 + $i2;

        if $i5 < $i3 goto label3;

        $i3 = $i1 + $i2;

        if $i6 < $i3 goto label3;

     label2:
        if $i4 >= $i2 goto label4;

        $i6 = $i0 + $i4;

        $i3 = $i1 + $i4;

        $b7 = $r1[$i3];

        $r0[$i6] = $b7;

        $i4 = $i4 + 1;

        goto label2;

     label3:
        return 0;

     label4:
        return $i4;
    }

    public static void copyNumber2Bytes(byte[], java.lang.String, boolean)
    {
        java.lang.Throwable $r6;
        byte[] $r0;
        java.lang.Integer $r4;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2, $r3;
        java.lang.Byte $r5;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $i0 = 0;

        if $z0 == 0 goto label17;

        $i0 = lengthof $r0;

        $i0 = $i0 << 1;

     label01:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label02:
        if $i0 <= $i1 goto label07;

     label03:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label04:
        $i0 = $i0 / 2;

     label05:
        $i1 = 0;

     label06:
        if $i1 < $i0 goto label08;

        return;

     label07:
        $i0 = lengthof $r0;

        goto label05;

     label08:
        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

     label09:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

     label10:
        $r3 = $r2;

     label11:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("0");

     label12:
        if $z0 == 0 goto label15;

     label13:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

     label14:
        $r3 = $r2;

     label15:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r3, 16);

        $b4 = virtualinvoke $r4.<java.lang.Integer: byte byteValue()>();

     label16:
        $r0[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label06;

     label17:
        $i1 = lengthof $r0;

     label18:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label19:
        if $i1 <= $i2 goto label24;

     label20:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label21:
        if $i0 >= $i1 goto label26;

        $i2 = $i0 + 1;

     label22:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>($r2);

        $b4 = virtualinvoke $r5.<java.lang.Byte: byte byteValue()>();

     label23:
        $r0[$i0] = $b4;

        $i0 = $i0 + 1;

        goto label21;

     label24:
        $i1 = lengthof $r0;

        goto label21;

     label25:
        $r6 := @caughtexception;

     label26:
        return;

        catch java.lang.NumberFormatException from label01 to label02 with label25;
        catch java.lang.NumberFormatException from label03 to label04 with label25;
        catch java.lang.NumberFormatException from label09 to label10 with label25;
        catch java.lang.NumberFormatException from label11 to label12 with label25;
        catch java.lang.NumberFormatException from label13 to label14 with label25;
        catch java.lang.NumberFormatException from label15 to label16 with label25;
        catch java.lang.NumberFormatException from label18 to label19 with label25;
        catch java.lang.NumberFormatException from label20 to label21 with label25;
        catch java.lang.NumberFormatException from label22 to label23 with label25;
    }

    public static int copyString2Bytes(byte[], java.lang.String)
    {
        byte[] $r0, $r2;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label1;

        if $r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $i1 = lengthof $r0;

        $i0 = lengthof $r2;

        if $i1 <= $i0 goto label4;

        $i0 = lengthof $r2;

     label3:
        $i0 = staticinvoke <com.wqmobile.sdk.protocol.cmd.WQGlobal: int copyFromBytes2Bytes(byte[],int,byte[],int,int)>($r0, 0, $r2, 0, $i0);

        return $i0;

     label4:
        $i0 = lengthof $r0;

        goto label3;
    }

    public static java.lang.String getCMDNameByCode(byte)
    {
        com.wqmobile.sdk.protocol.cmd.WQGlobal$WQ_NET_CMD_CODE[] $r1;
        com.wqmobile.sdk.protocol.cmd.WQGlobal$WQ_NET_CMD_CODE $r4;
        byte $b0;
        int $i1, $i2, $i3, $i4;
        java.lang.Object $r3;
        java.lang.String $r2, $r5;
        java.util.Hashtable $r0;

        $b0 := @parameter0: byte;

        $i2 = staticinvoke <com.wqmobile.sdk.protocol.cmd.WQGlobal: int converFromByte2UnsignInt(byte)>($b0);

        $r0 = <com.wqmobile.sdk.protocol.cmd.WQGlobal: java.util.Hashtable a>;

        if $r0 != null goto label2;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <com.wqmobile.sdk.protocol.cmd.WQGlobal: java.util.Hashtable a> = $r0;

        $r1 = staticinvoke <com.wqmobile.sdk.protocol.cmd.WQGlobal$WQ_NET_CMD_CODE: com.wqmobile.sdk.protocol.cmd.WQGlobal$WQ_NET_CMD_CODE[] values()>();

        $i1 = lengthof $r1;

        $i3 = 0;

     label1:
        if $i3 < $i1 goto label3;

     label2:
        $r0 = <com.wqmobile.sdk.protocol.cmd.WQGlobal: java.util.Hashtable a>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        $r3 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r3;

        if $r2 != null goto label4;

        return "";

     label3:
        $r4 = $r1[$i3];

        $r0 = <com.wqmobile.sdk.protocol.cmd.WQGlobal: java.util.Hashtable a>;

        $i4 = virtualinvoke $r4.<com.wqmobile.sdk.protocol.cmd.WQGlobal$WQ_NET_CMD_CODE: int getValue()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        $r5 = virtualinvoke $r4.<com.wqmobile.sdk.protocol.cmd.WQGlobal$WQ_NET_CMD_CODE: java.lang.String getCMDClassName()>();

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5);

        $i3 = $i3 + 1;

        goto label1;

     label4:
        return $r2;
    }

    public static long getCRC32Value(byte[])
    {
        int $i0;
        byte[] $r0;
        long $l1;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $l1 = staticinvoke <com.wqmobile.sdk.protocol.cmd.WQGlobal: long getCRC32Value(byte[],int,int)>($r0, 0, $i0);

        return $l1;
    }

    public static long getCRC32Value(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        java.util.zip.CRC32 $r1;
        long $l2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = new java.util.zip.CRC32;

        specialinvoke $r1.<java.util.zip.CRC32: void <init>()>();

        virtualinvoke $r1.<java.util.zip.CRC32: void update(byte[],int,int)>($r0, 0, $i1);

        $l2 = virtualinvoke $r1.<java.util.zip.CRC32: long getValue()>();

        return $l2;
    }

    public static java.lang.String getTest()
    {
        return "test";
    }

    public static byte[] int2ByteArray(int, int)
    {
        byte[] $r0;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = 0;

        goto label1;

     label1:
        $r0 = newarray (byte)[$i1];

     label2:
        if $i2 >= $i1 goto label3;

        $i3 = $i1 + -1;

        $i3 = $i3 - $i2;

        $i4 = $i2 * 8;

        $i4 = $i0 >> $i4;

        $b5 = (byte) $i4;

        $r0[$i3] = $b5;

        $i2 = $i2 + 1;

        goto label2;

     label3:
        return $r0;
    }

    public static boolean isZeroByte(byte[])
    {
        byte[] $r0;
        byte $b2;
        int $i0, $i1;

        $r0 := @parameter0: byte[];

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label2;

        return 1;

     label2:
        $b2 = $r0[$i0];

        $i1 = (int) $b2;

        if $i1 > 0 goto label3;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static byte[] longCRC2ByteArray(long)
    {
        byte[] $r0;
        byte $b4;
        int $i1, $i2;
        long $l0, $l3;

        $l0 := @parameter0: long;

        $r0 = newarray (byte)[4];

        $i1 = 0;

     label1:
        if $i1 < 4 goto label2;

        return $r0;

     label2:
        $i2 = $i1 * 8;

        $l3 = $l0 >> $i2;

        $l3 = $l3 & 255L;

        $i2 = (int) $l3;

        $b4 = (byte) $i2;

        $r0[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label1;
    }

    public static void setBytesZero(byte[])
    {
        int $i0, $i1;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        if $r0 == null goto label3;

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = 0;

     label2:
        $i0 = lengthof $r0;

        if $i1 >= $i0 goto label3;

        $r0[$i1] = 0;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }
}
