public class com.google.analyze.c extends java.lang.Object
{

    public static android.content.res.Resources a(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r14;
        android.content.Context $r0;
        java.lang.Object[] $r5;
        java.lang.Class[] $r7;
        java.lang.reflect.Constructor $r4;
        android.util.DisplayMetrics $r12;
        java.lang.reflect.Constructor[] $r3;
        android.content.res.AssetManager $r10;
        android.content.res.Configuration $r13;
        java.lang.Class $r2;
        java.lang.Object $r6;
        java.lang.String $r1;
        java.lang.reflect.Method $r8;
        android.content.res.Resources $r9, $r11;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.content.res.AssetManager");

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        $r4 = $r3[0];

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        $r7 = newarray (java.lang.Class)[1];

        $r7[0] = class "Ljava/lang/String;";

        $r8 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addAssetPath", $r7);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r1;

        virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r5);

        $r9 = new android.content.res.Resources;

        $r10 = (android.content.res.AssetManager) $r6;

        $r11 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r11 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke $r11.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        specialinvoke $r9.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>($r10, $r12, $r13);

     label2:
        return $r9;

     label3:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.lang.Throwable: void printStackTrace()>();

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static dalvik.system.DexClassLoader a(java.lang.String, android.content.Context)
    {
        android.content.Context $r1;
        java.lang.String $r0, $r4;
        java.lang.ClassLoader $r5;
        dalvik.system.DexClassLoader $r2;
        java.io.File $r3;
        java.lang.Exception $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

        $r3 = virtualinvoke $r1.<android.content.Context: java.io.File getDir(java.lang.String,int)>("dex", 0);

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke $r1.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r2 = new dalvik.system.DexClassLoader;

        specialinvoke $r2.<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>($r0, $r4, null, $r5);

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(500L);

     label2:
        return $r2;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return $r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
