public abstract class cn.qitu.utils.i extends java.lang.Object implements java.util.concurrent.Callable
{

    protected void <init>()
    {
        cn.qitu.utils.i r0;

        r0 := @this: cn.qitu.utils.i;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected abstract java.lang.Object a();

    protected abstract void b();

    public java.lang.Object call()
    {
        java.lang.Throwable $r2, $r3, $r4, $r5, $r6;
        cn.qitu.utils.i r0;
        java.lang.Object $r1;

        r0 := @this: cn.qitu.utils.i;

     label01:
        $r1 = virtualinvoke r0.<cn.qitu.utils.i: java.lang.Object a()>();

     label02:
        virtualinvoke r0.<cn.qitu.utils.i: void b()>();

     label03:
        return $r1;

     label04:
        $r2 := @caughtexception;

     label05:
        virtualinvoke r0.<cn.qitu.utils.i: void b()>();

     label06:
        return null;

     label07:
        $r3 := @caughtexception;

     label08:
        virtualinvoke r0.<cn.qitu.utils.i: void b()>();

     label09:
        throw $r3;

     label10:
        $r4 := @caughtexception;

        return $r1;

     label11:
        $r5 := @caughtexception;

        goto label06;

     label12:
        $r6 := @caughtexception;

        goto label09;

        catch java.io.IOException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.io.IOException from label02 to label03 with label10;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label08 to label09 with label12;
    }
}
