public final class cn.ffcs.lib.pulltorefresh.library.OverscrollHelper extends java.lang.Object
{
    static final float DEFAULT_OVERSCROLL_SCALE;
    static final java.lang.String LOG_TAG;

    public void <init>()
    {
        cn.ffcs.lib.pulltorefresh.library.OverscrollHelper r0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.OverscrollHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean isAndroidOverScrollEnabled(android.view.View)
    {
        int $i0;
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.view.View: int getOverScrollMode()>();

        if $i0 == 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void overScrollBy(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase, int, int, int, int, int, int, float, boolean)
    {
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation $r2;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, i8;
        java.lang.String $r5;
        boolean $z0, $z1;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode $r3;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase r0;
        boolean[] $r7;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State $r6, $r8;
        float $f0, $f1;
        java.lang.StringBuilder $r4;

        r0 := @parameter0: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $i5 := @parameter6: int;

        $f0 := @parameter7: float;

        $z0 := @parameter8: boolean;

        $r1 = <cn.ffcs.lib.pulltorefresh.library.OverscrollHelper$1: int[] $SwitchMap$cn$ffcs$lib$pulltorefresh$library$PullToRefreshBase$Orientation>;

        $r2 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection()>();

        $i7 = virtualinvoke $r2.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Orientation: int ordinal()>();

        $i7 = $r1[$i7];

        lookupswitch($i7)
        {
            case 1: goto label04;
            default: goto label01;
        };

     label01:
        i6 = $i2;

        i8 = $i3;

        $i7 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: int getScrollY()>();

     label02:
        $z1 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: boolean isPullToRefreshOverScrollEnabled()>();

        if $z1 == 0 goto label10;

        $z1 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: boolean isRefreshing()>();

        if $z1 != 0 goto label10;

        $r3 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode getMode()>();

        $z1 = virtualinvoke $r3.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode: boolean permitsPullToRefresh()>();

        if $z1 == 0 goto label09;

        if $z0 != 0 goto label09;

        if i6 == 0 goto label09;

        i6 = i6 + i8;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OverScroll. DeltaX: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ScrollX: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", DeltaY: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ScrollY: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", NewY: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ScrollRange: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", CurrentScroll: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OverscrollHelper", $r5);

        $i0 = 0 - $i5;

        if i6 >= $i0 goto label05;

        $z0 = virtualinvoke $r3.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode: boolean showHeaderLoadingLayout()>();

        if $z0 == 0 goto label10;

        if $i7 != 0 goto label03;

        $r6 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State OVERSCROLLING>;

        $r7 = newarray (boolean)[0];

        virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void setState(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State,boolean[])>($r6, $r7);

     label03:
        $i0 = $i7 + i6;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void setHeaderScroll(int)>($i0);

        return;

     label04:
        i6 = $i0;

        i8 = $i1;

        $i7 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: int getScrollX()>();

        goto label02;

     label05:
        $i0 = $i4 + $i5;

        if i6 <= $i0 goto label07;

        $z0 = virtualinvoke $r3.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode: boolean showFooterLoadingLayout()>();

        if $z0 == 0 goto label10;

        if $i7 != 0 goto label06;

        $r6 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State OVERSCROLLING>;

        $r7 = newarray (boolean)[0];

        virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void setState(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State,boolean[])>($r6, $r7);

     label06:
        $i0 = $i7 + i6;

        $i0 = $i0 - $i4;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void setHeaderScroll(int)>($i0);

        return;

     label07:
        $i0 = staticinvoke <java.lang.Math: int abs(int)>(i6);

        if $i0 <= $i5 goto label08;

        $i0 = i6 - $i4;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        if $i0 > $i5 goto label10;

     label08:
        $r6 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State RESET>;

        $r7 = newarray (boolean)[0];

        virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void setState(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State,boolean[])>($r6, $r7);

        return;

     label09:
        if $z0 == 0 goto label10;

        $r6 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State OVERSCROLLING>;

        $r8 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State getState()>();

        if $r6 != $r8 goto label10;

        $r6 = <cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State RESET>;

        $r7 = newarray (boolean)[0];

        virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void setState(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$State,boolean[])>($r6, $r7);

     label10:
        return;
    }

    public static void overScrollBy(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase, int, int, int, int, int, boolean)
    {
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @parameter0: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $z0 := @parameter6: boolean;

        staticinvoke <cn.ffcs.lib.pulltorefresh.library.OverscrollHelper: void overScrollBy(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,int,float,boolean)>(r0, $i0, $i1, $i2, $i3, $i4, 0, 1.0F, $z0);

        return;
    }

    public static void overScrollBy(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase, int, int, int, int, boolean)
    {
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $z0 := @parameter5: boolean;

        staticinvoke <cn.ffcs.lib.pulltorefresh.library.OverscrollHelper: void overScrollBy(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,boolean)>(r0, $i0, $i1, $i2, $i3, 0, $z0);

        return;
    }

    public static void <clinit>()
    {
        <cn.ffcs.lib.pulltorefresh.library.OverscrollHelper: java.lang.String LOG_TAG> = "OverscrollHelper";

        <cn.ffcs.lib.pulltorefresh.library.OverscrollHelper: float DEFAULT_OVERSCROLL_SCALE> = 1.0F;

        return;
    }
}
