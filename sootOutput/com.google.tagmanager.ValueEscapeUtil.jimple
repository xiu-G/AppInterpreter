class com.google.tagmanager.ValueEscapeUtil extends java.lang.Object
{

    private void <init>()
    {
        com.google.tagmanager.ValueEscapeUtil r0;

        r0 := @this: com.google.tagmanager.ValueEscapeUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static com.google.tagmanager.ObjectAndStatic applyEscaping(com.google.tagmanager.ObjectAndStatic, com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping)
    {
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value $r3;
        int[] $r4;
        int $i0;
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping $r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        com.google.tagmanager.ObjectAndStatic $r1;
        boolean $z0;

        $r1 := @parameter0: com.google.tagmanager.ObjectAndStatic;

        $r0 := @parameter1: com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping;

        $r2 = virtualinvoke $r1.<com.google.tagmanager.ObjectAndStatic: java.lang.Object getObject()>();

        $r3 = (com.google.analytics.midtier.proto.containertag.TypeSystem$Value) $r2;

        $z0 = staticinvoke <com.google.tagmanager.ValueEscapeUtil: boolean isValidStringType(com.google.analytics.midtier.proto.containertag.TypeSystem$Value)>($r3);

        if $z0 != 0 goto label1;

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>("Escaping can only be applied to strings.");

        return $r1;

     label1:
        $r4 = <com.google.tagmanager.ValueEscapeUtil$1: int[] $SwitchMap$com$google$analytics$midtier$proto$containertag$TypeSystem$Value$Escaping>;

        $i0 = virtualinvoke $r0.<com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            default: goto label2;
        };

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unsupported Value Escaping: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>($r6);

        return $r1;

     label3:
        $r1 = staticinvoke <com.google.tagmanager.ValueEscapeUtil: com.google.tagmanager.ObjectAndStatic escapeUri(com.google.tagmanager.ObjectAndStatic)>($r1);

        return $r1;
    }

    static com.google.tagmanager.ObjectAndStatic applyEscapings(com.google.tagmanager.ObjectAndStatic, java.util.List)
    {
        java.util.List $r0;
        java.util.Iterator $r2;
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping $r4;
        java.lang.Object $r3;
        com.google.tagmanager.ObjectAndStatic $r1;
        boolean $z0;

        $r1 := @parameter0: com.google.tagmanager.ObjectAndStatic;

        $r0 := @parameter1: java.util.List;

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping) $r3;

        $r1 = staticinvoke <com.google.tagmanager.ValueEscapeUtil: com.google.tagmanager.ObjectAndStatic applyEscaping(com.google.tagmanager.ObjectAndStatic,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping)>($r1, $r4);

        goto label1;

     label2:
        return $r1;
    }

    private static com.google.tagmanager.ObjectAndStatic escapeUri(com.google.tagmanager.ObjectAndStatic)
    {
        java.lang.Throwable $r5;
        java.lang.Object $r1;
        java.lang.String $r3;
        com.google.tagmanager.ObjectAndStatic $r0, $r4;
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value $r2;
        boolean $z0;

        $r0 := @parameter0: com.google.tagmanager.ObjectAndStatic;

     label1:
        $r1 = virtualinvoke $r0.<com.google.tagmanager.ObjectAndStatic: java.lang.Object getObject()>();

     label2:
        $r2 = (com.google.analytics.midtier.proto.containertag.TypeSystem$Value) $r1;

     label3:
        $r3 = virtualinvoke $r2.<com.google.analytics.midtier.proto.containertag.TypeSystem$Value: java.lang.String getString()>();

        $r3 = staticinvoke <com.google.tagmanager.ValueEscapeUtil: java.lang.String urlEncode(java.lang.String)>($r3);

     label4:
        $r4 = new com.google.tagmanager.ObjectAndStatic;

     label5:
        $r2 = staticinvoke <com.google.tagmanager.Types: com.google.analytics.midtier.proto.containertag.TypeSystem$Value objectToValue(java.lang.Object)>($r3);

        $z0 = virtualinvoke $r0.<com.google.tagmanager.ObjectAndStatic: boolean isStatic()>();

        specialinvoke $r4.<com.google.tagmanager.ObjectAndStatic: void <init>(java.lang.Object,boolean)>($r2, $z0);

     label6:
        return $r4;

     label7:
        $r5 := @caughtexception;

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String,java.lang.Throwable)>("Escape URI: unsupported encoding", $r5);

        return $r0;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label7;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label7;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label7;
    }

    private static boolean isValidStringType(com.google.analytics.midtier.proto.containertag.TypeSystem$Value)
    {
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type $r1, $r2;
        com.google.analytics.midtier.proto.containertag.TypeSystem$Value $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.analytics.midtier.proto.containertag.TypeSystem$Value;

        $z0 = virtualinvoke $r0.<com.google.analytics.midtier.proto.containertag.TypeSystem$Value: boolean hasType()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<com.google.analytics.midtier.proto.containertag.TypeSystem$Value: com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type getType()>();

        $r1 = <com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type: com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type STRING>;

        $z0 = virtualinvoke $r2.<com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<com.google.analytics.midtier.proto.containertag.TypeSystem$Value: boolean hasString()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    static java.lang.String urlEncode(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\+", "%20");

        return $r0;
    }
}
