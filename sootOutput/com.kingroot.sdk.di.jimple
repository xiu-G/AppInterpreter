public class com.kingroot.sdk.di extends java.lang.Object
{

    public static java.lang.String B(android.content.Context)
    {
        android.content.Context $r0;
        com.kingroot.sdk.y $r2;
        android.content.res.AssetManager $r1;
        java.lang.String $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r2 = staticinvoke <com.kingroot.sdk.y: com.kingroot.sdk.y a(android.content.res.AssetManager,java.lang.String)>($r1, "krsdk.cert");

     label2:
        if $r2 == null goto label4;

        $r3 = virtualinvoke $r2.<com.kingroot.sdk.y: java.lang.String b()>();

        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        $r2 = null;

        goto label2;

     label4:
        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void a(android.content.Context, android.content.Context)
    {
        android.content.Context $r0, $r1;
        com.kingroot.sdk.y $r3;
        android.content.res.AssetManager $r2;
        java.lang.RuntimeException $r4;
        java.lang.Exception $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.Context;

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r3 = staticinvoke <com.kingroot.sdk.y: com.kingroot.sdk.y a(android.content.res.AssetManager,java.lang.String)>($r2, "krsdk.cert");

     label2:
        if $r3 != null goto label4;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("generate license failed");

        throw $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        $r3 = null;

        goto label2;

     label4:
        $z0 = virtualinvoke $r3.<com.kingroot.sdk.y: boolean a(android.content.Context)>($r0);

        if $z0 != 0 goto label5;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("invalid license");

        throw $r4;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
