public class proguard.classfile.util.ClassUtil extends java.lang.Object
{
    private static final java.lang.String EMPTY_STRING;

    public void <init>()
    {
        proguard.classfile.util.ClassUtil r0;

        r0 := @this: proguard.classfile.util.ClassUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void checkMagicNumber(int) throws java.lang.UnsupportedOperationException
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.StringBuffer $r1;
        int $i0;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        if $i0 == -889275714 goto label1;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid magic number [");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] in class");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label1:
        return;
    }

    public static void checkVersionNumbers(int) throws java.lang.UnsupportedOperationException
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        if $i0 < 2949123 goto label1;

        if $i0 <= 3276800 goto label2;

     label1:
        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported version number [");

        $i1 = staticinvoke <proguard.classfile.util.ClassUtil: int internalMajorClassVersion(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalMinorClassVersion(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] for class format");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label2:
        return;
    }

    public static int externalArrayTypeDimensionCount(java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = "[]";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 - $i0;

        $i2 = 0;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>($i1, "[]", 0, $i0);

        if $z0 == 0 goto label2;

        $i2 = $i2 + 1;

        $i1 = $i1 - $i0;

        goto label1;

     label2:
        return $i2;
    }

    public static java.lang.String externalClassAccessFlags(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassAccessFlags(int,java.lang.String)>($i0, "");

        return $r0;
    }

    public static java.lang.String externalClassAccessFlags(int, java.lang.String)
    {
        java.lang.StringBuffer $r1, $r2;
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        if $i0 != 0 goto label01;

        return "";

     label01:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(50);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label02;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label02:
        $i1 = $i0 & 2;

        if $i1 == 0 goto label03;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("private");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label03:
        $i1 = $i0 & 4;

        if $i1 == 0 goto label04;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("protected");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label04:
        $i1 = $i0 & 8;

        if $i1 == 0 goto label05;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label05:
        $i1 = $i0 & 16;

        if $i1 == 0 goto label06;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("final");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label06:
        $i1 = $i0 & 8192;

        if $i1 == 0 goto label07;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

     label07:
        $i1 = $i0 & 512;

        if $i1 == 0 goto label09;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("interface");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label08:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label09:
        $i1 = $i0 & 16384;

        if $i1 == 0 goto label10;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("enum");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label08;

     label10:
        $i0 = $i0 & 1024;

        if $i0 == 0 goto label08;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("abstract");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label08;
    }

    public static java.lang.String externalClassName(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        return $r0;
    }

    public static java.lang.String externalClassVersion(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 2949123: goto label2;
            case 3014656: goto label3;
            case 3080192: goto label4;
            case 3145728: goto label5;
            case 3211264: goto label6;
            case 3276800: goto label7;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "1.0";

     label3:
        return "1.2";

     label4:
        return "1.3";

     label5:
        return "1.4";

     label6:
        return "1.5";

     label7:
        return "1.6";
    }

    public static java.lang.String externalFieldAccessFlags(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFieldAccessFlags(int,java.lang.String)>($i0, "");

        return $r0;
    }

    public static java.lang.String externalFieldAccessFlags(int, java.lang.String)
    {
        java.lang.StringBuffer $r1, $r2;
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(50);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label2;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label2:
        $i1 = $i0 & 2;

        if $i1 == 0 goto label3;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("private");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label3:
        $i1 = $i0 & 4;

        if $i1 == 0 goto label4;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("protected");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label4:
        $i1 = $i0 & 8;

        if $i1 == 0 goto label5;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label5:
        $i1 = $i0 & 16;

        if $i1 == 0 goto label6;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("final");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label6:
        $i1 = $i0 & 64;

        if $i1 == 0 goto label7;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("volatile");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label7:
        $i0 = $i0 & 128;

        if $i0 == 0 goto label8;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("transient");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label8:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String externalFullClassDescription(int, java.lang.String)
    {
        java.lang.StringBuffer $r1;
        int $i0;
        java.lang.String $r0, $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassAccessFlags(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String externalFullFieldDescription(int, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r2;
        int $i0;
        java.lang.String $r0, $r1, $r3;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFieldAccessFlags(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalType(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String externalFullMethodDescription(java.lang.String, int, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r3;
        int $i0;
        java.lang.String $r0, $r1, $r2, $r4;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalMethodAccessFlags(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalMethodReturnTypeAndName(java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalMethodArguments(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r0 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String externalMethodAccessFlags(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalMethodAccessFlags(int,java.lang.String)>($i0, "");

        return $r0;
    }

    public static java.lang.String externalMethodAccessFlags(int, java.lang.String)
    {
        java.lang.StringBuffer $r1, $r2;
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        if $i0 != 0 goto label01;

        return "";

     label01:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(50);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label02;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("public");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label02:
        $i1 = $i0 & 2;

        if $i1 == 0 goto label03;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("private");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label03:
        $i1 = $i0 & 4;

        if $i1 == 0 goto label04;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("protected");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label04:
        $i1 = $i0 & 8;

        if $i1 == 0 goto label05;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label05:
        $i1 = $i0 & 16;

        if $i1 == 0 goto label06;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("final");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label06:
        $i1 = $i0 & 32;

        if $i1 == 0 goto label07;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("synchronized");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label07:
        $i1 = $i0 & 256;

        if $i1 == 0 goto label08;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("native");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label08:
        $i1 = $i0 & 1024;

        if $i1 == 0 goto label09;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("abstract");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label09:
        $i0 = $i0 & 2048;

        if $i0 == 0 goto label10;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("strictfp");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label10:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String externalMethodArguments(java.lang.String)
    {
        proguard.classfile.util.InternalTypeEnumeration $r1;
        java.lang.StringBuffer $r2;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r1 = new proguard.classfile.util.InternalTypeEnumeration;

        specialinvoke $r1.<proguard.classfile.util.InternalTypeEnumeration: void <init>(java.lang.String)>($r0);

     label1:
        $z0 = virtualinvoke $r1.<proguard.classfile.util.InternalTypeEnumeration: boolean hasMoreTypes()>();

        if $z0 == 0 goto label2;

        $r0 = virtualinvoke $r1.<proguard.classfile.util.InternalTypeEnumeration: java.lang.String nextType()>();

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalType(java.lang.String)>($r0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<proguard.classfile.util.InternalTypeEnumeration: boolean hasMoreTypes()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        goto label1;

     label2:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String externalMethodName(java.lang.String)
    {
        proguard.classfile.util.ExternalTypeEnumeration $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new proguard.classfile.util.ExternalTypeEnumeration;

        specialinvoke $r1.<proguard.classfile.util.ExternalTypeEnumeration: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<proguard.classfile.util.ExternalTypeEnumeration: java.lang.String methodName()>();

        return $r0;
    }

    public static java.lang.String externalMethodReturnType(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalMethodReturnType(java.lang.String)>($r0);

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalType(java.lang.String)>($r0);

        return $r0;
    }

    private static java.lang.String externalMethodReturnTypeAndName(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r3;
        java.lang.String $r0, $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r0);

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalShortClassName(java.lang.String)>($r0);

        return $r0;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalMethodReturnType(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String externalPackageName(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalPackagePrefix(java.lang.String)>($r0);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $i0 = $i0 - 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r0;

     label1:
        return "";
    }

    public static java.lang.String externalPackagePrefix(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - 2;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int,int)>(46, $i0);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r0;
    }

    public static java.lang.String externalShortClassName(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(46);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r0;
    }

    public static java.lang.String externalType(java.lang.String)
    {
        char $c1;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuffer $r2, $r3;
        int $i0, $i2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalArrayTypeDimensionCount(java.lang.String)>($r0);

        if $i0 <= 0 goto label01;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label01:
        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c1;

        if $i2 != 86 goto label03;

        $r1 = "void";

     label02:
        if $r1 != null goto label14;

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown type [");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label03:
        $i2 = (int) $c1;

        if $i2 != 90 goto label04;

        $r1 = "boolean";

        goto label02;

     label04:
        $i2 = (int) $c1;

        if $i2 != 66 goto label05;

        $r1 = "byte";

        goto label02;

     label05:
        $i2 = (int) $c1;

        if $i2 != 67 goto label06;

        $r1 = "char";

        goto label02;

     label06:
        $i2 = (int) $c1;

        if $i2 != 83 goto label07;

        $r1 = "short";

        goto label02;

     label07:
        $i2 = (int) $c1;

        if $i2 != 73 goto label08;

        $r1 = "int";

        goto label02;

     label08:
        $i2 = (int) $c1;

        if $i2 != 70 goto label09;

        $r1 = "float";

        goto label02;

     label09:
        $i2 = (int) $c1;

        if $i2 != 74 goto label10;

        $r1 = "long";

        goto label02;

     label10:
        $i2 = (int) $c1;

        if $i2 != 68 goto label11;

        $r1 = "double";

        goto label02;

     label11:
        $i2 = (int) $c1;

        if $i2 != 37 goto label12;

        $r1 = "%";

        goto label02;

     label12:
        $i2 = (int) $c1;

        if $i2 != 76 goto label13;

        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(59);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r1);

        goto label02;

     label13:
        $r1 = null;

        goto label02;

     label14:
        $i2 = 0;

     label15:
        if $i2 >= $i0 goto label16;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $i2 = $i2 + 1;

        goto label15;

     label16:
        return $r1;
    }

    public static int internalArrayTypeDimensionCount(java.lang.String)
    {
        int $i1, $i2;
        char $c0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

     label1:
        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i2 = (int) $c0;

        if $i2 != 91 goto label2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i1;
    }

    public static java.lang.String internalArrayTypeFromClassName(java.lang.String, int)
    {
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuffer;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 + $i0;

        $i1 = $i1 + 2;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i1);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String internalClassName(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        return $r0;
    }

    public static java.lang.String internalClassNameFromClassType(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalClassType(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(76);

        $i0 = $i0 + 1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 - 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label1:
        return $r0;
    }

    public static java.lang.String internalClassNameFromType(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalClassType(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalArrayType(java.lang.String)>($r0);

        if $z0 == 0 goto label3;

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalTypeFromArrayType(java.lang.String)>($r0);

     label2:
        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassNameFromClassType(java.lang.String)>($r0);

        return $r0;

     label3:
        goto label2;
    }

    public static int internalClassVersion(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 << 16;

        $i0 = $i0 | $i1;

        return $i0;
    }

    public static int internalClassVersion(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("1.0");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("1.1");

        if $z0 == 0 goto label2;

     label1:
        return 2949123;

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("1.2");

        if $z0 == 0 goto label3;

        return 3014656;

     label3:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("1.3");

        if $z0 == 0 goto label4;

        return 3080192;

     label4:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("1.4");

        if $z0 == 0 goto label5;

        return 3145728;

     label5:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("5");

        if $z0 != 0 goto label6;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("1.5");

        if $z0 == 0 goto label7;

     label6:
        return 3211264;

     label7:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("6");

        if $z0 != 0 goto label8;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("1.6");

        if $z0 == 0 goto label9;

     label8:
        return 3276800;

     label9:
        return 0;
    }

    public static int internalMajorClassVersion(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 >>> 16;

        return $i0;
    }

    public static java.lang.String internalMethodDescriptor(java.lang.String, java.lang.String)
    {
        proguard.classfile.util.ExternalTypeEnumeration $r3;
        java.lang.StringBuffer $r2;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r3 = new proguard.classfile.util.ExternalTypeEnumeration;

        specialinvoke $r3.<proguard.classfile.util.ExternalTypeEnumeration: void <init>(java.lang.String)>($r1);

     label1:
        $z0 = virtualinvoke $r3.<proguard.classfile.util.ExternalTypeEnumeration: boolean hasMoreTypes()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r3.<proguard.classfile.util.ExternalTypeEnumeration: java.lang.String nextType()>();

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        goto label1;

     label2:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String internalMethodDescriptor(java.lang.String, java.util.List)
    {
        java.util.List $r1;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r0, $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.List;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.String) $r3;

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static int internalMethodParameterCount(java.lang.String)
    {
        proguard.classfile.util.InternalTypeEnumeration $r1;
        int $i0;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new proguard.classfile.util.InternalTypeEnumeration;

        specialinvoke $r1.<proguard.classfile.util.InternalTypeEnumeration: void <init>(java.lang.String)>($r0);

        $i0 = 0;

     label1:
        $z0 = virtualinvoke $r1.<proguard.classfile.util.InternalTypeEnumeration: boolean hasMoreTypes()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<proguard.classfile.util.InternalTypeEnumeration: java.lang.String nextType()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $i0;
    }

    public static int internalMethodParameterSize(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalMethodParameterSize(java.lang.String,boolean)>($r0, 1);

        return $i0;
    }

    public static int internalMethodParameterSize(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i0 = $i0 & 8;

        if $i0 == 0 goto label2;

        $z0 = 1;

     label1:
        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalMethodParameterSize(java.lang.String,boolean)>($r0, $z0);

        return $i0;

     label2:
        $z0 = 0;

        goto label1;
    }

    public static int internalMethodParameterSize(java.lang.String, boolean)
    {
        proguard.classfile.util.InternalTypeEnumeration $r1;
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = new proguard.classfile.util.InternalTypeEnumeration;

        specialinvoke $r1.<proguard.classfile.util.InternalTypeEnumeration: void <init>(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

        $i0 = 0;

     label1:
        $z0 = virtualinvoke $r1.<proguard.classfile.util.InternalTypeEnumeration: boolean hasMoreTypes()>();

        if $z0 == 0 goto label3;

        $r0 = virtualinvoke $r1.<proguard.classfile.util.InternalTypeEnumeration: java.lang.String nextType()>();

        $i1 = staticinvoke <proguard.classfile.util.ClassUtil: int internalTypeSize(java.lang.String)>($r0);

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        $i0 = 1;

        goto label1;

     label3:
        return $i0;
    }

    public static java.lang.String internalMethodReturnType(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(41);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r0;
    }

    public static int internalMinorClassVersion(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = 65535 & $i0;

        return $i0;
    }

    public static java.lang.String internalPackageName(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalPackagePrefix(java.lang.String)>($r0);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $i0 = $i0 - 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r0;

     label1:
        return "";
    }

    public static java.lang.String internalPackagePrefix(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - 2;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int,int)>(47, $i0);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r0;
    }

    public static java.lang.String internalType(java.lang.String)
    {
        char $c3;
        java.lang.StringBuffer $r2;
        int $i0, $i1, $i2;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int externalArrayTypeDimensionCount(java.lang.String)>($r0);

        if $i0 <= 0 goto label17;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = "[]";

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = $i2 * $i0;

        $i1 = $i1 - $i2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label01:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("void");

        if $z0 == 0 goto label05;

        $c3 = 86;

     label02:
        if $c3 == 0 goto label15;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c3);

     label03:
        $i1 = 0;

     label04:
        if $i1 >= $i0 goto label16;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $i1 = $i1 + 1;

        goto label04;

     label05:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z0 == 0 goto label06;

        $c3 = 90;

        goto label02;

     label06:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z0 == 0 goto label07;

        $c3 = 66;

        goto label02;

     label07:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z0 == 0 goto label08;

        $c3 = 67;

        goto label02;

     label08:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 == 0 goto label09;

        $c3 = 83;

        goto label02;

     label09:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z0 == 0 goto label10;

        $c3 = 73;

        goto label02;

     label10:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 == 0 goto label11;

        $c3 = 70;

        goto label02;

     label11:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z0 == 0 goto label12;

        $c3 = 74;

        goto label02;

     label12:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z0 == 0 goto label13;

        $c3 = 68;

        goto label02;

     label13:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("%");

        if $z0 == 0 goto label14;

        $c3 = 37;

        goto label02;

     label14:
        $c3 = 0;

        goto label02;

     label15:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label03;

     label16:
        return $r0;

     label17:
        goto label01;
    }

    public static java.lang.String internalTypeFromArrayType(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(91);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r0;
    }

    public static java.lang.String internalTypeFromClassName(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalArrayTypeFromClassName(java.lang.String,int)>($r0, 0);

        return $r0;
    }

    public static int internalTypeSize(java.lang.String)
    {
        int $i0;
        char $c1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i0 = (int) $c1;

        if $i0 == 74 goto label1;

        $i0 = (int) $c1;

        if $i0 != 68 goto label2;

     label1:
        return 2;

     label2:
        $i0 = (int) $c1;

        if $i0 != 86 goto label3;

        return 0;

     label3:
        return 1;
    }

    public static boolean isExternalMethodNameAndArguments(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(40);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isInternalArrayInterfaceName(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = "java/lang/Object";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = "java/lang/Cloneable";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = "java/io/Serializable";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isInternalArrayType(java.lang.String)
    {
        int $i0;
        char $c1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i0 = (int) $c1;

        if $i0 != 91 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isInternalCategory2Type(java.lang.String)
    {
        int $i0;
        char $c1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i0 = (int) $c1;

        if $i0 == 74 goto label1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i0 = (int) $c1;

        if $i0 != 68 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isInternalClassType(java.lang.String)
    {
        int $i0;
        char $c1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        $i0 = $i0 - 1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        if $i0 != 59 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isInternalMethodDescriptor(java.lang.String)
    {
        int $i1;
        char $c0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        if $i1 != 40 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isInternalPrimitiveType(char)
    {
        int $i1;
        char $c0;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 == 90 goto label1;

        $i1 = (int) $c0;

        if $i1 == 66 goto label1;

        $i1 = (int) $c0;

        if $i1 == 67 goto label1;

        $i1 = (int) $c0;

        if $i1 == 83 goto label1;

        $i1 = (int) $c0;

        if $i1 == 73 goto label1;

        $i1 = (int) $c0;

        if $i1 == 70 goto label1;

        $i1 = (int) $c0;

        if $i1 == 74 goto label1;

        $i1 = (int) $c0;

        if $i1 != 68 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <proguard.classfile.util.ClassUtil: java.lang.String EMPTY_STRING> = "";

        return;
    }
}
