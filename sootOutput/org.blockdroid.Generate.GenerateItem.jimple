public class org.blockdroid.Generate.GenerateItem extends java.lang.Object
{
    private static final java.lang.String TAG;
    java.lang.String[] IMGs;
    private java.util.ArrayList ItemPictureBase64;
    private org.blockdroid.Others.Base64EncodeDecode base64;
    private android.content.Context cont;
    java.io.BufferedReader in;
    java.io.BufferedReader in2;
    private java.lang.String itemDesc;
    private java.lang.String itemInfo;
    private java.lang.String itemName;
    private java.lang.String itemPhoneAddress;
    private boolean loadSuccess;
    private java.lang.StringBuilder sbItem;
    private java.lang.StringBuilder sbItem2;
    java.lang.Long skipThisManyChars;

    public void <init>(java.lang.String, android.content.Context)
    {
        java.lang.Throwable $r13;
        android.content.Context $r2;
        java.net.URL r3;
        long $l0;
        java.lang.Long $r5;
        java.net.URLConnection $r7;
        org.blockdroid.Others.Base64EncodeDecode $r6;
        java.lang.Boolean $r12;
        java.lang.String $r1, $r11;
        boolean $z0;
        java.io.InputStreamReader $r9;
        java.lang.StringBuilder $r4;
        org.blockdroid.Generate.GenerateItem r0;
        java.io.BufferedReader $r8;
        java.io.InputStream $r10;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem> = $r4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem2> = $r4;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        r0.<org.blockdroid.Generate.GenerateItem: java.lang.Long skipThisManyChars> = $r5;

        $r6 = new org.blockdroid.Others.Base64EncodeDecode;

        specialinvoke $r6.<org.blockdroid.Others.Base64EncodeDecode: void <init>()>();

        r0.<org.blockdroid.Generate.GenerateItem: org.blockdroid.Others.Base64EncodeDecode base64> = $r6;

        r0.<org.blockdroid.Generate.GenerateItem: android.content.Context cont> = $r2;

     label01:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GenerateItem.java", $r1);

     label02:
        r3 = new java.net.URL;

     label03:
        specialinvoke r3.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke r3.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r7.<java.net.URLConnection: void setConnectTimeout(int)>(10000);

     label04:
        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

     label05:
        $r10 = virtualinvoke $r7.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r10, "ISO-8859-1");

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

     label06:
        r0.<org.blockdroid.Generate.GenerateItem: java.io.BufferedReader in> = $r8;

        $r8 = r0.<org.blockdroid.Generate.GenerateItem: java.io.BufferedReader in>;

        $r5 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.Long skipThisManyChars>;

     label07:
        $l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        virtualinvoke $r8.<java.io.BufferedReader: long skip(long)>($l0);

     label08:
        $r8 = r0.<org.blockdroid.Generate.GenerateItem: java.io.BufferedReader in>;

     label09:
        $r11 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

     label10:
        if $r11 != null goto label22;

     label11:
        $r12 = staticinvoke <org.blockdroid.View.Prefs: java.lang.Boolean getExtraInfo(android.content.Context)>($r2);

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

     label12:
        if $z0 == 0 goto label21;

        r3 = new java.net.URL;

     label13:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("mobil", "www");

        specialinvoke r3.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke r3.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r7.<java.net.URLConnection: void setConnectTimeout(int)>(10000);

     label14:
        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

     label15:
        $r10 = virtualinvoke $r7.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r10, "ISO-8859-1");

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

     label16:
        r0.<org.blockdroid.Generate.GenerateItem: java.io.BufferedReader in2> = $r8;

        $r8 = r0.<org.blockdroid.Generate.GenerateItem: java.io.BufferedReader in2>;

        $r5 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.Long skipThisManyChars>;

     label17:
        $l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        virtualinvoke $r8.<java.io.BufferedReader: long skip(long)>($l0);

     label18:
        $r8 = r0.<org.blockdroid.Generate.GenerateItem: java.io.BufferedReader in2>;

     label19:
        $r1 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

     label20:
        if $r1 != null goto label26;

     label21:
        r0.<org.blockdroid.Generate.GenerateItem: boolean loadSuccess> = 1;

        return;

     label22:
        $r4 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem>;

     label23:
        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<br/>", "<br>");

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<br />", "<br>");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label24:
        goto label08;

     label25:
        $r13 := @caughtexception;

        r0.<org.blockdroid.Generate.GenerateItem: boolean loadSuccess> = 0;

        return;

     label26:
        $r4 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem2>;

     label27:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<br/>", "<br>");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<br />", "<br>");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label28:
        goto label18;

        catch java.io.IOException from label01 to label02 with label25;
        catch java.io.IOException from label03 to label04 with label25;
        catch java.io.IOException from label05 to label06 with label25;
        catch java.io.IOException from label07 to label08 with label25;
        catch java.io.IOException from label09 to label10 with label25;
        catch java.io.IOException from label11 to label12 with label25;
        catch java.io.IOException from label13 to label14 with label25;
        catch java.io.IOException from label15 to label16 with label25;
        catch java.io.IOException from label17 to label18 with label25;
        catch java.io.IOException from label19 to label20 with label25;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.IOException from label27 to label28 with label25;
    }

    private void findItemDesc()
    {
        java.lang.StringBuilder $r1;
        java.lang.String[] $r3;
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String $r2;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        $r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem>;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("item_body\">");

        $r2 = $r3[1];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("</p>");

        $r2 = $r3[0];

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<br>", "\n");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<strong>", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("</strong>", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\t", "");

        $r2 = staticinvoke <org.blockdroid.Generate.GenerateResult: java.lang.String replaceChars(java.lang.String)>($r2);

     label2:
        r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemDesc> = $r2;

        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    private void findItemIMGs()
    {
        org.blockdroid.Others.Base64EncodeDecode $r1;
        org.blockdroid.Generate.GenerateItem r0;
        boolean $z0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void loadItemIMGs()>();

        $r1 = r0.<org.blockdroid.Generate.GenerateItem: org.blockdroid.Others.Base64EncodeDecode base64>;

        $z0 = virtualinvoke $r1.<org.blockdroid.Others.Base64EncodeDecode: boolean getLoadSuccess()>();

        r0.<org.blockdroid.Generate.GenerateItem: boolean loadSuccess> = $z0;

        return;
    }

    private void findItemInfo()
    {
        android.content.Context $r5;
        java.lang.String[] $r4, $r10;
        java.lang.ArrayIndexOutOfBoundsException $r11;
        java.util.regex.Matcher $r9;
        int i0, $i1;
        java.lang.Boolean $r6;
        java.lang.StringBuilder r1, $r7;
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String $r2, $r3;
        java.util.regex.Pattern $r8;
        boolean $z0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem>;

     label01:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        r1 = new java.lang.StringBuilder;

     label03:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("\"mobile_item_param\"");

        specialinvoke r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"mobile_item_paramgroup_param\"><label");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"mobile_item_paramgroup_title\"");

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>($r3);

     label04:
        r1 = new java.lang.StringBuilder;

     label05:
        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

     label06:
        i0 = 1;

     label07:
        $i1 = lengthof $r4;

        if i0 < $i1 goto label14;

     label08:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <org.blockdroid.Generate.GenerateResult: java.lang.String replaceChars(java.lang.String)>($r2);

     label09:
        r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemInfo> = $r2;

        $r5 = r0.<org.blockdroid.Generate.GenerateItem: android.content.Context cont>;

     label10:
        $r6 = staticinvoke <org.blockdroid.View.Prefs: java.lang.Boolean getExtraInfo(android.content.Context)>($r5);

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

     label11:
        if $z0 == 0 goto label34;

     label12:
        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void getExtraInfo()>();

     label13:
        return;

     label14:
        $r7 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("BLABLA: ");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GenerateItem.java", $r2);

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("<strong>");

        $r2 = $r4[i0];

        $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r9.<java.util.regex.Matcher: boolean find()>();

     label16:
        if $z0 == 0 goto label27;

     label17:
        $r2 = $r4[i0];

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("label>");

        $r2 = $r10[1];

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("<");

        $r2 = $r10[0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = $r4[i0];

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("strong>");

        $r2 = $r10[1];

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("<");

        $r2 = $r10[0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

     label18:
        if $z0 == 0 goto label20;

     label19:
        $r2 = $r4[i0];

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\"_blank\">");

        $r2 = $r10[1];

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("<");

        $r2 = $r10[0];

     label20:
        $i1 = lengthof $r4;

        $i1 = $i1 - 1;

        if i0 != $i1 goto label23;

     label21:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label22:
        i0 = i0 + 1;

        goto label07;

     label23:
        $r7 = new java.lang.StringBuilder;

     label24:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label25:
        goto label22;

     label26:
        $r11 := @caughtexception;

        return;

     label27:
        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("</label>");

        $r2 = $r4[i0];

        $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r9.<java.util.regex.Matcher: boolean find()>();

     label28:
        if $z0 == 0 goto label30;

     label29:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

     label30:
        $r2 = $r4[i0];

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(">");

        $r2 = $r10[1];

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("<");

        $r2 = $r10[0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label31:
        $i1 = lengthof $r4;

        $i1 = $i1 - 1;

        if i0 == $i1 goto label22;

     label32:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label33:
        goto label22;

     label34:
        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label08 to label09 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label10 to label11 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label12 to label13 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label15 to label16 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label17 to label18 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label19 to label20 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label21 to label22 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label24 to label25 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label27 to label28 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label29 to label31 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label32 to label33 with label26;
    }

    private void findItemName()
    {
        java.lang.StringBuilder $r1;
        java.lang.String[] $r3;
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String $r2;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        $r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem>;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("AdHeaderBar");

        $r2 = $r3[1];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("-->");

        $r2 = $r3[1];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\. ");

        $r2 = $r3[0];

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r2 = staticinvoke <org.blockdroid.Generate.GenerateResult: java.lang.String replaceChars(java.lang.String)>($r2);

     label2:
        r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemName> = $r2;

        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    private void findItemTel()
    {
        java.lang.String[] $r3;
        java.lang.ArrayIndexOutOfBoundsException $r8;
        java.util.regex.Matcher $r5;
        android.graphics.Bitmap $r7;
        int $i0;
        org.blockdroid.Others.Base64EncodeDecode $r6;
        java.lang.StringBuilder $r1;
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String $r2;
        java.util.regex.Pattern $r4;
        boolean $z0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        $r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem>;

     label01:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("item_contact");

        $r2 = $r3[1];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("Tel");

        $r2 = $r3[1];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(">");

        $r2 = $r3[1];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("<");

        $r2 = $r3[0];

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

     label02:
        r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemPhoneAddress> = $r2;

        $r2 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemPhoneAddress>;

     label03:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

     label04:
        if $i0 >= 2 goto label20;

        $r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem>;

     label05:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("class=\"item_contact\"");

        $r2 = $r3[1];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("src=\"");

        $r2 = $r3[1];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\"");

        $r2 = $r3[0];

     label06:
        r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemPhoneAddress> = $r2;

        $r2 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemPhoneAddress>;

        if $r2 == null goto label20;

     label07:
        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(".gif");

     label08:
        $r2 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemPhoneAddress>;

     label09:
        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

     label10:
        if $z0 == 0 goto label20;

        $r1 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Tel adress: ");

     label12:
        $r2 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemPhoneAddress>;

     label13:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GenerateItem.java", $r2);

     label14:
        $r6 = r0.<org.blockdroid.Generate.GenerateItem: org.blockdroid.Others.Base64EncodeDecode base64>;

        $r2 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemPhoneAddress>;

     label15:
        $r2 = virtualinvoke $r6.<org.blockdroid.Others.Base64EncodeDecode: java.lang.String imageHttpToBase64(java.lang.String)>($r2);

        $r7 = staticinvoke <org.blockdroid.Others.Base64EncodeDecode: android.graphics.Bitmap base64toBitmap(java.lang.String)>($r2);

     label16:
        $r2 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemPhoneAddress>;

     label17:
        $r2 = staticinvoke <org.blockdroid.Others.Readzors: java.lang.String read_code(android.graphics.Bitmap,java.lang.String)>($r7, $r2);

     label18:
        r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemPhoneAddress> = $r2;

        return;

     label19:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GenerateItem.java", "Phone-error");

     label20:
        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label08 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label11 to label12 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label13 to label14 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label15 to label16 with label19;
        catch java.lang.ArrayIndexOutOfBoundsException from label17 to label18 with label19;
    }

    private void genereateItem()
    {
        org.blockdroid.Generate.GenerateItem r0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void findItemIMGs()>();

        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void findItemInfo()>();

        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void findItemDesc()>();

        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void findItemTel()>();

        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void findItemName()>();

        return;
    }

    private void getExtraInfo()
    {
        java.lang.String[] $r3;
        java.lang.ArrayIndexOutOfBoundsException $r5;
        int i0, $i1;
        java.lang.StringBuilder r1, $r4;
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String $r2;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem2>;

     label01:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("car_extradata_details");

        $r2 = $r3[1];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("</table>");

        $r2 = $r3[0];

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\t", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("</td>", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("</tr>", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<tr>", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<sub id=\"co2_subscript\">2</sub>", "2");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" colspan=\"2\"", "");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("<td>");

     label02:
        r1 = new java.lang.StringBuilder;

     label03:
        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

     label04:
        i0 = 1;

     label05:
        $i1 = lengthof $r3;

        if i0 < $i1 goto label08;

        $r2 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemInfo>;

        $r4 = new java.lang.StringBuilder;

     label06:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r2 = staticinvoke <org.blockdroid.Generate.GenerateResult: java.lang.String replaceChars(java.lang.String)>($r2);

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemInfo> = $r2;

        return;

     label08:
        $r4 = new java.lang.StringBuilder;

     label09:
        $r2 = $r3[i0];

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label10:
        i0 = i0 + 1;

        goto label05;

     label11:
        $r5 := @caughtexception;

        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label11;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label11;
        catch java.lang.ArrayIndexOutOfBoundsException from label06 to label07 with label11;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label11;
    }

    private boolean hasBeenRemoved(int)
    {
        java.util.regex.Matcher $r4;
        int $i0;
        java.lang.StringBuilder $r2;
        org.blockdroid.Generate.GenerateItem r0;
        java.util.regex.Pattern $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        $i0 := @parameter0: int;

        if $i0 <= 1700 goto label1;

        if $i0 > 2100 goto label1;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(". .");

        $r2 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void loadItemIMGs()
    {
        java.lang.String[] r2, $r5, $r7;
        java.util.ArrayList $r1;
        java.util.regex.Matcher $r9;
        int i0, i1, $i2;
        org.blockdroid.Others.Base64EncodeDecode $r10;
        java.lang.String $r4;
        java.lang.NegativeArraySizeException $r6;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r11;
        java.lang.StringBuilder $r3;
        org.blockdroid.Generate.GenerateItem r0;
        java.util.regex.Pattern $r8;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GenerateItem.java", "LOCATING IMAGES");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.blockdroid.Generate.GenerateItem: java.util.ArrayList ItemPictureBase64> = $r1;

        r2 = null;

        $r3 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem>;

     label01:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("class=\"image_list");

     label02:
        $r4 = $r5[1];

     label03:
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("</ul>");

     label04:
        $r4 = $r5[0];

     label05:
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("src=");

     label06:
        r2 = $r5;

        i0 = lengthof $r5;

        i0 = i0 - 1;

     label07:
        $r5 = newarray (java.lang.String)[i0];

     label08:
        r0.<org.blockdroid.Generate.GenerateItem: java.lang.String[] IMGs> = $r5;

     label09:
        if r2 == null goto label15;

        i0 = lengthof r2;

        i1 = 1;

     label10:
        if i1 < i0 goto label12;

        return;

     label11:
        $r6 := @caughtexception;

        r0.<org.blockdroid.Generate.GenerateItem: boolean loadSuccess> = 0;

        goto label09;

     label12:
        $r5 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String[] IMGs>;

        $i2 = i1 - 1;

        $r4 = r2[i1];

        $r7 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\"");

        $r4 = $r7[1];

        $r5[$i2] = $r4;

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("images");

        $r5 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String[] IMGs>;

        $i2 = i1 - 1;

        $r4 = $r5[$i2];

        $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        $z0 = virtualinvoke $r9.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label13;

        $r1 = r0.<org.blockdroid.Generate.GenerateItem: java.util.ArrayList ItemPictureBase64>;

        $r10 = r0.<org.blockdroid.Generate.GenerateItem: org.blockdroid.Others.Base64EncodeDecode base64>;

        $r5 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String[] IMGs>;

        $i2 = i1 - 1;

        $r4 = $r5[$i2];

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("mob_", "mob_");

        $r4 = virtualinvoke $r10.<org.blockdroid.Others.Base64EncodeDecode: java.lang.String imageHttpToBase64Compress(java.lang.String,int,boolean)>($r4, 22, 1);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label13:
        i1 = i1 + 1;

        goto label10;

     label14:
        $r11 := @caughtexception;

        goto label09;

     label15:
        return;

        catch java.lang.NegativeArraySizeException from label01 to label02 with label11;
        catch java.lang.NegativeArraySizeException from label03 to label04 with label11;
        catch java.lang.NegativeArraySizeException from label05 to label06 with label11;
        catch java.lang.NegativeArraySizeException from label07 to label08 with label11;
        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label06 with label14;
    }

    private static java.lang.String staticFindItemInfo(java.lang.StringBuilder)
    {
        int i0, $i1;
        java.lang.StringBuilder $r0, $r3;
        java.lang.String[] $r2, $r4;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GenerateItem.java", "ITEM INFO LOADING");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("<strong>");

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i0 = 3;

     label1:
        $i1 = lengthof $r2;

        $i1 = $i1 - 2;

        if i0 < $i1 goto label2;

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r1 = staticinvoke <org.blockdroid.Generate.GenerateResult: java.lang.String replaceChars(java.lang.String)>($r1);

        return $r1;

     label2:
        $r3 = new java.lang.StringBuilder;

        $r1 = $r2[i0];

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("<br>");

        $r1 = $r4[0];

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("</strong>", "");

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        i0 = i0 + 1;

        goto label1;
    }

    public void generateAll()
    {
        org.blockdroid.Generate.GenerateItem r0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void genereateItem()>();

        return;
    }

    public void generateDesc()
    {
        org.blockdroid.Generate.GenerateItem r0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void findItemDesc()>();

        return;
    }

    public void generateImg()
    {
        org.blockdroid.Generate.GenerateItem r0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void findItemIMGs()>();

        return;
    }

    public void generateInfo()
    {
        org.blockdroid.Generate.GenerateItem r0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        specialinvoke r0.<org.blockdroid.Generate.GenerateItem: void findItemInfo()>();

        return;
    }

    public java.util.ArrayList getIMGs()
    {
        org.blockdroid.Generate.GenerateItem r0;
        java.util.ArrayList r1;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        r1 = r0.<org.blockdroid.Generate.GenerateItem: java.util.ArrayList ItemPictureBase64>;

        return r1;
    }

    public java.lang.String[] getIMGsHttpAdresses()
    {
        int i0, $i1;
        java.lang.String[] r1;
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

     label1:
        r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String[] IMGs>;

     label2:
        i0 = 0;

     label3:
        $i1 = lengthof r1;

     label4:
        if i0 < $i1 goto label5;

        return r1;

     label5:
        $r2 = r1[i0];

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("mob_", "");

        r1[i0] = $r2;

     label6:
        i0 = i0 + 1;

        goto label3;

     label7:
        $r3 := @caughtexception;

        return null;

        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch java.lang.NullPointerException from label3 to label4 with label7;
        catch java.lang.NullPointerException from label5 to label6 with label7;
    }

    public java.lang.String getItemDesc()
    {
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String r1;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemDesc>;

        return r1;
    }

    public java.lang.String getItemInfo()
    {
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String r1;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemInfo>;

        return r1;
    }

    public java.lang.String getItemName()
    {
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String r1;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemName>;

        return r1;
    }

    public boolean getLoadSuccess()
    {
        org.blockdroid.Generate.GenerateItem r0;
        boolean z0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        z0 = r0.<org.blockdroid.Generate.GenerateItem: boolean loadSuccess>;

        return z0;
    }

    public java.lang.String getPhoneImg()
    {
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String r1;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.String itemPhoneAddress>;

        return r1;
    }

    public int getStatus()
    {
        long $l1, $l2;
        java.lang.Long $r3;
        int i0;
        java.lang.StringBuilder $r1;
        org.blockdroid.Generate.GenerateItem r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.blockdroid.Generate.GenerateItem;

        $r1 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.StringBuilder sbItem>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $l1 = (long) i0;

        $r3 = r0.<org.blockdroid.Generate.GenerateItem: java.lang.Long skipThisManyChars>;

        $l2 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $l1 = $l1 + $l2;

        i0 = (int) $l1;

        $r1 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ANTAL: ", $r2);

        $z0 = r0.<org.blockdroid.Generate.GenerateItem: boolean loadSuccess>;

        if $z0 != 0 goto label1;

        return 3;

     label1:
        $z0 = specialinvoke r0.<org.blockdroid.Generate.GenerateItem: boolean hasBeenRemoved(int)>(i0);

        if $z0 == 0 goto label2;

        return 2;

     label2:
        if i0 <= 1500 goto label3;

        return 1;

     label3:
        return 3;
    }

    public static void <clinit>()
    {
        <org.blockdroid.Generate.GenerateItem: java.lang.String TAG> = "GenerateItem.java";

        return;
    }
}
