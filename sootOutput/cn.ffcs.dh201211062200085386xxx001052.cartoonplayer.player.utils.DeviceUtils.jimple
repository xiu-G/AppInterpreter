public class cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils extends java.lang.Object
{
    private static final long CANNOT_STAT_ERROR;

    public void <init>()
    {
        cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils r0;

        r0 := @this: cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long getAvailableStorage()
    {
        android.os.StatFs r1;
        int $i0;
        long $l1, $l2;
        java.lang.RuntimeException r0;
        java.lang.String $r3;
        java.io.File $r2;

     label1:
        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String toString()>();

     label2:
        r1 = new android.os.StatFs;

     label3:
        specialinvoke r1.<android.os.StatFs: void <init>(java.lang.String)>($r3);

        $i0 = virtualinvoke r1.<android.os.StatFs: int getAvailableBlocks()>();

     label4:
        $l1 = (long) $i0;

     label5:
        $i0 = virtualinvoke r1.<android.os.StatFs: int getBlockSize()>();

     label6:
        $l2 = (long) $i0;

        $l1 = $l1 * $l2;

        return $l1;

     label7:
        r0 := @caughtexception;

        return -2L;

        catch java.lang.RuntimeException from label1 to label2 with label7;
        catch java.lang.RuntimeException from label3 to label4 with label7;
        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    public static java.lang.String getCpuInfo()
    {
        java.lang.Throwable $r7;
        java.lang.String[] $r5;
        java.io.File $r3;
        java.lang.Exception $r6;
        java.io.FileReader r0;
        java.io.BufferedReader r1;
        java.lang.String r2, $r4;
        boolean $z0;

        r2 = "";

        $r3 = new java.io.File;

     label01:
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>("/proc/cpuinfo");

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label02:
        if $z0 == 0 goto label16;

        r0 = new java.io.FileReader;

     label03:
        specialinvoke r0.<java.io.FileReader: void <init>(java.lang.String)>("/proc/cpuinfo");

     label04:
        r1 = new java.io.BufferedReader;

     label05:
        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r0, 8192);

        $r4 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label06:
        r2 = $r4;

     label07:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label08:
        if $r4 == null goto label17;

     label09:
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

     label10:
        $r4 = $r5[1];

     label11:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

     label12:
        $r4 = $r5[0];

     label13:
        return $r4;

     label14:
        $r6 := @caughtexception;

        return r2;

     label15:
        $r7 := @caughtexception;

        return r2;

     label16:
        return "";

     label17:
        return $r4;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.io.IOException from label11 to label12 with label15;
        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label13 with label14;
    }

    public static java.lang.String getDeviceModel()
    {
        java.lang.String $r0;

        $r0 = <android.os.Build: java.lang.String MODEL>;

        $r0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.StringUtils: java.lang.String trim(java.lang.String)>($r0);

        return $r0;
    }

    public static java.lang.String getManufacturer()
    {
        java.lang.String $r0;

        $r0 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.StringUtils: java.lang.String trim(java.lang.String)>($r0);

        return $r0;
    }

    public static java.lang.String getSDKVersion()
    {
        java.lang.String r0;

        r0 = <android.os.Build$VERSION: java.lang.String SDK>;

        return r0;
    }

    public static int getSDKVersionInt()
    {
        int i0;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        return i0;
    }

    public static float getScreenDensity(android.content.Context)
    {
        android.content.Context $r0;
        float f0;
        android.util.DisplayMetrics $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r2.<android.util.DisplayMetrics: float density>;

        return f0;
    }

    public static int getScreenHeight(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager $r2;
        int $i0;
        android.view.Display $r3;
        java.lang.Object $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r2 = (android.view.WindowManager) $r1;

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r3.<android.view.Display: int getHeight()>();

        return $i0;
    }

    public static int[] getScreenSize(int, int, int, int)
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 = $i0 * $i3;

        $i5 = $i2 * $i1;

        if $i4 <= $i5 goto label2;

        $i1 = $i2 * $i1;

        $i3 = $i1 / $i0;

     label1:
        $r0 = newarray (int)[2];

        $r0[0] = $i2;

        $r0[1] = $i3;

        return $r0;

     label2:
        $i4 = $i0 * $i3;

        $i5 = $i2 * $i1;

        if $i4 >= $i5 goto label1;

        $i0 = $i3 * $i0;

        $i2 = $i0 / $i1;

        goto label1;
    }

    public static int[] getScreenSize(int, int, android.content.Context)
    {
        android.content.Context $r0;
        int[] $r1;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, $i7;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: android.content.Context;

        $i2 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils: int getScreenWidth(android.content.Context)>($r0);

        i3 = $i2;

        $i4 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils: int getScreenHeight(android.content.Context)>($r0);

        i5 = $i4;

        $i6 = $i0 * $i4;

        $i7 = $i2 * $i1;

        if $i6 <= $i7 goto label2;

        $i1 = $i2 * $i1;

        i5 = $i1 / $i0;

     label1:
        $r1 = newarray (int)[2];

        $r1[0] = i3;

        $r1[1] = i5;

        return $r1;

     label2:
        $i6 = $i0 * $i4;

        $i2 = $i2 * $i1;

        if $i6 >= $i2 goto label1;

        $i0 = $i4 * $i0;

        i3 = $i0 / $i1;

        goto label1;
    }

    public static int getScreenWidth(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager $r2;
        int $i0;
        android.view.Display $r3;
        java.lang.Object $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r2 = (android.view.WindowManager) $r1;

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r3.<android.view.Display: int getWidth()>();

        return $i0;
    }

    public static boolean hasFroyo()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasGingerbread()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasHoneycomb()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasHoneycombMR1()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 12 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean hasICS()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void hideSoftInput(android.content.Context, android.view.View)
    {
        android.content.Context $r0;
        android.view.View $r1;
        java.lang.Object $r2;
        android.os.IBinder $r4;
        android.view.inputmethod.InputMethodManager r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.view.View;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        r3 = (android.view.inputmethod.InputMethodManager) $r2;

        $r4 = virtualinvoke $r1.<android.view.View: android.os.IBinder getApplicationWindowToken()>();

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r4, 2);

        return;
    }

    public static boolean isHTC()
    {
        int $i0, $i1;
        java.lang.String $r0;

        $r0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils: java.lang.String getDeviceModel()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("htc");

        $i1 = -1;

        if $i0 == $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isHoneycombTablet(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils: boolean hasHoneycomb()>();

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils: boolean isTablet(android.content.Context)>($r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isMeizu()
    {
        int $i0, $i1;
        java.lang.String $r0;

        $r0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils: java.lang.String getDeviceModel()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("meizu");

        $i1 = -1;

        if $i0 == $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isTablet(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Configuration $r2;
        int $i0;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r2.<android.content.res.Configuration: int screenLayout>;

        $i0 = $i0 & 15;

        if $i0 < 3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isXiaomi()
    {
        int $i0, $i1;
        java.lang.String $r0;

        $r0 = staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils: java.lang.String getDeviceModel()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("xiaomi");

        $i1 = -1;

        if $i0 == $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void setBrightness(android.app.Activity, float)
    {
        byte $b0;
        int $i1;
        float $f0;
        android.app.Activity $r0;
        android.view.Window $r1;
        android.view.WindowManager$LayoutParams $r2;

        $r0 := @parameter0: android.app.Activity;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $r2.<android.view.WindowManager$LayoutParams: float screenBrightness> = $f0;

        $f0 = $r2.<android.view.WindowManager$LayoutParams: float screenBrightness>;

        $b0 = $f0 cmpl 1.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $r2.<android.view.WindowManager$LayoutParams: float screenBrightness> = 1.0F;

     label1:
        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>($r2);

        return;

     label2:
        $f0 = $r2.<android.view.WindowManager$LayoutParams: float screenBrightness>;

        $b0 = $f0 cmpg 0.01F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $r2.<android.view.WindowManager$LayoutParams: float screenBrightness> = 0.01F;

        goto label1;
    }

    public static void showSoftInput(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.view.inputmethod.InputMethodManager r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        r2 = (android.view.inputmethod.InputMethodManager) $r1;

        virtualinvoke r2.<android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>(0, 2);

        return;
    }

    public static void startApkActivity(android.content.Context, java.lang.String)
    {
        java.lang.Throwable r3;
        android.content.Context $r0;
        java.util.Iterator $r8;
        android.content.pm.PackageManager $r5;
        android.content.ComponentName $r12;
        android.content.Intent r4;
        android.content.pm.PackageInfo $r6;
        android.content.pm.ResolveInfo r10;
        java.util.List $r7;
        android.content.pm.ActivityInfo $r11;
        java.lang.Object $r9;
        java.lang.String $r1, r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label01:
        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, 0);

     label02:
        r4 = new android.content.Intent;

     label03:
        specialinvoke r4.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.MAIN", null);

        virtualinvoke r4.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

     label04:
        r2 = $r6.<android.content.pm.PackageInfo: java.lang.String packageName>;

     label05:
        virtualinvoke r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r2);

        $r7 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r4, 0);

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

     label06:
        r10 = (android.content.pm.ResolveInfo) $r9;

        if r10 == null goto label10;

        $r11 = r10.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r2 = $r11.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r12 = new android.content.ComponentName;

     label07:
        specialinvoke $r12.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r1, r2);

        virtualinvoke r4.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r12);

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>(r4);

     label08:
        return;

     label09:
        r3 := @caughtexception;

        staticinvoke <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.Logger: void e(java.lang.Throwable)>(r3);

     label10:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label09;
    }

    protected boolean isHardKeyboardOpen(android.content.Context)
    {
        android.content.Context $r1;
        android.content.res.Configuration $r3;
        int $i0;
        cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils r0;
        android.content.res.Resources $r2;

        r0 := @this: cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r3.<android.content.res.Configuration: int hardKeyboardHidden>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <cn.ffcs.dh201211062200085386xxx001052.cartoonplayer.player.utils.DeviceUtils: long CANNOT_STAT_ERROR> = -2L;

        return;
    }
}
