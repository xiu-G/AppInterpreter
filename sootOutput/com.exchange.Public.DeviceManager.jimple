public class com.exchange.Public.DeviceManager extends java.lang.Object
{
    public static java.util.Set installedApps;

    static void <clinit>()
    {
        java.util.HashSet $r0;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <com.exchange.Public.DeviceManager: java.util.Set installedApps> = $r0;

        return;
    }

    public void <init>()
    {
        com.exchange.Public.DeviceManager r0;

        r0 := @this: com.exchange.Public.DeviceManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int dpToPix(int, android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        float f0, $f1;
        android.util.DisplayMetrics $r2;
        android.content.res.Resources $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r2.<android.util.DisplayMetrics: float density>;

        $f1 = (float) $i0;

        f0 = $f1 * f0;

        f0 = f0 + 0.5F;

        $i0 = (int) f0;

        return $i0;
    }

    public static java.lang.String getAppkey(android.content.Context)
    {
        android.content.Context $r0;
        android.os.Bundle $r4;
        android.content.pm.PackageManager $r1;
        java.lang.String $r2;
        android.content.pm.ApplicationInfo $r3;
        java.lang.Exception $r5;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, 128);

     label2:
        if $r3 == null goto label9;

     label3:
        $r4 = $r3.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $r2 = virtualinvoke $r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("UMENG_APPKEY");

     label4:
        if $r2 == null goto label5;

        return $r2;

     label5:
        $r2 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

     label6:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Could not read EXCHANGE_APPKEY meta-data from AndroidManifest.xml.");

     label7:
        return null;

     label8:
        $r5 := @caughtexception;

        $r2 = <com.exchange.Public.ExchangeConstants: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Could not read EXCHANGE_APPKEY meta-data from AndroidManifest.xml.", $r5);

     label9:
        return null;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static java.lang.String getFileVersionDes(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        $r2 = <com.exchange.Public.ExchangeConstants: java.lang.String banben>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static int getImageHeight(android.content.Context, float)
    {
        android.content.Context $r0;
        int i0;
        float $f0, $f1;
        android.util.DisplayMetrics $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r2.<android.util.DisplayMetrics: int heightPixels>;

        $f1 = (float) i0;

        $f0 = $f1 * $f0;

        i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return i0;
    }

    public static java.util.Set getInstalledPackages(android.content.Context)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageInfo r5;
        java.util.HashSet r1;
        java.util.List $r3;
        int i0, $i1;
        java.lang.Object $r4;
        java.lang.String $r6;

        $r0 := @parameter0: android.content.Context;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(0);

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i0 < $i1 goto label2;

        <com.exchange.Public.DeviceManager: java.util.Set installedApps> = r1;

        return r1;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        r5 = (android.content.pm.PackageInfo) $r4;

        $r6 = r5.<android.content.pm.PackageInfo: java.lang.String packageName>;

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r6);

        i0 = i0 + 1;

        goto label1;
    }

    public static org.json.JSONObject getMessage(android.content.Context)
    {
        java.lang.Throwable $r16;
        android.content.Context $r0;
        android.content.pm.PackageManager $r8;
        java.util.Date $r14;
        java.text.SimpleDateFormat r2;
        java.lang.String[] $r15;
        android.content.pm.PackageInfo $r9;
        org.json.JSONObject r3;
        java.util.Calendar $r12;
        android.content.ContentResolver $r10;
        java.util.Locale $r11;
        android.telephony.TelephonyManager r7;
        int $i0;
        java.lang.String r1, r4;
        java.util.TimeZone $r13;
        java.lang.Exception $r17;
        android.content.res.Configuration r5;
        java.lang.Object $r6;

        $r0 := @parameter0: android.content.Context;

        r3 = new org.json.JSONObject;

        specialinvoke r3.<org.json.JSONObject: void <init>()>();

     label01:
        $r6 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r7 = (android.telephony.TelephonyManager) $r6;

        r1 = virtualinvoke r7.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("device_key", r1);

     label02:
        $r8 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r9 = virtualinvoke $r8.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 0);

     label03:
        r1 = $r9.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label04:
        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("app_version", r1);

     label05:
        r1 = <android.os.Build$VERSION: java.lang.String RELEASE>;

     label06:
        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("os_version", r1);

     label07:
        r5 = new android.content.res.Configuration;

     label08:
        specialinvoke r5.<android.content.res.Configuration: void <init>()>();

        $r10 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>($r10, r5);

        $r11 = r5.<android.content.res.Configuration: java.util.Locale locale>;

     label09:
        if $r11 == null goto label13;

     label10:
        $r11 = r5.<android.content.res.Configuration: java.util.Locale locale>;

        r1 = virtualinvoke $r11.<java.util.Locale: java.lang.String getCountry()>();

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", r1);

        $r11 = r5.<android.content.res.Configuration: java.util.Locale locale>;

        r1 = virtualinvoke $r11.<java.util.Locale: java.lang.String toString()>();

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", r1);

        $r11 = r5.<android.content.res.Configuration: java.util.Locale locale>;

        $r12 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r11);

        $r13 = virtualinvoke $r12.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $i0 = virtualinvoke $r13.<java.util.TimeZone: int getRawOffset()>();

     label11:
        $i0 = $i0 / 3600000;

     label12:
        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", $i0);

     label13:
        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("lat", 0.0);

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("lng", 0.0);

     label14:
        r2 = new java.text.SimpleDateFormat;

     label15:
        specialinvoke r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

     label16:
        $r14 = new java.util.Date;

     label17:
        specialinvoke $r14.<java.util.Date: void <init>()>();

        r4 = virtualinvoke r2.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r14);

        $r15 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r1 = $r15[0];

        $r15 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r4 = $r15[1];

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("date", r1);

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("time", r4);

     label18:
        return r3;

     label19:
        $r16 := @caughtexception;

     label20:
        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("app_version", "unknown");

     label21:
        goto label05;

     label22:
        $r17 := @caughtexception;

        r1 = virtualinvoke $r17.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("error", r1);

        return r3;

        catch java.lang.Exception from label01 to label02 with label22;
        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label19;
        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label19;
        catch java.lang.Exception from label02 to label05 with label22;
        catch java.lang.Exception from label06 to label07 with label22;
        catch java.lang.Exception from label08 to label09 with label22;
        catch java.lang.Exception from label10 to label11 with label22;
        catch java.lang.Exception from label12 to label14 with label22;
        catch java.lang.Exception from label15 to label16 with label22;
        catch java.lang.Exception from label17 to label18 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
    }

    public static boolean isChinese(android.content.Context)
    {
        android.content.Context $r0;
        java.util.Locale r1;
        android.content.res.Configuration $r3;
        java.lang.String $r4;
        android.content.res.Resources $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r1 = $r3.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("zh_CN");

        return $z0;
    }

    public static boolean isScreenPortrait(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Configuration $r2;
        int $i0;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r2.<android.content.res.Configuration: int orientation>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
}
