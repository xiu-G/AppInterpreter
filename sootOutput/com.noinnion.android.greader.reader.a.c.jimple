public class com.noinnion.android.greader.reader.a.c extends java.lang.Object
{

    private void <init>()
    {
        com.noinnion.android.greader.reader.a.c r0;

        r0 := @this: com.noinnion.android.greader.reader.a.c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long a(java.lang.Object)
    {
        java.lang.Throwable $r2;
        java.lang.Object $r0;
        long $l0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        return 0L;

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        return 0L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.String a(android.content.Context)
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        android.content.pm.PackageManager $r1;
        java.lang.String $r2;
        android.content.pm.PackageInfo $r3;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r2, 0);

     label2:
        $r2 = $r3.<android.content.pm.PackageInfo: java.lang.String versionName>;

        return $r2;

     label3:
        $r4 := @caughtexception;

        return "?";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String a(android.content.Context, long)
    {
        android.content.Context $r0;
        java.util.Date $r1, $r3, $r9;
        java.text.SimpleDateFormat $r2, $r8;
        long $l0, $l1, $l5, $l6;
        byte $b7;
        int $i2, $i3, $i4;
        java.lang.String $r6;
        java.text.DateFormat $r7;
        java.lang.CharSequence $r5;
        java.lang.StringBuilder $r4, $r10;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $r8 = new java.text.SimpleDateFormat;

        $r2 = $r8;

        specialinvoke $r8.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("HH:mm");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l1 / 1000L;

        $l1 = $l1 - $l0;

        $r1 = new java.util.Date;

        $r3 = $r1;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        $r9 = new java.util.Date;

        $i2 = virtualinvoke $r3.<java.util.Date: int getYear()>();

        $i3 = virtualinvoke $r3.<java.util.Date: int getMonth()>();

        $i4 = virtualinvoke $r3.<java.util.Date: int getDate()>();

        specialinvoke $r9.<java.util.Date: void <init>(int,int,int)>($i2, $i3, $i4);

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = $l5 / 1000L;

        $l6 = virtualinvoke $r9.<java.util.Date: long getTime()>();

        $l6 = $l6 / 1000L;

        $l5 = $l5 - $l6;

        $b7 = $l1 cmp $l5;

        $i2 = (int) $b7;

        if $i2 >= 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.CharSequence getText(int)>(2131296350);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r5);

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r1 = new java.util.Date;

        $l0 = $l0 * 1000L;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r6 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label1:
        $l5 = $l5 + 86400L;

        $b7 = $l1 cmp $l5;

        $i2 = (int) $b7;

        if $i2 >= 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.CharSequence getText(int)>(2131296351);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r5);

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r1 = new java.util.Date;

        $l0 = $l0 * 1000L;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r6 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label2:
        $r7 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance()>();

        $r1 = new java.util.Date;

        $l0 = $l0 * 1000L;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r6 = virtualinvoke $r7.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r1);

        return $r6;
    }

    public static java.lang.String a(java.io.InputStream)
    {
        java.lang.Throwable $r5;
        int $i0;
        char[] $r2;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        java.io.InputStreamReader $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int available()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(16, $i0);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r2 = newarray (char)[4096];

     label1:
        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r0, "UTF-8");

     label2:
        $i0 = virtualinvoke $r3.<java.io.InputStreamReader: int read(char[])>($r2);

     label3:
        if $i0 > 0 goto label4;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        return $r4;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r2, 0, $i0);

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static int b(android.content.Context)
    {
        android.net.ConnectivityManager $r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        android.net.NetworkInfo$State $r4, $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(0);

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r4 == $r5 goto label1;

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTING>;

        if $r4 != $r5 goto label2;

     label1:
        return 1;

     label2:
        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(1);

        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r4 == $r5 goto label3;

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTING>;

        if $r4 != $r5 goto label4;

     label3:
        return 2;

     label4:
        return 0;
    }
}
