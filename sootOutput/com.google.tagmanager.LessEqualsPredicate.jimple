class com.google.tagmanager.LessEqualsPredicate extends com.google.tagmanager.NumberPredicate
{
    private static final java.lang.String ID;

    static void <clinit>()
    {
        com.google.analytics.containertag.common.FunctionType $r1;
        java.lang.String $r0;

        $r1 = <com.google.analytics.containertag.common.FunctionType: com.google.analytics.containertag.common.FunctionType LESS_EQUALS>;

        $r0 = virtualinvoke $r1.<com.google.analytics.containertag.common.FunctionType: java.lang.String toString()>();

        <com.google.tagmanager.LessEqualsPredicate: java.lang.String ID> = $r0;

        return;
    }

    public void <init>()
    {
        java.lang.String $r1;
        com.google.tagmanager.LessEqualsPredicate r0;

        r0 := @this: com.google.tagmanager.LessEqualsPredicate;

        $r1 = <com.google.tagmanager.LessEqualsPredicate: java.lang.String ID>;

        specialinvoke r0.<com.google.tagmanager.NumberPredicate: void <init>(java.lang.String)>($r1);

        return;
    }

    public static java.lang.String getFunctionId()
    {
        java.lang.String r0;

        r0 = <com.google.tagmanager.LessEqualsPredicate: java.lang.String ID>;

        return r0;
    }

    protected boolean evaluateNumber(com.google.tagmanager.TypedNumber, com.google.tagmanager.TypedNumber, java.util.Map)
    {
        com.google.tagmanager.TypedNumber $r1, $r2;
        java.util.Map $r3;
        int $i0;
        com.google.tagmanager.LessEqualsPredicate r0;

        r0 := @this: com.google.tagmanager.LessEqualsPredicate;

        $r1 := @parameter0: com.google.tagmanager.TypedNumber;

        $r2 := @parameter1: com.google.tagmanager.TypedNumber;

        $r3 := @parameter2: java.util.Map;

        $i0 = virtualinvoke $r1.<com.google.tagmanager.TypedNumber: int compareTo(com.google.tagmanager.TypedNumber)>($r2);

        if $i0 > 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
