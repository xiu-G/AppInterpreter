public class com.humanwares.util.ResUtil extends java.lang.Object
{

    public void <init>()
    {
        com.humanwares.util.ResUtil r0;

        r0 := @this: com.humanwares.util.ResUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.InputStream loadStream(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.content.res.Resources $r1;
        java.io.InputStream $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

        return $r2;
    }

    public static java.lang.String loadString(android.content.Context, int)
    {
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10;
        android.content.Context $r0;
        byte[] r1;
        int $i0, $i1;
        java.lang.String $r5, $r11;
        java.io.InputStream r2, $r4;
        android.content.res.Resources $r3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        r2 = null;

     label01:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

     label02:
        r2 = $r4;

     label03:
        $i0 = virtualinvoke $r4.<java.io.InputStream: int available()>();

     label04:
        r1 = newarray (byte)[$i0];

     label05:
        $i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>(r1);

     label06:
        $i1 = -1;

        if $i0 != $i1 goto label05;

     label07:
        $r11 = new java.lang.String;

     label08:
        $r5 = $r11;

     label09:
        specialinvoke $r11.<java.lang.String: void <init>(byte[])>(r1);

     label10:
        if $r4 == null goto label22;

     label11:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label12:
        return $r5;

     label13:
        $r6 := @caughtexception;

        if r2 == null goto label15;

     label14:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label15:
        return null;

     label16:
        $r7 := @caughtexception;

        if r2 == null goto label18;

     label17:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label18:
        throw $r7;

     label19:
        $r8 := @caughtexception;

        return $r5;

     label20:
        $r9 := @caughtexception;

        goto label15;

     label21:
        $r10 := @caughtexception;

        goto label18;

     label22:
        return $r5;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.io.IOException from label11 to label12 with label19;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.io.IOException from label17 to label18 with label21;
    }
}
