public class org.htmlparser.nodes.TagNode extends org.htmlparser.nodes.AbstractNode implements org.htmlparser.Tag
{
    protected static final kx f;
    protected static java.util.Hashtable h;
    private static final java.lang.String[] i;
    protected java.util.Vector g;
    private kx j;
    private java.util.Hashtable k;
    private java.util.ArrayList l;

    static void <clinit>()
    {
        lb $r1;
        java.lang.Boolean $r3;
        java.lang.String[] $r0;
        java.util.Hashtable $r2;

        $r0 = newarray (java.lang.String)[0];

        <org.htmlparser.nodes.TagNode: java.lang.String[] i> = $r0;

        $r1 = new lb;

        specialinvoke $r1.<lb: void <init>()>();

        <org.htmlparser.nodes.TagNode: kx f> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>(int)>(30);

        <org.htmlparser.nodes.TagNode: java.util.Hashtable h> = $r2;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("BLOCKQUOTE", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("BODY", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("BR", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("CENTER", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("DD", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("DIR", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("DIV", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("DL", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("DT", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("FORM", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("H1", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("H2", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("H3", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("H4", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("H5", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("H6", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("HEAD", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("HR", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("HTML", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISINDEX", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("LI", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("MENU", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("NOFRAMES", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("OL", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("P", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("PRE", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("TD", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("TH", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("TITLE", $r3);

        $r2 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("UL", $r3);

        return;
    }

    public void <init>()
    {
        org.htmlparser.nodes.TagNode r0;
        java.util.Vector $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        specialinvoke r0.<org.htmlparser.nodes.TagNode: void <init>(kr,int,int,java.util.Vector)>(null, -1, -1, $r1);

        return;
    }

    public void <init>(kr, int, int, java.util.Vector)
    {
        org.htmlparser.nodes.TagNode r0;
        kr $r1;
        java.lang.String[] $r4;
        kx $r3;
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.String $r5;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: kr;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.util.Vector;

        specialinvoke r0.<org.htmlparser.nodes.AbstractNode: void <init>(kr,int,int)>($r1, $i0, $i1);

        r0.<org.htmlparser.nodes.TagNode: java.util.Hashtable k> = null;

        r0.<org.htmlparser.nodes.TagNode: java.util.ArrayList l> = null;

        $r3 = <org.htmlparser.nodes.TagNode: kx f>;

        r0.<org.htmlparser.nodes.TagNode: kx j> = $r3;

        r0.<org.htmlparser.nodes.TagNode: java.util.Vector g> = $r2;

        $r2 = r0.<org.htmlparser.nodes.TagNode: java.util.Vector g>;

        if $r2 == null goto label1;

        $r2 = r0.<org.htmlparser.nodes.TagNode: java.util.Vector g>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 != 0 goto label3;

     label1:
        $r4 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.lang.String[] getIds()>();

        if $r4 == null goto label2;

        $i0 = lengthof $r4;

        if $i0 == 0 goto label2;

        $r5 = $r4[0];

        virtualinvoke r0.<org.htmlparser.nodes.TagNode: void setTagName(java.lang.String)>($r5);

        return;

     label2:
        virtualinvoke r0.<org.htmlparser.nodes.TagNode: void setTagName(java.lang.String)>("");

     label3:
        return;
    }

    public void <init>(org.htmlparser.nodes.TagNode, lb)
    {
        org.htmlparser.nodes.TagNode r0, $r1;
        java.util.Vector $r4;
        lb $r2;
        kr $r3;
        int $i0, $i1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: org.htmlparser.nodes.TagNode;

        $r2 := @parameter1: lb;

        $r3 = virtualinvoke $r1.<org.htmlparser.nodes.TagNode: kr getPage()>();

        $i0 = virtualinvoke $r1.<org.htmlparser.nodes.TagNode: int getTagBegin()>();

        $i1 = virtualinvoke $r1.<org.htmlparser.nodes.TagNode: int getTagEnd()>();

        $r4 = virtualinvoke $r1.<org.htmlparser.nodes.TagNode: java.util.Vector getAttributesEx()>();

        specialinvoke r0.<org.htmlparser.nodes.TagNode: void <init>(kr,int,int,java.util.Vector)>($r3, $i0, $i1, $r4);

        virtualinvoke r0.<org.htmlparser.nodes.TagNode: void setThisScanner(kx)>($r2);

        return;
    }

    public void accept(lp)
    {
        org.htmlparser.nodes.TagNode r0;
        lp $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: lp;

        virtualinvoke r0.<org.htmlparser.nodes.TagNode: boolean isEndTag()>();

        return;
    }

    public boolean breaksFlow()
    {
        org.htmlparser.nodes.TagNode r0;
        java.lang.String $r2;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 = <org.htmlparser.nodes.TagNode: java.util.Hashtable h>;

        $r2 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r1.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r2);

        return $z0;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        kk $r2;
        org.htmlparser.nodes.TagNode r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: kk getAttributeEx(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<kk: java.lang.String c()>();

        return $r1;

     label1:
        return null;
    }

    public kk getAttributeEx(java.lang.String)
    {
        kk $r3, r5;
        org.htmlparser.nodes.TagNode r1;
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String $r0, $r6;
        boolean $z0;

        r1 := @this: org.htmlparser.nodes.TagNode;

        $r0 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<org.htmlparser.nodes.TagNode: java.util.Vector getAttributesEx()>();

        if $r2 == null goto label4;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $r3 = null;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        r5 = (kk) $r4;

        $r6 = virtualinvoke r5.<kk: java.lang.String a()>();

        if $r6 == null goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z0 == 0 goto label2;

        $i1 = $i0;

        $r3 = r5;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r3;

     label4:
        return null;
    }

    public java.util.Vector getAttributesEx()
    {
        org.htmlparser.nodes.TagNode r0;
        java.util.Vector r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        r1 = r0.<org.htmlparser.nodes.TagNode: java.util.Vector g>;

        return r1;
    }

    public java.util.Hashtable getCSSStyle()
    {
        org.htmlparser.nodes.TagNode r0;
        java.util.Hashtable r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        r1 = r0.<org.htmlparser.nodes.TagNode: java.util.Hashtable k>;

        return r1;
    }

    public java.util.ArrayList getCSSStyleMutilLevel()
    {
        org.htmlparser.nodes.TagNode r0;
        java.util.ArrayList r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        r1 = r0.<org.htmlparser.nodes.TagNode: java.util.ArrayList l>;

        return r1;
    }

    public org.htmlparser.Tag getEndTag()
    {
        org.htmlparser.nodes.TagNode r0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        return null;
    }

    public java.lang.String[] getEndTagEnders()
    {
        org.htmlparser.nodes.TagNode r0;
        java.lang.String[] r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        r1 = <org.htmlparser.nodes.TagNode: java.lang.String[] i>;

        return r1;
    }

    public java.lang.String[] getEnders()
    {
        org.htmlparser.nodes.TagNode r0;
        java.lang.String[] r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        r1 = <org.htmlparser.nodes.TagNode: java.lang.String[] i>;

        return r1;
    }

    public int getEndingLineNumber()
    {
        int $i0;
        org.htmlparser.nodes.TagNode r0;
        kr $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: kr getPage()>();

        $i0 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: int getEndPosition()>();

        $i0 = virtualinvoke $r1.<kr: int a(int)>($i0);

        return $i0;
    }

    public java.lang.String[] getIds()
    {
        org.htmlparser.nodes.TagNode r0;
        java.lang.String[] r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        r1 = <org.htmlparser.nodes.TagNode: java.lang.String[] i>;

        return r1;
    }

    public java.lang.String getRawTagName()
    {
        kk r3;
        org.htmlparser.nodes.TagNode r0;
        java.util.Vector $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r4;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.util.Vector getAttributesEx()>();

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        r3 = (kk) $r2;

        $r4 = virtualinvoke r3.<kk: java.lang.String a()>();

        return $r4;

     label1:
        return null;
    }

    public int getStartingLineNumber()
    {
        int $i0;
        org.htmlparser.nodes.TagNode r0;
        kr $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: kr getPage()>();

        $i0 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: int getStartPosition()>();

        $i0 = virtualinvoke $r1.<kr: int a(int)>($i0);

        return $i0;
    }

    public java.lang.String getStyle(java.lang.String)
    {
        org.htmlparser.nodes.TagNode r3;
        java.lang.Object $r2;
        java.lang.String $r0;
        java.util.Hashtable $r1;

        r3 := @this: org.htmlparser.nodes.TagNode;

        $r0 := @parameter0: java.lang.String;

        $r1 = r3.<org.htmlparser.nodes.TagNode: java.util.Hashtable k>;

        if $r1 == null goto label1;

        $r1 = r3.<org.htmlparser.nodes.TagNode: java.util.Hashtable k>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r2;

        return $r0;

     label1:
        return "";
    }

    public int getTagBegin()
    {
        int i0;
        org.htmlparser.nodes.TagNode r0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        i0 = r0.<org.htmlparser.nodes.TagNode: int b>;

        return i0;
    }

    public int getTagEnd()
    {
        int i0;
        org.htmlparser.nodes.TagNode r0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        i0 = r0.<org.htmlparser.nodes.TagNode: int c>;

        return i0;
    }

    public java.lang.String getTagName()
    {
        org.htmlparser.nodes.TagNode r0;
        java.util.Locale $r2;
        int $i0;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.lang.String getRawTagName()>();

        if $r1 == null goto label2;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        $r3 = $r1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r1 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        return $r1;

     label3:
        return $r3;
    }

    public java.lang.String getText()
    {
        int $i0;
        org.htmlparser.nodes.TagNode r0;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.lang.String toHtml()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        return $r1;
    }

    public kx getThisScanner()
    {
        org.htmlparser.nodes.TagNode r0;
        kx r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        r1 = r0.<org.htmlparser.nodes.TagNode: kx j>;

        return r1;
    }

    public boolean isEmptyXmlTag()
    {
        kk r3;
        org.htmlparser.nodes.TagNode r0;
        java.util.Vector $r1;
        int $i0;
        java.lang.Object $r2;
        char $c1;
        java.lang.String $r4;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.util.Vector getAttributesEx()>();

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label1;

        $i0 = $i0 - 1;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        r3 = (kk) $r2;

        $r4 = virtualinvoke r3.<kk: java.lang.String a()>();

        if $r4 == null goto label1;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $c1 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        if $i0 != 47 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isEndTag()
    {
        org.htmlparser.nodes.TagNode r0;
        int $i0;
        char $c1;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.lang.String getRawTagName()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i0 = (int) $c1;

        if 47 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void removeAttribute(java.lang.String)
    {
        kk $r2;
        org.htmlparser.nodes.TagNode r0;
        java.util.Vector $r3;
        java.lang.String $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: kk getAttributeEx(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.util.Vector getAttributesEx()>();

        virtualinvoke $r3.<java.util.Vector: boolean remove(java.lang.Object)>($r2);

     label1:
        return;
    }

    public void setAttribute(java.lang.String, java.lang.String)
    {
        kk $r3;
        org.htmlparser.nodes.TagNode r0;
        char $c2;
        java.lang.StringBuffer $r4, $r5;
        int $i0, $i1;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 == null goto label15;

        $i0 = 0;

        $z0 = 1;

        $z1 = 1;

        $z2 = 0;

     label01:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label05;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $z3 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z3 == 0 goto label03;

        $z2 = 1;

     label02:
        $i0 = $i0 + 1;

        goto label01;

     label03:
        $i1 = (int) $c2;

        if 39 != $i1 goto label04;

        $z1 = 0;

        goto label02;

     label04:
        $i1 = (int) $c2;

        if 34 != $i1 goto label02;

        $z0 = 0;

        goto label02;

     label05:
        if $z2 == 0 goto label13;

        if $z0 == 0 goto label07;

        $c2 = 34;

     label06:
        $r3 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: kk getAttributeEx(java.lang.String)>($r1);

        if $r3 == null goto label14;

        virtualinvoke $r3.<kk: void c(java.lang.String)>($r2);

        if $c2 == 0 goto label16;

        virtualinvoke $r3.<kk: void a(char)>($c2);

        return;

     label07:
        if $z1 == 0 goto label08;

        $c2 = 39;

        goto label06;

     label08:
        $r5 = new java.lang.StringBuffer;

        $r4 = $r5;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 * 5;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label09:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label12;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if 34 != $i1 goto label11;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&quot;");

     label10:
        $i0 = $i0 + 1;

        goto label09;

     label11:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label10;

     label12:
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $c2 = 34;

        goto label06;

     label13:
        $c2 = 0;

        goto label06;

     label14:
        virtualinvoke r0.<org.htmlparser.nodes.TagNode: void setAttribute(java.lang.String,java.lang.String,char)>($r1, $r2, $c2);

        return;

     label15:
        $z0 = 1;

        $z1 = 1;

        $z2 = 0;

        goto label05;

     label16:
        return;
    }

    public void setAttribute(java.lang.String, java.lang.String, char)
    {
        kk $r3;
        org.htmlparser.nodes.TagNode r0;
        char $c0;
        java.lang.String $r1, $r2;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $c0 := @parameter2: char;

        $r3 = new kk;

        specialinvoke $r3.<kk: void <init>(java.lang.String,java.lang.String,char)>($r1, $r2, $c0);

        virtualinvoke r0.<org.htmlparser.nodes.TagNode: void setAttribute(kk)>($r3);

        return;
    }

    public void setAttribute(kk)
    {
        kk $r0, r5;
        org.htmlparser.nodes.TagNode r1;
        java.util.Vector $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        java.lang.String $r3, $r6;
        boolean $z0, $z1;

        r1 := @this: org.htmlparser.nodes.TagNode;

        $r0 := @parameter0: kk;

        $z0 = 0;

        $r2 = virtualinvoke r1.<org.htmlparser.nodes.TagNode: java.util.Vector getAttributesEx()>();

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label3;

        $r3 = virtualinvoke $r0.<kk: java.lang.String a()>();

        $z0 = 0;

        $i1 = 1;

     label1:
        $i2 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i1 >= $i2 goto label3;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        r5 = (kk) $r4;

        $r6 = virtualinvoke r5.<kk: java.lang.String a()>();

        if $r6 == null goto label2;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z1 == 0 goto label2;

        virtualinvoke $r2.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r0, $i1);

        $z0 = 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        if $z0 != 0 goto label5;

        if $i0 == 0 goto label4;

        $i0 = $i0 - 1;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        r5 = (kk) $r4;

        $z0 = virtualinvoke r5.<kk: boolean e()>();

        if $z0 != 0 goto label4;

        r5 = new kk;

        specialinvoke r5.<kk: void <init>(java.lang.String)>(" ");

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r5);

     label4:
        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r0);

     label5:
        return;
    }

    public void setAttributeEx(kk)
    {
        kk $r1;
        org.htmlparser.nodes.TagNode r0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: kk;

        virtualinvoke r0.<org.htmlparser.nodes.TagNode: void setAttribute(kk)>($r1);

        return;
    }

    public void setAttributesEx(java.util.Vector)
    {
        org.htmlparser.nodes.TagNode r0;
        java.util.Vector $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: java.util.Vector;

        r0.<org.htmlparser.nodes.TagNode: java.util.Vector g> = $r1;

        return;
    }

    public void setCSSStyle(java.util.Hashtable)
    {
        org.htmlparser.nodes.TagNode r0;
        java.util.Hashtable $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: java.util.Hashtable;

        r0.<org.htmlparser.nodes.TagNode: java.util.Hashtable k> = $r1;

        return;
    }

    public void setCSSStyleMutilLevel(java.util.ArrayList)
    {
        org.htmlparser.nodes.TagNode r0;
        java.util.ArrayList $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: java.util.ArrayList;

        r0.<org.htmlparser.nodes.TagNode: java.util.ArrayList l> = $r1;

        return;
    }

    public void setEmptyXmlTag(boolean)
    {
        kk r3, $r6;
        org.htmlparser.nodes.TagNode r0;
        char $c3;
        java.util.Vector $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.util.Vector getAttributesEx()>();

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label5;

        $i1 = $i0 - 1;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        r3 = (kk) $r2;

        $r4 = virtualinvoke r3.<kk: java.lang.String a()>();

        if $r4 == null goto label4;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r5 = virtualinvoke r3.<kk: java.lang.String c()>();

        if $r5 != null goto label3;

        $i2 = $i1 - 1;

        $c3 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i2);

        $i2 = (int) $c3;

        if $i2 != 47 goto label2;

        if $z0 != 0 goto label6;

        if 1 != $i1 goto label1;

        $i0 = $i0 - 1;

        virtualinvoke $r1.<java.util.Vector: void removeElementAt(int)>($i0);

        return;

     label1:
        $i1 = $i1 - 1;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r6 = new kk;

        specialinvoke $r6.<kk: void <init>(java.lang.String,java.lang.String)>($r4, null);

        $i0 = $i0 - 1;

        virtualinvoke $r1.<java.util.Vector: void removeElementAt(int)>($i0);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        return;

     label2:
        if $z0 == 0 goto label6;

        $r6 = new kk;

        specialinvoke $r6.<kk: void <init>(java.lang.String)>(" ");

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        $r6 = new kk;

        specialinvoke $r6.<kk: void <init>(java.lang.String,java.lang.String)>("/", null);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        return;

     label3:
        if $z0 == 0 goto label6;

        $r6 = new kk;

        specialinvoke $r6.<kk: void <init>(java.lang.String)>(" ");

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        $r6 = new kk;

        specialinvoke $r6.<kk: void <init>(java.lang.String,java.lang.String)>("/", null);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        return;

     label4:
        if $z0 == 0 goto label6;

        $r6 = new kk;

        specialinvoke $r6.<kk: void <init>(java.lang.String,java.lang.String)>("/", null);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        return;

     label5:
        if $z0 == 0 goto label6;

        $r6 = new kk;

        specialinvoke $r6.<kk: void <init>(java.lang.String,java.lang.String)>("/", null);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r6);

     label6:
        return;
    }

    public void setEndTag(org.htmlparser.Tag)
    {
        org.htmlparser.nodes.TagNode r0;
        org.htmlparser.Tag $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: org.htmlparser.Tag;

        return;
    }

    public void setTagBegin(int)
    {
        int $i0;
        org.htmlparser.nodes.TagNode r0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $i0 := @parameter0: int;

        r0.<org.htmlparser.nodes.TagNode: int b> = $i0;

        return;
    }

    public void setTagEnd(int)
    {
        int $i0;
        org.htmlparser.nodes.TagNode r0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $i0 := @parameter0: int;

        r0.<org.htmlparser.nodes.TagNode: int c> = $i0;

        return;
    }

    public void setTagName(java.lang.String)
    {
        kk $r1, r6;
        org.htmlparser.nodes.TagNode r2;
        char $c1;
        java.util.Vector $r3, $r4;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r0;

        r2 := @this: org.htmlparser.nodes.TagNode;

        $r0 := @parameter0: java.lang.String;

        $r1 = new kk;

        specialinvoke $r1.<kk: void <init>(java.lang.String,java.lang.String,char)>($r0, null, 0);

        $r3 = virtualinvoke r2.<org.htmlparser.nodes.TagNode: java.util.Vector getAttributesEx()>();

        $r4 = $r3;

        if $r3 != null goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        virtualinvoke r2.<org.htmlparser.nodes.TagNode: void setAttributesEx(java.util.Vector)>($r4);

     label1:
        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        if $i0 != 0 goto label2;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;

     label2:
        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        r6 = (kk) $r5;

        $r0 = virtualinvoke r6.<kk: java.lang.String c()>();

        if $r0 != null goto label3;

        $c1 = virtualinvoke r6.<kk: char d()>();

        if $c1 != 0 goto label3;

        virtualinvoke $r4.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r1, 0);

        return;

     label3:
        virtualinvoke $r4.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r1, 0);

        return;
    }

    public void setText(java.lang.String)
    {
        org.htmlparser.nodes.TagNode r0, $r4;
        kq $r2;
        kr $r5;
        java.lang.IllegalArgumentException $r8;
        org.htmlparser.Node $r3;
        java.util.Vector $r6;
        int $i0;
        java.lang.String $r1;
        li $r7;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: java.lang.String;

        $r2 = new kq;

        specialinvoke $r2.<kq: void <init>(java.lang.String)>($r1);

     label01:
        $r3 = virtualinvoke $r2.<kq: org.htmlparser.Node e()>();

     label02:
        $r4 = (org.htmlparser.nodes.TagNode) $r3;

     label03:
        $r5 = virtualinvoke $r4.<org.htmlparser.nodes.TagNode: kr getPage()>();

     label04:
        r0.<org.htmlparser.nodes.TagNode: kr a> = $r5;

     label05:
        $i0 = virtualinvoke $r4.<org.htmlparser.nodes.TagNode: int getStartPosition()>();

     label06:
        r0.<org.htmlparser.nodes.TagNode: int b> = $i0;

     label07:
        $i0 = virtualinvoke $r4.<org.htmlparser.nodes.TagNode: int getEndPosition()>();

     label08:
        r0.<org.htmlparser.nodes.TagNode: int c> = $i0;

     label09:
        $r6 = virtualinvoke $r4.<org.htmlparser.nodes.TagNode: java.util.Vector getAttributesEx()>();

     label10:
        r0.<org.htmlparser.nodes.TagNode: java.util.Vector g> = $r6;

        return;

     label11:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r1 = virtualinvoke $r7.<li: java.lang.String getMessage()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r8;

        catch li from label01 to label02 with label11;
        catch li from label03 to label04 with label11;
        catch li from label05 to label06 with label11;
        catch li from label07 to label08 with label11;
        catch li from label09 to label10 with label11;
    }

    public void setThisScanner(kx)
    {
        org.htmlparser.nodes.TagNode r0;
        kx $r1;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 := @parameter0: kx;

        r0.<org.htmlparser.nodes.TagNode: kx j> = $r1;

        return;
    }

    public java.lang.String toHtml(boolean)
    {
        org.htmlparser.nodes.TagNode r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.lang.String toTagHtml()>();

        return $r1;
    }

    public java.lang.String toPlainTextString()
    {
        org.htmlparser.nodes.TagNode r0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        return "";
    }

    public java.lang.String toString()
    {
        org.htmlparser.nodes.TagNode r0;
        kr $r5;
        org.htmlparser.lexer.Cursor $r4, $r6;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r2 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.lang.String getText()>();

        $r1 = new java.lang.StringBuffer;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + 20;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        $z0 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: boolean isEndTag()>();

        if $z0 == 0 goto label3;

        $r3 = "End";

     label1:
        $r4 = new org.htmlparser.lexer.Cursor;

        $r5 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: kr getPage()>();

        $i0 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: int getStartPosition()>();

        specialinvoke $r4.<org.htmlparser.lexer.Cursor: void <init>(kr,int)>($r5, $i0);

        $r6 = new org.htmlparser.lexer.Cursor;

        $r5 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: kr getPage()>();

        $i0 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: int getEndPosition()>();

        specialinvoke $r6.<org.htmlparser.lexer.Cursor: void <init>(kr,int)>($r5, $i0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("): ");

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        if 80 >= $i0 goto label4;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        $i0 = 77 - $i0;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label3:
        $r3 = "Tag";

        goto label1;

     label4:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        goto label2;
    }

    public java.lang.String toTagHtml()
    {
        kk r3;
        org.htmlparser.nodes.TagNode r0;
        java.util.Vector $r1;
        java.lang.StringBuffer $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        java.lang.String $r5;

        r0 := @this: org.htmlparser.nodes.TagNode;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TagNode: java.util.Vector getAttributesEx()>();

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        $i1 = 2;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i2);

        r3 = (kk) $r2;

        $i3 = virtualinvoke r3.<kk: int f()>();

        $i1 = $i1 + $i3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        r3 = (kk) $r2;

        virtualinvoke r3.<kk: void a(java.lang.StringBuffer)>($r4);

        virtualinvoke r3.<kk: void b(java.lang.StringBuffer)>($r4);

        virtualinvoke r3.<kk: void d(java.lang.StringBuffer)>($r4);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
