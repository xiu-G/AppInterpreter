public class com.umeng.fb.h extends java.lang.Object
{

    public void <init>()
    {
        com.umeng.fb.h r0;

        r0 := @this: com.umeng.fb.h;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int a(java.util.Date, java.util.Date)
    {
        java.util.Date $r0, $r1, $r2;
        int $i2;
        long $l0, $l1;
        boolean $z0;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.util.Date;

        $z0 = virtualinvoke $r1.<java.util.Date: boolean after(java.util.Date)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $l0 = $l1 - $l0;

        $l0 = $l0 / 1000L;

        $i2 = (int) $l0;

        return $i2;

     label2:
        $r0 = $r2;

        $r2 = $r1;

        $r1 = $r0;

        goto label1;
    }

    public static java.lang.String a()
    {
        java.text.SimpleDateFormat $r0;
        java.lang.String $r1;
        java.util.Date $r2;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        $r1 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        return $r1;
    }

    public static java.lang.String a(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

     label1:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("channel");

     label2:
        if $z0 == 0 goto label4;

     label3:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("channel");

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("channel", $r1);

     label4:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        return $r1;

     label5:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        goto label4;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.util.Date a(java.lang.String)
    {
        java.util.Date $r1;
        java.text.SimpleDateFormat $r2;
        java.lang.String $r0;
        java.lang.Exception $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.text.SimpleDateFormat;

     label1:
        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r1 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void a(android.content.Context)
    {
        android.content.Context $r0;
        android.widget.Toast $r2;
        int $i0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.umeng.fb.b.e: int A(android.content.Context)>($r0);

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>($i0);

        $r2 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, $r1, 0);

        virtualinvoke $r2.<android.widget.Toast: void show()>();

        return;
    }

    public static void a(android.content.Context, java.util.Date)
    {
        android.content.SharedPreferences$Editor $r3;
        android.content.Context $r0;
        android.content.SharedPreferences $r2;
        java.util.Date $r1;
        java.lang.String $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.util.Date;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("exchange_last_request_time", 0);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = staticinvoke <com.umeng.common.b: java.lang.String a(java.util.Date)>($r1);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("last_request_time", $r4);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static java.lang.String b(org.json.JSONObject)
    {
        java.lang.Exception $r5;
        org.json.JSONObject $r0, $r1, $r4;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        org.json.JSONArray $r3;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $i0 = 0;

     label01:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("header");

     label02:
        if $r1 == null goto label27;

     label03:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("access_subtype");

     label04:
        if $z0 == 0 goto label06;

     label05:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("access_subtype");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("access_subtype", $r2);

     label06:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("cpu");

     label07:
        if $z0 == 0 goto label09;

     label08:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("cpu");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("cpu", $r2);

     label09:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("app_version");

     label10:
        if $z0 == 0 goto label12;

     label11:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("app_version");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("app_version", $r2);

     label12:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("country");

     label13:
        if $z0 == 0 goto label15;

     label14:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("country");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", $r2);

     label15:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("device_model");

     label16:
        if $z0 == 0 goto label18;

     label17:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("device_model");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("device_model", $r2);

     label18:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("carrier");

     label19:
        if $z0 == 0 goto label21;

     label20:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("carrier");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("carrier", $r2);

     label21:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("language");

     label22:
        if $z0 == 0 goto label24;

     label23:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("language");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", $r2);

     label24:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("channel");

     label25:
        if $z0 == 0 goto label27;

     label26:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("channel");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("channel", $r2);

     label27:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("body");

        $r3 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>("event");

     label28:
        if $r3 == null goto label40;

        $i1 = 0;

     label29:
        $i2 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

     label30:
        if $i1 >= $i2 goto label40;

     label31:
        $r4 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>($i1);

     label32:
        if $r4 == null goto label39;

     label33:
        $z0 = virtualinvoke $r4.<org.json.JSONObject: boolean has(java.lang.String)>("label");

     label34:
        if $z0 == 0 goto label36;

     label35:
        $r2 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("label");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r2);

        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("label", $r2);

     label36:
        $z0 = virtualinvoke $r4.<org.json.JSONObject: boolean has(java.lang.String)>("tag");

     label37:
        if $z0 == 0 goto label39;

     label38:
        $r2 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("tag");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r2);

        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("tag", $r2);

     label39:
        $i1 = $i1 + 1;

        goto label29;

     label40:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>("error");

     label41:
        if $r3 == null goto label50;

     label42:
        $i1 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

     label43:
        if $i0 >= $i1 goto label50;

     label44:
        $r1 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>($i0);

     label45:
        if $r1 == null goto label49;

     label46:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("context");

     label47:
        if $z0 == 0 goto label49;

     label48:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("context");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r2);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("context", $r2);

     label49:
        $i0 = $i0 + 1;

        goto label42;

     label50:
        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

     label51:
        return $r2;

     label52:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        return $r2;

        catch java.lang.Exception from label01 to label02 with label52;
        catch java.lang.Exception from label03 to label04 with label52;
        catch java.lang.Exception from label05 to label07 with label52;
        catch java.lang.Exception from label08 to label10 with label52;
        catch java.lang.Exception from label11 to label13 with label52;
        catch java.lang.Exception from label14 to label16 with label52;
        catch java.lang.Exception from label17 to label19 with label52;
        catch java.lang.Exception from label20 to label22 with label52;
        catch java.lang.Exception from label23 to label25 with label52;
        catch java.lang.Exception from label26 to label28 with label52;
        catch java.lang.Exception from label29 to label30 with label52;
        catch java.lang.Exception from label31 to label32 with label52;
        catch java.lang.Exception from label33 to label34 with label52;
        catch java.lang.Exception from label35 to label37 with label52;
        catch java.lang.Exception from label38 to label39 with label52;
        catch java.lang.Exception from label40 to label41 with label52;
        catch java.lang.Exception from label42 to label43 with label52;
        catch java.lang.Exception from label44 to label45 with label52;
        catch java.lang.Exception from label46 to label47 with label52;
        catch java.lang.Exception from label48 to label49 with label52;
        catch java.lang.Exception from label50 to label51 with label52;
    }

    public static java.util.Date b(android.content.Context)
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r1;
        java.util.Date $r3;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("exchange_last_request_time", 0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("last_request_time", "1900-01-01 00:00:00");

        $r3 = staticinvoke <com.umeng.fb.h: java.util.Date a(java.lang.String)>($r2);

        return $r3;
    }

    public static org.json.JSONObject c(android.content.Context)
    {
        java.lang.Throwable $r18;
        android.content.Context $r0;
        android.content.pm.PackageManager $r6;
        android.content.pm.PackageManager$NameNotFoundException $r27;
        android.view.WindowManager $r14;
        java.lang.String[] $r17;
        android.content.pm.PackageInfo $r7;
        org.json.JSONObject $r1, $r23;
        java.util.Calendar $r11;
        android.content.ContentResolver $r9;
        java.util.Locale $r10;
        android.telephony.TelephonyManager $r3;
        int $i0, $i1;
        android.view.Display $r15;
        java.lang.String $r4, $r5;
        boolean $z0;
        java.util.TimeZone $r12;
        android.util.DisplayMetrics $r13, $r25;
        java.lang.Exception $r19, $r20, $r21, $r22;
        android.content.res.Configuration $r8, $r24;
        java.lang.Object $r2;
        java.lang.StringBuilder $r16, $r26;

        $r0 := @parameter0: android.content.Context;

        $r23 = new org.json.JSONObject;

        $r1 = $r23;

        specialinvoke $r23.<org.json.JSONObject: void <init>()>();

     label01:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r3 = (android.telephony.TelephonyManager) $r2;

        $r4 = staticinvoke <com.umeng.common.b: java.lang.String h(android.content.Context)>($r0);

     label02:
        if $r4 == null goto label05;

     label03:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

     label04:
        if $z0 == 0 goto label08;

     label05:
        $z0 = <com.umeng.fb.g: boolean h>;

        if $z0 == 0 goto label07;

     label06:
        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String)>("MobclickAgent", "No device id");

     label07:
        return null;

     label08:
        $r5 = staticinvoke <com.umeng.common.b: java.lang.String g(android.content.Context)>($r0);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("device_id", $r5);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("idmd5", $r4);

     label09:
        $r4 = <android.os.Build: java.lang.String MODEL>;

     label10:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("device_model", $r4);

        $r4 = staticinvoke <com.umeng.common.b: java.lang.String q(android.content.Context)>($r0);

     label11:
        if $r4 != null goto label14;

        $z0 = <com.umeng.fb.g: boolean h>;

        if $z0 == 0 goto label13;

     label12:
        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String)>("MobclickAgent", "No appkey");

     label13:
        return null;

     label14:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("appkey", $r4);

     label15:
        $r4 = <com.umeng.fb.g: java.lang.String m>;

        if $r4 == null goto label46;

        $r4 = <com.umeng.fb.g: java.lang.String m>;

     label16:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("channel", $r4);

     label17:
        $r6 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r4, 0);

     label18:
        $r4 = $r7.<android.content.pm.PackageInfo: java.lang.String versionName>;

        $i0 = $r7.<android.content.pm.PackageInfo: int versionCode>;

     label19:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("app_version", $r4);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("version_code", $i0);

     label20:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sdk_type", "Android");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sdk_version", "4.2.0.20130308");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("os", "Android");

     label21:
        $r4 = <android.os.Build$VERSION: java.lang.String RELEASE>;

     label22:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("os_version", $r4);

     label23:
        $r24 = new android.content.res.Configuration;

        $r8 = $r24;

     label24:
        specialinvoke $r24.<android.content.res.Configuration: void <init>()>();

        $r9 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>($r9, $r8);

     label25:
        if $r8 == null goto label58;

     label26:
        $r10 = $r8.<android.content.res.Configuration: java.util.Locale locale>;

     label27:
        if $r10 == null goto label58;

     label28:
        $r10 = $r8.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = virtualinvoke $r10.<java.util.Locale: java.lang.String getCountry()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", $r4);

        $r10 = $r8.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = virtualinvoke $r10.<java.util.Locale: java.lang.String toString()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", $r4);

        $r10 = $r8.<android.content.res.Configuration: java.util.Locale locale>;

        $r11 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r10);

     label29:
        if $r11 == null goto label56;

     label30:
        $r12 = virtualinvoke $r11.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

     label31:
        if $r12 == null goto label54;

     label32:
        $i0 = virtualinvoke $r12.<java.util.TimeZone: int getRawOffset()>();

     label33:
        $i0 = $i0 / 3600000;

     label34:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", $i0);

     label35:
        $r25 = new android.util.DisplayMetrics;

        $r13 = $r25;

     label36:
        specialinvoke $r25.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r14 = (android.view.WindowManager) $r2;

     label37:
        $r15 = interfaceinvoke $r14.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r15.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r13);

        $i0 = $r13.<android.util.DisplayMetrics: int widthPixels>;

        $i1 = $r13.<android.util.DisplayMetrics: int heightPixels>;

     label38:
        $r26 = new java.lang.StringBuilder;

        $r16 = $r26;

     label39:
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("resolution", $r4);

     label40:
        $r17 = staticinvoke <com.umeng.common.b: java.lang.String[] k(android.content.Context)>($r0);

        $r4 = $r17[0];

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("access", $r4);

        $r4 = $r17[0];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("2G/3G");

     label41:
        if $z0 == 0 goto label43;

     label42:
        $r4 = $r17[1];

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("access_subtype", $r4);

     label43:
        $r4 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("carrier", $r4);

     label44:
        $r4 = staticinvoke <com.umeng.common.b: java.lang.String a()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("cpu", $r4);

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("package", $r4);

     label45:
        return $r1;

     label46:
        $r4 = staticinvoke <com.umeng.common.b: java.lang.String u(android.content.Context)>($r0);

     label47:
        goto label16;

     label48:
        $r18 := @caughtexception;

        $z0 = <com.umeng.fb.g: boolean h>;

        if $z0 == 0 goto label50;

     label49:
        staticinvoke <com.umeng.common.Log: void a(java.lang.String,java.lang.String)>("MobclickAgent", "read version fail");

        $r27 = (android.content.pm.PackageManager$NameNotFoundException) $r18;

        virtualinvoke $r27.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

     label50:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("app_version", "unknown");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("version_code", "unknown");

     label51:
        goto label20;

     label52:
        $r19 := @caughtexception;

        $z0 = <com.umeng.fb.g: boolean h>;

        if $z0 == 0 goto label53;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String)>("MobclickAgent", "getMessageHeader error");

        virtualinvoke $r19.<java.lang.Exception: void printStackTrace()>();

     label53:
        return null;

     label54:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", 8);

     label55:
        goto label35;

     label56:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", 8);

     label57:
        goto label35;

     label58:
        $r10 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label59:
        $z0 = <com.umeng.fb.g: boolean l>;

        if $z0 == 0 goto label82;

        if $r10 == null goto label82;

     label60:
        $r4 = virtualinvoke $r10.<java.util.Locale: java.lang.String getCountry()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label61:
        if $z0 != 0 goto label74;

     label62:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", $r4);

     label63:
        $r4 = virtualinvoke $r10.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label64:
        if $z0 != 0 goto label76;

     label65:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", $r4);

     label66:
        $r11 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r10);

     label67:
        if $r11 == null goto label80;

     label68:
        $r12 = virtualinvoke $r11.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

     label69:
        if $r12 == null goto label78;

     label70:
        $i0 = virtualinvoke $r12.<java.util.TimeZone: int getRawOffset()>();

     label71:
        $i0 = $i0 / 3600000;

     label72:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", $i0);

     label73:
        goto label35;

     label74:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", "Unknown");

     label75:
        goto label63;

     label76:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", "Unknown");

     label77:
        goto label66;

     label78:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", 8);

     label79:
        goto label35;

     label80:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", 8);

     label81:
        goto label35;

     label82:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("country", "Unknown");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("language", "Unknown");

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timezone", 8);

     label83:
        goto label35;

     label84:
        $r20 := @caughtexception;

        $z0 = <com.umeng.fb.g: boolean h>;

        if $z0 == 0 goto label86;

     label85:
        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String)>("MobclickAgent", "read resolution fail");

        virtualinvoke $r20.<java.lang.Exception: void printStackTrace()>();

     label86:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("resolution", "Unknown");

     label87:
        goto label40;

     label88:
        $r21 := @caughtexception;

        $z0 = <com.umeng.fb.g: boolean h>;

        if $z0 == 0 goto label90;

     label89:
        staticinvoke <com.umeng.common.Log: void a(java.lang.String,java.lang.String)>("MobclickAgent", "read access fail");

        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

     label90:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("access", "Unknown");

     label91:
        goto label43;

     label92:
        $r22 := @caughtexception;

        $z0 = <com.umeng.fb.g: boolean h>;

        if $z0 == 0 goto label94;

     label93:
        staticinvoke <com.umeng.common.Log: void a(java.lang.String,java.lang.String)>("MobclickAgent", "read carrier fail");

        virtualinvoke $r22.<java.lang.Exception: void printStackTrace()>();

     label94:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("carrier", "Unknown");

     label95:
        goto label44;

        catch java.lang.Exception from label01 to label02 with label52;
        catch java.lang.Exception from label03 to label04 with label52;
        catch java.lang.Exception from label06 to label07 with label52;
        catch java.lang.Exception from label08 to label09 with label52;
        catch java.lang.Exception from label10 to label11 with label52;
        catch java.lang.Exception from label12 to label13 with label52;
        catch java.lang.Exception from label14 to label15 with label52;
        catch java.lang.Exception from label16 to label17 with label52;
        catch android.content.pm.PackageManager$NameNotFoundException from label17 to label18 with label48;
        catch android.content.pm.PackageManager$NameNotFoundException from label19 to label20 with label48;
        catch java.lang.Exception from label17 to label20 with label52;
        catch java.lang.Exception from label20 to label21 with label52;
        catch java.lang.Exception from label22 to label23 with label52;
        catch java.lang.Exception from label24 to label25 with label52;
        catch java.lang.Exception from label26 to label27 with label52;
        catch java.lang.Exception from label28 to label29 with label52;
        catch java.lang.Exception from label30 to label31 with label52;
        catch java.lang.Exception from label32 to label33 with label52;
        catch java.lang.Exception from label34 to label35 with label52;
        catch java.lang.Exception from label36 to label37 with label84;
        catch java.lang.Exception from label37 to label38 with label84;
        catch java.lang.Exception from label39 to label40 with label84;
        catch java.lang.Exception from label40 to label41 with label88;
        catch java.lang.Exception from label42 to label43 with label88;
        catch java.lang.Exception from label43 to label44 with label92;
        catch java.lang.Exception from label44 to label45 with label52;
        catch java.lang.Exception from label46 to label47 with label52;
        catch java.lang.Exception from label49 to label51 with label52;
        catch java.lang.Exception from label54 to label55 with label52;
        catch java.lang.Exception from label56 to label57 with label52;
        catch java.lang.Exception from label58 to label59 with label52;
        catch java.lang.Exception from label60 to label61 with label52;
        catch java.lang.Exception from label62 to label64 with label52;
        catch java.lang.Exception from label65 to label67 with label52;
        catch java.lang.Exception from label68 to label69 with label52;
        catch java.lang.Exception from label70 to label71 with label52;
        catch java.lang.Exception from label72 to label73 with label52;
        catch java.lang.Exception from label74 to label75 with label52;
        catch java.lang.Exception from label76 to label77 with label52;
        catch java.lang.Exception from label78 to label79 with label52;
        catch java.lang.Exception from label80 to label81 with label52;
        catch java.lang.Exception from label82 to label83 with label52;
        catch java.lang.Exception from label85 to label87 with label52;
        catch java.lang.Exception from label89 to label91 with label52;
        catch java.lang.Exception from label93 to label95 with label52;
    }
}
