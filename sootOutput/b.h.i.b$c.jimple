final class b.h.i.b$c extends java.lang.Object implements b.h.i.c$d
{
    final java.lang.String a;

    void <init>(java.lang.String)
    {
        java.lang.String $r1;
        b.h.i.b$c r0;

        r0 := @this: b.h.i.b$c;

        $r1 := @parameter0: java.lang.String;

        r0.<b.h.i.b$c: java.lang.String a> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile void a(java.lang.Object)
    {
        java.lang.Object $r1;
        b.h.i.b$g $r2;
        b.h.i.b$c r0;

        r0 := @this: b.h.i.b$c;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (b.h.i.b$g) $r1;

        virtualinvoke r0.<b.h.i.b$c: void b(b.h.i.b$g)>($r2);

        return;
    }

    public void b(b.h.i.b$g)
    {
        java.lang.Throwable $r8;
        b.h.i.c$d $r7;
        b.h.i.b$g $r2;
        b.h.i.b$c r0;
        b.e.g $r4;
        java.util.ArrayList $r6;
        int $i0, $i1;
        java.lang.Object $r3, $r5;
        java.lang.String $r1;

        r0 := @this: b.h.i.b$c;

        $r2 := @parameter0: b.h.i.b$g;

        $r3 = <b.h.i.b: java.lang.Object c>;

        entermonitor $r3;

     label1:
        $r4 = <b.h.i.b: b.e.g d>;

        $r1 = r0.<b.h.i.b$c: java.lang.String a>;

        $r5 = virtualinvoke $r4.<b.e.g: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (java.util.ArrayList) $r5;

        if $r6 != null goto label3;

        exitmonitor $r3;

     label2:
        return;

     label3:
        $r4 = <b.h.i.b: b.e.g d>;

        $r1 = r0.<b.h.i.b$c: java.lang.String a>;

        virtualinvoke $r4.<b.e.g: java.lang.Object remove(java.lang.Object)>($r1);

        exitmonitor $r3;

     label4:
        $i0 = 0;

     label5:
        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label6;

        $r3 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r7 = (b.h.i.c$d) $r3;

        interfaceinvoke $r7.<b.h.i.c$d: void a(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label5;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor $r3;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
