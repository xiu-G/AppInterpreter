public final class com.google.zxing.common.reedsolomon.ReedSolomonDecoder extends java.lang.Object
{
    private final com.google.zxing.common.reedsolomon.GF256 field;

    public void <init>(com.google.zxing.common.reedsolomon.GF256)
    {
        com.google.zxing.common.reedsolomon.GF256 $r1;
        com.google.zxing.common.reedsolomon.ReedSolomonDecoder r0;

        r0 := @this: com.google.zxing.common.reedsolomon.ReedSolomonDecoder;

        $r1 := @parameter0: com.google.zxing.common.reedsolomon.GF256;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field> = $r1;

        return;
    }

    private int[] findErrorLocations(com.google.zxing.common.reedsolomon.GF256Poly) throws com.google.zxing.common.reedsolomon.ReedSolomonException
    {
        com.google.zxing.common.reedsolomon.GF256Poly $r1;
        com.google.zxing.common.reedsolomon.ReedSolomonDecoder r0;
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        com.google.zxing.common.reedsolomon.GF256 $r3;
        com.google.zxing.common.reedsolomon.ReedSolomonException $r4;

        r0 := @this: com.google.zxing.common.reedsolomon.ReedSolomonDecoder;

        $r1 := @parameter0: com.google.zxing.common.reedsolomon.GF256Poly;

        $i0 = 1;

        $i1 = virtualinvoke $r1.<com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        if $i1 != 1 goto label1;

        $r2 = newarray (int)[1];

        $i0 = virtualinvoke $r1.<com.google.zxing.common.reedsolomon.GF256Poly: int getCoefficient(int)>(1);

        $r2[0] = $i0;

        return $r2;

     label1:
        $r2 = newarray (int)[$i1];

        $i2 = 0;

     label2:
        if $i0 >= 256 goto label4;

        if $i2 >= $i1 goto label4;

        $i3 = virtualinvoke $r1.<com.google.zxing.common.reedsolomon.GF256Poly: int evaluateAt(int)>($i0);

        if $i3 != 0 goto label3;

        $r3 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i3 = virtualinvoke $r3.<com.google.zxing.common.reedsolomon.GF256: int inverse(int)>($i0);

        $r2[$i2] = $i3;

        $i2 = $i2 + 1;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        if $i2 == $i1 goto label5;

        $r4 = new com.google.zxing.common.reedsolomon.ReedSolomonException;

        specialinvoke $r4.<com.google.zxing.common.reedsolomon.ReedSolomonException: void <init>(java.lang.String)>("Error locator degree does not match number of roots");

        throw $r4;

     label5:
        return $r2;
    }

    private int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GF256Poly, int[], boolean)
    {
        com.google.zxing.common.reedsolomon.GF256Poly $r1;
        com.google.zxing.common.reedsolomon.ReedSolomonDecoder r0;
        int[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.google.zxing.common.reedsolomon.GF256 $r4, $r5;
        boolean $z0;

        r0 := @this: com.google.zxing.common.reedsolomon.ReedSolomonDecoder;

        $r1 := @parameter0: com.google.zxing.common.reedsolomon.GF256Poly;

        $r2 := @parameter1: int[];

        $z0 := @parameter2: boolean;

        $i0 = lengthof $r2;

        $r3 = newarray (int)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label8;

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i2 = $r2[$i1];

        $i2 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: int inverse(int)>($i2);

        $i3 = 1;

        $i4 = 0;

     label2:
        if $i4 >= $i0 goto label6;

        if $i1 == $i4 goto label4;

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i5 = $r2[$i4];

        $i5 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: int multiply(int,int)>($i5, $i2);

        $i6 = $i5 & 1;

        if $i6 != 0 goto label5;

        $i5 = $i5 | 1;

     label3:
        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i3 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: int multiply(int,int)>($i3, $i5);

     label4:
        $i4 = $i4 + 1;

        goto label2;

     label5:
        $i5 = $i5 & -2;

        goto label3;

     label6:
        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i4 = virtualinvoke $r1.<com.google.zxing.common.reedsolomon.GF256Poly: int evaluateAt(int)>($i2);

        $r5 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i3 = virtualinvoke $r5.<com.google.zxing.common.reedsolomon.GF256: int inverse(int)>($i3);

        $i4 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: int multiply(int,int)>($i4, $i3);

        $r3[$i1] = $i4;

        if $z0 == 0 goto label7;

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i4 = $r3[$i1];

        $i2 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: int multiply(int,int)>($i4, $i2);

        $r3[$i1] = $i2;

     label7:
        $i1 = $i1 + 1;

        goto label1;

     label8:
        return $r3;
    }

    private com.google.zxing.common.reedsolomon.GF256Poly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GF256Poly, com.google.zxing.common.reedsolomon.GF256Poly, int) throws com.google.zxing.common.reedsolomon.ReedSolomonException
    {
        com.google.zxing.common.reedsolomon.GF256Poly[] $r12;
        com.google.zxing.common.reedsolomon.ReedSolomonDecoder r0;
        int $i0, $i1, $i2, $i3;
        com.google.zxing.common.reedsolomon.GF256 $r4;
        com.google.zxing.common.reedsolomon.ReedSolomonException $r9;
        boolean $z0;
        com.google.zxing.common.reedsolomon.GF256Poly $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11;

        r0 := @this: com.google.zxing.common.reedsolomon.ReedSolomonDecoder;

        $r2 := @parameter0: com.google.zxing.common.reedsolomon.GF256Poly;

        $r3 := @parameter1: com.google.zxing.common.reedsolomon.GF256Poly;

        $i0 := @parameter2: int;

        $i1 = virtualinvoke $r2.<com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i2 = virtualinvoke $r3.<com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        if $i1 >= $i2 goto label8;

     label1:
        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $r5 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: com.google.zxing.common.reedsolomon.GF256Poly getOne()>();

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $r6 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: com.google.zxing.common.reedsolomon.GF256Poly getZero()>();

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $r8 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: com.google.zxing.common.reedsolomon.GF256Poly getZero()>();

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $r7 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: com.google.zxing.common.reedsolomon.GF256Poly getOne()>();

     label2:
        $i1 = virtualinvoke $r2.<com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i2 = $i0 / 2;

        if $i1 < $i2 goto label6;

        $z0 = virtualinvoke $r2.<com.google.zxing.common.reedsolomon.GF256Poly: boolean isZero()>();

        if $z0 == 0 goto label3;

        $r9 = new com.google.zxing.common.reedsolomon.ReedSolomonException;

        specialinvoke $r9.<com.google.zxing.common.reedsolomon.ReedSolomonException: void <init>(java.lang.String)>("r_{i-1} was zero");

        throw $r9;

     label3:
        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $r1 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: com.google.zxing.common.reedsolomon.GF256Poly getZero()>();

        $i1 = virtualinvoke $r2.<com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i1 = virtualinvoke $r2.<com.google.zxing.common.reedsolomon.GF256Poly: int getCoefficient(int)>($i1);

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i1 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: int inverse(int)>($i1);

        $r10 = $r1;

        $r1 = $r3;

     label4:
        $i2 = virtualinvoke $r1.<com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i3 = virtualinvoke $r2.<com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        if $i2 < $i3 goto label5;

        $z0 = virtualinvoke $r1.<com.google.zxing.common.reedsolomon.GF256Poly: boolean isZero()>();

        if $z0 != 0 goto label5;

        $i2 = virtualinvoke $r1.<com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i3 = virtualinvoke $r2.<com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i2 = $i2 - $i3;

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i3 = virtualinvoke $r1.<com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i3 = virtualinvoke $r1.<com.google.zxing.common.reedsolomon.GF256Poly: int getCoefficient(int)>($i3);

        $i3 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: int multiply(int,int)>($i3, $i1);

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $r3 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: com.google.zxing.common.reedsolomon.GF256Poly buildMonomial(int,int)>($i2, $i3);

        $r10 = virtualinvoke $r10.<com.google.zxing.common.reedsolomon.GF256Poly: com.google.zxing.common.reedsolomon.GF256Poly addOrSubtract(com.google.zxing.common.reedsolomon.GF256Poly)>($r3);

        $r3 = virtualinvoke $r2.<com.google.zxing.common.reedsolomon.GF256Poly: com.google.zxing.common.reedsolomon.GF256Poly multiplyByMonomial(int,int)>($i2, $i3);

        $r1 = virtualinvoke $r1.<com.google.zxing.common.reedsolomon.GF256Poly: com.google.zxing.common.reedsolomon.GF256Poly addOrSubtract(com.google.zxing.common.reedsolomon.GF256Poly)>($r3);

        goto label4;

     label5:
        $r3 = virtualinvoke $r10.<com.google.zxing.common.reedsolomon.GF256Poly: com.google.zxing.common.reedsolomon.GF256Poly multiply(com.google.zxing.common.reedsolomon.GF256Poly)>($r6);

        $r11 = virtualinvoke $r3.<com.google.zxing.common.reedsolomon.GF256Poly: com.google.zxing.common.reedsolomon.GF256Poly addOrSubtract(com.google.zxing.common.reedsolomon.GF256Poly)>($r5);

        $r3 = virtualinvoke $r10.<com.google.zxing.common.reedsolomon.GF256Poly: com.google.zxing.common.reedsolomon.GF256Poly multiply(com.google.zxing.common.reedsolomon.GF256Poly)>($r7);

        $r8 = virtualinvoke $r3.<com.google.zxing.common.reedsolomon.GF256Poly: com.google.zxing.common.reedsolomon.GF256Poly addOrSubtract(com.google.zxing.common.reedsolomon.GF256Poly)>($r8);

        $r3 = $r2;

        $r2 = $r1;

        $r5 = $r6;

        $r6 = $r11;

        $r1 = $r7;

        $r7 = $r8;

        $r8 = $r1;

        goto label2;

     label6:
        $i0 = virtualinvoke $r7.<com.google.zxing.common.reedsolomon.GF256Poly: int getCoefficient(int)>(0);

        if $i0 != 0 goto label7;

        $r9 = new com.google.zxing.common.reedsolomon.ReedSolomonException;

        specialinvoke $r9.<com.google.zxing.common.reedsolomon.ReedSolomonException: void <init>(java.lang.String)>("sigmaTilde(0) was zero");

        throw $r9;

     label7:
        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i0 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: int inverse(int)>($i0);

        $r3 = virtualinvoke $r7.<com.google.zxing.common.reedsolomon.GF256Poly: com.google.zxing.common.reedsolomon.GF256Poly multiply(int)>($i0);

        $r2 = virtualinvoke $r2.<com.google.zxing.common.reedsolomon.GF256Poly: com.google.zxing.common.reedsolomon.GF256Poly multiply(int)>($i0);

        $r12 = newarray (com.google.zxing.common.reedsolomon.GF256Poly)[2];

        $r12[0] = $r3;

        $r12[1] = $r2;

        return $r12;

     label8:
        $r5 = $r3;

        $r3 = $r2;

        $r2 = $r5;

        goto label1;
    }

    public void decode(int[], int) throws com.google.zxing.common.reedsolomon.ReedSolomonException
    {
        com.google.zxing.common.reedsolomon.GF256Poly[] $r7;
        com.google.zxing.common.reedsolomon.ReedSolomonDecoder r0;
        int[] $r1, $r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        com.google.zxing.common.reedsolomon.GF256 $r4, $r5;
        com.google.zxing.common.reedsolomon.ReedSolomonException $r9;
        boolean $z0, $z1;
        com.google.zxing.common.reedsolomon.GF256Poly $r3, $r6;

        r0 := @this: com.google.zxing.common.reedsolomon.ReedSolomonDecoder;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 = 0;

        $r6 = new com.google.zxing.common.reedsolomon.GF256Poly;

        $r3 = $r6;

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        specialinvoke $r6.<com.google.zxing.common.reedsolomon.GF256Poly: void <init>(com.google.zxing.common.reedsolomon.GF256,int[])>($r4, $r1);

        $r2 = newarray (int)[$i0];

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $r5 = <com.google.zxing.common.reedsolomon.GF256: com.google.zxing.common.reedsolomon.GF256 DATA_MATRIX_FIELD>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        $i2 = 0;

        $z1 = 1;

     label1:
        if $i2 >= $i0 goto label5;

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        if $z0 == 0 goto label4;

        $i3 = $i2 + 1;

     label2:
        $i3 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: int exp(int)>($i3);

        $i3 = virtualinvoke $r3.<com.google.zxing.common.reedsolomon.GF256Poly: int evaluateAt(int)>($i3);

        $i4 = lengthof $r2;

        $i4 = $i4 + -1;

        $i4 = $i4 - $i2;

        $r2[$i4] = $i3;

        if $i3 == 0 goto label3;

        $z1 = 0;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        $i3 = $i2;

        goto label2;

     label5:
        if $z1 == 0 goto label6;

        return;

     label6:
        $r6 = new com.google.zxing.common.reedsolomon.GF256Poly;

        $r3 = $r6;

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        specialinvoke $r6.<com.google.zxing.common.reedsolomon.GF256Poly: void <init>(com.google.zxing.common.reedsolomon.GF256,int[])>($r4, $r2);

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $r6 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: com.google.zxing.common.reedsolomon.GF256Poly buildMonomial(int,int)>($i0, 1);

        $r7 = specialinvoke r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256Poly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GF256Poly,com.google.zxing.common.reedsolomon.GF256Poly,int)>($r6, $r3, $i0);

        $r3 = $r7[0];

        $r6 = $r7[1];

        $r2 = specialinvoke r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: int[] findErrorLocations(com.google.zxing.common.reedsolomon.GF256Poly)>($r3);

        $r8 = specialinvoke r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GF256Poly,int[],boolean)>($r6, $r2, $z0);

     label7:
        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label9;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $r4 = r0.<com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GF256 field>;

        $i2 = $r2[$i1];

        $i2 = virtualinvoke $r4.<com.google.zxing.common.reedsolomon.GF256: int log(int)>($i2);

        $i0 = $i0 - $i2;

        if $i0 >= 0 goto label8;

        $r9 = new com.google.zxing.common.reedsolomon.ReedSolomonException;

        specialinvoke $r9.<com.google.zxing.common.reedsolomon.ReedSolomonException: void <init>(java.lang.String)>("Bad error location");

        throw $r9;

     label8:
        $i2 = $r1[$i0];

        $i3 = $r8[$i1];

        $i2 = staticinvoke <com.google.zxing.common.reedsolomon.GF256: int addOrSubtract(int,int)>($i2, $i3);

        $r1[$i0] = $i2;

        $i1 = $i1 + 1;

        goto label7;

     label9:
        return;
    }
}
