public class proguard.ConfigurationParser extends java.lang.Object
{
    private java.lang.String lastComments;
    private java.lang.String nextWord;
    private proguard.WordReader reader;

    public void <init>(java.io.File) throws java.io.IOException
    {
        proguard.ConfigurationParser r0;
        java.io.File $r1;
        proguard.FileWordReader $r2;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new proguard.FileWordReader;

        specialinvoke $r2.<proguard.FileWordReader: void <init>(java.io.File)>($r1);

        r0.<proguard.ConfigurationParser: proguard.WordReader reader> = $r2;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return;
    }

    public void <init>(java.net.URL) throws java.io.IOException
    {
        proguard.ConfigurationParser r0;
        java.net.URL $r1;
        proguard.FileWordReader $r2;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.net.URL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new proguard.FileWordReader;

        specialinvoke $r2.<proguard.FileWordReader: void <init>(java.net.URL)>($r1);

        r0.<proguard.ConfigurationParser: proguard.WordReader reader> = $r2;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return;
    }

    public void <init>(java.lang.String[]) throws java.io.IOException
    {
        proguard.ConfigurationParser r0;
        java.lang.String[] $r1;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<proguard.ConfigurationParser: void <init>(java.lang.String[],java.io.File)>($r1, null);

        return;
    }

    public void <init>(java.lang.String[], java.io.File) throws java.io.IOException
    {
        proguard.ArgumentWordReader $r3;
        proguard.ConfigurationParser r0;
        java.lang.String[] $r1;
        java.io.File $r2;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new proguard.ArgumentWordReader;

        specialinvoke $r3.<proguard.ArgumentWordReader: void <init>(java.lang.String[],java.io.File)>($r1, $r2);

        r0.<proguard.ConfigurationParser: proguard.WordReader reader> = $r3;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return;
    }

    private void checkFieldAccessFlags(int, int) throws proguard.ParseException
    {
        proguard.WordReader $r2;
        java.lang.StringBuffer $r1, $r4;
        int $i0, $i1;
        proguard.ConfigurationParser r0;
        java.lang.String $r3;
        proguard.ParseException $r5;

        r0 := @this: proguard.ConfigurationParser;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 | $i1;

        $i1 = -20704;

        $i0 = $i0 & $i1;

        if $i0 == 0 goto label1;

        $r5 = new proguard.ParseException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid method access modifier for field before ");

        $r2 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r3 = virtualinvoke $r2.<proguard.WordReader: java.lang.String locationDescription()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<proguard.ParseException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label1:
        return;
    }

    private void checkJavaIdentifier(java.lang.String) throws proguard.ParseException
    {
        proguard.WordReader $r5;
        java.lang.StringBuffer $r4;
        proguard.ConfigurationParser r0;
        java.lang.String $r1, $r2;
        proguard.ParseException $r3;
        boolean $z0;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean isJavaIdentifier(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new proguard.ParseException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" before ");

        $r5 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r5.<proguard.WordReader: java.lang.String locationDescription()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label1:
        return;
    }

    private void checkMethodAccessFlags(int, int) throws proguard.ParseException
    {
        proguard.WordReader $r2;
        java.lang.StringBuffer $r1, $r4;
        int $i0, $i1;
        proguard.ConfigurationParser r0;
        java.lang.String $r3;
        proguard.ParseException $r5;

        r0 := @this: proguard.ConfigurationParser;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 | $i1;

        $i1 = -7680;

        $i0 = $i0 & $i1;

        if $i0 == 0 goto label1;

        $r5 = new proguard.ParseException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid field access modifier for method before ");

        $r2 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r3 = virtualinvoke $r2.<proguard.WordReader: java.lang.String locationDescription()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<proguard.ParseException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label1:
        return;
    }

    private boolean configurationEnd()
    {
        proguard.ConfigurationParser r0;
        boolean $z0;

        r0 := @this: proguard.ConfigurationParser;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean configurationEnd(boolean)>(0);

        return $z0;
    }

    private boolean configurationEnd(boolean)
    {
        proguard.ConfigurationParser r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: proguard.ConfigurationParser;

        $z0 := @parameter0: boolean;

        $r1 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        if $r1 == null goto label1;

        $r1 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z1 != 0 goto label1;

        if $z0 != 0 goto label2;

        $r1 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("@");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private java.io.File file(java.lang.String) throws proguard.ParseException
    {
        java.lang.Throwable $r5;
        proguard.WordReader $r3;
        proguard.ConfigurationParser r0;
        java.lang.String $r1;
        java.io.File $r2, $r4;
        boolean $z0;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<proguard.ConfigurationParser: java.lang.String replaceSystemProperties(java.lang.String)>($r1);

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean isAbsolute()>();

        if $z0 != 0 goto label4;

        $r2 = new java.io.File;

        $r3 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r4 = virtualinvoke $r3.<proguard.WordReader: java.io.File getBaseDir()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r1);

     label1:
        $r4 = virtualinvoke $r2.<java.io.File: java.io.File getCanonicalFile()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return $r2;

     label4:
        goto label1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private boolean isJavaIdentifier(java.lang.String)
    {
        int $i0, $i1;
        proguard.ConfigurationParser r0;
        char $c2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c2);

        if $z0 != 0 goto label2;

        $i1 = (int) $c2;

        if $i1 == 46 goto label2;

        $i1 = (int) $c2;

        if $i1 == 91 goto label2;

        $i1 = (int) $c2;

        if $i1 == 93 goto label2;

        $i1 = (int) $c2;

        if $i1 == 60 goto label2;

        $i1 = (int) $c2;

        if $i1 == 62 goto label2;

        $i1 = (int) $c2;

        if $i1 == 45 goto label2;

        $i1 = (int) $c2;

        if $i1 == 33 goto label2;

        $i1 = (int) $c2;

        if $i1 == 42 goto label2;

        $i1 = (int) $c2;

        if $i1 == 63 goto label2;

        $i1 = (int) $c2;

        if $i1 == 37 goto label2;

        return 0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Throwable $r4, $r5;
        java.lang.String[] $r0;
        java.io.IOException $r8;
        proguard.Configuration $r2, $r7;
        proguard.ConfigurationParser $r1, $r6;
        proguard.ParseException $r3;

        $r0 := @parameter0: java.lang.String[];

        $r6 = new proguard.ConfigurationParser;

        $r1 = $r6;

     label01:
        specialinvoke $r6.<proguard.ConfigurationParser: void <init>(java.lang.String[])>($r0);

     label02:
        $r7 = new proguard.Configuration;

     label03:
        $r2 = $r7;

     label04:
        specialinvoke $r7.<proguard.Configuration: void <init>()>();

        virtualinvoke $r1.<proguard.ConfigurationParser: void parse(proguard.Configuration)>($r2);

     label05:
        virtualinvoke $r1.<proguard.ConfigurationParser: void close()>();

     label06:
        return;

     label07:
        $r3 := @caughtexception;

     label08:
        virtualinvoke $r3.<proguard.ParseException: void printStackTrace()>();

     label09:
        virtualinvoke $r1.<proguard.ConfigurationParser: void close()>();

     label10:
        return;

     label11:
        $r4 := @caughtexception;

        $r8 = (java.io.IOException) $r4;

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

        return;

     label12:
        $r5 := @caughtexception;

     label13:
        virtualinvoke $r1.<proguard.ConfigurationParser: void close()>();

        throw $r5;

     label14:
        nop;

        catch java.io.IOException from label01 to label02 with label11;
        catch proguard.ParseException from label04 to label05 with label07;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label13 to label14 with label11;
    }

    private void parseBaseDirectoryArgument() throws proguard.ParseException, java.io.IOException
    {
        proguard.WordReader $r2;
        proguard.ConfigurationParser r0;
        java.lang.String $r3;
        java.io.File $r1;

        r0 := @this: proguard.ConfigurationParser;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("base directory name");

        $r2 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r3 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r1 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File file(java.lang.String)>($r3);

        virtualinvoke $r2.<proguard.WordReader: void setBaseDir(java.io.File)>($r1);

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return;
    }

    private proguard.ClassPath parseClassPathArgument(proguard.ClassPath, boolean) throws proguard.ParseException, java.io.IOException
    {
        java.util.List[] $r3;
        proguard.ClassPath $r1, $r10;
        proguard.ClassPathEntry $r2, $r11;
        java.lang.StringBuffer $r8, $r12;
        int $i0, $i1;
        proguard.ConfigurationParser r0;
        java.lang.String $r4, $r6;
        boolean $z0, $z1;
        proguard.WordReader $r9;
        java.io.File $r5;
        java.util.List $r7;
        proguard.ParseException $r13;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: proguard.ClassPath;

        $z0 := @parameter1: boolean;

        if $r1 != null goto label9;

        $r10 = new proguard.ClassPath;

        specialinvoke $r10.<proguard.ClassPath: void <init>()>();

        $r1 = $r10;

     label1:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("jar or directory name");

        $r11 = new proguard.ClassPathEntry;

        $r2 = $r11;

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r5 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File file(java.lang.String)>($r4);

        specialinvoke $r11.<proguard.ClassPathEntry: void <init>(java.io.File,boolean)>($r5, $z0);

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        $z1 = specialinvoke r0.<proguard.ConfigurationParser: boolean configurationEnd()>();

        if $z1 != 0 goto label6;

        $r4 = "(";

        $r6 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label6;

        $r3 = newarray (java.util.List)[5];

        $i1 = 0;

     label2:
        $i0 = $i1 + 1;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("filter", 1, 0, 1, 0, 1, 0, 0, null);

        $r3[$i1] = $r7;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label3;

        $r4 = ";";

        $r6 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label8;

     label3:
        $r4 = ")";

        $r6 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label4;

        $r13 = new proguard.ParseException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting separating \',\' or \';\', or closing \')\' before ");

        $r9 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r4 = virtualinvoke $r9.<proguard.WordReader: java.lang.String locationDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<proguard.ParseException: void <init>(java.lang.String)>($r4);

        throw $r13;

     label4:
        $i1 = -1;

        $i0 = $i0 + $i1;

        $r7 = $r3[$i0];

        virtualinvoke $r2.<proguard.ClassPathEntry: void setFilter(java.util.List)>($r7);

        if $i0 <= 0 goto label5;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r7 = $r3[$i0];

        virtualinvoke $r2.<proguard.ClassPathEntry: void setJarFilter(java.util.List)>($r7);

        if $i0 <= 0 goto label5;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r7 = $r3[$i0];

        virtualinvoke $r2.<proguard.ClassPathEntry: void setWarFilter(java.util.List)>($r7);

        if $i0 <= 0 goto label5;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r7 = $r3[$i0];

        virtualinvoke $r2.<proguard.ClassPathEntry: void setEarFilter(java.util.List)>($r7);

        if $i0 <= 0 goto label5;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r7 = $r3[$i0];

        virtualinvoke $r2.<proguard.ClassPathEntry: void setZipFilter(java.util.List)>($r7);

     label5:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

     label6:
        virtualinvoke $r1.<proguard.ClassPath: boolean add(proguard.ClassPathEntry)>($r2);

        $z1 = specialinvoke r0.<proguard.ConfigurationParser: boolean configurationEnd()>();

        if $z1 == 0 goto label7;

        return $r1;

     label7:
        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r6 = <proguard.ConfigurationConstants: java.lang.String JAR_SEPARATOR_KEYWORD>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label1;

        $r13 = new proguard.ParseException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting class path separator \'");

        $r4 = <proguard.ConfigurationConstants: java.lang.String JAR_SEPARATOR_KEYWORD>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' before ");

        $r9 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r4 = virtualinvoke $r9.<proguard.WordReader: java.lang.String locationDescription()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<proguard.ParseException: void <init>(java.lang.String)>($r4);

        throw $r13;

     label8:
        $i1 = $i0;

        goto label2;

     label9:
        goto label1;
    }

    private java.util.List parseClassSpecificationArguments(java.util.List) throws proguard.ParseException, java.io.IOException
    {
        java.util.List $r1;
        proguard.ClassSpecification $r2;
        proguard.ConfigurationParser r0;
        java.lang.Object $r3;
        java.util.ArrayList $r4;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.util.List;

        if $r1 != null goto label2;

        $r4 = new java.util.ArrayList;

        $r3 = $r4;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label1:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String,boolean)>("keyword \'class\', \'interface\', or \'enum\'", 1);

        $r2 = specialinvoke r0.<proguard.ConfigurationParser: proguard.ClassSpecification parseClassSpecificationArguments()>();

        $r1 = (java.util.List) $r3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r1 = (java.util.List) $r3;

        return $r1;

     label2:
        $r3 = $r1;

        goto label1;
    }

    private proguard.ClassSpecification parseClassSpecificationArguments() throws proguard.ParseException, java.io.IOException
    {
        proguard.ClassSpecification $r11;
        java.lang.StringBuffer $r6;
        int $i0, $i1, $i2;
        proguard.ConfigurationParser r0;
        java.lang.String $r1, $r2, $r3, $r8, $r9, $r10;
        boolean $z0;
        proguard.WordReader $r7;
        java.util.List $r4;
        proguard.ParseException $r5;

        r0 := @this: proguard.ConfigurationParser;

        $i0 = 0;

        $i1 = 0;

        $r1 = null;

     label01:
        $r2 = "class";

        $r3 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label15;

        $r2 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $z0 == 0 goto label04;

        $r2 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

     label02:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("public");

        if $z0 == 0 goto label05;

        $i2 = 1;

     label03:
        if $i2 != 8192 goto label11;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String,boolean)>("annotation type or keyword \'interface\'", 0);

        $r3 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("interface");

        if $z0 != 0 goto label11;

        $r3 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("enum");

        if $z0 != 0 goto label11;

        $r3 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("class");

        if $z0 != 0 goto label11;

        $r4 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("annotation type", 0, 0, 0, 1, 0, 0, 1, null);

        $r1 = staticinvoke <proguard.util.ListUtil: java.lang.String commaSeparatedString(java.util.List,boolean)>($r4, 0);

        goto label01;

     label04:
        $r2 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        goto label02;

     label05:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("final");

        if $z0 == 0 goto label06;

        $i2 = 16;

        goto label03;

     label06:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("interface");

        if $z0 == 0 goto label07;

        $i2 = 512;

        goto label03;

     label07:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("abstract");

        if $z0 == 0 goto label08;

        $i2 = 1024;

        goto label03;

     label08:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("@");

        if $z0 == 0 goto label09;

        $i2 = 8192;

        goto label03;

     label09:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("enum");

        if $z0 == 0 goto label10;

        $i2 = 16384;

        goto label03;

     label10:
        $i2 = specialinvoke r0.<proguard.ConfigurationParser: int unknownAccessFlag()>();

        goto label03;

     label11:
        $r3 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label13;

        $i1 = $i2 | $i1;

     label12:
        $i2 = $i1 & $i0;

        if $i2 == 0 goto label14;

        $r5 = new proguard.ParseException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Conflicting class access modifiers for \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' before ");

        $r7 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r7.<proguard.WordReader: java.lang.String locationDescription()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label13:
        $i0 = $i2 | $i0;

        goto label12;

     label14:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("interface");

        if $z0 != 0 goto label27;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("enum");

        if $z0 != 0 goto label27;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("class");

        if $z0 == 0 goto label20;

     label15:
        $r4 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("class name or interface name", 1, 0, 0, 1, 0, 0, 0, null);

        $r2 = staticinvoke <proguard.util.ListUtil: java.lang.String commaSeparatedString(java.util.List,boolean)>($r4, 0);

        $r3 = "*";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label21;

        $r3 = null;

     label16:
        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean configurationEnd()>();

        if $z0 != 0 goto label26;

        $r8 = "implements";

        $r9 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label17;

        $r8 = "extends";

        $r9 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label26;

     label17:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String,boolean)>("class name or interface name", 1);

        $r8 = "@";

        $r9 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label25;

        $r4 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("annotation type", 1, 0, 0, 1, 0, 0, 1, null);

        $r8 = staticinvoke <proguard.util.ListUtil: java.lang.String commaSeparatedString(java.util.List,boolean)>($r4, 0);

     label18:
        $r4 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("class name or interface name", 0, 0, 0, 1, 0, 0, 0, null);

        $r9 = staticinvoke <proguard.util.ListUtil: java.lang.String commaSeparatedString(java.util.List,boolean)>($r4, 0);

        $r10 = "*";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label22;

        $r9 = null;

     label19:
        $r11 = new proguard.ClassSpecification;

        $r10 = r0.<proguard.ConfigurationParser: java.lang.String lastComments>;

        specialinvoke $r11.<proguard.ClassSpecification: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, $i1, $i0, $r1, $r3, $r8, $r9);

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean configurationEnd()>();

        if $z0 != 0 goto label28;

        $r1 = "{";

        $r3 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label24;

        $r5 = new proguard.ParseException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting opening \'{\' at ");

        $r7 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r7.<proguard.WordReader: java.lang.String locationDescription()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label20:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String,boolean)>("keyword \'class\', \'interface\', or \'enum\'", 1);

        goto label01;

     label21:
        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r2);

        goto label16;

     label22:
        $r9 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r9);

        goto label19;

     label23:
        specialinvoke r0.<proguard.ConfigurationParser: void parseMemberSpecificationArguments(java.lang.String,proguard.ClassSpecification)>($r2, $r11);

     label24:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String,boolean)>("class member description or closing \'}\'", 1);

        $r1 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("}");

        if $z0 == 0 goto label23;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return $r11;

     label25:
        $r8 = null;

        goto label18;

     label26:
        $r9 = null;

        $r8 = null;

        goto label19;

     label27:
        goto label15;

     label28:
        return $r11;
    }

    private int parseClassVersion() throws proguard.ParseException, java.io.IOException
    {
        proguard.WordReader $r4;
        java.lang.StringBuffer $r3;
        int $i0;
        proguard.ConfigurationParser r0;
        java.lang.String $r1;
        proguard.ParseException $r2;

        r0 := @this: proguard.ConfigurationParser;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("java version");

        $r1 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $i0 = staticinvoke <proguard.classfile.util.ClassUtil: int internalClassVersion(java.lang.String)>($r1);

        if $i0 != 0 goto label1;

        $r2 = new proguard.ParseException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported java version ");

        $r4 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r4.<proguard.WordReader: java.lang.String locationDescription()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return $i0;
    }

    private java.util.List parseCommaSeparatedList(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean, java.util.List) throws proguard.ParseException, java.io.IOException
    {
        java.util.ArrayList $r6;
        java.util.List $r2;
        int $i0;
        proguard.ConfigurationParser r0;
        java.lang.Object $r3;
        java.lang.String $r1, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        $z3 := @parameter4: boolean;

        $z4 := @parameter5: boolean;

        $z5 := @parameter6: boolean;

        $z6 := @parameter7: boolean;

        $r2 := @parameter8: java.util.List;

        if $r2 != null goto label12;

        $r6 = new java.util.ArrayList;

        $r3 = $r6;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

     label01:
        if $z0 == 0 goto label03;

        if $z2 != 0 goto label02;

        if $z1 != 0 goto label04;

     label02:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>($r1);

     label03:
        if $z2 == 0 goto label05;

        $r2 = (java.util.List) $r3;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label05;

        $r4 = ")";

        $r5 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label13;

        $r4 = ";";

        $r5 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label05;

        $r2 = (java.util.List) $r3;

        return $r2;

     label04:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean configurationEnd()>();

        if $z0 != 0 goto label14;

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 == 0 goto label03;

        $r2 = (java.util.List) $r3;

        return $r2;

     label05:
        if $z3 == 0 goto label06;

        specialinvoke r0.<proguard.ConfigurationParser: void checkJavaIdentifier(java.lang.String)>("java type");

     label06:
        if $z4 == 0 goto label07;

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r4 = specialinvoke r0.<proguard.ConfigurationParser: java.lang.String replaceSystemProperties(java.lang.String)>($r4);

        r0.<proguard.ConfigurationParser: java.lang.String nextWord> = $r4;

     label07:
        if $z5 == 0 goto label08;

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r4);

        r0.<proguard.ConfigurationParser: java.lang.String nextWord> = $r4;

     label08:
        if $z6 == 0 goto label09;

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r4);

        r0.<proguard.ConfigurationParser: java.lang.String nextWord> = $r4;

     label09:
        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r2 = (java.util.List) $r3;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        if $z2 == 0 goto label11;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("separating \',\' or closing \')\'");

     label10:
        $r4 = ",";

        $r5 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label15;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>($r1);

        goto label03;

     label11:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        goto label10;

     label12:
        $r3 = $r2;

        goto label01;

     label13:
        $r2 = (java.util.List) $r3;

        return $r2;

     label14:
        $r2 = (java.util.List) $r3;

        return $r2;

     label15:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private java.io.File parseFile() throws proguard.ParseException, java.io.IOException
    {
        proguard.ConfigurationParser r0;
        java.lang.String $r2;
        java.io.File $r1;

        r0 := @this: proguard.ConfigurationParser;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("file name");

        $r2 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r1 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File file(java.lang.String)>($r2);

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return $r1;
    }

    private long parseIncludeArgument(long) throws proguard.ParseException, java.io.IOException
    {
        proguard.WordReader $r1;
        proguard.ConfigurationParser r0;
        long $l0, $l1;
        java.lang.String $r3;
        proguard.FileWordReader $r2;
        java.io.File $r4;

        r0 := @this: proguard.ConfigurationParser;

        $l0 := @parameter0: long;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("configuration file name");

        $r3 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r4 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File file(java.lang.String)>($r3);

        $r1 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r2 = new proguard.FileWordReader;

        specialinvoke $r2.<proguard.FileWordReader: void <init>(java.io.File)>($r4);

        virtualinvoke $r1.<proguard.WordReader: void includeWordReader(proguard.WordReader)>($r2);

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        $l1 = virtualinvoke $r4.<java.io.File: long lastModified()>();

        $l0 = staticinvoke <java.lang.Math: long max(long,long)>($l0, $l1);

        return $l0;
    }

    private int parseIntegerArgument() throws proguard.ParseException, java.io.IOException
    {
        java.lang.Throwable $r2;
        proguard.WordReader $r5;
        java.lang.StringBuffer $r4;
        int $i0;
        proguard.ConfigurationParser r0;
        java.lang.String $r1;
        proguard.ParseException $r3;

        r0 := @this: proguard.ConfigurationParser;

     label1:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("integer");

     label2:
        $r1 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

     label3:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

     label4:
        return $i0;

     label5:
        $r2 := @caughtexception;

        $r3 = new proguard.ParseException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting integer argument instead of \'");

        $r1 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' before ");

        $r5 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r5.<proguard.WordReader: java.lang.String locationDescription()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r3;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private java.util.List parseKeepClassSpecificationArguments(java.util.List, boolean, boolean, boolean) throws proguard.ParseException, java.io.IOException
    {
        java.util.ArrayList $r8;
        proguard.ClassSpecification $r5;
        java.lang.StringBuffer $r6, $r10;
        proguard.ConfigurationParser r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        proguard.WordReader $r7;
        proguard.KeepClassSpecification $r9;
        java.util.List $r1;
        java.lang.Object $r2;
        proguard.ParseException $r11;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        if $r1 != null goto label7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r2 = $r8;

     label1:
        $z3 = 0;

        $z4 = 0;

     label2:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String,boolean)>("keyword \'class\', \'interface\', or \'enum\'", 1);

        $r3 = ",";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z5 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z5 != 0 goto label3;

        $r5 = specialinvoke r0.<proguard.ConfigurationParser: proguard.ClassSpecification parseClassSpecificationArguments()>();

        $r9 = new proguard.KeepClassSpecification;

        specialinvoke $r9.<proguard.KeepClassSpecification: void <init>(boolean,boolean,boolean,boolean,boolean,proguard.ClassSpecification)>($z0, $z1, $z2, $z4, $z3, $r5);

        $r1 = (java.util.List) $r2;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r1 = (java.util.List) $r2;

        return $r1;

     label3:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("keyword \'allowshrinking\', \'allowoptimization\', or \'allowobfuscation\'");

        $r3 = "allowshrinking";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z5 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z5 == 0 goto label4;

        $z2 = 1;

        goto label2;

     label4:
        $r3 = "allowoptimization";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z5 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z5 == 0 goto label5;

        $z4 = 1;

        goto label2;

     label5:
        $r3 = "allowobfuscation";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z3 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z3 == 0 goto label6;

        $z3 = 1;

        goto label2;

     label6:
        $r11 = new proguard.ParseException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting keyword \'allowshrinking\', \'allowoptimization\', or \'allowobfuscation\' before ");

        $r7 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r3 = virtualinvoke $r7.<proguard.WordReader: java.lang.String locationDescription()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<proguard.ParseException: void <init>(java.lang.String)>($r3);

        throw $r11;

     label7:
        $r2 = $r1;

        goto label1;
    }

    private void parseMemberSpecificationArguments(java.lang.String, proguard.ClassSpecification) throws proguard.ParseException, java.io.IOException
    {
        short $s0, $s1, $s2;
        proguard.ClassSpecification $r2;
        java.lang.StringBuffer $r9;
        proguard.ConfigurationParser r0;
        java.lang.String $r1, $r3, $r4, $r5, $r11, $r12;
        boolean $z0;
        proguard.WordReader $r10;
        java.util.List $r6;
        proguard.ParseException $r8;
        proguard.MemberSpecification $r7;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: proguard.ClassSpecification;

        $s0 = 0;

        $s1 = 0;

        $r3 = null;

     label01:
        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean configurationEnd(boolean)>(1);

        if $z0 != 0 goto label05;

        $r4 = "@";

        $r5 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label02;

        $r6 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("annotation type", 1, 0, 0, 1, 0, 0, 1, null);

        $r3 = staticinvoke <proguard.util.ListUtil: java.lang.String commaSeparatedString(java.util.List,boolean)>($r6, 0);

        goto label01;

     label02:
        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $z0 == 0 goto label08;

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(1);

     label03:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("public");

        if $z0 == 0 goto label09;

        $s2 = 1;

     label04:
        if $s2 != 0 goto label20;

     label05:
        $r4 = "*";

        $r5 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label06;

        $r4 = "<fields>";

        $r5 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label06;

        $r4 = "<methods>";

        $r5 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label26;

     label06:
        $r1 = "*";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label24;

        specialinvoke r0.<proguard.ConfigurationParser: void checkFieldAccessFlags(int,int)>($s1, $s0);

        specialinvoke r0.<proguard.ConfigurationParser: void checkMethodAccessFlags(int,int)>($s1, $s0);

        $r7 = new proguard.MemberSpecification;

        specialinvoke $r7.<proguard.MemberSpecification: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>($s1, $s0, $r3, null, null);

        virtualinvoke $r2.<proguard.ClassSpecification: void addField(proguard.MemberSpecification)>($r7);

        $r7 = new proguard.MemberSpecification;

        specialinvoke $r7.<proguard.MemberSpecification: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>($s1, $s0, $r3, null, null);

        virtualinvoke $r2.<proguard.ClassSpecification: void addMethod(proguard.MemberSpecification)>($r7);

     label07:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("separator \';\'");

        $r1 = ";";

        $r3 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label34;

        $r8 = new proguard.ParseException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting separator \';\' before ");

        $r10 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r10.<proguard.WordReader: java.lang.String locationDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label08:
        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        goto label03;

     label09:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("private");

        if $z0 == 0 goto label10;

        $s2 = 2;

        goto label04;

     label10:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("protected");

        if $z0 == 0 goto label11;

        $s2 = 4;

        goto label04;

     label11:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("static");

        if $z0 == 0 goto label12;

        $s2 = 8;

        goto label04;

     label12:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("final");

        if $z0 == 0 goto label13;

        $s2 = 16;

        goto label04;

     label13:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("synchronized");

        if $z0 == 0 goto label14;

        $s2 = 32;

        goto label04;

     label14:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("volatile");

        if $z0 == 0 goto label15;

        $s2 = 64;

        goto label04;

     label15:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("transient");

        if $z0 == 0 goto label16;

        $s2 = 128;

        goto label04;

     label16:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("native");

        if $z0 == 0 goto label17;

        $s2 = 256;

        goto label04;

     label17:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("abstract");

        if $z0 == 0 goto label18;

        $s2 = 1024;

        goto label04;

     label18:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("strictfp");

        if $z0 == 0 goto label19;

        $s2 = 2048;

        goto label04;

     label19:
        $s2 = 0;

        goto label04;

     label20:
        $r5 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label22;

        $s1 = $s1 | $s2;

     label21:
        $s2 = $s1 & $s0;

        if $s2 == 0 goto label23;

        $r8 = new proguard.ParseException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Conflicting class member access modifiers for ");

        $r10 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r10.<proguard.WordReader: java.lang.String locationDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label22:
        $s0 = $s0 | $s2;

        goto label21;

     label23:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("class member description");

        goto label01;

     label24:
        $r1 = "<fields>";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label25;

        specialinvoke r0.<proguard.ConfigurationParser: void checkFieldAccessFlags(int,int)>($s1, $s0);

        $r7 = new proguard.MemberSpecification;

        specialinvoke $r7.<proguard.MemberSpecification: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>($s1, $s0, $r3, null, null);

        virtualinvoke $r2.<proguard.ClassSpecification: void addField(proguard.MemberSpecification)>($r7);

        goto label07;

     label25:
        $r1 = "<methods>";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label07;

        specialinvoke r0.<proguard.ConfigurationParser: void checkMethodAccessFlags(int,int)>($s1, $s0);

        $r7 = new proguard.MemberSpecification;

        specialinvoke $r7.<proguard.MemberSpecification: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>($s1, $s0, $r3, null, null);

        virtualinvoke $r2.<proguard.ClassSpecification: void addMethod(proguard.MemberSpecification)>($r7);

        goto label07;

     label26:
        specialinvoke r0.<proguard.ConfigurationParser: void checkJavaIdentifier(java.lang.String)>("java type");

        $r5 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r4 = $r5;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("class member name");

        $r11 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r12 = "(";

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label29;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 != 0 goto label27;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label27;

        $r1 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalShortClassName(java.lang.String)>($r1);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label27;

        $r8 = new proguard.ParseException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting type and name instead of just \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' before ");

        $r10 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r10.<proguard.WordReader: java.lang.String locationDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label27:
        $r4 = "void";

        $r1 = "<init>";

     label28:
        $r5 = ";";

        $r11 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label30;

        specialinvoke r0.<proguard.ConfigurationParser: void checkFieldAccessFlags(int,int)>($s1, $s0);

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalType(java.lang.String)>($r4);

        $r7 = new proguard.MemberSpecification;

        specialinvoke $r7.<proguard.MemberSpecification: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>($s1, $s0, $r3, $r1, $r4);

        virtualinvoke $r2.<proguard.ClassSpecification: void addField(proguard.MemberSpecification)>($r7);

        return;

     label29:
        specialinvoke r0.<proguard.ConfigurationParser: void checkJavaIdentifier(java.lang.String)>("class member name");

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("opening \'(\' or separator \';\'");

        $r1 = $r11;

        goto label28;

     label30:
        $r5 = "(";

        $r11 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label33;

        specialinvoke r0.<proguard.ConfigurationParser: void checkMethodAccessFlags(int,int)>($s1, $s0);

        $r6 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("argument", 1, 1, 1, 1, 0, 0, 0, null);

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalMethodDescriptor(java.lang.String,java.util.List)>($r4, $r6);

        $r5 = ")";

        $r11 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label31;

        $r8 = new proguard.ParseException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting separating \',\' or closing \')\' before ");

        $r10 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r10.<proguard.WordReader: java.lang.String locationDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label31:
        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String)>("separator \';\'");

        $r5 = ";";

        $r11 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label32;

        $r8 = new proguard.ParseException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting separator \';\' before ");

        $r10 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r10.<proguard.WordReader: java.lang.String locationDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label32:
        $r7 = new proguard.MemberSpecification;

        specialinvoke $r7.<proguard.MemberSpecification: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>($s1, $s0, $r3, $r1, $r4);

        virtualinvoke $r2.<proguard.ClassSpecification: void addMethod(proguard.MemberSpecification)>($r7);

        return;

     label33:
        $r8 = new proguard.ParseException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting opening \'(\' or separator \';\' before ");

        $r10 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r10.<proguard.WordReader: java.lang.String locationDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r8;

     label34:
        return;
    }

    private long parseNoArgument(long) throws java.io.IOException
    {
        proguard.ConfigurationParser r0;
        long $l0;

        r0 := @this: proguard.ConfigurationParser;

        $l0 := @parameter0: long;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return $l0;
    }

    private boolean parseNoArgument(boolean) throws java.io.IOException
    {
        proguard.ConfigurationParser r0;
        boolean $z0;

        r0 := @this: proguard.ConfigurationParser;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return $z0;
    }

    private java.lang.String parseOptionalArgument() throws java.io.IOException
    {
        proguard.ConfigurationParser r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: proguard.ConfigurationParser;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean configurationEnd()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        r1 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return r1;
    }

    private java.io.File parseOptionalFile() throws proguard.ParseException, java.io.IOException
    {
        proguard.ConfigurationParser r0;
        java.lang.String $r2;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: proguard.ConfigurationParser;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean configurationEnd()>();

        if $z0 == 0 goto label1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("");

        return $r1;

     label1:
        $r2 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $r1 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File file(java.lang.String)>($r2);

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        return $r1;
    }

    private void readNextWord() throws java.io.IOException
    {
        proguard.ConfigurationParser r0;
        java.lang.String $r1;
        proguard.WordReader $r2;

        r0 := @this: proguard.ConfigurationParser;

        $r2 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r2.<proguard.WordReader: java.lang.String nextWord()>();

        r0.<proguard.ConfigurationParser: java.lang.String nextWord> = $r1;

        return;
    }

    private void readNextWord(java.lang.String) throws proguard.ParseException, java.io.IOException
    {
        proguard.ConfigurationParser r0;
        java.lang.String $r1;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord(java.lang.String,boolean)>($r1, 0);

        return;
    }

    private void readNextWord(java.lang.String, boolean) throws proguard.ParseException, java.io.IOException
    {
        proguard.WordReader $r4;
        java.lang.StringBuffer $r3;
        proguard.ConfigurationParser r0;
        java.lang.String $r1;
        proguard.ParseException $r2;
        boolean $z0;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<proguard.ConfigurationParser: void readNextWord()>();

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean configurationEnd(boolean)>($z0);

        if $z0 == 0 goto label1;

        $r2 = new proguard.ParseException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" before ");

        $r4 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r4.<proguard.WordReader: java.lang.String locationDescription()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        return;
    }

    private java.lang.String replaceSystemProperties(java.lang.String) throws proguard.ParseException
    {
        proguard.WordReader $r4;
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i2, $i3;
        proguard.ConfigurationParser r0;
        java.lang.String $r1, $r5, $r6;
        proguard.ParseException $r2;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(60, $i0);

        $i0 = $i1;

        if $i1 >= 0 goto label2;

        return $r1;

     label2:
        $i2 = $i1 + 1;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(62, $i2);

        if $i2 >= 0 goto label3;

        $r2 = new proguard.ParseException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expecting closing \'>\' after opening \'<\' in ");

        $r4 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r4.<proguard.WordReader: java.lang.String locationDescription()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label3:
        $i3 = $i1 + 1;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i3, $i2);

        $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r5);

        if $r6 != null goto label4;

        $r2 = new proguard.ParseException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Value of system property \'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is undefined in ");

        $r4 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r1 = virtualinvoke $r4.<proguard.WordReader: java.lang.String locationDescription()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<proguard.ParseException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label4:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i1 = $i2 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;
    }

    private int unknownAccessFlag() throws proguard.ParseException
    {
        proguard.WordReader $r3;
        java.lang.StringBuffer $r2;
        proguard.ConfigurationParser r0;
        proguard.ParseException $r1;
        java.lang.String $r4;

        r0 := @this: proguard.ConfigurationParser;

        $r1 = new proguard.ParseException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected keyword ");

        $r3 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r4 = virtualinvoke $r3.<proguard.WordReader: java.lang.String locationDescription()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<proguard.ParseException: void <init>(java.lang.String)>($r4);

        throw $r1;
    }

    public void close() throws java.io.IOException
    {
        proguard.ConfigurationParser r0;
        proguard.WordReader $r1;

        r0 := @this: proguard.ConfigurationParser;

        $r1 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        if $r1 == null goto label1;

        $r1 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        virtualinvoke $r1.<proguard.WordReader: void close()>();

     label1:
        return;
    }

    public void parse(proguard.Configuration) throws proguard.ParseException, java.io.IOException
    {
        proguard.WordReader $r3;
        proguard.ClassPath $r5;
        long $l0;
        java.io.File $r8;
        java.util.List $r7;
        java.lang.StringBuffer $r9;
        proguard.Configuration $r1;
        int $i1;
        proguard.ConfigurationParser r0;
        java.lang.String $r2, $r4;
        proguard.ParseException $r6;
        boolean $z0;

        r0 := @this: proguard.ConfigurationParser;

        $r1 := @parameter0: proguard.Configuration;

     label01:
        $r2 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        if $r2 == null goto label58;

        $r3 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r2 = virtualinvoke $r3.<proguard.WordReader: java.lang.String lastComments()>();

        r0.<proguard.ConfigurationParser: java.lang.String lastComments> = $r2;

        $r2 = "@";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 != 0 goto label02;

        $r2 = "-include";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label03;

     label02:
        $l0 = $r1.<proguard.Configuration: long lastModified>;

        $l0 = specialinvoke r0.<proguard.ConfigurationParser: long parseIncludeArgument(long)>($l0);

        $r1.<proguard.Configuration: long lastModified> = $l0;

        goto label01;

     label03:
        $r2 = "-basedirectory";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label04;

        specialinvoke r0.<proguard.ConfigurationParser: void parseBaseDirectoryArgument()>();

        goto label01;

     label04:
        $r2 = "-injars";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label05;

        $r5 = $r1.<proguard.Configuration: proguard.ClassPath programJars>;

        $r5 = specialinvoke r0.<proguard.ConfigurationParser: proguard.ClassPath parseClassPathArgument(proguard.ClassPath,boolean)>($r5, 0);

        $r1.<proguard.Configuration: proguard.ClassPath programJars> = $r5;

        goto label01;

     label05:
        $r2 = "-outjars";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label06;

        $r5 = $r1.<proguard.Configuration: proguard.ClassPath programJars>;

        $r5 = specialinvoke r0.<proguard.ConfigurationParser: proguard.ClassPath parseClassPathArgument(proguard.ClassPath,boolean)>($r5, 1);

        $r1.<proguard.Configuration: proguard.ClassPath programJars> = $r5;

        goto label01;

     label06:
        $r2 = "-libraryjars";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label07;

        $r5 = $r1.<proguard.Configuration: proguard.ClassPath libraryJars>;

        $r5 = specialinvoke r0.<proguard.ConfigurationParser: proguard.ClassPath parseClassPathArgument(proguard.ClassPath,boolean)>($r5, 0);

        $r1.<proguard.Configuration: proguard.ClassPath libraryJars> = $r5;

        goto label01;

     label07:
        $r2 = "-resourcejars";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label08;

        $r6 = new proguard.ParseException;

        specialinvoke $r6.<proguard.ParseException: void <init>(java.lang.String)>("The \'-resourcejars\' option is no longer supported. Please use the \'-injars\' option for all input");

        throw $r6;

     label08:
        $r2 = "-skipnonpubliclibraryclasses";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label09;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(1);

        $r1.<proguard.Configuration: boolean skipNonPublicLibraryClasses> = $z0;

        goto label01;

     label09:
        $r2 = "-dontskipnonpubliclibraryclasses";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label10;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(0);

        $r1.<proguard.Configuration: boolean skipNonPublicLibraryClasses> = $z0;

        goto label01;

     label10:
        $r2 = "-dontskipnonpubliclibraryclassmembers";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label11;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(0);

        $r1.<proguard.Configuration: boolean skipNonPublicLibraryClassMembers> = $z0;

        goto label01;

     label11:
        $r2 = "-target";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label12;

        $i1 = specialinvoke r0.<proguard.ConfigurationParser: int parseClassVersion()>();

        $r1.<proguard.Configuration: int targetClassVersion> = $i1;

        goto label01;

     label12:
        $r2 = "-forceprocessing";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label13;

        $l0 = specialinvoke r0.<proguard.ConfigurationParser: long parseNoArgument(long)>(9223372036854775807L);

        $r1.<proguard.Configuration: long lastModified> = $l0;

        goto label01;

     label13:
        $r2 = "-keep";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label14;

        $r7 = $r1.<proguard.Configuration: java.util.List keep>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseKeepClassSpecificationArguments(java.util.List,boolean,boolean,boolean)>($r7, 1, 0, 0);

        $r1.<proguard.Configuration: java.util.List keep> = $r7;

        goto label01;

     label14:
        $r2 = "-keepclassmembers";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label15;

        $r7 = $r1.<proguard.Configuration: java.util.List keep>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseKeepClassSpecificationArguments(java.util.List,boolean,boolean,boolean)>($r7, 0, 0, 0);

        $r1.<proguard.Configuration: java.util.List keep> = $r7;

        goto label01;

     label15:
        $r2 = "-keepclasseswithmembers";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label16;

        $r7 = $r1.<proguard.Configuration: java.util.List keep>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseKeepClassSpecificationArguments(java.util.List,boolean,boolean,boolean)>($r7, 0, 1, 0);

        $r1.<proguard.Configuration: java.util.List keep> = $r7;

        goto label01;

     label16:
        $r2 = "-keepnames";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label17;

        $r7 = $r1.<proguard.Configuration: java.util.List keep>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseKeepClassSpecificationArguments(java.util.List,boolean,boolean,boolean)>($r7, 1, 0, 1);

        $r1.<proguard.Configuration: java.util.List keep> = $r7;

        goto label01;

     label17:
        $r2 = "-keepclassmembernames";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label18;

        $r7 = $r1.<proguard.Configuration: java.util.List keep>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseKeepClassSpecificationArguments(java.util.List,boolean,boolean,boolean)>($r7, 0, 0, 1);

        $r1.<proguard.Configuration: java.util.List keep> = $r7;

        goto label01;

     label18:
        $r2 = "-keepclasseswithmembernames";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label19;

        $r7 = $r1.<proguard.Configuration: java.util.List keep>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseKeepClassSpecificationArguments(java.util.List,boolean,boolean,boolean)>($r7, 0, 1, 1);

        $r1.<proguard.Configuration: java.util.List keep> = $r7;

        goto label01;

     label19:
        $r2 = "-printseeds";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label20;

        $r8 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File parseOptionalFile()>();

        $r1.<proguard.Configuration: java.io.File printSeeds> = $r8;

        goto label01;

     label20:
        $r2 = "-keepdirectories";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label21;

        $r7 = $r1.<proguard.Configuration: java.util.List keepDirectories>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("directory name", 1, 1, 0, 0, 1, 0, 0, $r7);

        $r1.<proguard.Configuration: java.util.List keepDirectories> = $r7;

        goto label01;

     label21:
        $r2 = "-dontshrink";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label22;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(0);

        $r1.<proguard.Configuration: boolean shrink> = $z0;

        goto label01;

     label22:
        $r2 = "-printusage";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label23;

        $r8 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File parseOptionalFile()>();

        $r1.<proguard.Configuration: java.io.File printUsage> = $r8;

        goto label01;

     label23:
        $r2 = "-whyareyoukeeping";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label24;

        $r7 = $r1.<proguard.Configuration: java.util.List whyAreYouKeeping>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseClassSpecificationArguments(java.util.List)>($r7);

        $r1.<proguard.Configuration: java.util.List whyAreYouKeeping> = $r7;

        goto label01;

     label24:
        $r2 = "-dontoptimize";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label25;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(0);

        $r1.<proguard.Configuration: boolean optimize> = $z0;

        goto label01;

     label25:
        $r2 = "-optimizationpasses";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label26;

        $i1 = specialinvoke r0.<proguard.ConfigurationParser: int parseIntegerArgument()>();

        $r1.<proguard.Configuration: int optimizationPasses> = $i1;

        goto label01;

     label26:
        $r2 = "-optimizations";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label27;

        $r7 = $r1.<proguard.Configuration: java.util.List optimizations>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("optimization name", 1, 0, 0, 0, 0, 0, 0, $r7);

        $r1.<proguard.Configuration: java.util.List optimizations> = $r7;

        goto label01;

     label27:
        $r2 = "-assumenosideeffects";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label28;

        $r7 = $r1.<proguard.Configuration: java.util.List assumeNoSideEffects>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseClassSpecificationArguments(java.util.List)>($r7);

        $r1.<proguard.Configuration: java.util.List assumeNoSideEffects> = $r7;

        goto label01;

     label28:
        $r2 = "-allowaccessmodification";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label29;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(1);

        $r1.<proguard.Configuration: boolean allowAccessModification> = $z0;

        goto label01;

     label29:
        $r2 = "-mergeinterfacesaggressively";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label30;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(1);

        $r1.<proguard.Configuration: boolean mergeInterfacesAggressively> = $z0;

        goto label01;

     label30:
        $r2 = "-dontobfuscate";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label31;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(0);

        $r1.<proguard.Configuration: boolean obfuscate> = $z0;

        goto label01;

     label31:
        $r2 = "-printmapping";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label32;

        $r8 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File parseOptionalFile()>();

        $r1.<proguard.Configuration: java.io.File printMapping> = $r8;

        goto label01;

     label32:
        $r2 = "-applymapping";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label33;

        $r8 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File parseFile()>();

        $r1.<proguard.Configuration: java.io.File applyMapping> = $r8;

        goto label01;

     label33:
        $r2 = "-obfuscationdictionary";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label34;

        $r8 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File parseFile()>();

        $r1.<proguard.Configuration: java.io.File obfuscationDictionary> = $r8;

        goto label01;

     label34:
        $r2 = "-classobfuscationdictionary";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label35;

        $r8 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File parseFile()>();

        $r1.<proguard.Configuration: java.io.File classObfuscationDictionary> = $r8;

        goto label01;

     label35:
        $r2 = "-packageobfuscationdictionary";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label36;

        $r8 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File parseFile()>();

        $r1.<proguard.Configuration: java.io.File packageObfuscationDictionary> = $r8;

        goto label01;

     label36:
        $r2 = "-overloadaggressively";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label37;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(1);

        $r1.<proguard.Configuration: boolean overloadAggressively> = $z0;

        goto label01;

     label37:
        $r2 = "-useuniqueclassmembernames";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label38;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(1);

        $r1.<proguard.Configuration: boolean useUniqueClassMemberNames> = $z0;

        goto label01;

     label38:
        $r2 = "-dontusemixedcaseclassnames";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label39;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(0);

        $r1.<proguard.Configuration: boolean useMixedCaseClassNames> = $z0;

        goto label01;

     label39:
        $r2 = "-keeppackagenames";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label40;

        $r7 = $r1.<proguard.Configuration: java.util.List keepPackageNames>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("package name", 1, 1, 0, 1, 0, 1, 0, $r7);

        $r1.<proguard.Configuration: java.util.List keepPackageNames> = $r7;

        goto label01;

     label40:
        $r2 = "-flattenpackagehierarchy";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label41;

        $r2 = specialinvoke r0.<proguard.ConfigurationParser: java.lang.String parseOptionalArgument()>();

        $r2 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r2);

        $r1.<proguard.Configuration: java.lang.String flattenPackageHierarchy> = $r2;

        goto label01;

     label41:
        $r2 = "-repackageclasses";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label42;

        $r2 = specialinvoke r0.<proguard.ConfigurationParser: java.lang.String parseOptionalArgument()>();

        $r2 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r2);

        $r1.<proguard.Configuration: java.lang.String repackageClasses> = $r2;

        goto label01;

     label42:
        $r2 = "-defaultpackage";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label43;

        $r2 = specialinvoke r0.<proguard.ConfigurationParser: java.lang.String parseOptionalArgument()>();

        $r2 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalClassName(java.lang.String)>($r2);

        $r1.<proguard.Configuration: java.lang.String repackageClasses> = $r2;

        goto label01;

     label43:
        $r2 = "-keepattributes";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label44;

        $r7 = $r1.<proguard.Configuration: java.util.List keepAttributes>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("attribute name", 1, 1, 0, 1, 0, 0, 0, $r7);

        $r1.<proguard.Configuration: java.util.List keepAttributes> = $r7;

        goto label01;

     label44:
        $r2 = "-keepparameternames";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label45;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(1);

        $r1.<proguard.Configuration: boolean keepParameterNames> = $z0;

        goto label01;

     label45:
        $r2 = "-renamesourcefileattribute";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label46;

        $r2 = specialinvoke r0.<proguard.ConfigurationParser: java.lang.String parseOptionalArgument()>();

        $r1.<proguard.Configuration: java.lang.String newSourceFileAttribute> = $r2;

        goto label01;

     label46:
        $r2 = "-adaptclassstrings";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label47;

        $r7 = $r1.<proguard.Configuration: java.util.List adaptClassStrings>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("class name", 1, 1, 0, 1, 0, 1, 0, $r7);

        $r1.<proguard.Configuration: java.util.List adaptClassStrings> = $r7;

        goto label01;

     label47:
        $r2 = "-adaptresourcefilenames";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label48;

        $r7 = $r1.<proguard.Configuration: java.util.List adaptResourceFileNames>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("resource file name", 1, 1, 0, 0, 0, 0, 0, $r7);

        $r1.<proguard.Configuration: java.util.List adaptResourceFileNames> = $r7;

        goto label01;

     label48:
        $r2 = "-adaptresourcefilecontents";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label49;

        $r7 = $r1.<proguard.Configuration: java.util.List adaptResourceFileContents>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("resource file name", 1, 1, 0, 0, 0, 0, 0, $r7);

        $r1.<proguard.Configuration: java.util.List adaptResourceFileContents> = $r7;

        goto label01;

     label49:
        $r2 = "-dontpreverify";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label50;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(0);

        $r1.<proguard.Configuration: boolean preverify> = $z0;

        goto label01;

     label50:
        $r2 = "-microedition";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label51;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(1);

        $r1.<proguard.Configuration: boolean microEdition> = $z0;

        goto label01;

     label51:
        $r2 = "-verbose";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label52;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(1);

        $r1.<proguard.Configuration: boolean verbose> = $z0;

        goto label01;

     label52:
        $r2 = "-dontnote";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label53;

        $r7 = $r1.<proguard.Configuration: java.util.List note>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("class name", 1, 1, 0, 1, 0, 1, 0, $r7);

        $r1.<proguard.Configuration: java.util.List note> = $r7;

        goto label01;

     label53:
        $r2 = "-dontwarn";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label54;

        $r7 = $r1.<proguard.Configuration: java.util.List warn>;

        $r7 = specialinvoke r0.<proguard.ConfigurationParser: java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List)>("class name", 1, 1, 0, 1, 0, 1, 0, $r7);

        $r1.<proguard.Configuration: java.util.List warn> = $r7;

        goto label01;

     label54:
        $r2 = "-ignorewarnings";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label55;

        $z0 = specialinvoke r0.<proguard.ConfigurationParser: boolean parseNoArgument(boolean)>(1);

        $r1.<proguard.Configuration: boolean ignoreWarnings> = $z0;

        goto label01;

     label55:
        $r2 = "-printconfiguration";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label56;

        $r8 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File parseOptionalFile()>();

        $r1.<proguard.Configuration: java.io.File printConfiguration> = $r8;

        goto label01;

     label56:
        $r2 = "-dump";

        $r4 = r0.<proguard.ConfigurationParser: java.lang.String nextWord>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label57;

        $r8 = specialinvoke r0.<proguard.ConfigurationParser: java.io.File parseOptionalFile()>();

        $r1.<proguard.Configuration: java.io.File dump> = $r8;

        goto label01;

     label57:
        $r6 = new proguard.ParseException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown option ");

        $r3 = r0.<proguard.ConfigurationParser: proguard.WordReader reader>;

        $r2 = virtualinvoke $r3.<proguard.WordReader: java.lang.String locationDescription()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<proguard.ParseException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label58:
        return;
    }
}
