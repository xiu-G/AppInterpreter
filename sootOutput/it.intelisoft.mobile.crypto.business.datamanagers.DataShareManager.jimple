public class it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager extends java.lang.Object
{
    private static it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager dsm__;
    private android.app.Activity activeActivity_;
    private android.content.Context context_;
    private java.lang.String country_;
    private java.util.HashMap dbMap_;
    private java.lang.String imei_;
    private java.lang.String imsi_;
    private java.lang.String language_;
    private android.app.Activity mainActivity_;
    private java.lang.String number_;

    static void <clinit>()
    {
        <it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager dsm__> = null;

        return;
    }

    private void <init>()
    {
        java.util.HashMap $r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String country_> = "US";

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String language_> = "en";

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.app.Activity mainActivity_> = null;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.app.Activity activeActivity_> = null;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.content.Context context_> = null;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String imsi_> = null;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String imei_> = null;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String number_> = null;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.util.HashMap dbMap_> = $r1;

        return;
    }

    public static it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager getInstance()
    {
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager $r0;

        $r0 = <it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager dsm__>;

        if $r0 != null goto label1;

        $r0 = new it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        specialinvoke $r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: void <init>()>();

        <it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager dsm__> = $r0;

     label1:
        $r0 = <it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager dsm__>;

        return $r0;
    }

    public void closeDBs()
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r1;
        java.lang.Exception $r7;
        android.database.sqlite.SQLiteDatabase r6;
        java.lang.Object $r4;
        java.lang.String r5;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

     label01:
        $r1 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.util.HashMap dbMap_>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        if $r3 == null goto label05;

     label03:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        $r1 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.util.HashMap dbMap_>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

     label06:
        return;

     label07:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r1 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.util.HashMap dbMap_>;

        $r4 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (android.database.sqlite.SQLiteDatabase) $r4;

        $z0 = virtualinvoke r6.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

     label08:
        if $z0 == 0 goto label02;

     label09:
        virtualinvoke r6.<android.database.sqlite.SQLiteDatabase: void close()>();

     label10:
        goto label02;

     label11:
        $r7 := @caughtexception;

        return;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public android.content.Context getContext()
    {
        android.content.Context r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        r1 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.content.Context context_>;

        return r1;
    }

    public java.lang.String getCountry()
    {
        java.lang.String $r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        $r1 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String country_>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        return $r1;
    }

    public android.database.sqlite.SQLiteDatabase getDB(java.lang.String, int)
    {
        android.content.Context $r5;
        java.util.HashMap $r3;
        android.database.sqlite.SQLiteDatabase r2, $r7;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager $r6;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        r2 = null;

        $r3 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.util.HashMap dbMap_>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>("crypto.db");

        if $z0 == 0 goto label4;

        $r3 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.util.HashMap dbMap_>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("crypto.db");

        r2 = (android.database.sqlite.SQLiteDatabase) $r4;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label2;

     label1:
        $r5 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.content.Context getContext()>();

        if $r5 == null goto label3;

        $r6 = new it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager;

        specialinvoke $r6.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: void <init>(android.content.Context,java.lang.String,int)>($r5, "crypto.db", 1);

        $r7 = virtualinvoke $r6.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r2 = $r7;

        $r3 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.util.HashMap dbMap_>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("crypto.db", $r7);

     label2:
        return r2;

     label3:
        r2 = null;

        goto label2;

     label4:
        $r5 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.content.Context getContext()>();

        if $r5 == null goto label5;

        $r6 = new it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager;

        specialinvoke $r6.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: void <init>(android.content.Context,java.lang.String,int)>($r5, "crypto.db", 1);

        $r7 = virtualinvoke $r6.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r2 = $r7;

        $r3 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.util.HashMap dbMap_>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("crypto.db", $r7);

     label5:
        return r2;
    }

    public java.lang.String getImei()
    {
        java.lang.String r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        r1 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String imei_>;

        return r1;
    }

    public java.lang.String getLanguage()
    {
        java.lang.String $r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        $r1 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String language_>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        return $r1;
    }

    public java.lang.String getLine1Number()
    {
        java.lang.String r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        r1 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String number_>;

        return r1;
    }

    public android.app.Activity getMainActivity()
    {
        android.app.Activity r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        r1 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.app.Activity mainActivity_>;

        return r1;
    }

    public android.app.Activity getViwedActivity()
    {
        android.app.Activity r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        r1 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.app.Activity activeActivity_>;

        return r1;
    }

    public void setActiveActivity(android.app.Activity)
    {
        android.app.Activity $r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        $r1 := @parameter0: android.app.Activity;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.app.Activity activeActivity_> = $r1;

        return;
    }

    public void setContext(android.content.Context)
    {
        android.content.Context $r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        $r1 := @parameter0: android.content.Context;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.content.Context context_> = $r1;

        return;
    }

    public void setCountryAndLanguage(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String country_> = $r1;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String language_> = $r2;

        return;
    }

    public void setMainActivity(android.app.Activity)
    {
        android.app.Activity $r1;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        $r1 := @parameter0: android.app.Activity;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.app.Activity mainActivity_> = $r1;

        return;
    }

    public void setTelephonyManager(android.telephony.TelephonyManager)
    {
        java.lang.String $r2;
        it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager r0;
        android.telephony.TelephonyManager $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager;

        $r1 := @parameter0: android.telephony.TelephonyManager;

        $r2 = virtualinvoke $r1.<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>();

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String imsi_> = $r2;

        $r2 = virtualinvoke $r1.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String imei_> = $r2;

        $r2 = virtualinvoke $r1.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>();

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: java.lang.String number_> = $r2;

        return;
    }
}
