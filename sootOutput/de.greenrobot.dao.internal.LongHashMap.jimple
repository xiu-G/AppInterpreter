public final class de.greenrobot.dao.internal.LongHashMap extends java.lang.Object
{
    private int capacity;
    private int size;
    private de.greenrobot.dao.internal.LongHashMap$Entry[] table;
    private int threshold;

    public void <init>()
    {
        de.greenrobot.dao.internal.LongHashMap r0;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        specialinvoke r0.<de.greenrobot.dao.internal.LongHashMap: void <init>(int)>(16);

        return;
    }

    public void <init>(int)
    {
        int $i0;
        de.greenrobot.dao.internal.LongHashMap$Entry[] $r1;
        de.greenrobot.dao.internal.LongHashMap r0;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<de.greenrobot.dao.internal.LongHashMap: int capacity> = 16;

        r0.<de.greenrobot.dao.internal.LongHashMap: int threshold> = 21;

        $r1 = newarray (de.greenrobot.dao.internal.LongHashMap$Entry)[16];

        r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table> = $r1;

        return;
    }

    public final void clear()
    {
        de.greenrobot.dao.internal.LongHashMap$Entry[] $r1;
        de.greenrobot.dao.internal.LongHashMap r0;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        r0.<de.greenrobot.dao.internal.LongHashMap: int size> = 0;

        $r1 = r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

        return;
    }

    public final boolean containsKey(long)
    {
        de.greenrobot.dao.internal.LongHashMap$Entry $r2;
        de.greenrobot.dao.internal.LongHashMap r0;
        de.greenrobot.dao.internal.LongHashMap$Entry[] $r1;
        long $l0, $l1;
        byte $b4;
        int $i2, $i3;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        $l0 := @parameter0: long;

        $l1 = $l0 >>> 32;

        $i2 = (int) $l1;

        $i3 = (int) $l0;

        $i2 = $i2 ^ $i3;

        $i2 = $i2 & 2147483647;

        $i3 = r0.<de.greenrobot.dao.internal.LongHashMap: int capacity>;

        $i2 = $i2 % $i3;

        $r1 = r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table>;

        $r2 = $r1[$i2];

     label1:
        if $r2 == null goto label3;

        $l1 = $r2.<de.greenrobot.dao.internal.LongHashMap$Entry: long key>;

        $b4 = $l1 cmp $l0;

        if $b4 != 0 goto label2;

        return 1;

     label2:
        $r2 = $r2.<de.greenrobot.dao.internal.LongHashMap$Entry: de.greenrobot.dao.internal.LongHashMap$Entry next>;

        goto label1;

     label3:
        return 0;
    }

    public final java.lang.Object get(long)
    {
        de.greenrobot.dao.internal.LongHashMap$Entry $r2;
        de.greenrobot.dao.internal.LongHashMap r0;
        de.greenrobot.dao.internal.LongHashMap$Entry[] $r1;
        long $l0, $l1;
        byte $b4;
        int $i2, $i3;
        java.lang.Object r3;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        $l0 := @parameter0: long;

        $l1 = $l0 >>> 32;

        $i2 = (int) $l1;

        $i3 = (int) $l0;

        $i2 = $i2 ^ $i3;

        $i2 = $i2 & 2147483647;

        $i3 = r0.<de.greenrobot.dao.internal.LongHashMap: int capacity>;

        $i2 = $i2 % $i3;

        $r1 = r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table>;

        $r2 = $r1[$i2];

     label1:
        if $r2 == null goto label3;

        $l1 = $r2.<de.greenrobot.dao.internal.LongHashMap$Entry: long key>;

        $b4 = $l1 cmp $l0;

        if $b4 != 0 goto label2;

        r3 = $r2.<de.greenrobot.dao.internal.LongHashMap$Entry: java.lang.Object value>;

        return r3;

     label2:
        $r2 = $r2.<de.greenrobot.dao.internal.LongHashMap$Entry: de.greenrobot.dao.internal.LongHashMap$Entry next>;

        goto label1;

     label3:
        return null;
    }

    public final void logStats()
    {
        de.greenrobot.dao.internal.LongHashMap$Entry $r1, $r3;
        de.greenrobot.dao.internal.LongHashMap r0;
        de.greenrobot.dao.internal.LongHashMap$Entry[] $r2;
        int $i0, $i1, $i2;
        float $f0, $f1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        $r2 = r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table>;

        $i0 = lengthof $r2;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r3 = $r2[$i1];

     label2:
        if $r3 == null goto label3;

        $r1 = $r3.<de.greenrobot.dao.internal.LongHashMap$Entry: de.greenrobot.dao.internal.LongHashMap$Entry next>;

        if $r1 == null goto label3;

        $i2 = $i2 + 1;

        $r3 = $r3.<de.greenrobot.dao.internal.LongHashMap$Entry: de.greenrobot.dao.internal.LongHashMap$Entry next>;

        goto label2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("load: ");

        $i0 = r0.<de.greenrobot.dao.internal.LongHashMap: int size>;

        $f0 = (float) $i0;

        $i0 = r0.<de.greenrobot.dao.internal.LongHashMap: int capacity>;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size: ");

        $i0 = r0.<de.greenrobot.dao.internal.LongHashMap: int size>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", capa: ");

        $i0 = r0.<de.greenrobot.dao.internal.LongHashMap: int capacity>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", collisions: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", collision ratio: ");

        $f0 = (float) $i2;

        $i2 = r0.<de.greenrobot.dao.internal.LongHashMap: int size>;

        $f1 = (float) $i2;

        $f0 = $f0 / $f1;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <de.greenrobot.dao.DaoLog: int d(java.lang.String)>($r5);

        return;
    }

    public final java.lang.Object put(long, java.lang.Object)
    {
        de.greenrobot.dao.internal.LongHashMap$Entry $r3, $r4;
        de.greenrobot.dao.internal.LongHashMap r0;
        de.greenrobot.dao.internal.LongHashMap$Entry[] $r2;
        long $l0, $l2;
        byte $b4;
        int $i1, $i3;
        java.lang.Object $r1, r5;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.Object;

        $l2 = $l0 >>> 32;

        $i1 = (int) $l2;

        $i3 = (int) $l0;

        $i1 = $i1 ^ $i3;

        $i1 = $i1 & 2147483647;

        $i3 = r0.<de.greenrobot.dao.internal.LongHashMap: int capacity>;

        $i1 = $i1 % $i3;

        $r2 = r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table>;

        $r3 = $r2[$i1];

        $r4 = $r3;

     label1:
        if $r4 == null goto label3;

        $l2 = $r4.<de.greenrobot.dao.internal.LongHashMap$Entry: long key>;

        $b4 = $l2 cmp $l0;

        if $b4 != 0 goto label2;

        r5 = $r4.<de.greenrobot.dao.internal.LongHashMap$Entry: java.lang.Object value>;

        $r4.<de.greenrobot.dao.internal.LongHashMap$Entry: java.lang.Object value> = $r1;

        return r5;

     label2:
        $r4 = $r4.<de.greenrobot.dao.internal.LongHashMap$Entry: de.greenrobot.dao.internal.LongHashMap$Entry next>;

        goto label1;

     label3:
        $r2 = r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table>;

        $r4 = new de.greenrobot.dao.internal.LongHashMap$Entry;

        specialinvoke $r4.<de.greenrobot.dao.internal.LongHashMap$Entry: void <init>(long,java.lang.Object,de.greenrobot.dao.internal.LongHashMap$Entry)>($l0, $r1, $r3);

        $r2[$i1] = $r4;

        $i1 = r0.<de.greenrobot.dao.internal.LongHashMap: int size>;

        $i1 = $i1 + 1;

        r0.<de.greenrobot.dao.internal.LongHashMap: int size> = $i1;

        $i1 = r0.<de.greenrobot.dao.internal.LongHashMap: int size>;

        $i3 = r0.<de.greenrobot.dao.internal.LongHashMap: int threshold>;

        if $i1 <= $i3 goto label4;

        $i1 = r0.<de.greenrobot.dao.internal.LongHashMap: int capacity>;

        $i1 = $i1 * 2;

        virtualinvoke r0.<de.greenrobot.dao.internal.LongHashMap: void setCapacity(int)>($i1);

     label4:
        return null;
    }

    public final java.lang.Object remove(long)
    {
        de.greenrobot.dao.internal.LongHashMap$Entry $r2, $r3, $r4;
        de.greenrobot.dao.internal.LongHashMap r0;
        de.greenrobot.dao.internal.LongHashMap$Entry[] $r1;
        long $l0, $l3;
        byte $b2;
        int $i1, $i4;
        java.lang.Object r5;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        $l0 := @parameter0: long;

        $l3 = $l0 >>> 32;

        $i1 = (int) $l3;

        $i4 = (int) $l0;

        $i1 = $i1 ^ $i4;

        $i1 = $i1 & 2147483647;

        $i4 = r0.<de.greenrobot.dao.internal.LongHashMap: int capacity>;

        $i1 = $i1 % $i4;

        $r1 = r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table>;

        $r2 = $r1[$i1];

        $r3 = null;

     label1:
        if $r2 == null goto label5;

        $r4 = $r2.<de.greenrobot.dao.internal.LongHashMap$Entry: de.greenrobot.dao.internal.LongHashMap$Entry next>;

        $l3 = $r2.<de.greenrobot.dao.internal.LongHashMap$Entry: long key>;

        $b2 = $l3 cmp $l0;

        if $b2 != 0 goto label4;

        if $r3 != null goto label3;

        $r1 = r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table>;

        $r1[$i1] = $r4;

     label2:
        $i1 = r0.<de.greenrobot.dao.internal.LongHashMap: int size>;

        $i1 = $i1 + -1;

        r0.<de.greenrobot.dao.internal.LongHashMap: int size> = $i1;

        r5 = $r2.<de.greenrobot.dao.internal.LongHashMap$Entry: java.lang.Object value>;

        return r5;

     label3:
        $r3.<de.greenrobot.dao.internal.LongHashMap$Entry: de.greenrobot.dao.internal.LongHashMap$Entry next> = $r4;

        goto label2;

     label4:
        $r3 = $r2;

        $r2 = $r4;

        goto label1;

     label5:
        return null;
    }

    public final void reserveRoom(int)
    {
        int $i0;
        de.greenrobot.dao.internal.LongHashMap r0;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        $i0 := @parameter0: int;

        $i0 = $i0 * 5;

        $i0 = $i0 / 3;

        virtualinvoke r0.<de.greenrobot.dao.internal.LongHashMap: void setCapacity(int)>($i0);

        return;
    }

    public final void setCapacity(int)
    {
        de.greenrobot.dao.internal.LongHashMap$Entry $r3, $r4, $r5;
        de.greenrobot.dao.internal.LongHashMap r0;
        de.greenrobot.dao.internal.LongHashMap$Entry[] $r1, $r2;
        long $l2, $l4;
        int $i0, $i1, $i3, $i5, $i6;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        $i0 := @parameter0: int;

        $r1 = newarray (de.greenrobot.dao.internal.LongHashMap$Entry)[$i0];

        $r2 = r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table>;

        $i1 = lengthof $r2;

        $i3 = 0;

     label1:
        if $i3 >= $i1 goto label4;

        $r2 = r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table>;

        $r3 = $r2[$i3];

     label2:
        if $r3 == null goto label3;

        $l4 = $r3.<de.greenrobot.dao.internal.LongHashMap$Entry: long key>;

        $l2 = $l4 >>> 32;

        $i5 = (int) $l2;

        $i6 = (int) $l4;

        $i5 = $i5 ^ $i6;

        $i5 = $i5 & 2147483647;

        $i5 = $i5 % $i0;

        $r4 = $r3.<de.greenrobot.dao.internal.LongHashMap$Entry: de.greenrobot.dao.internal.LongHashMap$Entry next>;

        $r5 = $r1[$i5];

        $r3.<de.greenrobot.dao.internal.LongHashMap$Entry: de.greenrobot.dao.internal.LongHashMap$Entry next> = $r5;

        $r1[$i5] = $r3;

        $r3 = $r4;

        goto label2;

     label3:
        $i3 = $i3 + 1;

        goto label1;

     label4:
        r0.<de.greenrobot.dao.internal.LongHashMap: de.greenrobot.dao.internal.LongHashMap$Entry[] table> = $r1;

        r0.<de.greenrobot.dao.internal.LongHashMap: int capacity> = $i0;

        $i0 = $i0 * 4;

        $i0 = $i0 / 3;

        r0.<de.greenrobot.dao.internal.LongHashMap: int threshold> = $i0;

        return;
    }

    public final int size()
    {
        int i0;
        de.greenrobot.dao.internal.LongHashMap r0;

        r0 := @this: de.greenrobot.dao.internal.LongHashMap;

        i0 = r0.<de.greenrobot.dao.internal.LongHashMap: int size>;

        return i0;
    }
}
