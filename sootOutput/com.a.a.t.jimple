final class com.a.a.t extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{
    static final java.io.FilenameFilter a;
    static final java.util.Comparator b;
    static final java.util.Comparator c;
    static final java.io.FilenameFilter d;
    private static final java.util.regex.Pattern e;
    private static final java.util.Map f;
    private static final com.a.a.b g;
    private java.lang.StackTraceElement[] A;
    private final com.a.a.h B;
    private final java.util.concurrent.atomic.AtomicInteger h;
    private final java.util.concurrent.atomic.AtomicBoolean i;
    private final int j;
    private final java.lang.Thread$UncaughtExceptionHandler k;
    private final java.io.File l;
    private final java.io.File m;
    private final java.util.concurrent.atomic.AtomicBoolean n;
    private final java.lang.String o;
    private final android.content.BroadcastReceiver p;
    private final android.content.BroadcastReceiver q;
    private final com.a.a.b r;
    private final com.a.a.b s;
    private final java.util.concurrent.ExecutorService t;
    private final c.a.a.a.a.b.y u;
    private android.app.ActivityManager$RunningAppProcessInfo v;
    private c.a.a.a.a.b.ac w;
    private boolean x;
    private java.lang.Thread[] y;
    private java.util.List z;

    static void <clinit>()
    {
        com.a.a.af $r1;
        com.a.a.u $r0;
        com.a.a.ah $r2;
        com.a.a.ai $r3;
        java.util.Map $r5;
        com.a.a.b $r6;
        java.util.regex.Pattern $r4;

        $r0 = new com.a.a.u;

        specialinvoke $r0.<com.a.a.u: void <init>()>();

        <com.a.a.t: java.io.FilenameFilter a> = $r0;

        $r1 = new com.a.a.af;

        specialinvoke $r1.<com.a.a.af: void <init>()>();

        <com.a.a.t: java.util.Comparator b> = $r1;

        $r2 = new com.a.a.ah;

        specialinvoke $r2.<com.a.a.ah: void <init>()>();

        <com.a.a.t: java.util.Comparator c> = $r2;

        $r3 = new com.a.a.ai;

        specialinvoke $r3.<com.a.a.ai: void <init>()>();

        <com.a.a.t: java.io.FilenameFilter d> = $r3;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([\\d|A-Z|a-z]{12}\\-[\\d|A-Z|a-z]{4}\\-[\\d|A-Z|a-z]{4}\\-[\\d|A-Z|a-z]{12}).+");

        <com.a.a.t: java.util.regex.Pattern e> = $r4;

        $r5 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("X-CRASHLYTICS-SEND-FLAGS", "1");

        <com.a.a.t: java.util.Map f> = $r5;

        $r6 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>("0");

        <com.a.a.t: com.a.a.b g> = $r6;

        return;
    }

    void <init>(java.lang.Thread$UncaughtExceptionHandler, java.util.concurrent.ExecutorService, java.lang.String, c.a.a.a.a.b.y, com.a.a.h)
    {
        android.content.Context $r20;
        java.lang.Object[] $r11;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        c.a.a.a.a.b.y $r4;
        java.lang.Thread$UncaughtExceptionHandler $r1;
        java.util.concurrent.atomic.AtomicInteger $r6;
        java.util.Locale $r10;
        com.a.a.b $r15;
        java.lang.String $r3, $r12;
        com.a.a.aj $r16;
        com.a.a.ak $r18;
        java.util.concurrent.ExecutorService $r2;
        boolean $z0;
        com.a.a.t r0;
        android.content.IntentFilter $r17, $r19;
        c.a.a.a.q $r13;
        com.a.a.h $r5, $r14;
        android.content.BroadcastReceiver $r21;
        java.io.File $r8, $r9;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.lang.Thread$UncaughtExceptionHandler;

        $r2 := @parameter1: java.util.concurrent.ExecutorService;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: c.a.a.a.a.b.y;

        $r5 := @parameter4: com.a.a.h;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.a.a.t: java.util.concurrent.atomic.AtomicInteger h> = $r6;

        $r7 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.a.a.t: java.util.concurrent.atomic.AtomicBoolean i> = $r7;

        r0.<com.a.a.t: java.lang.Thread$UncaughtExceptionHandler k> = $r1;

        r0.<com.a.a.t: java.util.concurrent.ExecutorService t> = $r2;

        r0.<com.a.a.t: c.a.a.a.a.b.y u> = $r4;

        r0.<com.a.a.t: com.a.a.h B> = $r5;

        $r7 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.a.a.t: java.util.concurrent.atomic.AtomicBoolean n> = $r7;

        $r8 = virtualinvoke $r5.<com.a.a.h: java.io.File q()>();

        r0.<com.a.a.t: java.io.File l> = $r8;

        $r8 = new java.io.File;

        $r9 = r0.<com.a.a.t: java.io.File l>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "initialization_marker");

        r0.<com.a.a.t: java.io.File m> = $r8;

        $r10 = <java.util.Locale: java.util.Locale US>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = "2.2.0.25";

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r10, "Crashlytics Android SDK/%s", $r11);

        r0.<com.a.a.t: java.lang.String o> = $r12;

        r0.<com.a.a.t: int j> = 8;

        $r13 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r13.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Checking for previous crash marker.");

        $r8 = new java.io.File;

        $r14 = r0.<com.a.a.t: com.a.a.h B>;

        $r9 = virtualinvoke $r14.<com.a.a.h: java.io.File q()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "crash_marker");

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

     label1:
        $r12 = virtualinvoke $r5.<com.a.a.h: java.lang.String h()>();

        $r15 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r12);

        r0.<com.a.a.t: com.a.a.b r> = $r15;

        if $r3 != null goto label3;

        $r15 = null;

     label2:
        r0.<com.a.a.t: com.a.a.b s> = $r15;

        $r16 = new com.a.a.aj;

        specialinvoke $r16.<com.a.a.aj: void <init>(com.a.a.t)>(r0);

        r0.<com.a.a.t: android.content.BroadcastReceiver q> = $r16;

        $r17 = new android.content.IntentFilter;

        specialinvoke $r17.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.ACTION_POWER_CONNECTED");

        $r18 = new com.a.a.ak;

        specialinvoke $r18.<com.a.a.ak: void <init>(com.a.a.t)>(r0);

        r0.<com.a.a.t: android.content.BroadcastReceiver p> = $r18;

        $r19 = new android.content.IntentFilter;

        specialinvoke $r19.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.ACTION_POWER_DISCONNECTED");

        $r20 = virtualinvoke $r5.<com.a.a.h: android.content.Context w()>();

        $r21 = r0.<com.a.a.t: android.content.BroadcastReceiver q>;

        virtualinvoke $r20.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r21, $r17);

        $r21 = r0.<com.a.a.t: android.content.BroadcastReceiver p>;

        virtualinvoke $r20.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r21, $r19);

        $r7 = r0.<com.a.a.t: java.util.concurrent.atomic.AtomicBoolean i>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;

     label3:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "");

        $r15 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r3);

        goto label2;
    }

    private static int a(int, int, long, long)
    {
        int $i0, $i1, $i4;
        long $l2, $l3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 := @parameter2: long;

        $l3 := @parameter3: long;

        $i4 = staticinvoke <com.a.a.f: int a()>();

        $i0 = staticinvoke <com.a.a.f: int d(int)>($i0);

        $i0 = $i4 + $i0;

        $i4 = staticinvoke <com.a.a.f: int c(int)>(3);

        $i0 = $i0 + $i4;

        $i1 = staticinvoke <com.a.a.f: int c(int,int)>(4, $i1);

        $i0 = $i0 + $i1;

        $i1 = staticinvoke <com.a.a.f: int b(int,long)>(5, $l2);

        $i0 = $i0 + $i1;

        $i1 = staticinvoke <com.a.a.f: int b(int,long)>(6, $l3);

        $i0 = $i0 + $i1;

        return $i0;
    }

    private static int a(int, com.a.a.b, com.a.a.b, int, long, long, java.util.Map, int, com.a.a.b, com.a.a.b)
    {
        long $l2, $l3;
        c.a.a.a.a.b.z $r9;
        com.a.a.b $r0, $r1, $r3, $r4;
        java.util.Map $r2;
        int $i0, $i1, $i4, $i5, $i6;
        java.lang.String $r10;
        boolean $z0;
        java.util.Map$Entry $r8;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.lang.Object $r7;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.a.a.b;

        $r1 := @parameter2: com.a.a.b;

        $i1 := @parameter3: int;

        $l2 := @parameter4: long;

        $l3 := @parameter5: long;

        $r2 := @parameter6: java.util.Map;

        $i4 := @parameter7: int;

        $r3 := @parameter8: com.a.a.b;

        $r4 := @parameter9: com.a.a.b;

        $i5 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(1, $r0);

        $i0 = staticinvoke <com.a.a.f: int d(int,int)>(3, $i0);

        $i0 = $i0 + $i5;

        if $r1 != null goto label3;

        $i5 = 0;

     label1:
        $i0 = $i5 + $i0;

        $i1 = staticinvoke <com.a.a.f: int c(int,int)>(5, $i1);

        $i0 = $i0 + $i1;

        $i1 = staticinvoke <com.a.a.f: int b(int,long)>(6, $l2);

        $i0 = $i0 + $i1;

        $i1 = staticinvoke <com.a.a.f: int b(int,long)>(7, $l3);

        $i0 = $i0 + $i1;

        $i1 = staticinvoke <com.a.a.f: int c(int)>(10);

        $i0 = $i0 + $i1;

        if $r2 == null goto label4;

        $r5 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (c.a.a.a.a.b.z) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r7;

        $i1 = staticinvoke <com.a.a.t: int a(c.a.a.a.a.b.z,java.lang.String)>($r9, $r10);

        $i5 = staticinvoke <com.a.a.f: int e(int)>(11);

        $i6 = staticinvoke <com.a.a.f: int g(int)>($i1);

        $i5 = $i5 + $i6;

        $i1 = $i1 + $i5;

        $i0 = $i1 + $i0;

        goto label2;

     label3:
        $i5 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(4, $r1);

        goto label1;

     label4:
        $i1 = staticinvoke <com.a.a.f: int c(int,int)>(12, $i4);

        $i0 = $i0 + $i1;

        if $r3 != null goto label7;

        $i1 = 0;

     label5:
        $i0 = $i0 + $i1;

        if $r4 != null goto label8;

        $i1 = 0;

     label6:
        $i0 = $i1 + $i0;

        return $i0;

     label7:
        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(13, $r3);

        goto label5;

     label8:
        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(14, $r4);

        goto label6;
    }

    private static int a(c.a.a.a.a.b.z, java.lang.String)
    {
        c.a.a.a.a.b.z $r0;
        com.a.a.b $r2;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: c.a.a.a.a.b.z;

        $r1 := @parameter1: java.lang.String;

        $i0 = $r0.<c.a.a.a.a.b.z: int h>;

        $i0 = staticinvoke <com.a.a.f: int d(int,int)>(1, $i0);

        $r2 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r1);

        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(2, $r2);

        $i0 = $i0 + $i1;

        return $i0;
    }

    private static int a(java.lang.StackTraceElement, boolean)
    {
        long $l1;
        byte $b3;
        com.a.a.b $r3;
        int $i0, $i2;
        java.lang.StackTraceElement $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0, $z1;

        $r0 := @parameter0: java.lang.StackTraceElement;

        $z0 := @parameter1: boolean;

        $z1 = virtualinvoke $r0.<java.lang.StackTraceElement: boolean isNativeMethod()>();

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke $r0.<java.lang.StackTraceElement: int getLineNumber()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        $l1 = (long) $i0;

        $i0 = staticinvoke <com.a.a.f: int b(int,long)>(1, $l1);

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r0.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r2);

        $i2 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(2, $r3);

        $i0 = $i0 + $i2;

        $r2 = virtualinvoke $r0.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        if $r2 == null goto label2;

        $r2 = virtualinvoke $r0.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        $r3 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r2);

        $i2 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(3, $r3);

        $i0 = $i0 + $i2;

     label2:
        $z1 = virtualinvoke $r0.<java.lang.StackTraceElement: boolean isNativeMethod()>();

        if $z1 != 0 goto label3;

        $i2 = virtualinvoke $r0.<java.lang.StackTraceElement: int getLineNumber()>();

        if $i2 <= 0 goto label3;

        $i2 = virtualinvoke $r0.<java.lang.StackTraceElement: int getLineNumber()>();

        $l1 = (long) $i2;

        $i2 = staticinvoke <com.a.a.f: int b(int,long)>(4, $l1);

        $i0 = $i0 + $i2;

     label3:
        if $z0 == 0 goto label6;

        $b3 = 2;

     label4:
        $i2 = staticinvoke <com.a.a.f: int c(int,int)>(5, $b3);

        $i0 = $i2 + $i0;

        return $i0;

     label5:
        $i0 = staticinvoke <com.a.a.f: int b(int,long)>(1, 0L);

        goto label1;

     label6:
        $b3 = 0;

        goto label4;
    }

    private static int a(java.lang.String, java.lang.String)
    {
        com.a.a.b $r2;
        int $i0, $i1;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r0);

        $i0 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(1, $r2);

        if $r1 != null goto label1;

        $r1 = "";

     label1:
        $r2 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r1);

        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(2, $r2);

        $i0 = $i0 + $i1;

        return $i0;
    }

    private int a(java.lang.Thread, java.lang.Throwable, java.util.Map)
    {
        java.lang.Throwable $r2;
        android.app.ActivityManager$RunningAppProcessInfo $r10;
        android.content.Context $r12;
        java.lang.Thread $r1;
        java.util.Map $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r8, $r9;
        boolean $z0;
        com.a.a.t r0;
        java.util.Map$Entry $r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        com.a.a.h $r11;
        android.content.res.Configuration $r14;
        java.lang.Object $r6;
        android.content.res.Resources $r13;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 := @parameter2: java.util.Map;

        $i0 = specialinvoke r0.<com.a.a.t: int b(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        $i1 = staticinvoke <com.a.a.f: int e(int)>(1);

        $i2 = staticinvoke <com.a.a.f: int g(int)>($i0);

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        if $r3 == null goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r6;

        $i1 = staticinvoke <com.a.a.t: int a(java.lang.String,java.lang.String)>($r8, $r9);

        $i2 = staticinvoke <com.a.a.f: int e(int)>(2);

        $i3 = staticinvoke <com.a.a.f: int g(int)>($i1);

        $i2 = $i2 + $i3;

        $i1 = $i1 + $i2;

        $i0 = $i1 + $i0;

        goto label1;

     label2:
        $r10 = r0.<com.a.a.t: android.app.ActivityManager$RunningAppProcessInfo v>;

        if $r10 == null goto label3;

        $r10 = r0.<com.a.a.t: android.app.ActivityManager$RunningAppProcessInfo v>;

        $i1 = $r10.<android.app.ActivityManager$RunningAppProcessInfo: int importance>;

        $i1 = staticinvoke <com.a.a.f: int c(int)>(3);

        $i0 = $i0 + $i1;

     label3:
        $r11 = r0.<com.a.a.t: com.a.a.h B>;

        $r12 = virtualinvoke $r11.<com.a.a.h: android.content.Context w()>();

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.res.Resources getResources()>();

        $r14 = virtualinvoke $r13.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i1 = $r14.<android.content.res.Configuration: int orientation>;

        $i1 = staticinvoke <com.a.a.f: int c(int,int)>(4, $i1);

        $i0 = $i1 + $i0;

        return $i0;
    }

    private static int a(java.lang.Thread, java.lang.StackTraceElement[], int, boolean)
    {
        java.lang.StackTraceElement[] $r1;
        java.lang.Thread $r0;
        com.a.a.b $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StackTraceElement $r4;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Thread;

        $r1 := @parameter1: java.lang.StackTraceElement[];

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r2 = virtualinvoke $r0.<java.lang.Thread: java.lang.String getName()>();

        $r3 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r2);

        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(1, $r3);

        $i0 = staticinvoke <com.a.a.f: int c(int,int)>(2, $i0);

        $i1 = $i0 + $i1;

        $i0 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r4 = $r1[$i2];

        $i3 = staticinvoke <com.a.a.t: int a(java.lang.StackTraceElement,boolean)>($r4, $z0);

        $i4 = staticinvoke <com.a.a.f: int e(int)>(3);

        $i5 = staticinvoke <com.a.a.f: int g(int)>($i3);

        $i4 = $i4 + $i5;

        $i3 = $i3 + $i4;

        $i1 = $i1 + $i3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i1;
    }

    private int a(java.lang.Throwable, int)
    {
        java.lang.Throwable $r1, $r7;
        com.a.a.b $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StackTraceElement $r6;
        java.lang.String $r3;
        com.a.a.t r0;
        java.lang.StackTraceElement[] $r5;
        java.lang.Class $r2;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.lang.Throwable;

        $i0 := @parameter1: int;

        $i2 = 0;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r3);

        $i3 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(1, $r4);

        $r3 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getLocalizedMessage()>();

        if $r3 == null goto label1;

        $r4 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r3);

        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(3, $r4);

        $i3 = $i3 + $i1;

     label1:
        $r5 = virtualinvoke $r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i1 = lengthof $r5;

        $i4 = 0;

     label2:
        if $i4 >= $i1 goto label3;

        $r6 = $r5[$i4];

        $i5 = staticinvoke <com.a.a.t: int a(java.lang.StackTraceElement,boolean)>($r6, 1);

        $i6 = staticinvoke <com.a.a.f: int e(int)>(4);

        $i7 = staticinvoke <com.a.a.f: int g(int)>($i5);

        $i6 = $i6 + $i7;

        $i5 = $i5 + $i6;

        $i4 = $i4 + 1;

        $i3 = $i5 + $i3;

        goto label2;

     label3:
        $r1 = virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $r7 = $r1;

        if $r1 == null goto label6;

        $i1 = r0.<com.a.a.t: int j>;

        if $i0 >= $i1 goto label4;

        $i0 = $i0 + 1;

        $i0 = specialinvoke r0.<com.a.a.t: int a(java.lang.Throwable,int)>($r1, $i0);

        $i2 = staticinvoke <com.a.a.f: int e(int)>(6);

        $i1 = staticinvoke <com.a.a.f: int g(int)>($i0);

        $i2 = $i2 + $i1;

        $i0 = $i0 + $i2;

        $i0 = $i3 + $i0;

        return $i0;

     label4:
        if $r7 == null goto label5;

        $r7 = virtualinvoke $r7.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $i2 = $i2 + 1;

        goto label4;

     label5:
        $i0 = staticinvoke <com.a.a.f: int c(int,int)>(7, $i2);

        $i0 = $i3 + $i0;

        return $i0;

     label6:
        return $i3;
    }

    private com.a.a.b a(c.a.a.a.a.b.ac)
    {
        java.lang.Throwable $r6;
        com.a.a.t r0;
        byte[] $r3;
        com.a.a.ab $r4;
        c.a.a.a.q $r7;
        c.a.a.a.a.b.ac $r1;
        int[] $r2;
        com.a.a.b $r5;
        int $i0;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: c.a.a.a.a.b.ac;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = newarray (int)[1];

        $r2[0] = 0;

        $i0 = virtualinvoke $r1.<c.a.a.a.a.b.ac: int a()>();

        $r3 = newarray (byte)[$i0];

        $r4 = new com.a.a.ab;

     label2:
        specialinvoke $r4.<com.a.a.ab: void <init>(com.a.a.t,byte[],int[])>(r0, $r3, $r2);

        virtualinvoke $r1.<c.a.a.a.a.b.ac: void a(c.a.a.a.a.b.ag)>($r4);

     label3:
        $i0 = $r2[0];

        $r5 = staticinvoke <com.a.a.b: com.a.a.b a(byte[],int)>($r3, $i0);

        return $r5;

     label4:
        $r6 := @caughtexception;

        $r7 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r7.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "A problem occurred while reading the Crashlytics log file.", $r6);

        goto label3;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private java.lang.Object a(java.util.concurrent.Callable)
    {
        java.lang.Throwable $r8;
        com.a.a.t r0;
        java.util.concurrent.Callable $r1;
        c.a.a.a.q $r9;
        java.lang.Exception $r10;
        java.util.concurrent.TimeUnit $r6;
        java.util.concurrent.Future $r5;
        android.os.Looper $r2, $r3;
        java.lang.Object $r7;
        java.util.concurrent.ExecutorService $r4;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.util.concurrent.Callable;

     label01:
        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

     label02:
        if $r2 != $r3 goto label08;

     label03:
        $r4 = r0.<com.a.a.t: java.util.concurrent.ExecutorService t>;

     label04:
        $r5 = interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r1);

     label05:
        $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

     label06:
        $r7 = interfaceinvoke $r5.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(4L, $r6);

     label07:
        return $r7;

     label08:
        $r4 = r0.<com.a.a.t: java.util.concurrent.ExecutorService t>;

     label09:
        $r5 = interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r1);

        $r7 = interfaceinvoke $r5.<java.util.concurrent.Future: java.lang.Object get()>();

     label10:
        return $r7;

     label11:
        $r8 := @caughtexception;

        $r9 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r9.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Executor is shut down because we\'re handling a fatal crash.");

        return null;

     label12:
        $r10 := @caughtexception;

        $r9 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r9.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failed to execute task.", $r10);

        return null;

        catch java.util.concurrent.RejectedExecutionException from label01 to label02 with label11;
        catch java.util.concurrent.RejectedExecutionException from label04 to label05 with label11;
        catch java.util.concurrent.RejectedExecutionException from label06 to label07 with label11;
        catch java.util.concurrent.RejectedExecutionException from label09 to label10 with label11;
        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label10 with label12;
    }

    private static java.lang.String a(java.io.File)
    {
        java.lang.String $r1;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 35);

        return $r1;
    }

    private java.util.concurrent.Future a(java.lang.Runnable)
    {
        java.lang.Throwable $r5;
        com.a.a.t r0;
        java.util.concurrent.Future $r4;
        c.a.a.a.q $r6;
        java.lang.Runnable $r1;
        com.a.a.x $r3;
        java.util.concurrent.ExecutorService $r2;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.a.a.t: java.util.concurrent.ExecutorService t>;

        $r3 = new com.a.a.x;

     label1:
        specialinvoke $r3.<com.a.a.x: void <init>(com.a.a.t,java.lang.Runnable)>(r0, $r1);

        $r4 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r6.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Executor is shut down because we\'re handling a fatal crash.");

        return null;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
    }

    static java.util.concurrent.atomic.AtomicBoolean a(com.a.a.t)
    {
        com.a.a.t $r0;
        java.util.concurrent.atomic.AtomicBoolean r1;

        $r0 := @parameter0: com.a.a.t;

        r1 = $r0.<com.a.a.t: java.util.concurrent.atomic.AtomicBoolean n>;

        return r1;
    }

    private static void a(com.a.a.f, int, java.lang.StackTraceElement, boolean)
    {
        long $l2;
        com.a.a.f $r0;
        byte $b1;
        com.a.a.b $r4;
        int $i0;
        java.lang.StackTraceElement $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0, $z1;

        $r0 := @parameter0: com.a.a.f;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.StackTraceElement;

        $z0 := @parameter3: boolean;

        $b1 = 4;

        virtualinvoke $r0.<com.a.a.f: void e(int,int)>($i0, 2);

        $i0 = staticinvoke <com.a.a.t: int a(java.lang.StackTraceElement,boolean)>($r1, $z0);

        virtualinvoke $r0.<com.a.a.f: void f(int)>($i0);

        $z1 = virtualinvoke $r1.<java.lang.StackTraceElement: boolean isNativeMethod()>();

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke $r1.<java.lang.StackTraceElement: int getLineNumber()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        $l2 = (long) $i0;

        virtualinvoke $r0.<com.a.a.f: void a(int,long)>(1, $l2);

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r1.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r3);

        virtualinvoke $r0.<com.a.a.f: void a(int,com.a.a.b)>(2, $r4);

        $r3 = virtualinvoke $r1.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        if $r3 == null goto label2;

        $r3 = virtualinvoke $r1.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        $r4 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r3);

        virtualinvoke $r0.<com.a.a.f: void a(int,com.a.a.b)>(3, $r4);

     label2:
        $z1 = virtualinvoke $r1.<java.lang.StackTraceElement: boolean isNativeMethod()>();

        if $z1 != 0 goto label3;

        $i0 = virtualinvoke $r1.<java.lang.StackTraceElement: int getLineNumber()>();

        if $i0 <= 0 goto label3;

        $i0 = virtualinvoke $r1.<java.lang.StackTraceElement: int getLineNumber()>();

        $l2 = (long) $i0;

        virtualinvoke $r0.<com.a.a.f: void a(int,long)>(4, $l2);

     label3:
        if $z0 == 0 goto label6;

     label4:
        virtualinvoke $r0.<com.a.a.f: void a(int,int)>(5, $b1);

        return;

     label5:
        virtualinvoke $r0.<com.a.a.f: void a(int,long)>(1, 0L);

        goto label1;

     label6:
        $b1 = 0;

        goto label4;
    }

    private static void a(com.a.a.f, java.io.File)
    {
        java.lang.Throwable $r4;
        byte[] $r2;
        long $l0;
        c.a.a.a.q $r5;
        java.io.FileInputStream $r3;
        java.io.File $r1;
        com.a.a.f $r0;
        int $i1, $i2;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        boolean $z0;

        $r0 := @parameter0: com.a.a.f;

        $r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label12;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        $i1 = (int) $l0;

        $r2 = newarray (byte)[$i1];

     label01:
        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label02:
        $i1 = 0;

     label03:
        $i2 = lengthof $r2;

     label04:
        if $i1 >= $i2 goto label09;

     label05:
        $i2 = lengthof $r2;

     label06:
        $i2 = $i2 - $i1;

     label07:
        $i2 = virtualinvoke $r3.<java.io.FileInputStream: int read(byte[],int,int)>($r2, $i1, $i2);

     label08:
        if $i2 < 0 goto label09;

        $i1 = $i1 + $i2;

        goto label03;

     label09:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close file input stream.");

        virtualinvoke $r0.<com.a.a.f: void a(byte[])>($r2);

        return;

     label10:
        $r4 := @caughtexception;

        $r3 = null;

     label11:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close file input stream.");

        throw $r4;

     label12:
        $r5 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Tried to include a file that doesn\'t exist: ");

        $r7 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", $r7, null);

        return;

     label13:
        $r4 := @caughtexception;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
    }

    private void a(com.a.a.f, java.lang.String)
    {
        com.a.a.t r0;
        java.lang.String[] $r3;
        c.a.a.a.q $r9;
        java.io.File $r10;
        com.a.a.f $r1;
        int $i0, $i1;
        com.a.a.ao $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r2, $r4, $r7;
        java.io.File[] $r8;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: com.a.a.f;

        $r2 := @parameter1: java.lang.String;

        $r3 = newarray (java.lang.String)[4];

        $r3[0] = "SessionUser";

        $r3[1] = "SessionApp";

        $r3[2] = "SessionOS";

        $r3[3] = "SessionDevice";

        $i0 = 0;

     label1:
        if $i0 >= 4 goto label4;

        $r4 = $r3[$i0];

        $r5 = new com.a.a.ao;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.a.a.ao: void <init>(java.lang.String)>($r7);

        $r8 = specialinvoke r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r5);

        $i1 = lengthof $r8;

        if $i1 != 0 goto label3;

        $r9 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can\'t find ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data for session ID ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", $r4, null);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r9 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Collecting ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data for session ID ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r4);

        $r10 = $r8[0];

        staticinvoke <com.a.a.t: void a(com.a.a.f,java.io.File)>($r1, $r10);

        goto label2;

     label4:
        return;
    }

    private void a(com.a.a.f, java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r4, $r12;
        com.a.a.f $r1;
        byte $b2;
        java.lang.Thread $r2;
        com.a.a.b $r11;
        int $i0, $i1, $i3;
        java.lang.StackTraceElement $r3;
        java.lang.String $r10;
        com.a.a.t r0;
        java.lang.Thread[] $r6;
        java.util.List $r7;
        java.lang.StackTraceElement[] $r5;
        java.lang.Object $r8;
        java.lang.Class $r9;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: com.a.a.f;

        $r2 := @parameter1: java.lang.Thread;

        $r4 := @parameter2: java.lang.Throwable;

        virtualinvoke $r1.<com.a.a.f: void e(int,int)>(1, 2);

        $i1 = specialinvoke r0.<com.a.a.t: int b(java.lang.Thread,java.lang.Throwable)>($r2, $r4);

        virtualinvoke $r1.<com.a.a.f: void f(int)>($i1);

        $r5 = r0.<com.a.a.t: java.lang.StackTraceElement[] A>;

        staticinvoke <com.a.a.t: void a(com.a.a.f,java.lang.Thread,java.lang.StackTraceElement[],int,boolean)>($r1, $r2, $r5, 4, 1);

        $r6 = r0.<com.a.a.t: java.lang.Thread[] y>;

        $i1 = lengthof $r6;

        $i0 = 0;

     label01:
        if $i0 >= $i1 goto label02;

        $r6 = r0.<com.a.a.t: java.lang.Thread[] y>;

        $r2 = $r6[$i0];

        $r7 = r0.<com.a.a.t: java.util.List z>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (java.lang.StackTraceElement[]) $r8;

        staticinvoke <com.a.a.t: void a(com.a.a.f,java.lang.Thread,java.lang.StackTraceElement[],int,boolean)>($r1, $r2, $r5, 0, 0);

        $i0 = $i0 + 1;

        goto label01;

     label02:
        $b2 = 2;

        $i1 = 1;

     label03:
        virtualinvoke $r1.<com.a.a.f: void e(int,int)>($b2, 2);

        $i0 = specialinvoke r0.<com.a.a.t: int a(java.lang.Throwable,int)>($r4, 1);

        virtualinvoke $r1.<com.a.a.f: void f(int)>($i0);

        $r9 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r10);

        virtualinvoke $r1.<com.a.a.f: void a(int,com.a.a.b)>(1, $r11);

        $r10 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getLocalizedMessage()>();

        if $r10 == null goto label04;

        $r11 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r10);

        virtualinvoke $r1.<com.a.a.f: void a(int,com.a.a.b)>(3, $r11);

     label04:
        $r5 = virtualinvoke $r4.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i0 = lengthof $r5;

        $i3 = 0;

     label05:
        if $i3 >= $i0 goto label06;

        $r3 = $r5[$i3];

        staticinvoke <com.a.a.t: void a(com.a.a.f,int,java.lang.StackTraceElement,boolean)>($r1, 4, $r3, 1);

        $i3 = $i3 + 1;

        goto label05;

     label06:
        $r12 = virtualinvoke $r4.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $r4 = $r12;

        if $r12 == null goto label10;

        $i0 = r0.<com.a.a.t: int j>;

        if $i1 >= $i0 goto label07;

        $i1 = $i1 + 1;

        $b2 = 6;

        goto label03;

     label07:
        $i1 = 0;

     label08:
        if $r4 == null goto label09;

        $r4 = virtualinvoke $r4.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $i1 = $i1 + 1;

        goto label08;

     label09:
        virtualinvoke $r1.<com.a.a.f: void a(int,int)>(7, $i1);

     label10:
        virtualinvoke $r1.<com.a.a.f: void e(int,int)>(3, 2);

        $i1 = staticinvoke <com.a.a.t: int q()>();

        virtualinvoke $r1.<com.a.a.f: void f(int)>($i1);

        $r11 = <com.a.a.t: com.a.a.b g>;

        virtualinvoke $r1.<com.a.a.f: void a(int,com.a.a.b)>(1, $r11);

        $r11 = <com.a.a.t: com.a.a.b g>;

        virtualinvoke $r1.<com.a.a.f: void a(int,com.a.a.b)>(2, $r11);

        virtualinvoke $r1.<com.a.a.f: void a(int,long)>(3, 0L);

        virtualinvoke $r1.<com.a.a.f: void e(int,int)>(4, 2);

        $i1 = specialinvoke r0.<com.a.a.t: int p()>();

        virtualinvoke $r1.<com.a.a.f: void f(int)>($i1);

        virtualinvoke $r1.<com.a.a.f: void a(int,long)>(1, 0L);

        virtualinvoke $r1.<com.a.a.f: void a(int,long)>(2, 0L);

        $r11 = r0.<com.a.a.t: com.a.a.b r>;

        virtualinvoke $r1.<com.a.a.f: void a(int,com.a.a.b)>(3, $r11);

        $r11 = r0.<com.a.a.t: com.a.a.b s>;

        if $r11 == null goto label11;

        $r11 = r0.<com.a.a.t: com.a.a.b s>;

        virtualinvoke $r1.<com.a.a.f: void a(int,com.a.a.b)>(4, $r11);

     label11:
        return;
    }

    private static void a(com.a.a.f, java.lang.Thread, java.lang.StackTraceElement[], int, boolean)
    {
        com.a.a.f $r0;
        java.lang.StackTraceElement[] $r2;
        java.lang.Thread $r1;
        com.a.a.b $r4;
        int $i0, $i1;
        java.lang.StackTraceElement $r5;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: com.a.a.f;

        $r1 := @parameter1: java.lang.Thread;

        $r2 := @parameter2: java.lang.StackTraceElement[];

        $i0 := @parameter3: int;

        $z0 := @parameter4: boolean;

        virtualinvoke $r0.<com.a.a.f: void e(int,int)>(1, 2);

        $i1 = staticinvoke <com.a.a.t: int a(java.lang.Thread,java.lang.StackTraceElement[],int,boolean)>($r1, $r2, $i0, $z0);

        virtualinvoke $r0.<com.a.a.f: void f(int)>($i1);

        $r3 = virtualinvoke $r1.<java.lang.Thread: java.lang.String getName()>();

        $r4 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r3);

        virtualinvoke $r0.<com.a.a.f: void a(int,com.a.a.b)>(1, $r4);

        virtualinvoke $r0.<com.a.a.f: void a(int,int)>(2, $i0);

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r5 = $r2[$i1];

        staticinvoke <com.a.a.t: void a(com.a.a.f,int,java.lang.StackTraceElement,boolean)>($r0, 3, $r5, $z0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static void a(com.a.a.f, java.util.Map)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.a.a.f $r0;
        java.util.Map $r1;
        com.a.a.b $r8;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r6, $r7;
        boolean $z0;

        $r0 := @parameter0: com.a.a.f;

        $r1 := @parameter1: java.util.Map;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        virtualinvoke $r0.<com.a.a.f: void e(int,int)>(2, 2);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r4;

        $i0 = staticinvoke <com.a.a.t: int a(java.lang.String,java.lang.String)>($r6, $r7);

        virtualinvoke $r0.<com.a.a.f: void f(int)>($i0);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        $r8 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r6);

        virtualinvoke $r0.<com.a.a.f: void a(int,com.a.a.b)>(1, $r8);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.String) $r4;

        if $r6 != null goto label2;

        $r6 = "";

     label2:
        $r8 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r6);

        virtualinvoke $r0.<com.a.a.f: void a(int,com.a.a.b)>(2, $r8);

        goto label1;

     label3:
        return;
    }

    private static void a(com.a.a.f, java.io.File[], java.lang.String)
    {
        java.lang.Object[] $r7;
        c.a.a.a.q $r5;
        java.io.File $r4;
        java.lang.Exception $r9;
        com.a.a.f $r0;
        java.util.Locale $r6;
        int $i0, $i1;
        java.lang.String $r2, $r8;
        java.util.Comparator $r3;
        java.io.File[] $r1;

        $r0 := @parameter0: com.a.a.f;

        $r1 := @parameter1: java.io.File[];

        $r2 := @parameter2: java.lang.String;

        $r3 = <c.a.a.a.a.b.l: java.util.Comparator a>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r1, $r3);

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label7;

        $r4 = $r1[$i1];

     label2:
        $r5 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

     label3:
        $r6 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[2];

     label4:
        $r7[0] = $r2;

        $r8 = virtualinvoke $r4.<java.io.File: java.lang.String getName()>();

        $r7[1] = $r8;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "Found Non Fatal for session ID %s in %s ", $r7);

        interfaceinvoke $r5.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r8);

        staticinvoke <com.a.a.t: void a(com.a.a.f,java.io.File)>($r0, $r4);

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        $r9 := @caughtexception;

        $r5 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r5.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Error writting non-fatal to session.", $r9);

        goto label5;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    static void a(com.a.a.t, com.a.a.c.a.c)
    {
        java.lang.Throwable $r10, $r11, $r12, $r13;
        com.a.a.d $r4;
        com.a.a.f $r2, $r7;
        java.lang.String $r3;
        com.a.a.t $r0;
        com.a.a.c.a.c $r1;
        c.a.a.a.q $r8;
        java.io.File $r5;
        java.lang.Exception $r9, $r14, $r15;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: com.a.a.t;

        $r1 := @parameter1: com.a.a.c.a.c;

        $r2 = null;

     label01:
        $r3 = specialinvoke $r0.<com.a.a.t: java.lang.String k()>();

     label02:
        if $r3 == null goto label11;

     label03:
        $r4 = new com.a.a.d;

     label04:
        $r5 = $r0.<com.a.a.t: java.io.File l>;

     label05:
        $r6 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.a.a.d: void <init>(java.io.File,java.lang.String)>($r5, $r3);

     label07:
        $r7 = staticinvoke <com.a.a.f: com.a.a.f a(java.io.OutputStream)>($r4);

     label08:
        $r2 = $r7;

     label09:
        staticinvoke <com.a.a.au: void a(com.a.a.c.a.c,com.a.a.f)>($r1, $r7);

     label10:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r2, "Failed to flush to session begin file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close fatal exception file output stream.");

        return;

     label11:
        $r8 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r8.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Tried to write a native crash while no session was open.", null);

     label12:
        $r4 = null;

        goto label10;

     label13:
        $r9 := @caughtexception;

        $r4 = null;

        $r2 = null;

     label14:
        $r8 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r8.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "An error occurred in the native crash logger", $r9);

        staticinvoke <com.a.a.t: void a(java.lang.Throwable,java.io.OutputStream)>($r9, $r4);

     label15:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r2, "Failed to flush to session begin file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close fatal exception file output stream.");

        return;

     label16:
        $r10 := @caughtexception;

        $r4 = null;

        $r11 = $r10;

        $r2 = null;

     label17:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r2, "Failed to flush to session begin file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close fatal exception file output stream.");

        throw $r11;

     label18:
        $r12 := @caughtexception;

        $r2 = null;

        $r11 = $r12;

        goto label17;

     label19:
        $r13 := @caughtexception;

        $r2 = $r7;

        $r11 = $r13;

        goto label17;

     label20:
        $r11 := @caughtexception;

        goto label17;

     label21:
        $r14 := @caughtexception;

        $r2 = null;

        $r9 = $r14;

        goto label14;

     label22:
        $r15 := @caughtexception;

        $r2 = $r7;

        $r9 = $r15;

        goto label14;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label07 with label16;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label20;
    }

    static void a(com.a.a.t, java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r3, $r16;
        java.io.FilenameFilter $r11;
        java.util.Date $r1;
        com.a.a.d $r8;
        com.a.a.f $r4, $r10;
        java.lang.Thread $r2;
        java.lang.String $r7;
        boolean $z0;
        com.a.a.t $r0;
        c.a.a.a.q $r14;
        com.a.a.h $r13;
        java.io.File $r5, $r6;
        java.lang.Exception $r15;
        java.lang.StringBuilder $r9;
        java.util.Comparator $r12;

        $r0 := @parameter0: com.a.a.t;

        $r1 := @parameter1: java.util.Date;

        $r2 := @parameter2: java.lang.Thread;

        $r3 := @parameter3: java.lang.Throwable;

        $r4 = null;

     label01:
        $r5 = new java.io.File;

     label02:
        $r6 = $r0.<com.a.a.t: java.io.File l>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, "crash_marker");

        virtualinvoke $r5.<java.io.File: boolean createNewFile()>();

        $r7 = specialinvoke $r0.<com.a.a.t: java.lang.String k()>();

     label03:
        if $r7 == null goto label14;

     label04:
        staticinvoke <com.a.a.h: void b(java.lang.String)>($r7);

     label05:
        $r8 = new com.a.a.d;

     label06:
        $r5 = $r0.<com.a.a.t: java.io.File l>;

     label07:
        $r9 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.a.a.d: void <init>(java.io.File,java.lang.String)>($r5, $r7);

     label09:
        $r10 = staticinvoke <com.a.a.f: com.a.a.f a(java.io.OutputStream)>($r8);

     label10:
        $r4 = $r10;

     label11:
        specialinvoke $r0.<com.a.a.t: void a(java.util.Date,com.a.a.f,java.lang.Thread,java.lang.Throwable,java.lang.String,boolean)>($r1, $r10, $r2, $r3, "crash", 1);

     label12:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r4, "Failed to flush to session begin file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r8, "Failed to close fatal exception file output stream.");

     label13:
        specialinvoke $r0.<com.a.a.t: void m()>();

        specialinvoke $r0.<com.a.a.t: void l()>();

        $r5 = $r0.<com.a.a.t: java.io.File l>;

        $r11 = <com.a.a.t: java.io.FilenameFilter a>;

        $r12 = <com.a.a.t: java.util.Comparator c>;

        staticinvoke <com.a.a.bm: void a(java.io.File,java.io.FilenameFilter,int,java.util.Comparator)>($r5, $r11, 4, $r12);

        $r13 = $r0.<com.a.a.t: com.a.a.h B>;

        $z0 = virtualinvoke $r13.<com.a.a.h: boolean r()>();

        if $z0 != 0 goto label23;

        specialinvoke $r0.<com.a.a.t: void r()>();

        return;

     label14:
        $r14 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r14.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Tried to write a fatal exception while no session was open.", null);

     label15:
        $r8 = null;

        goto label12;

     label16:
        $r15 := @caughtexception;

        $r8 = null;

     label17:
        $r14 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r14.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "An error occurred in the fatal exception logger", $r15);

        staticinvoke <com.a.a.t: void a(java.lang.Throwable,java.io.OutputStream)>($r15, $r8);

     label18:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r4, "Failed to flush to session begin file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r8, "Failed to close fatal exception file output stream.");

        goto label13;

     label19:
        $r16 := @caughtexception;

        $r8 = null;

     label20:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r4, "Failed to flush to session begin file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r8, "Failed to close fatal exception file output stream.");

        throw $r16;

     label21:
        $r16 := @caughtexception;

        goto label20;

     label22:
        $r15 := @caughtexception;

        goto label17;

     label23:
        return;

        catch java.lang.Exception from label02 to label03 with label16;
        catch java.lang.Exception from label04 to label05 with label16;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Throwable from label01 to label03 with label19;
        catch java.lang.Throwable from label04 to label09 with label19;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.lang.Exception from label11 to label12 with label22;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label21;
    }

    private void a(java.lang.String)
    {
        com.a.a.t r0;
        int $i0, $i1;
        com.a.a.ap $r4;
        java.lang.String $r1;
        java.io.File[] $r3;
        java.io.File $r2;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.lang.String;

        $r4 = new com.a.a.ap;

        specialinvoke $r4.<com.a.a.ap: void <init>(java.lang.String)>($r1);

        $r3 = specialinvoke r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r4);

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r3[$i1];

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void a(java.lang.String, int)
    {
        com.a.a.t r0;
        int $i0;
        com.a.a.ao $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        java.util.Comparator $r5;
        java.io.File $r2;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<com.a.a.t: java.io.File l>;

        $r3 = new com.a.a.ao;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.a.a.ao: void <init>(java.lang.String)>($r1);

        $r5 = <com.a.a.t: java.util.Comparator c>;

        staticinvoke <com.a.a.bm: void a(java.io.File,java.io.FilenameFilter,int,java.util.Comparator)>($r2, $r3, 64, $r5);

        return;
    }

    private static void a(java.lang.Throwable, java.io.OutputStream)
    {
        java.lang.Throwable $r0, $r5;
        java.io.OutputStream $r1;
        java.io.PrintWriter $r3;
        c.a.a.a.q $r2;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.io.OutputStream;

        if $r1 == null goto label12;

     label01:
        $r3 = new java.io.PrintWriter;

     label02:
        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r1);

     label03:
        staticinvoke <com.a.a.t: void a(java.lang.Throwable,java.io.Writer)>($r0, $r3);

     label04:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close stack trace writer.");

        return;

     label05:
        $r4 := @caughtexception;

        $r3 = null;

     label06:
        $r2 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r2.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Failed to create PrintWriter", $r4);

     label07:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close stack trace writer.");

        return;

     label08:
        $r5 := @caughtexception;

        $r3 = null;

     label09:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r3, "Failed to close stack trace writer.");

        throw $r5;

     label10:
        $r5 := @caughtexception;

        goto label09;

     label11:
        $r4 := @caughtexception;

        goto label06;

     label12:
        return;

        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    private static void a(java.lang.Throwable, java.io.Writer)
    {
        java.lang.Throwable $r1;
        c.a.a.a.q $r9;
        java.lang.Exception $r8;
        java.lang.StackTraceElement[] $r6;
        java.io.Writer $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5;
        java.lang.StackTraceElement $r7;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r1 := @parameter0: java.lang.Throwable;

        $r0 := @parameter1: java.io.Writer;

        $z0 = 1;

     label01:
        if $r1 == null goto label21;

     label02:
        $r2 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getLocalizedMessage()>();

     label03:
        if $r2 != null goto label14;

        $r2 = null;

     label04:
        if $r2 == null goto label16;

     label05:
        if $z0 == 0 goto label17;

        $r3 = "";

     label06:
        $r4 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>($r2);

        $r6 = virtualinvoke $r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i0 = lengthof $r6;

     label08:
        $i1 = 0;

     label09:
        if $i1 >= $i0 goto label18;

     label10:
        $r7 = $r6[$i1];

     label11:
        $r4 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("\tat ");

        $r2 = virtualinvoke $r7.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>($r2);

     label13:
        $i1 = $i1 + 1;

        goto label09;

     label14:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(\r\n|\n|\f)", " ");

     label15:
        goto label04;

     label16:
        $r2 = "";

        goto label05;

     label17:
        $r3 = "Caused by: ";

        goto label06;

     label18:
        $r1 = virtualinvoke $r1.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label19:
        $z0 = 0;

        goto label01;

     label20:
        $r8 := @caughtexception;

        $r9 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r9.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Could not write stack trace", $r8);

     label21:
        return;

        catch java.lang.Exception from label02 to label03 with label20;
        catch java.lang.Exception from label07 to label08 with label20;
        catch java.lang.Exception from label10 to label11 with label20;
        catch java.lang.Exception from label12 to label13 with label20;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
    }

    private void a(java.util.Date, com.a.a.f, java.lang.Thread, java.lang.Throwable, java.lang.String, boolean)
    {
        android.app.ActivityManager$RunningAppProcessInfo $r12;
        java.util.Date $r1;
        java.lang.Thread $r3;
        java.util.Map $r14;
        boolean $z0, $z1;
        c.a.a.a.q $r24;
        java.lang.StackTraceElement[] $r13;
        float $f0;
        java.lang.Throwable $r4;
        android.content.Context $r7;
        long $l0, $l3, $l4;
        c.a.a.a.a.b.ac $r22;
        com.a.a.f $r2;
        com.a.a.b $r23, $r25;
        int $i1, $i2, $i5, $i6, $i7, $i8;
        java.lang.String $r5, $r11;
        java.util.LinkedList $r26;
        com.a.a.t r0;
        java.lang.Thread[] $r15;
        com.a.a.h $r6;
        java.io.File $r10;
        java.util.TreeMap $r27;
        android.content.res.Configuration $r9;
        java.lang.Object $r18;
        android.content.res.Resources $r8;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: com.a.a.f;

        $r3 := @parameter2: java.lang.Thread;

        $r4 := @parameter3: java.lang.Throwable;

        $r5 := @parameter4: java.lang.String;

        $z0 := @parameter5: boolean;

        $r6 = r0.<com.a.a.t: com.a.a.h B>;

        $r7 = virtualinvoke $r6.<com.a.a.h: android.content.Context w()>();

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $l0 = $l0 / 1000L;

        $f0 = staticinvoke <c.a.a.a.a.b.l: float c(android.content.Context)>($r7);

        $z1 = r0.<com.a.a.t: boolean x>;

        $i1 = staticinvoke <c.a.a.a.a.b.l: int a(android.content.Context,boolean)>($r7, $z1);

        $z1 = staticinvoke <c.a.a.a.a.b.l: boolean d(android.content.Context)>($r7);

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i2 = $r9.<android.content.res.Configuration: int orientation>;

        $l3 = staticinvoke <c.a.a.a.a.b.l: long b()>();

        $l4 = staticinvoke <c.a.a.a.a.b.l: long b(android.content.Context)>($r7);

        $l3 = $l3 - $l4;

        $r10 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getPath()>();

        $l4 = staticinvoke <c.a.a.a.a.b.l: long b(java.lang.String)>($r11);

        $r6 = r0.<com.a.a.t: com.a.a.h B>;

        $r11 = virtualinvoke $r6.<com.a.a.h: java.lang.String h()>();

        $r12 = staticinvoke <c.a.a.a.a.b.l: android.app.ActivityManager$RunningAppProcessInfo a(java.lang.String,android.content.Context)>($r11, $r7);

        r0.<com.a.a.t: android.app.ActivityManager$RunningAppProcessInfo v> = $r12;

        $r26 = new java.util.LinkedList;

        specialinvoke $r26.<java.util.LinkedList: void <init>()>();

        r0.<com.a.a.t: java.util.List z> = $r26;

        $r13 = virtualinvoke $r4.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        r0.<com.a.a.t: java.lang.StackTraceElement[] A> = $r13;

        goto label01;

     label01:
        $r15 = newarray (java.lang.Thread)[0];

        r0.<com.a.a.t: java.lang.Thread[] y> = $r15;

        $r22 = r0.<com.a.a.t: c.a.a.a.a.b.ac w>;

        $r23 = specialinvoke r0.<com.a.a.t: com.a.a.b a(c.a.a.a.a.b.ac)>($r22);

        if $r23 != null goto label02;

        $r24 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r24.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "No log data to include with this event.");

     label02:
        $r22 = r0.<com.a.a.t: c.a.a.a.a.b.ac w>;

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r22, "There was a problem closing the Crashlytics log file.");

        r0.<com.a.a.t: c.a.a.a.a.b.ac w> = null;

        $z0 = staticinvoke <c.a.a.a.a.b.l: boolean a(android.content.Context,java.lang.String,boolean)>($r7, "com.crashlytics.CollectCustomKeys", 1);

        if $z0 != 0 goto label08;

        $r27 = new java.util.TreeMap;

        $r18 = $r27;

        specialinvoke $r27.<java.util.TreeMap: void <init>()>();

     label03:
        virtualinvoke $r2.<com.a.a.f: void e(int,int)>(10, 2);

        $i5 = staticinvoke <com.a.a.f: int b(int,long)>(1, $l0);

        $r25 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>("error");

        $i6 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(2, $r25);

        $i5 = $i5 + $i6;

        $r14 = (java.util.Map) $r18;

        $i6 = specialinvoke r0.<com.a.a.t: int a(java.lang.Thread,java.lang.Throwable,java.util.Map)>($r3, $r4, $r14);

        $i7 = staticinvoke <com.a.a.f: int e(int)>(3);

        $i8 = staticinvoke <com.a.a.f: int g(int)>($i6);

        $i7 = $i7 + $i8;

        $i6 = $i6 + $i7;

        $i5 = $i5 + $i6;

        $i6 = staticinvoke <com.a.a.t: int a(int,int,long,long)>($i1, $i2, $l3, $l4);

        $i7 = staticinvoke <com.a.a.f: int e(int)>(5);

        $i8 = staticinvoke <com.a.a.f: int g(int)>($i6);

        $i7 = $i7 + $i8;

        $i6 = $i6 + $i7;

        $i5 = $i5 + $i6;

        if $r23 == null goto label04;

        $i6 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(1, $r23);

        $i7 = staticinvoke <com.a.a.f: int e(int)>(6);

        $i8 = staticinvoke <com.a.a.f: int g(int)>($i6);

        $i7 = $i7 + $i8;

        $i6 = $i6 + $i7;

        $i5 = $i5 + $i6;

     label04:
        virtualinvoke $r2.<com.a.a.f: void f(int)>($i5);

        virtualinvoke $r2.<com.a.a.f: void a(int,long)>(1, $l0);

        $r25 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>("error");

        virtualinvoke $r2.<com.a.a.f: void a(int,com.a.a.b)>(2, $r25);

        virtualinvoke $r2.<com.a.a.f: void e(int,int)>(3, 2);

        $r14 = (java.util.Map) $r18;

        $i5 = specialinvoke r0.<com.a.a.t: int a(java.lang.Thread,java.lang.Throwable,java.util.Map)>($r3, $r4, $r14);

        virtualinvoke $r2.<com.a.a.f: void f(int)>($i5);

        specialinvoke r0.<com.a.a.t: void a(com.a.a.f,java.lang.Thread,java.lang.Throwable)>($r2, $r3, $r4);

        if $r18 == null goto label05;

        $r14 = (java.util.Map) $r18;

        $z0 = interfaceinvoke $r14.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label05;

        $r14 = (java.util.Map) $r18;

        staticinvoke <com.a.a.t: void a(com.a.a.f,java.util.Map)>($r2, $r14);

     label05:
        $r12 = r0.<com.a.a.t: android.app.ActivityManager$RunningAppProcessInfo v>;

        if $r12 == null goto label07;

        $r12 = r0.<com.a.a.t: android.app.ActivityManager$RunningAppProcessInfo v>;

        $i5 = $r12.<android.app.ActivityManager$RunningAppProcessInfo: int importance>;

        if $i5 == 100 goto label09;

        $z0 = 1;

     label06:
        virtualinvoke $r2.<com.a.a.f: void a(int,boolean)>(3, $z0);

     label07:
        $r6 = r0.<com.a.a.t: com.a.a.h B>;

        $r7 = virtualinvoke $r6.<com.a.a.h: android.content.Context w()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i5 = $r9.<android.content.res.Configuration: int orientation>;

        virtualinvoke $r2.<com.a.a.f: void a(int,int)>(4, $i5);

        virtualinvoke $r2.<com.a.a.f: void e(int,int)>(5, 2);

        $i5 = staticinvoke <com.a.a.t: int a(int,int,long,long)>($i1, $i2, $l3, $l4);

        virtualinvoke $r2.<com.a.a.f: void f(int)>($i5);

        virtualinvoke $r2.<com.a.a.f: void a(float)>($f0);

        virtualinvoke $r2.<com.a.a.f: void a(int)>($i1);

        virtualinvoke $r2.<com.a.a.f: void a(int,boolean)>(3, $z1);

        virtualinvoke $r2.<com.a.a.f: void a(int,int)>(4, $i2);

        virtualinvoke $r2.<com.a.a.f: void a(int,long)>(5, $l3);

        virtualinvoke $r2.<com.a.a.f: void a(int,long)>(6, $l4);

        if $r23 == null goto label11;

        virtualinvoke $r2.<com.a.a.f: void e(int,int)>(6, 2);

        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(1, $r23);

        virtualinvoke $r2.<com.a.a.f: void f(int)>($i1);

        virtualinvoke $r2.<com.a.a.f: void a(int,com.a.a.b)>(1, $r23);

        return;

     label08:
        $r6 = r0.<com.a.a.t: com.a.a.h B>;

        $r14 = virtualinvoke $r6.<com.a.a.h: java.util.Map g()>();

        if $r14 == null goto label10;

        $i5 = interfaceinvoke $r14.<java.util.Map: int size()>();

        if $i5 <= 1 goto label10;

        $r27 = new java.util.TreeMap;

        $r18 = $r27;

        specialinvoke $r27.<java.util.TreeMap: void <init>(java.util.Map)>($r14);

        goto label03;

     label09:
        $z0 = 0;

        goto label06;

     label10:
        $r18 = $r14;

        goto label03;

     label11:
        return;
    }

    static boolean a(com.a.a.t, boolean)
    {
        com.a.a.t $r0;
        boolean $z0;

        $r0 := @parameter0: com.a.a.t;

        $z0 := @parameter1: boolean;

        $r0.<com.a.a.t: boolean x> = $z0;

        return $z0;
    }

    static java.io.File[] a(com.a.a.t, java.io.FilenameFilter)
    {
        com.a.a.t $r0;
        java.io.FilenameFilter $r1;
        java.io.File[] $r2;

        $r0 := @parameter0: com.a.a.t;

        $r1 := @parameter1: java.io.FilenameFilter;

        $r2 = specialinvoke $r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r1);

        return $r2;
    }

    private java.io.File[] a(java.io.FilenameFilter)
    {
        com.a.a.t r0;
        java.io.FilenameFilter $r1;
        java.io.File[] $r2;
        java.io.File $r3;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.io.FilenameFilter;

        $r3 = r0.<com.a.a.t: java.io.File l>;

        $r2 = virtualinvoke $r3.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r1);

        if $r2 != null goto label1;

        $r2 = newarray (java.io.File)[0];

     label1:
        return $r2;
    }

    private int b(java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        com.a.a.t r0;
        java.lang.Thread[] $r4;
        java.util.List $r5;
        java.lang.StackTraceElement[] $r3;
        java.lang.Thread $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r6;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = r0.<com.a.a.t: java.lang.StackTraceElement[] A>;

        $i1 = staticinvoke <com.a.a.t: int a(java.lang.Thread,java.lang.StackTraceElement[],int,boolean)>($r1, $r3, 4, 1);

        $i0 = staticinvoke <com.a.a.f: int e(int)>(1);

        $i2 = staticinvoke <com.a.a.f: int g(int)>($i1);

        $i0 = $i0 + $i2;

        $i1 = $i1 + $i0;

        $r4 = r0.<com.a.a.t: java.lang.Thread[] y>;

        $i0 = lengthof $r4;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r4 = r0.<com.a.a.t: java.lang.Thread[] y>;

        $r1 = $r4[$i2];

        $r5 = r0.<com.a.a.t: java.util.List z>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i2);

        $r3 = (java.lang.StackTraceElement[]) $r6;

        $i3 = staticinvoke <com.a.a.t: int a(java.lang.Thread,java.lang.StackTraceElement[],int,boolean)>($r1, $r3, 0, 0);

        $i4 = staticinvoke <com.a.a.f: int e(int)>(1);

        $i5 = staticinvoke <com.a.a.f: int g(int)>($i3);

        $i4 = $i4 + $i5;

        $i3 = $i3 + $i4;

        $i1 = $i1 + $i3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $i0 = specialinvoke r0.<com.a.a.t: int a(java.lang.Throwable,int)>($r2, 1);

        $i2 = staticinvoke <com.a.a.f: int e(int)>(2);

        $i3 = staticinvoke <com.a.a.f: int g(int)>($i0);

        $i2 = $i2 + $i3;

        $i0 = $i0 + $i2;

        $i1 = $i0 + $i1;

        $i0 = staticinvoke <com.a.a.t: int q()>();

        $i2 = staticinvoke <com.a.a.f: int e(int)>(3);

        $i3 = staticinvoke <com.a.a.f: int g(int)>($i0);

        $i2 = $i2 + $i3;

        $i0 = $i0 + $i2;

        $i1 = $i1 + $i0;

        $i0 = specialinvoke r0.<com.a.a.t: int p()>();

        $i2 = staticinvoke <com.a.a.f: int e(int)>(3);

        $i3 = staticinvoke <com.a.a.f: int g(int)>($i0);

        $i2 = $i2 + $i3;

        $i0 = $i0 + $i2;

        $i1 = $i1 + $i0;

        return $i1;
    }

    private java.util.concurrent.Future b(java.util.concurrent.Callable)
    {
        java.lang.Throwable $r5;
        com.a.a.t r0;
        java.util.concurrent.Future $r4;
        java.util.concurrent.Callable $r1;
        c.a.a.a.q $r6;
        java.util.concurrent.ExecutorService $r2;
        com.a.a.y $r3;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = r0.<com.a.a.t: java.util.concurrent.ExecutorService t>;

        $r3 = new com.a.a.y;

     label1:
        specialinvoke $r3.<com.a.a.y: void <init>(com.a.a.t,java.util.concurrent.Callable)>(r0, $r1);

        $r4 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r6.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Executor is shut down because we\'re handling a fatal crash.");

        return null;

        catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
    }

    static void b(com.a.a.t)
    {
        com.a.a.t $r0;

        $r0 := @parameter0: com.a.a.t;

        specialinvoke $r0.<com.a.a.t: void l()>();

        return;
    }

    static void b(com.a.a.t, java.util.Date, java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r3, $r14;
        java.util.Date $r1;
        com.a.a.d $r4;
        com.a.a.f $r5, $r12;
        java.util.concurrent.atomic.AtomicInteger $r10;
        java.lang.Thread $r2;
        int $i0;
        java.lang.String $r6, $r9;
        com.a.a.t $r0;
        c.a.a.a.q $r7;
        java.io.File $r11;
        java.lang.Exception $r13, $r15;
        java.lang.StringBuilder $r8;

        $r0 := @parameter0: com.a.a.t;

        $r1 := @parameter1: java.util.Date;

        $r2 := @parameter2: java.lang.Thread;

        $r3 := @parameter3: java.lang.Throwable;

        $r5 = null;

        $r6 = specialinvoke $r0.<com.a.a.t: java.lang.String k()>();

        if $r6 == null goto label20;

        staticinvoke <com.a.a.h: void a(java.lang.String)>($r6);

     label01:
        $r7 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

     label02:
        $r8 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Crashlytics is logging non-fatal exception \"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" from thread ");

        $r9 = virtualinvoke $r2.<java.lang.Thread: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r9);

        $r10 = $r0.<com.a.a.t: java.util.concurrent.atomic.AtomicInteger h>;

        $i0 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r9 = staticinvoke <c.a.a.a.a.b.l: java.lang.String a(int)>($i0);

     label04:
        $r8 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r4 = new com.a.a.d;

     label07:
        $r11 = $r0.<com.a.a.t: java.io.File l>;

        specialinvoke $r4.<com.a.a.d: void <init>(java.io.File,java.lang.String)>($r11, $r9);

     label08:
        $r12 = staticinvoke <com.a.a.f: com.a.a.f a(java.io.OutputStream)>($r4);

     label09:
        $r5 = $r12;

     label10:
        specialinvoke $r0.<com.a.a.t: void a(java.util.Date,com.a.a.f,java.lang.Thread,java.lang.Throwable,java.lang.String,boolean)>($r1, $r12, $r2, $r3, "error", 0);

     label11:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r12, "Failed to flush to non-fatal file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close non-fatal file output stream.");

     label12:
        specialinvoke $r0.<com.a.a.t: void a(java.lang.String,int)>($r6, 64);

     label13:
        return;

     label14:
        $r13 := @caughtexception;

        $r4 = null;

     label15:
        $r7 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r7.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "An error occurred in the non-fatal exception logger", $r13);

        staticinvoke <com.a.a.t: void a(java.lang.Throwable,java.io.OutputStream)>($r13, $r4);

     label16:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r5, "Failed to flush to non-fatal file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close non-fatal file output stream.");

        goto label12;

     label17:
        $r14 := @caughtexception;

        $r4 = null;

     label18:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r5, "Failed to flush to non-fatal file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r4, "Failed to close non-fatal file output stream.");

        throw $r14;

     label19:
        $r15 := @caughtexception;

        $r7 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r7.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "An error occurred when trimming non-fatal files.", $r15);

        return;

     label20:
        $r7 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r7.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Tried to write a non-fatal exception while no session was open.", null);

        return;

     label21:
        $r14 := @caughtexception;

        goto label18;

     label22:
        $r14 := @caughtexception;

        goto label18;

     label23:
        $r13 := @caughtexception;

        goto label15;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Throwable from label01 to label08 with label17;
        catch java.lang.Exception from label08 to label09 with label23;
        catch java.lang.Exception from label10 to label11 with label23;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Throwable from label15 to label16 with label22;
    }

    private void b(java.lang.String)
    {
        java.util.Map $r17;
        boolean $z0;
        java.lang.Runtime $r14;
        java.util.Set $r18;
        java.lang.Exception $r23;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r24;
        android.content.Context $r5;
        long $l2, $l4, $l5;
        c.a.a.a.a.b.y $r15;
        com.a.a.d $r2, $r6;
        c.a.a.a.a.b.z $r22;
        com.a.a.f $r3, $r9;
        com.a.a.b $r11, $r12, $r13, $r16;
        int $i0, $i1, $i3, $i6;
        java.lang.String $r1;
        com.a.a.t r0;
        java.util.Map$Entry $r21;
        java.util.Iterator $r19;
        com.a.a.h $r4;
        java.io.File $r7;
        android.os.StatFs $r10;
        java.lang.Object $r20;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.lang.String;

        $r2 = null;

        $r3 = null;

     label01:
        $r4 = r0.<com.a.a.t: com.a.a.h B>;

        $r5 = virtualinvoke $r4.<com.a.a.h: android.content.Context w()>();

     label02:
        $r6 = new com.a.a.d;

     label03:
        $r4 = r0.<com.a.a.t: com.a.a.h B>;

        $r7 = virtualinvoke $r4.<com.a.a.h: java.io.File q()>();

     label04:
        $r8 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionDevice");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.a.a.d: void <init>(java.io.File,java.lang.String)>($r7, $r1);

     label06:
        $r9 = staticinvoke <com.a.a.f: com.a.a.f a(java.io.OutputStream)>($r6);

     label07:
        $r3 = $r9;

     label08:
        $r10 = new android.os.StatFs;

     label09:
        $r7 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r1 = virtualinvoke $r7.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r10.<android.os.StatFs: void <init>(java.lang.String)>($r1);

        $i0 = staticinvoke <c.a.a.a.a.b.l: int a()>();

     label10:
        $r1 = <android.os.Build: java.lang.String MODEL>;

     label11:
        $r11 = staticinvoke <com.a.a.t: com.a.a.b c(java.lang.String)>($r1);

     label12:
        $r1 = <android.os.Build: java.lang.String MANUFACTURER>;

     label13:
        $r12 = staticinvoke <com.a.a.t: com.a.a.b c(java.lang.String)>($r1);

     label14:
        $r1 = <android.os.Build: java.lang.String PRODUCT>;

     label15:
        $r13 = staticinvoke <com.a.a.t: com.a.a.b c(java.lang.String)>($r1);

        $r14 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i1 = virtualinvoke $r14.<java.lang.Runtime: int availableProcessors()>();

        $l2 = staticinvoke <c.a.a.a.a.b.l: long b()>();

        $i3 = virtualinvoke $r10.<android.os.StatFs: int getBlockCount()>();

     label16:
        $l4 = (long) $i3;

     label17:
        $i3 = virtualinvoke $r10.<android.os.StatFs: int getBlockSize()>();

     label18:
        $l5 = (long) $i3;

        $l4 = $l4 * $l5;

     label19:
        $z0 = staticinvoke <c.a.a.a.a.b.l: boolean f(android.content.Context)>($r5);

        $r15 = r0.<com.a.a.t: c.a.a.a.a.b.y u>;

        $r1 = virtualinvoke $r15.<c.a.a.a.a.b.y: java.lang.String f()>();

        $r16 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r1);

        $r15 = r0.<com.a.a.t: c.a.a.a.a.b.y u>;

        $r17 = virtualinvoke $r15.<c.a.a.a.a.b.y: java.util.Map g()>();

        $i3 = staticinvoke <c.a.a.a.a.b.l: int h(android.content.Context)>($r5);

        virtualinvoke $r9.<com.a.a.f: void e(int,int)>(9, 2);

        $i6 = staticinvoke <com.a.a.t: int a(int,com.a.a.b,com.a.a.b,int,long,long,java.util.Map,int,com.a.a.b,com.a.a.b)>($i0, $r16, $r11, $i1, $l2, $l4, $r17, $i3, $r12, $r13);

        virtualinvoke $r9.<com.a.a.f: void f(int)>($i6);

        virtualinvoke $r9.<com.a.a.f: void a(int,com.a.a.b)>(1, $r16);

        virtualinvoke $r9.<com.a.a.f: void b(int,int)>(3, $i0);

        virtualinvoke $r9.<com.a.a.f: void a(int,com.a.a.b)>(4, $r11);

        virtualinvoke $r9.<com.a.a.f: void a(int,int)>(5, $i1);

        virtualinvoke $r9.<com.a.a.f: void a(int,long)>(6, $l2);

        virtualinvoke $r9.<com.a.a.f: void a(int,long)>(7, $l4);

        virtualinvoke $r9.<com.a.a.f: void a(int,boolean)>(10, $z0);

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

     label21:
        if $z0 == 0 goto label28;

     label22:
        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (java.util.Map$Entry) $r20;

        virtualinvoke $r9.<com.a.a.f: void e(int,int)>(11, 2);

        $r20 = interfaceinvoke $r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (c.a.a.a.a.b.z) $r20;

        $r20 = interfaceinvoke $r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = (java.lang.String) $r20;

        $i0 = staticinvoke <com.a.a.t: int a(c.a.a.a.a.b.z,java.lang.String)>($r22, $r1);

        virtualinvoke $r9.<com.a.a.f: void f(int)>($i0);

        $r20 = interfaceinvoke $r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (c.a.a.a.a.b.z) $r20;

        $i0 = $r22.<c.a.a.a.a.b.z: int h>;

        virtualinvoke $r9.<com.a.a.f: void b(int,int)>(1, $i0);

        $r20 = interfaceinvoke $r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = (java.lang.String) $r20;

        $r11 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r1);

        virtualinvoke $r9.<com.a.a.f: void a(int,com.a.a.b)>(2, $r11);

     label23:
        goto label20;

     label24:
        $r23 := @caughtexception;

        $r3 = $r9;

        $r2 = $r6;

     label25:
        staticinvoke <com.a.a.t: void a(java.lang.Throwable,java.io.OutputStream)>($r23, $r2);

        throw $r23;

     label26:
        $r24 := @caughtexception;

        $r6 = $r2;

     label27:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r3, "Failed to flush session device info.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r6, "Failed to close session device file.");

        throw $r24;

     label28:
        virtualinvoke $r9.<com.a.a.f: void a(int,int)>(12, $i3);

     label29:
        if $r12 == null goto label31;

     label30:
        virtualinvoke $r9.<com.a.a.f: void a(int,com.a.a.b)>(13, $r12);

     label31:
        if $r13 == null goto label33;

     label32:
        virtualinvoke $r9.<com.a.a.f: void a(int,com.a.a.b)>(14, $r13);

     label33:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r9, "Failed to flush session device info.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r6, "Failed to close session device file.");

        return;

     label34:
        $r24 := @caughtexception;

        $r3 = null;

        $r6 = null;

        goto label27;

     label35:
        $r24 := @caughtexception;

        $r3 = null;

        goto label27;

     label36:
        $r24 := @caughtexception;

        goto label27;

     label37:
        $r23 := @caughtexception;

        goto label25;

     label38:
        $r23 := @caughtexception;

        $r2 = $r6;

        goto label25;

        catch java.lang.Exception from label01 to label02 with label37;
        catch java.lang.Exception from label03 to label04 with label37;
        catch java.lang.Exception from label05 to label06 with label37;
        catch java.lang.Throwable from label01 to label06 with label34;
        catch java.lang.Exception from label06 to label07 with label38;
        catch java.lang.Throwable from label06 to label07 with label35;
        catch java.lang.Exception from label09 to label10 with label24;
        catch java.lang.Exception from label11 to label12 with label24;
        catch java.lang.Exception from label13 to label14 with label24;
        catch java.lang.Exception from label15 to label16 with label24;
        catch java.lang.Exception from label17 to label18 with label24;
        catch java.lang.Exception from label19 to label21 with label24;
        catch java.lang.Exception from label22 to label23 with label24;
        catch java.lang.Throwable from label08 to label16 with label36;
        catch java.lang.Throwable from label17 to label18 with label36;
        catch java.lang.Throwable from label19 to label21 with label36;
        catch java.lang.Throwable from label22 to label23 with label36;
        catch java.lang.Throwable from label25 to label26 with label26;
        catch java.lang.Exception from label28 to label29 with label24;
        catch java.lang.Exception from label30 to label31 with label24;
        catch java.lang.Exception from label32 to label33 with label24;
        catch java.lang.Throwable from label28 to label29 with label36;
        catch java.lang.Throwable from label30 to label31 with label36;
        catch java.lang.Throwable from label32 to label33 with label36;
    }

    private static com.a.a.b c(java.lang.String)
    {
        java.lang.String $r0;
        com.a.a.b $r1;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r0);

        return $r1;
    }

    static com.a.a.h c(com.a.a.t)
    {
        com.a.a.t $r0;
        com.a.a.h r1;

        $r0 := @parameter0: com.a.a.t;

        r1 = $r0.<com.a.a.t: com.a.a.h B>;

        return r1;
    }

    static void d(com.a.a.t)
    {
        com.a.a.t $r0;

        $r0 := @parameter0: com.a.a.t;

        specialinvoke $r0.<com.a.a.t: void m()>();

        return;
    }

    static java.io.File e(com.a.a.t)
    {
        com.a.a.t $r0;
        java.io.File r1;

        $r0 := @parameter0: com.a.a.t;

        r1 = $r0.<com.a.a.t: java.io.File m>;

        return r1;
    }

    static java.util.regex.Pattern i()
    {
        java.util.regex.Pattern r0;

        r0 = <com.a.a.t: java.util.regex.Pattern e>;

        return r0;
    }

    static java.util.Map j()
    {
        java.util.Map r0;

        r0 = <com.a.a.t: java.util.Map f>;

        return r0;
    }

    private java.lang.String k()
    {
        com.a.a.t r0;
        int $i0;
        com.a.a.ao $r1;
        java.lang.String $r5;
        java.util.Comparator $r3;
        java.io.File[] $r2;
        java.io.File $r4;

        r0 := @this: com.a.a.t;

        $r1 = new com.a.a.ao;

        specialinvoke $r1.<com.a.a.ao: void <init>(java.lang.String)>("BeginSession");

        $r2 = specialinvoke r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r1);

        $r3 = <com.a.a.t: java.util.Comparator b>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r2, $r3);

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $r4 = $r2[0];

        $r5 = staticinvoke <com.a.a.t: java.lang.String a(java.io.File)>($r4);

        return $r5;

     label1:
        return null;
    }

    private void l()
    {
        java.util.Date $r2, $r26;
        boolean $z0;
        c.a.a.a.q $r5;
        java.lang.Exception $r20, $r22, $r24;
        java.lang.StringBuilder $r6, $r28;
        java.lang.Throwable $r21, $r23, $r25;
        android.content.Context $r19;
        long $l0;
        c.a.a.a.a.b.y $r3;
        com.a.a.c $r27;
        com.a.a.d $r14, $r29;
        com.a.a.f $r11, $r12;
        c.a.a.a.a.b.s $r18;
        com.a.a.b $r13, $r15, $r16, $r17;
        int $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r4, $r7;
        java.io.Flushable $r32;
        java.io.OutputStream $r30;
        com.a.a.t r0;
        com.a.a.h $r9;
        java.io.File $r10;
        java.io.Closeable $r31;
        java.lang.Object $r1, $r8;

        r0 := @this: com.a.a.t;

        $r1 = null;

        $r26 = new java.util.Date;

        $r2 = $r26;

        specialinvoke $r26.<java.util.Date: void <init>()>();

        $r27 = new com.a.a.c;

        $r3 = r0.<com.a.a.t: c.a.a.a.a.b.y u>;

        specialinvoke $r27.<com.a.a.c: void <init>(c.a.a.a.a.b.y)>($r3);

        $r4 = virtualinvoke $r27.<com.a.a.c: java.lang.String toString()>();

        $r5 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Opening an new session with ID ");

        $r6 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r7);

     label01:
        $r14 = new com.a.a.d;

     label02:
        $r8 = $r14;

     label03:
        $r9 = r0.<com.a.a.t: com.a.a.h B>;

        $r10 = virtualinvoke $r9.<com.a.a.h: java.io.File q()>();

     label04:
        $r28 = new java.lang.StringBuilder;

     label05:
        $r6 = $r28;

     label06:
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BeginSession");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.a.a.d: void <init>(java.io.File,java.lang.String)>($r10, $r7);

     label07:
        $r30 = (java.io.OutputStream) $r8;

        $r11 = staticinvoke <com.a.a.f: com.a.a.f a(java.io.OutputStream)>($r30);

     label08:
        $r12 = $r11;

     label09:
        $r7 = r0.<com.a.a.t: java.lang.String o>;

        $r13 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r7);

        virtualinvoke $r11.<com.a.a.f: void a(int,com.a.a.b)>(1, $r13);

        $r13 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r4);

        virtualinvoke $r11.<com.a.a.f: void a(int,com.a.a.b)>(2, $r13);

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

     label10:
        $l0 = $l0 / 1000L;

     label11:
        virtualinvoke $r11.<com.a.a.f: void a(int,long)>(3, $l0);

     label12:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r11, "Failed to flush to session begin file.");

        $r31 = (java.io.Closeable) $r8;

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r31, "Failed to close begin session file.");

     label13:
        $r29 = new com.a.a.d;

     label14:
        $r14 = $r29;

     label15:
        $r9 = r0.<com.a.a.t: com.a.a.h B>;

        $r10 = virtualinvoke $r9.<com.a.a.h: java.io.File q()>();

     label16:
        $r28 = new java.lang.StringBuilder;

     label17:
        $r6 = $r28;

     label18:
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionApp");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<com.a.a.d: void <init>(java.io.File,java.lang.String)>($r10, $r7);

     label19:
        $r11 = staticinvoke <com.a.a.f: com.a.a.f a(java.io.OutputStream)>($r14);

     label20:
        $r8 = $r11;

     label21:
        $r9 = r0.<com.a.a.t: com.a.a.h B>;

        $r7 = virtualinvoke $r9.<com.a.a.h: java.lang.String h()>();

        $r13 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r7);

        $r9 = r0.<com.a.a.t: com.a.a.h B>;

        $r7 = virtualinvoke $r9.<com.a.a.h: java.lang.String k()>();

        $r15 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r7);

        $r9 = r0.<com.a.a.t: com.a.a.h B>;

        $r7 = virtualinvoke $r9.<com.a.a.h: java.lang.String j()>();

        $r16 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r7);

        $r3 = r0.<com.a.a.t: c.a.a.a.a.b.y u>;

        $r7 = virtualinvoke $r3.<c.a.a.a.a.b.y: java.lang.String b()>();

        $r17 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r7);

        $r9 = r0.<com.a.a.t: com.a.a.h B>;

        $r7 = virtualinvoke $r9.<com.a.a.h: java.lang.String i()>();

        $r18 = staticinvoke <c.a.a.a.a.b.s: c.a.a.a.a.b.s a(java.lang.String)>($r7);

        $i1 = virtualinvoke $r18.<c.a.a.a.a.b.s: int a()>();

        virtualinvoke $r11.<com.a.a.f: void e(int,int)>(7, 2);

        $i2 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(1, $r13);

     label22:
        $i3 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(2, $r15);

     label23:
        $i2 = $i2 + $i3;

     label24:
        $i3 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(3, $r16);

     label25:
        $i2 = $i2 + $i3;

     label26:
        $i3 = specialinvoke r0.<com.a.a.t: int o()>();

        $i4 = staticinvoke <com.a.a.f: int e(int)>(5);

        $i5 = staticinvoke <com.a.a.f: int g(int)>($i3);

     label27:
        $i4 = $i4 + $i5;

        $i3 = $i3 + $i4;

        $i2 = $i2 + $i3;

     label28:
        $i3 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(6, $r17);

     label29:
        $i2 = $i2 + $i3;

     label30:
        $i3 = staticinvoke <com.a.a.f: int d(int,int)>(10, $i1);

     label31:
        $i2 = $i2 + $i3;

     label32:
        virtualinvoke $r11.<com.a.a.f: void f(int)>($i2);

        virtualinvoke $r11.<com.a.a.f: void a(int,com.a.a.b)>(1, $r13);

        virtualinvoke $r11.<com.a.a.f: void a(int,com.a.a.b)>(2, $r15);

        virtualinvoke $r11.<com.a.a.f: void a(int,com.a.a.b)>(3, $r16);

        virtualinvoke $r11.<com.a.a.f: void e(int,int)>(5, 2);

        $i2 = specialinvoke r0.<com.a.a.t: int o()>();

        virtualinvoke $r11.<com.a.a.f: void f(int)>($i2);

        $r9 = r0.<com.a.a.t: com.a.a.h B>;

        $r19 = virtualinvoke $r9.<com.a.a.h: android.content.Context w()>();

        $r7 = staticinvoke <c.a.a.a.a.b.j: java.lang.String a(android.content.Context,boolean)>($r19, 0);

        virtualinvoke $r11.<com.a.a.f: void a(java.lang.String)>($r7);

        virtualinvoke $r11.<com.a.a.f: void a(int,com.a.a.b)>(6, $r17);

        virtualinvoke $r11.<com.a.a.f: void b(int,int)>(10, $i1);

     label33:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r11, "Failed to flush to session app file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r14, "Failed to close session app file.");

     label34:
        $r9 = r0.<com.a.a.t: com.a.a.h B>;

        $r19 = virtualinvoke $r9.<com.a.a.h: android.content.Context w()>();

     label35:
        $r29 = new com.a.a.d;

     label36:
        $r14 = $r29;

     label37:
        $r9 = r0.<com.a.a.t: com.a.a.h B>;

        $r10 = virtualinvoke $r9.<com.a.a.h: java.io.File q()>();

     label38:
        $r28 = new java.lang.StringBuilder;

     label39:
        $r6 = $r28;

     label40:
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionOS");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<com.a.a.d: void <init>(java.io.File,java.lang.String)>($r10, $r7);

     label41:
        $r11 = staticinvoke <com.a.a.f: com.a.a.f a(java.io.OutputStream)>($r14);

     label42:
        $r1 = $r11;

     label43:
        $r7 = <android.os.Build$VERSION: java.lang.String RELEASE>;

     label44:
        $r13 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r7);

     label45:
        $r7 = <android.os.Build$VERSION: java.lang.String CODENAME>;

     label46:
        $r15 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r7);

        $z0 = staticinvoke <c.a.a.a.a.b.l: boolean g(android.content.Context)>($r19);

        virtualinvoke $r11.<com.a.a.f: void e(int,int)>(8, 2);

        $i1 = staticinvoke <com.a.a.f: int d(int,int)>(1, 3);

     label47:
        $i2 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(2, $r13);

     label48:
        $i1 = $i1 + $i2;

     label49:
        $i2 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(3, $r15);

     label50:
        $i1 = $i1 + $i2;

     label51:
        $i2 = staticinvoke <com.a.a.f: int c(int)>(4);

     label52:
        $i1 = $i1 + $i2;

     label53:
        virtualinvoke $r11.<com.a.a.f: void f(int)>($i1);

        virtualinvoke $r11.<com.a.a.f: void b(int,int)>(1, 3);

        virtualinvoke $r11.<com.a.a.f: void a(int,com.a.a.b)>(2, $r13);

        virtualinvoke $r11.<com.a.a.f: void a(int,com.a.a.b)>(3, $r15);

        virtualinvoke $r11.<com.a.a.f: void a(int,boolean)>(4, $z0);

     label54:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r11, "Failed to flush to session OS file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r14, "Failed to close session OS file.");

        specialinvoke r0.<com.a.a.t: void b(java.lang.String)>($r4);

        return;

     label55:
        $r20 := @caughtexception;

        $r12 = null;

     label56:
        $r30 = (java.io.OutputStream) $r1;

        staticinvoke <com.a.a.t: void a(java.lang.Throwable,java.io.OutputStream)>($r20, $r30);

        throw $r20;

     label57:
        $r21 := @caughtexception;

        $r8 = $r1;

        $r1 = $r12;

     label58:
        $r32 = (java.io.Flushable) $r1;

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r32, "Failed to flush to session begin file.");

        $r31 = (java.io.Closeable) $r8;

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r31, "Failed to close begin session file.");

        throw $r21;

     label59:
        $r22 := @caughtexception;

        $r14 = null;

     label60:
        staticinvoke <com.a.a.t: void a(java.lang.Throwable,java.io.OutputStream)>($r22, $r14);

        throw $r22;

     label61:
        $r23 := @caughtexception;

        $r8 = $r1;

     label62:
        $r32 = (java.io.Flushable) $r8;

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r32, "Failed to flush to session app file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r14, "Failed to close session app file.");

        throw $r23;

     label63:
        $r24 := @caughtexception;

        $r14 = null;

     label64:
        staticinvoke <com.a.a.t: void a(java.lang.Throwable,java.io.OutputStream)>($r24, $r14);

        throw $r24;

     label65:
        $r25 := @caughtexception;

     label66:
        $r32 = (java.io.Flushable) $r1;

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r32, "Failed to flush to session OS file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r14, "Failed to close session OS file.");

        throw $r25;

     label67:
        $r25 := @caughtexception;

        $r14 = null;

        goto label66;

     label68:
        $r24 := @caughtexception;

        goto label64;

     label69:
        $r23 := @caughtexception;

        $r8 = null;

        $r14 = null;

        goto label62;

     label70:
        $r23 := @caughtexception;

        $r8 = null;

        goto label62;

     label71:
        $r23 := @caughtexception;

        goto label62;

     label72:
        $r22 := @caughtexception;

        goto label60;

     label73:
        $r22 := @caughtexception;

        $r1 = $r11;

        goto label60;

     label74:
        $r21 := @caughtexception;

        $r8 = null;

        goto label58;

     label75:
        $r21 := @caughtexception;

        goto label58;

     label76:
        $r21 := @caughtexception;

        $r1 = $r11;

        goto label58;

     label77:
        $r20 := @caughtexception;

        $r12 = null;

        $r1 = $r8;

        goto label56;

     label78:
        $r20 := @caughtexception;

        $r1 = $r8;

        goto label56;

        catch java.lang.Exception from label03 to label04 with label55;
        catch java.lang.Exception from label06 to label07 with label55;
        catch java.lang.Throwable from label01 to label02 with label74;
        catch java.lang.Throwable from label03 to label05 with label74;
        catch java.lang.Throwable from label06 to label07 with label74;
        catch java.lang.Exception from label07 to label08 with label77;
        catch java.lang.Throwable from label07 to label08 with label75;
        catch java.lang.Exception from label09 to label10 with label78;
        catch java.lang.Exception from label11 to label12 with label78;
        catch java.lang.Throwable from label09 to label10 with label76;
        catch java.lang.Throwable from label11 to label12 with label76;
        catch java.lang.Exception from label15 to label16 with label59;
        catch java.lang.Exception from label18 to label19 with label59;
        catch java.lang.Throwable from label13 to label14 with label69;
        catch java.lang.Throwable from label15 to label17 with label69;
        catch java.lang.Throwable from label18 to label19 with label69;
        catch java.lang.Exception from label19 to label20 with label72;
        catch java.lang.Throwable from label19 to label20 with label70;
        catch java.lang.Exception from label21 to label22 with label73;
        catch java.lang.Exception from label22 to label23 with label73;
        catch java.lang.Exception from label24 to label25 with label73;
        catch java.lang.Exception from label26 to label27 with label73;
        catch java.lang.Exception from label28 to label29 with label73;
        catch java.lang.Exception from label30 to label31 with label73;
        catch java.lang.Exception from label32 to label33 with label73;
        catch java.lang.Throwable from label21 to label22 with label71;
        catch java.lang.Throwable from label22 to label23 with label71;
        catch java.lang.Throwable from label24 to label25 with label71;
        catch java.lang.Throwable from label26 to label27 with label71;
        catch java.lang.Throwable from label28 to label29 with label71;
        catch java.lang.Throwable from label30 to label31 with label71;
        catch java.lang.Throwable from label32 to label33 with label71;
        catch java.lang.Exception from label34 to label35 with label63;
        catch java.lang.Exception from label37 to label38 with label63;
        catch java.lang.Exception from label40 to label41 with label63;
        catch java.lang.Throwable from label34 to label36 with label67;
        catch java.lang.Throwable from label37 to label39 with label67;
        catch java.lang.Throwable from label40 to label41 with label67;
        catch java.lang.Exception from label41 to label42 with label68;
        catch java.lang.Exception from label44 to label45 with label68;
        catch java.lang.Exception from label46 to label47 with label68;
        catch java.lang.Exception from label47 to label48 with label68;
        catch java.lang.Exception from label49 to label50 with label68;
        catch java.lang.Exception from label51 to label52 with label68;
        catch java.lang.Exception from label53 to label54 with label68;
        catch java.lang.Throwable from label41 to label42 with label65;
        catch java.lang.Throwable from label43 to label47 with label65;
        catch java.lang.Throwable from label47 to label48 with label65;
        catch java.lang.Throwable from label49 to label50 with label65;
        catch java.lang.Throwable from label51 to label52 with label65;
        catch java.lang.Throwable from label53 to label54 with label65;
        catch java.lang.Throwable from label56 to label57 with label57;
        catch java.lang.Throwable from label60 to label61 with label61;
        catch java.lang.Throwable from label64 to label65 with label65;
    }

    private void m()
    {
        java.util.Date $r26;
        java.lang.Integer $r27;
        java.util.regex.Matcher $r8;
        c.a.a.a.a.g.p $r18;
        java.util.Locale $r21;
        boolean $z0, $z1;
        c.a.a.a.q $r10;
        java.lang.Exception $r31, $r33;
        java.lang.StringBuilder $r11;
        java.util.regex.Pattern $r7;
        java.lang.Throwable $r32, $r34, $r35;
        java.lang.Object[] $r22;
        long $l4;
        java.util.HashSet $r1;
        com.a.a.d $r13;
        com.a.a.f $r12, $r14;
        com.a.a.b $r28, $r29, $r30;
        int $i0, $i1, $i2, $i3;
        com.a.a.an $r6;
        com.a.a.ao $r19;
        java.lang.Boolean $r23;
        java.lang.String $r5, $r9, $r16, $r17;
        com.a.a.t r0;
        com.a.a.h $r15;
        java.io.File $r4, $r25;
        java.util.Comparator $r3;
        java.io.File[] $r2, $r20, $r24;

        r0 := @this: com.a.a.t;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = specialinvoke r0.<com.a.a.t: java.io.File[] n()>();

        $r3 = <com.a.a.t: java.util.Comparator b>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r2, $r3);

        $i0 = lengthof $r2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>(8, $i0);

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label02;

        $r4 = $r2[$i1];

        $r5 = staticinvoke <com.a.a.t: java.lang.String a(java.io.File)>($r4);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label01;

     label02:
        $r6 = new com.a.a.an;

        specialinvoke $r6.<com.a.a.an: void <init>(byte)>(0);

        $r2 = specialinvoke r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r6);

        $i0 = lengthof $r2;

        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label05;

        $r4 = $r2[$i1];

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getName()>();

        $r7 = <com.a.a.t: java.util.regex.Pattern e>;

        $r8 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);

        virtualinvoke $r8.<java.util.regex.Matcher: boolean matches()>();

        $r9 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label04;

        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Trimming open session file: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r5);

        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label04:
        $i1 = $i1 + 1;

        goto label03;

     label05:
        $r5 = specialinvoke r0.<com.a.a.t: java.lang.String k()>();

        if $r5 == null goto label86;

        $r12 = null;

     label06:
        $r13 = new com.a.a.d;

     label07:
        $r4 = r0.<com.a.a.t: java.io.File l>;

     label08:
        $r11 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionUser");

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.a.a.d: void <init>(java.io.File,java.lang.String)>($r4, $r5);

     label10:
        $r14 = staticinvoke <com.a.a.f: com.a.a.f a(java.io.OutputStream)>($r13);

     label11:
        $r12 = $r14;

     label12:
        $r15 = r0.<com.a.a.t: com.a.a.h B>;

        $r5 = virtualinvoke $r15.<com.a.a.h: java.lang.String m()>();

     label13:
        $r9 = $r5;

     label14:
        $r15 = r0.<com.a.a.t: com.a.a.h B>;

        $r16 = virtualinvoke $r15.<com.a.a.h: java.lang.String o()>();

        $r15 = r0.<com.a.a.t: com.a.a.h B>;

        $r17 = virtualinvoke $r15.<com.a.a.h: java.lang.String n()>();

     label15:
        if $r5 != null goto label49;

        if $r16 != null goto label49;

        if $r17 != null goto label49;

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r14, "Failed to flush session user file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r13, "Failed to close session user file.");

     label16:
        $r18 = staticinvoke <com.a.a.h: c.a.a.a.a.g.p s()>();

        if $r18 == null goto label85;

        $i0 = $r18.<c.a.a.a.a.g.p: int c>;

        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Closing all open sessions.");

        $r2 = specialinvoke r0.<com.a.a.t: java.io.File[] n()>();

        if $r2 == null goto label94;

        $i1 = lengthof $r2;

        if $i1 <= 0 goto label94;

        $i1 = lengthof $r2;

        $i2 = 0;

     label17:
        if $i2 >= $i1 goto label94;

        $r4 = $r2[$i2];

        $r5 = staticinvoke <com.a.a.t: java.lang.String a(java.io.File)>($r4);

        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Closing session: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r9);

        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Collecting session parts for ID ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r9);

        $r19 = new com.a.a.ao;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionCrash");

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<com.a.a.ao: void <init>(java.lang.String)>($r9);

        $r20 = specialinvoke r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r19);

        if $r20 == null goto label74;

        $i3 = lengthof $r20;

        if $i3 <= 0 goto label74;

        $z0 = 1;

     label18:
        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r21 = <java.util.Locale: java.util.Locale US>;

        $r22 = newarray (java.lang.Object)[2];

        $r22[0] = $r5;

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r22[1] = $r23;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r21, "Session %s has fatal exception: %s", $r22);

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r9);

        $r19 = new com.a.a.ao;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<com.a.a.ao: void <init>(java.lang.String)>($r9);

        $r24 = specialinvoke r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r19);

        if $r24 == null goto label75;

        $i3 = lengthof $r24;

        if $i3 <= 0 goto label75;

        $z1 = 1;

     label19:
        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r21 = <java.util.Locale: java.util.Locale US>;

        $r22 = newarray (java.lang.Object)[2];

        $r22[0] = $r5;

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r22[1] = $r23;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r21, "Session %s has non-fatal exceptions: %s", $r22);

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r9);

        if $z0 != 0 goto label20;

        if $z1 == 0 goto label84;

     label20:
        $r12 = null;

     label21:
        $r13 = new com.a.a.d;

     label22:
        $r25 = r0.<com.a.a.t: java.io.File l>;

        specialinvoke $r13.<com.a.a.d: void <init>(java.io.File,java.lang.String)>($r25, $r5);

     label23:
        $r14 = staticinvoke <com.a.a.f: com.a.a.f a(java.io.OutputStream)>($r13);

     label24:
        $r12 = $r14;

     label25:
        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

     label26:
        $r11 = new java.lang.StringBuilder;

     label27:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Collecting SessionStart data for session ID ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r9);

        staticinvoke <com.a.a.t: void a(com.a.a.f,java.io.File)>($r14, $r4);

     label28:
        $r26 = new java.util.Date;

     label29:
        specialinvoke $r26.<java.util.Date: void <init>()>();

        $l4 = virtualinvoke $r26.<java.util.Date: long getTime()>();

     label30:
        $l4 = $l4 / 1000L;

     label31:
        virtualinvoke $r14.<com.a.a.f: void a(int,long)>(4, $l4);

        virtualinvoke $r14.<com.a.a.f: void a(int,boolean)>(5, $z0);

        specialinvoke r0.<com.a.a.t: void a(com.a.a.f,java.lang.String)>($r14, $r5);

     label32:
        if $z1 == 0 goto label43;

     label33:
        $i3 = lengthof $r24;

     label34:
        if $i3 <= $i0 goto label93;

     label35:
        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

     label36:
        $r21 = <java.util.Locale: java.util.Locale US>;

        $r22 = newarray (java.lang.Object)[1];

     label37:
        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label38:
        $r22[0] = $r27;

     label39:
        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r21, "Trimming down to %d logged exceptions.", $r22);

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r9);

        specialinvoke r0.<com.a.a.t: void a(java.lang.String,int)>($r5, $i0);

     label40:
        $r19 = new com.a.a.ao;

        $r11 = new java.lang.StringBuilder;

     label41:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SessionEvent");

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<com.a.a.ao: void <init>(java.lang.String)>($r9);

        $r24 = specialinvoke r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r19);

     label42:
        staticinvoke <com.a.a.t: void a(com.a.a.f,java.io.File[],java.lang.String)>($r14, $r24, $r5);

     label43:
        if $z0 == 0 goto label46;

     label44:
        $r4 = $r20[0];

     label45:
        staticinvoke <com.a.a.t: void a(com.a.a.f,java.io.File)>($r14, $r4);

     label46:
        virtualinvoke $r14.<com.a.a.f: void a(int,int)>(11, 1);

        virtualinvoke $r14.<com.a.a.f: void b(int,int)>(12, 3);

     label47:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r14, "Error flushing session file stream");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r13, "Failed to close CLS file");

     label48:
        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Removing session part files for ID ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r9);

        specialinvoke r0.<com.a.a.t: void a(java.lang.String)>($r5);

        $i2 = $i2 + 1;

        goto label17;

     label49:
        if $r5 != null goto label50;

        $r9 = "";

     label50:
        $r28 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r9);

     label51:
        if $r16 != null goto label66;

        $r29 = null;

     label52:
        if $r17 != null goto label68;

        $r30 = null;

     label53:
        $i0 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(1, $r28);

     label54:
        if $r29 == null goto label57;

     label55:
        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(2, $r29);

     label56:
        $i0 = $i0 + $i1;

     label57:
        if $r30 == null goto label60;

     label58:
        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(3, $r30);

     label59:
        $i0 = $i0 + $i1;

     label60:
        virtualinvoke $r14.<com.a.a.f: void e(int,int)>(6, 2);

        virtualinvoke $r14.<com.a.a.f: void f(int)>($i0);

        virtualinvoke $r14.<com.a.a.f: void a(int,com.a.a.b)>(1, $r28);

     label61:
        if $r29 == null goto label63;

     label62:
        virtualinvoke $r14.<com.a.a.f: void a(int,com.a.a.b)>(2, $r29);

     label63:
        if $r30 == null goto label65;

     label64:
        virtualinvoke $r14.<com.a.a.f: void a(int,com.a.a.b)>(3, $r30);

     label65:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r14, "Failed to flush session user file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r13, "Failed to close session user file.");

        goto label16;

     label66:
        $r29 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r16);

     label67:
        goto label52;

     label68:
        $r30 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r17);

     label69:
        goto label53;

     label70:
        $r31 := @caughtexception;

        $r13 = null;

     label71:
        staticinvoke <com.a.a.t: void a(java.lang.Throwable,java.io.OutputStream)>($r31, $r13);

        throw $r31;

     label72:
        $r32 := @caughtexception;

     label73:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r12, "Failed to flush session user file.");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r13, "Failed to close session user file.");

        throw $r32;

     label74:
        $z0 = 0;

        goto label18;

     label75:
        $z1 = 0;

        goto label19;

     label76:
        $r33 := @caughtexception;

        $r12 = null;

        $r13 = null;

     label77:
        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to write session file for session ID: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", $r9, $r33);

        staticinvoke <com.a.a.t: void a(java.lang.Throwable,java.io.OutputStream)>($r33, $r13);

     label78:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r12, "Error flushing session file stream");

        if $r13 == null goto label48;

     label79:
        virtualinvoke $r13.<com.a.a.d: void a()>();

     label80:
        goto label48;

     label81:
        $r34 := @caughtexception;

        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r10.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Error closing session file stream in the presence of an exception", $r34);

        goto label48;

     label82:
        $r35 := @caughtexception;

        $r13 = null;

     label83:
        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Flushable,java.lang.String)>($r12, "Error flushing session file stream");

        staticinvoke <c.a.a.a.a.b.l: void a(java.io.Closeable,java.lang.String)>($r13, "Failed to close CLS file");

        throw $r35;

     label84:
        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("No events present for session ID ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r9);

        goto label48;

     label85:
        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Unable to close session. Settings are not loaded.");

        return;

     label86:
        $r10 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r10.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "No open sessions exist.");

        return;

     label87:
        $r35 := @caughtexception;

        goto label83;

     label88:
        $r35 := @caughtexception;

        goto label83;

     label89:
        $r33 := @caughtexception;

        $r12 = null;

        goto label77;

     label90:
        $r33 := @caughtexception;

        $r12 = $r14;

        goto label77;

     label91:
        $r32 := @caughtexception;

        $r13 = null;

        goto label73;

     label92:
        $r31 := @caughtexception;

        goto label71;

     label93:
        goto label42;

     label94:
        return;

        catch java.lang.Exception from label07 to label08 with label70;
        catch java.lang.Exception from label09 to label10 with label70;
        catch java.lang.Throwable from label06 to label10 with label91;
        catch java.lang.Exception from label10 to label11 with label92;
        catch java.lang.Exception from label12 to label13 with label92;
        catch java.lang.Exception from label14 to label15 with label92;
        catch java.lang.Throwable from label10 to label11 with label72;
        catch java.lang.Throwable from label12 to label13 with label72;
        catch java.lang.Throwable from label14 to label15 with label72;
        catch java.lang.Exception from label22 to label23 with label76;
        catch java.lang.Throwable from label21 to label23 with label82;
        catch java.lang.Exception from label23 to label24 with label89;
        catch java.lang.Throwable from label23 to label24 with label87;
        catch java.lang.Exception from label25 to label26 with label90;
        catch java.lang.Exception from label27 to label28 with label90;
        catch java.lang.Exception from label29 to label30 with label90;
        catch java.lang.Exception from label31 to label32 with label90;
        catch java.lang.Exception from label33 to label34 with label90;
        catch java.lang.Exception from label35 to label36 with label90;
        catch java.lang.Exception from label37 to label40 with label90;
        catch java.lang.Exception from label41 to label42 with label90;
        catch java.lang.Exception from label42 to label43 with label90;
        catch java.lang.Exception from label44 to label47 with label90;
        catch java.lang.Throwable from label25 to label30 with label87;
        catch java.lang.Throwable from label31 to label32 with label87;
        catch java.lang.Throwable from label35 to label38 with label87;
        catch java.lang.Throwable from label39 to label42 with label87;
        catch java.lang.Throwable from label42 to label43 with label87;
        catch java.lang.Throwable from label45 to label47 with label87;
        catch java.lang.Exception from label50 to label51 with label92;
        catch java.lang.Exception from label53 to label54 with label92;
        catch java.lang.Exception from label55 to label56 with label92;
        catch java.lang.Exception from label58 to label59 with label92;
        catch java.lang.Exception from label60 to label61 with label92;
        catch java.lang.Exception from label62 to label63 with label92;
        catch java.lang.Exception from label64 to label65 with label92;
        catch java.lang.Throwable from label50 to label51 with label72;
        catch java.lang.Throwable from label53 to label54 with label72;
        catch java.lang.Throwable from label55 to label56 with label72;
        catch java.lang.Throwable from label58 to label59 with label72;
        catch java.lang.Throwable from label60 to label61 with label72;
        catch java.lang.Throwable from label62 to label63 with label72;
        catch java.lang.Throwable from label64 to label65 with label72;
        catch java.lang.Exception from label66 to label67 with label92;
        catch java.lang.Exception from label68 to label69 with label92;
        catch java.lang.Throwable from label66 to label67 with label72;
        catch java.lang.Throwable from label68 to label69 with label72;
        catch java.lang.Throwable from label71 to label72 with label72;
        catch java.lang.Throwable from label77 to label78 with label88;
        catch java.io.IOException from label79 to label80 with label81;
    }

    private java.io.File[] n()
    {
        com.a.a.t r0;
        com.a.a.ao $r2;
        java.io.File[] $r1;

        r0 := @this: com.a.a.t;

        $r2 = new com.a.a.ao;

        specialinvoke $r2.<com.a.a.ao: void <init>(java.lang.String)>("BeginSession");

        $r1 = specialinvoke r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r2);

        return $r1;
    }

    private int o()
    {
        com.a.a.t r0;
        android.content.Context $r2;
        com.a.a.b $r4;
        int $i0;
        java.lang.String $r3;
        com.a.a.h $r1;
        boolean $z0;

        r0 := @this: com.a.a.t;

        $r1 = r0.<com.a.a.t: com.a.a.h B>;

        $r2 = virtualinvoke $r1.<com.a.a.h: android.content.Context w()>();

        $z0 = staticinvoke <c.a.a.a.b: boolean d()>();

        $r3 = staticinvoke <c.a.a.a.a.b.j: java.lang.String a(android.content.Context,boolean)>($r2, $z0);

        $r4 = staticinvoke <com.a.a.b: com.a.a.b a(java.lang.String)>($r3);

        $i0 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(1, $r4);

        return $i0;
    }

    private int p()
    {
        com.a.a.t r0;
        com.a.a.b $r1;
        int $i0, $i1;

        r0 := @this: com.a.a.t;

        $i0 = staticinvoke <com.a.a.f: int b(int,long)>(1, 0L);

        $i1 = staticinvoke <com.a.a.f: int b(int,long)>(2, 0L);

        $i0 = $i0 + $i1;

        $r1 = r0.<com.a.a.t: com.a.a.b r>;

        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(3, $r1);

        $i0 = $i0 + $i1;

        $r1 = r0.<com.a.a.t: com.a.a.b s>;

        if $r1 == null goto label1;

        $r1 = r0.<com.a.a.t: com.a.a.b s>;

        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(4, $r1);

        $i0 = $i0 + $i1;

     label1:
        return $i0;
    }

    private static int q()
    {
        int $i0, $i1;
        com.a.a.b $r0;

        $r0 = <com.a.a.t: com.a.a.b g>;

        $i0 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(1, $r0);

        $r0 = <com.a.a.t: com.a.a.b g>;

        $i1 = staticinvoke <com.a.a.f: int b(int,com.a.a.b)>(2, $r0);

        $i0 = $i0 + $i1;

        $i1 = staticinvoke <com.a.a.f: int b(int,long)>(3, 0L);

        $i0 = $i0 + $i1;

        return $i0;
    }

    private void r()
    {
        com.a.a.t r0;
        com.a.a.ag $r2;
        java.io.FilenameFilter $r4;
        int $i0, $i1;
        java.io.File[] $r3;
        java.io.File $r1;

        r0 := @this: com.a.a.t;

        $r4 = <com.a.a.t: java.io.FilenameFilter a>;

        $r3 = specialinvoke r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r4);

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r3[$i1];

        $r2 = new com.a.a.ag;

        specialinvoke $r2.<com.a.a.ag: void <init>(com.a.a.t,java.io.File)>(r0, $r1);

        specialinvoke r0.<com.a.a.t: java.util.concurrent.Future a(java.lang.Runnable)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    final void a(java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        com.a.a.t r0;
        java.util.Date $r3;
        java.lang.Thread $r1;
        com.a.a.am $r4;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        $r4 = new com.a.a.am;

        specialinvoke $r4.<com.a.a.am: void <init>(com.a.a.t,java.util.Date,java.lang.Thread,java.lang.Throwable)>(r0, $r3, $r1, $r2);

        specialinvoke r0.<com.a.a.t: java.util.concurrent.Future a(java.lang.Runnable)>($r4);

        return;
    }

    final void a(java.io.File[])
    {
        com.a.a.t r0;
        c.a.a.a.q $r6;
        com.a.a.aa $r9;
        com.a.a.h $r3;
        java.io.File $r2, $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.io.File[] $r1, $r5;
        boolean $z0;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.io.File[];

        $r2 = new java.io.File;

        $r3 = r0.<com.a.a.t: com.a.a.h B>;

        $r4 = virtualinvoke $r3.<com.a.a.h: java.io.File q()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "invalidClsFiles");

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r5;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r5[$i1];

        virtualinvoke $r4.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label3:
        $i0 = lengthof $r1;

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label7;

        $r2 = $r1[$i1];

        $r6 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found invalid session part file: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r8);

        $r8 = staticinvoke <com.a.a.t: java.lang.String a(java.io.File)>($r2);

        $r9 = new com.a.a.aa;

        specialinvoke $r9.<com.a.a.aa: void <init>(com.a.a.t,java.lang.String)>(r0, $r8);

        $r6 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Deleting all part files for invalid session: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r8);

        $r5 = specialinvoke r0.<com.a.a.t: java.io.File[] a(java.io.FilenameFilter)>($r9);

        $i2 = lengthof $r5;

        $i3 = 0;

     label5:
        if $i3 >= $i2 goto label6;

        $r2 = $r5[$i3];

        $r6 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Deleting session file: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r8);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        $i3 = $i3 + 1;

        goto label5;

     label6:
        $i1 = $i1 + 1;

        goto label4;

     label7:
        return;
    }

    final boolean a()
    {
        com.a.a.t r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: com.a.a.t;

        $r1 = r0.<com.a.a.t: java.util.concurrent.atomic.AtomicBoolean n>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    final void b()
    {
        com.a.a.t r0;
        com.a.a.v $r1;

        r0 := @this: com.a.a.t;

        $r1 = new com.a.a.v;

        specialinvoke $r1.<com.a.a.v: void <init>(com.a.a.t)>(r0);

        specialinvoke r0.<com.a.a.t: java.util.concurrent.Future b(java.util.concurrent.Callable)>($r1);

        return;
    }

    final boolean c()
    {
        int $i0;
        com.a.a.t r0;
        java.io.File[] $r1;

        r0 := @this: com.a.a.t;

        $r1 = specialinvoke r0.<com.a.a.t: java.io.File[] n()>();

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    final boolean d()
    {
        com.a.a.t r0;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        com.a.a.w $r1;
        boolean $z0;

        r0 := @this: com.a.a.t;

        $r1 = new com.a.a.w;

        specialinvoke $r1.<com.a.a.w: void <init>(com.a.a.t)>(r0);

        $r2 = specialinvoke r0.<com.a.a.t: java.lang.Object a(java.util.concurrent.Callable)>($r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    final void e()
    {
        com.a.a.t r0;
        com.a.a.z $r1;

        r0 := @this: com.a.a.t;

        $r1 = new com.a.a.z;

        specialinvoke $r1.<com.a.a.z: void <init>(com.a.a.t)>(r0);

        specialinvoke r0.<com.a.a.t: java.util.concurrent.Future a(java.lang.Runnable)>($r1);

        return;
    }

    final void f()
    {
        com.a.a.t r0;
        com.a.a.ac $r1;

        r0 := @this: com.a.a.t;

        $r1 = new com.a.a.ac;

        specialinvoke $r1.<com.a.a.ac: void <init>(com.a.a.t)>(r0);

        specialinvoke r0.<com.a.a.t: java.lang.Object a(java.util.concurrent.Callable)>($r1);

        return;
    }

    final void g()
    {
        com.a.a.t r0;
        com.a.a.ad $r1;

        r0 := @this: com.a.a.t;

        $r1 = new com.a.a.ad;

        specialinvoke $r1.<com.a.a.ad: void <init>(com.a.a.t)>(r0);

        specialinvoke r0.<com.a.a.t: java.util.concurrent.Future b(java.util.concurrent.Callable)>($r1);

        return;
    }

    final boolean h()
    {
        com.a.a.t r0;
        com.a.a.ae $r1;
        java.lang.Boolean $r3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.a.a.t;

        $r1 = new com.a.a.ae;

        specialinvoke $r1.<com.a.a.ae: void <init>(com.a.a.t)>(r0);

        $r2 = specialinvoke r0.<com.a.a.t: java.lang.Object a(java.util.concurrent.Callable)>($r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r2, $r14, $r15;
        android.content.Context $r8;
        java.util.Date $r10;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        java.lang.Thread$UncaughtExceptionHandler $r12;
        java.lang.Thread $r1;
        java.lang.String $r6;
        com.a.a.al $r11;
        boolean $z0;
        com.a.a.t r0;
        c.a.a.a.q $r4;
        com.a.a.h $r7;
        android.content.BroadcastReceiver $r9;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r5;

        r0 := @this: com.a.a.t;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        entermonitor r0;

     label01:
        $r3 = r0.<com.a.a.t: java.util.concurrent.atomic.AtomicBoolean n>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label02:
        $r4 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

     label03:
        $r5 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Crashlytics is handling uncaught exception \"");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" from thread ");

        $r6 = virtualinvoke $r1.<java.lang.Thread: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", $r6);

        $r3 = r0.<com.a.a.t: java.util.concurrent.atomic.AtomicBoolean i>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(1);

     label05:
        if $z0 != 0 goto label07;

     label06:
        $r4 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r4.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Unregistering power receivers.");

        $r7 = r0.<com.a.a.t: com.a.a.h B>;

        $r8 = virtualinvoke $r7.<com.a.a.h: android.content.Context w()>();

        $r9 = r0.<com.a.a.t: android.content.BroadcastReceiver q>;

        virtualinvoke $r8.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

        $r9 = r0.<com.a.a.t: android.content.BroadcastReceiver p>;

        virtualinvoke $r8.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

     label07:
        $r10 = new java.util.Date;

     label08:
        specialinvoke $r10.<java.util.Date: void <init>()>();

     label09:
        $r11 = new com.a.a.al;

     label10:
        specialinvoke $r11.<com.a.a.al: void <init>(com.a.a.t,java.util.Date,java.lang.Thread,java.lang.Throwable)>(r0, $r10, $r1, $r2);

        specialinvoke r0.<com.a.a.t: java.lang.Object a(java.util.concurrent.Callable)>($r11);

     label11:
        $r4 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r4.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Crashlytics completed exception processing. Invoking default exception handler.");

        $r12 = r0.<com.a.a.t: java.lang.Thread$UncaughtExceptionHandler k>;

        interfaceinvoke $r12.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        $r3 = r0.<com.a.a.t: java.util.concurrent.atomic.AtomicBoolean n>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

     label12:
        exitmonitor r0;

        return;

     label13:
        $r13 := @caughtexception;

     label14:
        $r4 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r4.<c.a.a.a.q: void c(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "An error occurred in the uncaught exception handler", $r13);

     label15:
        $r4 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r4.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Crashlytics completed exception processing. Invoking default exception handler.");

        $r12 = r0.<com.a.a.t: java.lang.Thread$UncaughtExceptionHandler k>;

        interfaceinvoke $r12.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        $r3 = r0.<com.a.a.t: java.util.concurrent.atomic.AtomicBoolean n>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

     label16:
        goto label12;

     label17:
        $r14 := @caughtexception;

        exitmonitor r0;

        throw $r14;

     label18:
        $r15 := @caughtexception;

     label19:
        $r4 = staticinvoke <c.a.a.a.b: c.a.a.a.q c()>();

        interfaceinvoke $r4.<c.a.a.a.q: void a(java.lang.String,java.lang.String)>("Fabric", "Crashlytics completed exception processing. Invoking default exception handler.");

        $r12 = r0.<com.a.a.t: java.lang.Thread$UncaughtExceptionHandler k>;

        interfaceinvoke $r12.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        $r3 = r0.<com.a.a.t: java.util.concurrent.atomic.AtomicBoolean n>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        throw $r15;

     label20:
        nop;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Exception from label02 to label03 with label13;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.lang.Exception from label10 to label11 with label13;
        catch java.lang.Throwable from label02 to label11 with label18;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label19 to label20 with label17;
    }
}
