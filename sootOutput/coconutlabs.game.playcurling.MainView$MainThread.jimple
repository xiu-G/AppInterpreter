public class coconutlabs.game.playcurling.MainView$MainThread extends java.lang.Thread
{
    public boolean CurveFlag;
    public boolean PushFlag;
    public int alpha;
    public boolean bTooShort;
    public android.graphics.Canvas c;
    public android.view.Display disp;
    public float fDist;
    private android.view.View$OnTouchListener mPush;
    private android.content.res.Resources mRes;
    public coconutlabs.game.playcurling.CCLArtificialIntelligence m_AI;
    public coconutlabs.game.playcurling.CCLAchievement m_Achieves;
    public coconutlabs.game.playcurling.activity.ActMain m_actMain;
    public boolean m_bAutoScrolling;
    private boolean m_bRun;
    public boolean m_bSweeping;
    public android.content.Context m_context;
    public float m_fCamMov2EndStep;
    public android.os.Handler m_handlerChangeTurn;
    public android.os.Handler m_handlerEndEnd;
    public android.os.Handler m_handlerGameEnd;
    public float m_nCamMov2EndMidPosY;
    public float m_nCamMov2EndPosY;
    public int m_nPreTouchPosX;
    public final float m_nScreenHeight;
    public final float m_nScreenWidth;
    public int m_nSweeperPosX;
    public int m_nTouchPosX;
    public int m_nTouchPosY;
    public coconutlabs.game.playcurling.CCLObject m_objSweepArea;
    public coconutlabs.game.playcurling.CCLObject m_objSweeper;
    public coconutlabs.game.playcurling.CCLObject m_objTxtPlayer1Turn;
    public coconutlabs.game.playcurling.CCLObject m_objTxtPlayer2Turn;
    public android.graphics.Paint m_paintDistFar;
    public android.graphics.Paint m_paintDistMedium;
    public android.graphics.Paint m_paintDistNear;
    public android.graphics.Paint m_paintMsg;
    public coconutlabs.game.playcurling.Physics m_physicsSimulator;
    public java.lang.Runnable m_runChangeTurn;
    public java.lang.Runnable m_runEndEnd;
    public java.lang.Runnable m_runGameEnd;
    public coconutlabs.game.playcurling.CCLSoundManager m_soundManager;
    private android.view.SurfaceHolder m_surfaceHolder;
    public android.os.Vibrator m_vibrator;
    public coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager;
    public int show_player_turn_timer;
    coconutlabs.game.playcurling.state.GameState state;
    public coconutlabs.game.playcurling.state.StateChangeTurnPause stateChangeTurnPause;
    public coconutlabs.game.playcurling.state.StateEndEnd stateEndEnd;
    public coconutlabs.game.playcurling.state.StateEndEndPause stateEndEndPause;
    public coconutlabs.game.playcurling.state.StateGameEnd stateGameEnd;
    public coconutlabs.game.playcurling.state.StateGameEndPause stateGameEndPause;
    public coconutlabs.game.playcurling.state.StatePause statePause;
    public coconutlabs.game.playcurling.state.StateSelectSpin stateSelectSpin;
    public coconutlabs.game.playcurling.state.StateSweep stateSweep;
    public coconutlabs.game.playcurling.state.StateThrow stateThrow;
    public coconutlabs.game.playcurling.state.StateTurnStart stateTurnStart;
    public float tempCurve;
    public float tempDirection;
    private int tempSweepInfo;
    final coconutlabs.game.playcurling.MainView this$0;

    public void <init>(coconutlabs.game.playcurling.MainView, android.view.SurfaceHolder, android.view.SurfaceView, android.content.Context, android.os.Handler)
    {
        android.view.SurfaceView $r3;
        coconutlabs.game.playcurling.state.StateEndEnd $r12;
        android.view.WindowManager r24;
        java.util.Random $r22;
        android.graphics.Paint$Align $r35;
        android.os.Handler $r5;
        android.view.Display $r25;
        android.view.SurfaceHolder $r2;
        coconutlabs.game.playcurling.Physics $r26;
        coconutlabs.game.playcurling.Renderer $r29, $r36;
        coconutlabs.game.playcurling.state.StateEndEndPause $r13;
        coconutlabs.game.playcurling.CCLArtificialIntelligence $r6;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r34;
        coconutlabs.game.playcurling.state.StateThrow $r10;
        coconutlabs.game.playcurling.state.StateSweep $r11;
        coconutlabs.game.playcurling.CCLSoundManager $r37;
        android.content.Context $r4, $r27;
        coconutlabs.game.playcurling.state.StateGameEnd $r14;
        coconutlabs.game.playcurling.state.StateSelectSpin $r9;
        java.util.ArrayList $r32;
        coconutlabs.game.playcurling.CCLObject $r7;
        coconutlabs.game.playcurling.MainView$MainThread$4 $r21;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r31;
        coconutlabs.game.playcurling.MainView$MainThread$1 $r18;
        coconutlabs.game.playcurling.MainView$MainThread$3 $r20;
        coconutlabs.game.playcurling.MainView$MainThread$2 $r19;
        int $i0, $i1;
        coconutlabs.game.playcurling.state.StatePause $r17;
        coconutlabs.game.playcurling.MainView$MainThread r0;
        coconutlabs.game.playcurling.CCLAchievement $r39;
        coconutlabs.game.playcurling.state.StateTurnStart $r8;
        coconutlabs.game.playcurling.state.StateChangeTurnPause $r16;
        coconutlabs.game.playcurling.state.StateGameEndPause $r15;
        java.lang.Object $r23;
        coconutlabs.game.playcurling.MainView $r1;
        coconutlabs.game.playcurling.gameplayhelper.ScoreManager $r33;
        android.os.Vibrator $r38;
        android.view.View$OnTouchListener $r28;
        android.content.res.Resources $r30;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $r1 := @parameter0: coconutlabs.game.playcurling.MainView;

        $r2 := @parameter1: android.view.SurfaceHolder;

        $r3 := @parameter2: android.view.SurfaceView;

        $r4 := @parameter3: android.content.Context;

        $r5 := @parameter4: android.os.Handler;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0> = $r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bRun> = 1;

        $r6 = new coconutlabs.game.playcurling.CCLArtificialIntelligence;

        specialinvoke $r6.<coconutlabs.game.playcurling.CCLArtificialIntelligence: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLArtificialIntelligence m_AI> = $r6;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float fDist> = -1.0F;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bAutoScrolling> = 0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.activity.ActMain m_actMain> = null;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosX> = 0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nTouchPosY> = 0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nSweeperPosX> = 0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: int m_nPreTouchPosX> = 0;

        $r7 = new coconutlabs.game.playcurling.CCLObject;

        specialinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer1Turn> = $r7;

        $r7 = new coconutlabs.game.playcurling.CCLObject;

        specialinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer2Turn> = $r7;

        $r7 = new coconutlabs.game.playcurling.CCLObject;

        specialinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objSweeper> = $r7;

        $r7 = new coconutlabs.game.playcurling.CCLObject;

        specialinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objSweepArea> = $r7;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c> = null;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempDirection> = 0.0F;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float tempCurve> = 0.0F;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: int tempSweepInfo> = 0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean PushFlag> = 0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean CurveFlag> = 0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = null;

        $r8 = new coconutlabs.game.playcurling.state.StateTurnStart;

        specialinvoke $r8.<coconutlabs.game.playcurling.state.StateTurnStart: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateTurnStart stateTurnStart> = $r8;

        $r9 = new coconutlabs.game.playcurling.state.StateSelectSpin;

        specialinvoke $r9.<coconutlabs.game.playcurling.state.StateSelectSpin: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateSelectSpin stateSelectSpin> = $r9;

        $r10 = new coconutlabs.game.playcurling.state.StateThrow;

        specialinvoke $r10.<coconutlabs.game.playcurling.state.StateThrow: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateThrow stateThrow> = $r10;

        $r11 = new coconutlabs.game.playcurling.state.StateSweep;

        specialinvoke $r11.<coconutlabs.game.playcurling.state.StateSweep: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateSweep stateSweep> = $r11;

        $r12 = new coconutlabs.game.playcurling.state.StateEndEnd;

        specialinvoke $r12.<coconutlabs.game.playcurling.state.StateEndEnd: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateEndEnd stateEndEnd> = $r12;

        $r13 = new coconutlabs.game.playcurling.state.StateEndEndPause;

        specialinvoke $r13.<coconutlabs.game.playcurling.state.StateEndEndPause: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateEndEndPause stateEndEndPause> = $r13;

        $r14 = new coconutlabs.game.playcurling.state.StateGameEnd;

        specialinvoke $r14.<coconutlabs.game.playcurling.state.StateGameEnd: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateGameEnd stateGameEnd> = $r14;

        $r15 = new coconutlabs.game.playcurling.state.StateGameEndPause;

        specialinvoke $r15.<coconutlabs.game.playcurling.state.StateGameEndPause: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateGameEndPause stateGameEndPause> = $r15;

        $r16 = new coconutlabs.game.playcurling.state.StateChangeTurnPause;

        specialinvoke $r16.<coconutlabs.game.playcurling.state.StateChangeTurnPause: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateChangeTurnPause stateChangeTurnPause> = $r16;

        $r17 = new coconutlabs.game.playcurling.state.StatePause;

        specialinvoke $r17.<coconutlabs.game.playcurling.state.StatePause: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StatePause statePause> = $r17;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: int show_player_turn_timer> = 0;

        $r18 = new coconutlabs.game.playcurling.MainView$MainThread$1;

        specialinvoke $r18.<coconutlabs.game.playcurling.MainView$MainThread$1: void <init>(coconutlabs.game.playcurling.MainView$MainThread)>(r0);

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.View$OnTouchListener mPush> = $r18;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean bTooShort> = 0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: int alpha> = 0;

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Handler m_handlerChangeTurn> = $r5;

        $r19 = new coconutlabs.game.playcurling.MainView$MainThread$2;

        specialinvoke $r19.<coconutlabs.game.playcurling.MainView$MainThread$2: void <init>(coconutlabs.game.playcurling.MainView$MainThread)>(r0);

        r0.<coconutlabs.game.playcurling.MainView$MainThread: java.lang.Runnable m_runChangeTurn> = $r19;

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Handler m_handlerGameEnd> = $r5;

        $r20 = new coconutlabs.game.playcurling.MainView$MainThread$3;

        specialinvoke $r20.<coconutlabs.game.playcurling.MainView$MainThread$3: void <init>(coconutlabs.game.playcurling.MainView$MainThread)>(r0);

        r0.<coconutlabs.game.playcurling.MainView$MainThread: java.lang.Runnable m_runGameEnd> = $r20;

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Handler m_handlerEndEnd> = $r5;

        $r21 = new coconutlabs.game.playcurling.MainView$MainThread$4;

        specialinvoke $r21.<coconutlabs.game.playcurling.MainView$MainThread$4: void <init>(coconutlabs.game.playcurling.MainView$MainThread)>(r0);

        r0.<coconutlabs.game.playcurling.MainView$MainThread: java.lang.Runnable m_runEndEnd> = $r21;

        $r22 = staticinvoke <coconutlabs.game.playcurling.MainView: java.util.Random access$1(coconutlabs.game.playcurling.MainView)>($r1);

        virtualinvoke $r22.<java.util.Random: void setSeed(long)>(1L);

        r0.<coconutlabs.game.playcurling.MainView$MainThread: int show_player_turn_timer> = 0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.SurfaceHolder m_surfaceHolder> = $r2;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.Context m_context> = $r4;

        $r23 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r24 = (android.view.WindowManager) $r23;

        $r25 = interfaceinvoke r24.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.Display disp> = $r25;

        $r25 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.Display disp>;

        $i0 = virtualinvoke $r25.<android.view.Display: int getHeight()>();

        $f0 = (float) $i0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenHeight> = $f0;

        $r25 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.Display disp>;

        $i0 = virtualinvoke $r25.<android.view.Display: int getWidth()>();

        $f0 = (float) $i0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth> = $f0;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $f0 = 15.0F / $f0;

        <coconutlabs.game.playcurling.CCLDefine: float CONVERSION_TO_FEET> = $f0;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $f0 = $f0 / 480.0F;

        <coconutlabs.game.playcurling.CCLDefine: float RESOURCE_SCALE> = $f0;

        $r26 = new coconutlabs.game.playcurling.Physics;

        $r27 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.Context m_context>;

        specialinvoke $r26.<coconutlabs.game.playcurling.Physics: void <init>(android.content.Context)>($r27);

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.Physics m_physicsSimulator> = $r26;

        $r28 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.View$OnTouchListener mPush>;

        virtualinvoke $r3.<android.view.SurfaceView: void setOnTouchListener(android.view.View$OnTouchListener)>($r28);

        $r29 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        virtualinvoke $r29.<coconutlabs.game.playcurling.Renderer: void AddBackgroudImgToObject()>();

        $r29 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        virtualinvoke $r29.<coconutlabs.game.playcurling.Renderer: void SetSpinControlArea()>();

        $r29 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        virtualinvoke $r29.<coconutlabs.game.playcurling.Renderer: void SetThrowControlArea()>();

        $r30 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.res.Resources mRes> = $r30;

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objSweeper>;

        $r30 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.res.Resources mRes>;

        $f0 = <coconutlabs.game.playcurling.CCLDefine: float RESOURCE_SCALE>;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetBitmap(android.content.res.Resources,int,float)>($r30, 2130837631, $f0);

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objSweepArea>;

        $r30 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.res.Resources mRes>;

        $f0 = <coconutlabs.game.playcurling.CCLDefine: float RESOURCE_SCALE>;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetBitmap(android.content.res.Resources,int,float)>($r30, 2130837630, $f0);

        $r31 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r31.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getPlayMode()>();

        if $i0 != 1 goto label3;

        $r31 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r31.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getPlayerTurn()>();

        if $i0 != 1 goto label2;

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer1Turn>;

        $r30 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.res.Resources mRes>;

        $f0 = <coconutlabs.game.playcurling.CCLDefine: float RESOURCE_SCALE>;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetBitmap(android.content.res.Resources,int,float)>($r30, 2130837599, $f0);

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer2Turn>;

        $r30 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.res.Resources mRes>;

        $f0 = <coconutlabs.game.playcurling.CCLDefine: float RESOURCE_SCALE>;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetBitmap(android.content.res.Resources,int,float)>($r30, 2130837525, $f0);

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer1Turn>;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $i0 = (int) $f0;

        $i0 = $i0 / 2;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenHeight>;

        $i1 = (int) $f0;

        $i1 = $i1 / 2;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetPos(int,int)>($i0, $i1);

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer2Turn>;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $i0 = (int) $f0;

        $i0 = $i0 / 2;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenHeight>;

        $i1 = (int) $f0;

        $i1 = $i1 / 2;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetPos(int,int)>($i0, $i1);

     label1:
        $r32 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        virtualinvoke $r32.<java.util.ArrayList: void clear()>();

        $r33 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.ScoreManager: coconutlabs.game.playcurling.gameplayhelper.ScoreManager getInstance()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager> = $r33;

        $r26 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.Physics m_physicsSimulator>;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $i0 = (int) $f0;

        $r29 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        $r7 = virtualinvoke $r29.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject getBGEnd()>();

        $i1 = virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: int GetBottom()>();

        virtualinvoke $r26.<coconutlabs.game.playcurling.Physics: void SetLaneInfo(int,int)>($i0, $i1);

        $r34 = new android.graphics.Paint;

        specialinvoke $r34.<android.graphics.Paint: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistNear> = $r34;

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistNear>;

        virtualinvoke $r34.<android.graphics.Paint: void setColor(int)>(-60672);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistNear>;

        virtualinvoke $r34.<android.graphics.Paint: void setTextSize(float)>(50.0F);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistNear>;

        virtualinvoke $r34.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistNear>;

        virtualinvoke $r34.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(2.0F, 1.0F, 1.0F, -16777216);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistNear>;

        $r35 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r34.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r35);

        $r34 = new android.graphics.Paint;

        specialinvoke $r34.<android.graphics.Paint: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistMedium> = $r34;

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistMedium>;

        virtualinvoke $r34.<android.graphics.Paint: void setColor(int)>(-70144);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistMedium>;

        virtualinvoke $r34.<android.graphics.Paint: void setTextSize(float)>(30.0F);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistMedium>;

        virtualinvoke $r34.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistMedium>;

        virtualinvoke $r34.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(2.0F, 1.0F, 1.0F, -16777216);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistMedium>;

        $r35 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r34.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r35);

        $r34 = new android.graphics.Paint;

        specialinvoke $r34.<android.graphics.Paint: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistFar> = $r34;

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistFar>;

        virtualinvoke $r34.<android.graphics.Paint: void setColor(int)>(-1118465);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistFar>;

        virtualinvoke $r34.<android.graphics.Paint: void setTextSize(float)>(20.0F);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistFar>;

        virtualinvoke $r34.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistFar>;

        virtualinvoke $r34.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(2.0F, 1.0F, 1.0F, -16777216);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintDistFar>;

        $r35 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r34.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r35);

        $r34 = new android.graphics.Paint;

        specialinvoke $r34.<android.graphics.Paint: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintMsg> = $r34;

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintMsg>;

        virtualinvoke $r34.<android.graphics.Paint: void setColor(int)>(-16733441);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintMsg>;

        virtualinvoke $r34.<android.graphics.Paint: void setTextSize(float)>(20.0F);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintMsg>;

        virtualinvoke $r34.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintMsg>;

        virtualinvoke $r34.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(1.0F, 1.0F, 1.0F, -16777216);

        $r34 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Paint m_paintMsg>;

        $r35 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r34.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r35);

        $r29 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $f0 = $f0 / 2.0F;

        $r36 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        $r7 = virtualinvoke $r36.<coconutlabs.game.playcurling.Renderer: coconutlabs.game.playcurling.CCLObject getBGStart()>();

        $i0 = virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: int GetBottom()>();

        $f1 = (float) $i0;

        $f2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $f3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenHeight>;

        virtualinvoke $r29.<coconutlabs.game.playcurling.Renderer: void Init(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r37 = staticinvoke <coconutlabs.game.playcurling.CCLSoundManager: coconutlabs.game.playcurling.CCLSoundManager getInstance()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager> = $r37;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.Context m_context>;

        $r23 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        $r38 = (android.os.Vibrator) $r23;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Vibrator m_vibrator> = $r38;

        $r39 = new coconutlabs.game.playcurling.CCLAchievement;

        specialinvoke $r39.<coconutlabs.game.playcurling.CCLAchievement: void <init>()>();

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLAchievement m_Achieves> = $r39;

        return;

     label2:
        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer1Turn>;

        $r30 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.res.Resources mRes>;

        $f0 = <coconutlabs.game.playcurling.CCLDefine: float RESOURCE_SCALE>;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetBitmap(android.content.res.Resources,int,float)>($r30, 2130837525, $f0);

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer2Turn>;

        $r30 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.res.Resources mRes>;

        $f0 = <coconutlabs.game.playcurling.CCLDefine: float RESOURCE_SCALE>;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetBitmap(android.content.res.Resources,int,float)>($r30, 2130837599, $f0);

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer1Turn>;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $i0 = (int) $f0;

        $i0 = $i0 / 2;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenHeight>;

        $i1 = (int) $f0;

        $i1 = $i1 / 2;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetPos(int,int)>($i0, $i1);

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer2Turn>;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $i0 = (int) $f0;

        $i0 = $i0 / 2;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenHeight>;

        $i1 = (int) $f0;

        $i1 = $i1 / 2;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetPos(int,int)>($i0, $i1);

        goto label1;

     label3:
        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer1Turn>;

        $r30 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.res.Resources mRes>;

        $f0 = <coconutlabs.game.playcurling.CCLDefine: float RESOURCE_SCALE>;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetBitmap(android.content.res.Resources,int,float)>($r30, 2130837597, $f0);

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer2Turn>;

        $r30 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.res.Resources mRes>;

        $f0 = <coconutlabs.game.playcurling.CCLDefine: float RESOURCE_SCALE>;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetBitmap(android.content.res.Resources,int,float)>($r30, 2130837598, $f0);

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer1Turn>;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $i0 = (int) $f0;

        $i0 = $i0 / 2;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenHeight>;

        $i1 = (int) $f0;

        $i1 = $i1 / 2;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetPos(int,int)>($i0, $i1);

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLObject m_objTxtPlayer2Turn>;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenWidth>;

        $i0 = (int) $f0;

        $i0 = $i0 / 2;

        $f0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenHeight>;

        $i1 = (int) $f0;

        $i1 = $i1 / 2;

        virtualinvoke $r7.<coconutlabs.game.playcurling.CCLObject: void SetPos(int,int)>($i0, $i1);

        goto label1;
    }

    private void ChangeStateEndEnd()
    {
        coconutlabs.game.playcurling.state.StateEndEnd $r1;
        coconutlabs.game.playcurling.Renderer $r2;
        coconutlabs.game.playcurling.MainView$MainThread r0;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r4;
        int $i0, $i1;
        float $f0, $f1;
        coconutlabs.game.playcurling.gameplayhelper.ScoreManager $r3;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateEndEnd stateEndEnd>;

        virtualinvoke r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeGameState(coconutlabs.game.playcurling.state.GameState)>($r1);

        r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bAutoScrolling> = 1;

        $r2 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        if $r2 == null goto label1;

        $r2 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        $f0 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetCamPosY()>();

        $f1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenHeight>;

        $f1 = $f1 / 2.0F;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nCamMov2EndPosY> = $f1;

        $f1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nCamMov2EndPosY>;

        $f0 = $f1 + $f0;

        $f0 = $f0 / 2.0F;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nCamMov2EndMidPosY> = $f0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_fCamMov2EndStep> = 2.0F;

     label1:
        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.ScoreManager: coconutlabs.game.playcurling.gameplayhelper.ScoreManager getInstance()>();

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScore()>();

        $r3 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.ScoreManager: coconutlabs.game.playcurling.gameplayhelper.ScoreManager getInstance()>();

        $i1 = virtualinvoke $r3.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScore()>();

        if $i0 <= $i1 goto label2;

        $r4 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: void setCurrentTurn(int)>(1);

        return;

     label2:
        if $i0 >= $i1 goto label3;

        $r4 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: void setCurrentTurn(int)>(2);

        return;

     label3:
        if $i0 != $i1 goto label5;

        $r4 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        if $i0 != 1 goto label4;

        $r4 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: void setCurrentTurn(int)>(2);

        return;

     label4:
        $r4 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: void setCurrentTurn(int)>(1);

     label5:
        return;
    }

    private void ChangeStateGameEnd()
    {
        coconutlabs.game.playcurling.state.StateGameEnd $r1;
        coconutlabs.game.playcurling.Renderer $r2;
        float $f0, $f1;
        coconutlabs.game.playcurling.MainView$MainThread r0;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateGameEnd stateGameEnd>;

        virtualinvoke r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeGameState(coconutlabs.game.playcurling.state.GameState)>($r1);

        r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bAutoScrolling> = 1;

        $r2 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        if $r2 == null goto label1;

        $r2 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        $f0 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetCamPosY()>();

        $f1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nScreenHeight>;

        $f1 = $f1 / 2.0F;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nCamMov2EndPosY> = $f1;

        $f1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nCamMov2EndPosY>;

        $f0 = $f1 + $f0;

        $f0 = $f0 / 2.0F;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_nCamMov2EndMidPosY> = $f0;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: float m_fCamMov2EndStep> = 2.0F;

     label1:
        return;
    }

    private void ChangeTurn()
    {
        coconutlabs.game.playcurling.state.StateTurnStart $r2;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r1;
        int $i0;
        coconutlabs.game.playcurling.MainView$MainThread r0;
        coconutlabs.game.playcurling.state.GameState $r3;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $r1 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $i0 = virtualinvoke $r1.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getCurrentTurn()>();

        if $i0 != 1 goto label2;

        $r1 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        virtualinvoke $r1.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: void setCurrentTurn(int)>(2);

     label1:
        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateTurnStart stateTurnStart>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r2;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        virtualinvoke $r3.<coconutlabs.game.playcurling.state.GameState: void ChangeProcess(coconutlabs.game.playcurling.MainView$MainThread)>(r0);

        return;

     label2:
        $r1 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        virtualinvoke $r1.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: void setCurrentTurn(int)>(1);

        goto label1;
    }

    static void access$0(coconutlabs.game.playcurling.MainView$MainThread)
    {
        coconutlabs.game.playcurling.MainView$MainThread $r0;

        $r0 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        specialinvoke $r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeTurn()>();

        return;
    }

    static void access$1(coconutlabs.game.playcurling.MainView$MainThread)
    {
        coconutlabs.game.playcurling.MainView$MainThread $r0;

        $r0 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        specialinvoke $r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeStateGameEnd()>();

        return;
    }

    static void access$2(coconutlabs.game.playcurling.MainView$MainThread)
    {
        coconutlabs.game.playcurling.MainView$MainThread $r0;

        $r0 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        specialinvoke $r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeStateEndEnd()>();

        return;
    }

    static coconutlabs.game.playcurling.MainView access$3(coconutlabs.game.playcurling.MainView$MainThread)
    {
        coconutlabs.game.playcurling.MainView$MainThread $r0;
        coconutlabs.game.playcurling.MainView r1;

        $r0 := @parameter0: coconutlabs.game.playcurling.MainView$MainThread;

        r1 = $r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0>;

        return r1;
    }

    public void ChangeGameState(coconutlabs.game.playcurling.state.GameState)
    {
        coconutlabs.game.playcurling.MainView$MainThread r0, $r3;
        coconutlabs.game.playcurling.MainView $r2;
        coconutlabs.game.playcurling.state.GameState $r1;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $r1 := @parameter0: coconutlabs.game.playcurling.state.GameState;

        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0>;

        $r3 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.MainView$MainThread access$0(coconutlabs.game.playcurling.MainView)>($r2);

        if $r3 == null goto label1;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r1;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0>;

        r0 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.MainView$MainThread access$0(coconutlabs.game.playcurling.MainView)>($r2);

        virtualinvoke $r1.<coconutlabs.game.playcurling.state.GameState: void ChangeProcess(coconutlabs.game.playcurling.MainView$MainThread)>(r0);

     label1:
        return;
    }

    public void ChangeGameStateInt(int)
    {
        coconutlabs.game.playcurling.state.StateGameEnd $r8;
        coconutlabs.game.playcurling.state.StateEndEnd $r12;
        coconutlabs.game.playcurling.state.StatePause $r9;
        coconutlabs.game.playcurling.MainView$MainThread r0, $r2;
        coconutlabs.game.playcurling.state.StateSelectSpin $r5;
        coconutlabs.game.playcurling.state.StateEndEndPause $r13;
        coconutlabs.game.playcurling.state.StateTurnStart $r4;
        coconutlabs.game.playcurling.state.StateChangeTurnPause $r10;
        coconutlabs.game.playcurling.state.StateGameEndPause $r11;
        int $i0;
        coconutlabs.game.playcurling.MainView $r1;
        coconutlabs.game.playcurling.state.GameState $r3;
        coconutlabs.game.playcurling.state.StateThrow $r6;
        coconutlabs.game.playcurling.state.StateSweep $r7;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $i0 := @parameter0: int;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0>;

        $r2 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.MainView$MainThread access$0(coconutlabs.game.playcurling.MainView)>($r1);

        if $r2 == null goto label12;

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label01;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            default: goto label01;
        };

     label01:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0>;

        r0 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.MainView$MainThread access$0(coconutlabs.game.playcurling.MainView)>($r1);

        virtualinvoke $r3.<coconutlabs.game.playcurling.state.GameState: void ChangeProcess(coconutlabs.game.playcurling.MainView$MainThread)>(r0);

        return;

     label02:
        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateTurnStart stateTurnStart>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r4;

        goto label01;

     label03:
        $r5 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateSelectSpin stateSelectSpin>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r5;

        goto label01;

     label04:
        $r6 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateThrow stateThrow>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r6;

        goto label01;

     label05:
        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateSweep stateSweep>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r7;

        goto label01;

     label06:
        $r8 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateGameEnd stateGameEnd>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r8;

        goto label01;

     label07:
        $r9 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StatePause statePause>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r9;

        goto label01;

     label08:
        $r10 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateChangeTurnPause stateChangeTurnPause>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r10;

        goto label01;

     label09:
        $r11 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateGameEndPause stateGameEndPause>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r11;

        goto label01;

     label10:
        $r12 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateEndEnd stateEndEnd>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r12;

        goto label01;

     label11:
        $r13 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateEndEndPause stateEndEndPause>;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state> = $r13;

        goto label01;

     label12:
        return;
    }

    public void CheckNearestStone()
    {
        java.util.ArrayList r1, $r3;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r5;
        byte $b8;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        boolean $z0;
        coconutlabs.game.playcurling.Renderer $r2;
        coconutlabs.game.playcurling.MainView$MainThread r0;
        coconutlabs.game.playcurling.CCLAchievement $r6;
        coconutlabs.game.playcurling.CCLStone r8;
        float $f0, $f1, f2, $f3, $f4, $f5;
        java.lang.Object $r7;
        coconutlabs.game.playcurling.gameplayhelper.ScoreManager $r4;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        r1 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r2 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        $f0 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetCenterX()>();

        $r2 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        $f1 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetCenterY()>();

        $z0 = 0;

        $r3 = new java.util.ArrayList;

        r1 = $r3;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i0 = 0;

        i1 = 0;

        i2 = 0;

        i3 = 1;

        i4 = 1;

        f2 = 1000000.0F;

        i5 = 0;

     label02:
        $r3 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $i6 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i5 < $i6 goto label07;

        if $z0 == 0 goto label03;

        if i3 != 1 goto label10;

        i0 = 1;

     label03:
        $r2 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void DrawScoreLine(boolean)>($z0);

        if $z0 == 0 goto label05;

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

     label04:
        i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i5 > 0 goto label11;

     label05:
        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        i2 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScore()>();

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        i3 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScore()>();

        if i1 != 0 goto label17;

        if i0 != 0 goto label17;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: boolean setCurrentScore(int,int)>(0, 1);

     label06:
        $r5 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        i0 = virtualinvoke $r5.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getNumberOfThrownStones()>();

        $r5 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        i1 = virtualinvoke $r5.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: int getNumberOfMaxThrow()>();

        i1 = i1 - 2;

        if i0 <= i1 goto label20;

        if i2 <= i3 goto label19;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        i0 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScore()>();

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        i1 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScore()>();

        if i0 >= i1 goto label19;

        $r6 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLAchievement m_Achieves>;

        virtualinvoke $r6.<coconutlabs.game.playcurling.CCLAchievement: void AddWowAchieve(int)>(2);

        return;

     label07:
        $r3 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        $r7 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r8 = (coconutlabs.game.playcurling.CCLStone) $r7;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        if i5 != 0 goto label08;

        $i6 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i6 = $i6 / 2;

        $i6 = $i6 + 110;

        $i7 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i7 = $i7 / 2;

        $i7 = $i7 + 110;

        $i6 = $i6 * $i7;

        f2 = (float) $i6;

     label08:
        $i6 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f3 = (float) $i6;

        $f3 = $f0 - $f3;

        $i6 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f4 = (float) $i6;

        $f4 = $f0 - $f4;

        $f3 = $f3 * $f4;

        $i6 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f4 = (float) $i6;

        $f4 = $f1 - $f4;

        $i6 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f5 = (float) $i6;

        $f5 = $f1 - $f5;

        $f4 = $f4 * $f5;

        $f3 = $f3 + $f4;

        $b8 = f2 cmpl $f3;

        $i6 = (int) $b8;

        if $i6 <= 0 goto label09;

        f2 = $f3;

        $z0 = 1;

        $r2 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: void SetClosedStone(coconutlabs.game.playcurling.CCLStone)>(r8);

        i2 = i5;

        i3 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetTeam()>();

     label09:
        i5 = i5 + 1;

        goto label02;

     label10:
        if i3 != 0 goto label03;

        i1 = 1;

        goto label03;

     label11:
        $z0 = 0;

        i5 = 0;

     label12:
        $i6 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i5 < $i6 goto label13;

        if $z0 == 0 goto label05;

        if i3 != i4 goto label05;

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        if i3 != 1 goto label16;

        i0 = i0 + 1;

        goto label04;

     label13:
        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r8 = (coconutlabs.game.playcurling.CCLStone) $r7;

        if i5 != 0 goto label14;

        $i6 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i6 = $i6 / 2;

        $i6 = $i6 + 110;

        $i7 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetWidth()>();

        $i7 = $i7 / 2;

        $i7 = $i7 + 110;

        $i6 = $i6 * $i7;

        f2 = (float) $i6;

     label14:
        $i6 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f3 = (float) $i6;

        $f3 = $f0 - $f3;

        $i6 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosX()>();

        $f4 = (float) $i6;

        $f4 = $f0 - $f4;

        $f3 = $f3 * $f4;

        $i6 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f4 = (float) $i6;

        $f4 = $f1 - $f4;

        $i6 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetPosY()>();

        $f5 = (float) $i6;

        $f5 = $f1 - $f5;

        $f4 = $f4 * $f5;

        $f3 = $f3 + $f4;

        $b8 = f2 cmpl $f3;

        $i6 = (int) $b8;

        if $i6 <= 0 goto label15;

        f2 = $f3;

        i4 = virtualinvoke r8.<coconutlabs.game.playcurling.CCLStone: int GetTeam()>();

        i2 = i5;

        $z0 = 1;

     label15:
        i5 = i5 + 1;

        goto label12;

     label16:
        if i3 != 0 goto label04;

        i1 = i1 + 1;

        goto label04;

     label17:
        if i1 <= i0 goto label18;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: boolean setCurrentScore(int,int)>(i1, 1);

        goto label06;

     label18:
        if i1 >= i0 goto label06;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: boolean setCurrentScore(int,int)>(i0, 2);

        goto label06;

     label19:
        if i2 >= i3 goto label20;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        i0 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP1CurrentScore()>();

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.gameplayhelper.ScoreManager scoreManager>;

        i1 = virtualinvoke $r4.<coconutlabs.game.playcurling.gameplayhelper.ScoreManager: int getP2CurrentScore()>();

        if i0 <= i1 goto label20;

        $r6 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLAchievement m_Achieves>;

        virtualinvoke $r6.<coconutlabs.game.playcurling.CCLAchievement: void AddWowAchieve(int)>(1);

     label20:
        return;
    }

    public coconutlabs.game.playcurling.state.GameState GetCurrentGameState()
    {
        coconutlabs.game.playcurling.MainView$MainThread r0;
        coconutlabs.game.playcurling.state.GameState r1;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        return r1;
    }

    public int GetCurrentGameStateInt()
    {
        coconutlabs.game.playcurling.state.StateGameEnd $r8;
        coconutlabs.game.playcurling.state.StateEndEnd $r12;
        coconutlabs.game.playcurling.state.StatePause $r9;
        coconutlabs.game.playcurling.MainView$MainThread r0, $r1;
        coconutlabs.game.playcurling.state.StateSelectSpin $r5;
        coconutlabs.game.playcurling.state.StateEndEndPause $r13;
        coconutlabs.game.playcurling.state.StateTurnStart $r4;
        coconutlabs.game.playcurling.state.StateChangeTurnPause $r10;
        coconutlabs.game.playcurling.state.StateGameEndPause $r11;
        coconutlabs.game.playcurling.MainView $r2;
        coconutlabs.game.playcurling.state.GameState $r3;
        coconutlabs.game.playcurling.state.StateThrow $r6;
        coconutlabs.game.playcurling.state.StateSweep $r7;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0>;

        $r1 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.MainView$MainThread access$0(coconutlabs.game.playcurling.MainView)>($r2);

        if $r1 == null goto label10;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateTurnStart stateTurnStart>;

        if $r3 != $r4 goto label01;

        return 0;

     label01:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r5 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateSelectSpin stateSelectSpin>;

        if $r3 != $r5 goto label02;

        return 1;

     label02:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r6 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateThrow stateThrow>;

        if $r3 != $r6 goto label03;

        return 2;

     label03:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r7 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateSweep stateSweep>;

        if $r3 != $r7 goto label04;

        return 3;

     label04:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r8 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateGameEnd stateGameEnd>;

        if $r3 != $r8 goto label05;

        return 5;

     label05:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r9 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StatePause statePause>;

        if $r3 != $r9 goto label06;

        return 6;

     label06:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r10 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateChangeTurnPause stateChangeTurnPause>;

        if $r3 != $r10 goto label07;

        return 7;

     label07:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r11 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateGameEndPause stateGameEndPause>;

        if $r3 != $r11 goto label08;

        return 8;

     label08:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r12 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateEndEnd stateEndEnd>;

        if $r3 != $r12 goto label09;

        return 9;

     label09:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r13 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateEndEndPause stateEndEndPause>;

        if $r3 != $r13 goto label10;

        return 10;

     label10:
        return -1;
    }

    coconutlabs.game.playcurling.CCLSoundManager GetSoundManager()
    {
        coconutlabs.game.playcurling.MainView$MainThread r0;
        coconutlabs.game.playcurling.CCLSoundManager $r1;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $r1 = staticinvoke <coconutlabs.game.playcurling.CCLSoundManager: coconutlabs.game.playcurling.CCLSoundManager getInstance()>();

        return $r1;
    }

    public boolean IsAutoScrolling()
    {
        coconutlabs.game.playcurling.MainView$MainThread r0;
        boolean z0;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        z0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bAutoScrolling>;

        return z0;
    }

    public void ProcessCallback()
    {
        coconutlabs.game.playcurling.state.StateChangeTurnPause $r2;
        android.os.Handler $r3;
        coconutlabs.game.playcurling.state.StateGameEndPause $r5;
        coconutlabs.game.playcurling.MainView$MainThread r0;
        coconutlabs.game.playcurling.state.StateEndEndPause $r6;
        coconutlabs.game.playcurling.state.GameState $r1;
        java.lang.Runnable $r4;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $r1 = virtualinvoke r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState GetCurrentGameState()>();

        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateChangeTurnPause stateChangeTurnPause>;

        if $r1 != $r2 goto label1;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Handler m_handlerChangeTurn>;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: java.lang.Runnable m_runChangeTurn>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        specialinvoke r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeTurn()>();

        return;

     label1:
        $r1 = virtualinvoke r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState GetCurrentGameState()>();

        $r5 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateGameEndPause stateGameEndPause>;

        if $r1 != $r5 goto label2;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Handler m_handlerGameEnd>;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: java.lang.Runnable m_runGameEnd>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        specialinvoke r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeStateGameEnd()>();

        return;

     label2:
        $r1 = virtualinvoke r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState GetCurrentGameState()>();

        $r6 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.StateEndEndPause stateEndEndPause>;

        if $r1 != $r6 goto label3;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Handler m_handlerEndEnd>;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: java.lang.Runnable m_runEndEnd>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        specialinvoke r0.<coconutlabs.game.playcurling.MainView$MainThread: void ChangeStateEndEnd()>();

     label3:
        return;
    }

    public void QuitGame()
    {
        android.content.SharedPreferences$Editor $r5;
        java.lang.Throwable $r10;
        android.content.Context $r3;
        coconutlabs.game.playcurling.Renderer $r8;
        coconutlabs.game.playcurling.MainView$MainThread r0, $r7;
        java.util.ArrayList $r9;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r2;
        android.content.SharedPreferences $r4;
        java.lang.InterruptedException $r11;
        coconutlabs.game.playcurling.MainView $r6;
        coconutlabs.game.playcurling.CCLSoundManager $r1;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $z0 = virtualinvoke $r1.<coconutlabs.game.playcurling.CCLSoundManager: boolean IsInit()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        virtualinvoke $r1.<coconutlabs.game.playcurling.CCLSoundManager: void Release()>();

     label1:
        $r2 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        virtualinvoke $r2.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: void setGameLoop(boolean)>(0);

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.content.Context m_context>;

        $r3 = virtualinvoke $r3.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r3);

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: boolean commit()>();

        $r6 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0>;

        $r7 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.MainView$MainThread access$0(coconutlabs.game.playcurling.MainView)>($r6);

        if $r7 == null goto label4;

        $r6 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0>;

        $r7 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.MainView$MainThread access$0(coconutlabs.game.playcurling.MainView)>($r6);

        virtualinvoke $r7.<coconutlabs.game.playcurling.MainView$MainThread: void SetRun(boolean)>(0);

        $r6 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0>;

     label2:
        $r7 = staticinvoke <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.MainView$MainThread access$0(coconutlabs.game.playcurling.MainView)>($r6);

        virtualinvoke $r7.<coconutlabs.game.playcurling.MainView$MainThread: void join()>();

     label3:
        $r6 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.MainView this$0>;

        staticinvoke <coconutlabs.game.playcurling.MainView: void access$2(coconutlabs.game.playcurling.MainView,coconutlabs.game.playcurling.MainView$MainThread)>($r6, null);

     label4:
        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $z0 = virtualinvoke $r1.<coconutlabs.game.playcurling.CCLSoundManager: boolean IsInit()>();

        if $z0 == 0 goto label5;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        virtualinvoke $r1.<coconutlabs.game.playcurling.CCLSoundManager: void Release()>();

     label5:
        $r8 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        if $r8 == null goto label6;

        $r8 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        virtualinvoke $r8.<coconutlabs.game.playcurling.Renderer: void freeObject()>();

        <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer> = null;

     label6:
        $r9 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listStones>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

        $r9 = <coconutlabs.game.playcurling.MainView: java.util.ArrayList m_listNonStones>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

        return;

     label7:
        $r10 := @caughtexception;

        $r11 = (java.lang.InterruptedException) $r10;

        virtualinvoke $r11.<java.lang.InterruptedException: void printStackTrace()>();

        goto label3;

        catch java.lang.InterruptedException from label2 to label3 with label7;
    }

    public void SetRun(boolean)
    {
        coconutlabs.game.playcurling.MainView$MainThread r0;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $z0 := @parameter0: boolean;

        r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bRun> = $z0;

        return;
    }

    public void UpdateSoundAndVibration(int)
    {
        coconutlabs.game.playcurling.Physics $r2;
        coconutlabs.game.playcurling.MainView$MainThread r0;
        int $i0, $i1;
        float $f0;
        android.os.Vibrator $r4;
        coconutlabs.game.playcurling.CCLSoundManager $r1, $r3;
        boolean $z0;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $i0 := @parameter0: int;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.Physics m_physicsSimulator>;

        $z0 = virtualinvoke $r2.<coconutlabs.game.playcurling.Physics: boolean GetCollisionBig()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $i1 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLSoundManager: int GetSoundIdCollisionBig()>();

        virtualinvoke $r1.<coconutlabs.game.playcurling.CCLSoundManager: void PlaySound(int,int)>($i1, 0);

        $z0 = <coconutlabs.game.playcurling.CCLDefine: boolean OPTION_VIBRATION>;

        if $z0 == 0 goto label2;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Vibrator m_vibrator>;

        virtualinvoke $r4.<android.os.Vibrator: void vibrate(long)>(50L);

     label2:
        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.Physics m_physicsSimulator>;

        virtualinvoke $r2.<coconutlabs.game.playcurling.Physics: void SetCollisionBig(boolean)>(0);

     label3:
        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.Physics m_physicsSimulator>;

        $z0 = virtualinvoke $r2.<coconutlabs.game.playcurling.Physics: boolean GetCollisionMedium()>();

        if $z0 == 0 goto label5;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $i1 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLSoundManager: int GetSoundIdCollisionMedium()>();

        virtualinvoke $r1.<coconutlabs.game.playcurling.CCLSoundManager: void PlaySound(int,int)>($i1, 0);

        $z0 = <coconutlabs.game.playcurling.CCLDefine: boolean OPTION_VIBRATION>;

        if $z0 == 0 goto label4;

        $r4 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.os.Vibrator m_vibrator>;

        virtualinvoke $r4.<android.os.Vibrator: void vibrate(long)>(30L);

     label4:
        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.Physics m_physicsSimulator>;

        virtualinvoke $r2.<coconutlabs.game.playcurling.Physics: void SetCollisionMedium(boolean)>(0);

     label5:
        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.Physics m_physicsSimulator>;

        $z0 = virtualinvoke $r2.<coconutlabs.game.playcurling.Physics: boolean GetCollisionSmall()>();

        if $z0 == 0 goto label6;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $i1 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLSoundManager: int GetSoundIdCollisionSmall()>();

        virtualinvoke $r1.<coconutlabs.game.playcurling.CCLSoundManager: void PlaySound(int,int)>($i1, 0);

        $r2 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.Physics m_physicsSimulator>;

        virtualinvoke $r2.<coconutlabs.game.playcurling.Physics: void SetCollisionSmall(boolean)>(0);

     label6:
        if $i0 <= 0 goto label7;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $i1 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLSoundManager: int GetSoundIdSlide()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 11000.0F;

        virtualinvoke $r1.<coconutlabs.game.playcurling.CCLSoundManager: void SetVolume(int,float)>($i1, $f0);

        return;

     label7:
        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.CCLSoundManager m_soundManager>;

        $i0 = virtualinvoke $r3.<coconutlabs.game.playcurling.CCLSoundManager: int GetSoundIdSlide()>();

        virtualinvoke $r1.<coconutlabs.game.playcurling.CCLSoundManager: void Stop(int)>($i0);

        return;
    }

    public void run()
    {
        java.lang.Throwable r6, $r7, $r9;
        long $l0, $l1;
        coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo $r2;
        byte $b2;
        int $i3;
        android.graphics.Canvas $r1;
        android.view.SurfaceHolder $r3;
        coconutlabs.game.playcurling.state.GameState $r5;
        boolean $z0;
        coconutlabs.game.playcurling.Renderer $r4;
        coconutlabs.game.playcurling.MainView$MainThread r0;
        java.lang.Exception $r8;
        java.lang.InterruptedException $r10;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

     label01:
        $z0 = r0.<coconutlabs.game.playcurling.MainView$MainThread: boolean m_bRun>;

        if $z0 != 0 goto label02;

        return;

     label02:
        $r2 = staticinvoke <coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo getInstance()>();

        $z0 = virtualinvoke $r2.<coconutlabs.game.playcurling.gameplayhelper.GamePlayInfo: boolean isGameLoopReady()>();

        if $z0 == 0 goto label01;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label03:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.SurfaceHolder m_surfaceHolder>;

        $r1 = interfaceinvoke $r3.<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(null);

        r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c> = $r1;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

     label04:
        if $r1 == null goto label06;

        $r4 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

     label05:
        if $r4 != null goto label07;

     label06:
        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        if $r1 == null goto label01;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.SurfaceHolder m_surfaceHolder>;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        interfaceinvoke $r3.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>($r1);

        goto label01;

     label07:
        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.SurfaceHolder m_surfaceHolder>;

        entermonitor $r3;

     label08:
        $r5 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        virtualinvoke $r5.<coconutlabs.game.playcurling.state.GameState: void UpdatePhysics(coconutlabs.game.playcurling.MainView$MainThread)>(r0);

        $r5 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        virtualinvoke $r5.<coconutlabs.game.playcurling.state.GameState: void UpdateLoopProcess(coconutlabs.game.playcurling.MainView$MainThread)>(r0);

        $r5 = r0.<coconutlabs.game.playcurling.MainView$MainThread: coconutlabs.game.playcurling.state.GameState state>;

        $r4 = <coconutlabs.game.playcurling.MainView: coconutlabs.game.playcurling.Renderer m_screenRenderer>;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        virtualinvoke $r5.<coconutlabs.game.playcurling.state.GameState: void UpdateDisplay(coconutlabs.game.playcurling.MainView$MainThread,coconutlabs.game.playcurling.Renderer,android.graphics.Canvas)>(r0, $r4, $r1);

        $l0 = $l0 + 25L;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label09:
        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label11;

     label10:
        staticinvoke <coconutlabs.game.playcurling.MainView$MainThread: void sleep(long)>($l0);

     label11:
        exitmonitor $r3;

     label12:
        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        if $r1 == null goto label01;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.SurfaceHolder m_surfaceHolder>;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        interfaceinvoke $r3.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>($r1);

        goto label01;

     label13:
        r6 := @caughtexception;

     label14:
        $r10 = (java.lang.InterruptedException) r6;

        virtualinvoke $r10.<java.lang.InterruptedException: void printStackTrace()>();

        goto label11;

     label15:
        $r7 := @caughtexception;

        exitmonitor $r3;

     label16:
        throw $r7;

     label17:
        $r8 := @caughtexception;

     label18:
        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label19:
        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        if $r1 == null goto label01;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.SurfaceHolder m_surfaceHolder>;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        interfaceinvoke $r3.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>($r1);

        goto label01;

     label20:
        $r9 := @caughtexception;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        if $r1 == null goto label21;

        $r3 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.SurfaceHolder m_surfaceHolder>;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.graphics.Canvas c>;

        interfaceinvoke $r3.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>($r1);

     label21:
        throw $r9;

        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Throwable from label03 to label05 with label20;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.InterruptedException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label14 to label16 with label15;
        catch java.lang.Exception from label16 to label17 with label17;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    public void setSurfaceSize(int, int)
    {
        int $i0, $i1;
        coconutlabs.game.playcurling.MainView$MainThread r0;
        android.view.SurfaceHolder $r1;

        r0 := @this: coconutlabs.game.playcurling.MainView$MainThread;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<coconutlabs.game.playcurling.MainView$MainThread: android.view.SurfaceHolder m_surfaceHolder>;

        entermonitor $r1;

        exitmonitor $r1;

        return;
    }
}
