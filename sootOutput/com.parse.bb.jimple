final class com.parse.bb extends java.lang.Object
{
    public static org.apache.http.client.HttpClient a;
    private org.apache.http.client.HttpClient b;
    private org.apache.http.client.methods.HttpUriRequest c;
    private long d;
    private int e;
    private int f;

    static void <clinit>()
    {
        <com.parse.bb: org.apache.http.client.HttpClient a> = null;

        return;
    }

    public void <init>(org.apache.http.client.methods.HttpUriRequest, long)
    {
        org.apache.http.impl.client.DefaultHttpClient $r3;
        org.apache.http.HttpVersion $r5;
        long $l0, $l1;
        org.apache.http.client.methods.HttpUriRequest $r1;
        com.parse.bb r0;
        org.apache.http.client.HttpClient $r2;
        org.apache.http.params.HttpParams $r4;
        double $d0, $d1;

        r0 := @this: com.parse.bb;

        $r1 := @parameter0: org.apache.http.client.methods.HttpUriRequest;

        $l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.parse.bb: int f> = 0;

        $r2 = <com.parse.bb: org.apache.http.client.HttpClient a>;

        if $r2 == null goto label2;

        $r2 = <com.parse.bb: org.apache.http.client.HttpClient a>;

        r0.<com.parse.bb: org.apache.http.client.HttpClient b> = $r2;

        $l0 = 1L;

     label1:
        r0.<com.parse.bb: org.apache.http.client.methods.HttpUriRequest c> = $r1;

        r0.<com.parse.bb: int e> = 5;

        $d0 = (double) $l0;

        $d1 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * $d1;

        $l1 = (long) $d0;

        $l0 = $l1 + $l0;

        r0.<com.parse.bb: long d> = $l0;

        return;

     label2:
        $r3 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r3.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        r0.<com.parse.bb: org.apache.http.client.HttpClient b> = $r3;

        $r2 = r0.<com.parse.bb: org.apache.http.client.HttpClient b>;

        $r4 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        $r5 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

        interfaceinvoke $r4.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.version", $r5);

        goto label1;
    }

    private static com.parse.ParseException a(java.lang.String, java.lang.Exception)
    {
        com.parse.ParseException $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r0;
        java.lang.Exception $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Exception;

        $r2 = new com.parse.ParseException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r0 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r0 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.parse.ParseException: void <init>(int,java.lang.String)>(100, $r0);

        return $r2;
    }

    private byte[] b(com.parse.ProgressCallback)
    {
        java.lang.Throwable $r13, $r16;
        byte[] $r11;
        java.lang.Object[] $r18;
        java.io.ByteArrayOutputStream $r10, $r19;
        com.parse.ParseException $r15, $r21;
        org.apache.http.client.methods.HttpUriRequest $r3;
        org.apache.http.Header $r7;
        org.apache.http.StatusLine $r17;
        com.parse.bc $r12, $r20;
        com.parse.bb r0;
        com.parse.ProgressCallback $r1;
        org.apache.http.client.HttpClient $r2;
        int $i0, $i1, $i2;
        java.lang.String $r5;
        boolean $z0;
        org.apache.http.Header[] $r6;
        org.apache.http.conn.ClientConnectionManager $r14;
        org.apache.http.HttpEntity $r8;
        java.lang.Exception $r22;
        org.apache.http.HttpResponse $r4;
        float $f0, $f1;
        java.io.InputStream $r9;

        r0 := @this: com.parse.bb;

        $r1 := @parameter0: com.parse.ProgressCallback;

        $i0 = 0;

        $r2 = r0.<com.parse.bb: org.apache.http.client.HttpClient b>;

        $r3 = r0.<com.parse.bb: org.apache.http.client.methods.HttpUriRequest c>;

     label01:
        $r4 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r3);

     label02:
        $r3 = r0.<com.parse.bb: org.apache.http.client.methods.HttpUriRequest c>;

     label03:
        $r5 = interfaceinvoke $r3.<org.apache.http.client.methods.HttpUriRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("GET");

     label04:
        if $z0 == 0 goto label25;

     label05:
        $r6 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("Content-Length");

     label06:
        $i1 = lengthof $r6;

        if $i1 <= 0 goto label27;

        $r7 = $r6[0];

     label07:
        $r5 = interfaceinvoke $r7.<org.apache.http.Header: java.lang.String getValue()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label08:
        $r8 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r9 = interfaceinvoke $r8.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label09:
        $r19 = new java.io.ByteArrayOutputStream;

        $r10 = $r19;

     label10:
        specialinvoke $r19.<java.io.ByteArrayOutputStream: void <init>()>();

     label11:
        $r11 = newarray (byte)[32768];

     label12:
        $i2 = lengthof $r11;

     label13:
        $i2 = virtualinvoke $r9.<java.io.InputStream: int read(byte[],int,int)>($r11, 0, $i2);

     label14:
        if $i2 == -1 goto label22;

     label15:
        virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r11, 0, $i2);

     label16:
        $i0 = $i0 + $i2;

        if $r1 == null goto label12;

        if $i1 == -1 goto label12;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f0 = $f0 * 100.0F;

     label17:
        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

     label18:
        $r20 = new com.parse.bc;

        $r12 = $r20;

     label19:
        specialinvoke $r20.<com.parse.bc: void <init>(com.parse.bb,com.parse.k,int)>(r0, $r1, $i2);

        staticinvoke <com.parse.a: int a(com.parse.a)>($r12);

     label20:
        goto label12;

     label21:
        $r13 := @caughtexception;

        $r2 = r0.<com.parse.bb: org.apache.http.client.HttpClient b>;

        $r14 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r14.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        $r22 = (java.lang.Exception) $r13;

        $r15 = staticinvoke <com.parse.bb: com.parse.ParseException a(java.lang.String,java.lang.Exception)>("bad protocol", $r22);

        throw $r15;

     label22:
        virtualinvoke $r10.<java.io.ByteArrayOutputStream: void flush()>();

        $r11 = virtualinvoke $r10.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label23:
        return $r11;

     label24:
        $r16 := @caughtexception;

        $r2 = r0.<com.parse.bb: org.apache.http.client.HttpClient b>;

        $r14 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r14.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        $r22 = (java.lang.Exception) $r16;

        $r15 = staticinvoke <com.parse.bb: com.parse.ParseException a(java.lang.String,java.lang.Exception)>("i/o failure", $r22);

        throw $r15;

     label25:
        $r17 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r17.<org.apache.http.StatusLine: int getStatusCode()>();

        $i0 = $i0 / 100;

        if $i0 == 2 goto label26;

        $r21 = new com.parse.ParseException;

        $r18 = newarray (java.lang.Object)[1];

        $r17 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r5 = interfaceinvoke $r17.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        $r18[0] = $r5;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Upload to S3 failed. %s", $r18);

        specialinvoke $r21.<com.parse.ParseException: void <init>(int,java.lang.String)>(100, $r5);

        throw $r21;

     label26:
        return null;

     label27:
        $i1 = -1;

        goto label08;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label21;
        catch org.apache.http.client.ClientProtocolException from label03 to label04 with label21;
        catch org.apache.http.client.ClientProtocolException from label05 to label06 with label21;
        catch org.apache.http.client.ClientProtocolException from label07 to label08 with label21;
        catch org.apache.http.client.ClientProtocolException from label08 to label09 with label21;
        catch org.apache.http.client.ClientProtocolException from label10 to label11 with label21;
        catch org.apache.http.client.ClientProtocolException from label13 to label14 with label21;
        catch org.apache.http.client.ClientProtocolException from label15 to label16 with label21;
        catch org.apache.http.client.ClientProtocolException from label17 to label18 with label21;
        catch org.apache.http.client.ClientProtocolException from label19 to label20 with label21;
        catch java.io.IOException from label01 to label02 with label24;
        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label05 to label06 with label24;
        catch java.io.IOException from label07 to label08 with label24;
        catch java.io.IOException from label08 to label09 with label24;
        catch java.io.IOException from label10 to label11 with label24;
        catch java.io.IOException from label13 to label14 with label24;
        catch java.io.IOException from label15 to label16 with label24;
        catch java.io.IOException from label17 to label18 with label24;
        catch java.io.IOException from label19 to label20 with label24;
        catch org.apache.http.client.ClientProtocolException from label22 to label23 with label21;
        catch java.io.IOException from label22 to label23 with label24;
    }

    public final byte[] a(com.parse.ProgressCallback)
    {
        java.lang.Throwable $r7;
        byte[] $r2;
        com.parse.ParseException $r3;
        long $l2;
        org.apache.http.client.methods.HttpUriRequest $r6;
        com.parse.bb r0;
        com.parse.ProgressCallback $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.parse.bb;

        $r1 := @parameter0: com.parse.ProgressCallback;

     label1:
        $r2 = specialinvoke r0.<com.parse.bb: byte[] b(com.parse.ProgressCallback)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $i0 = r0.<com.parse.bb: int f>;

        $i0 = $i0 + 1;

        r0.<com.parse.bb: int f> = $i0;

        $i0 = r0.<com.parse.bb: int f>;

        $i1 = r0.<com.parse.bb: int e>;

        if $i0 >= $i1 goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Request failed. Waiting ");

        $l2 = r0.<com.parse.bb: long d>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" milliseconds before attempt #");

        $i0 = r0.<com.parse.bb: int f>;

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.parse.Parse: void logI(java.lang.String,java.lang.String)>("com.parse.ParseRequestRetryer", $r5);

        $l2 = r0.<com.parse.bb: long d>;

     label4:
        staticinvoke <java.lang.Thread: void sleep(long)>($l2);

     label5:
        $l2 = r0.<com.parse.bb: long d>;

        $l2 = $l2 * 2L;

        r0.<com.parse.bb: long d> = $l2;

        virtualinvoke r0.<com.parse.bb: byte[] a(com.parse.ProgressCallback)>($r1);

        return null;

     label6:
        $r6 = r0.<com.parse.bb: org.apache.http.client.methods.HttpUriRequest c>;

        $z0 = interfaceinvoke $r6.<org.apache.http.client.methods.HttpUriRequest: boolean isAborted()>();

        if $z0 != 0 goto label8;

        staticinvoke <com.parse.Parse: void logI(java.lang.String,java.lang.String)>("com.parse.ParseRequestRetryer", "Request failed. Giving up.");

        throw $r3;

     label7:
        $r7 := @caughtexception;

        goto label5;

     label8:
        return null;

        catch com.parse.ParseException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label4 to label5 with label7;
    }
}
