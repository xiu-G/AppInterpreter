public abstract class al extends java.io.InputStream
{

    public void <init>(ae, u, int, as)
    {
        java.lang.IndexOutOfBoundsException $r5;
        ad $r7;
        ae $r1;
        ag $r6;
        al r0;
        java.lang.NullPointerException $r4;
        p $r8;
        as $r3;
        t $r10;
        u $r2;
        int $i0, $i1, $i2;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: al;

        $r1 := @parameter0: ae;

        $r2 := @parameter1: u;

        $i0 := @parameter2: int;

        $r3 := @parameter3: as;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        if $r1 != null goto label01;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label01:
        if $i0 < 0 goto label02;

        if $i0 <= 4 goto label03;

     label02:
        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("unknown permission");

        throw $r5;

     label03:
        $r6 = $r1.<ae: ag d>;

        $r7 = $r6.<ag: ad d>;

        $i1 = $r7.<ad: int d>;

        if $i1 != 0 goto label05;

        $i0 = <am: int a>;

        staticinvoke <am: void a(int,int)>($i0, $i1);

        $z0 = 1;

     label04:
        if $z0 != 0 goto label11;

        $i0 = staticinvoke <am: int a()>();

        $i1 = <am: int b>;

        if $i0 != $i1 goto label10;

        if $r3 != null goto label10;

        $r8 = new p;

        specialinvoke $r8.<p: void <init>()>();

        throw $r8;

     label05:
        if $i1 == 1 goto label06;

        if $i1 != 3 goto label08;

     label06:
        $i2 = <am: int b>;

        staticinvoke <am: void a(int,int)>($i2, $i1);

        if $r3 == null goto label09;

        if $r2 == null goto label09;

        $r9 = $r7.<ad: java.lang.String e>;

        $z0 = virtualinvoke $r2.<u: boolean a(java.lang.String)>($r9);

        if $z0 == 1 goto label07;

        $z0 = 0;

        goto label04;

     label07:
        $z0 = virtualinvoke $r2.<u: boolean a(java.lang.String,int)>($r9, $i0);

        if $z0 != 1 goto label09;

        $r9 = interfaceinvoke $r3.<as: java.lang.String a()>();

        $z0 = virtualinvoke $r2.<u: boolean b(java.lang.String)>($r9);

        if $z0 == 0 goto label09;

        $z0 = 1;

        goto label04;

     label08:
        $i0 = <am: int d>;

        staticinvoke <am: void a(int,int)>($i0, $i1);

     label09:
        $z0 = 0;

        goto label04;

     label10:
        $r10 = new t;

        specialinvoke $r10.<t: void <init>()>();

        throw $r10;

     label11:
        return;
    }

    public static e a(java.lang.String, af, u, as)
    {
        byte[] $r6, $r7;
        af $r1;
        e $r8;
        as $r3;
        u $r2;
        v $r5;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: af;

        $r2 := @parameter2: u;

        $r3 := @parameter3: as;

        if $r2 == null goto label1;

        if $r3 != null goto label2;

     label1:
        return null;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DRCS-Media-Encrypted-Key:");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<u: v c(java.lang.String)>($r0);

        if $r5 == null goto label3;

        $r6 = virtualinvoke $r5.<v: byte[] a()>();

        if $r6 == null goto label3;

        $r7 = $r1.<af: byte[] g>;

        if $r7 == null goto label3;

        $i0 = staticinvoke <am: int b()>();

        $r8 = interfaceinvoke $r3.<as: e a(byte[],byte[],int)>($r6, $r7, $i0);

        return $r8;

     label3:
        return null;
    }

    public abstract long a();

    public abstract byte[] a(byte[], int);

    public abstract byte[] b(byte[], int);

    public abstract void close();

    public boolean markSupported()
    {
        al r0;

        r0 := @this: al;

        return 1;
    }

    public int read()
    {
        byte[] $r1;
        short $s2;
        byte $b1;
        int $i0;
        al r0;

        r0 := @this: al;

        $r1 = newarray (byte)[1];

        $i0 = virtualinvoke r0.<al: int read(byte[])>($r1);

        if $i0 >= 0 goto label1;

        return -1;

     label1:
        $b1 = $r1[0];

        $s2 = (short) $b1;

        $s2 = $s2 & 255;

        $i0 = (int) $s2;

        return $i0;
    }

    public int read(byte[])
    {
        int $i0;
        byte[] $r1;
        al r0;

        r0 := @this: al;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $i0 = virtualinvoke r0.<al: int read(byte[],int,int)>($r1, 0, $i0);

        return $i0;
    }

    public abstract int read(byte[], int, int);

    public abstract long skip(long);
}
