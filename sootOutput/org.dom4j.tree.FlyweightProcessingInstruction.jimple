public class org.dom4j.tree.FlyweightProcessingInstruction extends org.dom4j.tree.AbstractProcessingInstruction
{
    protected java.lang.String target;
    protected java.lang.String text;
    protected java.util.Map values;

    public void <init>()
    {
        org.dom4j.tree.FlyweightProcessingInstruction r0;

        r0 := @this: org.dom4j.tree.FlyweightProcessingInstruction;

        specialinvoke r0.<org.dom4j.tree.AbstractProcessingInstruction: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.dom4j.tree.FlyweightProcessingInstruction r0;
        java.util.Map $r3;
        java.lang.String $r1, $r2;

        r0 := @this: org.dom4j.tree.FlyweightProcessingInstruction;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.dom4j.tree.AbstractProcessingInstruction: void <init>()>();

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String target> = $r1;

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String text> = $r2;

        $r3 = virtualinvoke r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.util.Map parseValues(java.lang.String)>($r2);

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.util.Map values> = $r3;

        return;
    }

    public void <init>(java.lang.String, java.util.Map)
    {
        java.lang.String $r1;
        org.dom4j.tree.FlyweightProcessingInstruction r0;
        java.util.Map $r2;

        r0 := @this: org.dom4j.tree.FlyweightProcessingInstruction;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        specialinvoke r0.<org.dom4j.tree.AbstractProcessingInstruction: void <init>()>();

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String target> = $r1;

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.util.Map values> = $r2;

        $r1 = virtualinvoke r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String toString(java.util.Map)>($r2);

        r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String text> = $r1;

        return;
    }

    protected org.dom4j.Node createXPathResult(org.dom4j.Element)
    {
        org.dom4j.tree.FlyweightProcessingInstruction r0;
        org.dom4j.tree.DefaultProcessingInstruction $r2;
        org.dom4j.Element $r1;
        java.lang.String $r3, $r4;

        r0 := @this: org.dom4j.tree.FlyweightProcessingInstruction;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 = new org.dom4j.tree.DefaultProcessingInstruction;

        $r3 = virtualinvoke r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String getTarget()>();

        $r4 = virtualinvoke r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String getText()>();

        specialinvoke $r2.<org.dom4j.tree.DefaultProcessingInstruction: void <init>(org.dom4j.Element,java.lang.String,java.lang.String)>($r1, $r3, $r4);

        return $r2;
    }

    public java.lang.String getTarget()
    {
        java.lang.String r1;
        org.dom4j.tree.FlyweightProcessingInstruction r0;

        r0 := @this: org.dom4j.tree.FlyweightProcessingInstruction;

        r1 = r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String target>;

        return r1;
    }

    public java.lang.String getText()
    {
        java.lang.String r1;
        org.dom4j.tree.FlyweightProcessingInstruction r0;

        r0 := @this: org.dom4j.tree.FlyweightProcessingInstruction;

        r1 = r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.lang.String text>;

        return r1;
    }

    public java.lang.String getValue(java.lang.String)
    {
        org.dom4j.tree.FlyweightProcessingInstruction r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r1;

        r0 := @this: org.dom4j.tree.FlyweightProcessingInstruction;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.util.Map values>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        if $r1 != null goto label1;

        return "";

     label1:
        return $r1;
    }

    public java.util.Map getValues()
    {
        org.dom4j.tree.FlyweightProcessingInstruction r0;
        java.util.Map $r1;

        r0 := @this: org.dom4j.tree.FlyweightProcessingInstruction;

        $r1 = r0.<org.dom4j.tree.FlyweightProcessingInstruction: java.util.Map values>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r1;
    }

    public void setTarget(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r2;
        java.lang.String $r1;
        org.dom4j.tree.FlyweightProcessingInstruction r0;

        r0 := @this: org.dom4j.tree.FlyweightProcessingInstruction;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This PI is read-only and cannot be modified");

        throw $r2;
    }
}
