public abstract class com.kingroot.sdk.gj$b extends java.lang.Thread implements com.kingroot.sdk.gj$a
{
    private java.util.List go;
    final com.kingroot.sdk.gj jE;
    private java.util.concurrent.atomic.AtomicBoolean jG;

    public void <init>(com.kingroot.sdk.gj, java.util.List)
    {
        java.util.List $r2, $r4;
        com.kingroot.sdk.gj$b r0;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        com.kingroot.sdk.gj $r1;
        java.util.ArrayList $r3;

        r0 := @this: com.kingroot.sdk.gj$b;

        $r1 := @parameter0: com.kingroot.sdk.gj;

        $r2 := @parameter1: java.util.List;

        r0.<com.kingroot.sdk.gj$b: com.kingroot.sdk.gj jE> = $r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        if $r2 == null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.kingroot.sdk.gj$b: java.util.List go> = $r3;

        $r4 = r0.<com.kingroot.sdk.gj$b: java.util.List go>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r2);

     label1:
        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<com.kingroot.sdk.gj$b: java.util.concurrent.atomic.AtomicBoolean jG> = $r5;

        $r5 = r0.<com.kingroot.sdk.gj$b: java.util.concurrent.atomic.AtomicBoolean jG>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;
    }

    public abstract void b(com.kingroot.sdk.gj$a);

    public java.util.List cj()
    {
        java.util.List $r1;
        com.kingroot.sdk.gj$b r0;
        java.util.ArrayList $r2;

        r0 := @this: com.kingroot.sdk.gj$b;

        $r1 = r0.<com.kingroot.sdk.gj$b: java.util.List go>;

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.kingroot.sdk.gj$b: java.util.List go> = $r2;

     label1:
        $r1 = r0.<com.kingroot.sdk.gj$b: java.util.List go>;

        return $r1;
    }

    public void interrupt()
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        com.kingroot.sdk.gj$b r0;

        r0 := @this: com.kingroot.sdk.gj$b;

        $r1 = r0.<com.kingroot.sdk.gj$b: java.util.concurrent.atomic.AtomicBoolean jG>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        specialinvoke r0.<java.lang.Thread: void interrupt()>();

        return;
    }

    public boolean isRunning()
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        com.kingroot.sdk.gj$b r0;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.gj$b;

        $r1 = r0.<com.kingroot.sdk.gj$b: java.util.concurrent.atomic.AtomicBoolean jG>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    public void run()
    {
        java.lang.Throwable $r2;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        com.kingroot.sdk.gj$b r0;

        r0 := @this: com.kingroot.sdk.gj$b;

        $r1 = r0.<com.kingroot.sdk.gj$b: java.util.concurrent.atomic.AtomicBoolean jG>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label1:
        virtualinvoke r0.<com.kingroot.sdk.gj$b: void b(com.kingroot.sdk.gj$a)>(r0);

     label2:
        $r1 = r0.<com.kingroot.sdk.gj$b: java.util.concurrent.atomic.AtomicBoolean jG>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;

     label3:
        $r2 := @caughtexception;

        $r1 = r0.<com.kingroot.sdk.gj$b: java.util.concurrent.atomic.AtomicBoolean jG>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
