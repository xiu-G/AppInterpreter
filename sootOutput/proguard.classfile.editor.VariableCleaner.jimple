public class proguard.classfile.editor.VariableCleaner extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.attribute.visitor.AttributeVisitor
{
    private boolean deleteLocalVariableTableAttribute;
    private boolean deleteLocalVariableTypeTableAttribute;

    public void <init>()
    {
        proguard.classfile.editor.VariableCleaner r0;

        r0 := @this: proguard.classfile.editor.VariableCleaner;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        return;
    }

    private int[] createMaxArray(int)
    {
        int[] $r1;
        int $i0, $i1;
        proguard.classfile.editor.VariableCleaner r0;

        r0 := @this: proguard.classfile.editor.VariableCleaner;

        $i0 := @parameter0: int;

        $r1 = newarray (int)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1[$i1] = 2147483647;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private int removeUnusedLocalVariableTypes(proguard.classfile.attribute.LocalVariableTypeInfo[], int, int)
    {
        proguard.classfile.editor.VariableCleaner r0;
        proguard.classfile.attribute.LocalVariableTypeInfo $r2;
        int $i0, $i1, $i2, $i3, $i4;
        proguard.classfile.attribute.LocalVariableTypeInfo[] $r1;

        r0 := @this: proguard.classfile.editor.VariableCleaner;

        $r1 := @parameter0: proguard.classfile.attribute.LocalVariableTypeInfo[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $r2 = $r1[$i2];

        $i4 = $r2.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2index>;

        if $i4 < 0 goto label2;

        $i4 = $r2.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2index>;

        if $i4 >= $i1 goto label2;

        $i4 = $r2.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2length>;

        if $i4 <= 0 goto label2;

        $r2 = $r1[$i2];

        $r1[$i3] = $r2;

        $i3 = $i3 + 1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $i1 = $i3;

     label4:
        if $i1 >= $i0 goto label5;

        $r1[$i1] = null;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return $i3;
    }

    private int removeUnusedLocalVariables(proguard.classfile.attribute.LocalVariableInfo[], int, int)
    {
        proguard.classfile.attribute.LocalVariableInfo $r2;
        proguard.classfile.editor.VariableCleaner r0;
        int $i0, $i1, $i2, $i3, $i4;
        proguard.classfile.attribute.LocalVariableInfo[] $r1;

        r0 := @this: proguard.classfile.editor.VariableCleaner;

        $r1 := @parameter0: proguard.classfile.attribute.LocalVariableInfo[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $r2 = $r1[$i2];

        $i4 = $r2.<proguard.classfile.attribute.LocalVariableInfo: int u2index>;

        if $i4 < 0 goto label2;

        $i4 = $r2.<proguard.classfile.attribute.LocalVariableInfo: int u2index>;

        if $i4 >= $i1 goto label2;

        $i4 = $r2.<proguard.classfile.attribute.LocalVariableInfo: int u2length>;

        if $i4 <= 0 goto label2;

        $r2 = $r1[$i2];

        $r1[$i3] = $r2;

        $i3 = $i3 + 1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $i1 = $i3;

     label4:
        if $i1 >= $i0 goto label5;

        $r1[$i1] = null;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return $i3;
    }

    private void trimLocalVariableTypes(proguard.classfile.attribute.LocalVariableTypeInfo[], int, int)
    {
        int[] $r2;
        int $i0, $i1, $i2;
        proguard.classfile.editor.VariableCleaner r0;
        proguard.classfile.attribute.LocalVariableTypeInfo $r3;
        proguard.classfile.attribute.LocalVariableTypeInfo[] $r1;

        r0 := @this: proguard.classfile.editor.VariableCleaner;

        $r1 := @parameter0: proguard.classfile.attribute.LocalVariableTypeInfo[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int)>($r1, 0, $i0);

        $r2 = specialinvoke r0.<proguard.classfile.editor.VariableCleaner: int[] createMaxArray(int)>($i1);

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label3;

        $r3 = $r1[$i0];

        $i1 = $r3.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2index>;

        $i1 = $r2[$i1];

        $i2 = $r3.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2startPC>;

        $i1 = $i1 - $i2;

        $i2 = $r3.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2length>;

        if $i2 <= $i1 goto label2;

        $r3.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2length> = $i1;

     label2:
        $i1 = $r3.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2index>;

        $i2 = $r3.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2startPC>;

        $r2[$i1] = $i2;

        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }

    private void trimLocalVariables(proguard.classfile.attribute.LocalVariableInfo[], int, int)
    {
        int[] $r2;
        int $i0, $i1, $i2;
        proguard.classfile.attribute.LocalVariableInfo $r3;
        proguard.classfile.editor.VariableCleaner r0;
        proguard.classfile.attribute.LocalVariableInfo[] $r1;

        r0 := @this: proguard.classfile.editor.VariableCleaner;

        $r1 := @parameter0: proguard.classfile.attribute.LocalVariableInfo[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int)>($r1, 0, $i0);

        $r2 = specialinvoke r0.<proguard.classfile.editor.VariableCleaner: int[] createMaxArray(int)>($i1);

        $i0 = $i0 - 1;

     label1:
        if $i0 < 0 goto label3;

        $r3 = $r1[$i0];

        $i1 = $r3.<proguard.classfile.attribute.LocalVariableInfo: int u2index>;

        $i1 = $r2[$i1];

        $i2 = $r3.<proguard.classfile.attribute.LocalVariableInfo: int u2startPC>;

        $i1 = $i1 - $i2;

        $i2 = $r3.<proguard.classfile.attribute.LocalVariableInfo: int u2length>;

        if $i2 <= $i1 goto label2;

        $r3.<proguard.classfile.attribute.LocalVariableInfo: int u2length> = $i1;

     label2:
        $i1 = $r3.<proguard.classfile.attribute.LocalVariableInfo: int u2index>;

        $i2 = $r3.<proguard.classfile.attribute.LocalVariableInfo: int u2startPC>;

        $r2[$i1] = $i2;

        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.classfile.editor.VariableCleaner r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.classfile.editor.VariableCleaner;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        return;
    }

    public void visitCodeAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute)
    {
        proguard.classfile.editor.AttributesEditor $r2;
        proguard.classfile.editor.VariableCleaner r0;
        proguard.classfile.ProgramClass $r5;
        proguard.classfile.ProgramMember $r6;
        proguard.classfile.attribute.CodeAttribute $r1;
        proguard.classfile.Clazz $r3;
        proguard.classfile.Method $r4;
        boolean $z0;

        r0 := @this: proguard.classfile.editor.VariableCleaner;

        $r3 := @parameter0: proguard.classfile.Clazz;

        $r4 := @parameter1: proguard.classfile.Method;

        $r1 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        r0.<proguard.classfile.editor.VariableCleaner: boolean deleteLocalVariableTableAttribute> = 0;

        r0.<proguard.classfile.editor.VariableCleaner: boolean deleteLocalVariableTypeTableAttribute> = 0;

        virtualinvoke $r1.<proguard.classfile.attribute.CodeAttribute: void attributesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor)>($r3, $r4, r0);

        $z0 = r0.<proguard.classfile.editor.VariableCleaner: boolean deleteLocalVariableTableAttribute>;

        if $z0 == 0 goto label1;

        $r2 = new proguard.classfile.editor.AttributesEditor;

        $r5 = (proguard.classfile.ProgramClass) $r3;

        $r6 = (proguard.classfile.ProgramMember) $r4;

        specialinvoke $r2.<proguard.classfile.editor.AttributesEditor: void <init>(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember,proguard.classfile.attribute.CodeAttribute,boolean)>($r5, $r6, $r1, 1);

        virtualinvoke $r2.<proguard.classfile.editor.AttributesEditor: void deleteAttribute(java.lang.String)>("LocalVariableTable");

     label1:
        $z0 = r0.<proguard.classfile.editor.VariableCleaner: boolean deleteLocalVariableTypeTableAttribute>;

        if $z0 == 0 goto label2;

        $r2 = new proguard.classfile.editor.AttributesEditor;

        $r5 = (proguard.classfile.ProgramClass) $r3;

        $r6 = (proguard.classfile.ProgramMember) $r4;

        specialinvoke $r2.<proguard.classfile.editor.AttributesEditor: void <init>(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember,proguard.classfile.attribute.CodeAttribute,boolean)>($r5, $r6, $r1, 1);

        virtualinvoke $r2.<proguard.classfile.editor.AttributesEditor: void deleteAttribute(java.lang.String)>("LocalVariableTypeTable");

     label2:
        return;
    }

    public void visitLocalVariableTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTableAttribute)
    {
        proguard.classfile.editor.VariableCleaner r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.LocalVariableTableAttribute $r4;
        proguard.classfile.attribute.LocalVariableInfo[] $r5;

        r0 := @this: proguard.classfile.editor.VariableCleaner;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTableAttribute;

        $r5 = $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: proguard.classfile.attribute.LocalVariableInfo[] localVariableTable>;

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: int u2localVariableTableLength>;

        $i1 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2maxLocals>;

        $i0 = specialinvoke r0.<proguard.classfile.editor.VariableCleaner: int removeUnusedLocalVariables(proguard.classfile.attribute.LocalVariableInfo[],int,int)>($r5, $i0, $i1);

        $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: int u2localVariableTableLength> = $i0;

        $r5 = $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: proguard.classfile.attribute.LocalVariableInfo[] localVariableTable>;

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: int u2localVariableTableLength>;

        $i1 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2maxLocals>;

        specialinvoke r0.<proguard.classfile.editor.VariableCleaner: void trimLocalVariables(proguard.classfile.attribute.LocalVariableInfo[],int,int)>($r5, $i0, $i1);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: int u2localVariableTableLength>;

        if $i0 != 0 goto label1;

        r0.<proguard.classfile.editor.VariableCleaner: boolean deleteLocalVariableTableAttribute> = 1;

     label1:
        return;
    }

    public void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTypeTableAttribute)
    {
        proguard.classfile.editor.VariableCleaner r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.LocalVariableTypeTableAttribute $r4;
        proguard.classfile.attribute.LocalVariableTypeInfo[] $r5;

        r0 := @this: proguard.classfile.editor.VariableCleaner;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTypeTableAttribute;

        $r5 = $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: proguard.classfile.attribute.LocalVariableTypeInfo[] localVariableTypeTable>;

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: int u2localVariableTypeTableLength>;

        $i1 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2maxLocals>;

        $i0 = specialinvoke r0.<proguard.classfile.editor.VariableCleaner: int removeUnusedLocalVariableTypes(proguard.classfile.attribute.LocalVariableTypeInfo[],int,int)>($r5, $i0, $i1);

        $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: int u2localVariableTypeTableLength> = $i0;

        $r5 = $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: proguard.classfile.attribute.LocalVariableTypeInfo[] localVariableTypeTable>;

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: int u2localVariableTypeTableLength>;

        $i1 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2maxLocals>;

        specialinvoke r0.<proguard.classfile.editor.VariableCleaner: void trimLocalVariableTypes(proguard.classfile.attribute.LocalVariableTypeInfo[],int,int)>($r5, $i0, $i1);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: int u2localVariableTypeTableLength>;

        if $i0 != 0 goto label1;

        r0.<proguard.classfile.editor.VariableCleaner: boolean deleteLocalVariableTypeTableAttribute> = 1;

     label1:
        return;
    }
}
