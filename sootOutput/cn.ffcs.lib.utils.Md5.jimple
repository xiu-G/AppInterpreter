public class cn.ffcs.lib.utils.Md5 extends java.lang.Object
{
    private static final char[] DIGITS;

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[36];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        $r0[16] = 103;

        $r0[17] = 104;

        $r0[18] = 105;

        $r0[19] = 106;

        $r0[20] = 107;

        $r0[21] = 108;

        $r0[22] = 109;

        $r0[23] = 110;

        $r0[24] = 111;

        $r0[25] = 112;

        $r0[26] = 113;

        $r0[27] = 114;

        $r0[28] = 115;

        $r0[29] = 116;

        $r0[30] = 117;

        $r0[31] = 118;

        $r0[32] = 119;

        $r0[33] = 120;

        $r0[34] = 121;

        $r0[35] = 122;

        <cn.ffcs.lib.utils.Md5: char[] DIGITS> = $r0;

        return;
    }

    public void <init>()
    {
        cn.ffcs.lib.utils.Md5 r0;

        r0 := @this: cn.ffcs.lib.utils.Md5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String bytesToHexString(byte[])
    {
        byte[] $r0;
        char $c6;
        byte b0;
        int i1, i2, i3, i4, $i5;
        char[] r1, $r2;
        java.lang.String $r3;

        $r0 := @parameter0: byte[];

        i1 = lengthof $r0;

        i1 = i1 * 2;

        r1 = newarray (char)[i1];

        i2 = 0;

        i1 = lengthof $r0;

        i3 = 0;

     label1:
        if i2 >= i1 goto label2;

        b0 = $r0[i2];

        i4 = i3 + 1;

        $r2 = <cn.ffcs.lib.utils.Md5: char[] DIGITS>;

        $i5 = (int) b0;

        $i5 = $i5 >> 4;

        $i5 = $i5 & 15;

        $c6 = $r2[$i5];

        r1[i3] = $c6;

        i3 = i4 + 1;

        $r2 = <cn.ffcs.lib.utils.Md5: char[] DIGITS>;

        b0 = b0 & 15;

        $i5 = (int) b0;

        $c6 = $r2[$i5];

        r1[i4] = $c6;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>(r1);

        return $r3;
    }

    public static java.lang.String encode(java.lang.String)
    {
        java.lang.Throwable r1;
        byte[] $r3;
        java.security.MessageDigest $r2;
        java.security.NoSuchAlgorithmException $r4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

        $r0 = staticinvoke <cn.ffcs.lib.utils.Md5: java.lang.String bytesToHexString(byte[])>($r3);

     label2:
        return $r0;

     label3:
        r1 := @caughtexception;

        $r4 = (java.security.NoSuchAlgorithmException) r1;

        virtualinvoke $r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
}
