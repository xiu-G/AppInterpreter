public class proguard.obfuscate.MappingPrinter extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor
{
    private final java.io.PrintStream ps;

    public void <init>()
    {
        java.io.PrintStream $r1;
        proguard.obfuscate.MappingPrinter r0;

        r0 := @this: proguard.obfuscate.MappingPrinter;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke r0.<proguard.obfuscate.MappingPrinter: void <init>(java.io.PrintStream)>($r1);

        return;
    }

    public void <init>(java.io.PrintStream)
    {
        java.io.PrintStream $r1;
        proguard.obfuscate.MappingPrinter r0;

        r0 := @this: proguard.obfuscate.MappingPrinter;

        $r1 := @parameter0: java.io.PrintStream;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.obfuscate.MappingPrinter: java.io.PrintStream ps> = $r1;

        return;
    }

    private static java.lang.String lineNumberRange(proguard.classfile.ProgramClass, proguard.classfile.ProgramMember)
    {
        proguard.classfile.ProgramMember $r1;
        java.lang.StringBuffer $r3;
        java.lang.String $r2;
        proguard.classfile.ProgramClass $r0;

        $r0 := @parameter0: proguard.classfile.ProgramClass;

        $r1 := @parameter1: proguard.classfile.ProgramMember;

        $r2 = virtualinvoke $r1.<proguard.classfile.ProgramMember: java.lang.String getLineNumberRange(proguard.classfile.Clazz)>($r0);

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label1:
        return "";
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.obfuscate.MappingPrinter r0;

        r0 := @this: proguard.obfuscate.MappingPrinter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        java.io.PrintStream $r2;
        java.lang.StringBuffer $r5;
        proguard.obfuscate.MappingPrinter r0;
        java.lang.String $r3, $r4;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.obfuscate.MappingPrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r3 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r4 = staticinvoke <proguard.obfuscate.ClassObfuscator: java.lang.String newClassName(proguard.classfile.Clazz)>($r1);

        $r2 = r0.<proguard.obfuscate.MappingPrinter: java.io.PrintStream ps>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void fieldsAccept(proguard.classfile.visitor.MemberVisitor)>(r0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void methodsAccept(proguard.classfile.visitor.MemberVisitor)>(r0);

        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        java.io.PrintStream $r3;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.ProgramField $r2;
        java.lang.StringBuffer $r5;
        proguard.obfuscate.MappingPrinter r0;
        java.lang.String $r4, $r6, $r7;

        r0 := @this: proguard.obfuscate.MappingPrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r4 = staticinvoke <proguard.obfuscate.MemberObfuscator: java.lang.String newMemberName(proguard.classfile.Member)>($r2);

        if $r4 == null goto label1;

        $r3 = r0.<proguard.obfuscate.MappingPrinter: java.io.PrintStream ps>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r6 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r7 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r6 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullFieldDescription(int,java.lang.String,java.lang.String)>(0, $r6, $r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label1:
        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        java.io.PrintStream $r4;
        proguard.classfile.ProgramClass $r1;
        java.lang.StringBuffer $r5;
        proguard.classfile.ProgramMethod $r2;
        proguard.obfuscate.MappingPrinter r0;
        java.lang.String $r3, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: proguard.obfuscate.MappingPrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r3 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("<clinit>");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = staticinvoke <proguard.obfuscate.MemberObfuscator: java.lang.String newMemberName(proguard.classfile.Member)>($r2);

        if $r3 == null goto label2;

        $r4 = r0.<proguard.obfuscate.MappingPrinter: java.io.PrintStream ps>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r6 = staticinvoke <proguard.obfuscate.MappingPrinter: java.lang.String lineNumberRange(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember)>($r1, $r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r7 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r8 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r6 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullMethodDescription(java.lang.String,int,java.lang.String,java.lang.String)>($r6, 0, $r7, $r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label2:
        return;
    }
}
