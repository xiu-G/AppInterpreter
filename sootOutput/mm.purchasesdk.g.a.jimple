public class mm.purchasesdk.g.a extends mm.purchasesdk.g.e
{
    private static final java.lang.String a;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Lmm/purchasesdk/g/a;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <mm.purchasesdk.g.a: java.lang.String a> = $r0;

        return;
    }

    public void <init>()
    {
        mm.purchasesdk.g.a r0;

        r0 := @this: mm.purchasesdk.g.a;

        specialinvoke r0.<mm.purchasesdk.g.e: void <init>()>();

        return;
    }

    public java.lang.String a()
    {
        java.lang.Throwable $r5, $r6, $r7;
        java.io.StringWriter $r2, $r8;
        java.lang.RuntimeException $r9;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.Exception $r10;
        java.lang.Boolean $r3;
        java.lang.String $r4;
        mm.purchasesdk.g.a r0;

        r0 := @this: mm.purchasesdk.g.a;

        $r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        $r8 = new java.io.StringWriter;

        $r2 = $r8;

        specialinvoke $r8.<java.io.StringWriter: void <init>()>();

     label1:
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>($r2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("UTF-8", $r3);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "applyCopyrightDeclaration");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "version");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("1.0.0");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "version");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "appuid");

        $r4 = staticinvoke <mm.purchasesdk.j.c: java.lang.String d()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "appuid");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "programid");

        $r4 = staticinvoke <mm.purchasesdk.j.c: java.lang.String d()>();

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "programid");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "osid");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("9");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "osid");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "applyCopyrightDeclaration");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r4 = virtualinvoke $r2.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r4 = <mm.purchasesdk.g.a: java.lang.String a>;

        $r10 = (java.lang.Exception) $r5;

        staticinvoke <mm.purchasesdk.j.d: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r4, "", $r10);

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>()>();

        throw $r9;

     label4:
        $r6 := @caughtexception;

        $r4 = <mm.purchasesdk.g.a: java.lang.String a>;

        $r10 = (java.lang.Exception) $r6;

        staticinvoke <mm.purchasesdk.j.d: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r4, "", $r10);

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>()>();

        throw $r9;

     label5:
        $r7 := @caughtexception;

        $r4 = <mm.purchasesdk.g.a: java.lang.String a>;

        $r10 = (java.lang.Exception) $r7;

        staticinvoke <mm.purchasesdk.j.d: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r4, "", $r10);

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>()>();

        throw $r9;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
    }
}
