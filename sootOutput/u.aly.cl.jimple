public class u.aly.cl extends java.lang.Object implements java.io.Serializable
{
    private static java.util.Map d;
    public final java.lang.String a;
    public final byte b;
    public final u.aly.cm c;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <u.aly.cl: java.util.Map d> = $r0;

        return;
    }

    public void <init>(java.lang.String, byte, u.aly.cm)
    {
        byte $b0;
        u.aly.cm $r2;
        u.aly.cl r0;
        java.lang.String $r1;

        r0 := @this: u.aly.cl;

        $r1 := @parameter0: java.lang.String;

        $b0 := @parameter1: byte;

        $r2 := @parameter2: u.aly.cm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<u.aly.cl: java.lang.String a> = $r1;

        r0.<u.aly.cl: byte b> = $b0;

        r0.<u.aly.cl: u.aly.cm c> = $r2;

        return;
    }

    public static java.util.Map a(java.lang.Class)
    {
        java.lang.Throwable $r3, $r6;
        java.lang.IllegalAccessException $r10;
        java.lang.RuntimeException $r8;
        java.util.Map $r1;
        java.lang.InstantiationException $r9;
        java.lang.Class $r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r7;
        java.lang.String $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.Class;

        $r1 = <u.aly.cl: java.util.Map d>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r0);

        if $z0 != 0 goto label2;

     label1:
        virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        $r1 = <u.aly.cl: java.util.Map d>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r1 = (java.util.Map) $r2;

        return $r1;

     label3:
        $r3 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InstantiationException for TBase class: ");

        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", message: ");

        $r9 = (java.lang.InstantiationException) $r3;

        $r5 = virtualinvoke $r9.<java.lang.InstantiationException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label4:
        $r6 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalAccessException for TBase class: ");

        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", message: ");

        $r10 = (java.lang.IllegalAccessException) $r6;

        $r5 = virtualinvoke $r10.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r8;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public static void a(java.lang.Class, java.util.Map)
    {
        java.lang.Class $r0;
        java.util.Map $r1, $r2;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.util.Map;

        $r2 = <u.aly.cl: java.util.Map d>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

        return;
    }
}
