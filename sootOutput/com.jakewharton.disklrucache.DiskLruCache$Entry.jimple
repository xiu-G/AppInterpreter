final class com.jakewharton.disklrucache.DiskLruCache$Entry extends java.lang.Object
{
    private com.jakewharton.disklrucache.DiskLruCache$Editor currentEditor;
    private final java.lang.String key;
    private final long[] lengths;
    private boolean readable;
    private long sequenceNumber;
    final com.jakewharton.disklrucache.DiskLruCache this$0;

    private void <init>(com.jakewharton.disklrucache.DiskLruCache, java.lang.String)
    {
        com.jakewharton.disklrucache.DiskLruCache $r1;
        long[] $r3;
        com.jakewharton.disklrucache.DiskLruCache$Entry r0;
        int $i0;
        java.lang.String $r2;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter0: com.jakewharton.disklrucache.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: com.jakewharton.disklrucache.DiskLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: java.lang.String key> = $r2;

        $i0 = staticinvoke <com.jakewharton.disklrucache.DiskLruCache: int access$1800(com.jakewharton.disklrucache.DiskLruCache)>($r1);

        $r3 = newarray (long)[$i0];

        r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: long[] lengths> = $r3;

        return;
    }

    void <init>(com.jakewharton.disklrucache.DiskLruCache, java.lang.String, com.jakewharton.disklrucache.DiskLruCache$1)
    {
        com.jakewharton.disklrucache.DiskLruCache $r1;
        com.jakewharton.disklrucache.DiskLruCache$Entry r0;
        com.jakewharton.disklrucache.DiskLruCache$1 $r3;
        java.lang.String $r2;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter0: com.jakewharton.disklrucache.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.jakewharton.disklrucache.DiskLruCache$1;

        specialinvoke r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: void <init>(com.jakewharton.disklrucache.DiskLruCache,java.lang.String)>($r1, $r2);

        return;
    }

    static long[] access$1000(com.jakewharton.disklrucache.DiskLruCache$Entry)
    {
        long[] r1;
        com.jakewharton.disklrucache.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Entry;

        r1 = $r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: long[] lengths>;

        return r1;
    }

    static java.lang.String access$1100(com.jakewharton.disklrucache.DiskLruCache$Entry)
    {
        java.lang.String r1;
        com.jakewharton.disklrucache.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Entry;

        r1 = $r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: java.lang.String key>;

        return r1;
    }

    static long access$1200(com.jakewharton.disklrucache.DiskLruCache$Entry)
    {
        long l0;
        com.jakewharton.disklrucache.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Entry;

        l0 = $r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: long sequenceNumber>;

        return l0;
    }

    static long access$1202(com.jakewharton.disklrucache.DiskLruCache$Entry, long)
    {
        long $l0;
        com.jakewharton.disklrucache.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Entry;

        $l0 := @parameter1: long;

        $r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: long sequenceNumber> = $l0;

        return $l0;
    }

    static boolean access$600(com.jakewharton.disklrucache.DiskLruCache$Entry)
    {
        com.jakewharton.disklrucache.DiskLruCache$Entry $r0;
        boolean z0;

        $r0 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Entry;

        z0 = $r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: boolean readable>;

        return z0;
    }

    static boolean access$602(com.jakewharton.disklrucache.DiskLruCache$Entry, boolean)
    {
        com.jakewharton.disklrucache.DiskLruCache$Entry $r0;
        boolean $z0;

        $r0 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Entry;

        $z0 := @parameter1: boolean;

        $r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: boolean readable> = 1;

        return 1;
    }

    static com.jakewharton.disklrucache.DiskLruCache$Editor access$700(com.jakewharton.disklrucache.DiskLruCache$Entry)
    {
        com.jakewharton.disklrucache.DiskLruCache$Editor r1;
        com.jakewharton.disklrucache.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Entry;

        r1 = $r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: com.jakewharton.disklrucache.DiskLruCache$Editor currentEditor>;

        return r1;
    }

    static com.jakewharton.disklrucache.DiskLruCache$Editor access$702(com.jakewharton.disklrucache.DiskLruCache$Entry, com.jakewharton.disklrucache.DiskLruCache$Editor)
    {
        com.jakewharton.disklrucache.DiskLruCache$Editor $r1;
        com.jakewharton.disklrucache.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter1: com.jakewharton.disklrucache.DiskLruCache$Editor;

        $r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: com.jakewharton.disklrucache.DiskLruCache$Editor currentEditor> = $r1;

        return $r1;
    }

    static void access$800(com.jakewharton.disklrucache.DiskLruCache$Entry, java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] $r1;
        com.jakewharton.disklrucache.DiskLruCache$Entry $r0;

        $r0 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter1: java.lang.String[];

        specialinvoke $r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: void setLengths(java.lang.String[])>($r1);

        return;
    }

    private java.io.IOException invalidLengths(java.lang.String[]) throws java.io.IOException
    {
        com.jakewharton.disklrucache.DiskLruCache$Entry r0;
        java.lang.String[] $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String[];

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected journal line: ");

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    private void setLengths(java.lang.String[]) throws java.io.IOException
    {
        java.lang.Throwable r2;
        com.jakewharton.disklrucache.DiskLruCache $r3;
        com.jakewharton.disklrucache.DiskLruCache$Entry r0;
        java.lang.String[] $r1;
        java.io.IOException $r4;
        long $l2;
        long[] $r5;
        int $i0, $i1;
        java.lang.String $r6;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Entry;

        $r1 := @parameter0: java.lang.String[];

        $i0 = lengthof $r1;

        $r3 = r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: com.jakewharton.disklrucache.DiskLruCache this$0>;

        $i1 = staticinvoke <com.jakewharton.disklrucache.DiskLruCache: int access$1800(com.jakewharton.disklrucache.DiskLruCache)>($r3);

        if $i0 == $i1 goto label1;

        $r4 = specialinvoke r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>($r1);

        throw $r4;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label6;

        $r5 = r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: long[] lengths>;

        $r6 = $r1[$i0];

     label3:
        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

     label4:
        $r5[$i0] = $l2;

        $i0 = $i0 + 1;

        goto label2;

     label5:
        r2 := @caughtexception;

        $r4 = specialinvoke r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>($r1);

        throw $r4;

     label6:
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public java.io.File getCleanFile(int)
    {
        com.jakewharton.disklrucache.DiskLruCache $r2;
        com.jakewharton.disklrucache.DiskLruCache$Entry r0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.io.File $r1, $r3;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Entry;

        $i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: com.jakewharton.disklrucache.DiskLruCache this$0>;

        $r3 = staticinvoke <com.jakewharton.disklrucache.DiskLruCache: java.io.File access$1900(com.jakewharton.disklrucache.DiskLruCache)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: java.lang.String key>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5);

        return $r1;
    }

    public java.io.File getDirtyFile(int)
    {
        com.jakewharton.disklrucache.DiskLruCache $r2;
        com.jakewharton.disklrucache.DiskLruCache$Entry r0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.io.File $r1, $r3;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Entry;

        $i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: com.jakewharton.disklrucache.DiskLruCache this$0>;

        $r3 = staticinvoke <com.jakewharton.disklrucache.DiskLruCache: java.io.File access$1900(com.jakewharton.disklrucache.DiskLruCache)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: java.lang.String key>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r5);

        return $r1;
    }

    public java.lang.String getLengths() throws java.io.IOException
    {
        com.jakewharton.disklrucache.DiskLruCache$Entry r0;
        long l1;
        long[] r1;
        int i0, i2;
        java.lang.StringBuilder r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Entry;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        r1 = r0.<com.jakewharton.disklrucache.DiskLruCache$Entry: long[] lengths>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        l1 = r1[i2];

        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
