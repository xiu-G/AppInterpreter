public final class com.google.android.gms.internal.ads.bz1 extends java.lang.Object
{
    public static final int a;
    public static final java.lang.String b;
    public static final java.lang.String c;
    public static final java.lang.String d;
    public static final java.lang.String e;

    static void <clinit>()
    {
        char $c1;
        int $i0, $i2, $i3;
        java.lang.StringBuilder $r4, $r5;
        java.lang.String $r0, $r1, $r2, $r3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 25 goto label1;

        $r0 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i0 = (int) $c1;

        if $i0 != 79 goto label1;

        $i0 = 26;

        goto label2;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label2:
        <com.google.android.gms.internal.ads.bz1: int a> = $i0;

        $r0 = <android.os.Build: java.lang.String DEVICE>;

        <com.google.android.gms.internal.ads.bz1: java.lang.String b> = $r0;

        $r0 = <android.os.Build: java.lang.String MANUFACTURER>;

        <com.google.android.gms.internal.ads.bz1: java.lang.String c> = $r0;

        $r1 = <android.os.Build: java.lang.String MODEL>;

        <com.google.android.gms.internal.ads.bz1: java.lang.String d> = $r1;

        $r2 = <com.google.android.gms.internal.ads.bz1: java.lang.String b>;

        $r0 = <com.google.android.gms.internal.ads.bz1: java.lang.String c>;

        $i0 = <com.google.android.gms.internal.ads.bz1: int a>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = $i2 + 17;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = $i2 + $i3;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = $i2 + $i3;

        $r5 = new java.lang.StringBuilder;

        $r4 = $r5;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.google.android.gms.internal.ads.bz1: java.lang.String e> = $r0;

        staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d\\d\\d\\d)\\-(\\d\\d)\\-(\\d\\d)[Tt](\\d\\d):(\\d\\d):(\\d\\d)([\\.,](\\d+))?([Zz]|((\\+|\\-)(\\d?\\d):?(\\d\\d)))?");

        staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(-)?P(([0-9]*)Y)?(([0-9]*)M)?(([0-9]*)D)?(T(([0-9]*)H)?(([0-9]*)M)?(([0-9.]*)S)?)?$");

        staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("%([A-Fa-f0-9]{2})");

        return;
    }

    public static float a(float, float, float)
    {
        float $f0, $f1, $f2;

        $f1 := @parameter0: float;

        $f2 := @parameter1: float;

        $f0 := @parameter2: float;

        $f1 = staticinvoke <java.lang.Math: float min(float,float)>($f1, 8.0F);

        $f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.1F, $f1);

        return $f1;
    }

    public static int b(long[], long, boolean, boolean)
    {
        long $l0, $l2;
        long[] $r0;
        byte $b1;
        int $i3, $i4;
        boolean $z0, $z1;

        $r0 := @parameter0: long[];

        $l2 := @parameter1: long;

        $z1 := @parameter2: boolean;

        $z0 := @parameter3: boolean;

        $i3 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r0, $l2);

        $i4 = $i3;

        if $i3 >= 0 goto label1;

        $i4 = $i3 + 2;

        $i4 = neg $i4;

        goto label3;

     label1:
        $i4 = $i4 + -1;

        if $i4 < 0 goto label2;

        $l0 = $r0[$i4];

        $b1 = $l0 cmp $l2;

        if $b1 == 0 goto label1;

     label2:
        $i4 = $i4 + 1;

     label3:
        if $z0 == 0 goto label4;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

     label4:
        return $i4;
    }

    public static long c(long, long, long)
    {
        long $l0, $l1, $l2, $l4;
        byte $b3;
        int $i5;
        double $d0, $d1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $b3 = $l2 cmp $l1;

        $i5 = (int) $b3;

        if $i5 < 0 goto label1;

        $l4 = $l2 % $l1;

        $b3 = $l4 cmp 0L;

        if $b3 != 0 goto label1;

        $l1 = $l2 / $l1;

        $l0 = $l0 / $l1;

        return $l0;

     label1:
        $b3 = $l2 cmp $l1;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label2;

        $l4 = $l1 % $l2;

        $b3 = $l4 cmp 0L;

        if $b3 != 0 goto label2;

        $l1 = $l1 / $l2;

        $l0 = $l0 * $l1;

        return $l0;

     label2:
        $d0 = (double) $l1;

        $d1 = (double) $l2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        $d1 = (double) $l0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d1 * $d0;

        $l0 = (long) $d0;

        return $l0;
    }

    public static java.lang.String d(java.lang.Object[])
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r5;
        java.lang.Object $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        $r1 := @parameter0: java.lang.Object[];

        $r5 = new java.lang.StringBuilder;

        $r0 = $r5;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r2 = $r1[$i0];

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i1 = lengthof $r1;

        $i1 = $i1 + -1;

        if $i0 >= $i1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void e(com.google.android.gms.internal.ads.zx1)
    {
        java.lang.Throwable $r1;
        com.google.android.gms.internal.ads.zx1 $r0;

        $r0 := @parameter0: com.google.android.gms.internal.ads.zx1;

        if $r0 == null goto label4;

     label1:
        interfaceinvoke $r0.<com.google.android.gms.internal.ads.zx1: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void f(long[], long, long)
    {
        long $l0, $l1;
        long[] $r0;
        byte $b3;
        int $i2, $i4;
        double $d0, $d1;

        $r0 := @parameter0: long[];

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $i2 = 0;

        $b3 = $l1 cmp 1000000L;

        $i4 = (int) $b3;

        if $i4 < 0 goto label3;

        $l0 = $l1 % 1000000L;

        $b3 = $l0 cmp 0L;

        if $b3 != 0 goto label3;

        $l0 = $l1 / 1000000L;

     label1:
        $i4 = lengthof $r0;

        if $i2 >= $i4 goto label2;

        $l1 = $r0[$i2];

        $l1 = $l1 / $l0;

        $r0[$i2] = $l1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;

     label3:
        $b3 = $l1 cmp 1000000L;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label6;

        $l0 = 1000000L % $l1;

        $b3 = $l0 cmp 0L;

        if $b3 != 0 goto label6;

        $l0 = 1000000L / $l1;

     label4:
        $i4 = lengthof $r0;

        if $i2 >= $i4 goto label5;

        $l1 = $r0[$i2];

        $l1 = $l1 * $l0;

        $r0[$i2] = $l1;

        $i2 = $i2 + 1;

        goto label4;

     label5:
        return;

     label6:
        $d0 = (double) $l1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d0 = 1000000.0 / $d0;

     label7:
        $i4 = lengthof $r0;

        if $i2 >= $i4 goto label8;

        $l0 = $r0[$i2];

        $d1 = (double) $l0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d1 = $d1 * $d0;

        $l0 = (long) $d1;

        $r0[$i2] = $l0;

        $i2 = $i2 + 1;

        goto label7;

     label8:
        return;
    }

    public static boolean g(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        if $r1 != null goto label2;

        if $r0 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        return $z0;
    }

    public static int h(long[], long, boolean, boolean)
    {
        long $l1, $l4;
        long[] $r0;
        byte $b0;
        int $i2, $i3;
        boolean $z0, $z1;

        $r0 := @parameter0: long[];

        $l1 := @parameter1: long;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $i2 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r0, $l1);

        $i3 = $i2;

        if $i2 >= 0 goto label1;

        $i3 = $i2 ^ -1;

        goto label3;

     label1:
        $i3 = $i3 + 1;

        $i2 = lengthof $r0;

        if $i3 >= $i2 goto label2;

        $l4 = $r0[$i3];

        $b0 = $l4 cmp $l1;

        if $b0 == 0 goto label1;

     label2:
        if $z0 == 0 goto label3;

        $i3 = $i3 + -1;

     label3:
        if $z1 == 0 goto label4;

        $i2 = lengthof $r0;

        $i2 = $i2 + -1;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

     label4:
        return $i3;
    }

    public static java.util.concurrent.ExecutorService i(java.lang.String)
    {
        java.lang.String $r2;
        com.google.android.gms.internal.ads.ez1 $r0;
        java.util.concurrent.ExecutorService $r1;

        $r2 := @parameter0: java.lang.String;

        $r0 = new com.google.android.gms.internal.ads.ez1;

        specialinvoke $r0.<com.google.android.gms.internal.ads.ez1: void <init>(java.lang.String)>($r2);

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>($r0);

        return $r1;
    }

    public static java.lang.String j(java.lang.String)
    {
        java.lang.String $r1;
        java.util.Locale $r0;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r0 = new java.util.Locale;

        specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getLanguage()>();

        return $r1;
    }

    public static byte[] k(java.lang.String)
    {
        byte[] $r2;
        java.lang.String $r0;
        java.nio.charset.Charset $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        return $r2;
    }

    public static int l(java.lang.String)
    {
        int $i0, $i1, $i2, $i4;
        char $c3;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = 0;

        if $i0 > 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.android.gms.internal.ads.my1: void a(boolean)>($z0);

        $i2 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $i2 = $i2 << 8;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i4 = (int) $c3;

        $i2 = $i2 | $i4;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $i2;
    }

    public static int m(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 == 8 goto label4;

        if $i0 == 16 goto label3;

        if $i0 == 24 goto label2;

        if $i0 == 32 goto label1;

        return 0;

     label1:
        return 1073741824;

     label2:
        return -2147483648;

     label3:
        return 2;

     label4:
        return 3;
    }

    public static byte[] n(java.lang.String)
    {
        byte[] $r1;
        char $c3;
        byte $b5;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $i1 << 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

        $i4 = $i4 << 4;

        $i2 = $i2 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i2 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

        $i4 = $i4 + $i2;

        $b5 = (byte) $i4;

        $r1[$i1] = $b5;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static int o(int)
    {
        int $i0;
        java.lang.IllegalStateException $r0;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label4;

        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        if $i0 == 3 goto label5;

        if $i0 != 4 goto label1;

        return 131072;

     label1:
        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>()>();

        throw $r0;

     label2:
        return 13107200;

     label3:
        return 3538944;

     label4:
        return 16777216;

     label5:
        return 131072;
    }

    public static int p(int, int, int)
    {
        int $i0, $i1, $i2;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i1);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i2);

        return $i2;
    }

    public static int q(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = $i1 + $i0;

        $i1 = $i1 + -1;

        $i1 = $i1 / $i0;

        return $i1;
    }

    public static int r(int, int)
    {
        int $i0, $i1;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 == -2147483648 goto label4;

        if $i0 == 1073741824 goto label3;

        if $i0 == 2 goto label2;

        if $i0 != 3 goto label1;

        return $i1;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label2:
        $i0 = $i1 << 1;

        return $i0;

     label3:
        $i0 = $i1 << 2;

        return $i0;

     label4:
        $i0 = $i1 * 3;

        return $i0;
    }
}
