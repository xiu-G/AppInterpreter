public class org.ksoap2.SoapEnvelope extends java.lang.Object
{
    public static final java.lang.String ENC;
    public static final java.lang.String ENC2001;
    public static final java.lang.String ENV;
    public static final java.lang.String ENV2001;
    public static final int VER10;
    public static final int VER11;
    public static final int VER12;
    public static final java.lang.String XSD;
    public static final java.lang.String XSD1999;
    public static final java.lang.String XSI;
    public static final java.lang.String XSI1999;
    public java.lang.Object bodyIn;
    public java.lang.Object bodyOut;
    public java.lang.String enc;
    public java.lang.String encodingStyle;
    public java.lang.String env;
    public org.kxml2.kdom.Element[] headerIn;
    public org.kxml2.kdom.Element[] headerOut;
    public int version;
    public java.lang.String xsd;
    public java.lang.String xsi;

    public void <init>(int)
    {
        int $i0;
        org.ksoap2.SoapEnvelope r0;

        r0 := @this: org.ksoap2.SoapEnvelope;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.ksoap2.SoapEnvelope: int version> = 110;

        goto label2;

     label1:
        r0.<org.ksoap2.SoapEnvelope: java.lang.String enc> = "http://schemas.xmlsoap.org/soap/encoding/";

        r0.<org.ksoap2.SoapEnvelope: java.lang.String env> = "http://schemas.xmlsoap.org/soap/envelope/";

        return;

     label2:
        r0.<org.ksoap2.SoapEnvelope: java.lang.String xsi> = "http://www.w3.org/2001/XMLSchema-instance";

        r0.<org.ksoap2.SoapEnvelope: java.lang.String xsd> = "http://www.w3.org/2001/XMLSchema";

        goto label1;
    }

    public static boolean stringToBoolean(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public void parse(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.ksoap2.SoapEnvelope r0;
        int $i0;
        java.lang.String $r2, $r3;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;

        r0 := @this: org.ksoap2.SoapEnvelope;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, "Envelope");

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r2, "encodingStyle");

        r0.<org.ksoap2.SoapEnvelope: java.lang.String encodingStyle> = $r2;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 != 2 goto label1;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r3 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("Header");

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.ksoap2.SoapEnvelope: void parseHeader(org.xmlpull.v1.XmlPullParser)>($r1);

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r2, "Header");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

     label1:
        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, "Body");

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r2, "encodingStyle");

        r0.<org.ksoap2.SoapEnvelope: java.lang.String encodingStyle> = $r2;

        virtualinvoke r0.<org.ksoap2.SoapEnvelope: void parseBody(org.xmlpull.v1.XmlPullParser)>($r1);

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r2, "Body");

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r2, "Envelope");

        return;
    }

    public void parseBody(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.ksoap2.SoapFault r2;
        org.ksoap2.SoapEnvelope r0;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r3, $r4;
        org.kxml2.kdom.Node $r6;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean $z0;

        r0 := @this: org.ksoap2.SoapEnvelope;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 != 2 goto label1;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r4 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Fault");

        if $z0 == 0 goto label1;

        r2 = new org.ksoap2.SoapFault;

        specialinvoke r2.<org.ksoap2.SoapFault: void <init>()>();

        virtualinvoke r2.<org.ksoap2.SoapFault: void parse(org.xmlpull.v1.XmlPullParser)>($r1);

        r0.<org.ksoap2.SoapEnvelope: java.lang.Object bodyIn> = r2;

        return;

     label1:
        $r5 = r0.<org.ksoap2.SoapEnvelope: java.lang.Object bodyIn>;

        $z0 = $r5 instanceof org.kxml2.kdom.Node;

        if $z0 == 0 goto label3;

        $r5 = r0.<org.ksoap2.SoapEnvelope: java.lang.Object bodyIn>;

        $r6 = (org.kxml2.kdom.Node) $r5;

     label2:
        virtualinvoke $r6.<org.kxml2.kdom.Node: void parse(org.xmlpull.v1.XmlPullParser)>($r1);

        r0.<org.ksoap2.SoapEnvelope: java.lang.Object bodyIn> = $r6;

        return;

     label3:
        $r6 = new org.kxml2.kdom.Node;

        specialinvoke $r6.<org.kxml2.kdom.Node: void <init>()>();

        goto label2;
    }

    public void parseHeader(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.kxml2.kdom.Element $r3;
        org.ksoap2.SoapEnvelope r0;
        int i0, i1, i2;
        org.kxml2.kdom.Node r2;
        org.xmlpull.v1.XmlPullParser $r1;
        org.kxml2.kdom.Element[] $r4;

        r0 := @this: org.ksoap2.SoapEnvelope;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

        r2 = new org.kxml2.kdom.Node;

        specialinvoke r2.<org.kxml2.kdom.Node: void <init>()>();

        virtualinvoke r2.<org.kxml2.kdom.Node: void parse(org.xmlpull.v1.XmlPullParser)>($r1);

        i1 = 0;

        i2 = 0;

     label1:
        i0 = virtualinvoke r2.<org.kxml2.kdom.Node: int getChildCount()>();

        if i2 >= i0 goto label3;

        $r3 = virtualinvoke r2.<org.kxml2.kdom.Node: org.kxml2.kdom.Element getElement(int)>(i2);

        if $r3 == null goto label2;

        i1 = i1 + 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r4 = newarray (org.kxml2.kdom.Element)[i1];

        r0.<org.ksoap2.SoapEnvelope: org.kxml2.kdom.Element[] headerIn> = $r4;

        i1 = 0;

        i2 = 0;

     label4:
        i0 = virtualinvoke r2.<org.kxml2.kdom.Node: int getChildCount()>();

        if i2 >= i0 goto label6;

        $r3 = virtualinvoke r2.<org.kxml2.kdom.Node: org.kxml2.kdom.Element getElement(int)>(i2);

        if $r3 == null goto label5;

        $r4 = r0.<org.ksoap2.SoapEnvelope: org.kxml2.kdom.Element[] headerIn>;

        $r4[i1] = $r3;

        i1 = i1 + 1;

     label5:
        i2 = i2 + 1;

        goto label4;

     label6:
        return;
    }

    public void setOutputSoapObject(java.lang.Object)
    {
        java.lang.Object $r1;
        org.ksoap2.SoapEnvelope r0;

        r0 := @this: org.ksoap2.SoapEnvelope;

        $r1 := @parameter0: java.lang.Object;

        r0.<org.ksoap2.SoapEnvelope: java.lang.Object bodyOut> = $r1;

        return;
    }

    public void write(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        java.lang.String $r2;
        org.ksoap2.SoapEnvelope r0;
        org.xmlpull.v1.XmlSerializer $r1;

        r0 := @this: org.ksoap2.SoapEnvelope;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String xsi>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("i", $r2);

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String xsd>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("d", $r2);

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String enc>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("c", $r2);

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("v", $r2);

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r2, "Envelope");

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r2, "Header");

        virtualinvoke r0.<org.ksoap2.SoapEnvelope: void writeHeader(org.xmlpull.v1.XmlSerializer)>($r1);

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r2, "Header");

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r2, "Body");

        virtualinvoke r0.<org.ksoap2.SoapEnvelope: void writeBody(org.xmlpull.v1.XmlSerializer)>($r1);

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r2, "Body");

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r2, "Envelope");

        return;
    }

    public void writeBody(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        org.ksoap2.SoapEnvelope r0;
        java.lang.Object $r4;
        java.lang.String $r2, $r3;
        org.kxml2.kdom.Node $r5;
        org.xmlpull.v1.XmlSerializer $r1;

        r0 := @this: org.ksoap2.SoapEnvelope;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String encodingStyle>;

        if $r2 == null goto label1;

        $r3 = r0.<org.ksoap2.SoapEnvelope: java.lang.String env>;

        $r2 = r0.<org.ksoap2.SoapEnvelope: java.lang.String encodingStyle>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r3, "encodingStyle", $r2);

     label1:
        $r4 = r0.<org.ksoap2.SoapEnvelope: java.lang.Object bodyOut>;

        $r5 = (org.kxml2.kdom.Node) $r4;

        virtualinvoke $r5.<org.kxml2.kdom.Node: void write(org.xmlpull.v1.XmlSerializer)>($r1);

        return;
    }

    public void writeHeader(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        org.ksoap2.SoapEnvelope r0;
        int i0, $i1;
        org.xmlpull.v1.XmlSerializer $r1;
        org.kxml2.kdom.Element $r3;
        org.kxml2.kdom.Element[] $r2;

        r0 := @this: org.ksoap2.SoapEnvelope;

        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<org.ksoap2.SoapEnvelope: org.kxml2.kdom.Element[] headerOut>;

        if $r2 == null goto label2;

        i0 = 0;

     label1:
        $r2 = r0.<org.ksoap2.SoapEnvelope: org.kxml2.kdom.Element[] headerOut>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r2 = r0.<org.ksoap2.SoapEnvelope: org.kxml2.kdom.Element[] headerOut>;

        $r3 = $r2[i0];

        virtualinvoke $r3.<org.kxml2.kdom.Element: void write(org.xmlpull.v1.XmlSerializer)>($r1);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.ksoap2.SoapEnvelope: java.lang.String XSI1999> = "http://www.w3.org/1999/XMLSchema-instance";

        <org.ksoap2.SoapEnvelope: java.lang.String XSI> = "http://www.w3.org/2001/XMLSchema-instance";

        <org.ksoap2.SoapEnvelope: java.lang.String XSD1999> = "http://www.w3.org/1999/XMLSchema";

        <org.ksoap2.SoapEnvelope: java.lang.String XSD> = "http://www.w3.org/2001/XMLSchema";

        <org.ksoap2.SoapEnvelope: int VER12> = 120;

        <org.ksoap2.SoapEnvelope: int VER11> = 110;

        <org.ksoap2.SoapEnvelope: int VER10> = 100;

        <org.ksoap2.SoapEnvelope: java.lang.String ENV2001> = "http://www.w3.org/2001/12/soap-envelope";

        <org.ksoap2.SoapEnvelope: java.lang.String ENV> = "http://schemas.xmlsoap.org/soap/envelope/";

        <org.ksoap2.SoapEnvelope: java.lang.String ENC2001> = "http://www.w3.org/2001/12/soap-encoding";

        <org.ksoap2.SoapEnvelope: java.lang.String ENC> = "http://schemas.xmlsoap.org/soap/encoding/";

        return;
    }
}
