public class com.snowbee.colorize.Contact.ExtMatrixCursor extends android.database.AbstractCursor
{
    private final int columnCount;
    private final java.lang.String[] columnNames;
    private java.lang.Object[] data;
    private int rowCount;

    public void <init>(java.lang.String[])
    {
        java.lang.String[] $r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: void <init>(java.lang.String[],int)>($r1, 16);

        return;
    }

    public void <init>(java.lang.String[], int)
    {
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.String[] $r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $r1 := @parameter0: java.lang.String[];

        $i0 := @parameter1: int;

        specialinvoke r0.<android.database.AbstractCursor: void <init>()>();

        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount> = 0;

        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.String[] columnNames> = $r1;

        $i1 = lengthof $r1;

        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount> = $i1;

        goto label1;

     label1:
        $i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        $i0 = $i1 * $i0;

        $r2 = newarray (java.lang.Object)[$i0];

        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data> = $r2;

        return;
    }

    static java.lang.Object[] access$0(com.snowbee.colorize.Contact.ExtMatrixCursor)
    {
        com.snowbee.colorize.Contact.ExtMatrixCursor $r0;
        java.lang.Object[] r1;

        $r0 := @parameter0: com.snowbee.colorize.Contact.ExtMatrixCursor;

        r1 = $r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data>;

        return r1;
    }

    private void addRow(java.util.ArrayList, int)
    {
        java.lang.Object[] r2;
        java.lang.IllegalArgumentException $r3;
        java.util.ArrayList r1;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r4;
        java.lang.Object $r6;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        java.lang.String $r5;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        r1 := @parameter0: java.util.ArrayList;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $i2 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        if $i1 == $i2 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("columnNames.length = ");

        $i0 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", columnValues.size() = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $i2 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount>;

        $i2 = $i2 + 1;

        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount> = $i2;

        r2 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data>;

        $i2 = 0;

     label2:
        if $i2 < $i1 goto label3;

        return;

     label3:
        $i3 = $i0 + $i2;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        r2[$i3] = $r6;

        $i2 = $i2 + 1;

        goto label2;
    }

    private void ensureCapacity(int)
    {
        java.lang.Object[] r1, $r2;
        int $i0, $i1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        r1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data>;

        $i1 = lengthof r1;

        if $i0 <= $i1 goto label2;

        r1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data>;

        $r2 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data>;

        $i1 = lengthof $r2;

        $i1 = $i1 * 2;

        if $i1 >= $i0 goto label1;

        $i1 = $i0;

     label1:
        $r2 = newarray (java.lang.Object)[$i1];

        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data> = $r2;

        $r2 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data>;

        $i0 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r2, 0, $i0);

     label2:
        return;
    }

    private java.lang.Object get(int)
    {
        java.lang.Object[] $r4;
        android.database.CursorIndexOutOfBoundsException $r1;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2;
        java.lang.Object $r5;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        java.lang.String $r3;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new android.database.CursorIndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Requested column: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", # of columns: ");

        $i0 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int mPos>;

        if $i1 >= 0 goto label3;

        $r1 = new android.database.CursorIndexOutOfBoundsException;

        specialinvoke $r1.<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>("Before first row.");

        throw $r1;

     label3:
        $i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int mPos>;

        $i2 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount>;

        if $i1 < $i2 goto label4;

        $r1 = new android.database.CursorIndexOutOfBoundsException;

        specialinvoke $r1.<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>("After last row.");

        throw $r1;

     label4:
        $r4 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data>;

        $i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int mPos>;

        $i2 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        $i1 = $i1 * $i2;

        $i0 = $i1 + $i0;

        $r5 = $r4[$i0];

        return $r5;
    }

    public void addRow(java.lang.Iterable)
    {
        java.lang.Object[] r1;
        java.util.Iterator $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.Iterable r2;
        java.util.ArrayList r3;
        int i0, i1, i2;
        java.lang.Object $r6;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        boolean $z0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        r2 := @parameter0: java.lang.Iterable;

        i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount>;

        i0 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        i0 = i1 * i0;

        i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        i1 = i0 + i1;

        specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: void ensureCapacity(int)>(i1);

        $z0 = r2 instanceof java.util.ArrayList;

        if $z0 == 0 goto label1;

        r3 = (java.util.ArrayList) r2;

        specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: void addRow(java.util.ArrayList,int)>(r3, i0);

        return;

     label1:
        i2 = i0;

        r1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data>;

        $r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        if i2 == i1 goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("columnValues.size() < columnNames.length");

        throw $r5;

     label3:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if i2 != i1 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("columnValues.size() > columnNames.length");

        throw $r5;

     label4:
        r1[i2] = $r6;

        i2 = i2 + 1;

        goto label2;

     label5:
        i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount>;

        i1 = i1 + 1;

        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount> = i1;

        return;
    }

    public void addRow(java.lang.Object[])
    {
        java.lang.Object[] $r1, $r5;
        java.lang.IllegalArgumentException $r2;
        int i0, $i1;
        java.lang.StringBuilder $r3;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        java.lang.String $r4;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $r1 := @parameter0: java.lang.Object[];

        i0 = lengthof $r1;

        $i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        if i0 == $i1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("columnNames.length = ");

        i0 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", columnValues.length = ");

        i0 = lengthof $r1;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        i0 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount>;

        $i1 = i0 + 1;

        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount> = $i1;

        $i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        i0 = i0 * $i1;

        $i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        $i1 = $i1 + i0;

        specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: void ensureCapacity(int)>($i1);

        $r5 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data>;

        $i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r5, i0, $i1);

        return;
    }

    public void close()
    {
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        specialinvoke r0.<android.database.AbstractCursor: void close()>();

        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object[] data> = null;

        return;
    }

    public void fillWindow(int, android.database.CursorWindow)
    {
        java.lang.Throwable $r3, $r6;
        byte[] $r4;
        android.database.CursorWindow $r1;
        int $i0, i1, $i2, $i3;
        java.lang.Object $r2;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.database.CursorWindow;

        if $i0 < 0 goto label35;

        i1 = virtualinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int getCount()>();

        if $i0 <= i1 goto label01;

        return;

     label01:
        virtualinvoke $r1.<android.database.CursorWindow: void acquireReference()>();

     label02:
        i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int mPos>;

     label03:
        $i2 = $i0 - 1;

     label04:
        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int mPos> = $i2;

     label05:
        virtualinvoke $r1.<android.database.CursorWindow: void clear()>();

        virtualinvoke $r1.<android.database.CursorWindow: void setStartPosition(int)>($i0);

        $i0 = virtualinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int getColumnCount()>();

        virtualinvoke $r1.<android.database.CursorWindow: boolean setNumColumns(int)>($i0);

     label06:
        $z0 = virtualinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: boolean moveToNext()>();

     label07:
        if $z0 == 0 goto label10;

     label08:
        $z0 = virtualinvoke $r1.<android.database.CursorWindow: boolean allocRow()>();

     label09:
        if $z0 != 0 goto label12;

     label10:
        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int mPos> = i1;

     label11:
        virtualinvoke $r1.<android.database.CursorWindow: void releaseReference()>();

        return;

     label12:
        $i2 = 0;

     label13:
        if $i2 >= $i0 goto label06;

     label14:
        $r2 = specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object get(int)>($i2);

     label15:
        if $r2 != null goto label22;

     label16:
        $i3 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int mPos>;

     label17:
        $z0 = virtualinvoke $r1.<android.database.CursorWindow: boolean putNull(int,int)>($i3, $i2);

     label18:
        if $z0 != 0 goto label26;

     label19:
        virtualinvoke $r1.<android.database.CursorWindow: void freeLastRow()>();

     label20:
        goto label06;

     label21:
        $r3 := @caughtexception;

        virtualinvoke $r1.<android.database.CursorWindow: void releaseReference()>();

        return;

     label22:
        $z0 = $r2 instanceof byte[];

     label23:
        if $z0 == 0 goto label27;

     label24:
        $r4 = (byte[]) $r2;

        $i3 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int mPos>;

     label25:
        virtualinvoke $r1.<android.database.CursorWindow: boolean putBlob(byte[],int,int)>($r4, $i3, $i2);

     label26:
        $i2 = $i2 + 1;

        goto label13;

     label27:
        $r5 = virtualinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.String getString(int)>($i2);

     label28:
        if $r5 == null goto label26;

     label29:
        $i3 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int mPos>;

     label30:
        $z0 = virtualinvoke $r1.<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>($r5, $i3, $i2);

     label31:
        if $z0 != 0 goto label26;

     label32:
        virtualinvoke $r1.<android.database.CursorWindow: void freeLastRow()>();

     label33:
        goto label06;

     label34:
        $r6 := @caughtexception;

        virtualinvoke $r1.<android.database.CursorWindow: void releaseReference()>();

        throw $r6;

     label35:
        return;

        catch java.lang.IllegalStateException from label05 to label07 with label21;
        catch java.lang.IllegalStateException from label08 to label09 with label21;
        catch java.lang.Throwable from label02 to label03 with label34;
        catch java.lang.Throwable from label04 to label07 with label34;
        catch java.lang.Throwable from label08 to label09 with label34;
        catch java.lang.Throwable from label10 to label11 with label34;
        catch java.lang.IllegalStateException from label14 to label15 with label21;
        catch java.lang.IllegalStateException from label17 to label18 with label21;
        catch java.lang.IllegalStateException from label19 to label20 with label21;
        catch java.lang.Throwable from label14 to label15 with label34;
        catch java.lang.Throwable from label16 to label18 with label34;
        catch java.lang.Throwable from label19 to label20 with label34;
        catch java.lang.IllegalStateException from label25 to label26 with label21;
        catch java.lang.IllegalStateException from label27 to label28 with label21;
        catch java.lang.IllegalStateException from label30 to label31 with label21;
        catch java.lang.IllegalStateException from label32 to label33 with label21;
        catch java.lang.Throwable from label22 to label23 with label34;
        catch java.lang.Throwable from label24 to label26 with label34;
        catch java.lang.Throwable from label27 to label28 with label34;
        catch java.lang.Throwable from label29 to label31 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
    }

    public byte[] getBlob(int)
    {
        byte[] r2;
        int $i0;
        java.lang.Object $r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        boolean $z0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object get(int)>($i0);

        $z0 = $r1 instanceof byte[];

        if $z0 == 0 goto label1;

        r2 = (byte[]) $r1;

        return r2;

     label1:
        r2 = newarray (byte)[0];

        return r2;
    }

    public java.lang.String[] getColumnNames()
    {
        java.lang.String[] r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        r1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.String[] columnNames>;

        return r1;
    }

    public int getCount()
    {
        int i0;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        i0 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount>;

        return i0;
    }

    public double getDouble(int)
    {
        java.lang.Double $r3;
        int $i0;
        java.lang.Object $r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        java.lang.String r2;
        java.lang.Number r4;
        boolean $z0;
        double $d0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object get(int)>($i0);

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r2 = (java.lang.String) $r1;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r2);

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d0;

     label1:
        r4 = (java.lang.Number) $r1;

        $d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    public float getFloat(int)
    {
        java.lang.Float $r3;
        int $i0;
        float $f0;
        java.lang.Object $r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        java.lang.String r2;
        java.lang.Number r4;
        boolean $z0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object get(int)>($i0);

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r2 = (java.lang.String) $r1;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(r2);

        $f0 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        return $f0;

     label1:
        r4 = (java.lang.Number) $r1;

        $f0 = virtualinvoke r4.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    public int getInt(int)
    {
        int $i0;
        java.lang.Object $r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        java.lang.String r2;
        java.lang.Number r4;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object get(int)>($i0);

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r2 = (java.lang.String) $r1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r2);

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        r4 = (java.lang.Number) $r1;

        $i0 = virtualinvoke r4.<java.lang.Number: int intValue()>();

        return $i0;
    }

    public long getLong(int)
    {
        long $l1;
        java.lang.Long $r3;
        int $i0;
        java.lang.Object $r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        java.lang.String r2;
        java.lang.Number r4;
        boolean $z0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object get(int)>($i0);

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r2 = (java.lang.String) $r1;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r2);

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        return $l1;

     label1:
        r4 = (java.lang.Number) $r1;

        $l1 = virtualinvoke r4.<java.lang.Number: long longValue()>();

        return $l1;
    }

    public short getShort(int)
    {
        short $s1;
        java.lang.Short $r3;
        int $i0;
        java.lang.Object $r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        java.lang.String r2;
        java.lang.Number r4;
        boolean $z0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object get(int)>($i0);

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r2 = (java.lang.String) $r1;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(java.lang.String)>(r2);

        $s1 = virtualinvoke $r3.<java.lang.Short: short shortValue()>();

        return $s1;

     label1:
        r4 = (java.lang.Number) $r1;

        $s1 = virtualinvoke r4.<java.lang.Number: short shortValue()>();

        return $s1;
    }

    public java.lang.String getString(int)
    {
        int $i0;
        java.lang.Object $r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;
        java.lang.String $r2;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object get(int)>($i0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        return $r2;
    }

    public boolean isNull(int)
    {
        int $i0;
        java.lang.Object $r1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: java.lang.Object get(int)>($i0);

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public com.snowbee.colorize.Contact.ExtMatrixCursor$RowBuilder newRow()
    {
        com.snowbee.colorize.Contact.ExtMatrixCursor$RowBuilder $r1;
        int i0, i1;
        com.snowbee.colorize.Contact.ExtMatrixCursor r0;

        r0 := @this: com.snowbee.colorize.Contact.ExtMatrixCursor;

        i0 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount>;

        i0 = i0 + 1;

        r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount> = i0;

        i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int rowCount>;

        i0 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        i0 = i1 * i0;

        specialinvoke r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: void ensureCapacity(int)>(i0);

        i1 = r0.<com.snowbee.colorize.Contact.ExtMatrixCursor: int columnCount>;

        i1 = i0 - i1;

        $r1 = new com.snowbee.colorize.Contact.ExtMatrixCursor$RowBuilder;

        specialinvoke $r1.<com.snowbee.colorize.Contact.ExtMatrixCursor$RowBuilder: void <init>(com.snowbee.colorize.Contact.ExtMatrixCursor,int,int)>(r0, i1, i0);

        return $r1;
    }
}
