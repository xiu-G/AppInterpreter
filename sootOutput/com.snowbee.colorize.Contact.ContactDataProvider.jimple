public class com.snowbee.colorize.Contact.ContactDataProvider extends android.content.ContentProvider
{
    public static final java.lang.String AUTHORITY;
    public static final android.net.Uri CONTENT_URI;
    public static final android.net.Uri CONTENT_URI_DATA;
    public static final android.net.Uri CONTENT_URI_WIDGET;
    public static final java.lang.String[] PROJECTION_APPWIDGETS;
    private static final int URI_DATA;
    private static final android.content.UriMatcher URI_MATCHER;
    private static final int URI_WIDGET;
    private static android.content.Context mContext;
    private com.snowbee.core.Contact.ContactManager mContactManager;
    public android.content.Intent ipcIntent;

    static void <clinit>()
    {
        android.net.Uri $r0;
        java.lang.String[] $r3;
        android.net.Uri$Builder $r1;
        android.content.UriMatcher $r2, $r4;

        <com.snowbee.colorize.Contact.ContactDataProvider: int URI_WIDGET> = 1;

        <com.snowbee.colorize.Contact.ContactDataProvider: int URI_DATA> = 0;

        <com.snowbee.colorize.Contact.ContactDataProvider: java.lang.String AUTHORITY> = "com.snowbee.colorize.Contact.provider";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.snowbee.colorize.Contact.provider");

        <com.snowbee.colorize.Contact.ContactDataProvider: android.net.Uri CONTENT_URI> = $r0;

        $r0 = <com.snowbee.colorize.Contact.ContactDataProvider: android.net.Uri CONTENT_URI>;

        $r1 = virtualinvoke $r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r1 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>("data");

        $r0 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri build()>();

        <com.snowbee.colorize.Contact.ContactDataProvider: android.net.Uri CONTENT_URI_DATA> = $r0;

        $r0 = <com.snowbee.colorize.Contact.ContactDataProvider: android.net.Uri CONTENT_URI>;

        $r1 = virtualinvoke $r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r1 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>("widget_contact");

        $r0 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri build()>();

        <com.snowbee.colorize.Contact.ContactDataProvider: android.net.Uri CONTENT_URI_WIDGET> = $r0;

        $r4 = new android.content.UriMatcher;

        specialinvoke $r4.<android.content.UriMatcher: void <init>(int)>(-1);

        <com.snowbee.colorize.Contact.ContactDataProvider: android.content.UriMatcher URI_MATCHER> = $r4;

        $r3 = newarray (java.lang.String)[6];

        $r3[0] = "_id";

        $r3[1] = "display_name";

        $r3[2] = "lookup";

        $r3[3] = "starred";

        $r3[4] = "has_phone_number";

        $r3[5] = "photo_id";

        <com.snowbee.colorize.Contact.ContactDataProvider: java.lang.String[] PROJECTION_APPWIDGETS> = $r3;

        <com.snowbee.colorize.Contact.ContactDataProvider: android.content.Context mContext> = null;

        $r2 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.UriMatcher URI_MATCHER>;

        virtualinvoke $r2.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("com.snowbee.colorize.Contact.provider", "data", 0);

        $r2 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.UriMatcher URI_MATCHER>;

        virtualinvoke $r2.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("com.snowbee.colorize.Contact.provider", "data/#", 0);

        $r2 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.UriMatcher URI_MATCHER>;

        virtualinvoke $r2.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("com.snowbee.colorize.Contact.provider", "widget_contact", 1);

        $r2 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.UriMatcher URI_MATCHER>;

        virtualinvoke $r2.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("com.snowbee.colorize.Contact.provider", "widget_contact/#", 1);

        return;
    }

    public void <init>()
    {
        com.snowbee.colorize.Contact.ContactDataProvider r0;

        r0 := @this: com.snowbee.colorize.Contact.ContactDataProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        return;
    }

    public static void LoadingNewData(android.content.Context, java.lang.Integer)
    {
        android.content.Context $r0;
        int[] $r2;
        int $i0;
        java.lang.Integer $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.Integer;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        staticinvoke <com.snowbee.colorize.Contact.ContactWidget: void setLoading(android.content.Context,int,java.lang.String,boolean)>($r0, $i0, "com.snowbee.colorize.Contact.action.NOTIFY_LOADING", 1);

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        staticinvoke <com.snowbee.colorize.Contact.ContactDataProvider: void notifyDatabaseModification(android.content.Context,int)>($r0, $i0);

        return;

     label1:
        $r2 = staticinvoke <com.snowbee.core.Preferences: int[] getAllContactWidgetIds(android.content.Context)>($r0);

        staticinvoke <com.snowbee.colorize.Contact.ContactWidget: void setLoading(android.content.Context,int[],java.lang.String,boolean)>($r0, $r2, "com.snowbee.colorize.Contact.action.NOTIFY_LOADING", 1);

        staticinvoke <com.snowbee.colorize.Contact.ContactDataProvider: void notifyAllWidgetsModification(android.content.Context)>($r0);

        return;
    }

    public static void notifyAllWidgetsModification(android.content.Context)
    {
        android.content.Context $r0;
        int[] $r1;
        int i0, $i1, $i2;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.snowbee.core.Preferences: int[] getAllContactWidgetIds(android.content.Context)>($r0);

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label2;

        return;

     label2:
        i0 = $r1[$i2];

        staticinvoke <com.snowbee.colorize.Contact.ContactDataProvider: void notifyDatabaseModification(android.content.Context,int)>($r0, i0);

        $i2 = $i2 + 1;

        goto label1;
    }

    public static void notifyDatabaseModification(android.content.Context, int)
    {
        android.content.Context $r0;
        android.content.ContentResolver $r4;
        int $i0;
        android.net.Uri $r1;
        android.net.Uri$Builder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = <com.snowbee.colorize.Contact.ContactDataProvider: android.net.Uri CONTENT_URI_WIDGET>;

        $r2 = virtualinvoke $r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r2 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>($r3);

        $r1 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri build()>();

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r4.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>($r1, null);

        staticinvoke <com.snowbee.colorize.Contact.ContactWidget: void setLoading(android.content.Context,int,java.lang.String,boolean)>($r0, $i0, "com.snowbee.colorize.Contact.action.NOTIFY_LOADING", 0);

        return;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        com.snowbee.colorize.Contact.ContactDataProvider r0;
        android.net.Uri $r1;
        java.lang.String[] $r3;
        java.lang.String $r2;

        r0 := @this: com.snowbee.colorize.Contact.ContactDataProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        return 0;
    }

    public java.lang.String getType(android.net.Uri)
    {
        android.net.Uri $r1;
        com.snowbee.colorize.Contact.ContactDataProvider r0;

        r0 := @this: com.snowbee.colorize.Contact.ContactDataProvider;

        $r1 := @parameter0: android.net.Uri;

        return null;
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        android.net.Uri $r1;
        com.snowbee.colorize.Contact.ContactDataProvider r0;
        android.content.ContentValues $r2;

        r0 := @this: com.snowbee.colorize.Contact.ContactDataProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        return null;
    }

    public boolean onCreate()
    {
        com.snowbee.core.Contact.ContactAPIV1Factory $r5;
        android.content.Context $r1;
        com.snowbee.colorize.Contact.ContactDataProvider r0;
        com.snowbee.core.Contact.ContactAPIV2Factory $r4;
        com.snowbee.core.Contact.ContactAPIAbstractFactory r2;
        com.snowbee.core.Contact.ContactManager $r3;
        boolean $z0;

        r0 := @this: com.snowbee.colorize.Contact.ContactDataProvider;

        $r1 = virtualinvoke r0.<com.snowbee.colorize.Contact.ContactDataProvider: android.content.Context getContext()>();

        <com.snowbee.colorize.Contact.ContactDataProvider: android.content.Context mContext> = $r1;

        $r1 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.Context mContext>;

        $z0 = staticinvoke <com.snowbee.core.Preferences: boolean getBoolean(android.content.Context,java.lang.String)>($r1, "PREF_CONTACT_NEW_API");

        if $z0 == 0 goto label2;

        $r4 = new com.snowbee.core.Contact.ContactAPIV2Factory;

        r2 = $r4;

        $r1 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.Context mContext>;

        specialinvoke $r4.<com.snowbee.core.Contact.ContactAPIV2Factory: void <init>(android.content.Context)>($r1);

     label1:
        $r3 = staticinvoke <com.snowbee.core.Contact.ContactManager: com.snowbee.core.Contact.ContactManager getContactManager()>();

        r0.<com.snowbee.colorize.Contact.ContactDataProvider: com.snowbee.core.Contact.ContactManager mContactManager> = $r3;

        $r3 = r0.<com.snowbee.colorize.Contact.ContactDataProvider: com.snowbee.core.Contact.ContactManager mContactManager>;

        virtualinvoke $r3.<com.snowbee.core.Contact.ContactManager: void setFactory(com.snowbee.core.Contact.ContactAPIAbstractFactory)>(r2);

        return 1;

     label2:
        $r5 = new com.snowbee.core.Contact.ContactAPIV1Factory;

        r2 = $r5;

        $r1 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.Context mContext>;

        specialinvoke $r5.<com.snowbee.core.Contact.ContactAPIV1Factory: void <init>(android.content.Context)>($r1);

        goto label1;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        java.lang.IllegalStateException $r9;
        android.content.Context $r13;
        byte[] $r19;
        java.lang.Object[] $r17;
        android.net.Uri $r6;
        java.lang.String[] $r1, $r3;
        java.util.HashMap r4;
        long $l1;
        com.snowbee.core.Contact.ContactManager $r21;
        android.content.UriMatcher $r8;
        com.snowbee.colorize.Contact.ContactDataProvider r0;
        byte $b2;
        android.content.ContentResolver $r14;
        int $i0, $i3, i4, $i5, $i6;
        com.snowbee.colorize.Contact.ContactDataProvider$DataProviderColumns $r16;
        java.lang.String $r2, $r7;
        android.net.Uri$Builder $r20;
        boolean $z0;
        android.database.Cursor $r15;
        java.util.List $r11;
        com.snowbee.core.Contact.Contact r18;
        java.lang.StringBuilder $r10;
        java.lang.Object $r12;
        com.snowbee.colorize.Contact.ExtMatrixCursor r5;

        r0 := @this: com.snowbee.colorize.Contact.ContactDataProvider;

        $r6 := @parameter0: android.net.Uri;

        $r1 := @parameter1: java.lang.String[];

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String[];

        $r7 := @parameter4: java.lang.String;

        $r8 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.UriMatcher URI_MATCHER>;

        $i0 = virtualinvoke $r8.<android.content.UriMatcher: int match(android.net.Uri)>($r6);

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label02;
            default: goto label01;
        };

     label01:
        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unrecognized URI:");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r9;

     label02:
        r5 = new com.snowbee.colorize.Contact.ExtMatrixCursor;

        specialinvoke r5.<com.snowbee.colorize.Contact.ExtMatrixCursor: void <init>(java.lang.String[])>($r1);

        $r11 = virtualinvoke $r6.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke $r11.<java.util.List: int size()>();

        $i0 = $i0 - 1;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i0);

        $r2 = (java.lang.String) $r12;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $r2 = "in_visible_group = \'1\'";

        $r13 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.Context mContext>;

        $l1 = staticinvoke <com.snowbee.core.Preferences: long getGroupID(android.content.Context,int)>($r13, $i0);

        $b2 = $l1 cmp -2L;

        if $b2 != 0 goto label09;

        $r10 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("in_visible_group = \'1\'");

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND (STARRED = \'1\')");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r13 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.Context mContext>;

        $z0 = staticinvoke <com.snowbee.core.Preferences: boolean getHasPhoneNumber(android.content.Context)>($r13);

        if $z0 == 0 goto label04;

        $r10 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND (HAS_PHONE_NUMBER = \'1\')");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r13 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r15 = virtualinvoke $r14.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r1, $r2, null, "display_name COLLATE LOCALIZED ASC");

        $r16 = <com.snowbee.colorize.Contact.ContactDataProvider$DataProviderColumns: com.snowbee.colorize.Contact.ContactDataProvider$DataProviderColumns photo_id>;

        $r2 = virtualinvoke $r16.<com.snowbee.colorize.Contact.ContactDataProvider$DataProviderColumns: java.lang.String toString()>();

        $i0 = interfaceinvoke $r15.<android.database.Cursor: int getColumnIndex(java.lang.String)>($r2);

        $r16 = <com.snowbee.colorize.Contact.ContactDataProvider$DataProviderColumns: com.snowbee.colorize.Contact.ContactDataProvider$DataProviderColumns lookup>;

        $r2 = virtualinvoke $r16.<com.snowbee.colorize.Contact.ContactDataProvider$DataProviderColumns: java.lang.String toString()>();

        $i3 = interfaceinvoke $r15.<android.database.Cursor: int getColumnIndex(java.lang.String)>($r2);

        i4 = 0;

        if $r15 == null goto label15;

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        $z0 = interfaceinvoke $r15.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label08;

     label05:
        $i5 = lengthof $r1;

        $r17 = newarray (java.lang.Object)[$i5];

        $i5 = 0;

     label06:
        $i6 = lengthof $r1;

        if $i5 < $i6 goto label12;

        $i5 = interfaceinvoke $r15.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $l1 = interfaceinvoke $r15.<android.database.Cursor: long getLong(int)>($i5);

        r18 = new com.snowbee.core.Contact.Contact;

        specialinvoke r18.<com.snowbee.core.Contact.Contact: void <init>(java.lang.String)>("");

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l1);

        $z0 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label13;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l1);

        $r12 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r18 = (com.snowbee.core.Contact.Contact) $r12;

     label07:
        $r19 = virtualinvoke r18.<com.snowbee.core.Contact.Contact: byte[] getAvatarData()>();

        $r17[$i0] = $r19;

        $r6 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_LOOKUP_URI>;

        $r20 = virtualinvoke $r6.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $i5 = interfaceinvoke $r15.<android.database.Cursor: int getColumnIndex(java.lang.String)>("lookup");

        $r2 = interfaceinvoke $r15.<android.database.Cursor: java.lang.String getString(int)>($i5);

        $r20 = virtualinvoke $r20.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r2);

        $i5 = interfaceinvoke $r15.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $r2 = interfaceinvoke $r15.<android.database.Cursor: java.lang.String getString(int)>($i5);

        $r20 = virtualinvoke $r20.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r2);

        $r6 = virtualinvoke $r20.<android.net.Uri$Builder: android.net.Uri build()>();

        $r2 = virtualinvoke $r6.<android.net.Uri: java.lang.String toString()>();

        $r17[$i3] = $r2;

        virtualinvoke r5.<com.snowbee.colorize.Contact.ExtMatrixCursor: void addRow(java.lang.Object[])>($r17);

        i4 = i4 + 1;

        if i4 < 400 goto label14;

     label08:
        interfaceinvoke $r15.<android.database.Cursor: void close()>();

        return r5;

     label09:
        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label03;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("data1=");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mimetype");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\'");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vnd.android.cursor.item/group_membership");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = <com.snowbee.colorize.Contact.ContactDataProvider: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = <android.provider.ContactsContract$Data: android.net.Uri CONTENT_URI>;

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "contact_id";

        $r3[1] = "display_name";

        $r15 = virtualinvoke $r14.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r3, $r2, null, "display_name COLLATE LOCALIZED ASC");

        $r10 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("in_visible_group = \'1\'");

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND _id IN (");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<android.database.Cursor: boolean moveToFirst()>();

     label10:
        $z0 = interfaceinvoke $r15.<android.database.Cursor: boolean isAfterLast()>();

        if $z0 == 0 goto label11;

        $r10 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-1)");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<android.database.Cursor: void close()>();

        goto label03;

     label11:
        $r10 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $i0 = interfaceinvoke $r15.<android.database.Cursor: int getColumnIndex(java.lang.String)>("contact_id");

        $r2 = interfaceinvoke $r15.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<android.database.Cursor: boolean moveToNext()>();

        goto label10;

     label12:
        $r2 = interfaceinvoke $r15.<android.database.Cursor: java.lang.String getString(int)>($i5);

        $r17[$i5] = $r2;

        $i5 = $i5 + 1;

        goto label06;

     label13:
        $r21 = r0.<com.snowbee.colorize.Contact.ContactDataProvider: com.snowbee.core.Contact.ContactManager mContactManager>;

        $r19 = virtualinvoke $r21.<com.snowbee.core.Contact.ContactManager: byte[] loadAvatarData(long)>($l1);

        virtualinvoke r18.<com.snowbee.core.Contact.Contact: void setAvatarData(byte[])>($r19);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l1);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r18);

        goto label07;

     label14:
        $z0 = interfaceinvoke $r15.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label05;

        goto label08;

     label15:
        return r5;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        com.snowbee.colorize.Contact.ContactDataProvider r0;
        android.net.Uri $r1;
        java.lang.String[] $r4;
        android.content.ContentValues $r2;
        java.lang.String $r3;

        r0 := @this: com.snowbee.colorize.Contact.ContactDataProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        return 0;
    }
}
