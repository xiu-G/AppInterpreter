public class cn.trinea.android.common.util.ParcelUtils extends java.lang.Object
{

    public void <init>()
    {
        cn.trinea.android.common.util.ParcelUtils r0;

        r0 := @this: cn.trinea.android.common.util.ParcelUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean readBoolean(android.os.Parcel)
    {
        int $i0;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.util.Map readHashMap(android.os.Parcel, java.lang.ClassLoader)
    {
        android.os.Parcelable $r3, $r4;
        java.util.HashMap $r2, $r5;
        android.os.Parcel $r0;
        int $i0, $i1;
        java.lang.ClassLoader $r1;

        $r0 := @parameter0: android.os.Parcel;

        $r1 := @parameter1: java.lang.ClassLoader;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = -1;

        if $i0 == $i1 goto label3;

        $r5 = new java.util.HashMap;

        $r2 = $r5;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r3 = virtualinvoke $r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r1);

        $r4 = virtualinvoke $r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return null;

     label4:
        return $r2;
    }

    public static java.util.Map readHashMapStringAndString(android.os.Parcel)
    {
        int $i0, $i1;
        java.util.HashMap $r1, $r4;
        java.lang.String $r2, $r3;
        android.os.Parcel $r0;

        $r0 := @parameter0: android.os.Parcel;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = -1;

        if $i0 == $i1 goto label3;

        $r4 = new java.util.HashMap;

        $r1 = $r4;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r2 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        $r3 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return null;

     label4:
        return $r1;
    }

    public static java.util.Map readHashMapStringKey(android.os.Parcel, java.lang.ClassLoader)
    {
        android.os.Parcelable $r4;
        java.util.HashMap $r2, $r5;
        android.os.Parcel $r0;
        int $i0, $i1;
        java.lang.ClassLoader $r1;
        java.lang.String $r3;

        $r0 := @parameter0: android.os.Parcel;

        $r1 := @parameter1: java.lang.ClassLoader;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        $i1 = -1;

        if $i0 == $i1 goto label3;

        $r5 = new java.util.HashMap;

        $r2 = $r5;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r3 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        $r4 = virtualinvoke $r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return null;

     label4:
        return $r2;
    }

    public static void writeBoolean(boolean, android.os.Parcel)
    {
        byte $b0;
        android.os.Parcel $r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: android.os.Parcel;

        if $z0 == 0 goto label2;

        $b0 = 1;

     label1:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>($b0);

        return;

     label2:
        $b0 = 0;

        goto label1;
    }

    public static void writeHashMap(java.util.Map, android.os.Parcel, int)
    {
        java.util.Map$Entry $r5;
        android.os.Parcelable $r6;
        java.util.Iterator $r3;
        java.util.Set $r2;
        android.os.Parcel $r1;
        java.util.Map $r0;
        int $i0, $i1;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: android.os.Parcel;

        $i0 := @parameter2: int;

        if $r0 == null goto label3;

        $i1 = interfaceinvoke $r0.<java.util.Map: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (android.os.Parcelable) $r4;

        virtualinvoke $r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, $i0);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (android.os.Parcelable) $r4;

        virtualinvoke $r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, $i0);

        goto label1;

     label3:
        $i0 = -1;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }

    public static void writeHashMapStringAndString(java.util.Map, android.os.Parcel, int)
    {
        java.util.Map$Entry $r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        android.os.Parcel $r1;
        java.util.Map $r0;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r6;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: android.os.Parcel;

        $i0 := @parameter2: int;

        if $r0 == null goto label3;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.String) $r4;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        goto label1;

     label3:
        $i0 = -1;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }

    public static void writeHashMapStringKey(java.util.Map, android.os.Parcel, int)
    {
        java.util.Map$Entry $r5;
        android.os.Parcelable $r7;
        java.util.Iterator $r3;
        java.util.Set $r2;
        android.os.Parcel $r1;
        java.util.Map $r0;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String $r6;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: android.os.Parcel;

        $i0 := @parameter2: int;

        if $r0 == null goto label3;

        $i1 = interfaceinvoke $r0.<java.util.Map: int size()>();

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        virtualinvoke $r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (android.os.Parcelable) $r4;

        virtualinvoke $r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r7, $i0);

        goto label1;

     label3:
        $i0 = -1;

        virtualinvoke $r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }
}
