class proguard.io.ManifestRewriter$SplitLineWriter extends java.io.FilterWriter
{
    private int counter;

    public void <init>(java.io.Writer)
    {
        java.io.Writer $r1;
        proguard.io.ManifestRewriter$SplitLineWriter r0;

        r0 := @this: proguard.io.ManifestRewriter$SplitLineWriter;

        $r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.io.FilterWriter: void <init>(java.io.Writer)>($r1);

        r0.<proguard.io.ManifestRewriter$SplitLineWriter: int counter> = 0;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        int $i0, $i1;
        proguard.io.ManifestRewriter$SplitLineWriter r0;

        r0 := @this: proguard.io.ManifestRewriter$SplitLineWriter;

        $i0 := @parameter0: int;

        if $i0 != 10 goto label2;

        r0.<proguard.io.ManifestRewriter$SplitLineWriter: int counter> = 0;

     label1:
        specialinvoke r0.<java.io.FilterWriter: void write(int)>($i0);

        return;

     label2:
        $i1 = r0.<proguard.io.ManifestRewriter$SplitLineWriter: int counter>;

        if $i1 != 70 goto label3;

        specialinvoke r0.<java.io.FilterWriter: void write(int)>(10);

        specialinvoke r0.<java.io.FilterWriter: void write(int)>(32);

        r0.<proguard.io.ManifestRewriter$SplitLineWriter: int counter> = 2;

        goto label1;

     label3:
        $i1 = r0.<proguard.io.ManifestRewriter$SplitLineWriter: int counter>;

        $i1 = $i1 + 1;

        r0.<proguard.io.ManifestRewriter$SplitLineWriter: int counter> = $i1;

        goto label1;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        proguard.io.ManifestRewriter$SplitLineWriter r0;
        int $i0, $i1;
        char[] $r2;
        java.lang.String $r1;

        r0 := @this: proguard.io.ManifestRewriter$SplitLineWriter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r0.<proguard.io.ManifestRewriter$SplitLineWriter: void write(char[],int,int)>($r2, $i0, $i1);

        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        proguard.io.ManifestRewriter$SplitLineWriter r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1;
        char $c4;

        r0 := @this: proguard.io.ManifestRewriter$SplitLineWriter;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i3 = 0 + $i2;

        $c4 = $r1[$i3];

        $i3 = (int) $c4;

        virtualinvoke r0.<proguard.io.ManifestRewriter$SplitLineWriter: void write(int)>($i3);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }
}
