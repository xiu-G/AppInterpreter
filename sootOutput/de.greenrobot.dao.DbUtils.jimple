public class de.greenrobot.dao.DbUtils extends java.lang.Object
{

    public void <init>()
    {
        de.greenrobot.dao.DbUtils r0;

        r0 := @this: de.greenrobot.dao.DbUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int copyAllBytes(java.io.InputStream, java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        byte[] $r2;
        int $i0, $i1, $i2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = newarray (byte)[4096];

        $i1 = 0;

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

        $i2 = -1;

        if $i0 == $i2 goto label2;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        $i1 = $i1 + $i0;

        goto label1;

     label2:
        return $i1;
    }

    public static int executeSqlScript(android.content.Context, android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.content.Context $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter2: java.lang.String;

        $i0 = staticinvoke <de.greenrobot.dao.DbUtils: int executeSqlScript(android.content.Context,android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)>($r0, $r1, $r2, 1);

        return $i0;
    }

    public static int executeSqlScript(android.content.Context, android.database.sqlite.SQLiteDatabase, java.lang.String, boolean)
    {
        android.content.Context $r0;
        byte[] $r3;
        java.lang.String[] $r5;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r3 = staticinvoke <de.greenrobot.dao.DbUtils: byte[] readAsset(android.content.Context,java.lang.String)>($r0, $r2);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "UTF-8");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(";(\\s)*[\n\r]");

        if $z0 == 0 goto label2;

        $i0 = staticinvoke <de.greenrobot.dao.DbUtils: int executeSqlStatementsInTx(android.database.sqlite.SQLiteDatabase,java.lang.String[])>($r1, $r5);

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Executed ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" statements from SQL script \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <de.greenrobot.dao.DaoLog: int i(java.lang.String)>($r2);

        return $i0;

     label2:
        $i0 = staticinvoke <de.greenrobot.dao.DbUtils: int executeSqlStatements(android.database.sqlite.SQLiteDatabase,java.lang.String[])>($r1, $r5);

        goto label1;
    }

    public static int executeSqlStatements(android.database.sqlite.SQLiteDatabase, java.lang.String[])
    {
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r1 := @parameter1: java.lang.String[];

        $i1 = 0;

        $i0 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $r2 = $r1[$i2];

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i3 <= 0 goto label2;

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2);

        $i1 = $i1 + 1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return $i1;
    }

    public static int executeSqlStatementsInTx(android.database.sqlite.SQLiteDatabase, java.lang.String[])
    {
        java.lang.Throwable $r2;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.String[] $r1;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r1 := @parameter1: java.lang.String[];

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label1:
        $i0 = staticinvoke <de.greenrobot.dao.DbUtils: int executeSqlStatements(android.database.sqlite.SQLiteDatabase,java.lang.String[])>($r0, $r1);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label2:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return $i0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void logTableDump(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        java.lang.Throwable $r3;
        android.database.sqlite.SQLiteDatabase $r0;
        java.lang.String $r1;
        android.database.Cursor $r2;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r1, null, null, null, null, null, null);

     label1:
        $r1 = staticinvoke <android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>($r2);

        staticinvoke <de.greenrobot.dao.DaoLog: int d(java.lang.String)>($r1);

     label2:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return;

     label3:
        $r3 := @caughtexception;

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static byte[] readAllBytes(java.io.InputStream)
    {
        byte[] $r1;
        java.io.ByteArrayOutputStream $r2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <de.greenrobot.dao.DbUtils: int copyAllBytes(java.io.InputStream,java.io.OutputStream)>($r0, $r2);

        $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r1;
    }

    public static byte[] readAsset(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r6;
        android.content.Context $r0;
        byte[] $r5;
        android.content.res.AssetManager $r3;
        java.lang.String $r1;
        android.content.res.Resources $r2;
        java.io.InputStream $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        $r4 = virtualinvoke $r3.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label1:
        $r5 = staticinvoke <de.greenrobot.dao.DbUtils: byte[] readAllBytes(java.io.InputStream)>($r4);

     label2:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

        return $r5;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void vacuum(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("VACUUM");

        return;
    }
}
