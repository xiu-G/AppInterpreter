public class com.umeng.common.net.r extends java.lang.Object
{
    private static final java.lang.String a;
    private java.util.Map b;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Lcom/umeng/common/net/r;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <com.umeng.common.net.r: java.lang.String a> = $r0;

        return;
    }

    public void <init>()
    {
        com.umeng.common.net.r r0;

        r0 := @this: com.umeng.common.net.r;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String a(java.io.InputStream)
    {
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9;
        java.io.InputStreamReader $r10;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r2, $r4, $r12;
        java.io.BufferedReader $r1, $r11;
        java.lang.String $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r11 = new java.io.BufferedReader;

        $r1 = $r11;

        $r10 = new java.io.InputStreamReader;

        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r10, 8192);

        $r4 = new java.lang.StringBuilder;

        $r2 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r3 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label02:
        if $r3 == null goto label11;

     label03:
        $r12 = new java.lang.StringBuilder;

     label04:
        $r4 = $r12;

     label05:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label06:
        goto label01;

     label07:
        $r5 := @caughtexception;

     label08:
        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r13 = (java.lang.Exception) $r5;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "Caught IOException in convertStreamToString()", $r13);

     label09:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label10:
        return null;

     label11:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label12:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label13:
        $r6 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r13 = (java.lang.Exception) $r6;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "Caught IOException in convertStreamToString()", $r13);

        return null;

     label14:
        $r7 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r13 = (java.lang.Exception) $r7;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "Caught IOException in convertStreamToString()", $r13);

        return null;

     label15:
        $r8 := @caughtexception;

     label16:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label17:
        throw $r8;

     label18:
        $r9 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r13 = (java.lang.Exception) $r9;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "Caught IOException in convertStreamToString()", $r13);

        return null;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label16 to label17 with label18;
    }

    private org.json.JSONObject a(java.lang.String)
    {
        java.lang.Throwable $r11;
        org.apache.http.impl.client.DefaultHttpClient $r13, $r23;
        java.util.zip.GZIPInputStream $r24;
        java.util.zip.InflaterInputStream $r25;
        java.util.Random $r20;
        org.apache.http.StatusLine $r15;
        org.apache.http.Header $r18;
        org.json.JSONObject $r26;
        java.util.Map $r7;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r4, $r5;
        boolean $z0;
        java.util.Iterator $r9;
        org.apache.http.HttpEntity $r16;
        java.util.Set $r8;
        java.lang.Exception $r19;
        com.umeng.common.net.r r0;
        org.apache.http.client.methods.HttpGet $r6, $r22;
        org.apache.http.params.HttpParams $r12;
        org.apache.http.HttpResponse $r14;
        java.lang.StringBuilder $r3, $r21;
        java.lang.Object $r10;
        java.io.InputStream $r17;

        r0 := @this: com.umeng.common.net.r;

        $r1 := @parameter0: java.lang.String;

        $r20 = new java.util.Random;

        specialinvoke $r20.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r20.<java.util.Random: int nextInt(int)>(1000);

     label01:
        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label02:
        if $i1 > 1 goto label05;

        $r2 = <com.umeng.common.net.r: java.lang.String a>;

        $r21 = new java.lang.StringBuilder;

        $r3 = $r21;

     label03:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tInvalid baseUrl.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String)>($r2, $r4);

     label04:
        return null;

     label05:
        $r4 = <com.umeng.common.net.r: java.lang.String a>;

        $r21 = new java.lang.StringBuilder;

        $r3 = $r21;

     label06:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tget: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void a(java.lang.String,java.lang.String)>($r4, $r5);

     label07:
        $r22 = new org.apache.http.client.methods.HttpGet;

        $r6 = $r22;

     label08:
        specialinvoke $r22.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

     label09:
        $r7 = r0.<com.umeng.common.net.r: java.util.Map b>;

     label10:
        if $r7 == null goto label25;

     label11:
        $r7 = r0.<com.umeng.common.net.r: java.util.Map b>;

     label12:
        $i1 = interfaceinvoke $r7.<java.util.Map: int size()>();

     label13:
        if $i1 <= 0 goto label25;

     label14:
        $r7 = r0.<com.umeng.common.net.r: java.util.Map b>;

     label15:
        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label17:
        if $z0 == 0 goto label25;

     label18:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label19:
        $r4 = (java.lang.String) $r10;

        $r7 = r0.<com.umeng.common.net.r: java.util.Map b>;

     label20:
        $r10 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

     label21:
        $r5 = (java.lang.String) $r10;

     label22:
        virtualinvoke $r6.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>($r4, $r5);

     label23:
        goto label16;

     label24:
        $r11 := @caughtexception;

        $r2 = <com.umeng.common.net.r: java.lang.String a>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tClientProtocolException,Failed to send message.");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = (java.lang.Exception) $r11;

        staticinvoke <com.umeng.common.Log: void c(java.lang.String,java.lang.String,java.lang.Exception)>($r2, $r1, $r19);

        return null;

     label25:
        $r12 = specialinvoke r0.<com.umeng.common.net.r: org.apache.http.params.HttpParams b()>();

     label26:
        $r23 = new org.apache.http.impl.client.DefaultHttpClient;

        $r13 = $r23;

     label27:
        specialinvoke $r23.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r12);

        $r14 = interfaceinvoke $r13.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r6);

        $r15 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r15.<org.apache.http.StatusLine: int getStatusCode()>();

     label28:
        if $i1 != 200 goto label54;

     label29:
        $r16 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label30:
        if $r16 == null goto label58;

     label31:
        $r17 = interfaceinvoke $r16.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r18 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Encoding");

     label32:
        if $r18 == null goto label59;

     label33:
        $r4 = interfaceinvoke $r18.<org.apache.http.Header: java.lang.String getValue()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("gzip");

     label34:
        if $z0 == 0 goto label43;

        $r4 = <com.umeng.common.net.r: java.lang.String a>;

        $r21 = new java.lang.StringBuilder;

        $r3 = $r21;

     label35:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Use GZIPInputStream get data....");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void a(java.lang.String,java.lang.String)>($r4, $r5);

     label36:
        $r24 = new java.util.zip.GZIPInputStream;

        $r10 = $r24;

     label37:
        specialinvoke $r24.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r17);

     label38:
        $r17 = (java.io.InputStream) $r10;

     label39:
        $r4 = staticinvoke <com.umeng.common.net.r: java.lang.String a(java.io.InputStream)>($r17);

     label40:
        $r5 = <com.umeng.common.net.r: java.lang.String a>;

        $r21 = new java.lang.StringBuilder;

        $r3 = $r21;

     label41:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tresponse: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void a(java.lang.String,java.lang.String)>($r5, $r2);

     label42:
        if $r4 != null goto label51;

        return null;

     label43:
        if $r18 == null goto label59;

     label44:
        $r4 = interfaceinvoke $r18.<org.apache.http.Header: java.lang.String getValue()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("deflate");

     label45:
        if $z0 == 0 goto label59;

        $r4 = <com.umeng.common.net.r: java.lang.String a>;

        $r21 = new java.lang.StringBuilder;

        $r3 = $r21;

     label46:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Use InflaterInputStream get data....");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void a(java.lang.String,java.lang.String)>($r4, $r5);

     label47:
        $r25 = new java.util.zip.InflaterInputStream;

        $r10 = $r25;

     label48:
        specialinvoke $r25.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r17);

     label49:
        goto label38;

     label50:
        $r19 := @caughtexception;

        $r2 = <com.umeng.common.net.r: java.lang.String a>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tIOException,Failed to send message.");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void c(java.lang.String,java.lang.String,java.lang.Exception)>($r2, $r1, $r19);

        return null;

     label51:
        $r26 = new org.json.JSONObject;

     label52:
        specialinvoke $r26.<org.json.JSONObject: void <init>(java.lang.String)>($r4);

     label53:
        return $r26;

     label54:
        $r2 = <com.umeng.common.net.r: java.lang.String a>;

        $r21 = new java.lang.StringBuilder;

        $r3 = $r21;

     label55:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tFailed to send message. StatusCode = ");

        $r15 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r15.<org.apache.http.StatusLine: int getStatusCode()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

     label56:
        $r4 = <com.umeng.common.util.g: java.lang.String a>;

     label57:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void c(java.lang.String,java.lang.String)>($r2, $r4);

     label58:
        return null;

     label59:
        $r10 = $r17;

        goto label38;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label24;
        catch org.apache.http.client.ClientProtocolException from label03 to label04 with label24;
        catch org.apache.http.client.ClientProtocolException from label06 to label07 with label24;
        catch org.apache.http.client.ClientProtocolException from label08 to label09 with label24;
        catch org.apache.http.client.ClientProtocolException from label12 to label13 with label24;
        catch org.apache.http.client.ClientProtocolException from label15 to label17 with label24;
        catch org.apache.http.client.ClientProtocolException from label18 to label19 with label24;
        catch org.apache.http.client.ClientProtocolException from label20 to label21 with label24;
        catch org.apache.http.client.ClientProtocolException from label22 to label23 with label24;
        catch java.lang.Exception from label01 to label02 with label50;
        catch java.lang.Exception from label03 to label04 with label50;
        catch java.lang.Exception from label06 to label07 with label50;
        catch java.lang.Exception from label08 to label10 with label50;
        catch java.lang.Exception from label11 to label13 with label50;
        catch java.lang.Exception from label14 to label17 with label50;
        catch java.lang.Exception from label18 to label23 with label50;
        catch org.apache.http.client.ClientProtocolException from label25 to label26 with label24;
        catch org.apache.http.client.ClientProtocolException from label27 to label28 with label24;
        catch org.apache.http.client.ClientProtocolException from label29 to label30 with label24;
        catch org.apache.http.client.ClientProtocolException from label31 to label32 with label24;
        catch org.apache.http.client.ClientProtocolException from label33 to label34 with label24;
        catch org.apache.http.client.ClientProtocolException from label35 to label36 with label24;
        catch org.apache.http.client.ClientProtocolException from label37 to label38 with label24;
        catch org.apache.http.client.ClientProtocolException from label39 to label40 with label24;
        catch org.apache.http.client.ClientProtocolException from label41 to label42 with label24;
        catch org.apache.http.client.ClientProtocolException from label44 to label45 with label24;
        catch org.apache.http.client.ClientProtocolException from label46 to label47 with label24;
        catch org.apache.http.client.ClientProtocolException from label48 to label49 with label24;
        catch java.lang.Exception from label25 to label26 with label50;
        catch java.lang.Exception from label27 to label28 with label50;
        catch java.lang.Exception from label29 to label30 with label50;
        catch java.lang.Exception from label31 to label32 with label50;
        catch java.lang.Exception from label33 to label34 with label50;
        catch java.lang.Exception from label35 to label36 with label50;
        catch java.lang.Exception from label37 to label40 with label50;
        catch java.lang.Exception from label41 to label42 with label50;
        catch java.lang.Exception from label44 to label45 with label50;
        catch java.lang.Exception from label46 to label47 with label50;
        catch java.lang.Exception from label48 to label49 with label50;
        catch org.apache.http.client.ClientProtocolException from label52 to label53 with label24;
        catch org.apache.http.client.ClientProtocolException from label55 to label56 with label24;
        catch org.apache.http.client.ClientProtocolException from label57 to label58 with label24;
        catch java.lang.Exception from label52 to label53 with label50;
        catch java.lang.Exception from label55 to label56 with label50;
        catch java.lang.Exception from label57 to label58 with label50;
    }

    private org.json.JSONObject a(java.lang.String, org.json.JSONObject)
    {
        org.apache.http.impl.client.DefaultHttpClient $r9, $r29;
        org.apache.http.client.methods.HttpPost $r7, $r28;
        byte[] $r11;
        org.apache.http.client.entity.UrlEncodedFormEntity $r22, $r35;
        java.util.Random $r26;
        org.apache.http.StatusLine $r15;
        org.apache.http.Header $r18;
        org.json.JSONException $r25;
        org.json.JSONObject $r2, $r36;
        java.io.ByteArrayInputStream $r13, $r30;
        boolean $z0;
        org.apache.http.HttpEntity $r16;
        java.lang.Exception $r37;
        java.lang.StringBuilder $r5, $r27;
        org.apache.http.message.BasicNameValuePair $r21, $r34;
        java.lang.Throwable $r23, $r24;
        java.util.zip.InflaterInputStream $r32;
        long $l2;
        java.util.ArrayList $r20, $r33;
        java.nio.charset.Charset $r10;
        int $i0, $i1;
        java.lang.String $r1, $r3, $r4, $r6;
        com.umeng.common.net.r r0;
        org.apache.http.params.HttpParams $r8;
        org.apache.http.HttpResponse $r14;
        org.apache.http.entity.InputStreamEntity $r12, $r31;
        java.lang.Object $r19;
        java.io.InputStream $r17;

        r0 := @this: com.umeng.common.net.r;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.json.JSONObject;

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        $r26 = new java.util.Random;

        specialinvoke $r26.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r26.<java.util.Random: int nextInt(int)>(1000);

        $r4 = <com.umeng.common.net.r: java.lang.String a>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\trequest: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = <com.umeng.common.util.g: java.lang.String a>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void c(java.lang.String,java.lang.String)>($r4, $r6);

        $r28 = new org.apache.http.client.methods.HttpPost;

        $r7 = $r28;

        specialinvoke $r28.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r1);

        $r8 = specialinvoke r0.<com.umeng.common.net.r: org.apache.http.params.HttpParams b()>();

        $r29 = new org.apache.http.impl.client.DefaultHttpClient;

        $r9 = $r29;

        specialinvoke $r29.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r8);

     label01:
        $z0 = virtualinvoke r0.<com.umeng.common.net.r: boolean a()>();

     label02:
        if $z0 == 0 goto label24;

        $r27 = new java.lang.StringBuilder;

        $r5 = $r27;

     label03:
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r4 = virtualinvoke $r10.<java.nio.charset.Charset: java.lang.String toString()>();

        $r11 = staticinvoke <com.umeng.common.util.f: byte[] a(java.lang.String,java.lang.String)>($r3, $r4);

        virtualinvoke $r7.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Content-Encoding", "deflate");

     label04:
        $r31 = new org.apache.http.entity.InputStreamEntity;

        $r12 = $r31;

        $r30 = new java.io.ByteArrayInputStream;

        $r13 = $r30;

     label05:
        specialinvoke $r30.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11);

     label06:
        $i1 = lengthof $r11;

        $l2 = (long) $i1;

     label07:
        specialinvoke $r31.<org.apache.http.entity.InputStreamEntity: void <init>(java.io.InputStream,long)>($r13, $l2);

        virtualinvoke $r7.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r12);

     label08:
        $r14 = interfaceinvoke $r9.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r7);

        $r15 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r15.<org.apache.http.StatusLine: int getStatusCode()>();

     label09:
        if $i1 != 200 goto label35;

     label10:
        $r16 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label11:
        if $r16 == null goto label43;

     label12:
        $r17 = interfaceinvoke $r16.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r18 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Encoding");

     label13:
        if $r18 == null goto label42;

     label14:
        $r3 = interfaceinvoke $r18.<org.apache.http.Header: java.lang.String getValue()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("deflate");

     label15:
        if $z0 == 0 goto label42;

        $r32 = new java.util.zip.InflaterInputStream;

        $r19 = $r32;

     label16:
        specialinvoke $r32.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r17);

     label17:
        $r17 = (java.io.InputStream) $r19;

     label18:
        $r3 = staticinvoke <com.umeng.common.net.r: java.lang.String a(java.io.InputStream)>($r17);

     label19:
        $r4 = <com.umeng.common.net.r: java.lang.String a>;

        $r27 = new java.lang.StringBuilder;

        $r5 = $r27;

     label20:
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tresponse: ");

     label21:
        $r6 = <com.umeng.common.util.g: java.lang.String a>;

     label22:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void a(java.lang.String,java.lang.String)>($r4, $r6);

     label23:
        if $r3 != null goto label32;

        return null;

     label24:
        $r33 = new java.util.ArrayList;

        $r20 = $r33;

     label25:
        specialinvoke $r33.<java.util.ArrayList: void <init>(int)>(1);

     label26:
        $r34 = new org.apache.http.message.BasicNameValuePair;

        $r21 = $r34;

     label27:
        specialinvoke $r34.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("content", $r3);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r21);

     label28:
        $r35 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        $r22 = $r35;

     label29:
        specialinvoke $r35.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>($r20, "UTF-8");

        virtualinvoke $r7.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r22);

     label30:
        goto label08;

     label31:
        $r23 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tClientProtocolException,Failed to send message.");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = (java.lang.Exception) $r23;

        staticinvoke <com.umeng.common.Log: void c(java.lang.String,java.lang.String,java.lang.Exception)>($r3, $r1, $r37);

        return null;

     label32:
        $r36 = new org.json.JSONObject;

     label33:
        specialinvoke $r36.<org.json.JSONObject: void <init>(java.lang.String)>($r3);

     label34:
        return $r36;

     label35:
        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r27 = new java.lang.StringBuilder;

        $r5 = $r27;

     label36:
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tFailed to send message. StatusCode = ");

        $r15 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r15.<org.apache.http.StatusLine: int getStatusCode()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

     label37:
        $r4 = <com.umeng.common.util.g: java.lang.String a>;

     label38:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void c(java.lang.String,java.lang.String)>($r3, $r4);

     label39:
        return null;

     label40:
        $r24 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tIOException,Failed to send message.");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = (java.lang.Exception) $r24;

        staticinvoke <com.umeng.common.Log: void c(java.lang.String,java.lang.String,java.lang.Exception)>($r3, $r1, $r37);

        return null;

     label41:
        $r25 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\tIOException,Failed to send message.");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.umeng.common.Log: void c(java.lang.String,java.lang.String,java.lang.Exception)>($r3, $r1, $r25);

        return null;

     label42:
        $r19 = $r17;

        goto label17;

     label43:
        return null;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label31;
        catch org.apache.http.client.ClientProtocolException from label03 to label04 with label31;
        catch org.apache.http.client.ClientProtocolException from label05 to label06 with label31;
        catch org.apache.http.client.ClientProtocolException from label07 to label09 with label31;
        catch org.apache.http.client.ClientProtocolException from label10 to label11 with label31;
        catch org.apache.http.client.ClientProtocolException from label12 to label13 with label31;
        catch org.apache.http.client.ClientProtocolException from label14 to label15 with label31;
        catch org.apache.http.client.ClientProtocolException from label16 to label17 with label31;
        catch org.apache.http.client.ClientProtocolException from label18 to label19 with label31;
        catch org.apache.http.client.ClientProtocolException from label20 to label21 with label31;
        catch org.apache.http.client.ClientProtocolException from label22 to label23 with label31;
        catch org.apache.http.client.ClientProtocolException from label25 to label26 with label31;
        catch org.apache.http.client.ClientProtocolException from label27 to label28 with label31;
        catch org.apache.http.client.ClientProtocolException from label29 to label30 with label31;
        catch java.io.IOException from label01 to label02 with label40;
        catch java.io.IOException from label03 to label04 with label40;
        catch java.io.IOException from label05 to label06 with label40;
        catch java.io.IOException from label07 to label09 with label40;
        catch java.io.IOException from label10 to label11 with label40;
        catch java.io.IOException from label12 to label13 with label40;
        catch java.io.IOException from label14 to label15 with label40;
        catch java.io.IOException from label16 to label17 with label40;
        catch java.io.IOException from label18 to label19 with label40;
        catch java.io.IOException from label20 to label21 with label40;
        catch java.io.IOException from label22 to label23 with label40;
        catch java.io.IOException from label25 to label26 with label40;
        catch java.io.IOException from label27 to label28 with label40;
        catch java.io.IOException from label29 to label30 with label40;
        catch org.json.JSONException from label01 to label02 with label41;
        catch org.json.JSONException from label03 to label04 with label41;
        catch org.json.JSONException from label05 to label06 with label41;
        catch org.json.JSONException from label07 to label09 with label41;
        catch org.json.JSONException from label10 to label11 with label41;
        catch org.json.JSONException from label12 to label13 with label41;
        catch org.json.JSONException from label14 to label15 with label41;
        catch org.json.JSONException from label16 to label17 with label41;
        catch org.json.JSONException from label18 to label19 with label41;
        catch org.json.JSONException from label20 to label21 with label41;
        catch org.json.JSONException from label22 to label23 with label41;
        catch org.json.JSONException from label25 to label26 with label41;
        catch org.json.JSONException from label27 to label28 with label41;
        catch org.json.JSONException from label29 to label30 with label41;
        catch org.apache.http.client.ClientProtocolException from label33 to label34 with label31;
        catch org.apache.http.client.ClientProtocolException from label36 to label37 with label31;
        catch org.apache.http.client.ClientProtocolException from label38 to label39 with label31;
        catch java.io.IOException from label33 to label34 with label40;
        catch java.io.IOException from label36 to label37 with label40;
        catch java.io.IOException from label38 to label39 with label40;
        catch org.json.JSONException from label33 to label34 with label41;
        catch org.json.JSONException from label36 to label37 with label41;
        catch org.json.JSONException from label38 to label39 with label41;
    }

    private org.apache.http.params.HttpParams b()
    {
        java.lang.String $r2;
        org.apache.http.params.BasicHttpParams $r1;
        com.umeng.common.net.r r0;

        r0 := @this: com.umeng.common.net.r;

        $r1 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r1.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r1, 10000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r1, 20000);

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent");

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUserAgent(org.apache.http.params.HttpParams,java.lang.String)>($r1, $r2);

        return $r1;
    }

    private void b(java.lang.String)
    {
        java.lang.RuntimeException $r4;
        com.umeng.common.net.r r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.umeng.common.net.r;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.umeng.common.util.g: boolean d(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r2 = <com.umeng.common.net.s: java.lang.String c>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        $r2 = <com.umeng.common.net.s: java.lang.String b>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        $z0 = $z0 ^ $z1;

        if $z0 != 0 goto label2;

     label1:
        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u9a8c\u8bc1\u8bf7\u6c42\u65b9\u5f0f\u5931\u8d25[");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label2:
        return;
    }

    public com.umeng.common.net.r a(java.util.Map)
    {
        com.umeng.common.net.r r0;
        java.util.Map $r1;

        r0 := @this: com.umeng.common.net.r;

        $r1 := @parameter0: java.util.Map;

        r0.<com.umeng.common.net.r: java.util.Map b> = $r1;

        return r0;
    }

    public com.umeng.common.net.t a(com.umeng.common.net.s, java.lang.Class)
    {
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.Object[] $r8;
        java.lang.reflect.Constructor $r7;
        org.json.JSONObject $r5;
        java.lang.String $r3, $r4;
        boolean $z0;
        com.umeng.common.net.s $r1;
        java.lang.Class[] $r6;
        com.umeng.common.net.t $r10;
        java.lang.Exception $r17;
        com.umeng.common.net.r r0;
        java.lang.Class $r2;
        java.lang.Object $r9;

        r0 := @this: com.umeng.common.net.r;

        $r1 := @parameter0: com.umeng.common.net.s;

        $r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke $r1.<com.umeng.common.net.s: java.lang.String c()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        specialinvoke r0.<com.umeng.common.net.r: void b(java.lang.String)>($r3);

        $r4 = <com.umeng.common.net.s: java.lang.String c>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label02;

        $r3 = virtualinvoke $r1.<com.umeng.common.net.s: java.lang.String b()>();

        $r5 = specialinvoke r0.<com.umeng.common.net.r: org.json.JSONObject a(java.lang.String)>($r3);

     label01:
        if $r5 != null goto label03;

        return null;

     label02:
        $r4 = <com.umeng.common.net.s: java.lang.String b>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label15;

        $r3 = $r1.<com.umeng.common.net.s: java.lang.String d>;

        $r5 = virtualinvoke $r1.<com.umeng.common.net.s: org.json.JSONObject a()>();

        $r5 = specialinvoke r0.<com.umeng.common.net.r: org.json.JSONObject a(java.lang.String,org.json.JSONObject)>($r3, $r5);

        goto label01;

     label03:
        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "Lorg/json/JSONObject;";

     label04:
        $r7 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r6);

     label05:
        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r5;

     label06:
        $r9 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r8);

     label07:
        $r10 = (com.umeng.common.net.t) $r9;

        return $r10;

     label08:
        $r11 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r17 = (java.lang.Exception) $r11;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "SecurityException", $r17);

     label09:
        return null;

     label10:
        $r12 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r17 = (java.lang.Exception) $r12;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "NoSuchMethodException", $r17);

        goto label09;

     label11:
        $r13 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r17 = (java.lang.Exception) $r13;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "IllegalArgumentException", $r17);

        goto label09;

     label12:
        $r14 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r17 = (java.lang.Exception) $r14;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "InstantiationException", $r17);

        goto label09;

     label13:
        $r15 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r17 = (java.lang.Exception) $r15;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "IllegalAccessException", $r17);

        goto label09;

     label14:
        $r16 := @caughtexception;

        $r3 = <com.umeng.common.net.r: java.lang.String a>;

        $r17 = (java.lang.Exception) $r16;

        staticinvoke <com.umeng.common.Log: void b(java.lang.String,java.lang.String,java.lang.Exception)>($r3, "InvocationTargetException", $r17);

        goto label09;

     label15:
        $r5 = null;

        goto label01;

        catch java.lang.SecurityException from label04 to label05 with label08;
        catch java.lang.SecurityException from label06 to label07 with label08;
        catch java.lang.NoSuchMethodException from label04 to label05 with label10;
        catch java.lang.NoSuchMethodException from label06 to label07 with label10;
        catch java.lang.IllegalArgumentException from label04 to label05 with label11;
        catch java.lang.IllegalArgumentException from label06 to label07 with label11;
        catch java.lang.InstantiationException from label04 to label05 with label12;
        catch java.lang.InstantiationException from label06 to label07 with label12;
        catch java.lang.IllegalAccessException from label04 to label05 with label13;
        catch java.lang.IllegalAccessException from label06 to label07 with label13;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label14;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label14;
    }

    public boolean a()
    {
        com.umeng.common.net.r r0;

        r0 := @this: com.umeng.common.net.r;

        return 0;
    }
}
