public class com.facebook.internal.ImageDownloader extends java.lang.Object
{
    private static final int CACHE_READ_QUEUE_MAX_CONCURRENT;
    private static final int DOWNLOAD_QUEUE_MAX_CONCURRENT;
    private static com.facebook.internal.WorkQueue cacheReadQueue;
    private static com.facebook.internal.WorkQueue downloadQueue;
    private static android.os.Handler handler;
    private static final java.util.Map pendingRequests;

    static void <clinit>()
    {
        java.util.HashMap $r1;
        com.facebook.internal.WorkQueue $r0;

        <com.facebook.internal.ImageDownloader: int DOWNLOAD_QUEUE_MAX_CONCURRENT> = 8;

        <com.facebook.internal.ImageDownloader: int CACHE_READ_QUEUE_MAX_CONCURRENT> = 2;

        $r0 = new com.facebook.internal.WorkQueue;

        specialinvoke $r0.<com.facebook.internal.WorkQueue: void <init>(int)>(8);

        <com.facebook.internal.ImageDownloader: com.facebook.internal.WorkQueue downloadQueue> = $r0;

        $r0 = new com.facebook.internal.WorkQueue;

        specialinvoke $r0.<com.facebook.internal.WorkQueue: void <init>(int)>(2);

        <com.facebook.internal.ImageDownloader: com.facebook.internal.WorkQueue cacheReadQueue> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests> = $r1;

        return;
    }

    public void <init>()
    {
        com.facebook.internal.ImageDownloader r0;

        r0 := @this: com.facebook.internal.ImageDownloader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$0(com.facebook.internal.ImageDownloader$RequestKey, android.content.Context, boolean)
    {
        android.content.Context $r1;
        com.facebook.internal.ImageDownloader$RequestKey $r0;
        boolean $z0;

        $r0 := @parameter0: com.facebook.internal.ImageDownloader$RequestKey;

        $r1 := @parameter1: android.content.Context;

        $z0 := @parameter2: boolean;

        staticinvoke <com.facebook.internal.ImageDownloader: void readFromCache(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context,boolean)>($r0, $r1, $z0);

        return;
    }

    static void access$1(com.facebook.internal.ImageDownloader$RequestKey, android.content.Context)
    {
        android.content.Context $r1;
        com.facebook.internal.ImageDownloader$RequestKey $r0;

        $r0 := @parameter0: com.facebook.internal.ImageDownloader$RequestKey;

        $r1 := @parameter1: android.content.Context;

        staticinvoke <com.facebook.internal.ImageDownloader: void download(com.facebook.internal.ImageDownloader$RequestKey,android.content.Context)>($r0, $r1);

        return;
    }

    public static boolean cancelRequest(com.facebook.internal.ImageRequest)
    {
        com.facebook.internal.WorkQueue$WorkItem $r7;
        java.lang.Throwable $r8;
        com.facebook.internal.ImageDownloader$RequestKey $r1;
        com.facebook.internal.ImageRequest $r0;
        com.facebook.internal.ImageDownloader$DownloaderContext $r6;
        java.util.Map $r4, $r5;
        java.lang.Object $r3;
        java.net.URI $r2;
        boolean $z0;

        $r0 := @parameter0: com.facebook.internal.ImageRequest;

        $r1 = new com.facebook.internal.ImageDownloader$RequestKey;

        $r2 = virtualinvoke $r0.<com.facebook.internal.ImageRequest: java.net.URI getImageUri()>();

        $r3 = virtualinvoke $r0.<com.facebook.internal.ImageRequest: java.lang.Object getCallerTag()>();

        specialinvoke $r1.<com.facebook.internal.ImageDownloader$RequestKey: void <init>(java.net.URI,java.lang.Object)>($r2, $r3);

        $r4 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        entermonitor $r4;

     label1:
        $r5 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        $r3 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.facebook.internal.ImageDownloader$DownloaderContext) $r3;

        if $r6 == null goto label7;

        $r7 = $r6.<com.facebook.internal.ImageDownloader$DownloaderContext: com.facebook.internal.WorkQueue$WorkItem workItem>;

        $z0 = interfaceinvoke $r7.<com.facebook.internal.WorkQueue$WorkItem: boolean cancel()>();

        if $z0 == 0 goto label4;

        $r5 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        $z0 = 1;

     label2:
        exitmonitor $r4;

     label3:
        return $z0;

     label4:
        $r6.<com.facebook.internal.ImageDownloader$DownloaderContext: boolean isCancelled> = 1;

     label5:
        $z0 = 1;

        goto label2;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r4;

        throw $r8;

     label7:
        $z0 = 0;

        goto label2;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static void clearCache(android.content.Context)
    {
        android.content.Context $r0;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <com.facebook.internal.ImageResponseCache: void clearCache(android.content.Context)>($r0);

        staticinvoke <com.facebook.internal.UrlRedirectCache: void clearCache(android.content.Context)>($r0);

        return;
    }

    private static void download(com.facebook.internal.ImageDownloader$RequestKey, android.content.Context)
    {
        java.net.HttpURLConnection $r8, $r14;
        java.net.URL $r4, $r31;
        com.facebook.internal.ImageDownloader$DownloaderContext $r16;
        java.net.URI $r5, $r15;
        boolean $z0, $z1;
        com.facebook.internal.ImageDownloader$RequestKey $r0, $r18, $r35;
        java.lang.Exception $r36;
        java.lang.StringBuilder $r2, $r33;
        java.lang.Throwable $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        android.content.Context $r1;
        com.facebook.internal.ImageRequest $r17;
        java.net.URLConnection $r7;
        int $i0;
        java.lang.String $r6;
        com.facebook.FacebookException $r34;
        java.io.InputStreamReader $r11, $r32;
        android.graphics.Bitmap $r13;
        java.io.Closeable $r37;
        char[] $r12;
        java.lang.Object $r3, $r19;
        java.io.InputStream $r9, $r10;

        $r0 := @parameter0: com.facebook.internal.ImageDownloader$RequestKey;

        $r1 := @parameter1: android.content.Context;

        $r3 = null;

        $z0 = 1;

     label01:
        $r31 = new java.net.URL;

     label02:
        $r4 = $r31;

     label03:
        $r5 = $r0.<com.facebook.internal.ImageDownloader$RequestKey: java.net.URI uri>;

     label04:
        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r31.<java.net.URL: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

     label05:
        $r8 = (java.net.HttpURLConnection) $r7;

     label06:
        virtualinvoke $r8.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0);

        $i0 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>();

     label07:
        lookupswitch($i0)
        {
            case 200: goto label41;
            case 301: goto label26;
            case 302: goto label26;
            default: goto label08;
        };

     label08:
        $r9 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

     label09:
        $r10 = $r9;

     label10:
        $r32 = new java.io.InputStreamReader;

     label11:
        $r11 = $r32;

     label12:
        specialinvoke $r32.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

     label13:
        $r12 = newarray (char)[128];

     label14:
        $r33 = new java.lang.StringBuilder;

     label15:
        $r2 = $r33;

     label16:
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

     label17:
        $i0 = lengthof $r12;

     label18:
        $i0 = virtualinvoke $r11.<java.io.InputStreamReader: int read(char[],int,int)>($r12, 0, $i0);

     label19:
        if $i0 > 0 goto label45;

     label20:
        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r11);

     label21:
        $r34 = new com.facebook.FacebookException;

     label22:
        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<com.facebook.FacebookException: void <init>(java.lang.String)>($r6);

     label23:
        $r13 = null;

        $r3 = $r34;

        $r14 = $r8;

        $z1 = 1;

     label24:
        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r9);

        staticinvoke <com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>($r14);

     label25:
        if $z1 == 0 goto label62;

        $r36 = (java.lang.Exception) $r3;

        staticinvoke <com.facebook.internal.ImageDownloader: void issueResponse(com.facebook.internal.ImageDownloader$RequestKey,java.lang.Exception,android.graphics.Bitmap,boolean)>($r0, $r36, $r13, 0);

        return;

     label26:
        $r6 = virtualinvoke $r8.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("location");

        $z0 = staticinvoke <com.facebook.internal.Utility: boolean isNullOrEmpty(java.lang.String)>($r6);

     label27:
        if $z0 != 0 goto label61;

     label28:
        $r15 = new java.net.URI;

     label29:
        $r5 = $r15;

     label30:
        specialinvoke $r15.<java.net.URI: void <init>(java.lang.String)>($r6);

     label31:
        $r15 = $r0.<com.facebook.internal.ImageDownloader$RequestKey: java.net.URI uri>;

     label32:
        staticinvoke <com.facebook.internal.UrlRedirectCache: void cacheUriRedirect(android.content.Context,java.net.URI,java.net.URI)>($r1, $r15, $r5);

        $r16 = staticinvoke <com.facebook.internal.ImageDownloader: com.facebook.internal.ImageDownloader$DownloaderContext removePendingRequest(com.facebook.internal.ImageDownloader$RequestKey)>($r0);

     label33:
        if $r16 == null goto label61;

     label34:
        $z0 = $r16.<com.facebook.internal.ImageDownloader$DownloaderContext: boolean isCancelled>;

     label35:
        if $z0 != 0 goto label61;

     label36:
        $r17 = $r16.<com.facebook.internal.ImageDownloader$DownloaderContext: com.facebook.internal.ImageRequest request>;

        $r35 = new com.facebook.internal.ImageDownloader$RequestKey;

     label37:
        $r18 = $r35;

     label38:
        $r19 = $r0.<com.facebook.internal.ImageDownloader$RequestKey: java.lang.Object tag>;

     label39:
        specialinvoke $r35.<com.facebook.internal.ImageDownloader$RequestKey: void <init>(java.net.URI,java.lang.Object)>($r5, $r19);

        staticinvoke <com.facebook.internal.ImageDownloader: void enqueueCacheRead(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey,boolean)>($r17, $r18, 0);

     label40:
        $r13 = null;

        $r9 = null;

        $r14 = $r8;

        $z1 = 0;

        goto label24;

     label41:
        $r9 = staticinvoke <com.facebook.internal.ImageResponseCache: java.io.InputStream interceptAndCacheImageStream(android.content.Context,java.net.HttpURLConnection)>($r1, $r8);

     label42:
        $r10 = $r9;

     label43:
        $r13 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r9);

     label44:
        $r14 = $r8;

        $z1 = 1;

        goto label24;

     label45:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r12, 0, $i0);

     label46:
        goto label17;

     label47:
        $r20 := @caughtexception;

        $r21 = $r20;

     label48:
        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r10);

        staticinvoke <com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>($r8);

        $r13 = null;

        $r3 = $r21;

        $z1 = $z0;

        goto label25;

     label49:
        $r22 := @caughtexception;

        $r9 = null;

        $r14 = null;

        $z1 = 1;

        $r23 = $r22;

     label50:
        $r3 = $r23;

        $r13 = null;

        goto label24;

     label51:
        $r24 := @caughtexception;

        $r8 = null;

     label52:
        $r37 = (java.io.Closeable) $r3;

        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r37);

        staticinvoke <com.facebook.internal.Utility: void disconnectQuietly(java.net.URLConnection)>($r8);

        throw $r24;

     label53:
        $r25 := @caughtexception;

        $r24 = $r25;

        goto label52;

     label54:
        $r26 := @caughtexception;

        $r3 = $r10;

        $r24 = $r26;

        goto label52;

     label55:
        $r27 := @caughtexception;

        $r14 = $r8;

        $z1 = 1;

        $r23 = $r27;

        $r9 = null;

        goto label50;

     label56:
        $r23 := @caughtexception;

        $r9 = null;

        $r14 = $r8;

        $z1 = 0;

        goto label50;

     label57:
        $r28 := @caughtexception;

        $r9 = $r10;

        $r14 = $r8;

        $z1 = 1;

        $r23 = $r28;

        goto label50;

     label58:
        $r21 := @caughtexception;

        $r10 = null;

        $r8 = null;

        goto label48;

     label59:
        $r29 := @caughtexception;

        $r10 = null;

        $r21 = $r29;

        goto label48;

     label60:
        $r30 := @caughtexception;

        $r10 = null;

        $r21 = $r30;

        $z0 = 0;

        goto label48;

     label61:
        $r13 = null;

        $r9 = null;

        $r14 = $r8;

        $z1 = 0;

        goto label24;

     label62:
        return;

        catch java.io.IOException from label04 to label05 with label58;
        catch java.net.URISyntaxException from label04 to label05 with label49;
        catch java.lang.Throwable from label01 to label02 with label51;
        catch java.lang.Throwable from label03 to label06 with label51;
        catch java.io.IOException from label06 to label07 with label59;
        catch java.io.IOException from label08 to label09 with label59;
        catch java.net.URISyntaxException from label06 to label07 with label55;
        catch java.net.URISyntaxException from label08 to label09 with label55;
        catch java.lang.Throwable from label06 to label07 with label53;
        catch java.lang.Throwable from label08 to label09 with label53;
        catch java.io.IOException from label12 to label13 with label47;
        catch java.io.IOException from label16 to label17 with label47;
        catch java.io.IOException from label18 to label19 with label47;
        catch java.io.IOException from label20 to label21 with label47;
        catch java.io.IOException from label22 to label23 with label47;
        catch java.net.URISyntaxException from label12 to label13 with label57;
        catch java.net.URISyntaxException from label16 to label17 with label57;
        catch java.net.URISyntaxException from label18 to label19 with label57;
        catch java.net.URISyntaxException from label20 to label21 with label57;
        catch java.net.URISyntaxException from label22 to label23 with label57;
        catch java.lang.Throwable from label10 to label11 with label54;
        catch java.lang.Throwable from label12 to label13 with label54;
        catch java.lang.Throwable from label14 to label15 with label54;
        catch java.lang.Throwable from label16 to label19 with label54;
        catch java.lang.Throwable from label20 to label22 with label54;
        catch java.lang.Throwable from label22 to label23 with label54;
        catch java.io.IOException from label26 to label27 with label60;
        catch java.io.IOException from label30 to label31 with label60;
        catch java.io.IOException from label32 to label33 with label60;
        catch java.io.IOException from label39 to label40 with label60;
        catch java.net.URISyntaxException from label26 to label27 with label56;
        catch java.net.URISyntaxException from label30 to label31 with label56;
        catch java.net.URISyntaxException from label32 to label33 with label56;
        catch java.net.URISyntaxException from label39 to label40 with label56;
        catch java.lang.Throwable from label26 to label27 with label53;
        catch java.lang.Throwable from label28 to label29 with label53;
        catch java.lang.Throwable from label30 to label33 with label53;
        catch java.lang.Throwable from label34 to label35 with label53;
        catch java.lang.Throwable from label36 to label37 with label53;
        catch java.lang.Throwable from label38 to label40 with label53;
        catch java.io.IOException from label41 to label42 with label59;
        catch java.net.URISyntaxException from label41 to label42 with label55;
        catch java.lang.Throwable from label41 to label42 with label53;
        catch java.io.IOException from label43 to label44 with label47;
        catch java.io.IOException from label45 to label46 with label47;
        catch java.net.URISyntaxException from label43 to label44 with label57;
        catch java.net.URISyntaxException from label45 to label46 with label57;
        catch java.lang.Throwable from label43 to label44 with label54;
        catch java.lang.Throwable from label45 to label46 with label54;
    }

    public static void downloadAsync(com.facebook.internal.ImageRequest)
    {
        com.facebook.internal.WorkQueue$WorkItem $r7;
        java.lang.Throwable $r8;
        com.facebook.internal.ImageDownloader$RequestKey $r1;
        com.facebook.internal.ImageRequest $r0;
        com.facebook.internal.ImageDownloader$DownloaderContext $r6;
        java.util.Map $r4, $r5;
        java.lang.Object $r3;
        java.net.URI $r2;
        boolean $z0;

        $r0 := @parameter0: com.facebook.internal.ImageRequest;

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = new com.facebook.internal.ImageDownloader$RequestKey;

        $r2 = virtualinvoke $r0.<com.facebook.internal.ImageRequest: java.net.URI getImageUri()>();

        $r3 = virtualinvoke $r0.<com.facebook.internal.ImageRequest: java.lang.Object getCallerTag()>();

        specialinvoke $r1.<com.facebook.internal.ImageDownloader$RequestKey: void <init>(java.net.URI,java.lang.Object)>($r2, $r3);

        $r4 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        entermonitor $r4;

     label2:
        $r5 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        $r3 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.facebook.internal.ImageDownloader$DownloaderContext) $r3;

        if $r6 == null goto label6;

        $r6.<com.facebook.internal.ImageDownloader$DownloaderContext: com.facebook.internal.ImageRequest request> = $r0;

        $r6.<com.facebook.internal.ImageDownloader$DownloaderContext: boolean isCancelled> = 0;

        $r7 = $r6.<com.facebook.internal.ImageDownloader$DownloaderContext: com.facebook.internal.WorkQueue$WorkItem workItem>;

        interfaceinvoke $r7.<com.facebook.internal.WorkQueue$WorkItem: void moveToFront()>();

     label3:
        exitmonitor $r4;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        exitmonitor $r4;

        throw $r8;

     label6:
        $z0 = virtualinvoke $r0.<com.facebook.internal.ImageRequest: boolean isCachedRedirectAllowed()>();

        staticinvoke <com.facebook.internal.ImageDownloader: void enqueueCacheRead(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey,boolean)>($r0, $r1, $z0);

     label7:
        goto label3;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private static void enqueueCacheRead(com.facebook.internal.ImageRequest, com.facebook.internal.ImageDownloader$RequestKey, boolean)
    {
        android.content.Context $r4;
        com.facebook.internal.WorkQueue $r2;
        com.facebook.internal.ImageDownloader$RequestKey $r1;
        com.facebook.internal.ImageDownloader$CacheReadWorkItem $r3;
        com.facebook.internal.ImageRequest $r0;
        boolean $z0;

        $r0 := @parameter0: com.facebook.internal.ImageRequest;

        $r1 := @parameter1: com.facebook.internal.ImageDownloader$RequestKey;

        $z0 := @parameter2: boolean;

        $r2 = <com.facebook.internal.ImageDownloader: com.facebook.internal.WorkQueue cacheReadQueue>;

        $r3 = new com.facebook.internal.ImageDownloader$CacheReadWorkItem;

        $r4 = virtualinvoke $r0.<com.facebook.internal.ImageRequest: android.content.Context getContext()>();

        specialinvoke $r3.<com.facebook.internal.ImageDownloader$CacheReadWorkItem: void <init>(android.content.Context,com.facebook.internal.ImageDownloader$RequestKey,boolean)>($r4, $r1, $z0);

        staticinvoke <com.facebook.internal.ImageDownloader: void enqueueRequest(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey,com.facebook.internal.WorkQueue,java.lang.Runnable)>($r0, $r1, $r2, $r3);

        return;
    }

    private static void enqueueDownload(com.facebook.internal.ImageRequest, com.facebook.internal.ImageDownloader$RequestKey)
    {
        android.content.Context $r4;
        com.facebook.internal.ImageDownloader$DownloadImageWorkItem $r3;
        com.facebook.internal.WorkQueue $r2;
        com.facebook.internal.ImageDownloader$RequestKey $r1;
        com.facebook.internal.ImageRequest $r0;

        $r0 := @parameter0: com.facebook.internal.ImageRequest;

        $r1 := @parameter1: com.facebook.internal.ImageDownloader$RequestKey;

        $r2 = <com.facebook.internal.ImageDownloader: com.facebook.internal.WorkQueue downloadQueue>;

        $r3 = new com.facebook.internal.ImageDownloader$DownloadImageWorkItem;

        $r4 = virtualinvoke $r0.<com.facebook.internal.ImageRequest: android.content.Context getContext()>();

        specialinvoke $r3.<com.facebook.internal.ImageDownloader$DownloadImageWorkItem: void <init>(android.content.Context,com.facebook.internal.ImageDownloader$RequestKey)>($r4, $r1);

        staticinvoke <com.facebook.internal.ImageDownloader: void enqueueRequest(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey,com.facebook.internal.WorkQueue,java.lang.Runnable)>($r0, $r1, $r2, $r3);

        return;
    }

    private static void enqueueRequest(com.facebook.internal.ImageRequest, com.facebook.internal.ImageDownloader$RequestKey, com.facebook.internal.WorkQueue, java.lang.Runnable)
    {
        com.facebook.internal.WorkQueue$WorkItem $r5;
        java.lang.Throwable $r8;
        com.facebook.internal.WorkQueue $r2;
        com.facebook.internal.ImageDownloader$RequestKey $r1;
        com.facebook.internal.ImageRequest $r0;
        java.lang.Runnable $r3;
        com.facebook.internal.ImageDownloader$DownloaderContext $r6;
        java.util.Map $r4, $r7;

        $r0 := @parameter0: com.facebook.internal.ImageRequest;

        $r1 := @parameter1: com.facebook.internal.ImageDownloader$RequestKey;

        $r2 := @parameter2: com.facebook.internal.WorkQueue;

        $r3 := @parameter3: java.lang.Runnable;

        $r4 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        entermonitor $r4;

     label1:
        $r6 = new com.facebook.internal.ImageDownloader$DownloaderContext;

        specialinvoke $r6.<com.facebook.internal.ImageDownloader$DownloaderContext: void <init>(com.facebook.internal.ImageDownloader$DownloaderContext)>(null);

        $r6.<com.facebook.internal.ImageDownloader$DownloaderContext: com.facebook.internal.ImageRequest request> = $r0;

        $r7 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

        $r5 = virtualinvoke $r2.<com.facebook.internal.WorkQueue: com.facebook.internal.WorkQueue$WorkItem addActiveWorkItem(java.lang.Runnable)>($r3);

        $r6.<com.facebook.internal.ImageDownloader$DownloaderContext: com.facebook.internal.WorkQueue$WorkItem workItem> = $r5;

        exitmonitor $r4;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r4;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static android.os.Handler getHandler()
    {
        java.lang.Throwable $r2;
        android.os.Looper $r0;
        android.os.Handler $r1;

        entermonitor class "Lcom/facebook/internal/ImageDownloader;";

     label1:
        $r1 = <com.facebook.internal.ImageDownloader: android.os.Handler handler>;

        if $r1 != null goto label2;

        $r1 = new android.os.Handler;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r0);

        <com.facebook.internal.ImageDownloader: android.os.Handler handler> = $r1;

     label2:
        $r1 = <com.facebook.internal.ImageDownloader: android.os.Handler handler>;

     label3:
        exitmonitor class "Lcom/facebook/internal/ImageDownloader;";

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/facebook/internal/ImageDownloader;";

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private static void issueResponse(com.facebook.internal.ImageDownloader$RequestKey, java.lang.Exception, android.graphics.Bitmap, boolean)
    {
        com.facebook.internal.ImageDownloader$RequestKey $r0;
        com.facebook.internal.ImageRequest $r4;
        java.lang.Exception $r1;
        com.facebook.internal.ImageRequest$Callback $r5;
        com.facebook.internal.ImageDownloader$DownloaderContext $r3;
        com.facebook.internal.ImageDownloader$1 $r7;
        android.graphics.Bitmap $r2;
        android.os.Handler $r6;
        boolean $z0, $z1;

        $r0 := @parameter0: com.facebook.internal.ImageDownloader$RequestKey;

        $r1 := @parameter1: java.lang.Exception;

        $r2 := @parameter2: android.graphics.Bitmap;

        $z0 := @parameter3: boolean;

        $r3 = staticinvoke <com.facebook.internal.ImageDownloader: com.facebook.internal.ImageDownloader$DownloaderContext removePendingRequest(com.facebook.internal.ImageDownloader$RequestKey)>($r0);

        if $r3 == null goto label1;

        $z1 = $r3.<com.facebook.internal.ImageDownloader$DownloaderContext: boolean isCancelled>;

        if $z1 != 0 goto label1;

        $r4 = $r3.<com.facebook.internal.ImageDownloader$DownloaderContext: com.facebook.internal.ImageRequest request>;

        $r5 = virtualinvoke $r4.<com.facebook.internal.ImageRequest: com.facebook.internal.ImageRequest$Callback getCallback()>();

        if $r5 == null goto label1;

        $r6 = staticinvoke <com.facebook.internal.ImageDownloader: android.os.Handler getHandler()>();

        $r7 = new com.facebook.internal.ImageDownloader$1;

        specialinvoke $r7.<com.facebook.internal.ImageDownloader$1: void <init>(com.facebook.internal.ImageRequest,java.lang.Exception,boolean,android.graphics.Bitmap,com.facebook.internal.ImageRequest$Callback)>($r4, $r1, $z0, $r2, $r5);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

     label1:
        return;
    }

    public static void prioritizeRequest(com.facebook.internal.ImageRequest)
    {
        com.facebook.internal.WorkQueue$WorkItem $r7;
        java.lang.Throwable $r8;
        com.facebook.internal.ImageDownloader$RequestKey $r1;
        com.facebook.internal.ImageRequest $r0;
        com.facebook.internal.ImageDownloader$DownloaderContext $r6;
        java.util.Map $r4, $r5;
        java.lang.Object $r3;
        java.net.URI $r2;

        $r0 := @parameter0: com.facebook.internal.ImageRequest;

        $r1 = new com.facebook.internal.ImageDownloader$RequestKey;

        $r2 = virtualinvoke $r0.<com.facebook.internal.ImageRequest: java.net.URI getImageUri()>();

        $r3 = virtualinvoke $r0.<com.facebook.internal.ImageRequest: java.lang.Object getCallerTag()>();

        specialinvoke $r1.<com.facebook.internal.ImageDownloader$RequestKey: void <init>(java.net.URI,java.lang.Object)>($r2, $r3);

        $r4 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        entermonitor $r4;

     label1:
        $r5 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        $r3 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (com.facebook.internal.ImageDownloader$DownloaderContext) $r3;

        if $r6 == null goto label2;

        $r7 = $r6.<com.facebook.internal.ImageDownloader$DownloaderContext: com.facebook.internal.WorkQueue$WorkItem workItem>;

        interfaceinvoke $r7.<com.facebook.internal.WorkQueue$WorkItem: void moveToFront()>();

     label2:
        exitmonitor $r4;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r4;

        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private static void readFromCache(com.facebook.internal.ImageDownloader$RequestKey, android.content.Context, boolean)
    {
        android.content.Context $r1;
        com.facebook.internal.ImageDownloader$RequestKey $r0;
        com.facebook.internal.ImageRequest $r6;
        com.facebook.internal.ImageDownloader$DownloaderContext $r5;
        android.graphics.Bitmap $r4;
        java.net.URI $r2;
        boolean $z0, $z1;
        java.io.InputStream $r3;

        $r0 := @parameter0: com.facebook.internal.ImageDownloader$RequestKey;

        $r1 := @parameter1: android.content.Context;

        $z0 := @parameter2: boolean;

        $z1 = 0;

        if $z0 == 0 goto label5;

        $r2 = $r0.<com.facebook.internal.ImageDownloader$RequestKey: java.net.URI uri>;

        $r2 = staticinvoke <com.facebook.internal.UrlRedirectCache: java.net.URI getRedirectedUri(android.content.Context,java.net.URI)>($r1, $r2);

        if $r2 == null goto label5;

        $r3 = staticinvoke <com.facebook.internal.ImageResponseCache: java.io.InputStream getCachedImageStream(java.net.URI,android.content.Context)>($r2, $r1);

        if $r3 == null goto label1;

        $z1 = 1;

     label1:
        $z0 = $z1;

     label2:
        if $z0 != 0 goto label3;

        $r2 = $r0.<com.facebook.internal.ImageDownloader$RequestKey: java.net.URI uri>;

        $r3 = staticinvoke <com.facebook.internal.ImageResponseCache: java.io.InputStream getCachedImageStream(java.net.URI,android.content.Context)>($r2, $r1);

     label3:
        if $r3 == null goto label4;

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r3);

        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r3);

        staticinvoke <com.facebook.internal.ImageDownloader: void issueResponse(com.facebook.internal.ImageDownloader$RequestKey,java.lang.Exception,android.graphics.Bitmap,boolean)>($r0, null, $r4, $z0);

        return;

     label4:
        $r5 = staticinvoke <com.facebook.internal.ImageDownloader: com.facebook.internal.ImageDownloader$DownloaderContext removePendingRequest(com.facebook.internal.ImageDownloader$RequestKey)>($r0);

        if $r5 == null goto label6;

        $z0 = $r5.<com.facebook.internal.ImageDownloader$DownloaderContext: boolean isCancelled>;

        if $z0 != 0 goto label6;

        $r6 = $r5.<com.facebook.internal.ImageDownloader$DownloaderContext: com.facebook.internal.ImageRequest request>;

        staticinvoke <com.facebook.internal.ImageDownloader: void enqueueDownload(com.facebook.internal.ImageRequest,com.facebook.internal.ImageDownloader$RequestKey)>($r6, $r0);

        return;

     label5:
        $z0 = 0;

        $r3 = null;

        goto label2;

     label6:
        return;
    }

    private static com.facebook.internal.ImageDownloader$DownloaderContext removePendingRequest(com.facebook.internal.ImageDownloader$RequestKey)
    {
        java.lang.Throwable $r5;
        com.facebook.internal.ImageDownloader$DownloaderContext $r4;
        java.util.Map $r1, $r3;
        com.facebook.internal.ImageDownloader$RequestKey $r0;
        java.lang.Object $r2;

        $r0 := @parameter0: com.facebook.internal.ImageDownloader$RequestKey;

        $r1 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        entermonitor $r1;

     label1:
        $r3 = <com.facebook.internal.ImageDownloader: java.util.Map pendingRequests>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r0);

        $r4 = (com.facebook.internal.ImageDownloader$DownloaderContext) $r2;

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
