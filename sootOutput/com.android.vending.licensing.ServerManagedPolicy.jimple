public class com.android.vending.licensing.ServerManagedPolicy extends java.lang.Object implements com.android.vending.licensing.Policy
{
    private long a;
    private long b;
    private long c;
    private long d;
    private long e;
    private com.android.vending.licensing.Policy$LicenseResponse f;
    private com.android.vending.licensing.PreferenceObfuscator g;

    public void <init>(android.content.Context, com.android.vending.licensing.Obfuscator)
    {
        android.content.Context $r1;
        long $l0;
        com.android.vending.licensing.PreferenceObfuscator $r4;
        com.android.vending.licensing.Policy$LicenseResponse $r5;
        android.content.SharedPreferences $r3;
        com.android.vending.licensing.Obfuscator $r2;
        java.lang.String $r6;
        com.android.vending.licensing.ServerManagedPolicy r0;

        r0 := @this: com.android.vending.licensing.ServerManagedPolicy;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.android.vending.licensing.Obfuscator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.vending.licensing.ServerManagedPolicy: long e> = 0L;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.android.vending.licensing.ServerManagedPolicy", 0);

        $r4 = new com.android.vending.licensing.PreferenceObfuscator;

        specialinvoke $r4.<com.android.vending.licensing.PreferenceObfuscator: void <init>(android.content.SharedPreferences,com.android.vending.licensing.Obfuscator)>($r3, $r2);

        r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g> = $r4;

        $r4 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        $r5 = <com.android.vending.licensing.Policy$LicenseResponse: com.android.vending.licensing.Policy$LicenseResponse c>;

        $r6 = virtualinvoke $r5.<com.android.vending.licensing.Policy$LicenseResponse: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<com.android.vending.licensing.PreferenceObfuscator: java.lang.String b(java.lang.String,java.lang.String)>("lastResponse", $r6);

        $r5 = staticinvoke <com.android.vending.licensing.Policy$LicenseResponse: com.android.vending.licensing.Policy$LicenseResponse valueOf(java.lang.String)>($r6);

        r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.Policy$LicenseResponse f> = $r5;

        $r4 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        $r6 = virtualinvoke $r4.<com.android.vending.licensing.PreferenceObfuscator: java.lang.String b(java.lang.String,java.lang.String)>("validityTimestamp", "0");

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        r0.<com.android.vending.licensing.ServerManagedPolicy: long a> = $l0;

        $r4 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        $r6 = virtualinvoke $r4.<com.android.vending.licensing.PreferenceObfuscator: java.lang.String b(java.lang.String,java.lang.String)>("retryUntil", "0");

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        r0.<com.android.vending.licensing.ServerManagedPolicy: long b> = $l0;

        $r4 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        $r6 = virtualinvoke $r4.<com.android.vending.licensing.PreferenceObfuscator: java.lang.String b(java.lang.String,java.lang.String)>("maxRetries", "0");

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        r0.<com.android.vending.licensing.ServerManagedPolicy: long c> = $l0;

        $r4 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        $r6 = virtualinvoke $r4.<com.android.vending.licensing.PreferenceObfuscator: java.lang.String b(java.lang.String,java.lang.String)>("retryCount", "0");

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        r0.<com.android.vending.licensing.ServerManagedPolicy: long d> = $l0;

        return;
    }

    private void a(long)
    {
        long $l0;
        java.lang.String $r2;
        com.android.vending.licensing.PreferenceObfuscator $r1;
        com.android.vending.licensing.ServerManagedPolicy r0;

        r0 := @this: com.android.vending.licensing.ServerManagedPolicy;

        $l0 := @parameter0: long;

        r0.<com.android.vending.licensing.ServerManagedPolicy: long d> = $l0;

        $r1 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r1.<com.android.vending.licensing.PreferenceObfuscator: void a(java.lang.String,java.lang.String)>("retryCount", $r2);

        return;
    }

    private void a(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Long $r2, $r5;
        long $l0;
        java.lang.String $r1;
        com.android.vending.licensing.PreferenceObfuscator $r3;
        com.android.vending.licensing.ServerManagedPolicy r0;

        r0 := @this: com.android.vending.licensing.ServerManagedPolicy;

        $r1 := @parameter0: java.lang.String;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label2:
        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        r0.<com.android.vending.licensing.ServerManagedPolicy: long a> = $l0;

        $r3 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        virtualinvoke $r3.<com.android.vending.licensing.PreferenceObfuscator: void a(java.lang.String,java.lang.String)>("validityTimestamp", $r1);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ServerManagedPolicy", "License validity timestamp (VT) missing, caching for a minute");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 + 60000L;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2 = $r5;

        $l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        goto label2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void b(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Long $r2;
        long $l0;
        java.lang.String $r1;
        com.android.vending.licensing.PreferenceObfuscator $r3;
        com.android.vending.licensing.ServerManagedPolicy r0;

        r0 := @this: com.android.vending.licensing.ServerManagedPolicy;

        $r1 := @parameter0: java.lang.String;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label2:
        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        r0.<com.android.vending.licensing.ServerManagedPolicy: long b> = $l0;

        $r3 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        virtualinvoke $r3.<com.android.vending.licensing.PreferenceObfuscator: void a(java.lang.String,java.lang.String)>("retryUntil", $r1);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ServerManagedPolicy", "License retry timestamp (GT) missing, grace period disabled");

        $r1 = "0";

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        goto label2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void c(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Long $r2;
        long $l0;
        java.lang.String $r1;
        com.android.vending.licensing.PreferenceObfuscator $r3;
        com.android.vending.licensing.ServerManagedPolicy r0;

        r0 := @this: com.android.vending.licensing.ServerManagedPolicy;

        $r1 := @parameter0: java.lang.String;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label2:
        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        r0.<com.android.vending.licensing.ServerManagedPolicy: long c> = $l0;

        $r3 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        virtualinvoke $r3.<com.android.vending.licensing.PreferenceObfuscator: void a(java.lang.String,java.lang.String)>("maxRetries", $r1);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ServerManagedPolicy", "Licence retry count (GR) missing, grace period disabled");

        $r1 = "0";

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        goto label2;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static java.util.Map d(java.lang.String)
    {
        java.lang.Throwable $r9;
        java.util.Iterator $r5;
        java.util.HashMap $r0;
        java.util.List $r4;
        java.lang.StringBuilder $r3;
        java.lang.Object $r6;
        java.lang.String $r1, $r8;
        java.net.URI $r2;
        org.apache.http.NameValuePair $r7;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = new java.net.URI;

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.net.URI: void <init>(java.lang.String)>($r1);

        $r4 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.lang.String)>($r2, "UTF-8");

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label9;

     label4:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label5:
        $r7 = (org.apache.http.NameValuePair) $r6;

     label6:
        $r1 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r8 = interfaceinvoke $r7.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r8);

     label7:
        goto label2;

     label8:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ServerManagedPolicy", "Invalid syntax error while decoding extras data from server.");

     label9:
        return $r0;

        catch java.net.URISyntaxException from label1 to label3 with label8;
        catch java.net.URISyntaxException from label4 to label5 with label8;
        catch java.net.URISyntaxException from label6 to label7 with label8;
    }

    public final void a(com.android.vending.licensing.Policy$LicenseResponse, com.android.vending.licensing.ResponseData)
    {
        com.android.vending.licensing.ResponseData $r2;
        long $l0;
        com.android.vending.licensing.PreferenceObfuscator $r7;
        com.android.vending.licensing.Policy$LicenseResponse $r1, $r3;
        java.util.Map $r5;
        java.lang.Object $r6;
        java.lang.String $r4;
        com.android.vending.licensing.ServerManagedPolicy r0;

        r0 := @this: com.android.vending.licensing.ServerManagedPolicy;

        $r1 := @parameter0: com.android.vending.licensing.Policy$LicenseResponse;

        $r2 := @parameter1: com.android.vending.licensing.ResponseData;

        $r3 = <com.android.vending.licensing.Policy$LicenseResponse: com.android.vending.licensing.Policy$LicenseResponse c>;

        if $r1 == $r3 goto label3;

        specialinvoke r0.<com.android.vending.licensing.ServerManagedPolicy: void a(long)>(0L);

     label1:
        $r3 = <com.android.vending.licensing.Policy$LicenseResponse: com.android.vending.licensing.Policy$LicenseResponse a>;

        if $r1 != $r3 goto label4;

        $r4 = $r2.<com.android.vending.licensing.ResponseData: java.lang.String g>;

        $r5 = staticinvoke <com.android.vending.licensing.ServerManagedPolicy: java.util.Map d(java.lang.String)>($r4);

        r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.Policy$LicenseResponse f> = $r1;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("VT");

        $r4 = (java.lang.String) $r6;

        specialinvoke r0.<com.android.vending.licensing.ServerManagedPolicy: void a(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("GT");

        $r4 = (java.lang.String) $r6;

        specialinvoke r0.<com.android.vending.licensing.ServerManagedPolicy: void b(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("GR");

        $r4 = (java.lang.String) $r6;

        specialinvoke r0.<com.android.vending.licensing.ServerManagedPolicy: void c(java.lang.String)>($r4);

     label2:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.vending.licensing.ServerManagedPolicy: long e> = $l0;

        r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.Policy$LicenseResponse f> = $r1;

        $r7 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        $r4 = virtualinvoke $r1.<com.android.vending.licensing.Policy$LicenseResponse: java.lang.String toString()>();

        virtualinvoke $r7.<com.android.vending.licensing.PreferenceObfuscator: void a(java.lang.String,java.lang.String)>("lastResponse", $r4);

        $r7 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.PreferenceObfuscator g>;

        virtualinvoke $r7.<com.android.vending.licensing.PreferenceObfuscator: void a()>();

        return;

     label3:
        $l0 = r0.<com.android.vending.licensing.ServerManagedPolicy: long d>;

        $l0 = $l0 + 1L;

        specialinvoke r0.<com.android.vending.licensing.ServerManagedPolicy: void a(long)>($l0);

        goto label1;

     label4:
        $r3 = <com.android.vending.licensing.Policy$LicenseResponse: com.android.vending.licensing.Policy$LicenseResponse b>;

        if $r1 != $r3 goto label2;

        specialinvoke r0.<com.android.vending.licensing.ServerManagedPolicy: void a(java.lang.String)>("0");

        specialinvoke r0.<com.android.vending.licensing.ServerManagedPolicy: void b(java.lang.String)>("0");

        specialinvoke r0.<com.android.vending.licensing.ServerManagedPolicy: void c(java.lang.String)>("0");

        goto label2;
    }

    public final boolean a()
    {
        byte $b2;
        int $i3;
        long $l0, $l1;
        com.android.vending.licensing.ServerManagedPolicy r0;
        com.android.vending.licensing.Policy$LicenseResponse $r1, $r2;

        r0 := @this: com.android.vending.licensing.ServerManagedPolicy;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.Policy$LicenseResponse f>;

        $r2 = <com.android.vending.licensing.Policy$LicenseResponse: com.android.vending.licensing.Policy$LicenseResponse a>;

        if $r1 != $r2 goto label1;

        $l1 = r0.<com.android.vending.licensing.ServerManagedPolicy: long a>;

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 > 0 goto label3;

        return 1;

     label1:
        $r1 = r0.<com.android.vending.licensing.ServerManagedPolicy: com.android.vending.licensing.Policy$LicenseResponse f>;

        $r2 = <com.android.vending.licensing.Policy$LicenseResponse: com.android.vending.licensing.Policy$LicenseResponse c>;

        if $r1 != $r2 goto label3;

        $l1 = r0.<com.android.vending.licensing.ServerManagedPolicy: long e>;

        $l1 = $l1 + 60000L;

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label3;

        $l1 = r0.<com.android.vending.licensing.ServerManagedPolicy: long b>;

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label2;

        $l0 = r0.<com.android.vending.licensing.ServerManagedPolicy: long d>;

        $l1 = r0.<com.android.vending.licensing.ServerManagedPolicy: long c>;

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 > 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }
}
