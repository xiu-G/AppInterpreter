class proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor, proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor
{
    private final proguard.classfile.io.ProgramClassWriter this$0;

    private void <init>(proguard.classfile.io.ProgramClassWriter)
    {
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter;

        $r1 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: proguard.classfile.io.ProgramClassWriter this$0> = $r1;

        return;
    }

    void <init>(proguard.classfile.io.ProgramClassWriter, proguard.classfile.io.ProgramClassWriter$1)
    {
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter$1 $r2;
        proguard.classfile.io.ProgramClassWriter $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter;

        $r1 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        $r2 := @parameter1: proguard.classfile.io.ProgramClassWriter$1;

        specialinvoke r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: void <init>(proguard.classfile.io.ProgramClassWriter)>($r1);

        return;
    }

    public void visitAnyVerificationType(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.VerificationType)
    {
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.attribute.preverification.VerificationType $r4;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter $r7;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter r0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.VerificationType;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i1 = virtualinvoke $r4.<proguard.classfile.attribute.preverification.VerificationType: int getTag()>();

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeByte(int)>($i1);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r7 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter access$800(proguard.classfile.io.ProgramClassWriter)>($r5);

        virtualinvoke $r4.<proguard.classfile.attribute.preverification.VerificationType: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)>($r1, $r2, $r3, $i0, $r7);

        return;
    }

    public void visitFullFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.FullFrame)
    {
        proguard.classfile.attribute.preverification.FullFrame $r4;
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter r0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.FullFrame;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i1 = $r4.<proguard.classfile.attribute.preverification.FullFrame: int u2offsetDelta>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i1);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i1 = $r4.<proguard.classfile.attribute.preverification.FullFrame: int variablesCount>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i1);

        virtualinvoke $r4.<proguard.classfile.attribute.preverification.FullFrame: void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)>($r1, $r2, $r3, $i0, r0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i1 = $r4.<proguard.classfile.attribute.preverification.FullFrame: int stackCount>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i1);

        virtualinvoke $r4.<proguard.classfile.attribute.preverification.FullFrame: void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)>($r1, $r2, $r3, $i0, r0);

        return;
    }

    public void visitLessZeroFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.LessZeroFrame)
    {
        proguard.classfile.io.RuntimeDataOutput $r5;
        proguard.classfile.io.ProgramClassWriter $r6;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter r0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.LessZeroFrame $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.LessZeroFrame;

        $r6 = r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r6);

        $i0 = $r4.<proguard.classfile.attribute.preverification.LessZeroFrame: int u2offsetDelta>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitMoreZeroFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.MoreZeroFrame)
    {
        proguard.classfile.io.RuntimeDataOutput $r5;
        proguard.classfile.io.ProgramClassWriter $r6;
        proguard.classfile.attribute.preverification.MoreZeroFrame $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter r0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.MoreZeroFrame;

        $r6 = r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r6);

        $i1 = $r4.<proguard.classfile.attribute.preverification.MoreZeroFrame: int u2offsetDelta>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i1);

        virtualinvoke $r4.<proguard.classfile.attribute.preverification.MoreZeroFrame: void additionalVariablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)>($r1, $r2, $r3, $i0, r0);

        return;
    }

    public void visitSameOneFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.SameOneFrame)
    {
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.attribute.preverification.SameOneFrame $r4;
        int $i0, $i1;
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter r0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.SameOneFrame;

        $i1 = virtualinvoke $r4.<proguard.classfile.attribute.preverification.SameOneFrame: int getTag()>();

        if $i1 != 247 goto label1;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i1 = $r4.<proguard.classfile.attribute.preverification.SameOneFrame: int u2offsetDelta>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i1);

     label1:
        virtualinvoke $r4.<proguard.classfile.attribute.preverification.SameOneFrame: void stackItemAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)>($r1, $r2, $r3, $i0, r0);

        return;
    }

    public void visitSameZeroFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.SameZeroFrame)
    {
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.attribute.preverification.SameZeroFrame $r4;
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter r0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.SameZeroFrame;

        $i0 = virtualinvoke $r4.<proguard.classfile.attribute.preverification.SameZeroFrame: int getTag()>();

        if $i0 != 251 goto label1;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.preverification.SameZeroFrame: int u2offsetDelta>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

     label1:
        return;
    }
}
